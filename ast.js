/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3271557124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903954 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903953 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904033 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136837 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152004 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847200 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582830 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448401 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116841 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801807407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801807482 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364755 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2432696324 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902460333 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2902460332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345257 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345191 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345116 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344906 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344831 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344729 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344528 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121880 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121813 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936014310 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2936019784 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801800978 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582420 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582419 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582418 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582417 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582416 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582413 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582412 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582415 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2516582414 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667579332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577859 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845668 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850599 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2533359773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2550136853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849428 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849434 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2432696334 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111654 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3305111653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111650 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111647 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111644 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111622 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111627 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111639 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111594 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111598 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111589 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111588 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111578 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3305111577 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111576 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111563 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291855996 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291856003 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856001 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291856009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014333 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014329 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014328 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014327 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014326 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014319 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014317 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014311 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848327 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854679 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848516 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848514 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801806961 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448263 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3204448470 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3204448296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448283 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448290 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448287 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448285 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448282 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448281 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448280 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448264 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3204448259 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3204448279 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448278 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2080375506 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2248146948 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2181038090 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038089 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2248146962 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2248146959 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2231369732 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2986376120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986376073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986376026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375979 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375846 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375605 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375552 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375499 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375446 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936023571 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230680 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2550136836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116618 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116616 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116614 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3154116613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014305 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014304 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014306 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2936014303 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014298 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014295 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014282 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936014281 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795293 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116612 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936015294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567372 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795348 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795347 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795346 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919119 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2801795338 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795328 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795325 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795302 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795300 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795210 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845738 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845732 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845731 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845730 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2449473540 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2449473539 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845713 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845710 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577367 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2667577356 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577348 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577394 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577391 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577382 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577379 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577376 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577349 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2080374799 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2080374798 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374797 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374796 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2415919107 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2382364676 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2382364675 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2164260867 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845702 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2181038087 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2181038083 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845700 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845694 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374790 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374789 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582411 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2516582410 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582403 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2516582421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2516582409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805287 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2499805286 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805285 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805279 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364690 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2382364689 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2382364682 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805267 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2499805266 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805265 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805259 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805250 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2499805249 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805248 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805228 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2499805227 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805226 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805220 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805203 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2499805202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805201 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805195 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2415919121 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795294 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038088 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2181038084 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2164260874 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2164260868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2801795206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795209 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795208 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795207 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795291 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795288 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795285 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903944 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903943 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903946 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903945 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903940 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903942 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903941 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795264 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795263 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795260 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795259 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795258 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795252 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795243 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795241 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795235 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795226 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795225 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795224 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795218 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795211 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936017894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936017889 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936016987 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014307 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2936014308 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116626 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795212 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568569 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344514 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344538 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344510 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014301 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014151 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2936014154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014152 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2936017595 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014330 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344587 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344590 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014911 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2550136835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344793 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344790 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344779 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986373631 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345318 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345342 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230626 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3070230624 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230621 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230610 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230560 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103785172 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103786593 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103786490 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103786020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103786118 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3103786054 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103785143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070231781 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230558 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230582 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230587 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577347 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230567 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3070230572 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230627 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2113929221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230555 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230562 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230557 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230559 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986369034 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345243 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345246 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345267 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345275 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345295 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563186 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345201 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345173 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345102 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345105 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345126 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345036 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345060 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231493 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986409679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231514 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567351 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231502 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231499 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070231496 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231437 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344963 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344987 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344995 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344959 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344651 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344675 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231167 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344892 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344895 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344916 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344924 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344888 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986389396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986408772 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344715 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344739 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344747 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230551 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230550 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230549 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344711 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344817 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344841 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344849 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344813 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344796 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344465 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344462 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344452 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344784 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230536 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230538 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070231688 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986387392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230537 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230838 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230540 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230532 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969567239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969567235 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969567238 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567236 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230547 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3070230535 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230534 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230531 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121866 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121890 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121898 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121848 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121862 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121799 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121802 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121823 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121831 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121795 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121720 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121744 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121772 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121694 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2466250783 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344456 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568321 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121691 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3003121689 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344476 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345408 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801806899 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801806898 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458411 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2902458414 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458446 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458397 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458406 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458403 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2902458392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458386 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458374 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902458373 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795270 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795331 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2835349511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795308 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801805724 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795394 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2315255829 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801800932 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801800900 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801800858 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795319 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2801799127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801799197 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801799202 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919243 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919163 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2852126724 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2835349507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801802177 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801798587 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801801661 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801798942 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795079 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801798616 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795075 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903949 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903960 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903950 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795408 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795419 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795588 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795473 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2415919115 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2415919113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2080374819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810244 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2046820355 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI2046820355 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554438, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2046820355.node = NNI2046820355;
var NNI2348810244 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2348810244.node = NNI2348810244;
var NNI2332033028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2332033028.node = NNI2332033028;
NTI2332033028.base = NTI33555171;
NTI2348810244.base = NTI2332033028;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2080374819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080374819.node = NNI2080374819;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2415919113 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2415919113.node = NNI2415919113;
var NNI2415919115 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2415919115.node = NNI2415919115;
NTI2415919123.base = NTI2415919115;
NTI2801795473.base = NTI2415919123;
NTI2801795588.base = NTI2415919115;
NTI2801795419.base = NTI2415919115;
NTI2801795408.base = NTI2415919115;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2868903950 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2868903950.node = NNI2868903950;
NTI2868903950.base = NTI33555171;
NTI2868903949.base = NTI2868903950;
var NNI2868903960 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2868903949, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2868903949, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2868903949, name: "newEndPosition", sons: null}]};
NTI2868903960.node = NNI2868903960;
NTI2868903960.base = NTI33555171;
var NNI2801795075 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2801795075, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2801795075, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2801795075, name: "Nested", len: 0, sons: null}}};
NTI2801795075.node = NNI2801795075;
NTI2801795079.base = NTI2415919115;
NTI2801795080.base = NTI2801795076;
var NNI2801795078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2801795079, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2801795075, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2415919115, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2415919113, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2801795080, name: "children", sons: null}]]}]};
NTI2801795078.node = NNI2801795078;
NTI2801795076.base = NTI2801795078;
NTI2801798616.base = NTI2801795076;
NTI2801798942.base = NTI2415919115;
NTI2801801661.base = NTI2415919115;
NTI2801798587.base = NTI2415919115;
NTI2801802177.base = NTI2415919115;
var NNI2852126724 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2852126724.node = NNI2852126724;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2852126724.base = NTI33555181;
NTI2852126723.base = NTI2852126724;
var NNI2835349507 = {kind: 1, offset: "impl", len: 0, typ: NTI2852126723, name: "impl", sons: null};
NTI2835349507.node = NNI2835349507;
NTI2415919163.base = NTI2415919115;
NTI2415919243.base = NTI2415919115;
NTI2415919234.base = NTI2415919115;
NTI2801799197.base = NTI2415919115;
var NNI2801799202 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2801799197, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801799202.node = NNI2801799202;
NTI2801799127.base = NTI2415919115;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2801795319.base = NTI2415919115;
var NNI2801800858 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2801800858.node = NNI2801800858;
var NNI2801800900 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2801800900.node = NNI2801800900;
var NNI2801800932 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2415919113, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2801800932.node = NNI2801800932;
var NNI2315255829 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2315255829.node = NNI2315255829;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2801795394.base = NTI2415919115;
NTI2801805724.base = NTI2415919115;
var NNI2801795308 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2835349507, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801795308.node = NNI2801795308;
var NNI2835349511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2835349511.node = NNI2835349511;
var NNI2801795331 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795319, name: "Field2", sons: null}]};
NTI2801795331.node = NNI2801795331;
var NNI2902458392 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2902458377, name: "Field2", sons: null}]};
NTI2902458392.node = NNI2902458392;
NTI2902458389.base = NTI2902458392;
var NNI2902458386 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2902458389, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2902458386.node = NNI2902458386;
NTI2902458397.base = NTI33554435;
var NNI2902458409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2902458397, name: "Field2", sons: null}]};
NTI2902458409.node = NNI2902458409;
NTI2902458406.base = NTI2902458409;
var NNI2902458403 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2902458406, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2902458403.node = NNI2902458403;
var NNI2902458374 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2902458386, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2902458403, name: "onRequestSaveIndex", sons: null}]};
NTI2902458374.node = NNI2902458374;
NTI2902458374.base = NTI33555171;
NTI2902458373.base = NTI2902458374;
var NNI2801795270 = {kind: 1, offset: "val", len: 0, typ: NTI2902458373, name: "val", sons: null};
NTI2801795270.node = NNI2801795270;
var NNI2902458411 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2902458411, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2902458411, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2902458411, name: "Function", len: 0, sons: null}}};
NTI2902458411.node = NNI2902458411;
var NNI2902458414 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2415919113, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2902458411, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2902458414.node = NNI2902458414;
NTI2902458446.base = NTI2902458414;
var NNI2801806899 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2801806899.node = NNI2801806899;
var NNI2801806898 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801806899, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919113, name: "Field1", sons: null}]};
NTI2801806898.node = NNI2801806898;
var NNI3003121689 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3003121689.node = NNI3003121689;
var NNI3003121692 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121691, name: "Field1", sons: null}]};
NTI3003121692.node = NNI3003121692;
NTI2986344476.base = NTI3003121692;
NTI2986345408.base = NTI2986344476;
NTI2969568321.base = NTI33554435;
var NNI2986344451 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI2986344451.node = NNI2986344451;
NTI2986344456.base = NTI2986344451;
var NNI2986344468 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344456, name: "Field2", sons: null}]};
NTI2986344468.node = NNI2986344468;
var NNI2466250783 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2466250783.node = NNI2466250783;
var NNI3003121694 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121694, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121694, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121694, name: "Green", len: 0, sons: null}}};
NTI3003121694.node = NNI3003121694;
var NNI3003121716 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI3003121716.node = NNI3003121716;
var NNI3003121772 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}]};
NTI3003121772.node = NNI3003121772;
NTI3003121720.base = NTI3003121723;
var NNI3003121723 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121720, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121720, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121716, name: "value", sons: null}]};
NTI3003121723.node = NNI3003121723;
NTI3003121744.base = NTI3003121723;
var NNI3003121752 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121744, name: "Field2", sons: null}]};
NTI3003121752.node = NNI3003121752;
NTI3003121688.base = NTI33554439;
var NNI3003121795 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3003121688, name: "val", sons: null}]};
NTI3003121795.node = NNI3003121795;
NTI3003121799.base = NTI3003121802;
var NNI3003121802 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121799, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121799, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121795, name: "value", sons: null}]};
NTI3003121802.node = NNI3003121802;
NTI3003121823.base = NTI3003121802;
var NNI3003121831 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121823, name: "Field2", sons: null}]};
NTI3003121831.node = NNI3003121831;
NTI3003121848.base = NTI3003121692;
var NNI3003121862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3003121848, name: "val", sons: null}]};
NTI3003121862.node = NNI3003121862;
NTI3003121866.base = NTI3003121869;
var NNI3003121869 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121866, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121866, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121862, name: "value", sons: null}]};
NTI3003121869.node = NNI3003121869;
NTI3003121890.base = NTI3003121869;
var NNI3003121898 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121890, name: "Field2", sons: null}]};
NTI3003121898.node = NNI3003121898;
var NNI3070230531 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230531, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230531, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230531, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230531, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230531, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3070230531, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3070230531, name: "tType", len: 0, sons: null}}};
NTI3070230531.node = NNI3070230531;
var NNI3070230534 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230534, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230534, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230534, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230534, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230534, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3070230534, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3070230534, name: "vkType", len: 0, sons: null}}};
NTI3070230534.node = NNI3070230534;
var NNI2969567235 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2969567235, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969567235, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969567235, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969567235, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969567235, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2969567235, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2969567235, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2969567235, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2969567235, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2969567235, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2969567235, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2969567235, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2969567235, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2969567235, name: "Assignment", len: 0, sons: null}}};
NTI2969567235.node = NNI2969567235;
NTI2969567239.base = NTI2969567236;
var NNI2969567238 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2969567236, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2046820355, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2969567235, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2969567239, name: "children", sons: null}]};
NTI2969567238.node = NNI2969567238;
NTI2969567236.base = NTI2969567238;
NTI3070230541.base = NTI3070230532;
var NNI3070230540 = {kind: 3, offset: "kind", len: 7, typ: NTI3070230531, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3070230532, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3070230541, name: "paramTypes", sons: null}]}]]};
NTI3070230540.node = NNI3070230540;
NTI3070230532.base = NTI3070230540;
var NNI3070230535 = {kind: 3, offset: "kind", len: 7, typ: NTI3070230534, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3070230547, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3070230532, name: "typ", sons: null}]]};
NTI3070230535.node = NNI3070230535;
NTI3070230838.base = NTI3070230532;
var NNI3070230537 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230537, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230537, name: "skBuiltin", len: 0, sons: null}}};
NTI3070230537.node = NNI3070230537;
var NNI2986387392 = {kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null};
NTI2986387392.node = NNI2986387392;
var NNI3070230536 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230536, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230536, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230536, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230536, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230536, name: "Scope", len: 0, sons: null}}};
NTI3070230536.node = NNI3070230536;
var NNI3070230546 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3070230537, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3070230532, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3070230535, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3070230536, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3070230546.node = NNI3070230546;
NTI3070230538.base = NTI3070230546;
var NNI3070231688 = {kind: 1, offset: "val", len: 0, typ: NTI3070230538, name: "val", sons: null};
NTI3070231688.node = NNI3070231688;
NTI2986344784.base = NTI2046820355;
NTI2986344465.base = NTI2986344468;
var NNI2986344462 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344465, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344462.node = NNI2986344462;
var NNI2986344452 = {kind: 1, offset: "queries", len: 0, typ: NTI2986344462, name: "queries", sons: null};
NTI2986344452.node = NNI2986344452;
var NNI2986344796 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344784, name: "Field2", sons: null}]};
NTI2986344796.node = NNI2986344796;
var NNI2986344813 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null}]};
NTI2986344813.node = NNI2986344813;
var NNI2986344869 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2986344869.node = NNI2986344869;
NTI2986344817.base = NTI2986344820;
var NNI2986344820 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344817, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344817, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344813, name: "value", sons: null}]};
NTI2986344820.node = NNI2986344820;
NTI2986344841.base = NTI2986344820;
var NNI2986344849 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344841, name: "Field2", sons: null}]};
NTI2986344849.node = NNI2986344849;
NTI3070230983.base = NTI33554439;
NTI3003121997.base = NTI33554439;
NTI3070230977.base = NTI33554439;
NTI3070230551.base = NTI3070230535;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI3070230550 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI3070230551, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1191183280, name: "maxLoopIterations", sons: null}]};
NTI3070230550.node = NNI3070230550;
NTI3070230549.base = NTI3070230550;
var NNI2986344711 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230549, name: "val", sons: null}]};
NTI2986344711.node = NNI2986344711;
var NNI2986344566 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}]};
NTI2986344566.node = NNI2986344566;
NTI2986344715.base = NTI2986344718;
var NNI2986344718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344715, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344715, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344711, name: "value", sons: null}]};
NTI2986344718.node = NNI2986344718;
NTI2986344739.base = NTI2986344718;
var NNI2986344747 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344739, name: "Field2", sons: null}]};
NTI2986344747.node = NNI2986344747;
NTI2986408772.base = NTI3070230535;
var NNI2986389396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2986389396.node = NNI2986389396;
var NNI2986344888 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986344888.node = NNI2986344888;
NTI2986344892.base = NTI2986344895;
var NNI2986344895 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344892, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344892, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344888, name: "value", sons: null}]};
NTI2986344895.node = NNI2986344895;
NTI2986344916.base = NTI2986344895;
var NNI2986344924 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344916, name: "Field2", sons: null}]};
NTI2986344924.node = NNI2986344924;
NTI2013268507.base = NTI33554439;
NTI3070231167.base = NTI33554439;
var NNI2986344647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230538, name: "val", sons: null}]};
NTI2986344647.node = NNI2986344647;
NTI2986344651.base = NTI2986344654;
var NNI2986344654 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344651, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344651, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344647, name: "value", sons: null}]};
NTI2986344654.node = NNI2986344654;
NTI2986344675.base = NTI2986344654;
var NNI2986344683 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344675, name: "Field2", sons: null}]};
NTI2986344683.node = NNI2986344683;
var NNI2986344959 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070231688, name: "val", sons: null}]};
NTI2986344959.node = NNI2986344959;
NTI2986344963.base = NTI2986344966;
var NNI2986344966 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344963, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344963, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344959, name: "value", sons: null}]};
NTI2986344966.node = NNI2986344966;
NTI2986344987.base = NTI2986344966;
var NNI2986344995 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344987, name: "Field2", sons: null}]};
NTI2986344995.node = NNI2986344995;
NTI3070231437.base = NTI33554439;
var NNI3070231502 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230538, name: "Field2", sons: null}]};
NTI3070231502.node = NNI3070231502;
NTI3070231499.base = NTI3070231502;
var NNI3070231496 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070231499, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070231496.node = NNI3070231496;
var NNI2969567351 = {kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null};
NTI2969567351.node = NNI2969567351;
var NNI3070231514 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI3070231514.node = NNI3070231514;
var NNI2986409679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986409679.node = NNI2986409679;
NTI3070231493.base = NTI3070231496;
var NNI2986345032 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070231493, name: "val", sons: null}]};
NTI2986345032.node = NNI2986345032;
NTI2986345036.base = NTI2986345039;
var NNI2986345039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345036, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345036, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345032, name: "value", sons: null}]};
NTI2986345039.node = NNI2986345039;
NTI2986345060.base = NTI2986345039;
var NNI2986345068 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345060, name: "Field2", sons: null}]};
NTI2986345068.node = NNI2986345068;
var NNI2986345098 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230538, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null}]};
NTI2986345098.node = NNI2986345098;
var NNI2986345154 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986345154.node = NNI2986345154;
NTI2986345102.base = NTI2986345105;
var NNI2986345105 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345102, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345102, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345098, name: "value", sons: null}]};
NTI2986345105.node = NNI2986345105;
NTI2986345126.base = NTI2986345105;
var NNI2986345134 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345126, name: "Field2", sons: null}]};
NTI2986345134.node = NNI2986345134;
var NNI2986345173 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230538, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986345173.node = NNI2986345173;
NTI2986345177.base = NTI2986345180;
var NNI2986345180 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345177, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345177, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345173, name: "value", sons: null}]};
NTI2986345180.node = NNI2986345180;
NTI2986345201.base = NTI2986345180;
var NNI2986345209 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345201, name: "Field2", sons: null}]};
NTI2986345209.node = NNI2986345209;
NTI3120563186.base = NTI3070230535;
var NNI2986345239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230549, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986345239.node = NNI2986345239;
var NNI2986345295 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}]};
NTI2986345295.node = NNI2986345295;
NTI2986345243.base = NTI2986345246;
var NNI2986345246 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345243, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345243, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345239, name: "value", sons: null}]};
NTI2986345246.node = NNI2986345246;
NTI2986345267.base = NTI2986345246;
var NNI2986345275 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345267, name: "Field2", sons: null}]};
NTI2986345275.node = NNI2986345275;
NTI2986369034.base = NTI33554439;
var NNI3070230555 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230555, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230555, name: "Vertical", len: 0, sons: null}}};
NTI3070230555.node = NNI3070230555;
var NNI2113929221 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2113929221.node = NNI2113929221;
NTI3070230563.base = NTI3070230557;
NTI3070230564.base = NTI33554449;
var NNI2667577347 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2667577347, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2667577347, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2667577347, name: "Bold", len: 0, sons: null}}};
NTI2667577347.node = NNI2667577347;
NTI3070230567.base = NTI2667577347;
var NNI3070230572 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230567, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3070230572.node = NNI3070230572;
NTI3070230582.base = NTI33554449;
var NNI3070230587 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230582, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3070230587.node = NNI3070230587;
var NNI3070230562 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3070230557, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3070230555, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3070230627, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3070230563, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3070230564, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3070230572, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3070230587, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI3070230562.node = NNI3070230562;
NTI3070230557.base = NTI3070230562;
var NNI3070230558 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3070230557, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3070230558.node = NNI3070230558;
var NNI3070230608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230558, name: "Field2", sons: null}]};
NTI3070230608.node = NNI3070230608;
NTI3070230605.base = NTI3070230608;
var NNI3070230602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230602.node = NNI3070230602;
var NNI3070230559 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3070230557, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3070230602, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}]};
NTI3070230559.node = NNI3070230559;
var NNI2130706720 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2130706720.node = NNI2130706720;
NTI3070231781.base = NTI3070230557;
NTI3103785143.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3103786054.base = NTI33554449;
NTI3103786118.base = NTI2667577347;
NTI3103786020.base = NTI33554449;
var NNI3103786490 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3103786020, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230572, name: "Field1", sons: null}]};
NTI3103786490.node = NNI3103786490;
var NNI3103786593 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3103786020, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230572, name: "Field1", sons: null}]};
NTI3103786593.node = NNI3103786593;
NTI3103785172.base = NTI33554449;
var NNI3070230624 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230557, name: "Field2", sons: null}]};
NTI3070230624.node = NNI3070230624;
NTI3070230621.base = NTI3070230624;
var NNI3070230618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230621, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230618.node = NNI3070230618;
var NNI3070230610 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2046820355, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI3070230618, name: "replacements", sons: null}, 
{kind: 1, offset: "measureText", len: 0, typ: NTI3070230626, name: "measureText", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI3070230610.node = NNI3070230610;
NTI3070230560.base = NTI3070230610;
var NNI2986345314 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230560, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230559, name: "val", sons: null}]};
NTI2986345314.node = NNI2986345314;
var NNI2986345370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}]};
NTI2986345370.node = NNI2986345370;
NTI2986345318.base = NTI2986345321;
var NNI2986345321 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345318, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345318, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345314, name: "value", sons: null}]};
NTI2986345321.node = NNI2986345321;
NTI2986345342.base = NTI2986345321;
var NNI2986345350 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345342, name: "Field2", sons: null}]};
NTI2986345350.node = NNI2986345350;
NTI2986373631.base = NTI33554439;
var NNI2986344779 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344452, name: "Field2", sons: null}]};
NTI2986344779.node = NNI2986344779;
NTI2986344776.base = NTI2986344779;
var NNI2986344773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344776, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344773.node = NNI2986344773;
NTI2986344793.base = NTI2986344796;
var NNI2986344790 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344793, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344790.node = NNI2986344790;
var NNI2550136835 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2550136835.node = NNI2550136835;
NTI2936014911.base = NTI2969567236;
var NNI2986344583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230560, name: "val", sons: null}]};
NTI2986344583.node = NNI2986344583;
NTI2986344587.base = NTI2986344590;
var NNI2986344590 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344587, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344587, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344583, name: "value", sons: null}]};
NTI2986344590.node = NNI2986344590;
NTI2986344611.base = NTI2986344590;
var NNI2986344619 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344611, name: "Field2", sons: null}]};
NTI2986344619.node = NNI2986344619;
var NNI2936014330 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230559, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706720, name: "Field1", sons: null}]};
NTI2936014330.node = NNI2936014330;
var NNI2936014151 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2936014151, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2936014151, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2936014151, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2936014151, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2936014151, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2936014151.node = NNI2936014151;
var NNI2936014154 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2936014151, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2969567236, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2936014154.node = NNI2936014154;
NTI2936014152.base = NTI2936014154;
NTI2936017595.base = NTI2936014152;
var NNI2936014301 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820355, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2969567236, name: "Field2", sons: null}]};
NTI2936014301.node = NNI2936014301;
var NNI2986344510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null}]};
NTI2986344510.node = NNI2986344510;
NTI2986344514.base = NTI2986344517;
var NNI2986344517 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344514, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344514, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344510, name: "value", sons: null}]};
NTI2986344517.node = NNI2986344517;
NTI2986344538.base = NTI2986344517;
var NNI2986344546 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344538, name: "Field2", sons: null}]};
NTI2986344546.node = NNI2986344546;
var NNI2969568569 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2969568569.node = NNI2969568569;
NTI2801795212.base = NTI33554449;
var NNI2936014307 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2936014307, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2936014307, name: "AstCompletion", len: 0, sons: null}}};
NTI2936014307.node = NNI2936014307;
var NNI2936014308 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2936014307, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2969567235, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2936014308.node = NNI2936014308;
NTI3154116626.base = NTI2936014308;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2936016987.base = NTI2936014308;
var NNI2936017889 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2936017889.node = NNI2936017889;
var NNI2936017894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2936017889, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2936017894.node = NNI2936017894;
var NNI2801795225 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795226, name: "Field1", sons: null}]};
NTI2801795225.node = NNI2801795225;
NTI2801795224.base = NTI2801795225;
var NNI2801795218 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795224, name: "handlers", sons: null};
NTI2801795218.node = NNI2801795218;
var NNI2801795242 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795243, name: "Field1", sons: null}]};
NTI2801795242.node = NNI2801795242;
NTI2801795241.base = NTI2801795242;
var NNI2801795235 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795241, name: "handlers", sons: null};
NTI2801795235.node = NNI2801795235;
var NNI2801795259 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795260, name: "Field1", sons: null}]};
NTI2801795259.node = NNI2801795259;
NTI2801795258.base = NTI2801795259;
var NNI2801795252 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795258, name: "handlers", sons: null};
NTI2801795252.node = NNI2801795252;
NTI2801795263.base = NTI2801795076;
NTI2801795264.base = NTI2801795076;
var NNI2868903942 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903942.node = NNI2868903942;
NTI2868903942.base = NTI33555171;
NTI2868903941.base = NTI2868903942;
var NNI2868903940 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903940.node = NNI2868903940;
NTI2868903939.base = NTI2868903940;
var NNI2868903946 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903946.node = NNI2868903946;
NTI2868903946.base = NTI33555171;
NTI2868903945.base = NTI2868903946;
var NNI2868903944 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903944.node = NNI2868903944;
NTI2868903944.base = NTI33555171;
NTI2868903943.base = NTI2868903944;
var NNI2801795206 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}]};
NTI2801795206.node = NNI2801795206;
NTI2801795209.base = NTI2801795206;
var NNI2801795208 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2801795209, name: "parts", sons: null}]};
NTI2801795208.node = NNI2801795208;
NTI2801795207.base = NTI2801795208;
var NNI2801795291 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795207, name: "Field2", sons: null}]};
NTI2801795291.node = NNI2801795291;
NTI2801795288.base = NTI2801795291;
var NNI2801795285 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2801795288, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2801795285.node = NNI2801795285;
var NNI2801795211 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2801795212, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2801795218, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2801795235, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2801795252, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2801795263, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2801795264, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2868903941, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2868903939, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2868903945, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2868903943, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2801795270, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2801795285, name: "styledTextCache", sons: null}]};
NTI2801795211.node = NNI2801795211;
var NNI2181038088 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2046820355, name: "id", sons: null}]};
NTI2181038088.node = NNI2181038088;
NTI2181038088.base = NTI33555171;
NTI2181038084.base = NTI2181038088;
var NNI2164260874 = {kind: 1, offset: "val", len: 0, typ: NTI2181038084, name: "val", sons: null};
NTI2164260874.node = NNI2164260874;
var NNI2164260868 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2164260874, name: "workspace", sons: null}]};
NTI2164260868.node = NNI2164260868;
NTI2164260868.base = NTI33555171;
NTI2801795211.base = NTI2164260868;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2415919121 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2415919121, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2415919121, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2415919121, name: "browser", len: 0, sons: null}}};
NTI2415919121.node = NNI2415919121;
var NNI2499805202 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2499805203, name: "Field1", sons: null}]};
NTI2499805202.node = NNI2499805202;
NTI2499805201.base = NTI2499805202;
var NNI2499805195 = {kind: 1, offset: "handlers", len: 0, typ: NTI2499805201, name: "handlers", sons: null};
NTI2499805195.node = NNI2499805195;
var NNI2499805227 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2499805228, name: "Field1", sons: null}]};
NTI2499805227.node = NNI2499805227;
NTI2499805226.base = NTI2499805227;
var NNI2499805220 = {kind: 1, offset: "handlers", len: 0, typ: NTI2499805226, name: "handlers", sons: null};
NTI2499805220.node = NNI2499805220;
var NNI2499805249 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2499805250, name: "Field1", sons: null}]};
NTI2499805249.node = NNI2499805249;
NTI2499805248.base = NTI2499805249;
var NNI2499805242 = {kind: 1, offset: "handlers", len: 0, typ: NTI2499805248, name: "handlers", sons: null};
NTI2499805242.node = NNI2499805242;
var NNI2499805266 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2499805267, name: "Field1", sons: null}]};
NTI2499805266.node = NNI2499805266;
NTI2499805265.base = NTI2499805266;
var NNI2499805259 = {kind: 1, offset: "handlers", len: 0, typ: NTI2499805265, name: "handlers", sons: null};
NTI2499805259.node = NNI2499805259;
var NNI2382364689 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2382364690, name: "Field1", sons: null}]};
NTI2382364689.node = NNI2382364689;
NTI2382364688.base = NTI2382364689;
var NNI2382364682 = {kind: 1, offset: "handlers", len: 0, typ: NTI2382364688, name: "handlers", sons: null};
NTI2382364682.node = NNI2382364682;
var NNI2499805286 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2499805287, name: "Field1", sons: null}]};
NTI2499805286.node = NNI2499805286;
NTI2499805285.base = NTI2499805286;
var NNI2499805279 = {kind: 1, offset: "handlers", len: 0, typ: NTI2499805285, name: "handlers", sons: null};
NTI2499805279.node = NNI2499805279;
var NNI2516582409 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2516582421, name: "getTextBounds", sons: null};
NTI2516582409.node = NNI2516582409;
var NNI2499805188 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2499805195, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2499805195, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2499805195, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2499805220, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2499805220, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2499805242, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2499805259, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2382364682, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2499805279, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2516582409, name: "layoutOptions", sons: null}]};
NTI2499805188.node = NNI2499805188;
NTI2499805188.base = NTI33555171;
NTI2499805187.base = NTI2499805188;
var NNI2516582411 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2130706720, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706720, name: "Field1", sons: null}]};
NTI2516582411.node = NNI2516582411;
var NNI2516582410 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2516582411, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2130706720, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2550136835, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2550136835, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2113929221, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2516582410.node = NNI2516582410;
NTI2516582410.base = NTI33555171;
NTI2516582403.base = NTI2516582410;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2080374790 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2080374790.node = NNI2080374790;
NTI2080374789.base = NTI2080374790;
var NNI1291845685 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2080374789, name: "Field2", sons: null}]};
NTI1291845685.node = NNI1291845685;
NTI1291845682.base = NTI1291845685;
var NNI1291845679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845679.node = NNI1291845679;
var NNI1291845700 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845700.node = NNI1291845700;
NTI1291845697.base = NTI1291845700;
var NNI1291845694 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845697, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845694.node = NNI1291845694;
NTI1174405131.base = NTI1174405133;
NTI2181038087.base = NTI2181038084;
var NNI2181038086 = {kind: 1, offset: "folders", len: 0, typ: NTI2181038087, name: "folders", sons: null};
NTI2181038086.node = NNI2181038086;
NTI2181038083.base = NTI2181038086;
var NNI2768240644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2768240644.node = NNI2768240644;
NTI2768240644.base = NTI33555171;
NTI2768240643.base = NTI2768240644;
NTI2164260867.base = NTI2164260868;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2080374797 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2080374789, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2080374798, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2080374799, name: "handleInput", sons: null}]};
NTI2080374797.node = NNI2080374797;
NTI2080374796.base = NTI2080374797;
var NNI2382364676 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2415919107, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2382364682, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2382364676.node = NNI2382364676;
NTI2382364676.base = NTI33555171;
NTI2382364675.base = NTI2382364676;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2164260867, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2382364675, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845702.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2667577382 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2550136835, name: "Field2", sons: null}]};
NTI2667577382.node = NNI2667577382;
NTI2667577379.base = NTI2667577382;
var NNI2667577376 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2667577379, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2667577376.node = NNI2667577376;
var NNI2667577356 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2550136835, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2667577356.node = NNI2667577356;
NTI2667577367.base = NTI2667577347;
var NNI2667577348 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2667577356, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2667577356, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2667577367, name: "fontStyle", sons: null}]};
NTI2667577348.node = NNI2667577348;
var NNI2667577397 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2667577348, name: "Field2", sons: null}]};
NTI2667577397.node = NNI2667577397;
NTI2667577394.base = NTI2667577397;
var NNI2667577391 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2667577394, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2667577391.node = NNI2667577391;
var NNI2667577368 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2667577376, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2667577391, name: "tokenColors", sons: null}]};
NTI2667577368.node = NNI2667577368;
NTI2667577349.base = NTI2667577368;
var NNI1291845716 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2415919107, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2382364675, name: "Field2", sons: null}]};
NTI1291845716.node = NNI1291845716;
NTI1291845713.base = NTI1291845716;
var NNI1291845710 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845713, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845710.node = NNI1291845710;
var NNI2449473540 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2415919107, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2382364682, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2449473540.node = NNI2449473540;
NTI2449473540.base = NTI33555171;
NTI2449473539.base = NTI2449473540;
NTI1291845718.base = NTI2449473539;
var NNI1291845731 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845732, name: "Field1", sons: null}]};
NTI1291845731.node = NNI1291845731;
NTI1291845730.base = NTI1291845731;
var NNI1291845724 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845730, name: "handlers", sons: null};
NTI1291845724.node = NNI1291845724;
NTI1291845738.base = NTI2382364675;
var NNI1291845670 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2415919121, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2499805187, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2466250783, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2466250783, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2466250783, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2516582403, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845679, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845694, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2181038083, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2768240643, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845702, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2667577349, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845710, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845718, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845724, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845724, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2382364675, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2080374796, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845738, name: "editor_defaults", sons: null}]};
NTI1291845670.node = NNI1291845670;
NTI1291845669.base = NTI1291845670;
NTI2801795210.base = NTI2801795211;
NTI2801795302.base = NTI2415919123;
var NNI2801795300 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2801795302, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2801795300.node = NNI2801795300;
NTI2801795328.base = NTI2801795331;
var NNI2801795325 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2801795328, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2801795325.node = NNI2801795325;
var NNI2415919119 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2415919119, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2415919119, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2415919119, name: "relative", len: 0, sons: null}}};
NTI2415919119.node = NNI2415919119;
var NNI2801795338 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2415919119, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801795338.node = NNI2801795338;
NTI2801795346.base = NTI2801795207;
NTI2801795347.base = NTI2902458414;
var NNI2801795349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2801795349.node = NNI2801795349;
NTI2801795348.base = NTI2801795349;
var NNI2801795294 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2801795210, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2415919123, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2801795300, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2801795308, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2801795325, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2080374796, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2801795338, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2801795346, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2801795347, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2801795348, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2801795294.node = NNI2801795294;
NTI2801795294.base = NTI2382364676;
var NNI2969567372 = {kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null};
NTI2969567372.node = NNI2969567372;
var NNI2936015294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2936015294.node = NNI2936015294;
NTI2801795293.base = NTI2801795294;
NTI2936014298.base = NTI2936014301;
var NNI2936014295 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2936014298, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2936014295.node = NNI2936014295;
NTI2936014303.base = NTI2936014306;
NTI2936014304.base = NTI2936014152;
NTI2936014305.base = NTI2936014152;
var NNI2936014282 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3070231496, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2969567236, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2936014295, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2936014303, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2936014304, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2936014305, name: "redoOps", sons: null}]};
NTI2936014282.node = NNI2936014282;
NTI2936014282.base = NTI2164260868;
NTI2936014281.base = NTI2936014282;
NTI3154116613.base = NTI2936014308;
var NNI3154116616 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI3154116616.node = NNI3154116616;
NTI3154116615.base = NTI3154116616;
var NNI3154116612 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795293, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2936014281, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3154116613, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3154116614, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3154116615, name: "lastItems", sons: null}]};
NTI3154116612.node = NNI3154116612;
NTI3154116612.base = NTI2449473540;
NTI1979711564.base = NTI33554449;
NTI3154116618.base = NTI2936014308;
var NNI2550136836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2550136836.node = NNI2550136836;
var NNI3070230751 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230557, name: "Field1", sons: null}]};
NTI3070230751.node = NNI3070230751;
var NNI3070230680 = {kind: 1, offset: "val", len: 0, typ: NTI3070230557, name: "val", sons: null};
NTI3070230680.node = NNI3070230680;
var NNI2936023571 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230557, name: "Field1", sons: null}]};
NTI2936023571.node = NNI2936023571;
var NNI2986375446 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2986375446.node = NNI2986375446;
var NNI2986375499 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}]};
NTI2986375499.node = NNI2986375499;
var NNI2986375552 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986375552.node = NNI2986375552;
var NNI2986375605 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}]};
NTI2986375605.node = NNI2986375605;
var NNI2986375658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230532, name: "Field1", sons: null}]};
NTI2986375658.node = NNI2986375658;
var NNI2986375705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986375705.node = NNI2986375705;
var NNI2986375752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070231688, name: "Field1", sons: null}]};
NTI2986375752.node = NNI2986375752;
var NNI2986375846 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070231493, name: "Field1", sons: null}]};
NTI2986375846.node = NNI2986375846;
var NNI2986375979 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230538, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230532, name: "Field1", sons: null}]};
NTI2986375979.node = NNI2986375979;
var NNI2986376026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230538, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986376026.node = NNI2986376026;
var NNI2986376073 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230549, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986376073.node = NNI2986376073;
var NNI2986376120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230560, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230559, name: "Field1", sons: null}]};
NTI2986376120.node = NNI2986376120;
var NNI2231369732 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2231369732.node = NNI2231369732;
NTI2231369732.base = NTI2181038088;
NTI2181038089.base = NTI33554449;
NTI2181038090.base = NTI33554449;
var NNI2181038085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2181038089, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2181038090, name: "folders", sons: null}]};
NTI2181038085.node = NNI2181038085;
var NNI2248146962 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2181038085, name: "Field2", sons: null}]};
NTI2248146962.node = NNI2248146962;
NTI2248146959.base = NTI2248146962;
var NNI2248146956 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2248146959, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2248146956.node = NNI2248146956;
var NNI2365587460 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2248146956, name: "cachedDirectoryListings", sons: null}]};
NTI2365587460.node = NNI2365587460;
NTI2365587460.base = NTI2181038088;
var NNI2248146948 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2248146956, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2248146948.node = NNI2248146948;
NTI2248146948.base = NTI2181038088;
var NNI1291845663 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845663, name: "Local", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845663, name: "AbsytreeServer", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845663, name: "Github", len: 0, sons: null}}};
NTI1291845663.node = NNI1291845663;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2080375506 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080375506.node = NNI2080375506;
var NNI3204448264 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3204448264.node = NNI3204448264;
NTI3204448264.base = NTI33555171;
NTI3204448259.base = NTI3204448264;
NTI3204448279.base = NTI3204448259;
var NNI3204448284 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI3204448284.node = NNI3204448284;
NTI3204448283.base = NTI3204448284;
var NNI3204448278 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795293, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3204448279, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3204448280, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3204448281, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3204448282, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3204448285, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3204448287, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3204448290, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3204448283, name: "lastItems", sons: null}]};
NTI3204448278.node = NNI3204448278;
NTI3204448278.base = NTI2449473540;
NTI3204448296.base = NTI3204448259;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
NTI3204448263.base = NTI3204448278;
var NNI3204448470 = {kind: 1, offset: "val", len: 0, typ: NTI3204448263, name: "val", sons: null};
NTI3204448470.node = NNI3204448470;
var NNI1291848459 = {kind: 1, offset: "val", len: 0, typ: NTI2449473539, name: "val", sons: null};
NTI1291848459.node = NNI1291848459;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI2801806961 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2801806961.node = NNI2801806961;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848514 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848514.node = NNI1291848514;
NTI1291848514.base = NTI3204448264;
var NNI1291848516 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI2164260874, name: "workspaceFolder", sons: null}]};
NTI1291848516.node = NNI1291848516;
NTI1291848516.base = NTI3204448264;
NTI1291854679.base = NTI2415919107;
var NNI1291848327 = {kind: 1, offset: "val", len: 0, typ: NTI2382364675, name: "val", sons: null};
NTI1291848327.node = NNI1291848327;
NTI2936014319.base = NTI2969567236;
var NNI2936014317 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2936014319, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2936014317.node = NNI2936014317;
NTI2936014326.base = NTI2936014308;
var NNI2936014328 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2936014328.node = NNI2936014328;
NTI2936014327.base = NTI2936014328;
NTI2936014329.base = NTI2936014330;
var NNI2936014331 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014331.node = NNI2936014331;
var NNI2936014332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014332.node = NNI2936014332;
var NNI2936014333 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014333.node = NNI2936014333;
var NNI2936014334 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014334.node = NNI2936014334;
var NNI2936014311 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845669, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2936014281, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2969567236, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2936014317, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2936014317, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2969567351, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2046820355, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2969567236, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795293, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2801795210, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2080374796, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2936014326, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2936014327, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2936014329, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2936014331, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2936014332, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2936014333, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2936014334, name: "lastCommand", sons: null}]};
NTI2936014311.node = NNI2936014311;
NTI2936014311.base = NTI2382364676;
var NNI1291856002 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856002.node = NNI1291856002;
var NNI1291856003 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291856003.node = NNI1291856003;
var NNI1291856001 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291856002, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291856003, name: "Field1", sons: null}]};
NTI1291856001.node = NNI1291856001;
NTI1291856009.base = NTI1291856001;
NTI1291855996.base = NTI2415919115;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3305111564.base = NTI2113929221;
var NNI3305111577 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2046820355, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3305111578, name: "Field1", sons: null}]};
NTI3305111577.node = NNI3305111577;
NTI3305111576.base = NTI3305111577;
var NNI3305111570 = {kind: 1, offset: "handlers", len: 0, typ: NTI3305111576, name: "handlers", sons: null};
NTI3305111570.node = NNI3305111570;
var NNI3305111594 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3305111594.node = NNI3305111594;
var NNI3305111601 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3305111598, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3305111598, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3305111594, name: "value", sons: null}]};
NTI3305111601.node = NNI3305111601;
NTI3305111598.base = NTI3305111601;
var NNI3305111612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3305111598, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3305111598, name: "tail", sons: null}]};
NTI3305111612.node = NNI3305111612;
NTI3305111622.base = NTI3305111601;
var NNI3305111630 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3305111622, name: "Field2", sons: null}]};
NTI3305111630.node = NNI3305111630;
NTI3305111627.base = NTI3305111630;
var NNI3305111639 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3305111627, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3305111639.node = NNI3305111639;
var NNI3305111650 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3305111650.node = NNI3305111650;
NTI3305111647.base = NTI3305111650;
var NNI3305111644 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3305111647, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3305111644.node = NNI3305111644;
var NNI3305111589 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3305111612, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3305111639, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3305111644, name: "removedKeys", sons: null}]};
NTI3305111589.node = NNI3305111589;
NTI3305111588.base = NTI3305111589;
NTI3305111653.base = NTI3305111654;
var NNI3305111563 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3305111564, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3305111570, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3305111588, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3305111653, name: "domUpdates", sons: null}]};
NTI3305111563.node = NNI3305111563;
NTI3305111563.base = NTI2499805188;
NTI2432696334.base = NTI2080374796;
NTI1291849428.base = NTI2382364676;
NTI1291849434.base = NTI1291849428;
var NNI2550136853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2550136853.node = NNI2550136853;
NTI2550136853.base = NTI134217746;
var NNI2533359773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2533359773.node = NNI2533359773;
var NNI1291850599 = {kind: 1, offset: "val", len: 0, typ: NTI1291845669, name: "val", sons: null};
NTI1291850599.node = NNI1291850599;
NTI1627390088.base = NTI1627389956;
var NNI1291845664 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI1291845663, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI33554449, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "settings", len: 0, typ: NTI1627389956, name: "settings", sons: null}]};
NTI1291845664.node = NNI1291845664;
NTI1291845667.base = NTI1291845664;
var NNI1291845662 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}, 
{kind: 1, offset: "workspaceId", len: 0, typ: NTI33554449, name: "workspaceId", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845668.base = NTI1291845662;
var NNI1291845666 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "workspaceFolders", len: 0, typ: NTI1291845667, name: "workspaceFolders", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845668, name: "openEditors", sons: null}]};
NTI1291845666.node = NNI1291845666;
var NNI2785017860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2785017860.node = NNI2785017860;
NTI2785017860.base = NTI2768240644;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2667577859.base = NTI2667577347;
var NNI2667579332 = {kind: 1, offset: "val", len: 0, typ: NTI2667577349, name: "val", sons: null};
NTI2667579332.node = NNI2667579332;
NTI2516582415.base = NTI2516582403;
var NNI2516582414 = {kind: 1, offset: "children", len: 0, typ: NTI2516582415, name: "children", sons: null};
NTI2516582414.node = NNI2516582414;
NTI2516582414.base = NTI2516582410;
NTI2516582413.base = NTI2516582403;
var NNI2516582412 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2516582413, name: "children", sons: null}]};
NTI2516582412.node = NNI2516582412;
NTI2516582412.base = NTI2516582410;
NTI2516582417.base = NTI2516582403;
var NNI2516582416 = {kind: 1, offset: "children", len: 0, typ: NTI2516582417, name: "children", sons: null};
NTI2516582416.node = NNI2516582416;
NTI2516582416.base = NTI2516582410;
NTI2516582419.base = NTI2516582403;
var NNI2516582418 = {kind: 1, offset: "children", len: 0, typ: NTI2516582419, name: "children", sons: null};
NTI2516582418.node = NNI2516582418;
NTI2516582418.base = NTI2516582410;
var NNI2516582420 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2667577348, name: "style", sons: null}]};
NTI2516582420.node = NNI2516582420;
NTI2516582420.base = NTI2516582410;
var NNI2801800978 = {kind: 1, offset: "val", len: 0, typ: NTI2801795293, name: "val", sons: null};
NTI2801800978.node = NNI2801800978;
NTI2936014310.base = NTI2936014311;
var NNI2936019784 = {kind: 1, offset: "val", len: 0, typ: NTI2936014310, name: "val", sons: null};
NTI2936019784.node = NNI2936019784;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI3003121734 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121720, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121720, name: "tail", sons: null}]};
NTI3003121734.node = NNI3003121734;
var NNI3003121813 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121799, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121799, name: "tail", sons: null}]};
NTI3003121813.node = NNI3003121813;
var NNI3003121880 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121866, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121866, name: "tail", sons: null}]};
NTI3003121880.node = NNI3003121880;
var NNI2986344528 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344514, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344514, name: "tail", sons: null}]};
NTI2986344528.node = NNI2986344528;
var NNI2986344665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344651, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344651, name: "tail", sons: null}]};
NTI2986344665.node = NNI2986344665;
var NNI2986344601 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344587, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344587, name: "tail", sons: null}]};
NTI2986344601.node = NNI2986344601;
var NNI2986344729 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344715, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344715, name: "tail", sons: null}]};
NTI2986344729.node = NNI2986344729;
var NNI2986344831 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344817, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344817, name: "tail", sons: null}]};
NTI2986344831.node = NNI2986344831;
var NNI2986344906 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344892, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344892, name: "tail", sons: null}]};
NTI2986344906.node = NNI2986344906;
var NNI2986345116 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345102, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345102, name: "tail", sons: null}]};
NTI2986345116.node = NNI2986345116;
var NNI2986345191 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345177, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345177, name: "tail", sons: null}]};
NTI2986345191.node = NNI2986345191;
var NNI2986344977 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344963, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344963, name: "tail", sons: null}]};
NTI2986344977.node = NNI2986344977;
var NNI2986345050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345036, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345036, name: "tail", sons: null}]};
NTI2986345050.node = NNI2986345050;
var NNI2986345257 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345243, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345243, name: "tail", sons: null}]};
NTI2986345257.node = NNI2986345257;
var NNI2986345332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345318, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345318, name: "tail", sons: null}]};
NTI2986345332.node = NNI2986345332;
NTI2902460333.base = NTI2902458397;
var NNI2902460332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2902460333, name: "Field1", sons: null}]};
NTI2902460332.node = NNI2902460332;
var NNI2432696324 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2432696324.node = NNI2432696324;
NTI2432696324.base = NTI2382364676;
NTI2382364755.base = NTI2080374796;
var NNI2801807482 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2801807482.node = NNI2801807482;
var NNI2801807407 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2415919113, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801807407.node = NNI2801807407;
NTI3154116841.base = NTI2080374796;
var NNI3204448401 = {kind: 1, offset: "val", len: 0, typ: NTI3204448259, name: "val", sons: null};
NTI3204448401.node = NNI3204448401;
var NNI3154116752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2936014308, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3154116752.node = NNI3154116752;
var NNI2516582830 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2113929221, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2516582830.node = NNI2516582830;
NTI1291847200.base = NTI2113929221;
var NNI2097152003 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2097152003, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2097152003, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2097152003, name: "Percent", len: 0, sons: null}}};
NTI2097152003.node = NNI2097152003;
var NNI2097152004 = {kind: 3, offset: "kind", len: 3, typ: NTI2097152003, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2097152004.node = NNI2097152004;
var NNI2097152063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2113929221, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2097152063.node = NNI2097152063;
NTI1291846989.base = NTI2113929221;
var NNI2550136837 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2550136837.node = NNI2550136837;
var NNI2868903954 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903954.node = NNI2868903954;
NTI2868903954.base = NTI33555171;
NTI2868903953.base = NTI2868903954;
NTI2868904033.base = NTI2868903953;
var NNI3271557124 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3271557124.node = NNI3271557124;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
                      var helper_2063597622 = new Uint32Array([3198944359, 3630892171]);

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}
    var names_2969569252 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet58 = setConstr([48, 57]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(4);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(5);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(6);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(4);
var ConstSet76 = setConstr(4);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(6);
var ConstSet85 = setConstr(6);
var ConstSet86 = setConstr(0);
var ConstSet87 = setConstr(1);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(3);
var ConstSet92 = setConstr(3);
var ConstSet93 = setConstr(2);
var ConstSet94 = setConstr(2);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(5);
var ConstSet98 = setConstr(5);
var ConstSet99 = setConstr(6);
var ConstSet100 = setConstr(6);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(1);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(1);
var ConstSet107 = setConstr(0);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(0);
var ConstSet110 = setConstr(4);
var ConstSet111 = setConstr(4);
var ConstSet112 = setConstr(5);
var ConstSet113 = setConstr(4);
var ConstSet114 = setConstr(4);
var ConstSet115 = setConstr(3);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(5);
var ConstSet118 = setConstr(4);
var ConstSet119 = setConstr(4);
var ConstSet120 = setConstr(5);
var ConstSet121 = setConstr(6);
var ConstSet122 = setConstr(5);
var ConstSet123 = setConstr(5);
var ConstSet124 = setConstr(3);
var ConstSet125 = setConstr(2);
var ConstSet126 = setConstr(5);
var ConstSet127 = setConstr(5);
var ConstSet128 = setConstr(6);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr(0);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(3);
var ConstSet139 = setConstr(3);
var ConstSet140 = setConstr(4);
var ConstSet141 = setConstr(5);
var ConstSet142 = setConstr(4);
var ConstSet143 = setConstr(10, 9, 7);
var ConstSet144 = setConstr(8);
var ConstSet145 = setConstr(1);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(0);
var ConstSet148 = setConstr(0);
var ConstSet149 = setConstr(0);
var ConstSet150 = setConstr();
var ConstSet151 = setConstr(0);
var ConstSet152 = setConstr(0);
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(1);
var ConstSet156 = setConstr();
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(3);
var ConstSet161 = setConstr(3);
var ConstSet162 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(1);
var ConstSet165 = setConstr(1);
var ConstSet166 = setConstr(0);
var ConstSet167 = setConstr(0);
var ConstSet168 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet169 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet170 = setConstr([48, 57]);
var ConstSet171 = setConstr([48, 57]);
var ConstSet172 = setConstr(101, 69);
var ConstSet173 = setConstr([48, 57]);
var ConstSet174 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet168[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet169[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet170[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet171[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet172[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet173[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet174[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet175 = setConstr(0);
var ConstSet176 = setConstr(0);
var ConstSet177 = setConstr(0);
var ConstSet178 = setConstr(0);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(4);
var ConstSet181 = setConstr(4);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(4);
var ConstSet186 = setConstr(0);
var ConstSet187 = setConstr(13, 10);
var ConstSet188 = setConstr(0);
var ConstSet189 = setConstr(1);
var ConstSet190 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet191 = setConstr(0);
var ConstSet192 = setConstr(46, 44);
var ConstSet193 = setConstr([65, 90]);
var ConstSet194 = setConstr([97, 122]);
var ConstSet195 = setConstr(4);
var ConstSet196 = setConstr(13, 10);
var ConstSet197 = setConstr(6);
    var names_1291854611 = [[76,111,99,97,108], [65,98,115,121,116,114,101,101,83,101,114,118,101,114], [71,105,116,104,117,98]];
var ConstSet198 = setConstr(4);
var ConstSet199 = setConstr(2);
var ConstSet200 = setConstr(3);
var ConstSet201 = setConstr(1);
var ConstSet202 = setConstr(5);
var ConstSet203 = setConstr(5);
var ConstSet204 = setConstr(6);
var ConstSet205 = setConstr(6);
    var names_1291854745 = [[74,78,117,108,108], [74,66,111,111,108], [74,73,110,116], [74,70,108,111,97,116], [74,83,116,114,105,110,103], [74,79,98,106,101,99,116], [74,65,114,114,97,121]];
var ConstSet206 = setConstr(4);
var ConstSet207 = setConstr(2);
var ConstSet208 = setConstr(3);
var ConstSet209 = setConstr(1);
var ConstSet210 = setConstr(5);
var ConstSet211 = setConstr(6);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(6);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(4);
var ConstSet217 = setConstr(4);
var ConstSet218 = setConstr(2);
var ConstSet219 = setConstr(3);
var ConstSet220 = setConstr(1);
var ConstSet221 = setConstr(2);
var ConstSet222 = setConstr(3);
var ConstSet223 = setConstr(1);
var ConstSet224 = setConstr(6);
var ConstSet225 = setConstr(6);
var ConstSet226 = setConstr(6);
var ConstSet227 = setConstr(4);
var ConstSet228 = setConstr(4);
var ConstSet229 = setConstr(2);
var ConstSet230 = setConstr(2);
var ConstSet231 = setConstr(3);
var ConstSet232 = setConstr(3);
var ConstSet233 = setConstr(1);
var ConstSet234 = setConstr(1);
var ConstSet235 = setConstr(6);
var ConstSet236 = setConstr(6);
var ConstSet237 = setConstr(5);
var ConstSet238 = setConstr(5);
var ConstSet239 = setConstr(5);
var ConstSet240 = setConstr(5);
var ConstSet241 = setConstr(5);
var ConstSet242 = setConstr(1);
var ConstSet243 = setConstr(13, 10);
var ConstSet244 = setConstr([48, 57]);
var ConstSet245 = setConstr([48, 57]);
var ConstSet246 = setConstr(69, 101);
var ConstSet247 = setConstr(43, 45);
var ConstSet248 = setConstr([48, 57]);
var ConstSet249 = setConstr(46, 101, 69);
var ConstSet250 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet251 = setConstr([97, 122], [65, 90], 95);
var ConstSet252 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet253 = setConstr(4);
var ConstSet254 = setConstr([48, 57]);
var ConstSet255 = setConstr(0, 125);
var ConstSet256 = setConstr([48, 57]);
var ConstSet257 = setConstr([65, 90]);
var ConstSet258 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet259 = setConstr(6);
var ConstSet260 = setConstr(5);
var ConstSet261 = setConstr(2);
var ConstSet262 = setConstr(2);
var ConstSet263 = setConstr(2);
var ConstSet264 = setConstr(6);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(47, 47);
var ConstSet271 = setConstr(47, 47);
var ConstSet272 = setConstr(47, 47);
var ConstSet273 = setConstr(47, 47);
var ConstSet274 = setConstr(47, 47);
var ConstSet275 = setConstr(47, 47);
var ConstSet276 = setConstr(47, 47);
var ConstSet277 = setConstr(47, 47);
var ConstSet278 = setConstr(2, 3);
var ConstSet279 = setConstr(2);
var ConstSet280 = setConstr(0);
var ConstSet281 = setConstr(1);
var ConstSet282 = setConstr(1);
var ConstSet283 = setConstr();
var ConstSet284 = setConstr();
var ConstSet285 = setConstr();
var ConstSet286 = setConstr();
var ConstSet287 = setConstr();
var ConstSet288 = setConstr(120, 88);
var ConstSet289 = setConstr(0);
    var names_1291854230 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet290 = setConstr(1);
var ConstSet291 = setConstr(1);
var ConstSet292 = setConstr(1);
var ConstSet293 = setConstr(4, 0);
var ConstSet294 = setConstr(4, 0);
var ConstSet295 = setConstr(4);
var ConstSet296 = setConstr(4);
var ConstSet297 = setConstr(4);
var ConstSet298 = setConstr(2, 3);
var ConstSet299 = setConstr(2, 3);
var ConstSet300 = setConstr(3);
var ConstSet301 = setConstr(2);
var ConstSet302 = setConstr(6);
var ConstSet303 = setConstr(4);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr(2, 3);
var ConstSet306 = setConstr(2, 3);
var ConstSet307 = setConstr(3);
var ConstSet308 = setConstr(2);
var ConstSet309 = setConstr(2);
var ConstSet310 = setConstr(6);
var ConstSet311 = setConstr(5);
var ConstSet312 = setConstr(4);
var ConstSet313 = setConstr(6);
var ConstSet314 = setConstr(4);
var ConstSet315 = setConstr(6);
var ConstSet316 = setConstr(4);
var ConstSet317 = setConstr();
var ConstSet318 = setConstr(4);
var ConstSet319 = setConstr(6);
var ConstSet320 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet321 = setConstr([65, 90]);
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet322 = setConstr(10, 13, 32, 61);
var ConstSet323 = setConstr(10, 13, 32);
          var decodeTable_2281701861 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet324 = setConstr(6);
var ConstSet325 = setConstr(6);
var ConstSet326 = setConstr(6);
var ConstSet327 = setConstr(4);
var ConstSet328 = setConstr(4);
var ConstSet329 = setConstr(6);
var ConstSet330 = setConstr(0);
var ConstSet331 = setConstr(0);
var ConstSet332 = setConstr(1);
var ConstSet333 = setConstr(2);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2063597581 = [{a0: 1773455756, a1: 4275166512}];

function toUnix_1191183338(t_1191183339) {
  var result_1191183340 = 0;

    result_1191183340 = t_1191183339.seconds;

  return result_1191183340;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2046820513 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2046820513 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2046820513;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2046820513 = addInt(i_2046820513, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function rotl_2063597599(x_2063597600, k_2063597601) {
  var result_2063597602 = 0;

    result_2063597602 = ((x_2063597600 << k_2063597601) | (x_2063597600 >>> ((64 - k_2063597601) >>> 0)));

  return result_2063597602;

}

function next_2063597611(r_2063597612) {
  var result_2063597613 = 0;

    var s0_2063597614 = r_2063597612.a0;
    var s1_2063597615 = r_2063597612.a1;
    result_2063597613 = ((s0_2063597614 + s1_2063597615) >>> 0);
    s1_2063597615 = (s1_2063597615 ^ s0_2063597614);
    r_2063597612.a0 = ((rotl_2063597599(s0_2063597614, 55) ^ s1_2063597615) ^ (s1_2063597615 << 14));
    r_2063597612.a1 = rotl_2063597599(s1_2063597615, 36);

  return result_2063597613;

}

function skipRandomNumbers_2063597620(s_2063597621) {
    var s0_2063597623 = 0;
    var s1_2063597624 = 0;
    Label1: {
      var i_2063597633 = 0;
      var res_2046820519 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2046820519 <= 1)) break Label3;
            i_2063597633 = res_2046820519;
            Label4: {
              var b_2063597638 = 0;
              var i_2046820517 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2046820517 < 64)) break Label6;
                    b_2063597638 = i_2046820517;
                    if (!(((helper_2063597622[chckIndx(i_2063597633, 0, (helper_2063597622).length - 1)] & (1 << b_2063597638)) == 0))) {
                    s0_2063597623 = (s0_2063597623 ^ s_2063597621.a0);
                    s1_2063597624 = (s1_2063597624 ^ s_2063597621.a1);
                    }
                    
                    var _ = next_2063597611(s_2063597621);
                    i_2046820517 = addInt(i_2046820517, 1);
                  }
              };
            };
            res_2046820519 = addInt(res_2046820519, 1);
          }
      };
    };
    s_2063597621.a0 = s0_2063597623;
    s_2063597621.a1 = s1_2063597624;

  
}

function initRand_2063597797(seed_2063597798) {
    var Temporary1;

  var result_2063597799 = [({a0: 0, a1: 0})];

    if (!((seed_2063597798 == 0))) {
    Temporary1 = seed_2063597798;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2063597805 = Temporary1;
    result_2063597799[0].a0 = Math.floor(seed_2063597805 / Math.pow(2, 16));
    result_2063597799[0].a1 = (seed_2063597805 & 65535);
    skipRandomNumbers_2063597620(result_2063597799[0]);
    var _ = next_2063597611(result_2063597799[0]);

  return result_2063597799[0];

}

function rand_2063597672(r_2063597674, max_2063597675) {
  var result_2063597676 = 0;

  BeforeRet: {
    if ((max_2063597675 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2063597677 = max_2063597675;
      if ((max_2063597677 == -1)) {
      result_2063597676 = next_2063597611(r_2063597674);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2063597690 = next_2063597611(r_2063597674);
            if ((x_2063597690 <= ((4294967295 - (4294967295 % max_2063597677)) ))) {
            result_2063597676 = (x_2063597690 % ((max_2063597677 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2063597676;

}

function rand_2063597668(r_2063597669, max_2063597670) {
  var result_2063597671 = 0;

    result_2063597671 = rand_2063597672(r_2063597669, max_2063597670);

  return result_2063597671;

}
var t_2046820497 = toUnix_1191183338(getTime_1191183389());
var seed_2046820498 = [initRand_2063597797(t_2046820497)];
var incr_2046820503 = [rand_2063597668(seed_2046820498[0], 2147483647)];
var fuzz_2046820508 = rand_2063597668(seed_2046820498[0], 2147483647);

function idNone_2046820599() {
  var result_2046820600 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820600 = nimCopy(result_2046820600, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820600;

}
var null_2046820612 = idNone_2046820599();
var cb64_2281701380 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2281701381 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2348810262 = [initTable_1795162117(32)];

function new_2332033050() {
  var result_2332033053 = null;

  BeforeRet: {
    var r_2332033055 = null;
    r_2332033055 = ({m_type: NTI2348810244});
    result_2332033053 = r_2332033055;
    break BeforeRet;
  };

  return result_2332033053;

}
var fs_2332033077 = new_2332033050();
var nextEditorId_2415919418 = [0];
var gEditor = null;
var handleIdCounter_2902458447 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2701132432 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2701132432 < L_855639328)) break Label3;
            i_855639333 = i_2701132432;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2701132432 = addInt(i_2701132432, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2801806480 = 0;
      colontmp__2801806480 = subInt(count_855639134, 1);
      var res_2801806481 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801806481 <= colontmp__2801806480)) break Label3;
            i_855639140 = res_2801806481;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2801806481 = addInt(res_2801806481, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849228(t_1291849231, key_1291849232, hc_1291849233, hc_1291849233_Idx) {
  var result_1291849234 = 0;

  BeforeRet: {
    hc_1291849233[hc_1291849233_Idx] = hash_1325400491(key_1291849232);
    if ((hc_1291849233[hc_1291849233_Idx] == 0)) {
    hc_1291849233[hc_1291849233_Idx] = 314159265;
    }
    
    if (((t_1291849231.data).length == 0)) {
    result_1291849234 = -1;
    break BeforeRet;
    }
    
    var h_1291849286 = (hc_1291849233[hc_1291849233_Idx] & (t_1291849231.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849231.data[chckIndx(h_1291849286, 0, (t_1291849231.data).length - 1)].Field0)) break Label2;
          if (((t_1291849231.data[chckIndx(h_1291849286, 0, (t_1291849231.data).length - 1)].Field0 == hc_1291849233[hc_1291849233_Idx]) && eqStrings(t_1291849231.data[chckIndx(h_1291849286, 0, (t_1291849231.data).length - 1)].Field1, key_1291849232))) {
          result_1291849234 = h_1291849286;
          break BeforeRet;
          }
          
          h_1291849286 = nextTry_1308622883(h_1291849286, (t_1291849231.data).length - 1);
        }
    };
    result_1291849234 = subInt(-1, h_1291849286);
  };

  return result_1291849234;

}

function hasKey_1291849221(t_1291849224, key_1291849225) {
  var result_1291849226 = false;

    var hc_1291849227 = [0];
    result_1291849226 = (0 <= rawGet_1291849228(t_1291849224, key_1291849225, hc_1291849227, 0));

  return result_1291849226;

}

function contains_1291849215(t_1291849218, key_1291849219) {
  var result_1291849220 = false;

  BeforeRet: {
    result_1291849220 = hasKey_1291849221(t_1291849218, key_1291849219);
    break BeforeRet;
  };

  return result_1291849220;

}

function mustRehash_1291849680(t_1291849682) {
  var result_1291849683 = false;

    if (!((t_1291849682.counter < (t_1291849682.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849683 = ((mulInt((t_1291849682.data).length, 2) < mulInt(t_1291849682.counter, 3)) || (subInt((t_1291849682.data).length, t_1291849682.counter) < 4));

  return result_1291849683;

}

function rawInsert_1291850129(t_1291850133, data_1291850134, data_1291850134_Idx, key_1291850135, val_1291850136, hc_1291850137, h_1291850138) {
    data_1291850134[data_1291850134_Idx][chckIndx(h_1291850138, 0, (data_1291850134[data_1291850134_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850135, NTI33554449);
    data_1291850134[data_1291850134_Idx][chckIndx(h_1291850138, 0, (data_1291850134[data_1291850134_Idx]).length - 1)].Field2 = val_1291850136;
    data_1291850134[data_1291850134_Idx][chckIndx(h_1291850138, 0, (data_1291850134[data_1291850134_Idx]).length - 1)].Field0 = hc_1291850137;

  
}

function enlarge_1291849835(t_1291849838) {
    var n_1291849841 = [];
    n_1291849841 = new Array(chckRange(mulInt((t_1291849838.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849838.data).length, 2), 0, 2147483647) ; ++i) { n_1291849841[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849838.data; t_1291849838.data = n_1291849841; n_1291849841 = Temporary1;    Label2: {
      var i_1291849905 = 0;
      var colontmp__2801806489 = 0;
      colontmp__2801806489 = (n_1291849841).length - 1;
      var res_2801806491 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801806491 <= colontmp__2801806489)) break Label4;
            i_1291849905 = res_2801806491;
            var eh_1291849959 = n_1291849841[chckIndx(i_1291849905, 0, (n_1291849841).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849959)) {
            var j_1291849963 = (eh_1291849959 & (t_1291849838.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849838.data[chckIndx(j_1291849963, 0, (t_1291849838.data).length - 1)].Field0)) break Label6;
                  j_1291849963 = nextTry_1308622883(j_1291849963, (t_1291849838.data).length - 1);
                }
            };
            rawInsert_1291850129(t_1291849838, t_1291849838, "data", n_1291849841[chckIndx(i_1291849905, 0, (n_1291849841).length - 1)].Field1, n_1291849841[chckIndx(i_1291849905, 0, (n_1291849841).length - 1)].Field2, eh_1291849959, j_1291849963);
            }
            
            res_2801806491 = addInt(res_2801806491, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850298(t_1291850301, key_1291850302, hc_1291850303) {
  var result_1291850304 = 0;

  BeforeRet: {
    if (((t_1291850301.data).length == 0)) {
    result_1291850304 = -1;
    break BeforeRet;
    }
    
    var h_1291850355 = (hc_1291850303 & (t_1291850301.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850301.data[chckIndx(h_1291850355, 0, (t_1291850301.data).length - 1)].Field0)) break Label2;
          if (((t_1291850301.data[chckIndx(h_1291850355, 0, (t_1291850301.data).length - 1)].Field0 == hc_1291850303) && eqStrings(t_1291850301.data[chckIndx(h_1291850355, 0, (t_1291850301.data).length - 1)].Field1, key_1291850302))) {
          result_1291850304 = h_1291850355;
          break BeforeRet;
          }
          
          h_1291850355 = nextTry_1308622883(h_1291850355, (t_1291850301.data).length - 1);
        }
    };
    result_1291850304 = subInt(-1, h_1291850355);
  };

  return result_1291850304;

}

function HEX5BHEX5DHEX3D_1291849507(t_1291849510, key_1291849511, val_1291849512) {
    if (((t_1291849510.data).length == 0)) {
    var correctSizeHEX60gensym38_1291849561 = slotsNeeded_1308622891(32);
    t_1291849510.counter = 0;
    t_1291849510.data = new Array(chckRange(correctSizeHEX60gensym38_1291849561, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym38_1291849561, 0, 2147483647) ; ++i) { t_1291849510.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849566 = [0];
    var index_1291849573 = rawGet_1291849228(t_1291849510, key_1291849511, hc_1291849566, 0);
    if ((0 <= index_1291849573)) {
    t_1291849510.data[chckIndx(index_1291849573, 0, (t_1291849510.data).length - 1)].Field2 = val_1291849512;
    }
    else {
      if (((t_1291849510.data).length == 0)) {
      var correctSizeHEX60gensym41_1291849675 = slotsNeeded_1308622891(32);
      t_1291849510.counter = 0;
      t_1291849510.data = new Array(chckRange(correctSizeHEX60gensym41_1291849675, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_1291849675, 0, 2147483647) ; ++i) { t_1291849510.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849680(t_1291849510)) {
      enlarge_1291849835(t_1291849510);
      index_1291849573 = rawGetKnownHC_1291850298(t_1291849510, key_1291849511, hc_1291849566[0]);
      }
      
      index_1291849573 = subInt(-1, index_1291849573);
      rawInsert_1291850129(t_1291849510, t_1291849510, "data", key_1291849511, val_1291849512, hc_1291849566[0], index_1291849573);
      t_1291849510.counter = addInt(t_1291849510.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2080374823(context_2080374824) {
  var result_2080374825 = null;

    result_2080374825 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2080374825.handleActions = true;
    result_2080374825.handleInputs = false;
    result_2080374825.context = nimCopy(null, context_2080374824, NTI33554449);

  return result_2080374825;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850589(t_1291850592, key_1291850593) {
  var result_1291850594 = null;
  var result_1291850594_Idx = 0;

    var hcHEX60gensym22_1291850595 = [0];
    var indexHEX60gensym22_1291850602 = rawGet_1291849228(t_1291850592, key_1291850593, hcHEX60gensym22_1291850595, 0);
    if ((0 <= indexHEX60gensym22_1291850602)) {
    result_1291850594 = t_1291850592.data[chckIndx(indexHEX60gensym22_1291850602, 0, (t_1291850592.data).length - 1)]; result_1291850594_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850593);
    }
    

  return [result_1291850594, result_1291850594_Idx];

}

function getEventHandlerConfig_1291849169(self_1291849170, context_1291849171) {
    var Temporary1;

  var result_1291849172 = null;

  BeforeRet: {
    if (!(contains_1291849215(self_1291849170.eventHandlerConfigs, context_1291849171))) {
    HEX5BHEX5DHEX3D_1291849507(self_1291849170.eventHandlerConfigs, context_1291849171, newEventHandlerConfig_2080374823(context_1291849171));
    }
    
    result_1291849172 = (Temporary1 = HEX5BHEX5D_1291850589(self_1291849170.eventHandlerConfigs, context_1291849171), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849172;

}

function getModeConfig_2801806112(self_2801806113, mode_2801806114) {
  var result_2801806115 = null;

  BeforeRet: {
    result_2801806115 = getEventHandlerConfig_1291849169(self_2801806113.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2801806114 || []));
    break BeforeRet;
  };

  return result_2801806115;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2801806521 = 0;
      var result_2801806522 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806521 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] <= 127)) {
            result_2801806522 = chckRange(s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2801806521 <= subInt((s_788533333).length, 2))) {
            result_2801806522 = chckRange((((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2801806521, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 2);
            }
            else {
              result_2801806522 = 65533;
              i_2801806521 = addInt(i_2801806521, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2801806521 <= subInt((s_788533333).length, 3))) {
            result_2801806522 = chckRange(((((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2801806521, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801806521, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 3);
            }
            else {
              result_2801806522 = 65533;
              i_2801806521 = addInt(i_2801806521, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2801806521 <= subInt((s_788533333).length, 4))) {
            result_2801806522 = chckRange((((((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2801806521, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801806521, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801806521, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 4);
            }
            else {
              result_2801806522 = 65533;
              i_2801806521 = addInt(i_2801806521, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2801806521 <= subInt((s_788533333).length, 5))) {
            result_2801806522 = chckRange(((((((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2801806521, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2801806521, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801806521, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801806521, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 5);
            }
            else {
              result_2801806522 = 65533;
              i_2801806521 = addInt(i_2801806521, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2801806521 <= subInt((s_788533333).length, 6))) {
            result_2801806522 = chckRange((((((((s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2801806521, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2801806521, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2801806521, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801806521, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801806521, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801806521 = addInt(i_2801806521, 6);
            }
            else {
              result_2801806522 = 65533;
              i_2801806521 = addInt(i_2801806521, 1);
            }
            
            }
            else {
              result_2801806522 = chckRange(s_788533333[chckIndx(i_2801806521, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2801806521 = addInt(i_2801806521, 1);
            }
            }}}}}
            r_788533347 = result_2801806522;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2801806528 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806528 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2801806528, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2801806528, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2801806528 = addInt(i_2801806528, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2801806531 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806531 <= 3)) break Label3;
            if ((x_2013267026[i_2801806531] != undefined)) {
            value_2013267035 = i_2801806531;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2801806531 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2801806535 = 0;
      colontmp__2801806535 = (n_2013268694).length - 1;
      var res_2801806536 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801806536 <= colontmp__2801806535)) break Label4;
            i_2013268758 = res_2801806536;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2801806536 = addInt(res_2801806536, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2801806541 = 0;
      colontmp__2801806541 = (n_2013267558).length - 1;
      var res_2801806542 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801806542 <= colontmp__2801806541)) break Label4;
            i_2013267622 = res_2801806542;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2801806542 = addInt(res_2801806542, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2801806516 = 0;
      colontmp__2801806516 = (input_2013269802).length;
      var i_2801806517 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806517 < colontmp__2801806516)) break Label3;
            i_2013269829 = i_2801806517;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2801806513 = 0;
                  var L_2801806514 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2801806513 < L_2801806514)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2801806513, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2801806513 = addInt(i_2801806513, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2801806514))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2801806517 = addInt(i_2801806517, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2801806507 = 0;
      var L_2801806508 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806507 < L_2801806508)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2801806507, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2801806507 = addInt(i_2801806507, 1);
            if (!(((commands_2013269906).length == L_2801806508))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2080374898(t_2080374901) {
  var result_2080374902 = 0;

    result_2080374902 = t_2080374901.counter;

  return result_2080374902;

}

function buildDFA_2080374847(config_2080374848) {
  var result_2080374849 = null;

  BeforeRet: {
    var resultHEX60gensym2_2080375129 = [];
    Label1: {
      var xHEX60gensym2_2080375130 = {Field0: [], Field1: []};
      var L_2801806499 = len_2080374898(config_2080374848.commands);
      Label2: {
        var h_2801806501 = 0;
        var colontmp__2801806502 = 0;
        colontmp__2801806502 = (config_2080374848.commands.data).length - 1;
        var res_2801806503 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2801806503 <= colontmp__2801806502)) break Label4;
              h_2801806501 = res_2801806503;
              if (isFilled_1308622880(config_2080374848.commands.data[chckIndx(h_2801806501, 0, (config_2080374848.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2080375130 = nimCopy(xHEX60gensym2_2080375130, {Field0: nimCopy(null, config_2080374848.commands.data[chckIndx(h_2801806501, 0, (config_2080374848.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2080374848.commands.data[chckIndx(h_2801806501, 0, (config_2080374848.commands.data).length - 1)].Field2, NTI33554449)}, NTI2080374819);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2080375130, NTI2080374819);
              resultHEX60gensym2_2080375129.push(Temporary5);;
              if (!((len_2080374898(config_2080374848.commands) == L_2801806499))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2801806503 = addInt(res_2801806503, 1);
            }
        };
      };
    };
    result_2080374849 = buildDFA_2013269905(resultHEX60gensym2_2080375129);
    break BeforeRet;
  };

  return result_2080374849;

}

function invoke_2382364734(event_2382364736) {
    Label1: {
      var h_2382364759 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801806548 = 0;
      var L_2801806549 = (event_2382364736.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806548 < L_2801806549)) break Label3;
            h_2382364759 = event_2382364736.handlers[chckIndx(i_2801806548, 0, (event_2382364736.handlers).length - 1)];
            h_2382364759.Field1();
            i_2801806548 = addInt(i_2801806548, 1);
            if (!(((event_2382364736.handlers).length == L_2801806549))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2382364710(self_2382364711) {
    if (!(self_2382364711.mDirty)) {
    invoke_2382364734(self_2382364711.onMarkedDirty);
    }
    
    self_2382364711.mDirty = true;

  
}

function setMode_2801806301(self_2801806302, mode_2801806303) {
        
function HEX3Aanonymous_2801806329(actionHEX60gensym187HEX60gensym188_2801806330, argHEX60gensym187HEX60gensym188_2801806331) {
          var result_2801806332 = 0;

          BeforeRet: {
            if (handlerHEX60gensym187_2801806317.config.handleActions) {
            var action_2801806333 = nimCopy(null, actionHEX60gensym187HEX60gensym188_2801806330, NTI33554449);
            var arg_2801806334 = nimCopy(null, argHEX60gensym187HEX60gensym188_2801806331, NTI33554449);
            var responseHEX60gensym187HEX60gensym188_2801806335 = handleAction_2801795427(self_2801806302, action_2801806333, arg_2801806334);
            if (handlerHEX60gensym187_2801806317.config.consumeAllActions) {
            result_2801806332 = 3;
            break BeforeRet;
            }
            
            result_2801806332 = responseHEX60gensym187HEX60gensym188_2801806335;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym187_2801806317.config.consumeAllActions) {
            result_2801806332 = 3;
            break BeforeRet;
            }
            else {
              result_2801806332 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2801806332;

        }
        
function HEX3Aanonymous_2801806337(inputHEX60gensym187HEX60gensym189_2801806338) {
          var result_2801806339 = 0;

          BeforeRet: {
            if (handlerHEX60gensym187_2801806317.config.handleInputs) {
            var input_2801806340 = nimCopy(null, inputHEX60gensym187HEX60gensym189_2801806338, NTI33554449);
            result_2801806339 = handleInput_2801795435(self_2801806302, input_2801806340);
            break BeforeRet;
            }
            else {
              result_2801806339 = 1;
              break BeforeRet;
            }
            
          };

          return result_2801806339;

        }

  BeforeRet: {
    if (eqStrings(mode_2801806303, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2801806308 = [mnewString(0)];
    fmtRes_2801806308[0].push.apply(fmtRes_2801806308[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2801806308, 0, mode_2801806303, []);
    fmtRes_2801806308[0].push.apply(fmtRes_2801806308[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801806308[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2801806303).length == 0)) {
    self_2801806302.modeEventHandler = null;
    }
    else {
      var config_2801806309 = getModeConfig_2801806112(self_2801806302, mode_2801806303);
      Label1: {
        var handlerHEX60gensym187_2801806317 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym187_2801806317.config = config_2801806309;
        handlerHEX60gensym187_2801806317.dfaInternal = buildDFA_2080374847(config_2801806309);
        handlerHEX60gensym187_2801806317.handleAction = HEX3Aanonymous_2801806329;
        handlerHEX60gensym187_2801806317.handleInput = HEX3Aanonymous_2801806337;
      };
      self_2801806302.modeEventHandler = handlerHEX60gensym187_2801806317;
    }
    
    self_2801806302.currentMode = nimCopy(null, mode_2801806303, NTI33554449);
    markDirty_2382364710(self_2801806302);
  };

  
}

function setModeJsWrapper_2801806262(self_2801806426, mode_2801806427) {
    setMode_2801806301(self_2801806426, mode_2801806427);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2801806262(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2801806557(self_2801806558) {
  var result_2801806559 = [];

  BeforeRet: {
    result_2801806559 = nimCopy(null, self_2801806558.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2801806559;

}

function modeJsWrapper_2801806553(self_2801806588) {
  var result_2801806589 = [];

    result_2801806589 = nimCopy(null, mode_2801806557(self_2801806588), NTI33554449);

  return result_2801806589;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2801806553(this));};

function getContextWithMode_2801805740(self_2801805741, context_2801805742) {
  var result_2801806617 = [];

  BeforeRet: {
    result_2801806617 = nimCopy(null, (context_2801805742 || []).concat([46] || [],self_2801805741.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2801806617;

}

function getContextWithModeJsWrapper_2801806610(self_2801806647, context_2801806648) {
  var result_2801806649 = [];

    result_2801806649 = nimCopy(null, getContextWithMode_2801805740(self_2801806647, context_2801806648), NTI33554449);

  return result_2801806649;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2801806610(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2801805800(s_2801805802, default_2801805803) {
    var Temporary1;

  var result_2801805804 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2801805802))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2801805803;
      break;
    }
    result_2801805804 = Temporary1;

  return result_2801805804;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2801806778 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801806778 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2801806778, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2801806778 = addInt(i_2801806778, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2701132313 = 0;
      colontmp__2701132313 = subInt(L_33557827, 1);
      var res_2701132314 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2701132314 <= colontmp__2701132313)) break Label3;
            i_33557832 = res_2701132314;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2701132314 = addInt(res_2701132314, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2801806784 = 0;
      var splitsHEX60gensym40_2801806785 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2801806784 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2801806787 = lastHEX60gensym40_2801806784;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2801806784 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2801806784, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2801806784 = addInt(lastHEX60gensym40_2801806784, 1);
                }
            };
            if ((splitsHEX60gensym40_2801806785 == 0)) {
            lastHEX60gensym40_2801806784 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2801806787, subInt(lastHEX60gensym40_2801806784, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2801806785 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2801806785 = subInt(splitsHEX60gensym40_2801806785, 1);
            lastHEX60gensym40_2801806784 = addInt(lastHEX60gensym40_2801806784, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2801805774(editor_2801805776, path_2801805777, default_2801805778) {
  var result_2801805784 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2801805776 == null)) {
      result_2801805784 = default_2801805778;
      break BeforeRet;
      }
      
      var nodeHEX60gensym166_2801805796 = HEX7BHEX7D_1627393316(editor_2801805776.options, nsuSplitString(path_2801805777, [46], -1));
      if ((nodeHEX60gensym166_2801805796 == null)) {
      result_2801805784 = default_2801805778;
      break BeforeRet;
      }
      
    };
    result_2801805784 = parseEnum_2801805800(getStr_1627390106(nodeHEX60gensym166_2801805796, []), default_2801805778);
    break BeforeRet;
  };

  return result_2801805784;

}

function selection_2801795577(self_2801795578) {
  var result_2801795579 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801795579 = nimCopy(result_2801795579, self_2801795578.selectionsInternal[chckIndx((self_2801795578.selectionsInternal).length - 1, 0, (self_2801795578.selectionsInternal).length - 1)], NTI2415919115);

  return result_2801795579;

}

function getCursor_2801805770(self_2801805771, cursor_2801805772) {
  var result_2801805773 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2801805772) {
    case 0:
      var configCursor_2801805834 = getOption_2801805774(self_2801805771.editor, getContextWithMode_2801805740(self_2801805771, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2801805773 = nimCopy(result_2801805773, getCursor_2801805770(self_2801805771, configCursor_2801805834), NTI2415919113);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2801805773 = nimCopy(result_2801805773, selection_2801795577(self_2801805771).Field1, NTI2415919113);
      break BeforeRet;
      break;
    case 2:
      result_2801805773 = nimCopy(result_2801805773, selection_2801795577(self_2801805771).Field0, NTI2415919113);
      break BeforeRet;
      break;
    }
  };

  return result_2801805773;

}

function updateTargetColumn_2801806679(self_2801806680, cursor_2801806681) {
    self_2801806680.targetColumn = getCursor_2801805770(self_2801806680, cursor_2801806681).Field1;

  
}

function updateTargetColumnJsWrapper_2801806675(self_2801806710, cursor_2801806711) {
    updateTargetColumn_2801806679(self_2801806710, cursor_2801806711);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2801806675(this, cursor_));};

function HEX3DHEX3D_2415919177(x_2415919179, y_2415919180) {
  var result_2415919181 = false;

  BeforeRet: {
    if (!((x_2415919179["Field0"] == y_2415919180["Field0"]))) {
    result_2415919181 = false;
    break BeforeRet;
    }
    
    if (!((x_2415919179["Field1"] == y_2415919180["Field1"]))) {
    result_2415919181 = false;
    break BeforeRet;
    }
    
    result_2415919181 = true;
    break BeforeRet;
  };

  return result_2415919181;

}

function HEX3DHEX3D_2415919167(x_2415919169, y_2415919170) {
  var result_2415919171 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2415919177(x_2415919169["Field0"], y_2415919170["Field0"]))) {
    result_2415919171 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2415919177(x_2415919169["Field1"], y_2415919170["Field1"]))) {
    result_2415919171 = false;
    break BeforeRet;
    }
    
    result_2415919171 = true;
    break BeforeRet;
  };

  return result_2415919171;

}

function newSeq_2801795617(len_2801795619) {
  var result_2801795620 = [];

    result_2801795620 = new Array(len_2801795619); for (var i = 0 ; i < len_2801795619 ; ++i) { result_2801795620[i] = []; }
  return result_2801795620;

}

function expandIfNeeded_2801795607(deq_2801795609) {
              var Temporary5;
    var Temporary6;

    if ((deq_2801795609.mask == 0)) {
    var correctSizeHEX60gensym9_2801795611 = nextPowerOfTwo_872415437(4);
    deq_2801795609.mask = subInt(correctSizeHEX60gensym9_2801795611, 1);
    deq_2801795609.data = new Array(chckRange(correctSizeHEX60gensym9_2801795611, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2801795611, 0, 2147483647) ; ++i) { deq_2801795609.data[i] = []; }    }
    
    var cap_2801795616 = addInt(deq_2801795609.mask, 1);
    if ((cap_2801795616 <= deq_2801795609.count)) {
    var n_2801795634 = newSeq_2801795617(chckRange(mulInt(cap_2801795616, 2), 0, 2147483647));
    var i_2801795635 = 0;
    Label1: {
      var x_2801795645 = null;
      var x_2801795645_Idx = 0;
      var i_2801806844 = deq_2801795609.head;
      Label2: {
        var c_2801806846 = 0;
        var i_2801806847 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2801806847 < deq_2801795609.count)) break Label4;
              c_2801806846 = i_2801806847;
              x_2801795645 = deq_2801795609.data; x_2801795645_Idx = chckIndx(i_2801806844, 0, (deq_2801795609.data).length - 1);
              Temporary5 = x_2801795645[x_2801795645_Idx];
              x_2801795645[x_2801795645_Idx] = genericReset(x_2801795645[x_2801795645_Idx], NTI2415919123);
              n_2801795634[chckIndx(i_2801795635, 0, (n_2801795634).length - 1)] = nimCopy(null, Temporary5, NTI2415919123);
              i_2801795635 = addInt(i_2801795635, 1);
              i_2801806844 = (addInt(i_2801806844, 1) & deq_2801795609.mask);
              i_2801806847 = addInt(i_2801806847, 1);
            }
        };
      };
    };
    Temporary6 = n_2801795634;
    n_2801795634 = genericReset(n_2801795634, NTI2801795473);
    deq_2801795609.data = nimCopy(null, Temporary6, NTI2801795473);
    deq_2801795609.mask = subInt(mulInt(cap_2801795616, 2), 1);
    deq_2801795609.tail = deq_2801795609.count;
    deq_2801795609.head = 0;
    }
    

  
}

function addLast_2801795598(deq_2801795600, item_2801795601) {
    expandIfNeeded_2801795607(deq_2801795600);
    deq_2801795600.count = addInt(deq_2801795600.count, 1);
    deq_2801795600.data[chckIndx(deq_2801795600.tail, 0, (deq_2801795600.data).length - 1)] = nimCopy(null, item_2801795601, NTI2415919123);
    deq_2801795600.tail = (addInt(deq_2801795600.tail, 1) & deq_2801795600.mask);

  
}

function len_2801795737(deq_2801795739) {
  var result_2801795740 = 0;

    result_2801795740 = deq_2801795739.count;

  return result_2801795740;

}

function popFirst_2801795798(deq_2801795800) {
    var Temporary1;

  var result_2801795801 = [];

    if ((deq_2801795800.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2801795800.count = subInt(deq_2801795800.count, 1);
    Temporary1 = deq_2801795800.data[chckIndx(deq_2801795800.head, 0, (deq_2801795800.data).length - 1)];
    deq_2801795800.data[chckIndx(deq_2801795800.head, 0, (deq_2801795800.data).length - 1)] = genericReset(deq_2801795800.data[chckIndx(deq_2801795800.head, 0, (deq_2801795800.data).length - 1)], NTI2415919123);
    result_2801795801 = nimCopy(null, Temporary1, NTI2415919123);
    deq_2801795800.head = (addInt(deq_2801795800.head, 1) & deq_2801795800.mask);

  return result_2801795801;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2801795445(self_2801795446, line_2801795447) {
  var result_2801795448 = 0;

  BeforeRet: {
    if ((line_2801795447 < (self_2801795446.lines).length)) {
    result_2801795448 = (self_2801795446.lines[chckIndx(line_2801795447, 0, (self_2801795446.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2801795448 = 0;
    break BeforeRet;
  };

  return result_2801795448;

}

function clampCursor_2801795459(self_2801795460, cursor_2801795461) {
  var result_2801795462 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801795463 = nimCopy(null, cursor_2801795461, NTI2415919113);
    if (((self_2801795460.lines).length == 0)) {
    var colontmp__2801806851 = 0;
    var colontmp__2801806852 = 0;
    result_2801795462 = nimCopy(result_2801795462, {Field0: colontmp__2801806851, Field1: colontmp__2801806852}, NTI2415919113);
    break BeforeRet;
    }
    
    cursor_2801795463.Field0 = clamp_1660945119(cursor_2801795463.Field0, 0, subInt((self_2801795460.lines).length, 1));
    cursor_2801795463.Field1 = clamp_1660945119(cursor_2801795463.Field1, 0, lineLength_2801795445(self_2801795460, cursor_2801795463.Field0));
    result_2801795462 = nimCopy(result_2801795462, cursor_2801795463, NTI2415919113);
    break BeforeRet;
  };

  return result_2801795462;

}

function clampSelection_2801795484(self_2801795485, selection_2801795486) {
  var result_2801795487 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801806849 = clampCursor_2801795459(self_2801795485, selection_2801795486.Field0);
    var colontmp__2801806850 = clampCursor_2801795459(self_2801795485, selection_2801795486.Field1);
    result_2801795487 = nimCopy(result_2801795487, {Field0: nimCopy(null, colontmp__2801806849, NTI2415919113), Field1: nimCopy(null, colontmp__2801806850, NTI2415919113)}, NTI2415919115);

  return result_2801795487;

}

function clampSelection_2801795488(self_2801795489, selection_2801795490) {
  var result_2801795491 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801795491 = nimCopy(result_2801795491, clampSelection_2801795484(self_2801795489.document, selection_2801795490), NTI2415919115);

  return result_2801795491;

}

function selectionHEX3D_2801795583(self_2801795584, selection_2801795585) {
  BeforeRet: {
    if ((((self_2801795584.selectionsInternal).length == 1) && HEX3DHEX3D_2415919167(self_2801795584.selectionsInternal[chckIndx(0, 0, (self_2801795584.selectionsInternal).length - 1)], selection_2801795585))) {
    break BeforeRet;
    }
    
    addLast_2801795598(self_2801795584.selectionHistory, self_2801795584.selectionsInternal);
    if ((100 < len_2801795737(self_2801795584.selectionHistory))) {
    var _ = popFirst_2801795798(self_2801795584.selectionHistory);
    }
    
    self_2801795584.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2801795488(self_2801795584, selection_2801795585), NTI2415919115)], NTI2801795588);
    markDirty_2382364710(self_2801795584);
  };

  
}

function invertSelection_2801806796(self_2801806797) {
    selectionHEX3D_2801795583(self_2801806797, {Field0: nimCopy(null, selection_2801795577(self_2801806797).Field1, NTI2415919113), Field1: nimCopy(null, selection_2801795577(self_2801806797).Field0, NTI2415919113)});

  
}

function invertSelectionJsWrapper_2801806792(self_2801806825) {
    invertSelection_2801806796(self_2801806825);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2801806792(this));};

function any_2415919537(s_2415919539, pred_2415919541) {
  var result_2415919542 = false;

  BeforeRet: {
    Label1: {
      var i_2415919555 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801807298 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807298 < (s_2415919539).length)) break Label3;
            i_2415919555 = s_2415919539[chckIndx(i_2801807298, 0, (s_2415919539).length - 1)];
            if (pred_2415919541(i_2415919555)) {
            result_2415919542 = true;
            break BeforeRet;
            }
            
            i_2801807298 = addInt(i_2801807298, 1);
          }
      };
    };
    result_2415919542 = false;
  };

  return result_2415919542;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2415919447(x_2415919449, y_2415919450) {
  var result_2415919451 = false;

  BeforeRet: {
    var c_2415919461 = cmp_33557727(x_2415919449["Field0"], y_2415919450["Field0"]);
    if ((c_2415919461 < 0)) {
    result_2415919451 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919461)) {
    result_2415919451 = false;
    break BeforeRet;
    }
    
    var c_2415919466 = cmp_33557727(x_2415919449["Field1"], y_2415919450["Field1"]);
    if ((c_2415919466 < 0)) {
    result_2415919451 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919466)) {
    result_2415919451 = false;
    break BeforeRet;
    }
    
    result_2415919451 = true;
    break BeforeRet;
  };

  return result_2415919451;

}

function contains_2415919495(selection_2415919496, other_2415919497) {
  var result_2415919498 = false;

    result_2415919498 = (HEX3CHEX3D_2415919447(selection_2415919496.Field0, other_2415919497.Field0) && HEX3CHEX3D_2415919447(other_2415919497.Field1, selection_2415919496.Field1));

  return result_2415919498;

}

function contains_2415919574(self_2415919575, other_2415919576) {
    other_2415919576 = nimCopy(null, other_2415919576, NTI2415919115);
    
function HEX3Aanonymous_2415919578(s_2415919581) {
      var result_2415919584 = false;

        result_2415919584 = contains_2415919495(s_2415919581, other_2415919576);

      return result_2415919584;

    }

  var result_2415919577 = false;

    result_2415919577 = any_2415919537(self_2415919575, HEX3Aanonymous_2415919578);

  return result_2415919577;

}

function deduplicate_2801795529(s_2801795531, isSorted_2801795532) {
  var result_2801795533 = [];

    result_2801795533 = nimCopy(null, [], NTI2801795419);
    if ((0 < (s_2801795531).length)) {
    if (isSorted_2801795532) {
    var prev_2801795541 = nimCopy(null, s_2801795531[chckIndx(0, 0, (s_2801795531).length - 1)], NTI2415919115);
    var Temporary1 = nimCopy(null, prev_2801795541, NTI2415919115);
    result_2801795533.push(Temporary1);;
    Label2: {
      var i_2801795553 = 0;
      var colontmp__2801807290 = 0;
      colontmp__2801807290 = (s_2801795531).length - 1;
      var res_2801807291 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2801807291 <= colontmp__2801807290)) break Label4;
            i_2801795553 = res_2801807291;
            if (!(HEX3DHEX3D_2415919167(s_2801795531[chckIndx(i_2801795553, 0, (s_2801795531).length - 1)], prev_2801795541))) {
            prev_2801795541 = nimCopy(prev_2801795541, s_2801795531[chckIndx(i_2801795553, 0, (s_2801795531).length - 1)], NTI2415919115);
            var Temporary5 = nimCopy(null, prev_2801795541, NTI2415919115);
            result_2801795533.push(Temporary5);;
            }
            
            res_2801807291 = addInt(res_2801807291, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2801795565 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2801807295 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2801807295 < (s_2801795531).length)) break Label8;
              itm_2801795565 = s_2801795531[chckIndx(i_2801807295, 0, (s_2801795531).length - 1)];
              if (!(contains_2415919574(result_2801795533, itm_2801795565))) {
              var Temporary9 = nimCopy(null, itm_2801795565, NTI2415919115);
              result_2801795533.push(Temporary9);;
              }
              
              i_2801807295 = addInt(i_2801807295, 1);
            }
        };
      };
    }
    
    }
    

  return result_2801795533;

}

function map_2801795507(s_2801795510, op_2801795512) {
  var result_2801795513 = [];

    result_2801795513 = new Array(chckRange((s_2801795510).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2801795510).length, 0, 2147483647) ; ++i) { result_2801795513[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801795528 = 0;
      var colontmp__2801807301 = 0;
      colontmp__2801807301 = (s_2801795510).length;
      var i_2801807302 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807302 < colontmp__2801807301)) break Label3;
            i_2801795528 = i_2801807302;
            result_2801795513[chckIndx(i_2801795528, 0, (result_2801795513).length - 1)] = nimCopy(result_2801795513[chckIndx(i_2801795528, 0, (result_2801795513).length - 1)], op_2801795512(s_2801795510[chckIndx(i_2801795528, 0, (s_2801795510).length - 1)]), NTI2415919115);
            i_2801807302 = addInt(i_2801807302, 1);
          }
      };
    };

  return result_2801795513;

}

function clampAndMergeSelections_2801795492(self_2801795493, selections_2801795494) {
    
function HEX3Aanonymous_2801795496(s_2801795503) {
      var result_2801795506 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801795506 = nimCopy(result_2801795506, clampSelection_2801795484(self_2801795493, s_2801795503), NTI2415919115);

      return result_2801795506;

    }

  var result_2801795495 = [];

    result_2801795495 = nimCopy(null, deduplicate_2801795529(map_2801795507(selections_2801795494, HEX3Aanonymous_2801795496), false), NTI2801795408);

  return result_2801795495;

}

function HEX40_2801801704(a_2801801706) {
  var result_2801801707 = [];

    result_2801801707 = new Array(chckRange((a_2801801706).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2801801706).length, 0, 2147483647) ; ++i) { result_2801801707[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801801722 = 0;
      var colontmp__2801807305 = 0;
      colontmp__2801807305 = subInt((a_2801801706).length, 1);
      var res_2801807306 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801807306 <= colontmp__2801807305)) break Label3;
            i_2801801722 = res_2801807306;
            result_2801801707[chckIndx(i_2801801722, 0, (result_2801801707).length - 1)] = nimCopy(result_2801801707[chckIndx(i_2801801722, 0, (result_2801801707).length - 1)], a_2801801706[chckIndx(i_2801801722, 0, (a_2801801706).length - 1)], NTI2415919115);
            res_2801807306 = addInt(res_2801807306, 1);
          }
      };
    };

  return result_2801801707;

}

function byteOffset_2801801684(self_2801801685, cursor_2801801686) {
  var result_2801801687 = 0;

    result_2801801687 = cursor_2801801686.Field1;
    Label1: {
      var i_2801801692 = 0;
      var i_2801807309 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807309 < cursor_2801801686.Field0)) break Label3;
            i_2801801692 = i_2801807309;
            result_2801801687 = addInt(result_2801801687, addInt((self_2801801685.lines[chckIndx(i_2801801692, 0, (self_2801801685.lines).length - 1)]).length, 1));
            i_2801807309 = addInt(i_2801807309, 1);
          }
      };
    };

  return result_2801801687;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2801806290 = 0;
      colontmp__2801806290 = start_855639700;
      var res_2801806291 = colontmp__2801806290;
      Label3: {
          Label4: while (true) {
          if (!(res_2801806291 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2801806291;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2801806291 = addInt(res_2801806291, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2801807312 = 0;
      colontmp__2801807312 = subInt(m_855639633, 1);
      var i_2801807313 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807313 < colontmp__2801807312)) break Label3;
            i_855639653 = i_2801807313;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2801807313 = addInt(i_2801807313, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2801802259(x_2801802261, x_2801802261_Idx, item_2801802262, i_2801802263) {
    var it_2801802283 = [];
    x_2801802261[x_2801802261_Idx] = x_2801802261[x_2801802261_Idx] || []; x_2801802261[x_2801802261_Idx].splice(i_2801802263, 0, it_2801802283);
    x_2801802261[x_2801802261_Idx][chckIndx(i_2801802263, 0, (x_2801802261[x_2801802261_Idx]).length - 1)] = nimCopy(null, item_2801802262, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2415919597(cursor_2415919598) {
  var result_2415919599 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801807322 = nimCopy(null, cursor_2415919598, NTI2415919113);
    var colontmp__2801807323 = nimCopy(null, cursor_2415919598, NTI2415919113);
    result_2415919599 = nimCopy(result_2415919599, {Field0: nimCopy(null, colontmp__2801807322, NTI2415919113), Field1: nimCopy(null, colontmp__2801807323, NTI2415919113)}, NTI2415919115);

  return result_2415919599;

}

function add_2415919621(cursor_2415919622, selection_2415919623) {
  var result_2415919624 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(cursor_2415919622, selection_2415919623.Field0)) {
    result_2415919624 = nimCopy(result_2415919624, cursor_2415919622, NTI2415919113);
    break BeforeRet;
    }
    
    if ((selection_2415919623.Field0.Field0 == selection_2415919623.Field1.Field0)) {
    if ((cursor_2415919622.Field0 == selection_2415919623.Field0.Field0)) {
    var colontmp__2801807326 = cursor_2415919622.Field0;
    var colontmp__2801807327 = addInt(cursor_2415919622.Field1, subInt(selection_2415919623.Field1.Field1, selection_2415919623.Field0.Field1));
    result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2801807326, Field1: colontmp__2801807327}, NTI2415919113);
    break BeforeRet;
    }
    else {
      result_2415919624 = nimCopy(result_2415919624, cursor_2415919622, NTI2415919113);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2415919622.Field0 == selection_2415919623.Field0.Field0)) {
    var colontmp__2801807328 = selection_2415919623.Field1.Field0;
    var colontmp__2801807329 = addInt(selection_2415919623.Field1.Field1, subInt(cursor_2415919622.Field1, selection_2415919623.Field0.Field1));
    result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2801807328, Field1: colontmp__2801807329}, NTI2415919113);
    break BeforeRet;
    }
    else {
      var colontmp__2801807330 = addInt(cursor_2415919622.Field0, subInt(selection_2415919623.Field1.Field0, selection_2415919623.Field0.Field0));
      var colontmp__2801807331 = cursor_2415919622.Field1;
      result_2415919624 = nimCopy(result_2415919624, {Field0: colontmp__2801807330, Field1: colontmp__2801807331}, NTI2415919113);
      break BeforeRet;
    }
    }
  };

  return result_2415919624;

}

function add_2415919629(self_2415919630, other_2415919631) {
  var result_2415919632 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2801807324 = add_2415919621(self_2415919630.Field0, other_2415919631);
    var colontmp__2801807325 = add_2415919621(self_2415919630.Field1, other_2415919631);
    result_2415919632 = nimCopy(result_2415919632, {Field0: nimCopy(null, colontmp__2801807324, NTI2415919113), Field1: nimCopy(null, colontmp__2801807325, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919632;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2801807333 = 0;
      colontmp__2801807333 = (a_855639591).length - 1;
      var res_2801807334 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801807334 <= colontmp__2801807333)) break Label3;
            i_855639608 = res_2801807334;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2801807334 = addInt(res_2801807334, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2801807337 = 0;
      colontmp__2801807337 = (a_855639591).length - 1;
      var res_2801807338 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2801807338 <= colontmp__2801807337)) break Label6;
            i_855639621 = res_2801807338;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2801807338 = addInt(res_2801807338, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2868904032(self_2868904034) {
  var result_2868904035 = false;

    result_2868904035 = !((self_2868904034.val == null));

  return result_2868904035;

}

function get_2868904023(self_2868904025, otherwise_2868904026) {
    var Temporary1;

  var result_2868904027 = null;

    if (isSome_2868904032(self_2868904025)) {
    Temporary1 = self_2868904025.val;
    }
    else {
    Temporary1 = otherwise_2868904026;
    }
    
    result_2868904027 = Temporary1;

  return result_2868904027;

}

function parseString_2868903995(self_2868903996, text_2868903997, oldTree_2868904009) {
  var result_2868904010 = null;

  BeforeRet: {
    result_2868904010 = self_2868903996.parse(toJSStr(text_2868903997), get_2868904023(oldTree_2868904009, null));
    break BeforeRet;
  };

  return result_2868904010;

}

function some_2801801878(val_2801801880) {
  var result_2801801881 = ({val: null});

    if (!(!((val_2801801880 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801801881.val = val_2801801880;

  return result_2801801881;

}

function invoke_2801802350(event_2801802352, arg_2801802353) {
    Label1: {
      var h_2801802376 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801807342 = 0;
      var L_2801807343 = (event_2801802352.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807342 < L_2801807343)) break Label3;
            h_2801802376 = event_2801802352.handlers[chckIndx(i_2801807342, 0, (event_2801802352.handlers).length - 1)];
            h_2801802376.Field1(arg_2801802353);
            i_2801807342 = addInt(i_2801807342, 1);
            if (!(((event_2801802352.handlers).length == L_2801807343))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2801796020(event_2801796022, arg_2801796023) {
    Label1: {
      var h_2801796046 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801807347 = 0;
      var L_2801807348 = (event_2801796022.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807347 < L_2801807348)) break Label3;
            h_2801796046 = event_2801796022.handlers[chckIndx(i_2801807347, 0, (event_2801796022.handlers).length - 1)];
            h_2801796046.Field1(arg_2801796023);
            i_2801807347 = addInt(i_2801807347, 1);
            if (!(((event_2801796022.handlers).length == L_2801807348))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2801796112(t_2801796115) {
    Label1: {
      var i_2801796173 = 0;
      var colontmp__2801807351 = 0;
      colontmp__2801807351 = (t_2801796115.data).length;
      var i_2801807352 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807352 < colontmp__2801807351)) break Label3;
            i_2801796173 = i_2801807352;
            t_2801796115.data[chckIndx(i_2801796173, 0, (t_2801796115.data).length - 1)].Field0 = 0;
            t_2801796115.data[chckIndx(i_2801796173, 0, (t_2801796115.data).length - 1)].Field1 = 0;
            t_2801796115.data[chckIndx(i_2801796173, 0, (t_2801796115.data).length - 1)].Field2 = null;
            i_2801807352 = addInt(i_2801807352, 1);
          }
      };
    };
    t_2801796115.counter = 0;

  
}

function notifyTextChanged_2801795996(self_2801795997) {
    invoke_2801796020(self_2801795997.textChanged, self_2801795997);
    clear_2801796112(self_2801795997.styledTextCache);

  
}

function insert_2801802194(self_2801802195, selections_2801802196, oldSelection_2801802197, text_2801802198, notify_2801802199, record_2801802200, autoIndent_2801802201) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2801802202 = [];

    var newEmptyLines_2801802203 = [];
    result_2801802202 = nimCopy(null, clampAndMergeSelections_2801795492(self_2801802195, selections_2801802196), NTI2415919123);
    var undoOp_2801802211 = {kind: 2, children: [], oldSelection: HEX40_2801801704(oldSelection_2801802197), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2801802217 = 0;
      var selection_2801802218 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801807286 = 0;
      var L_2801807287 = (result_2801802202).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807286 < L_2801807287)) break Label3;
            i_2801802217 = i_2801807286;
            selection_2801802218 = nimCopy(selection_2801802218, result_2801802202[chckIndx(i_2801807286, 0, (result_2801802202).length - 1)], NTI2415919115);
            var oldCursor_2801802219 = nimCopy(null, selection_2801802218.Field1, NTI2415919113);
            var cursor_2801802220 = nimCopy(null, selection_2801802218.Field1, NTI2415919113);
            var startByte_2801802221 = byteOffset_2801801684(self_2801802195, cursor_2801802220);
            var lineCounter_2801802222 = 0;
            if (self_2801802195.singleLine) {
            var text_2801802223 = nsuReplaceStr(text_2801802198, [10], [32]);
            if (((self_2801802195.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2801802223, NTI33554449);
            self_2801802195.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2801802195.lines, chckIndx(0, 0, (self_2801802195.lines).length - 1), text_2801802223, chckRange(cursor_2801802220.Field1, 0, 2147483647));
            }
            
            cursor_2801802220.Field1 = addInt(cursor_2801802220.Field1, (text_2801802223).length);
            }
            else {
              Label5: {
                var line_2801802235 = [];
                var first_2801807275 = 0;
                var last_2801807276 = 0;
                var eolpos_2801807277 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2801807276 < (text_2801802198).length) && !((ConstSet23[text_2801802198[chckIndx(last_2801807276, 0, (text_2801802198).length - 1)]] != undefined)))) break Label9;
                            last_2801807276 = addInt(last_2801807276, 1);
                          }
                      };
                      eolpos_2801807277 = last_2801807276;
                      if ((last_2801807276 < (text_2801802198).length)) {
                      if ((text_2801802198[chckIndx(last_2801807276, 0, (text_2801802198).length - 1)] == 10)) {
                      last_2801807276 = addInt(last_2801807276, 1);
                      }
                      else {
                      if ((text_2801802198[chckIndx(last_2801807276, 0, (text_2801802198).length - 1)] == 13)) {
                      last_2801807276 = addInt(last_2801807276, 1);
                      if (((last_2801807276 < (text_2801802198).length) && (text_2801802198[chckIndx(last_2801807276, 0, (text_2801802198).length - 1)] == 10))) {
                      last_2801807276 = addInt(last_2801807276, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2801807276, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2801807277, 1);
                      }
                      
                      line_2801802235 = substr_33557821(text_2801802198, first_2801807275, Temporary10);
                      try {
                      if ((0 < lineCounter_2801802222)) {
                      insert_2801802259(self_2801802195, "lines", HEX5BHEX5D_855639319(self_2801802195.lines[chckIndx(cursor_2801802220.Field0, 0, (self_2801802195.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2801802220.Field1, 1)), chckRange(addInt(cursor_2801802220.Field0, 1), 0, 2147483647));
                      newEmptyLines_2801802203.push(addInt(cursor_2801802220.Field0, 1));;
                      if ((cursor_2801802220.Field1 < lineLength_2801795445(self_2801802195, cursor_2801802220.Field0))) {
                      delete_855639365(self_2801802195.lines, chckIndx(cursor_2801802220.Field0, 0, (self_2801802195.lines).length - 1), HEX2EHEX2E_805306418(cursor_2801802220.Field1, subInt(lineLength_2801795445(self_2801802195, cursor_2801802220.Field0), 1)));
                      }
                      
                      var colontmp__2801807271 = addInt(cursor_2801802220.Field0, 1);
                      var colontmp__2801807272 = 0;
                      cursor_2801802220 = nimCopy(cursor_2801802220, {Field0: colontmp__2801807271, Field1: colontmp__2801807272}, NTI2415919113);
                      }
                      
                      if ((0 < (line_2801802235).length)) {
                      insert_33557745(self_2801802195.lines, chckIndx(cursor_2801802220.Field0, 0, (self_2801802195.lines).length - 1), line_2801802235, chckRange(cursor_2801802220.Field1, 0, 2147483647));
                      cursor_2801802220.Field1 = addInt(cursor_2801802220.Field1, (line_2801802235).length);
                      }
                      
                      if ((eolpos_2801807277 == last_2801807276)) {
                      break Label6;
                      }
                      
                      first_2801807275 = last_2801807276;
                      } finally {
                      lineCounter_2801802222 = addInt(lineCounter_2801802222, 1);
                      }
                    }
                };
              };
            }
            
            result_2801802202[chckIndx(i_2801802217, 0, (result_2801802202).length - 1)] = nimCopy(result_2801802202[chckIndx(i_2801802217, 0, (result_2801802202).length - 1)], toSelection_2415919597(cursor_2801802220), NTI2415919115);
            Label12: {
              var k_2801802310 = 0;
              var colontmp__2801807281 = 0;
              var colontmp__2801807282 = 0;
              colontmp__2801807281 = addInt(i_2801802217, 1);
              colontmp__2801807282 = (result_2801802202).length - 1;
              var res_2801807283 = colontmp__2801807281;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2801807283 <= colontmp__2801807282)) break Label14;
                    k_2801802310 = res_2801807283;
                    result_2801802202[chckIndx(k_2801802310, 0, (result_2801802202).length - 1)] = nimCopy(result_2801802202[chckIndx(k_2801802310, 0, (result_2801802202).length - 1)], add_2415919629(result_2801802202[chckIndx(k_2801802310, 0, (result_2801802202).length - 1)], {Field0: nimCopy(null, oldCursor_2801802219, NTI2415919113), Field1: nimCopy(null, cursor_2801802220, NTI2415919113)}), NTI2415919115);
                    res_2801807283 = addInt(res_2801807283, 1);
                  }
              };
            };
            if (!((self_2801802195.tsParser == null))) {
            var edit_2801802314 = {startIndex: startByte_2801802221, oldEndIndex: startByte_2801802221, newEndIndex: addInt(startByte_2801802221, (text_2801802198).length), startPosition: {row: oldCursor_2801802219.Field0, column: oldCursor_2801802219.Field1, m_type: NTI2868903950}, oldEndPosition: {row: oldCursor_2801802219.Field0, column: oldCursor_2801802219.Field1, m_type: NTI2868903950}, newEndPosition: {row: cursor_2801802220.Field0, column: cursor_2801802220.Field1, m_type: NTI2868903950}, m_type: NTI2868903960};
            var _ = self_2801802195.currentTree.edit(edit_2801802314);
            var strValue_2801802315 = nsuJoinSep(self_2801802195.lines, [10]);
            self_2801802195.currentTree = parseString_2868903995(self_2801802195.tsParser, strValue_2801802315, some_2801801878(self_2801802195.currentTree));
            }
            
            self_2801802195.version = addInt(self_2801802195.version, 1);
            if (record_2801802200) {
            var Temporary15 = undoOp_2801802211;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2801795075)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2801802219, NTI2415919113), Field1: nimCopy(null, cursor_2801802220, NTI2415919113)}, NTI2415919115), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2801802199) {
            invoke_2801802350(self_2801802195.textInserted, {Field0: self_2801802195, Field1: nimCopy(null, oldCursor_2801802219, NTI2415919113), Field2: nimCopy(null, text_2801802198, NTI33554449)});
            }
            
            i_2801807286 = addInt(i_2801807286, 1);
            if (!(((result_2801802202).length == L_2801807287))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2801802199) {
    notifyTextChanged_2801795996(self_2801802195);
    }
    
      if (!record_2801802200) Temporary16 = false; else {        var Temporary17 = undoOp_2801802211;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2801795075)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2801802195.undoOps.push(undoOp_2801802211);;
    self_2801802195.redoOps = nimCopy(null, [], NTI2801798616);
    }
    

  return result_2801802202;

}

function selections_2801795574(self_2801795575) {
  var result_2801795576 = [];

    result_2801795576 = nimCopy(null, self_2801795575.selectionsInternal, NTI2415919123);

  return result_2801795576;

}

function insert_2801806859(self_2801806860, selections_2801806861, text_2801806862, notify_2801806863, record_2801806864, autoIndent_2801806865) {
  var result_2801806866 = [];

  BeforeRet: {
    result_2801806866 = nimCopy(null, insert_2801802194(self_2801806860.document, selections_2801806861, selections_2801795574(self_2801806860), text_2801806862, notify_2801806863, record_2801806864, autoIndent_2801806865), NTI2801798942);
    break BeforeRet;
  };

  return result_2801806866;

}

function insertJsWrapper_2801806855(self_2801806900, selections_2801806901, text_2801806902, notify_2801806903, record_2801806904, autoIndent_2801806905) {
  var result_2801806906 = [];

    result_2801806906 = nimCopy(null, insert_2801806859(self_2801806900, selections_2801806901, text_2801806902, notify_2801806903, record_2801806904, autoIndent_2801806905), NTI2801801661);

  return result_2801806906;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2801806855(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2415919476(selection_2415919477) {
  var result_2415919478 = false;

    result_2415919478 = HEX3DHEX3D_2415919177(selection_2415919477.Field0, selection_2415919477.Field1);

  return result_2415919478;

}

function HEX3E_2415919435(a_2415919436, b_2415919437) {
  var result_2415919438 = false;

  BeforeRet: {
    if ((b_2415919437.Field0 < a_2415919436.Field0)) {
    result_2415919438 = true;
    break BeforeRet;
    }
    else {
    if (((a_2415919436.Field0 == b_2415919437.Field0) && (b_2415919437.Field1 < a_2415919436.Field1))) {
    result_2415919438 = true;
    break BeforeRet;
    }
    else {
      result_2415919438 = false;
      break BeforeRet;
    }
    }
  };

  return result_2415919438;

}

function isBackwards_2415919467(selection_2415919468) {
  var result_2415919469 = false;

  BeforeRet: {
    result_2415919469 = HEX3E_2415919435(selection_2415919468.Field0, selection_2415919468.Field1);
    break BeforeRet;
  };

  return result_2415919469;

}

function normalized_2415919470(selection_2415919471) {
  var result_2415919472 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2415919467(selection_2415919471)) {
    var colontmp__2801807445 = nimCopy(null, selection_2415919471.Field1, NTI2415919113);
    var colontmp__2801807446 = nimCopy(null, selection_2415919471.Field0, NTI2415919113);
    result_2415919472 = nimCopy(result_2415919472, {Field0: nimCopy(null, colontmp__2801807445, NTI2415919113), Field1: nimCopy(null, colontmp__2801807446, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    }
    else {
      result_2415919472 = nimCopy(result_2415919472, selection_2415919471, NTI2415919115);
      break BeforeRet;
    }
    
  };

  return result_2415919472;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2801807453 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807453 < L_855639300)) break Label3;
            i_855639305 = i_2801807453;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2801807453 = addInt(i_2801807453, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2801796773(self_2801796774, selection_2801796775) {
  var result_2801796776 = [];

  BeforeRet: {
    var colontmp__2801807451 = normalized_2415919470(selection_2801796775);
    var first_2801796777 = nimCopy(null, colontmp__2801807451["Field0"], NTI2415919113);
    var last_2801796778 = nimCopy(null, colontmp__2801807451["Field1"], NTI2415919113);
    if ((first_2801796777.Field0 == last_2801796778.Field0)) {
    result_2801796776 = nimCopy(null, HEX5BHEX5D_855639291(self_2801796774.lines[chckIndx(first_2801796777.Field0, 0, (self_2801796774.lines).length - 1)], HEX2EHEX2E_805306418(first_2801796777.Field1, subInt(last_2801796778.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2801796776 = nimCopy(null, HEX5BHEX5D_855639319(self_2801796774.lines[chckIndx(first_2801796777.Field0, 0, (self_2801796774.lines).length - 1)], HEX2EHEX2E_1040187488(first_2801796777.Field1, 1)), NTI33554449);
    Label1: {
      var i_2801796825 = 0;
      var colontmp__2801807448 = 0;
      colontmp__2801807448 = addInt(first_2801796777.Field0, 1);
      var i_2801807449 = colontmp__2801807448;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807449 < last_2801796778.Field0)) break Label3;
            i_2801796825 = i_2801807449;
            result_2801796776.push.apply(result_2801796776, [10]);;
            result_2801796776.push.apply(result_2801796776, self_2801796774.lines[chckIndx(i_2801796825, 0, (self_2801796774.lines).length - 1)]);;
            i_2801807449 = addInt(i_2801807449, 1);
          }
      };
    };
    result_2801796776.push.apply(result_2801796776, [10]);;
    result_2801796776.push.apply(result_2801796776, HEX5BHEX5D_855639291(self_2801796774.lines[chckIndx(last_2801796778.Field0, 0, (self_2801796774.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2801796778.Field1, 1))));;
  };

  return result_2801796776;

}

function delete_2801801813(s_2801801815, s_2801801815_Idx, slice_2801801816) {
    if (!((((slice_2801801816.a < (s_2801801815[s_2801801815_Idx]).length) && (0 <= slice_2801801816.a)) && (slice_2801801816.b < (s_2801801815[s_2801801815_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2801801816, NTI805306392), Field1: (s_2801801815[s_2801801815_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2801801816.a <= slice_2801801816.b)) {
    var n_2801801863 = addInt(subInt(slice_2801801816.b, slice_2801801816.a), 1);
    var first_2801801864 = slice_2801801816.a;
    s_2801801815[s_2801801815_Idx].splice(first_2801801864, n_2801801863);
    }
    

  
}

function subtract_2415919605(cursor_2415919606, selection_2415919607) {
  var result_2415919608 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(cursor_2415919606, selection_2415919607.Field0)) {
    result_2415919608 = nimCopy(result_2415919608, cursor_2415919606, NTI2415919113);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2415919447(cursor_2415919606, selection_2415919607.Field1)) {
    result_2415919608 = nimCopy(result_2415919608, selection_2415919607.Field0, NTI2415919113);
    break BeforeRet;
    }
    
    if ((cursor_2415919606.Field0 == selection_2415919607.Field1.Field0)) {
    if ((selection_2415919607.Field0.Field0 == selection_2415919607.Field1.Field0)) {
    var colontmp__2801807459 = cursor_2415919606.Field0;
    var colontmp__2801807460 = subInt(cursor_2415919606.Field1, subInt(selection_2415919607.Field1.Field1, selection_2415919607.Field0.Field1));
    result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2801807459, Field1: colontmp__2801807460}, NTI2415919113);
    break BeforeRet;
    }
    else {
      var colontmp__2801807461 = selection_2415919607.Field0.Field0;
      var colontmp__2801807462 = addInt(selection_2415919607.Field0.Field1, subInt(cursor_2415919606.Field1, selection_2415919607.Field1.Field1));
      result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2801807461, Field1: colontmp__2801807462}, NTI2415919113);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2801807463 = subInt(cursor_2415919606.Field0, subInt(selection_2415919607.Field1.Field0, selection_2415919607.Field0.Field0));
    var colontmp__2801807464 = cursor_2415919606.Field1;
    result_2415919608 = nimCopy(result_2415919608, {Field0: colontmp__2801807463, Field1: colontmp__2801807464}, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919608;

}

function subtract_2415919617(self_2415919618, other_2415919619) {
  var result_2415919620 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2801807457 = subtract_2415919605(self_2415919618.Field0, other_2415919619);
    var colontmp__2801807458 = subtract_2415919605(self_2415919618.Field1, other_2415919619);
    result_2415919620 = nimCopy(result_2415919620, {Field0: nimCopy(null, colontmp__2801807457, NTI2415919113), Field1: nimCopy(null, colontmp__2801807458, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919620;

}

function invoke_2801801922(event_2801801924, arg_2801801925) {
    Label1: {
      var h_2801801948 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801807467 = 0;
      var L_2801807468 = (event_2801801924.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807467 < L_2801807468)) break Label3;
            h_2801801948 = event_2801801924.handlers[chckIndx(i_2801807467, 0, (event_2801801924.handlers).length - 1)];
            h_2801801948.Field1(arg_2801801925);
            i_2801807467 = addInt(i_2801807467, 1);
            if (!(((event_2801801924.handlers).length == L_2801807468))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2801801697(self_2801801698, selections_2801801699, oldSelection_2801801700, notify_2801801701, record_2801801702) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2801801703 = [];

    result_2801801703 = nimCopy(null, clampAndMergeSelections_2801795492(self_2801801698, selections_2801801699), NTI2415919123);
    var undoOp_2801801727 = {kind: 2, children: [], oldSelection: HEX40_2801801704(oldSelection_2801801700), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2801801760 = 0;
      var selection_2801801761 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801807442 = 0;
      var L_2801807443 = (result_2801801703).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807442 < L_2801807443)) break Label3;
            i_2801801760 = i_2801807442;
            selection_2801801761 = nimCopy(selection_2801801761, result_2801801703[chckIndx(i_2801807442, 0, (result_2801801703).length - 1)], NTI2415919115);
            Label4: {
              if (isEmpty_2415919476(selection_2801801761)) {
              break Label4;
              }
              
              var selection_2801801762 = normalized_2415919470(selection_2801801761);
              var startByte_2801801763 = byteOffset_2801801684(self_2801801698, selection_2801801762.Field0);
              var endByte_2801801764 = byteOffset_2801801684(self_2801801698, selection_2801801762.Field1);
              var deletedText_2801801765 = contentString_2801796773(self_2801801698, selection_2801801762);
              var colontmp__2801807455 = normalized_2415919470(selection_2801801762);
              var first_2801801766 = nimCopy(null, colontmp__2801807455["Field0"], NTI2415919113);
              var last_2801801767 = nimCopy(null, colontmp__2801807455["Field1"], NTI2415919113);
              if ((first_2801801766.Field0 == last_2801801767.Field0)) {
              delete_855639365(self_2801801698.lines, chckIndx(last_2801801767.Field0, 0, (self_2801801698.lines).length - 1), HEX2EHEX2E_805306418(first_2801801766.Field1, subInt(last_2801801767.Field1, 1)));
              }
              else {
                if ((first_2801801766.Field1 < lineLength_2801795445(self_2801801698, first_2801801766.Field0))) {
                delete_855639365(self_2801801698.lines, chckIndx(first_2801801766.Field0, 0, (self_2801801698.lines).length - 1), HEX2EHEX2E_805306418(first_2801801766.Field1, subInt(lineLength_2801795445(self_2801801698, first_2801801766.Field0), 1)));
                }
                
                self_2801801698.lines[chckIndx(first_2801801766.Field0, 0, (self_2801801698.lines).length - 1)].push.apply(self_2801801698.lines[chckIndx(first_2801801766.Field0, 0, (self_2801801698.lines).length - 1)], HEX5BHEX5D_855639319(self_2801801698.lines[chckIndx(last_2801801767.Field0, 0, (self_2801801698.lines).length - 1)], HEX2EHEX2E_1040187488(last_2801801767.Field1, 1)));;
                delete_2801801813(self_2801801698, "lines", HEX2EHEX2E_805306418(addInt(first_2801801766.Field0, 1), last_2801801767.Field0));
              }
              
              result_2801801703[chckIndx(i_2801801760, 0, (result_2801801703).length - 1)] = nimCopy(result_2801801703[chckIndx(i_2801801760, 0, (result_2801801703).length - 1)], toSelection_2415919597(selection_2801801762.Field0), NTI2415919115);
              Label5: {
                var k_2801801872 = 0;
                var colontmp__2801807438 = 0;
                var colontmp__2801807439 = 0;
                colontmp__2801807438 = addInt(i_2801801760, 1);
                colontmp__2801807439 = (result_2801801703).length - 1;
                var res_2801807440 = colontmp__2801807438;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2801807440 <= colontmp__2801807439)) break Label7;
                      k_2801801872 = res_2801807440;
                      result_2801801703[chckIndx(k_2801801872, 0, (result_2801801703).length - 1)] = nimCopy(result_2801801703[chckIndx(k_2801801872, 0, (result_2801801703).length - 1)], subtract_2415919617(result_2801801703[chckIndx(k_2801801872, 0, (result_2801801703).length - 1)], selection_2801801762), NTI2415919115);
                      res_2801807440 = addInt(res_2801807440, 1);
                    }
                };
              };
              if (!((self_2801801698.tsParser == null))) {
              var edit_2801801876 = {startIndex: startByte_2801801763, oldEndIndex: endByte_2801801764, newEndIndex: startByte_2801801763, startPosition: {row: selection_2801801762.Field0.Field0, column: selection_2801801762.Field0.Field1, m_type: NTI2868903950}, oldEndPosition: {row: selection_2801801762.Field1.Field0, column: selection_2801801762.Field1.Field1, m_type: NTI2868903950}, newEndPosition: {row: selection_2801801762.Field0.Field0, column: selection_2801801762.Field0.Field1, m_type: NTI2868903950}, m_type: NTI2868903960};
              var _ = self_2801801698.currentTree.edit(edit_2801801876);
              var strValue_2801801877 = nsuJoinSep(self_2801801698.lines, [10]);
              self_2801801698.currentTree = parseString_2868903995(self_2801801698.tsParser, strValue_2801801877, some_2801801878(self_2801801698.currentTree));
              }
              
              self_2801801698.version = addInt(self_2801801698.version, 1);
              if (record_2801801702) {
              var Temporary8 = undoOp_2801801727;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2801795075)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2801801762.Field0, NTI2415919113), text: nimCopy(null, deletedText_2801801765, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2801801701) {
              invoke_2801801922(self_2801801698.textDeleted, {Field0: self_2801801698, Field1: nimCopy(null, selection_2801801762, NTI2415919115)});
              }
              
            };
            i_2801807442 = addInt(i_2801807442, 1);
            if (!(((result_2801801703).length == L_2801807443))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2801801701) {
    notifyTextChanged_2801795996(self_2801801698);
    }
    
      if (!record_2801801702) Temporary9 = false; else {        var Temporary10 = undoOp_2801801727;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2801795075)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2801801698.undoOps.push(undoOp_2801801727);;
    self_2801801698.redoOps = nimCopy(null, [], NTI2801798616);
    }
    

  return result_2801801703;

}

function delete_2801807360(self_2801807361, selections_2801807362, notify_2801807363, record_2801807364) {
  var result_2801807365 = [];

  BeforeRet: {
    result_2801807365 = nimCopy(null, delete_2801801697(self_2801807361.document, selections_2801807362, selections_2801795574(self_2801807361), notify_2801807363, record_2801807364), NTI2801798587);
    break BeforeRet;
  };

  return result_2801807365;

}

function deleteJsWrapper_2801807356(self_2801807397, selections_2801807398, notify_2801807399, record_2801807400) {
  var result_2801807401 = [];

    result_2801807401 = nimCopy(null, delete_2801807360(self_2801807397, selections_2801807398, notify_2801807399, record_2801807400), NTI2801802177);

  return result_2801807401;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2801807356(this, selections_, notify_, record_));};

function popLast_2801807587(deq_2801807589) {
    var Temporary1;

  var result_2801807590 = [];

    if ((deq_2801807589.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2801807589.count = subInt(deq_2801807589.count, 1);
    deq_2801807589.tail = (subInt(deq_2801807589.tail, 1) & deq_2801807589.mask);
    Temporary1 = deq_2801807589.data[chckIndx(deq_2801807589.tail, 0, (deq_2801807589.data).length - 1)];
    deq_2801807589.data[chckIndx(deq_2801807589.tail, 0, (deq_2801807589.data).length - 1)] = genericReset(deq_2801807589.data[chckIndx(deq_2801807589.tail, 0, (deq_2801807589.data).length - 1)], NTI2415919123);
    result_2801807590 = nimCopy(null, Temporary1, NTI2415919123);

  return result_2801807590;

}

function addFirst_2801807606(deq_2801807608, item_2801807609) {
    expandIfNeeded_2801795607(deq_2801807608);
    deq_2801807608.count = addInt(deq_2801807608.count, 1);
    deq_2801807608.head = (subInt(deq_2801807608.head, 1) & deq_2801807608.mask);
    deq_2801807608.data[chckIndx(deq_2801807608.head, 0, (deq_2801807608.data).length - 1)] = nimCopy(null, item_2801807609, NTI2415919123);

  
}

function totalLineHeight_2499805351(self_2499805352) {
  var result_2499805353 = 0.0;

    result_2499805353 = (lineHeight_2499805338(self_2499805352) + lineDistance_2499805333(self_2499805352));

  return result_2499805353;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2801805695(editor_2801805697, path_2801805698, default_2801805699) {
  var result_2801805705 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2801805697 == null)) {
      result_2801805705 = default_2801805699;
      break BeforeRet;
      }
      
      var nodeHEX60gensym163_2801805718 = HEX7BHEX7D_1627393316(editor_2801805697.options, nsuSplitString(path_2801805698, [46], -1));
      if ((nodeHEX60gensym163_2801805718 == null)) {
      result_2801805705 = default_2801805699;
      break BeforeRet;
      }
      
    };
    result_2801805705 = getFloat_1627390140(nodeHEX60gensym163_2801805718, default_2801805699);
    break BeforeRet;
  };

  return result_2801805705;

}

function clamp_2634023065(x_2634023067, a_2634023068, b_2634023069) {
  var result_2634023070 = 0.0;

  BeforeRet: {
    if ((x_2634023067 < a_2634023068)) {
    result_2634023070 = a_2634023068;
    break BeforeRet;
    }
    
    if ((b_2634023069 < x_2634023067)) {
    result_2634023070 = b_2634023069;
    break BeforeRet;
    }
    
    result_2634023070 = x_2634023067;
    break BeforeRet;
  };

  return result_2634023070;

}

function scrollToCursor_2801805687(self_2801805688, cursor_2801805689, keepVerticalOffset_2801805690) {
    var Temporary1;

    var targetLine_2801805691 = cursor_2801805689.Field0;
    if (!((self_2801805688.editor.platform == null))) {
    Temporary1 = totalLineHeight_2499805351(self_2801805688.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2499805338(self_2801805688.editor.platform) + getOption_2801805695(self_2801805688.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2801805722 = Temporary1;
    if (keepVerticalOffset_2801805690) {
    var currentLineY_2801805723 = ((subInt(selection_2801795577(self_2801805688).Field1.Field0, self_2801805688.previousBaseIndex) * totalLineHeight_2801805722) + self_2801805688.scrollOffset);
    self_2801805688.previousBaseIndex = targetLine_2801805691;
    self_2801805688.scrollOffset = currentLineY_2801805723;
    }
    else {
      var targetLineY_2801805724 = ((subInt(targetLine_2801805691, self_2801805688.previousBaseIndex) * totalLineHeight_2801805722) + self_2801805688.scrollOffset);
      var margin_2801805739 = clamp_2634023065(getOption_2801805695(self_2801805688.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2801805688.lastContentBounds.h * 0.5) - (totalLineHeight_2801805722 * 0.5)));
      if ((targetLineY_2801805724 < margin_2801805739)) {
      self_2801805688.scrollOffset = margin_2801805739;
      self_2801805688.previousBaseIndex = targetLine_2801805691;
      }
      else {
      if (((self_2801805688.lastContentBounds.h - margin_2801805739) < (targetLineY_2801805724 + totalLineHeight_2801805722))) {
      self_2801805688.scrollOffset = ((self_2801805688.lastContentBounds.h - margin_2801805739) - totalLineHeight_2801805722);
      self_2801805688.previousBaseIndex = targetLine_2801805691;
      }
      }
    }
    
    markDirty_2382364710(self_2801805688);

  
}

function selectPrev_2801807476(self_2801807477) {
    if ((0 < len_2801795737(self_2801807477.selectionHistory))) {
    var selection_2801807600 = popLast_2801807587(self_2801807477.selectionHistory);
    addFirst_2801807606(self_2801807477.selectionHistory, selections_2801795574(self_2801807477));
    self_2801807477.selectionsInternal = nimCopy(null, selection_2801807600, NTI2415919123);
    }
    
    scrollToCursor_2801805687(self_2801807477, selection_2801795577(self_2801807477).Field1, false);

  
}

function selectPrevJsWrapper_2801807472(self_2801807650) {
    selectPrev_2801807476(self_2801807650);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2801807472(this));};

function selectNext_2801807672(self_2801807673) {
    if ((0 < len_2801795737(self_2801807673.selectionHistory))) {
    var selection_2801807786 = popFirst_2801795798(self_2801807673.selectionHistory);
    addLast_2801795598(self_2801807673.selectionHistory, selections_2801795574(self_2801807673));
    self_2801807673.selectionsInternal = nimCopy(null, selection_2801807786, NTI2415919123);
    }
    
    scrollToCursor_2801805687(self_2801807673, selection_2801795577(self_2801807673).Field1, false);

  
}

function selectNextJsWrapper_2801807668(self_2801807823) {
    selectNext_2801807672(self_2801807823);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2801807668(this));};

function re_2835349563(text_2835349564) {
  var result_2835349565 = ({impl: null});

  BeforeRet: {
    result_2835349565 = nimCopy(result_2835349565, {impl: new RegExp(toJSStr(text_2835349564), "dg")}, NTI2835349507);
    break BeforeRet;
  };

  return result_2835349565;

}

function matchLen_2835349540(text_2835349541, regex_2835349542, start_2835349543) {
  var result_2835349544 = 0;

    regex_2835349542.impl.lastIndex = 0;
    result_2835349544 = ((regex_2835349542.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2835349541, HEX2EHEX2E_1040187488(start_2835349543, 1))))) || {index:-1}).index;

  return result_2835349544;

}

function selectInside_2801807844(self_2801807845, cursor_2801807846) {
    var regex_2801807847 = re_2835349563([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2801807848 = cursor_2801807846.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2801807848) && (matchLen_2835349540(self_2801807845.document.lines[chckIndx(cursor_2801807846.Field0, 0, (self_2801807845.document.lines).length - 1)], regex_2801807847, subInt(first_2801807848, 1)) == 1))) break Label2;
          first_2801807848 = subInt(first_2801807848, 1);
        }
    };
    var last_2801807853 = cursor_2801807846.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2801807853 < (self_2801807845.document.lines[chckIndx(cursor_2801807846.Field0, 0, (self_2801807845.document.lines).length - 1)]).length) && (matchLen_2835349540(self_2801807845.document.lines[chckIndx(cursor_2801807846.Field0, 0, (self_2801807845.document.lines).length - 1)], regex_2801807847, last_2801807853) == 1))) break Label4;
          last_2801807853 = addInt(last_2801807853, 1);
        }
    };
    selectionHEX3D_2801795583(self_2801807845, {Field0: {Field0: cursor_2801807846.Field0, Field1: first_2801807848}, Field1: {Field0: cursor_2801807846.Field0, Field1: last_2801807853}});

  
}

function selectInsideJsWrapper_2801807840(self_2801807886, cursor_2801807887) {
    selectInside_2801807844(self_2801807886, cursor_2801807887);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2801807840(this, cursor_));};

function selectInsideCurrent_2801807921(self_2801807922) {
    selectInside_2801807844(self_2801807922, selection_2801795577(self_2801807922).Field1);

  
}

function selectInsideCurrentJsWrapper_2801807917(self_2801807950) {
    selectInsideCurrent_2801807921(self_2801807950);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2801807917(this));};

function lineLength_2801795452(self_2801795453, line_2801795454) {
  var result_2801795455 = 0;

  BeforeRet: {
    if ((line_2801795454 < (self_2801795453.document.lines).length)) {
    result_2801795455 = (self_2801795453.document.lines[chckIndx(line_2801795454, 0, (self_2801795453.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2801795455 = 0;
    break BeforeRet;
  };

  return result_2801795455;

}

function selectLine_2801807971(self_2801807972, line_2801807973) {
    selectionHEX3D_2801795583(self_2801807972, {Field0: {Field0: line_2801807973, Field1: 0}, Field1: {Field0: line_2801807973, Field1: lineLength_2801795452(self_2801807972, line_2801807973)}});

  
}

function selectLineJsWrapper_2801807967(self_2801808002, line_2801808003) {
    selectLine_2801807971(self_2801808002, line_2801808003);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2801807967(this, line_));};

function selectLineCurrent_2801808029(self_2801808030) {
    selectLine_2801807971(self_2801808030, selection_2801795577(self_2801808030).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2801808025(self_2801808058) {
    selectLineCurrent_2801808029(self_2801808058);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2801808025(this));};

function toTsPoint_2868904123(cursor_2868904124) {
  var result_2868904125 = null;

    result_2868904125 = {row: cursor_2868904124.Field0, column: cursor_2868904124.Field1, m_type: NTI2868903950};

  return result_2868904125;

}

function descendantForRange_2868904189(node_2868904190, selection_2868904191) {
  var result_2868904192 = null;

    result_2868904192 = node_2868904190.descendantForPosition(toTsPoint_2868904123(selection_2868904191.Field0), toTsPoint_2868904123(selection_2868904191.Field1));

  return result_2868904192;

}

function startPoint_2868904112(node_2868904113) {
  var result_2868904114 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2868904115 = node_2868904113.startPosition;
    var colontmp__2801808152 = point_2868904115.row;
    var colontmp__2801808153 = point_2868904115.column;
    result_2868904114 = nimCopy(result_2868904114, {Field0: colontmp__2801808152, Field1: colontmp__2801808153}, NTI2415919113);
    break BeforeRet;
  };

  return result_2868904114;

}

function endPoint_2868904116(node_2868904117) {
  var result_2868904118 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2868904119 = node_2868904117.endPosition;
    var colontmp__2801808154 = point_2868904119.row;
    var colontmp__2801808155 = point_2868904119.column;
    result_2868904118 = nimCopy(result_2868904118, {Field0: colontmp__2801808154, Field1: colontmp__2801808155}, NTI2415919113);
    break BeforeRet;
  };

  return result_2868904118;

}

function getRange_2868904120(node_2868904121) {
  var result_2868904122 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801808150 = startPoint_2868904112(node_2868904121);
    var colontmp__2801808151 = endPoint_2868904116(node_2868904121);
    result_2868904122 = nimCopy(result_2868904122, {Field0: nimCopy(null, colontmp__2801808150, NTI2415919113), Field1: nimCopy(null, colontmp__2801808151, NTI2415919113)}, NTI2415919115);

  return result_2868904122;

}

function selectParentTs_2801808079(self_2801808080, selection_2801808081) {
  BeforeRet: {
    if ((self_2801808080.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2801808085 = descendantForRange_2868904189(self_2801808080.document.currentTree.rootNode, selection_2801808081);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2415919167(getRange_2868904120(node_2801808085), selection_2801808081) && !((node_2801808085 == self_2801808080.document.currentTree.rootNode)))) break Label2;
          node_2801808085 = node_2801808085.parent;
        }
    };
    selectionHEX3D_2801795583(self_2801808080, getRange_2868904120(node_2801808085));
  };

  
}

function selectParentTsJsWrapper_2801808075(self_2801808122, selection_2801808123) {
    selectParentTs_2801808079(self_2801808122, selection_2801808123);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2801808075(this, selection_));};

function selectParentCurrentTs_2801808162(self_2801808163) {
    selectParentTs_2801808079(self_2801808163, selection_2801795577(self_2801808163));

  
}

function selectParentCurrentTsJsWrapper_2801808158(self_2801808191) {
    selectParentCurrentTs_2801808162(self_2801808191);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2801808158(this));};

function newSeq_2415919250(len_2415919252) {
  var result_2415919253 = [];

    result_2415919253 = new Array(len_2415919252); for (var i = 0 ; i < len_2415919252 ; ++i) { result_2415919253[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2415919253;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2415919279(a_2415919281, b_2415919282, lo_2415919283, m_2415919284, hi_2415919285, cmp_2415919288, order_2415919289) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2415919288(a_2415919281[chckIndx(m_2415919284, 0, (a_2415919281).length - 1)], a_2415919281[chckIndx(addInt(m_2415919284, 1), 0, (a_2415919281).length - 1)]), order_2415919289) <= 0)) {
    break BeforeRet;
    }
    
    var j_2415919290 = lo_2415919283;
    if (!((j_2415919290 <= m_2415919284))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2415919296 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2415919290 <= m_2415919284)) break Label2;
          b_2415919282[chckIndx(bb_2415919296, 0, (b_2415919282).length - 1)] = nimCopy(b_2415919282[chckIndx(bb_2415919296, 0, (b_2415919282).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)], NTI2415919115);
          bb_2415919296 = addInt(bb_2415919296, 1);
          j_2415919290 = addInt(j_2415919290, 1);
        }
    };
    var i_2415919307 = 0;
    var k_2415919308 = lo_2415919283;
    Label3: {
        Label4: while (true) {
        if (!((k_2415919308 < j_2415919290) && (j_2415919290 <= hi_2415919285))) break Label4;
          if ((HEX2A_1023410184(cmp_2415919288(b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)]), order_2415919289) <= 0)) {
          a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], NTI2415919115);
          i_2415919307 = addInt(i_2415919307, 1);
          }
          else {
            a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], a_2415919281[chckIndx(j_2415919290, 0, (a_2415919281).length - 1)], NTI2415919115);
            j_2415919290 = addInt(j_2415919290, 1);
          }
          
          k_2415919308 = addInt(k_2415919308, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2415919308 < j_2415919290)) break Label6;
          a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)] = nimCopy(a_2415919281[chckIndx(k_2415919308, 0, (a_2415919281).length - 1)], b_2415919282[chckIndx(i_2415919307, 0, (b_2415919282).length - 1)], NTI2415919115);
          k_2415919308 = addInt(k_2415919308, 1);
          i_2415919307 = addInt(i_2415919307, 1);
        }
    };
  };

  
}

function sort_2415919238(a_2415919240, cmp_2415919243, order_2415919244) {
    var n_2415919249 = (a_2415919240).length;
    var b_2415919276 = newSeq_2415919250(chckRange(divInt(n_2415919249, 2), 0, 2147483647));
    var s_2415919277 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2415919277 < n_2415919249)) break Label2;
          var m_2415919278 = subInt(subInt(n_2415919249, 1), s_2415919277);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2415919278)) break Label4;
                mergeAlt_2415919279(a_2415919240, b_2415919276, nimMax(addInt(subInt(m_2415919278, s_2415919277), 1), 0), m_2415919278, addInt(m_2415919278, s_2415919277), cmp_2415919243, order_2415919244);
                m_2415919278 = subInt(m_2415919278, mulInt(s_2415919277, 2));
              }
          };
          s_2415919277 = mulInt(s_2415919277, 2);
        }
    };

  
}

function sorted_2415919380(a_2415919382, cmp_2415919385, order_2415919386) {
  var result_2415919387 = [];

    result_2415919387 = nimCopy(null, newSeq_2415919250(chckRange((a_2415919382).length, 0, 2147483647)), NTI2415919163);
    Label1: {
      var i_2415919401 = 0;
      var colontmp__2801808269 = 0;
      colontmp__2801808269 = (a_2415919382).length - 1;
      var res_2801808270 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801808270 <= colontmp__2801808269)) break Label3;
            i_2415919401 = res_2801808270;
            result_2415919387[chckIndx(i_2415919401, 0, (result_2415919387).length - 1)] = nimCopy(result_2415919387[chckIndx(i_2415919401, 0, (result_2415919387).length - 1)], a_2415919382[chckIndx(i_2415919401, 0, (a_2415919382).length - 1)], NTI2415919115);
            res_2801808270 = addInt(res_2801808270, 1);
          }
      };
    };
    sort_2415919238(result_2415919387, cmp_2415919385, order_2415919386);

  return result_2415919387;

}

function HEX3C_2415919210(x_2415919212, y_2415919213) {
  var result_2415919214 = false;

  BeforeRet: {
    var c_2415919224 = cmp_33557727(x_2415919212["Field0"], y_2415919213["Field0"]);
    if ((c_2415919224 < 0)) {
    result_2415919214 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919224)) {
    result_2415919214 = false;
    break BeforeRet;
    }
    
    var c_2415919229 = cmp_33557727(x_2415919212["Field1"], y_2415919213["Field1"]);
    if ((c_2415919229 < 0)) {
    result_2415919214 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919229)) {
    result_2415919214 = false;
    break BeforeRet;
    }
    
    result_2415919214 = false;
    break BeforeRet;
  };

  return result_2415919214;

}

function cmp_2415919201(x_2415919203, y_2415919204) {
  var result_2415919205 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2415919177(x_2415919203, y_2415919204)) {
    result_2415919205 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2415919210(x_2415919203, y_2415919204)) {
    result_2415919205 = -1;
    break BeforeRet;
    }
    
    result_2415919205 = 1;
    break BeforeRet;
  };

  return result_2415919205;

}

function HEX3C_2415919191(x_2415919193, y_2415919194) {
  var result_2415919195 = false;

  BeforeRet: {
    var c_2415919230 = cmp_2415919201(x_2415919193["Field0"], y_2415919194["Field0"]);
    if ((c_2415919230 < 0)) {
    result_2415919195 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919230)) {
    result_2415919195 = false;
    break BeforeRet;
    }
    
    var c_2415919235 = cmp_2415919201(x_2415919193["Field1"], y_2415919194["Field1"]);
    if ((c_2415919235 < 0)) {
    result_2415919195 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2415919235)) {
    result_2415919195 = false;
    break BeforeRet;
    }
    
    result_2415919195 = false;
    break BeforeRet;
  };

  return result_2415919195;

}

function cmp_2415919162(x_2415919164, y_2415919165) {
  var result_2415919166 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2415919167(x_2415919164, y_2415919165)) {
    result_2415919166 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2415919191(x_2415919164, y_2415919165)) {
    result_2415919166 = -1;
    break BeforeRet;
    }
    
    result_2415919166 = 1;
    break BeforeRet;
  };

  return result_2415919166;

}

function sorted_2415919369(a_2415919371, order_2415919372) {
  var result_2415919373 = [];

    result_2415919373 = nimCopy(null, sorted_2415919380(a_2415919371, cmp_2415919162, order_2415919372), NTI2415919243);

  return result_2415919373;

}

function normalized_2415919366(self_2415919367) {
  var result_2415919368 = [];

  BeforeRet: {
    result_2415919368 = nimCopy(null, sorted_2415919369(self_2415919367, 1), NTI2415919234);
    break BeforeRet;
  };

  return result_2415919368;

}

function HEX3DHEX3D_2801795836(x_2801795838, y_2801795839) {
  var result_2801795840 = false;

  BeforeRet: {
    var sameObject_2801795847 = false;
    sameObject_2801795847 = x_2801795838 === y_2801795839
    if (sameObject_2801795847) {
    result_2801795840 = true;
    break BeforeRet;
    }
    
    if (!(((x_2801795838).length == (y_2801795839).length))) {
    result_2801795840 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2801795861 = 0;
      var colontmp__2801808278 = 0;
      colontmp__2801808278 = subInt((x_2801795838).length, 1);
      var res_2801808279 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801808279 <= colontmp__2801808278)) break Label3;
            i_2801795861 = res_2801808279;
            if (!(HEX3DHEX3D_2415919167(x_2801795838[chckIndx(i_2801795861, 0, (x_2801795838).length - 1)], y_2801795839[chckIndx(i_2801795861, 0, (y_2801795839).length - 1)]))) {
            result_2801795840 = false;
            break BeforeRet;
            }
            
            res_2801808279 = addInt(res_2801808279, 1);
          }
      };
    };
    result_2801795840 = true;
    break BeforeRet;
  };

  return result_2801795840;

}

function clampAndMergeSelections_2801795570(self_2801795571, selections_2801795572) {
  var result_2801795573 = [];

    result_2801795573 = nimCopy(null, clampAndMergeSelections_2801795492(self_2801795571.document, selections_2801795572), NTI2415919123);

  return result_2801795573;

}

function selectionsHEX3D_2801795833(self_2801795834, selections_2801795835) {
  BeforeRet: {
    if (HEX3DHEX3D_2801795836(self_2801795834.selectionsInternal, selections_2801795835)) {
    break BeforeRet;
    }
    
    addLast_2801795598(self_2801795834.selectionHistory, self_2801795834.selectionsInternal);
    if ((100 < len_2801795737(self_2801795834.selectionHistory))) {
    var _ = popFirst_2801795798(self_2801795834.selectionHistory);
    }
    
    self_2801795834.selectionsInternal = nimCopy(null, clampAndMergeSelections_2801795570(self_2801795834, selections_2801795835), NTI2415919123);
    if (((self_2801795834.selectionsInternal).length == 0)) {
    self_2801795834.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2415919597({Field0: 0, Field1: 0}), NTI2415919115)], NTI2801795588);
    }
    
    markDirty_2382364710(self_2801795834);
  };

  
}

function edit_2801802411(self_2801802412, selections_2801802413, oldSelection_2801802414, text_2801802415, notify_2801802416) {
    
function HEX3Aanonymous_2801802418(s_2801802426) {
      var result_2801802429 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801802429 = nimCopy(result_2801802429, normalized_2415919470(s_2801802426), NTI2415919115);

      return result_2801802429;

    }

  var result_2801802417 = [];

    var selections_2801802437 = map_2801795507(selections_2801802413, HEX3Aanonymous_2801802418);
    result_2801802417 = nimCopy(null, delete_2801801697(self_2801802412, selections_2801802437, oldSelection_2801802414, false, true), NTI2801798587);
    result_2801802417 = nimCopy(null, insert_2801802194(self_2801802412, result_2801802417, oldSelection_2801802414, text_2801802415, true, true, true), NTI2801798942);

  return result_2801802417;

}

function insertText_2801808215(self_2801808216, text_2801808217) {
  BeforeRet: {
    if ((self_2801808216.document.singleLine && eqStrings(text_2801808217, [10]))) {
    break BeforeRet;
    }
    
    var selections_2801808218 = normalized_2415919366(selections_2801795574(self_2801808216));
    selectionsHEX3D_2801795833(self_2801808216, edit_2801802411(self_2801808216.document, selections_2801795574(self_2801808216), selections_2801795574(self_2801808216), text_2801808217, true));
    updateTargetColumn_2801806679(self_2801808216, 3);
    if ((eqStrings(text_2801808217, [46]) || eqStrings(text_2801808217, [44]))) {
    self_2801808216.showCompletions = true;
    var _ = getCompletionsAsync_2801808206(self_2801808216);
    }
    else {
    if (self_2801808216.showCompletions) {
    var _ = getCompletionsAsync_2801808206(self_2801808216);
    }
    }
  };

  
}

function insertTextJsWrapper_2801808211(self_2801808247, text_2801808248) {
    insertText_2801808215(self_2801808247, text_2801808248);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2801808211(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2801802506() {
  var result_2801802513 = ({val: [], has: false});

  return result_2801802513;

}

function pop_2801802517(s_2801802519, s_2801802519_Idx) {
  var result_2801802520 = null;

    var L_2801802524 = subInt((s_2801802519[s_2801802519_Idx]).length, 1);
    result_2801802520 = s_2801802519[s_2801802519_Idx][chckIndx(L_2801802524, 0, (s_2801802519[s_2801802519_Idx]).length - 1)];
    if (s_2801802519[s_2801802519_Idx].length < chckRange(L_2801802524, 0, 2147483647)) { for (var i = s_2801802519[s_2801802519_Idx].length ; i < chckRange(L_2801802524, 0, 2147483647) ; ++i) s_2801802519[s_2801802519_Idx].push(null); }
               else { s_2801802519[s_2801802519_Idx].length = chckRange(L_2801802524, 0, 2147483647); };

  return result_2801802520;

}

function some_2801802530(val_2801802532) {
  var result_2801802533 = ({val: [], has: false});

    result_2801802533.has = true;
    result_2801802533.val = nimCopy(null, val_2801802532, NTI2801799127);

  return result_2801802533;

}

function doUndo_2801802447(document_2801802448, op_2801802449, oldSelection_2801802450, useOldSelection_2801802451, redoOps_2801802452, redoOps_2801802452_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2801802453 = [];

    switch (op_2801802449.kind) {
    case 0:
      var Temporary1 = op_2801802449;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2801795075)); }
      var text_2801802454 = contentString_2801796773(document_2801802448, Temporary1.selection);
      var Temporary2 = op_2801802449;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2801795075)); }
      result_2801802453 = nimCopy(null, delete_2801801697(document_2801802448, [nimCopy(null, Temporary2.selection, NTI2415919115)], op_2801802449.oldSelection, true, false), NTI2801798587);
      var Temporary3 = op_2801802449;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2801795075)); }
      redoOps_2801802452[redoOps_2801802452_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2415919113), text: nimCopy(null, text_2801802454, NTI33554449), oldSelection: HEX40_2801801704(oldSelection_2801802450), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2801802449;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2801795075)); }
      var Temporary5 = op_2801802449;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2801795075)); }
      var selections_2801802462 = insert_2801802194(document_2801802448, [nimCopy(null, toSelection_2415919597(Temporary4.cursor), NTI2415919115)], op_2801802449.oldSelection, Temporary5.text, true, false, false);
      result_2801802453 = nimCopy(null, selections_2801802462, NTI2801798942);
      var Temporary6 = op_2801802449;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2801795075)); }
      redoOps_2801802452[redoOps_2801802452_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2415919113), Field1: nimCopy(null, selections_2801802462[chckIndx(0, 0, (selections_2801802462).length - 1)].Field1, NTI2415919113)}, NTI2415919115), oldSelection: HEX40_2801801704(oldSelection_2801802450), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2801802453 = nimCopy(null, op_2801802449.oldSelection, NTI2801795079);
      var redoOp_2801802473 = {kind: 2, oldSelection: HEX40_2801801704(oldSelection_2801802450), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2801802482 = 0;
        var colontmp__2801808380 = 0;
        var Temporary8 = op_2801802449;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2801795075)); }
        colontmp__2801808380 = (Temporary8.children).length - 1;
        var res_2801808381 = colontmp__2801808380;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2801808381)) break Label10;
              i_2801802482 = res_2801808381;
              var Temporary11 = op_2801802449;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2801795075)); }
              var Temporary13 = redoOp_2801802473;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2801795075)); }
              var _ = doUndo_2801802447(document_2801802448, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2801802482, 0, (Temporary12).length - 1)], oldSelection_2801802450, useOldSelection_2801802451, Temporary13, "children");
              res_2801808381 = subInt(res_2801808381, 1);
            }
        };
      };
      redoOps_2801802452[redoOps_2801802452_Idx].push(redoOp_2801802473);;
      break;
    }
    if (useOldSelection_2801802451) {
    result_2801802453 = nimCopy(null, op_2801802449.oldSelection, NTI2801795079);
    }
    

  return result_2801802453;

}

function undo_2801802496(document_2801802497, oldSelection_2801802498, useOldSelection_2801802499) {
  var result_2801802505 = ({val: [], has: false});

  BeforeRet: {
    result_2801802505 = nimCopy(result_2801802505, none_2801802506(), NTI2801799202);
    if (((document_2801802497.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2801802529 = pop_2801802517(document_2801802497, "undoOps");
    result_2801802505 = nimCopy(result_2801802505, some_2801802530(doUndo_2801802447(document_2801802497, op_2801802529, oldSelection_2801802498, useOldSelection_2801802499, document_2801802497, "redoOps")), NTI2801799202);
    break BeforeRet;
  };

  return result_2801802505;

}

function isSome_2801808296(self_2801808298) {
  var result_2801808299 = false;

    result_2801808299 = self_2801808298.has;

  return result_2801808299;

}

function isNone_2801808321(self_2801808323) {
  var result_2801808324 = false;

    result_2801808324 = !(self_2801808323.has);

  return result_2801808324;

}

function get_2801808313(self_2801808315) {
  var result_2801808316 = [];

    if (isNone_2801808321(self_2801808315)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801808316 = self_2801808315["val"];

  return result_2801808316;

}

function undo_2801808287(self_2801808288) {
      var Temporary1;

      var oHEX60gensym376_2801808291 = undo_2801802496(self_2801808288.document, selections_2801795574(self_2801808288), true);
      if (!isSome_2801808296(oHEX60gensym376_2801808291)) Temporary1 = false; else {        var selections_2801808336 = nimCopy(null, get_2801808313(oHEX60gensym376_2801808291), NTI2801799197);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2801795833(self_2801808288, selections_2801808336);
    }
    

  
}

function undoJsWrapper_2801808283(self_2801808364) {
    undo_2801808287(self_2801808364);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2801808283(this));};

function doRedo_2801802544(document_2801802545, op_2801802546, oldSelection_2801802547, useOldSelection_2801802548, undoOps_2801802549, undoOps_2801802549_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2801802550 = [];

    switch (op_2801802546.kind) {
    case 0:
      var Temporary1 = op_2801802546;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2801795075)); }
      var text_2801802551 = contentString_2801796773(document_2801802545, Temporary1.selection);
      var Temporary2 = op_2801802546;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2801795075)); }
      result_2801802550 = nimCopy(null, delete_2801801697(document_2801802545, [nimCopy(null, Temporary2.selection, NTI2415919115)], op_2801802546.oldSelection, true, false), NTI2801798587);
      var Temporary3 = op_2801802546;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2801795075)); }
      undoOps_2801802549[undoOps_2801802549_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2415919113), text: nimCopy(null, text_2801802551, NTI33554449), oldSelection: HEX40_2801801704(oldSelection_2801802547), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2801802546;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2801795075)); }
      var Temporary5 = op_2801802546;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2801795075)); }
      var Temporary6 = op_2801802546;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2801795075)); }
      result_2801802550 = nimCopy(null, insert_2801802194(document_2801802545, [nimCopy(null, toSelection_2415919597(Temporary4.cursor), NTI2415919115)], [nimCopy(null, toSelection_2415919597(Temporary5.cursor), NTI2415919115)], Temporary6.text, true, false, false), NTI2801798942);
      var Temporary7 = op_2801802546;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2801795075)); }
      undoOps_2801802549[undoOps_2801802549_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2415919113), Field1: nimCopy(null, result_2801802550[chckIndx(0, 0, (result_2801802550).length - 1)].Field1, NTI2415919113)}, NTI2415919115), oldSelection: HEX40_2801801704(oldSelection_2801802547), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2801802550 = nimCopy(null, op_2801802546.oldSelection, NTI2801795079);
      var undoOp_2801802569 = {kind: 2, oldSelection: HEX40_2801801704(oldSelection_2801802547), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2801802578 = 0;
        var colontmp__2801808460 = 0;
        var Temporary9 = op_2801802546;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2801795075)); }
        colontmp__2801808460 = (Temporary9.children).length - 1;
        var res_2801808461 = colontmp__2801808460;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2801808461)) break Label11;
              i_2801802578 = res_2801808461;
              var Temporary12 = op_2801802546;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2801795075)); }
              var Temporary14 = undoOp_2801802569;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2801795075)); }
              var _ = doRedo_2801802544(document_2801802545, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2801802578, 0, (Temporary13).length - 1)], oldSelection_2801802547, useOldSelection_2801802548, Temporary14, "children");
              res_2801808461 = subInt(res_2801808461, 1);
            }
        };
      };
      undoOps_2801802549[undoOps_2801802549_Idx].push(undoOp_2801802569);;
      break;
    }
    if (useOldSelection_2801802548) {
    result_2801802550 = nimCopy(null, op_2801802546.oldSelection, NTI2801795079);
    }
    

  return result_2801802550;

}

function redo_2801802583(document_2801802584, oldSelection_2801802585, useOldSelection_2801802586) {
  var result_2801802588 = ({val: [], has: false});

  BeforeRet: {
    result_2801802588 = nimCopy(result_2801802588, none_2801802506(), NTI2801799202);
    if (((document_2801802584.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2801802602 = pop_2801802517(document_2801802584, "redoOps");
    result_2801802588 = nimCopy(result_2801802588, some_2801802530(doRedo_2801802544(document_2801802584, op_2801802602, oldSelection_2801802585, useOldSelection_2801802586, document_2801802584, "undoOps")), NTI2801799202);
    break BeforeRet;
  };

  return result_2801802588;

}

function redo_2801808389(self_2801808390) {
      var Temporary1;

      var oHEX60gensym386_2801808393 = redo_2801802583(self_2801808390.document, selections_2801795574(self_2801808390), true);
      if (!isSome_2801808296(oHEX60gensym386_2801808393)) Temporary1 = false; else {        var selections_2801808416 = nimCopy(null, get_2801808313(oHEX60gensym386_2801808393), NTI2801799197);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2801795833(self_2801808390, selections_2801808416);
    }
    

  
}

function redoJsWrapper_2801808385(self_2801808444) {
    redo_2801808389(self_2801808444);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2801808385(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2801808469(self_2801808470, amount_2801808471) {
    HEX2BHEX3D_855640304(self_2801808470, "scrollOffset", amount_2801808471);
    markDirty_2382364710(self_2801808470);

  
}

function scrollTextJsWrapper_2801808465(self_2801808504, amount_2801808505) {
    scrollText_2801808469(self_2801808504, amount_2801808505);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2801808465(this, amount_));};

function clampCursor_2801795480(self_2801795481, cursor_2801795482) {
  var result_2801795483 = {Field0: 0, Field1: 0};

    result_2801795483 = nimCopy(result_2801795483, clampCursor_2801795459(self_2801795481.document, cursor_2801795482), NTI2415919113);

  return result_2801795483;

}

function doMoveCursorColumn_2801805636(self_2801805637, cursor_2801805638, offset_2801805639) {
  var result_2801805640 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801805641 = nimCopy(null, cursor_2801805638, NTI2415919113);
    var column_2801805642 = addInt(cursor_2801805641.Field1, offset_2801805639);
    if ((column_2801805642 < 0)) {
    if ((0 < cursor_2801805641.Field0)) {
    cursor_2801805641.Field0 = subInt(cursor_2801805641.Field0, 1);
    cursor_2801805641.Field1 = lineLength_2801795452(self_2801805637, cursor_2801805641.Field0);
    }
    else {
      cursor_2801805641.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2801795452(self_2801805637, cursor_2801805641.Field0) < column_2801805642)) {
    if ((cursor_2801805641.Field0 < subInt((self_2801805637.document.lines).length, 1))) {
    cursor_2801805641.Field0 = addInt(cursor_2801805641.Field0, 1);
    cursor_2801805641.Field1 = 0;
    }
    else {
      cursor_2801805641.Field1 = lineLength_2801795452(self_2801805637, cursor_2801805641.Field0);
    }
    
    }
    else {
      cursor_2801805641.Field1 = column_2801805642;
    }
    }
    result_2801805640 = nimCopy(result_2801805640, clampCursor_2801795480(self_2801805637, cursor_2801805641), NTI2415919113);
    break BeforeRet;
  };

  return result_2801805640;

}

function HEX26_2801808599(x_2801808601, y_2801808602) {
  var result_2801808603 = [];

    result_2801808603 = new Array(chckRange(addInt((x_2801808601).length, (y_2801808602).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2801808601).length, (y_2801808602).length), 0, 2147483647) ; ++i) { result_2801808603[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801808621 = 0;
      var colontmp__2801808676 = 0;
      colontmp__2801808676 = subInt((x_2801808601).length, 1);
      var res_2801808677 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801808677 <= colontmp__2801808676)) break Label3;
            i_2801808621 = res_2801808677;
            result_2801808603[chckIndx(i_2801808621, 0, (result_2801808603).length - 1)] = nimCopy(result_2801808603[chckIndx(i_2801808621, 0, (result_2801808603).length - 1)], x_2801808601[chckIndx(i_2801808621, 0, (x_2801808601).length - 1)], NTI2415919115);
            res_2801808677 = addInt(res_2801808677, 1);
          }
      };
    };
    Label4: {
      var i_2801808629 = 0;
      var colontmp__2801808680 = 0;
      colontmp__2801808680 = subInt((y_2801808602).length, 1);
      var res_2801808681 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2801808681 <= colontmp__2801808680)) break Label6;
            i_2801808629 = res_2801808681;
            result_2801808603[chckIndx(addInt(i_2801808629, (x_2801808601).length), 0, (result_2801808603).length - 1)] = nimCopy(result_2801808603[chckIndx(addInt(i_2801808629, (x_2801808601).length), 0, (result_2801808603).length - 1)], y_2801808602[chckIndx(i_2801808629, 0, (y_2801808602).length - 1)], NTI2415919115);
            res_2801808681 = addInt(res_2801808681, 1);
          }
      };
    };

  return result_2801808603;

}

function duplicateLastSelection_2801808589(self_2801808590) {
    var Temporary1;

    var newSelection_2801808594 = toSelection_2415919597(doMoveCursorColumn_2801805636(self_2801808590, (Temporary1 = selections_2801795574(self_2801808590), Temporary1)[chckIndx((selections_2801795574(self_2801808590)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2801795833(self_2801808590, HEX26_2801808599(selections_2801795574(self_2801808590), [nimCopy(null, newSelection_2801808594, NTI2415919115)]));

  
}

function duplicateLastSelectionJsWrapper_2801808585(self_2801808660) {
    duplicateLastSelection_2801808589(self_2801808660);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2801808585(this));};

function doMoveCursorLine_2801805646(self_2801805647, cursor_2801805648, offset_2801805649) {
  var result_2801805650 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801805651 = nimCopy(null, cursor_2801805648, NTI2415919113);
    var line_2801805652 = addInt(cursor_2801805651.Field0, offset_2801805649);
    if ((line_2801805652 < 0)) {
    var colontmp__2801808745 = 0;
    var colontmp__2801808746 = cursor_2801805651.Field1;
    cursor_2801805651 = nimCopy(cursor_2801805651, {Field0: colontmp__2801808745, Field1: colontmp__2801808746}, NTI2415919113);
    }
    else {
    if (((self_2801805647.document.lines).length <= line_2801805652)) {
    var colontmp__2801808747 = subInt((self_2801805647.document.lines).length, 1);
    var colontmp__2801808748 = cursor_2801805651.Field1;
    cursor_2801805651 = nimCopy(cursor_2801805651, {Field0: colontmp__2801808747, Field1: colontmp__2801808748}, NTI2415919113);
    }
    else {
      cursor_2801805651.Field0 = line_2801805652;
      cursor_2801805651.Field1 = self_2801805647.targetColumn;
    }
    }
    result_2801805650 = nimCopy(result_2801805650, clampCursor_2801795480(self_2801805647, cursor_2801805651), NTI2415919113);
    break BeforeRet;
  };

  return result_2801805650;

}

function addCursorBelow_2801808689(self_2801808690) {
    var Temporary1;

    var newCursor_2801808694 = toSelection_2415919597(doMoveCursorLine_2801805646(self_2801808690, (Temporary1 = selections_2801795574(self_2801808690), Temporary1)[chckIndx((selections_2801795574(self_2801808690)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2415919574(selections_2801795574(self_2801808690), newCursor_2801808694))) {
    selectionsHEX3D_2801795833(self_2801808690, HEX26_2801808599(selections_2801795574(self_2801808690), [nimCopy(null, newCursor_2801808694, NTI2415919115)]));
    }
    

  
}

function addCursorBelowJsWrapper_2801808685(self_2801808730) {
    addCursorBelow_2801808689(self_2801808730);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2801808685(this));};

function addCursorAbove_2801808755(self_2801808756) {
    var Temporary1;

    var newCursor_2801808760 = toSelection_2415919597(doMoveCursorLine_2801805646(self_2801808756, (Temporary1 = selections_2801795574(self_2801808756), Temporary1)[chckIndx((selections_2801795574(self_2801808756)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2415919574(selections_2801795574(self_2801808756), newCursor_2801808760))) {
    selectionsHEX3D_2801795833(self_2801808756, HEX26_2801808599(selections_2801795574(self_2801808756), [nimCopy(null, newCursor_2801808760, NTI2415919115)]));
    }
    

  
}

function addCursorAboveJsWrapper_2801808751(self_2801808796) {
    addCursorAbove_2801808755(self_2801808796);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2801808751(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2801803390(t_2801803393, key_2801803394, hc_2801803395, hc_2801803395_Idx) {
  var result_2801803396 = 0;

  BeforeRet: {
    hc_2801803395[hc_2801803395_Idx] = hash_1325400236(key_2801803394);
    if ((hc_2801803395[hc_2801803395_Idx] == 0)) {
    hc_2801803395[hc_2801803395_Idx] = 314159265;
    }
    
    if (((t_2801803393.data).length == 0)) {
    result_2801803396 = -1;
    break BeforeRet;
    }
    
    var h_2801803455 = (hc_2801803395[hc_2801803395_Idx] & (t_2801803393.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801803393.data[chckIndx(h_2801803455, 0, (t_2801803393.data).length - 1)].Field0)) break Label2;
          if (((t_2801803393.data[chckIndx(h_2801803455, 0, (t_2801803393.data).length - 1)].Field0 == hc_2801803395[hc_2801803395_Idx]) && (t_2801803393.data[chckIndx(h_2801803455, 0, (t_2801803393.data).length - 1)].Field1 == key_2801803394))) {
          result_2801803396 = h_2801803455;
          break BeforeRet;
          }
          
          h_2801803455 = nextTry_1308622883(h_2801803455, (t_2801803393.data).length - 1);
        }
    };
    result_2801803396 = subInt(-1, h_2801803455);
  };

  return result_2801803396;

}

function hasKey_2801808882(t_2801808885, key_2801808886) {
  var result_2801808887 = false;

    var hc_2801808888 = [0];
    result_2801808887 = (0 <= rawGet_2801803390(t_2801808885, key_2801808886, hc_2801808888, 0));

  return result_2801808887;

}

function contains_2801808876(t_2801808879, key_2801808880) {
  var result_2801808881 = false;

  BeforeRet: {
    result_2801808881 = hasKey_2801808882(t_2801808879, key_2801808880);
    break BeforeRet;
  };

  return result_2801808881;

}

function raiseKeyError_1291850857(key_1291850859) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850859) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2801808968(t_2801808971, key_2801808972) {
  var result_2801808973 = null;
  var result_2801808973_Idx = 0;

    var hcHEX60gensym22_2801808974 = [0];
    var indexHEX60gensym22_2801808981 = rawGet_2801803390(t_2801808971, key_2801808972, hcHEX60gensym22_2801808974, 0);
    if ((0 <= indexHEX60gensym22_2801808981)) {
    result_2801808973 = t_2801808971.data[chckIndx(indexHEX60gensym22_2801808981, 0, (t_2801808971.data).length - 1)]; result_2801808973_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_2801808972);
    }
    

  return [result_2801808973, result_2801808973_Idx];

}

function HEX3C_2415919431(a_2415919432, b_2415919433) {
  var result_2415919434 = false;

  BeforeRet: {
    if ((a_2415919432.Field0 < b_2415919433.Field0)) {
    result_2415919434 = true;
    break BeforeRet;
    }
    else {
    if (((a_2415919432.Field0 == b_2415919433.Field0) && (a_2415919432.Field1 < b_2415919433.Field1))) {
    result_2415919434 = true;
    break BeforeRet;
    }
    else {
      result_2415919434 = false;
      break BeforeRet;
    }
    }
  };

  return result_2415919434;

}

function getPrevFindResult_2801805669(self_2801805670, cursor_2801805671, offset_2801805672) {
            var Temporary4;

  var result_2801808821 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2801808822 = 0;
    Label1: {
      var line_2801808828 = 0;
      var res_2801809140 = cursor_2801805671.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2801809140)) break Label3;
            line_2801808828 = res_2801809140;
            if (contains_2801808876(self_2801805670.searchResults, line_2801808828)) {
            var selections_2801809058 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2801808968(self_2801805670.searchResults, line_2801808828), Temporary4)[0][Temporary4[1]], NTI2801795319);
            Label5: {
              var k_2801809067 = 0;
              var colontmp__2801809137 = 0;
              colontmp__2801809137 = (selections_2801809058).length - 1;
              var res_2801809138 = colontmp__2801809137;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2801809138)) break Label7;
                    k_2801809067 = res_2801809138;
                    if (HEX3C_2415919431(selections_2801809058[chckIndx(k_2801809067, 0, (selections_2801809058).length - 1)].Field1, cursor_2801805671)) {
                    if ((i_2801808822 == offset_2801805672)) {
                    result_2801808821 = nimCopy(result_2801808821, selections_2801809058[chckIndx(k_2801809067, 0, (selections_2801809058).length - 1)], NTI2415919115);
                    break BeforeRet;
                    }
                    
                    i_2801808822 = addInt(i_2801808822, 1);
                    }
                    
                    res_2801809138 = subInt(res_2801809138, 1);
                  }
              };
            };
            }
            
            res_2801809140 = subInt(res_2801809140, 1);
          }
      };
    };
    result_2801808821 = nimCopy(result_2801808821, toSelection_2415919597(cursor_2801805671), NTI2415919115);
    break BeforeRet;
  };

  return result_2801808821;

}

function getPrevFindResultJsWrapper_2801808813(self_2801809103, cursor_2801809104, offset_2801809105) {
  var result_2801809106 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801809106 = nimCopy(result_2801809106, getPrevFindResult_2801805669(self_2801809103, cursor_2801809104, offset_2801809105), NTI2415919115);

  return result_2801809106;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2801808813(this, cursor_, offset_));};

function getNextFindResult_2801805673(self_2801805674, cursor_2801805675, offset_2801805676) {
              var Temporary5;

  var result_2801809153 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2801809154 = 0;
    Label1: {
      var line_2801809162 = 0;
      var colontmp__2801809371 = 0;
      colontmp__2801809371 = (self_2801805674.document.lines).length - 1;
      var res_2801809372 = cursor_2801805675.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801809372 <= colontmp__2801809371)) break Label3;
            line_2801809162 = res_2801809372;
            if (contains_2801808876(self_2801805674.searchResults, line_2801809162)) {
            Label4: {
              var selection_2801809296 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2801809366 = [];
              colontmp__2801809366 = (Temporary5 = HEX5BHEX5D_2801808968(self_2801805674.searchResults, line_2801809162), Temporary5)[0][Temporary5[1]];
              var i_2801809368 = 0;
              var L_2801809369 = (colontmp__2801809366).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2801809368 < L_2801809369)) break Label7;
                    selection_2801809296 = colontmp__2801809366[chckIndx(i_2801809368, 0, (colontmp__2801809366).length - 1)];
                    if (HEX3C_2415919431(cursor_2801805675, selection_2801809296.Field0)) {
                    if ((i_2801809154 == offset_2801805676)) {
                    result_2801809153 = nimCopy(result_2801809153, selection_2801809296, NTI2415919115);
                    break BeforeRet;
                    }
                    
                    i_2801809154 = addInt(i_2801809154, 1);
                    }
                    
                    i_2801809368 = addInt(i_2801809368, 1);
                    if (!(((colontmp__2801809366).length == L_2801809369))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2801809372 = addInt(res_2801809372, 1);
          }
      };
    };
    result_2801809153 = nimCopy(result_2801809153, toSelection_2415919597(cursor_2801805675), NTI2415919115);
    break BeforeRet;
  };

  return result_2801809153;

}

function getNextFindResultJsWrapper_2801809145(self_2801809332, cursor_2801809333, offset_2801809334) {
  var result_2801809335 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801809335 = nimCopy(result_2801809335, getNextFindResult_2801805673(self_2801809332, cursor_2801809333, offset_2801809334), NTI2415919115);

  return result_2801809335;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2801809145(this, cursor_, offset_));};

function addNextFindResultToSelection_2801809380(self_2801809381) {
    selectionsHEX3D_2801795833(self_2801809381, HEX26_2801808599(selections_2801795574(self_2801809381), [nimCopy(null, getNextFindResult_2801805673(self_2801809381, selection_2801795577(self_2801809381).Field1, 0), NTI2415919115)]));

  
}

function addNextFindResultToSelectionJsWrapper_2801809376(self_2801809417) {
    addNextFindResultToSelection_2801809380(self_2801809417);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2801809376(this));};

function addPrevFindResultToSelection_2801809438(self_2801809439) {
    selectionsHEX3D_2801795833(self_2801809439, HEX26_2801808599(selections_2801795574(self_2801809439), [nimCopy(null, getPrevFindResult_2801805669(self_2801809439, selection_2801795577(self_2801809439).Field0, 0), NTI2415919115)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2801809434(self_2801809475) {
    addPrevFindResultToSelection_2801809438(self_2801809475);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2801809434(this));};

function len_2801809556(t_2801809559) {
  var result_2801809560 = 0;

    result_2801809560 = t_2801809559.counter;

  return result_2801809560;

}

function setAllFindResultToSelection_2801809496(self_2801809497) {
    var selections_2801809502 = [];
    Label1: {
      var searchResults_2801809774 = [];
      var L_2801809843 = len_2801809556(self_2801809497.searchResults);
      Label2: {
        var h_2801809845 = 0;
        var colontmp__2801809846 = 0;
        colontmp__2801809846 = (self_2801809497.searchResults.data).length - 1;
        var res_2801809847 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2801809847 <= colontmp__2801809846)) break Label4;
              h_2801809845 = res_2801809847;
              if (isFilled_1308622880(self_2801809497.searchResults.data[chckIndx(h_2801809845, 0, (self_2801809497.searchResults.data).length - 1)].Field0)) {
              searchResults_2801809774 = self_2801809497.searchResults.data[chckIndx(h_2801809845, 0, (self_2801809497.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2801809778 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2801809836 = 0;
                var L_2801809837 = (searchResults_2801809774).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2801809836 < L_2801809837)) break Label7;
                      s_2801809778 = searchResults_2801809774[chckIndx(i_2801809836, 0, (searchResults_2801809774).length - 1)];
                      var Temporary8 = nimCopy(null, s_2801809778, NTI2415919115);
                      selections_2801809502.push(Temporary8);;
                      i_2801809836 = addInt(i_2801809836, 1);
                      if (!(((searchResults_2801809774).length == L_2801809837))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2801809556(self_2801809497.searchResults) == L_2801809843))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2801809847 = addInt(res_2801809847, 1);
            }
        };
      };
    };
    selectionsHEX3D_2801795833(self_2801809497, selections_2801809502);

  
}

function setAllFindResultToSelectionJsWrapper_2801809492(self_2801809819) {
    setAllFindResultToSelection_2801809496(self_2801809819);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2801809492(this));};

function map_2801805890(s_2801805893, op_2801805895) {
  var result_2801805896 = [];

    result_2801805896 = new Array(chckRange((s_2801805893).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2801805893).length, 0, 2147483647) ; ++i) { result_2801805896[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801805911 = 0;
      var colontmp__2801809954 = 0;
      colontmp__2801809954 = (s_2801805893).length;
      var i_2801809955 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801809955 < colontmp__2801809954)) break Label3;
            i_2801805911 = i_2801809955;
            result_2801805896[chckIndx(i_2801805911, 0, (result_2801805896).length - 1)] = nimCopy(result_2801805896[chckIndx(i_2801805911, 0, (result_2801805896).length - 1)], op_2801805895(s_2801805893[chckIndx(i_2801805911, 0, (s_2801805893).length - 1)]), NTI2801800858);
            i_2801809955 = addInt(i_2801809955, 1);
          }
      };
    };

  return result_2801805896;

}

function moveCursor_2801805835(self_2801805836, cursor_2801805837, movement_2801805842, offset_2801805843, all_2801805844) {
      
function HEX3Aanonymous_2801805855(s_2801805862) {
        var result_2801805865 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801805865 = nimCopy(result_2801805865, toSelection_2415919597(movement_2801805842(self_2801805836, s_2801805862.Field1, offset_2801805843)), NTI2415919115);

        return result_2801805865;

      }
      
function HEX3Aanonymous_2801805879(s_2801805886) {
        var result_2801805889 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801809941 = movement_2801805842(self_2801805836, s_2801805886.Field0, offset_2801805843);
          var colontmp__2801809942 = nimCopy(null, s_2801805886.Field1, NTI2415919113);
          result_2801805889 = nimCopy(result_2801805889, {Field0: nimCopy(null, colontmp__2801809941, NTI2415919113), Field1: nimCopy(null, colontmp__2801809942, NTI2415919113)}, NTI2801800858);

        return result_2801805889;

      }
      
function HEX3Aanonymous_2801805922(s_2801805929) {
        var result_2801805932 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801809945 = nimCopy(null, s_2801805929.Field0, NTI2415919113);
          var colontmp__2801809946 = movement_2801805842(self_2801805836, s_2801805929.Field1, offset_2801805843);
          result_2801805932 = nimCopy(result_2801805932, {Field0: nimCopy(null, colontmp__2801809945, NTI2415919113), Field1: nimCopy(null, colontmp__2801809946, NTI2415919113)}, NTI2801800900);

        return result_2801805932;

      }
      
function HEX3Aanonymous_2801805949(s_2801805956) {
        var result_2801805959 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801809949 = nimCopy(null, s_2801805956.Field1, NTI2415919113);
          var colontmp__2801809950 = movement_2801805842(self_2801805836, s_2801805956.Field1, offset_2801805843);
          result_2801805959 = nimCopy(result_2801805959, {Field0: nimCopy(null, colontmp__2801809949, NTI2415919113), Field1: nimCopy(null, colontmp__2801809950, NTI2415919113)}, NTI2801800932);

        return result_2801805959;

      }

    switch (cursor_2801805837) {
    case 0:
      var configCursor_2801805854 = getOption_2801805774(self_2801805836.editor, getContextWithMode_2801805740(self_2801805836, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2801805835(self_2801805836, configCursor_2801805854, movement_2801805842, offset_2801805843, all_2801805844);
      break;
    case 1:
      if (all_2801805844) {
      selectionsHEX3D_2801795833(self_2801805836, map_2801795507(selections_2801795574(self_2801805836), HEX3Aanonymous_2801805855));
      }
      else {
        var selections_2801805872 = selections_2801795574(self_2801805836);
        selections_2801805872[chckIndx((selections_2801805872).length - 1, 0, (selections_2801805872).length - 1)] = nimCopy(selections_2801805872[chckIndx((selections_2801805872).length - 1, 0, (selections_2801805872).length - 1)], toSelection_2415919597(movement_2801805842(self_2801805836, selections_2801805872[chckIndx((selections_2801805872).length - 1, 0, (selections_2801805872).length - 1)].Field1, offset_2801805843)), NTI2415919115);
        selectionsHEX3D_2801795833(self_2801805836, selections_2801805872);
      }
      
      scrollToCursor_2801805687(self_2801805836, selection_2801795577(self_2801805836).Field1, false);
      break;
    case 2:
      if (all_2801805844) {
      selectionsHEX3D_2801795833(self_2801805836, map_2801805890(selections_2801795574(self_2801805836), HEX3Aanonymous_2801805879));
      }
      else {
        var selections_2801805912 = selections_2801795574(self_2801805836);
        var colontmp__2801809943 = movement_2801805842(self_2801805836, selections_2801805912[chckIndx((selections_2801805912).length - 1, 0, (selections_2801805912).length - 1)].Field0, offset_2801805843);
        var colontmp__2801809944 = nimCopy(null, selections_2801805912[chckIndx((selections_2801805912).length - 1, 0, (selections_2801805912).length - 1)].Field1, NTI2415919113);
        selections_2801805912[chckIndx((selections_2801805912).length - 1, 0, (selections_2801805912).length - 1)] = nimCopy(selections_2801805912[chckIndx((selections_2801805912).length - 1, 0, (selections_2801805912).length - 1)], {Field0: nimCopy(null, colontmp__2801809943, NTI2415919113), Field1: nimCopy(null, colontmp__2801809944, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2801795833(self_2801805836, selections_2801805912);
      }
      
      scrollToCursor_2801805687(self_2801805836, selection_2801795577(self_2801805836).Field0, false);
      break;
    case 3:
      if (all_2801805844) {
      selectionsHEX3D_2801795833(self_2801805836, map_2801805890(selections_2801795574(self_2801805836), HEX3Aanonymous_2801805922));
      }
      else {
        var selections_2801805939 = selections_2801795574(self_2801805836);
        var colontmp__2801809947 = nimCopy(null, selections_2801805939[chckIndx((selections_2801805939).length - 1, 0, (selections_2801805939).length - 1)].Field0, NTI2415919113);
        var colontmp__2801809948 = movement_2801805842(self_2801805836, selections_2801805939[chckIndx((selections_2801805939).length - 1, 0, (selections_2801805939).length - 1)].Field1, offset_2801805843);
        selections_2801805939[chckIndx((selections_2801805939).length - 1, 0, (selections_2801805939).length - 1)] = nimCopy(selections_2801805939[chckIndx((selections_2801805939).length - 1, 0, (selections_2801805939).length - 1)], {Field0: nimCopy(null, colontmp__2801809947, NTI2415919113), Field1: nimCopy(null, colontmp__2801809948, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2801795833(self_2801805836, selections_2801805939);
      }
      
      scrollToCursor_2801805687(self_2801805836, selection_2801795577(self_2801805836).Field1, false);
      break;
    case 4:
      if (all_2801805844) {
      selectionsHEX3D_2801795833(self_2801805836, map_2801805890(selections_2801795574(self_2801805836), HEX3Aanonymous_2801805949));
      }
      else {
        var selections_2801805966 = selections_2801795574(self_2801805836);
        var colontmp__2801809951 = nimCopy(null, selections_2801805966[chckIndx((selections_2801805966).length - 1, 0, (selections_2801805966).length - 1)].Field1, NTI2415919113);
        var colontmp__2801809952 = movement_2801805842(self_2801805836, selections_2801805966[chckIndx((selections_2801805966).length - 1, 0, (selections_2801805966).length - 1)].Field1, offset_2801805843);
        selections_2801805966[chckIndx((selections_2801805966).length - 1, 0, (selections_2801805966).length - 1)] = nimCopy(selections_2801805966[chckIndx((selections_2801805966).length - 1, 0, (selections_2801805966).length - 1)], {Field0: nimCopy(null, colontmp__2801809951, NTI2415919113), Field1: nimCopy(null, colontmp__2801809952, NTI2415919113)}, NTI2415919115);
        selectionsHEX3D_2801795833(self_2801805836, selections_2801805966);
      }
      
      scrollToCursor_2801805687(self_2801805836, selection_2801795577(self_2801805836).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2801809855(self_2801809856, distance_2801809857, cursor_2801809858, all_2801809859) {
    moveCursor_2801805835(self_2801809856, cursor_2801809858, doMoveCursorColumn_2801805636, distance_2801809857, all_2801809859);
    updateTargetColumn_2801806679(self_2801809856, cursor_2801809858);

  
}

function moveCursorColumnJsWrapper_2801809851(self_2801809908, distance_2801809909, cursor_2801809910, all_2801809911) {
    moveCursorColumn_2801809855(self_2801809908, distance_2801809909, cursor_2801809910, all_2801809911);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2801809851(this, distance_, cursor_, all_));};

function moveCursorLine_2801809963(self_2801809964, distance_2801809965, cursor_2801809966, all_2801809967) {
    moveCursor_2801805835(self_2801809964, cursor_2801809966, doMoveCursorLine_2801805646, distance_2801809965, all_2801809967);

  
}

function moveCursorLineJsWrapper_2801809959(self_2801809998, distance_2801809999, cursor_2801810000, all_2801810001) {
    moveCursorLine_2801809963(self_2801809998, distance_2801809999, cursor_2801810000, all_2801810001);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2801809959(this, distance_, cursor_, all_));};

function doMoveCursorHome_2801805659(self_2801805660, cursor_2801805661, offset_2801805662) {
  var result_2801805663 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2801810097 = cursor_2801805661.Field0;
    var colontmp__2801810098 = 0;
    result_2801805663 = nimCopy(result_2801805663, {Field0: colontmp__2801810097, Field1: colontmp__2801810098}, NTI2415919113);
    break BeforeRet;
  };

  return result_2801805663;

}

function moveCursorHome_2801810037(self_2801810038, cursor_2801810039, all_2801810040) {
    moveCursor_2801805835(self_2801810038, cursor_2801810039, doMoveCursorHome_2801805659, 0, all_2801810040);
    updateTargetColumn_2801806679(self_2801810038, cursor_2801810039);

  
}

function moveCursorHomeJsWrapper_2801810033(self_2801810070, cursor_2801810071, all_2801810072) {
    moveCursorHome_2801810037(self_2801810070, cursor_2801810071, all_2801810072);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2801810033(this, cursor_, all_));};

function doMoveCursorEnd_2801805664(self_2801805665, cursor_2801805666, offset_2801805667) {
  var result_2801805668 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2801810165 = cursor_2801805666.Field0;
    var colontmp__2801810166 = lineLength_2801795445(self_2801805665.document, cursor_2801805666.Field0);
    result_2801805668 = nimCopy(result_2801805668, {Field0: colontmp__2801810165, Field1: colontmp__2801810166}, NTI2415919113);
    break BeforeRet;
  };

  return result_2801805668;

}

function moveCursorEnd_2801810105(self_2801810106, cursor_2801810107, all_2801810108) {
    moveCursor_2801805835(self_2801810106, cursor_2801810107, doMoveCursorEnd_2801805664, 0, all_2801810108);
    updateTargetColumn_2801806679(self_2801810106, cursor_2801810107);

  
}

function moveCursorEndJsWrapper_2801810101(self_2801810138, cursor_2801810139, all_2801810140) {
    moveCursorEnd_2801810105(self_2801810138, cursor_2801810139, all_2801810140);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2801810101(this, cursor_, all_));};

function getLine_2801795438(self_2801795439, line_2801795440) {
  var result_2801795441 = [];

  BeforeRet: {
    if ((line_2801795440 < (self_2801795439.lines).length)) {
    result_2801795441 = nimCopy(null, self_2801795439.lines[chckIndx(line_2801795440, 0, (self_2801795439.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2801795441 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2801795441;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2801810173(self_2801810174, str_2801810175, cursor_2801810176, all_2801810177) {
    str_2801810175 = nimCopy(null, str_2801810175, NTI33554449);
    
function doMoveCursorTo_2801810178(self_2801810179, cursor_2801810180, offset_2801810181) {
      var result_2801810182 = {Field0: 0, Field1: 0};

        var line_2801810183 = getLine_2801795438(self_2801810179.document, cursor_2801810180.Field0);
        result_2801810182 = nimCopy(result_2801810182, cursor_2801810180, NTI2415919113);
        var index_2801810184 = nsuFindStr(line_2801810183, str_2801810175, chckRange(addInt(cursor_2801810180.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2801810184)) {
        var colontmp__2801810248 = cursor_2801810180.Field0;
        var colontmp__2801810249 = index_2801810184;
        result_2801810182 = nimCopy(result_2801810182, {Field0: colontmp__2801810248, Field1: colontmp__2801810249}, NTI2415919113);
        }
        

      return result_2801810182;

    }

    moveCursor_2801805835(self_2801810174, cursor_2801810176, doMoveCursorTo_2801810178, 0, all_2801810177);
    updateTargetColumn_2801806679(self_2801810174, cursor_2801810176);

  
}

function moveCursorToJsWrapper_2801810169(self_2801810215, str_2801810216, cursor_2801810217, all_2801810218) {
    moveCursorTo_2801810173(self_2801810215, str_2801810216, cursor_2801810217, all_2801810218);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2801810169(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2801810256(self_2801810257, str_2801810258, cursor_2801810259, all_2801810260) {
    str_2801810258 = nimCopy(null, str_2801810258, NTI33554449);
    
function doMoveCursorBefore_2801810261(self_2801810262, cursor_2801810263, offset_2801810264) {
      var result_2801810265 = {Field0: 0, Field1: 0};

        var line_2801810266 = getLine_2801795438(self_2801810262.document, cursor_2801810263.Field0);
        result_2801810265 = nimCopy(result_2801810265, cursor_2801810263, NTI2415919113);
        var index_2801810267 = nsuFindStr(line_2801810266, str_2801810258, chckRange(cursor_2801810263.Field1, 0, 2147483647), -1);
        if ((0 < index_2801810267)) {
        var colontmp__2801810331 = cursor_2801810263.Field0;
        var colontmp__2801810332 = subInt(index_2801810267, 1);
        result_2801810265 = nimCopy(result_2801810265, {Field0: colontmp__2801810331, Field1: colontmp__2801810332}, NTI2415919113);
        }
        

      return result_2801810265;

    }

    moveCursor_2801805835(self_2801810257, cursor_2801810259, doMoveCursorBefore_2801810261, 0, all_2801810260);
    updateTargetColumn_2801806679(self_2801810257, cursor_2801810259);

  
}

function moveCursorBeforeJsWrapper_2801810252(self_2801810298, str_2801810299, cursor_2801810300, all_2801810301) {
    moveCursorBefore_2801810256(self_2801810298, str_2801810299, cursor_2801810300, all_2801810301);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2801810252(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2801805682(self_2801805683, cursor_2801805684, offset_2801805685) {
  var result_2801805686 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2801805686 = nimCopy(result_2801805686, getNextFindResult_2801805673(self_2801805683, cursor_2801805684, offset_2801805685).Field0, NTI2415919113);
    break BeforeRet;
  };

  return result_2801805686;

}

function moveCursorNextFindResult_2801810339(self_2801810340, cursor_2801810341, all_2801810342) {
    moveCursor_2801805835(self_2801810340, cursor_2801810341, doMoveCursorNextFindResult_2801805682, 0, all_2801810342);
    updateTargetColumn_2801806679(self_2801810340, cursor_2801810341);

  
}

function moveCursorNextFindResultJsWrapper_2801810335(self_2801810372, cursor_2801810373, all_2801810374) {
    moveCursorNextFindResult_2801810339(self_2801810372, cursor_2801810373, all_2801810374);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2801810335(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2801805677(self_2801805678, cursor_2801805679, offset_2801805680) {
  var result_2801805681 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2801805681 = nimCopy(result_2801805681, getPrevFindResult_2801805669(self_2801805678, cursor_2801805679, offset_2801805680).Field0, NTI2415919113);
    break BeforeRet;
  };

  return result_2801805681;

}

function moveCursorPrevFindResult_2801810405(self_2801810406, cursor_2801810407, all_2801810408) {
    moveCursor_2801805835(self_2801810406, cursor_2801810407, doMoveCursorPrevFindResult_2801805677, 0, all_2801810408);
    updateTargetColumn_2801806679(self_2801810406, cursor_2801810407);

  
}

function moveCursorPrevFindResultJsWrapper_2801810401(self_2801810438, cursor_2801810439, all_2801810440) {
    moveCursorPrevFindResult_2801810405(self_2801810438, cursor_2801810439, all_2801810440);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2801810401(this, cursor_, all_));};

function scrollToCursor_2801806116(self_2801806117, cursor_2801806118) {
    scrollToCursor_2801805687(self_2801806117, getCursor_2801805770(self_2801806117, cursor_2801806118), false);

  
}

function scrollToCursorJsWrapper_2801810467(self_2801810502, cursor_2801810503) {
    scrollToCursor_2801806116(self_2801810502, cursor_2801810503);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2801810467(this, cursor_));};

function deinit_2868904376(self_2868904377) {
  
}

function deinit_2868904378(self_2868904379) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2801810574 = 0;
      colontmp__2801810574 = subInt((path_1426063614).length, 1);
      var res_2801810575 = colontmp__2801810574;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2801810575)) break Label3;
            i_1426063627 = res_2801810575;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2801810575 = subInt(res_2801810575, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2315255831() {
  var result_2315255838 = ({val: [], has: false});

  return result_2315255838;

}

function some_2248146978(val_2248146980) {
  var result_2248146981 = ({val: [], has: false});

    result_2248146981.has = true;
    result_2248146981.val = nimCopy(null, val_2248146980, NTI33554449);

  return result_2248146981;

}

function getLanguageForFile_2885681156(filename_2885681157) {
    var Temporary1;

  var result_2885681159 = ({val: [], has: false});

  BeforeRet: {
    var extension_2885681160 = nimCopy(null, nossplitFile(filename_2885681157).Field2, NTI33554449);
    if ((0 < (extension_2885681160).length)) {
    extension_2885681160 = nimCopy(null, HEX5BHEX5D_855639319(extension_2885681160, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2885681160)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2885681183 = [mnewString(0)];
      fmtRes_2885681183[0].push.apply(fmtRes_2885681183[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2885681183, 0, extension_2885681160, []);
      fmtRes_2885681183[0].push.apply(fmtRes_2885681183[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2885681183[0], NTI33554449)]);
      result_2885681159 = nimCopy(result_2885681159, none_2315255831(), NTI2315255829);
      break BeforeRet;
      break;
    }
    var languageId_2885681191 = nimCopy(null, Temporary1, NTI33554449);
    result_2885681159 = nimCopy(result_2885681159, some_2248146978(languageId_2885681191), NTI2315255829);
    break BeforeRet;
  };

  return result_2885681159;

}

function isSome_2315255872(self_2315255874) {
  var result_2315255875 = false;

    result_2315255875 = self_2315255874.has;

  return result_2315255875;

}

function isNone_2801801256(self_2801801258) {
  var result_2801801259 = false;

    result_2801801259 = !(self_2801801258.has);

  return result_2801801259;

}

function get_2801801248(self_2801801250) {
  var result_2801801251 = [];

    if (isNone_2801801256(self_2801801250)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801801251 = self_2801801250["val"];

  return result_2801801251;

}

function getOption_2801801264(editor_2801801266, path_2801801267, default_2801801268) {
  var result_2801801274 = null;

  BeforeRet: {
    if ((editor_2801801266 == null)) {
    result_2801801274 = default_2801801268;
    break BeforeRet;
    }
    
    var node_2801801286 = HEX7BHEX7D_1627393316(editor_2801801266.options, nsuSplitString(path_2801801267, [46], -1));
    if ((node_2801801286 == null)) {
    result_2801801274 = default_2801801268;
    break BeforeRet;
    }
    
    result_2801801274 = node_2801801286;
    break BeforeRet;
  };

  return result_2801801274;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2868904237() {
  var result_2868904243 = ({val: null});

  return result_2868904243;

}

function some_2868904248(val_2868904250) {
  var result_2868904251 = ({val: null});

    if (!(!((val_2868904250 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2868904251.val = val_2868904250;

  return result_2868904251;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2868904199(languageId_2868904200, config_2868904201) {
    var Temporary2;

  var result_2868904208 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2868904201, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2868904201, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2868904222 = [mnewString(0)];
      fmtRes_2868904222[0].push.apply(fmtRes_2868904222[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2868904222, 0, languageId_2868904200, []);
      fmtRes_2868904222[0].push.apply(fmtRes_2868904222[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2868904222[0];
    }
    
    var wasmPath_2868904223 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2868904228 = [mnewString(0)];
    fmtRes_2868904228[0].push.apply(fmtRes_2868904228[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2868904228, 0, wasmPath_2868904223, []);
    fmtRes_2868904228[0].push.apply(fmtRes_2868904228[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2868904228[0], NTI33554449)]);
    var language_2868904233 = (await loadTreesitterLanguage(toJSStr(wasmPath_2868904223)));
    if ((language_2868904233 == null)) {
    result_2868904208 = none_2868904237();
    break BeforeRet;
    }
    
    result_2868904208 = some_2868904248(language_2868904233);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2868904278 = [mnewString(0)];
    fmtRes_2868904278[0].push.apply(fmtRes_2868904278[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2868904278, 0, languageId_2868904200, []);
    fmtRes_2868904278[0].push.apply(fmtRes_2868904278[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2868904278, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2868904278[0], NTI33554449)]);
    result_2868904208 = none_2868904237();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2868904208;

}

function isSome_2868904343(self_2868904345) {
  var result_2868904346 = false;

    result_2868904346 = !((self_2868904345.val == null));

  return result_2868904346;

}
async function loadLanguage_2868904319(languageId_2868904320, config_2868904321) {
  var result_2868904324 = null;

  BeforeRet: {
    var language_2868904338 = (await loadLanguageDynamically_2868904199(languageId_2868904320, config_2868904321));
    if (isSome_2868904343(language_2868904338)) {
    result_2868904324 = language_2868904338;
    break BeforeRet;
    }
    
    result_2868904324 = none_2868904237();
    break BeforeRet;
  };

  return result_2868904324;

}

function isNone_2801801300(self_2801801302) {
  var result_2801801303 = false;

    result_2801801303 = (self_2801801302.val == null);

  return result_2801801303;

}

function createTsParser_2868904365() {
  var result_2868904366 = null;

  BeforeRet: {
    result_2868904366 = new Parser();
    break BeforeRet;
  };

  return result_2868904366;

}

function get_2801801333(self_2801801335) {
  var result_2801801336 = null;
  var result_2801801336_Idx = 0;

  BeforeRet: {
    if (isNone_2801801300(self_2801801335)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801801336 = self_2801801335; result_2801801336_Idx = "val";
    break BeforeRet;
  };

  return [result_2801801336, result_2801801336_Idx];

}

function contentString_2801796770(document_2801796771) {
  var result_2801796772 = [];

  BeforeRet: {
    result_2801796772 = nimCopy(null, nsuJoinSep(document_2801796771.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2801796772;

}

function none_2868904002() {
  var result_2868904008 = ({val: null});

  return result_2868904008;

}
async function initTreesitter_2801801211(self_2801801212) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2801801214 = null;

  BeforeRet: {
    if (!((self_2801801212.tsParser == null))) {
    deinit_2868904376(self_2801801212.tsParser);
    self_2801801212.tsParser = null;
    }
    
    if (!((self_2801801212.highlightQuery == null))) {
    deinit_2868904378(self_2801801212.highlightQuery);
    self_2801801212.highlightQuery = null;
    }
    
      var oHEX60gensym88_2801801228 = getLanguageForFile_2885681156(self_2801801212.filename);
      if (!isSome_2315255872(oHEX60gensym88_2801801228)) Temporary2 = false; else {        var languageId_2801801262 = nimCopy(null, get_2801801248(oHEX60gensym88_2801801228), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2801801262;
    }
    else {
      result_2801801214 = undefined;
      break BeforeRet;
    }
    
    var languageId_2801801263 = nimCopy(null, Temporary1, NTI33554449);
    var config_2801801290 = getOption_2801801264(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2801801263 || []), newJObject_1627390051());
    var language_2801801295 = [(await loadLanguage_2868904319(languageId_2801801263, config_2801801290))];
    if (isNone_2801801300(language_2801801295[0])) {
    var fmtRes_2801801312 = [mnewString(0)];
    fmtRes_2801801312[0].push.apply(fmtRes_2801801312[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2801801312, 0, languageId_2801801263, []);
    fmtRes_2801801312[0].push.apply(fmtRes_2801801312[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801801312[0], NTI33554449)]);
    result_2801801214 = undefined;
    break BeforeRet;
    }
    
    self_2801801212.tsParser = createTsParser_2868904365();
    if ((self_2801801212.tsParser == null)) {
    var fmtRes_2801801320 = [mnewString(0)];
    fmtRes_2801801320[0].push.apply(fmtRes_2801801320[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2801801320, 0, languageId_2801801263, []);
    fmtRes_2801801320[0].push.apply(fmtRes_2801801320[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801801320[0], NTI33554449)]);
    result_2801801214 = undefined;
    break BeforeRet;
    }
    
    self_2801801212.tsParser.setLanguage((Temporary3 = get_2801801333(language_2801801295[0]), Temporary3)[0][Temporary3[1]]);
    self_2801801212.tsLanguage = (Temporary4 = get_2801801333(language_2801801295[0]), Temporary4)[0][Temporary4[1]];
    self_2801801212.currentTree = parseString_2868903995(self_2801801212.tsParser, contentString_2801796770(self_2801801212), none_2868904002());
++excHandler;
    try {
    var fmtRes_2801801373 = [mnewString(0)];
    fmtRes_2801801373[0].push.apply(fmtRes_2801801373[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2801801373, 0, languageId_2801801263, []);
    fmtRes_2801801373[0].push.apply(fmtRes_2801801373[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2801801374 = loadFile_2332033031(fs_2332033077, fmtRes_2801801373[0]);
    self_2801801212.highlightQuery = (Temporary6 = get_2801801333(language_2801801295[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2801801374));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2801801394 = [mnewString(0)];
    fmtRes_2801801394[0].push.apply(fmtRes_2801801394[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2801801394, 0, languageId_2801801263, []);
    fmtRes_2801801394[0].push.apply(fmtRes_2801801394[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801801394[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2801795996(self_2801801212);
    requestRender_2499805290(gEditor.platform, false);
    result_2801801214 = undefined;
    break BeforeRet;
  };

  return result_2801801214;

}

function reloadTreesitter_2801810529(self_2801810530) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2801801211(self_2801810530.document);

  
}

function reloadTreesitterJsWrapper_2801810525(self_2801810558) {
    reloadTreesitter_2801810529(self_2801810558);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2801810525(this));};

function deleteLeft_2801810585(self_2801810586) {
    var selections_2801810587 = selections_2801795574(self_2801810586);
    Label1: {
      var i_2801810593 = 0;
      var selection_2801810594 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801810640 = 0;
      var L_2801810641 = (selections_2801810587).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801810640 < L_2801810641)) break Label3;
            i_2801810593 = i_2801810640;
            selection_2801810594 = nimCopy(selection_2801810594, selections_2801810587[chckIndx(i_2801810640, 0, (selections_2801810587).length - 1)], NTI2415919115);
            if (isEmpty_2415919476(selection_2801810594)) {
            var colontmp__2801810638 = doMoveCursorColumn_2801805636(self_2801810586, selection_2801810594.Field0, -1);
            var colontmp__2801810639 = nimCopy(null, selection_2801810594.Field0, NTI2415919113);
            selections_2801810587[chckIndx(i_2801810593, 0, (selections_2801810587).length - 1)] = nimCopy(selections_2801810587[chckIndx(i_2801810593, 0, (selections_2801810587).length - 1)], {Field0: nimCopy(null, colontmp__2801810638, NTI2415919113), Field1: nimCopy(null, colontmp__2801810639, NTI2415919113)}, NTI2415919115);
            }
            
            i_2801810640 = addInt(i_2801810640, 1);
            if (!(((selections_2801810587).length == L_2801810641))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2801795833(self_2801810586, delete_2801801697(self_2801810586.document, selections_2801810587, selections_2801795574(self_2801810586), true, true));
    updateTargetColumn_2801806679(self_2801810586, 3);

  
}

function deleteLeftJsWrapper_2801810581(self_2801810622) {
    deleteLeft_2801810585(self_2801810622);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2801810581(this));};

function deleteRight_2801810649(self_2801810650) {
    var selections_2801810651 = selections_2801795574(self_2801810650);
    Label1: {
      var i_2801810657 = 0;
      var selection_2801810658 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801810704 = 0;
      var L_2801810705 = (selections_2801810651).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801810704 < L_2801810705)) break Label3;
            i_2801810657 = i_2801810704;
            selection_2801810658 = nimCopy(selection_2801810658, selections_2801810651[chckIndx(i_2801810704, 0, (selections_2801810651).length - 1)], NTI2415919115);
            if (isEmpty_2415919476(selection_2801810658)) {
            var colontmp__2801810702 = nimCopy(null, selection_2801810658.Field0, NTI2415919113);
            var colontmp__2801810703 = doMoveCursorColumn_2801805636(self_2801810650, selection_2801810658.Field0, 1);
            selections_2801810651[chckIndx(i_2801810657, 0, (selections_2801810651).length - 1)] = nimCopy(selections_2801810651[chckIndx(i_2801810657, 0, (selections_2801810651).length - 1)], {Field0: nimCopy(null, colontmp__2801810702, NTI2415919113), Field1: nimCopy(null, colontmp__2801810703, NTI2415919113)}, NTI2415919115);
            }
            
            i_2801810704 = addInt(i_2801810704, 1);
            if (!(((selections_2801810651).length == L_2801810705))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2801795833(self_2801810650, delete_2801801697(self_2801810650.document, selections_2801810651, selections_2801795574(self_2801810650), true, true));
    updateTargetColumn_2801806679(self_2801810650, 3);

  
}

function deleteRightJsWrapper_2801810645(self_2801810686) {
    deleteRight_2801810649(self_2801810686);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2801810645(this));};

function getCommandCount_2801810713(self_2801810714) {
  var result_2801810715 = 0;

  BeforeRet: {
    result_2801810715 = self_2801810714.commandCount;
    break BeforeRet;
  };

  return result_2801810715;

}

function getCommandCountJsWrapper_2801810709(self_2801810744) {
  var result_2801810745 = 0;

    result_2801810745 = getCommandCount_2801810713(self_2801810744);

  return result_2801810745;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2801810709(this));};

function setCommandCount_2801810770(self_2801810771, count_2801810772) {
    self_2801810771.commandCount = count_2801810772;

  
}

function setCommandCountJsWrapper_2801810766(self_2801810801, count_2801810802) {
    setCommandCount_2801810770(self_2801810801, count_2801810802);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2801810766(this, count_));};

function setCommandCountRestore_2801810828(self_2801810829, count_2801810830) {
    self_2801810829.commandCountRestore = count_2801810830;

  
}

function setCommandCountRestoreJsWrapper_2801810824(self_2801810859, count_2801810860) {
    setCommandCountRestore_2801810828(self_2801810859, count_2801810860);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2801810824(this, count_));};

function updateCommandCount_2801810886(self_2801810887, digit_2801810888) {
    self_2801810887.commandCount = addInt(mulInt(self_2801810887.commandCount, 10), digit_2801810888);

  
}

function updateCommandCountJsWrapper_2801810882(self_2801810917, digit_2801810918) {
    updateCommandCount_2801810886(self_2801810917, digit_2801810918);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2801810882(this, digit_));};

function setFlag_2801810944(self_2801810945, name_2801810946, value_2801810947) {
    setFlag_1291848958(self_2801810945.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2801810946 || []), value_2801810947);
    markDirty_2382364710(self_2801810945);

  
}

function setFlagJsWrapper_2801810940(self_2801810977, name_2801810978, value_2801810979) {
    setFlag_2801810944(self_2801810977, name_2801810978, value_2801810979);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2801810940(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2801811010(self_2801811011, name_2801811012) {
  var result_2801811013 = false;

  BeforeRet: {
    result_2801811013 = getFlag_1291848881(self_2801811011.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2801811012 || []), false);
    break BeforeRet;
  };

  return result_2801811013;

}

function getFlagJsWrapper_2801811006(self_2801811043, name_2801811044) {
  var result_2801811045 = false;

    result_2801811045 = getFlag_2801811010(self_2801811043, name_2801811044);

  return result_2801811045;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2801811006(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2801811080(self_2801811081, action_2801811082, args_2801811083) {
  var result_2801811084 = false;

  BeforeRet: {
    result_2801811084 = (handleActionInternal_2801795431(self_2801811081, action_2801811082, args_2801811083) == 3);
    break BeforeRet;
  };

  return result_2801811084;

}

function runActionJsWrapper_2801811076(self_2801811120, action_2801811121, args_2801811122) {
  var result_2801811123 = false;

    result_2801811123 = runAction_2801811080(self_2801811120, action_2801811121, args_2801811122);

  return result_2801811123;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2801811076(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2801811147(c_2801811148) {
  var result_2801811149 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2801811148) || (c_2801811148 == 95))) {
    result_2801811149 = 0;
    break BeforeRet;
    }
    
    if (((c_2801811148 == 32) || (c_2801811148 == 9))) {
    result_2801811149 = 1;
    break BeforeRet;
    }
    
    result_2801811149 = 2;
    break BeforeRet;
  };

  return result_2801811149;

}

function findWordBoundary_2801811156(self_2801811157, cursor_2801811158) {
  var result_2801811159 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2801811160 = getLine_2801795438(self_2801811157.document, cursor_2801811158.Field0);
    result_2801811159 = nimCopy(result_2801811159, toSelection_2415919597(cursor_2801811158), NTI2415919115);
    if ((result_2801811159.Field0.Field1 == (line_2801811160).length)) {
    result_2801811159.Field0.Field1 = subInt(result_2801811159.Field0.Field1, 1);
    result_2801811159.Field1.Field1 = subInt(result_2801811159.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2801811159.Field0.Field1) && (result_2801811159.Field0.Field1 < (line_2801811160).length))) break Label2;
          var leftCategory_2801811171 = charCategory_2801811147(line_2801811160[chckIndx(subInt(result_2801811159.Field0.Field1, 1), 0, (line_2801811160).length - 1)]);
          var rightCategory_2801811172 = charCategory_2801811147(line_2801811160[chckIndx(result_2801811159.Field0.Field1, 0, (line_2801811160).length - 1)]);
          if (!((leftCategory_2801811171 == rightCategory_2801811172))) {
          break Label1;
          }
          
          result_2801811159.Field0.Field1 = subInt(result_2801811159.Field0.Field1, 1);
        }
    };
    if ((result_2801811159.Field1.Field1 < (line_2801811160).length)) {
    result_2801811159.Field1.Field1 = addInt(result_2801811159.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2801811159.Field1.Field1) && (result_2801811159.Field1.Field1 < (line_2801811160).length))) break Label4;
          var leftCategory_2801811181 = charCategory_2801811147(line_2801811160[chckIndx(subInt(result_2801811159.Field1.Field1, 1), 0, (line_2801811160).length - 1)]);
          var rightCategory_2801811182 = charCategory_2801811147(line_2801811160[chckIndx(result_2801811159.Field1.Field1, 0, (line_2801811160).length - 1)]);
          if (!((leftCategory_2801811181 == rightCategory_2801811182))) {
          break Label3;
          }
          
          result_2801811159.Field1.Field1 = addInt(result_2801811159.Field1.Field1, 1);
        }
    };

  return result_2801811159;

}

function findWordBoundaryJsWrapper_2801811152(self_2801811216, cursor_2801811217) {
  var result_2801811218 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801811218 = nimCopy(result_2801811218, findWordBoundary_2801811156(self_2801811216, cursor_2801811217), NTI2415919115);

  return result_2801811218;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2801811152(this, cursor_));};

function min_2415919439(a_2415919440, b_2415919441) {
  var result_2415919442 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2415919431(a_2415919440, b_2415919441)) {
    result_2415919442 = nimCopy(result_2415919442, a_2415919440, NTI2415919113);
    break BeforeRet;
    }
    
    result_2415919442 = nimCopy(result_2415919442, b_2415919441, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919442;

}

function max_2415919443(a_2415919444, b_2415919445) {
  var result_2415919446 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2415919447(b_2415919445, a_2415919444)) {
    result_2415919446 = nimCopy(result_2415919446, a_2415919444, NTI2415919113);
    break BeforeRet;
    }
    
    result_2415919446 = nimCopy(result_2415919446, b_2415919445, NTI2415919113);
    break BeforeRet;
  };

  return result_2415919446;

}

function or_2415919591(a_2415919592, b_2415919593) {
  var result_2415919594 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2415919595 = normalized_2415919470(a_2415919592);
    var bn_2415919596 = normalized_2415919470(b_2415919593);
    var colontmp__2801811460 = min_2415919439(an_2415919595.Field0, bn_2415919596.Field0);
    var colontmp__2801811461 = max_2415919443(an_2415919595.Field1, bn_2415919596.Field1);
    result_2415919594 = nimCopy(result_2415919594, {Field0: nimCopy(null, colontmp__2801811460, NTI2415919113), Field1: nimCopy(null, colontmp__2801811461, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
  };

  return result_2415919594;

}

function reverse_2415919473(selection_2415919474) {
  var result_2415919475 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801811462 = nimCopy(null, selection_2415919474.Field1, NTI2415919113);
    var colontmp__2801811463 = nimCopy(null, selection_2415919474.Field0, NTI2415919113);
    result_2415919475 = nimCopy(result_2415919475, {Field0: nimCopy(null, colontmp__2801811462, NTI2415919113), Field1: nimCopy(null, colontmp__2801811463, NTI2415919113)}, NTI2415919115);

  return result_2415919475;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2801811250(self_2801811251, cursor_2801811252, move_2801811253, count_2801811254) {
  var result_2801811255 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2801811253)) {
    case "word":
      result_2801811255 = nimCopy(result_2801811255, findWordBoundary_2801811156(self_2801811251, cursor_2801811252), NTI2415919115);
      Label1: {
        var __2801811260 = 0;
        var i_2801811418 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2801811418 < count_2801811254)) break Label3;
              __2801811260 = i_2801811418;
              result_2801811255 = nimCopy(result_2801811255, or_2415919591(or_2415919591(result_2801811255, findWordBoundary_2801811156(self_2801811251, result_2801811255.Field1)), findWordBoundary_2801811156(self_2801811251, result_2801811255.Field0)), NTI2415919115);
              i_2801811418 = addInt(i_2801811418, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2801811261 = getLine_2801795438(self_2801811251.document, cursor_2801811252.Field0);
      result_2801811255 = nimCopy(result_2801811255, findWordBoundary_2801811156(self_2801811251, cursor_2801811252), NTI2415919115);
      if (((cursor_2801811252.Field1 == 0) && (0 < cursor_2801811252.Field0))) {
      var colontmp__2801811420 = subInt(cursor_2801811252.Field0, 1);
      var colontmp__2801811421 = (getLine_2801795438(self_2801811251.document, subInt(cursor_2801811252.Field0, 1))).length;
      result_2801811255.Field0 = nimCopy(result_2801811255.Field0, {Field0: colontmp__2801811420, Field1: colontmp__2801811421}, NTI2415919113);
      }
      
      if (((cursor_2801811252.Field1 == (line_2801811261).length) && (cursor_2801811252.Field0 < subInt((self_2801811251.document.lines).length, 1)))) {
      var colontmp__2801811422 = addInt(cursor_2801811252.Field0, 1);
      var colontmp__2801811423 = 0;
      result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811422, Field1: colontmp__2801811423}, NTI2415919113);
      }
      
      Label4: {
        var __2801811269 = 0;
        var i_2801811429 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2801811429 < count_2801811254)) break Label6;
              __2801811269 = i_2801811429;
              result_2801811255 = nimCopy(result_2801811255, or_2415919591(or_2415919591(result_2801811255, findWordBoundary_2801811156(self_2801811251, result_2801811255.Field1)), findWordBoundary_2801811156(self_2801811251, result_2801811255.Field0)), NTI2415919115);
              var line_2801811270 = getLine_2801795438(self_2801811251.document, result_2801811255.Field1.Field0);
              if (((result_2801811255.Field0.Field1 == 0) && (0 < result_2801811255.Field0.Field0))) {
              var colontmp__2801811425 = subInt(result_2801811255.Field0.Field0, 1);
              var colontmp__2801811426 = (getLine_2801795438(self_2801811251.document, subInt(result_2801811255.Field0.Field0, 1))).length;
              result_2801811255.Field0 = nimCopy(result_2801811255.Field0, {Field0: colontmp__2801811425, Field1: colontmp__2801811426}, NTI2415919113);
              }
              
              if (((result_2801811255.Field1.Field1 == (line_2801811270).length) && (result_2801811255.Field1.Field0 < subInt((self_2801811251.document.lines).length, 1)))) {
              var colontmp__2801811427 = addInt(result_2801811255.Field1.Field0, 1);
              var colontmp__2801811428 = 0;
              result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811427, Field1: colontmp__2801811428}, NTI2415919113);
              }
              
              i_2801811429 = addInt(i_2801811429, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2801811255 = nimCopy(result_2801811255, reverse_2415919473(getSelectionForMove_2801811250(self_2801811251, {Field0: cursor_2801811252.Field0, Field1: nimMax(0, subInt(cursor_2801811252.Field1, 1))}, [119,111,114,100], count_2801811254)), NTI2415919115);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2801811255 = nimCopy(result_2801811255, reverse_2415919473(getSelectionForMove_2801811250(self_2801811251, {Field0: cursor_2801811252.Field0, Field1: nimMax(0, subInt(cursor_2801811252.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2801811254)), NTI2415919115);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2801811431 = {Field0: cursor_2801811252.Field0, Field1: 0};
      var colontmp__2801811432 = {Field0: cursor_2801811252.Field0, Field1: (getLine_2801795438(self_2801811251.document, cursor_2801811252.Field0)).length};
      result_2801811255 = nimCopy(result_2801811255, {Field0: nimCopy(null, colontmp__2801811431, NTI2415919113), Field1: nimCopy(null, colontmp__2801811432, NTI2415919113)}, NTI2415919115);
      break;
    case "line-next":
      var colontmp__2801811433 = {Field0: cursor_2801811252.Field0, Field1: 0};
      var colontmp__2801811434 = {Field0: cursor_2801811252.Field0, Field1: (getLine_2801795438(self_2801811251.document, cursor_2801811252.Field0)).length};
      result_2801811255 = nimCopy(result_2801811255, {Field0: nimCopy(null, colontmp__2801811433, NTI2415919113), Field1: nimCopy(null, colontmp__2801811434, NTI2415919113)}, NTI2415919115);
      if ((addInt(result_2801811255.Field1.Field0, 1) < (self_2801811251.document.lines).length)) {
      var colontmp__2801811435 = addInt(result_2801811255.Field1.Field0, 1);
      var colontmp__2801811436 = 0;
      result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811435, Field1: colontmp__2801811436}, NTI2415919113);
      }
      
      Label7: {
        var __2801811281 = 0;
        var i_2801811440 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2801811440 < count_2801811254)) break Label9;
              __2801811281 = i_2801811440;
              result_2801811255 = nimCopy(result_2801811255, or_2415919591(result_2801811255, {Field0: {Field0: result_2801811255.Field1.Field0, Field1: 0}, Field1: {Field0: result_2801811255.Field1.Field0, Field1: (getLine_2801795438(self_2801811251.document, result_2801811255.Field1.Field0)).length}}), NTI2415919115);
              if ((addInt(result_2801811255.Field1.Field0, 1) < (self_2801811251.document.lines).length)) {
              var colontmp__2801811438 = addInt(result_2801811255.Field1.Field0, 1);
              var colontmp__2801811439 = 0;
              result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811438, Field1: colontmp__2801811439}, NTI2415919113);
              }
              
              i_2801811440 = addInt(i_2801811440, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2801811442 = 0;
      var colontmp__2801811443 = 0;
      result_2801811255.Field0 = nimCopy(result_2801811255.Field0, {Field0: colontmp__2801811442, Field1: colontmp__2801811443}, NTI2415919113);
      var line_2801811288 = subInt((self_2801811251.document.lines).length, 1);
      var colontmp__2801811444 = line_2801811288;
      var colontmp__2801811445 = (getLine_2801795438(self_2801811251.document, line_2801811288)).length;
      result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811444, Field1: colontmp__2801811445}, NTI2415919113);
      break;
    case "prev-find-result":
      result_2801811255 = nimCopy(result_2801811255, getPrevFindResult_2801805669(self_2801811251, cursor_2801811252, count_2801811254), NTI2415919115);
      break;
    case "next-find-result":
      result_2801811255 = nimCopy(result_2801811255, getNextFindResult_2801805673(self_2801811251, cursor_2801811252, count_2801811254), NTI2415919115);
      break;
    default: 
      if (nsuStartsWith(move_2801811253, [109,111,118,101,45,116,111,32])) {
      var str_2801811307 = HEX5BHEX5D_855639319(move_2801811253, HEX2EHEX2E_1040187488(8, 1));
      var line_2801811308 = getLine_2801795438(self_2801811251.document, cursor_2801811252.Field0);
      result_2801811255 = nimCopy(result_2801811255, toSelection_2415919597(cursor_2801811252), NTI2415919115);
      var index_2801811309 = nsuFindStr(line_2801811308, str_2801811307, chckRange(cursor_2801811252.Field1, 0, 2147483647), -1);
      if ((0 <= index_2801811309)) {
      var colontmp__2801811446 = cursor_2801811252.Field0;
      var colontmp__2801811447 = addInt(index_2801811309, 1);
      result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811446, Field1: colontmp__2801811447}, NTI2415919113);
      }
      
      Label10: {
        var __2801811314 = 0;
        var i_2801811451 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2801811451 < count_2801811254)) break Label12;
              __2801811314 = i_2801811451;
              var index_2801811315 = nsuFindStr(line_2801811308, str_2801811307, chckRange(result_2801811255.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2801811315)) {
              var colontmp__2801811449 = result_2801811255.Field1.Field0;
              var colontmp__2801811450 = addInt(index_2801811315, 1);
              result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811449, Field1: colontmp__2801811450}, NTI2415919113);
              }
              
              i_2801811451 = addInt(i_2801811451, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2801811253, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2801811334 = HEX5BHEX5D_855639319(move_2801811253, HEX2EHEX2E_1040187488(12, 1));
      var line_2801811335 = getLine_2801795438(self_2801811251.document, cursor_2801811252.Field0);
      result_2801811255 = nimCopy(result_2801811255, toSelection_2415919597(cursor_2801811252), NTI2415919115);
      var index_2801811336 = nsuFindStr(line_2801811335, str_2801811334, chckRange(addInt(cursor_2801811252.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2801811336)) {
      var colontmp__2801811453 = cursor_2801811252.Field0;
      var colontmp__2801811454 = index_2801811336;
      result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811453, Field1: colontmp__2801811454}, NTI2415919113);
      }
      
      Label13: {
        var __2801811341 = 0;
        var i_2801811458 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2801811458 < count_2801811254)) break Label15;
              __2801811341 = i_2801811458;
              var index_2801811342 = nsuFindStr(line_2801811335, str_2801811334, chckRange(addInt(result_2801811255.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2801811342)) {
              var colontmp__2801811456 = result_2801811255.Field1.Field0;
              var colontmp__2801811457 = index_2801811342;
              result_2801811255.Field1 = nimCopy(result_2801811255.Field1, {Field0: colontmp__2801811456, Field1: colontmp__2801811457}, NTI2415919113);
              }
              
              i_2801811458 = addInt(i_2801811458, 1);
            }
        };
      };
      }
      else {
        result_2801811255 = nimCopy(result_2801811255, toSelection_2415919597(cursor_2801811252), NTI2415919115);
        var fmtRes_2801811347 = [mnewString(0)];
        fmtRes_2801811347[0].push.apply(fmtRes_2801811347[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2801811347, 0, move_2801811253, []);
        fmtRes_2801811347[0].push.apply(fmtRes_2801811347[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801811347[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2801811255;

}

function getSelectionForMoveJsWrapper_2801811246(self_2801811379, cursor_2801811380, move_2801811381, count_2801811382) {
  var result_2801811383 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801811383 = nimCopy(result_2801811383, getSelectionForMove_2801811250(self_2801811379, cursor_2801811380, move_2801811381, count_2801811382), NTI2415919115);

  return result_2801811383;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2801811246(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2801811528(s_2801811532, x_2801811533) {
  var result_2801811534 = [];

    var a_2801811536 = x_2801811533.a;
    var L_2801811541 = addInt(subInt(subInt((s_2801811532).length, x_2801811533.b), a_2801811536), 1);
    result_2801811534 = new Array(chckRange(L_2801811541, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2801811541, 0, 2147483647) ; ++i) { result_2801811534[i] = []; }    Label1: {
      var i_2801811550 = 0;
      var i_2801811768 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801811768 < L_2801811541)) break Label3;
            i_2801811550 = i_2801811768;
            result_2801811534[chckIndx(i_2801811550, 0, (result_2801811534).length - 1)] = nimCopy(null, s_2801811532[chckIndx(addInt(i_2801811550, a_2801811536), 0, (s_2801811532).length - 1)], NTI33554449);
            i_2801811768 = addInt(i_2801811768, 1);
          }
      };
    };

  return result_2801811534;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2717909760(s_2717909762, i_2717909763) {
  var result_2717909764 = [];

    result_2717909764 = nimCopy(null, s_2717909762[chckIndx(subInt((s_2717909762).length, i_2717909763), 0, (s_2717909762).length - 1)], NTI33554449);

  return result_2717909764;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2801811498(editor_2801811500, path_2801811501, value_2801811502) {
  BeforeRet: {
    Label1: {
      if ((editor_2801811500 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym727_2801811517 = nsuSplitString(path_2801811501, [46], -1);
      var nodeHEX60gensym727_2801811518 = editor_2801811500.options;
      Label2: {
        var keyHEX60gensym727_2801811554 = [];
        var colontmp__2801811763 = [];
        colontmp__2801811763 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym727_2801811517, HEX2EHEX2E_1040187488(0, 2));
        var i_2801811764 = 0;
        var L_2801811765 = (colontmp__2801811763).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2801811764 < L_2801811765)) break Label4;
              keyHEX60gensym727_2801811554 = colontmp__2801811763[chckIndx(i_2801811764, 0, (colontmp__2801811763).length - 1)];
              if (!((nodeHEX60gensym727_2801811518.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym727_2801811518, keyHEX60gensym727_2801811554))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym727_2801811518, keyHEX60gensym727_2801811554, newJObject_1627390051());
              }
              
              nodeHEX60gensym727_2801811518 = HEX5BHEX5D_1627393037(nodeHEX60gensym727_2801811518, keyHEX60gensym727_2801811554);
              i_2801811764 = addInt(i_2801811764, 1);
              if (!(((colontmp__2801811763).length == L_2801811765))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym727_2801811518 == null) || !((nodeHEX60gensym727_2801811518.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym727_2801811518, HEX5BHEX5D_2717909760(pathItemsHEX60gensym727_2801811517, 1), newJInt_1627390040(value_2801811502));
    };
  };

  
}

function getOption_2801811570(editor_2801811572, path_2801811573, default_2801811574) {
  var result_2801811579 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2801811572 == null)) {
      result_2801811579 = nimCopy(null, default_2801811574, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym732_2801811592 = HEX7BHEX7D_1627393316(editor_2801811572.options, nsuSplitString(path_2801811573, [46], -1));
      if ((nodeHEX60gensym732_2801811592 == null)) {
      result_2801811579 = nimCopy(null, default_2801811574, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2801811579 = nimCopy(null, getStr_1627390106(nodeHEX60gensym732_2801811592, default_2801811574), NTI33554449);
    break BeforeRet;
  };

  return result_2801811579;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2801811596(editor_2801811598, path_2801811599, default_2801811600) {
  var result_2801811605 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2801811598 == null)) {
      result_2801811605 = default_2801811600;
      break BeforeRet;
      }
      
      var nodeHEX60gensym733_2801811617 = HEX7BHEX7D_1627393316(editor_2801811598.options, nsuSplitString(path_2801811599, [46], -1));
      if ((nodeHEX60gensym733_2801811617 == null)) {
      result_2801811605 = default_2801811600;
      break BeforeRet;
      }
      
    };
    result_2801811605 = getInt_1627390118(nodeHEX60gensym733_2801811617, default_2801811600);
    break BeforeRet;
  };

  return result_2801811605;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2801811630(editor_2801811632, path_2801811633, value_2801811634) {
  BeforeRet: {
    Label1: {
      if ((editor_2801811632 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym734_2801811650 = nsuSplitString(path_2801811633, [46], -1);
      var nodeHEX60gensym734_2801811651 = editor_2801811632.options;
      Label2: {
        var keyHEX60gensym734_2801811670 = [];
        var colontmp__2801811777 = [];
        colontmp__2801811777 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym734_2801811650, HEX2EHEX2E_1040187488(0, 2));
        var i_2801811778 = 0;
        var L_2801811779 = (colontmp__2801811777).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2801811778 < L_2801811779)) break Label4;
              keyHEX60gensym734_2801811670 = colontmp__2801811777[chckIndx(i_2801811778, 0, (colontmp__2801811777).length - 1)];
              if (!((nodeHEX60gensym734_2801811651.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym734_2801811651, keyHEX60gensym734_2801811670))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym734_2801811651, keyHEX60gensym734_2801811670, newJObject_1627390051());
              }
              
              nodeHEX60gensym734_2801811651 = HEX5BHEX5D_1627393037(nodeHEX60gensym734_2801811651, keyHEX60gensym734_2801811670);
              i_2801811778 = addInt(i_2801811778, 1);
              if (!(((colontmp__2801811777).length == L_2801811779))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym734_2801811651 == null) || !((nodeHEX60gensym734_2801811651.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym734_2801811651, HEX5BHEX5D_2717909760(pathItemsHEX60gensym734_2801811650, 1), newJString_1627389994(value_2801811634));
    };
  };

  
}

function setMove_2801811495(self_2801811496, args_2801811497) {
    setOption_2801811498(self_2801811496.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2801810713(self_2801811496));
    setMode_2801806301(self_2801811496, getOption_2801811570(self_2801811496.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2801810770(self_2801811496, getOption_2801811596(self_2801811496.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2801811080(self_2801811496, getOption_2801811570(self_2801811496.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2801811497);
    setOption_2801811630(self_2801811496.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2801811491(self_2801811714, args_2801811715) {
    setMove_2801811495(self_2801811714, args_2801811715);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2801811491(this, args_));};

function deleteMove_2801811787(self_2801811788, move_2801811789, which_2801811790, all_2801811791) {
    move_2801811789 = nimCopy(null, move_2801811789, NTI33554449);
    
function HEX3Aanonymous_2801811803(s_2801811810) {
        var Temporary1;

      var result_2801811813 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2801811802) {
        Temporary1 = getSelectionForMove_2801811250(self_2801811788, s_2801811810.Field1, move_2801811789, count_2801811801);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2801811810.Field1, NTI2415919113), Field1: nimCopy(null, getSelectionForMove_2801811250(self_2801811788, s_2801811810.Field1, move_2801811789, count_2801811801).Field1, NTI2415919113)};
        }
        
        result_2801811813 = nimCopy(result_2801811813, Temporary1, NTI2415919115);

      return result_2801811813;

    }

    var count_2801811801 = getOption_2801811596(self_2801811788.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2801811802 = getFlag_2801811010(self_2801811788, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2801811820 = map_2801795507(selections_2801795574(self_2801811788), HEX3Aanonymous_2801811803);
    selectionsHEX3D_2801795833(self_2801811788, delete_2801801697(self_2801811788.document, selections_2801811820, selections_2801795574(self_2801811788), true, true));
    scrollToCursor_2801806116(self_2801811788, 3);
    updateTargetColumn_2801806679(self_2801811788, 3);

  
}

function deleteMoveJsWrapper_2801811783(self_2801811852, move_2801811853, which_2801811854, all_2801811855) {
    deleteMove_2801811787(self_2801811852, move_2801811853, which_2801811854, all_2801811855);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2801811783(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2801811914(self_2801811916, all_2801811917, p_2801811919) {
    
function HEX3Aanonymous_2801811921(s_2801811928) {
      var result_2801811931 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801811931 = nimCopy(result_2801811931, p_2801811919(s_2801811928), NTI2415919115);

      return result_2801811931;

    }

  var result_2801811920 = [];

    if (all_2801811917) {
    result_2801811920 = nimCopy(null, map_2801795507(self_2801811916, HEX3Aanonymous_2801811921), NTI2801795394);
    }
    else {
      result_2801811920 = nimCopy(null, self_2801811916, NTI2801805724);
      if ((0 < (result_2801811920).length)) {
      result_2801811920[chckIndx((result_2801811920).length - 1, 0, (result_2801811920).length - 1)] = nimCopy(result_2801811920[chckIndx((result_2801811920).length - 1, 0, (result_2801811920).length - 1)], p_2801811919(result_2801811920[chckIndx((result_2801811920).length - 1, 0, (result_2801811920).length - 1)]), NTI2415919115);
      }
      
    }
    

  return result_2801811920;

}

function selectMove_2801811891(self_2801811892, move_2801811893, which_2801811894, all_2801811895) {
    move_2801811893 = nimCopy(null, move_2801811893, NTI33554449);
    
function HEX3Aanonymous_2801811906(s_2801811909) {
      var result_2801811912 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801811912 = nimCopy(result_2801811912, getSelectionForMove_2801811250(self_2801811892, s_2801811909.Field1, move_2801811893, count_2801811905), NTI2415919115);

      return result_2801811912;

    }

    var count_2801811905 = getOption_2801811596(self_2801811892.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2801795833(self_2801811892, mapAllOrLast_2801811914(selections_2801795574(self_2801811892), all_2801811895, HEX3Aanonymous_2801811906));
    scrollToCursor_2801806116(self_2801811892, 3);
    updateTargetColumn_2801806679(self_2801811892, 3);

  
}

function selectMoveJsWrapper_2801811887(self_2801811981, move_2801811982, which_2801811983, all_2801811984) {
    selectMove_2801811891(self_2801811981, move_2801811982, which_2801811983, all_2801811984);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2801811887(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2801812020(self_2801812021, move_2801812022, which_2801812023, all_2801812024) {
    move_2801812022 = nimCopy(null, move_2801812022, NTI33554449);
    
function HEX3Aanonymous_2801812036(s_2801812043) {
        var Temporary1;

      var result_2801812046 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2801812035) {
        Temporary1 = getSelectionForMove_2801811250(self_2801812021, s_2801812043.Field1, move_2801812022, count_2801812034);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2801812043.Field1, NTI2415919113), Field1: nimCopy(null, getSelectionForMove_2801811250(self_2801812021, s_2801812043.Field1, move_2801812022, count_2801812034).Field1, NTI2415919113)};
        }
        
        result_2801812046 = nimCopy(result_2801812046, Temporary1, NTI2415919115);

      return result_2801812046;

    }

    var count_2801812034 = getOption_2801811596(self_2801812021.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2801812035 = getFlag_2801811010(self_2801812021, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2801812053 = map_2801795507(selections_2801795574(self_2801812021), HEX3Aanonymous_2801812036);
    selectionsHEX3D_2801795833(self_2801812021, delete_2801801697(self_2801812021.document, selections_2801812053, selections_2801795574(self_2801812021), true, true));
    scrollToCursor_2801806116(self_2801812021, 3);
    updateTargetColumn_2801806679(self_2801812021, 3);

  
}

function changeMoveJsWrapper_2801812016(self_2801812085, move_2801812086, which_2801812087, all_2801812088) {
    changeMove_2801812020(self_2801812085, move_2801812086, which_2801812087, all_2801812088);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2801812016(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2415919600(cursor_2415919601, default_2415919602, which_2415919603) {
  var result_2415919604 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2415919603) {
    case 0:
      result_2415919604 = nimCopy(result_2415919604, default_2415919602, NTI2415919115);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2801812237 = nimCopy(null, cursor_2415919601, NTI2415919113);
      var colontmp__2801812238 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2801812237, NTI2415919113), Field1: nimCopy(null, colontmp__2801812238, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2801812239 = nimCopy(null, cursor_2415919601, NTI2415919113);
      var colontmp__2801812240 = nimCopy(null, default_2415919602.Field1, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2801812239, NTI2415919113), Field1: nimCopy(null, colontmp__2801812240, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2801812241 = nimCopy(null, default_2415919602.Field0, NTI2415919113);
      var colontmp__2801812242 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2801812241, NTI2415919113), Field1: nimCopy(null, colontmp__2801812242, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2801812243 = nimCopy(null, default_2415919602.Field1, NTI2415919113);
      var colontmp__2801812244 = nimCopy(null, cursor_2415919601, NTI2415919113);
      result_2415919604 = nimCopy(result_2415919604, {Field0: nimCopy(null, colontmp__2801812243, NTI2415919113), Field1: nimCopy(null, colontmp__2801812244, NTI2415919113)}, NTI2415919115);
      break BeforeRet;
      break;
    }
  };

  return result_2415919604;

}

function cursor_2801811475(self_2801811476, selection_2801811477, which_2801811478) {
  var result_2801811479 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2801811478) {
    case 0:
      result_2801811479 = nimCopy(result_2801811479, cursor_2801811475(self_2801811476, selection_2801811477, getOption_2801805774(self_2801811476.editor, getContextWithMode_2801805740(self_2801811476, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919113);
      break BeforeRet;
      break;
    case 1:
      result_2801811479 = nimCopy(result_2801811479, selection_2801811477.Field1, NTI2415919113);
      break BeforeRet;
      break;
    case 2:
      result_2801811479 = nimCopy(result_2801811479, selection_2801811477.Field0, NTI2415919113);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2801811479 = nimCopy(result_2801811479, selection_2801811477.Field1, NTI2415919113);
      break BeforeRet;
      break;
    }
  };

  return result_2801811479;

}

function moveLast_2801812124(self_2801812125, move_2801812126, which_2801812127, all_2801812128, count_2801812129) {
      move_2801812126 = nimCopy(null, move_2801812126, NTI33554449);
      
function HEX3Aanonymous_2801812130(s_2801812133) {
        var result_2801812136 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801812136 = nimCopy(result_2801812136, toSelection_2415919600(getSelectionForMove_2801811250(self_2801812125, cursor_2801811475(self_2801812125, s_2801812133, which_2801812127), move_2801812126, count_2801812129).Field1, s_2801812133, getOption_2801805774(self_2801812125.editor, getContextWithMode_2801805740(self_2801812125, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919115);

        return result_2801812136;

      }
      
function HEX3Aanonymous_2801812153(s_2801812156) {
        var result_2801812159 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801812159 = nimCopy(result_2801812159, toSelection_2415919600(getSelectionForMove_2801811250(self_2801812125, cursor_2801811475(self_2801812125, s_2801812156, which_2801812127), move_2801812126, count_2801812129).Field1, s_2801812156, which_2801812127), NTI2415919115);

        return result_2801812159;

      }

    switch (which_2801812127) {
    case 0:
      selectionsHEX3D_2801795833(self_2801812125, mapAllOrLast_2801811914(selections_2801795574(self_2801812125), all_2801812128, HEX3Aanonymous_2801812130));
      break;
    default: 
      selectionsHEX3D_2801795833(self_2801812125, mapAllOrLast_2801811914(selections_2801795574(self_2801812125), all_2801812128, HEX3Aanonymous_2801812153));
      break;
    }
    scrollToCursor_2801806116(self_2801812125, which_2801812127);
    updateTargetColumn_2801806679(self_2801812125, which_2801812127);

  
}

function moveLastJsWrapper_2801812120(self_2801812198, move_2801812199, which_2801812200, all_2801812201, count_2801812202) {
    moveLast_2801812124(self_2801812198, move_2801812199, which_2801812200, all_2801812201, count_2801812202);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2801812120(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2801812251(self_2801812252, move_2801812253, which_2801812254, all_2801812255, count_2801812256) {
      move_2801812253 = nimCopy(null, move_2801812253, NTI33554449);
      
function HEX3Aanonymous_2801812257(s_2801812260) {
        var result_2801812263 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801812263 = nimCopy(result_2801812263, toSelection_2415919600(getSelectionForMove_2801811250(self_2801812252, cursor_2801811475(self_2801812252, s_2801812260, which_2801812254), move_2801812253, count_2801812256).Field0, s_2801812260, getOption_2801805774(self_2801812252.editor, getContextWithMode_2801805740(self_2801812252, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2415919115);

        return result_2801812263;

      }
      
function HEX3Aanonymous_2801812280(s_2801812283) {
        var result_2801812286 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801812286 = nimCopy(result_2801812286, toSelection_2415919600(getSelectionForMove_2801811250(self_2801812252, cursor_2801811475(self_2801812252, s_2801812283, which_2801812254), move_2801812253, count_2801812256).Field0, s_2801812283, which_2801812254), NTI2415919115);

        return result_2801812286;

      }

    switch (which_2801812254) {
    case 0:
      selectionsHEX3D_2801795833(self_2801812252, mapAllOrLast_2801811914(selections_2801795574(self_2801812252), all_2801812255, HEX3Aanonymous_2801812257));
      break;
    default: 
      selectionsHEX3D_2801795833(self_2801812252, mapAllOrLast_2801811914(selections_2801795574(self_2801812252), all_2801812255, HEX3Aanonymous_2801812280));
      break;
    }
    scrollToCursor_2801806116(self_2801812252, which_2801812254);
    updateTargetColumn_2801806679(self_2801812252, which_2801812254);

  
}

function moveFirstJsWrapper_2801812247(self_2801812325, move_2801812326, which_2801812327, all_2801812328, count_2801812329) {
    moveFirst_2801812251(self_2801812325, move_2801812326, which_2801812327, all_2801812328, count_2801812329);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2801812247(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2801812373(val_2801812375) {
  var result_2801812376 = ({val: ({impl: null}), has: false});

    result_2801812376.has = true;
    result_2801812376.val = nimCopy(result_2801812376.val, val_2801812375, NTI2835349507);

  return result_2801812376;

}

function isNone_2801802641(self_2801802643) {
  var result_2801802644 = false;

    result_2801802644 = !(self_2801802643.has);

  return result_2801802644;

}

function clear_2801802691(t_2801802694) {
    Label1: {
      var i_2801802752 = 0;
      var colontmp__2801812443 = 0;
      colontmp__2801812443 = (t_2801802694.data).length;
      var i_2801812444 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801812444 < colontmp__2801812443)) break Label3;
            i_2801802752 = i_2801812444;
            t_2801802694.data[chckIndx(i_2801802752, 0, (t_2801802694.data).length - 1)].Field0 = 0;
            t_2801802694.data[chckIndx(i_2801802752, 0, (t_2801802694.data).length - 1)].Field1 = 0;
            t_2801802694.data[chckIndx(i_2801802752, 0, (t_2801802694.data).length - 1)].Field2 = nimCopy(null, [], NTI2801795319);
            i_2801812444 = addInt(i_2801812444, 1);
          }
      };
    };
    t_2801802694.counter = 0;

  
}

function findBounds_2835349511(text_2835349512, regex_2835349513, start_2835349514) {
  var result_2835349517 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2835349513.impl.lastIndex = 0;
    var bounds_2835349536 = ((regex_2835349513.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2835349512, HEX2EHEX2E_1040187488(start_2835349514, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2801812446 = bounds_2835349536[chckIndx(0, 0, (bounds_2835349536).length - 1)];
    var colontmp__2801812447 = subInt(bounds_2835349536[chckIndx(1, 0, (bounds_2835349536).length - 1)], 1);
    result_2835349517 = nimCopy(result_2835349517, {Field0: colontmp__2801812446, Field1: colontmp__2801812447}, NTI2835349511);
    break BeforeRet;
  };

  return result_2835349517;

}

function get_2801803252(self_2801803254) {
  var result_2801803255 = null;

  BeforeRet: {
    if (isNone_2801802641(self_2801803254)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801803255 = self_2801803254.val;
    break BeforeRet;
  };

  return result_2801803255;

}

function mustRehash_2801803828(t_2801803830) {
  var result_2801803831 = false;

    if (!((t_2801803830.counter < (t_2801803830.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801803831 = ((mulInt((t_2801803830.data).length, 2) < mulInt(t_2801803830.counter, 3)) || (subInt((t_2801803830.data).length, t_2801803830.counter) < 4));

  return result_2801803831;

}

function rawInsert_2801804377(t_2801804381, data_2801804382, data_2801804382_Idx, key_2801804383, val_2801804384, hc_2801804385, h_2801804386) {
    data_2801804382[data_2801804382_Idx][chckIndx(h_2801804386, 0, (data_2801804382[data_2801804382_Idx]).length - 1)].Field1 = key_2801804383;
    data_2801804382[data_2801804382_Idx][chckIndx(h_2801804386, 0, (data_2801804382[data_2801804382_Idx]).length - 1)].Field2 = nimCopy(null, val_2801804384, NTI2801795319);
    data_2801804382[data_2801804382_Idx][chckIndx(h_2801804386, 0, (data_2801804382[data_2801804382_Idx]).length - 1)].Field0 = hc_2801804385;

  
}

function enlarge_2801803998(t_2801804001) {
    var n_2801804004 = [];
    n_2801804004 = new Array(chckRange(mulInt((t_2801804001.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801804001.data).length, 2), 0, 2147483647) ; ++i) { n_2801804004[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2801804001.data; t_2801804001.data = n_2801804004; n_2801804004 = Temporary1;    Label2: {
      var i_2801804073 = 0;
      var colontmp__2801812450 = 0;
      colontmp__2801812450 = (n_2801804004).length - 1;
      var res_2801812451 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801812451 <= colontmp__2801812450)) break Label4;
            i_2801804073 = res_2801812451;
            var eh_2801804147 = n_2801804004[chckIndx(i_2801804073, 0, (n_2801804004).length - 1)].Field0;
            if (isFilled_1308622880(eh_2801804147)) {
            var j_2801804151 = (eh_2801804147 & (t_2801804001.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2801804001.data[chckIndx(j_2801804151, 0, (t_2801804001.data).length - 1)].Field0)) break Label6;
                  j_2801804151 = nextTry_1308622883(j_2801804151, (t_2801804001.data).length - 1);
                }
            };
            rawInsert_2801804377(t_2801804001, t_2801804001, "data", n_2801804004[chckIndx(i_2801804073, 0, (n_2801804004).length - 1)].Field1, n_2801804004[chckIndx(i_2801804073, 0, (n_2801804004).length - 1)].Field2, eh_2801804147, j_2801804151);
            }
            
            res_2801812451 = addInt(res_2801812451, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801804606(t_2801804609, key_2801804610, hc_2801804611) {
  var result_2801804612 = 0;

  BeforeRet: {
    if (((t_2801804609.data).length == 0)) {
    result_2801804612 = -1;
    break BeforeRet;
    }
    
    var h_2801804668 = (hc_2801804611 & (t_2801804609.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801804609.data[chckIndx(h_2801804668, 0, (t_2801804609.data).length - 1)].Field0)) break Label2;
          if (((t_2801804609.data[chckIndx(h_2801804668, 0, (t_2801804609.data).length - 1)].Field0 == hc_2801804611) && (t_2801804609.data[chckIndx(h_2801804668, 0, (t_2801804609.data).length - 1)].Field1 == key_2801804610))) {
          result_2801804612 = h_2801804668;
          break BeforeRet;
          }
          
          h_2801804668 = nextTry_1308622883(h_2801804668, (t_2801804609.data).length - 1);
        }
    };
    result_2801804612 = subInt(-1, h_2801804668);
  };

  return result_2801804612;

}

function HEX5BHEX5DHEX3D_2801803325(t_2801803328, key_2801803329, val_2801803330) {
    if (((t_2801803328.data).length == 0)) {
    var correctSizeHEX60gensym147_2801803384 = slotsNeeded_1308622891(32);
    t_2801803328.counter = 0;
    t_2801803328.data = new Array(chckRange(correctSizeHEX60gensym147_2801803384, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym147_2801803384, 0, 2147483647) ; ++i) { t_2801803328.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2801803389 = [0];
    var index_2801803696 = rawGet_2801803390(t_2801803328, key_2801803329, hc_2801803389, 0);
    if ((0 <= index_2801803696)) {
    t_2801803328.data[chckIndx(index_2801803696, 0, (t_2801803328.data).length - 1)].Field2 = nimCopy(null, val_2801803330, NTI2801795319);
    }
    else {
      if (((t_2801803328.data).length == 0)) {
      var correctSizeHEX60gensym152_2801803823 = slotsNeeded_1308622891(32);
      t_2801803328.counter = 0;
      t_2801803328.data = new Array(chckRange(correctSizeHEX60gensym152_2801803823, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym152_2801803823, 0, 2147483647) ; ++i) { t_2801803328.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2801803828(t_2801803328)) {
      enlarge_2801803998(t_2801803328);
      index_2801803696 = rawGetKnownHC_2801804606(t_2801803328, key_2801803329, hc_2801803389[0]);
      }
      
      index_2801803696 = subInt(-1, index_2801803696);
      rawInsert_2801804377(t_2801803328, t_2801803328, "data", key_2801803329, val_2801803330, hc_2801803389[0], index_2801803696);
      t_2801803328.counter = addInt(t_2801803328.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2801804949(t_2801804952, key_2801804953) {
    var hc_2801804954 = [0];
    var i_2801804961 = rawGet_2801803390(t_2801804952, key_2801804953, hc_2801804954, 0);
    var mskHEX60gensym36_2801804965 = (t_2801804952.data).length - 1;
    if ((0 <= i_2801804961)) {
    t_2801804952.counter = subInt(t_2801804952.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2801804972 = i_2801804961;
            var rHEX60gensym36_2801804973 = jHEX60gensym36_2801804972;
            t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)].Field0 = 0;
            t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)].Field1 = 0;
            t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)].Field2 = nimCopy(null, [], NTI2801795319);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2801804961 = (addInt(i_2801804961, 1) & mskHEX60gensym36_2801804965);
                  if (isEmpty_1308622877(t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2801804973 = (t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)].Field0 & mskHEX60gensym36_2801804965);
                  if (!(((((rHEX60gensym36_2801804973 <= i_2801804961) && (jHEX60gensym36_2801804972 < rHEX60gensym36_2801804973)) || ((jHEX60gensym36_2801804972 < rHEX60gensym36_2801804973) && (i_2801804961 < jHEX60gensym36_2801804972))) || ((i_2801804961 < jHEX60gensym36_2801804972) && (rHEX60gensym36_2801804973 <= i_2801804961))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2801804952.data[chckIndx(jHEX60gensym36_2801804972, 0, (t_2801804952.data).length - 1)] = nimCopy(t_2801804952.data[chckIndx(jHEX60gensym36_2801804972, 0, (t_2801804952.data).length - 1)], t_2801804952.data[chckIndx(i_2801804961, 0, (t_2801804952.data).length - 1)], NTI2801795331);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2801802635(self_2801802636) {
  BeforeRet: {
    if (isNone_2801802641(self_2801802636.searchRegex)) {
    clear_2801802691(self_2801802636.searchResults);
    markDirty_2382364710(self_2801802636);
    break BeforeRet;
    }
    
    Label1: {
      var i_2801803232 = 0;
      var line_2801803233 = [];
      var i_2801812439 = 0;
      var L_2801812440 = (self_2801802636.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801812439 < L_2801812440)) break Label3;
            i_2801803232 = i_2801812439;
            line_2801803233 = self_2801802636.document.lines[chckIndx(i_2801812439, 0, (self_2801802636.document.lines).length - 1)];
            var selections_2801803238 = [];
            var start_2801803239 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2801803239 < (line_2801803233).length)) break Label5;
                  var bounds_2801803264 = findBounds_2835349511(line_2801803233, get_2801803252(self_2801802636.searchRegex), start_2801803239);
                  if ((bounds_2801803264.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2801803238.push({Field0: {Field0: i_2801803232, Field1: bounds_2801803264.Field0}, Field1: {Field0: i_2801803232, Field1: addInt(bounds_2801803264.Field1, 1)}});;
                  start_2801803239 = nimMax(addInt(bounds_2801803264.Field1, 1), addInt(start_2801803239, 1));
                }
            };
            if ((0 < (selections_2801803238).length)) {
            HEX5BHEX5DHEX3D_2801803325(self_2801802636.searchResults, i_2801803232, selections_2801803238);
            }
            else {
            del_2801804949(self_2801802636.searchResults, i_2801803232);
            }
            
            i_2801812439 = addInt(i_2801812439, 1);
            if (!(((self_2801802636.document.lines).length == L_2801812440))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2382364710(self_2801802636);
  };

  
}

function setSearchQuery_2801812370(self_2801812371, query_2801812372) {
    self_2801812371.searchQuery = nimCopy(null, query_2801812372, NTI33554449);
    self_2801812371.searchRegex = nimCopy(self_2801812371.searchRegex, some_2801812373(re_2835349563(query_2801812372)), NTI2801795308);
    updateSearchResults_2801802635(self_2801812371);

  
}

function setSearchQueryJsWrapper_2801812366(self_2801812415, query_2801812416) {
    setSearchQuery_2801812370(self_2801812415, query_2801812416);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2801812366(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2801812462(self_2801812463, move_2801812464, count_2801812465) {
    var selection_2801812466 = getSelectionForMove_2801811250(self_2801812463, selection_2801795577(self_2801812463).Field1, move_2801812464, count_2801812465);
    selectionHEX3D_2801795583(self_2801812463, selection_2801812466);
    setSearchQuery_2801812370(self_2801812463, contentString_2801796773(self_2801812463.document, selection_2801812466));

  
}

function setSearchQueryFromMoveJsWrapper_2801812458(self_2801812496, move_2801812497, count_2801812498) {
    setSearchQueryFromMove_2801812462(self_2801812496, move_2801812497, count_2801812498);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2801812458(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2919235608() {
  var result_2919235614 = ({val: null});

  return result_2919235614;

}

function isSome_2801801498(self_2801801500) {
  var result_2801801501 = false;

    result_2801801501 = !((self_2801801500.val == null));

  return result_2801801501;

}
async function getOrCreateLanguageServer_2919235592(languageId_2919235593, filename_2919235594) {
  var result_2919235598 = null;

  BeforeRet: {
    result_2919235598 = none_2919235608();
    break BeforeRet;
  };

  return result_2919235598;

}
async function saveTempFile_2801801405(self_2801801406, filename_2801801407) {
  var result_2801801409 = null;

  BeforeRet: {
    result_2801801409 = undefined;
    break BeforeRet;
  };

  return result_2801801409;

}

function hash_2902458976(x_2902458978) {
  var result_2902458979 = 0;

    result_2902458979 = hashWangYi1_1325400244(x_2902458978);

  return result_2902458979;

}

function rawGet_2902458969(t_2902458972, key_2902458973, hc_2902458974, hc_2902458974_Idx) {
  var result_2902458975 = 0;

  BeforeRet: {
    hc_2902458974[hc_2902458974_Idx] = hash_2902458976(key_2902458973);
    if ((hc_2902458974[hc_2902458974_Idx] == 0)) {
    hc_2902458974[hc_2902458974_Idx] = 314159265;
    }
    
    if (((t_2902458972.data).length == 0)) {
    result_2902458975 = -1;
    break BeforeRet;
    }
    
    var h_2902459038 = (hc_2902458974[hc_2902458974_Idx] & (t_2902458972.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field0)) break Label2;
          if (((t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field0 == hc_2902458974[hc_2902458974_Idx]) && (t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field1 == key_2902458973))) {
          result_2902458975 = h_2902459038;
          break BeforeRet;
          }
          
          h_2902459038 = nextTry_1308622883(h_2902459038, (t_2902458972.data).length - 1);
        }
    };
    result_2902458975 = subInt(-1, h_2902459038);
  };

  return result_2902458975;

}

function mustRehash_2902459536(t_2902459538) {
  var result_2902459539 = false;

    if (!((t_2902459538.counter < (t_2902459538.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2902459539 = ((mulInt((t_2902459538.data).length, 2) < mulInt(t_2902459538.counter, 3)) || (subInt((t_2902459538.data).length, t_2902459538.counter) < 4));

  return result_2902459539;

}

function rawInsert_2902459985(t_2902459989, data_2902459990, data_2902459990_Idx, key_2902459991, val_2902459992, hc_2902459993, h_2902459994) {
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field1 = key_2902459991;
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field2 = val_2902459992;
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field0 = hc_2902459993;

  
}

function enlarge_2902459691(t_2902459694) {
    var n_2902459697 = [];
    n_2902459697 = new Array(chckRange(mulInt((t_2902459694.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2902459694.data).length, 2), 0, 2147483647) ; ++i) { n_2902459697[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2902459694.data; t_2902459694.data = n_2902459697; n_2902459697 = Temporary1;    Label2: {
      var i_2902459761 = 0;
      var colontmp__2801812904 = 0;
      colontmp__2801812904 = (n_2902459697).length - 1;
      var res_2801812905 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801812905 <= colontmp__2801812904)) break Label4;
            i_2902459761 = res_2801812905;
            var eh_2902459815 = n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field0;
            if (isFilled_1308622880(eh_2902459815)) {
            var j_2902459819 = (eh_2902459815 & (t_2902459694.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2902459694.data[chckIndx(j_2902459819, 0, (t_2902459694.data).length - 1)].Field0)) break Label6;
                  j_2902459819 = nextTry_1308622883(j_2902459819, (t_2902459694.data).length - 1);
                }
            };
            rawInsert_2902459985(t_2902459694, t_2902459694, "data", n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field1, n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field2, eh_2902459815, j_2902459819);
            }
            
            res_2801812905 = addInt(res_2801812905, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2902460172(t_2902460175, key_2902460176, hc_2902460177) {
  var result_2902460178 = 0;

  BeforeRet: {
    if (((t_2902460175.data).length == 0)) {
    result_2902460178 = -1;
    break BeforeRet;
    }
    
    var h_2902460229 = (hc_2902460177 & (t_2902460175.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field0)) break Label2;
          if (((t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field0 == hc_2902460177) && (t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field1 == key_2902460176))) {
          result_2902460178 = h_2902460229;
          break BeforeRet;
          }
          
          h_2902460229 = nextTry_1308622883(h_2902460229, (t_2902460175.data).length - 1);
        }
    };
    result_2902460178 = subInt(-1, h_2902460229);
  };

  return result_2902460178;

}

function HEX5BHEX5DHEX3D_2902459363(t_2902459366, key_2902459367, val_2902459368) {
    if (((t_2902459366.data).length == 0)) {
    var correctSizeHEX60gensym12_2902459417 = slotsNeeded_1308622891(32);
    t_2902459366.counter = 0;
    t_2902459366.data = new Array(chckRange(correctSizeHEX60gensym12_2902459417, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2902459417, 0, 2147483647) ; ++i) { t_2902459366.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2902459422 = [0];
    var index_2902459429 = rawGet_2902458969(t_2902459366, key_2902459367, hc_2902459422, 0);
    if ((0 <= index_2902459429)) {
    t_2902459366.data[chckIndx(index_2902459429, 0, (t_2902459366.data).length - 1)].Field2 = val_2902459368;
    }
    else {
      if (((t_2902459366.data).length == 0)) {
      var correctSizeHEX60gensym15_2902459531 = slotsNeeded_1308622891(32);
      t_2902459366.counter = 0;
      t_2902459366.data = new Array(chckRange(correctSizeHEX60gensym15_2902459531, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2902459531, 0, 2147483647) ; ++i) { t_2902459366.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2902459536(t_2902459366)) {
      enlarge_2902459691(t_2902459366);
      index_2902459429 = rawGetKnownHC_2902460172(t_2902459366, key_2902459367, hc_2902459422[0]);
      }
      
      index_2902459429 = subInt(-1, index_2902459429);
      rawInsert_2902459985(t_2902459366, t_2902459366, "data", key_2902459367, val_2902459368, hc_2902459422[0], index_2902459429);
      t_2902459366.counter = addInt(t_2902459366.counter, 1);
    }
    

  
}

function rawGet_2902458515(t_2902458518, key_2902458519, hc_2902458520, hc_2902458520_Idx) {
  var result_2902458521 = 0;

  BeforeRet: {
    hc_2902458520[hc_2902458520_Idx] = hash_1325400491(key_2902458519);
    if ((hc_2902458520[hc_2902458520_Idx] == 0)) {
    hc_2902458520[hc_2902458520_Idx] = 314159265;
    }
    
    if (((t_2902458518.data).length == 0)) {
    result_2902458521 = -1;
    break BeforeRet;
    }
    
    var h_2902458573 = (hc_2902458520[hc_2902458520_Idx] & (t_2902458518.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field0)) break Label2;
          if (((t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field0 == hc_2902458520[hc_2902458520_Idx]) && eqStrings(t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field1, key_2902458519))) {
          result_2902458521 = h_2902458573;
          break BeforeRet;
          }
          
          h_2902458573 = nextTry_1308622883(h_2902458573, (t_2902458518.data).length - 1);
        }
    };
    result_2902458521 = subInt(-1, h_2902458573);
  };

  return result_2902458521;

}

function hasKey_2902458508(t_2902458511, key_2902458512) {
  var result_2902458513 = false;

    var hc_2902458514 = [0];
    result_2902458513 = (0 <= rawGet_2902458515(t_2902458511, key_2902458512, hc_2902458514, 0));

  return result_2902458513;

}

function contains_2902458502(t_2902458505, key_2902458506) {
  var result_2902458507 = false;

  BeforeRet: {
    result_2902458507 = hasKey_2902458508(t_2902458505, key_2902458506);
    break BeforeRet;
  };

  return result_2902458507;

}

function HEX5BHEX5D_2902458807(t_2902458810, key_2902458811) {
  var result_2902458812 = null;
  var result_2902458812_Idx = 0;

    var hcHEX60gensym22_2902458813 = [0];
    var indexHEX60gensym22_2902458820 = rawGet_2902458515(t_2902458810, key_2902458811, hcHEX60gensym22_2902458813, 0);
    if ((0 <= indexHEX60gensym22_2902458820)) {
    result_2902458812 = t_2902458810.data[chckIndx(indexHEX60gensym22_2902458820, 0, (t_2902458810.data).length - 1)]; result_2902458812_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2902458811);
    }
    

  return [result_2902458812, result_2902458812_Idx];

}

function mustRehash_2902460736(t_2902460738) {
  var result_2902460739 = false;

    if (!((t_2902460738.counter < (t_2902460738.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2902460739 = ((mulInt((t_2902460738.data).length, 2) < mulInt(t_2902460738.counter, 3)) || (subInt((t_2902460738.data).length, t_2902460738.counter) < 4));

  return result_2902460739;

}

function rawInsert_2902461185(t_2902461189, data_2902461190, data_2902461190_Idx, key_2902461191, val_2902461192, hc_2902461193, h_2902461194) {
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field1 = nimCopy(null, key_2902461191, NTI33554449);
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field2 = nimCopy(null, val_2902461192, NTI2902458397);
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field0 = hc_2902461193;

  
}

function enlarge_2902460891(t_2902460894) {
    var n_2902460897 = [];
    n_2902460897 = new Array(chckRange(mulInt((t_2902460894.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2902460894.data).length, 2), 0, 2147483647) ; ++i) { n_2902460897[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2902460894.data; t_2902460894.data = n_2902460897; n_2902460897 = Temporary1;    Label2: {
      var i_2902460961 = 0;
      var colontmp__2801812911 = 0;
      colontmp__2801812911 = (n_2902460897).length - 1;
      var res_2801812912 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801812912 <= colontmp__2801812911)) break Label4;
            i_2902460961 = res_2801812912;
            var eh_2902461015 = n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field0;
            if (isFilled_1308622880(eh_2902461015)) {
            var j_2902461019 = (eh_2902461015 & (t_2902460894.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2902460894.data[chckIndx(j_2902461019, 0, (t_2902460894.data).length - 1)].Field0)) break Label6;
                  j_2902461019 = nextTry_1308622883(j_2902461019, (t_2902460894.data).length - 1);
                }
            };
            rawInsert_2902461185(t_2902460894, t_2902460894, "data", n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field1, n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field2, eh_2902461015, j_2902461019);
            }
            
            res_2801812912 = addInt(res_2801812912, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2902461354(t_2902461357, key_2902461358, hc_2902461359) {
  var result_2902461360 = 0;

  BeforeRet: {
    if (((t_2902461357.data).length == 0)) {
    result_2902461360 = -1;
    break BeforeRet;
    }
    
    var h_2902461411 = (hc_2902461359 & (t_2902461357.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field0)) break Label2;
          if (((t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field0 == hc_2902461359) && eqStrings(t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field1, key_2902461358))) {
          result_2902461360 = h_2902461411;
          break BeforeRet;
          }
          
          h_2902461411 = nextTry_1308622883(h_2902461411, (t_2902461357.data).length - 1);
        }
    };
    result_2902461360 = subInt(-1, h_2902461411);
  };

  return result_2902461360;

}

function HEX5BHEX5DHEX3D_2902460563(t_2902460566, key_2902460567, val_2902460568) {
    if (((t_2902460566.data).length == 0)) {
    var correctSizeHEX60gensym24_2902460617 = slotsNeeded_1308622891(32);
    t_2902460566.counter = 0;
    t_2902460566.data = new Array(chckRange(correctSizeHEX60gensym24_2902460617, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2902460617, 0, 2147483647) ; ++i) { t_2902460566.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2902460622 = [0];
    var index_2902460629 = rawGet_2902458515(t_2902460566, key_2902460567, hc_2902460622, 0);
    if ((0 <= index_2902460629)) {
    t_2902460566.data[chckIndx(index_2902460629, 0, (t_2902460566.data).length - 1)].Field2 = nimCopy(null, val_2902460568, NTI2902458397);
    }
    else {
      if (((t_2902460566.data).length == 0)) {
      var correctSizeHEX60gensym27_2902460731 = slotsNeeded_1308622891(32);
      t_2902460566.counter = 0;
      t_2902460566.data = new Array(chckRange(correctSizeHEX60gensym27_2902460731, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2902460731, 0, 2147483647) ; ++i) { t_2902460566.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2902460736(t_2902460566)) {
      enlarge_2902460891(t_2902460566);
      index_2902460629 = rawGetKnownHC_2902461354(t_2902460566, key_2902460567, hc_2902460622[0]);
      }
      
      index_2902460629 = subInt(-1, index_2902460629);
      rawInsert_2902461185(t_2902460566, t_2902460566, "data", key_2902460567, val_2902460568, hc_2902460622[0], index_2902460629);
      t_2902460566.counter = addInt(t_2902460566.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2902459310(self_2902459311, filename_2902459312, handler_2902459316) {
    var Temporary1;

  var result_2902459317 = 0;

    result_2902459317 = handleIdCounter_2902458447[0];
    handleIdCounter_2902458447[0] = addInt(handleIdCounter_2902458447[0], 1);
    HEX5BHEX5DHEX3D_2902459363(self_2902459311.onRequestSave, result_2902459317, handler_2902459316);
    if (contains_2902458502(self_2902459311.onRequestSaveIndex, filename_2902459312)) {
    (Temporary1 = HEX5BHEX5D_2902458807(self_2902459311.onRequestSaveIndex, filename_2902459312), Temporary1)[0][Temporary1[1]].push(result_2902459317);;
    }
    else {
    HEX5BHEX5DHEX3D_2902460563(self_2902459311.onRequestSaveIndex, filename_2902459312, [result_2902459317]);
    }
    

  return result_2902459317;

}

function isNone_2801801526(self_2801801528) {
  var result_2801801529 = false;

    result_2801801529 = (self_2801801528.val == null);

  return result_2801801529;

}

function get_2801801518(self_2801801520) {
  var result_2801801521 = null;
  var result_2801801521_Idx = 0;

  BeforeRet: {
    if (isNone_2801801526(self_2801801520)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801801521 = self_2801801520; result_2801801521_Idx = "val";
    break BeforeRet;
  };

  return [result_2801801521, result_2801801521_Idx];

}
async function getLanguageServer_2801812526(self_2801812527) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2801812600(targetFilename_2801812601) {
        var result_2801812603 = null;

        BeforeRet: {
          (await saveTempFile_2801801405(self_2801812527.document, targetFilename_2801812601));
          result_2801812603 = undefined;
          break BeforeRet;
        };

        return result_2801812603;

      }
      var Temporary3;

  var result_2801812530 = null;

  BeforeRet: {
      var oHEX60gensym837_2801812542 = getLanguageForFile_2885681156(self_2801812527.document.filename);
      if (!isSome_2315255872(oHEX60gensym837_2801812542)) Temporary2 = false; else {        var languageId_2801812565 = nimCopy(null, get_2801801248(oHEX60gensym837_2801812542), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2801812565;
    }
    else {
      result_2801812530 = none_2919235608();
      break BeforeRet;
    }
    
    var languageId_2801812576 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2801801498(self_2801812527.document.languageServer)) {
    result_2801812530 = self_2801812527.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2801812527.document.languageServer = nimCopy(self_2801812527.document.languageServer, (await getOrCreateLanguageServer_2919235592(languageId_2801812576, self_2801812527.document.filename)), NTI2801795270);
      if (isSome_2801801498(self_2801812527.document.languageServer)) {
      var callback_2801812614 = HEX3Aanonymous_2801812600;
      self_2801812527.document.onRequestSaveHandle = addOnRequestSaveHandler_2902459310((Temporary3 = get_2801801518(self_2801812527.document.languageServer), Temporary3)[0][Temporary3[1]], self_2801812527.document.filename, callback_2801812614);
      }
      
      result_2801812530 = self_2801812527.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2801812530;

}

function get_2801812675(self_2801812677) {
  var result_2801812678 = null;

    if (isNone_2801801526(self_2801812677)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801812678 = self_2801812677["val"];

  return result_2801812678;

}

function isSome_2801812705(self_2801812707) {
  var result_2801812708 = false;

    result_2801812708 = self_2801812707.has;

  return result_2801812708;

}

function isNone_2801812730(self_2801812732) {
  var result_2801812733 = false;

    result_2801812733 = !(self_2801812732.has);

  return result_2801812733;

}

function get_2801812722(self_2801812724) {
  var result_2801812725 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2801812730(self_2801812724)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801812725 = self_2801812724.val;

  return result_2801812725;

}
async function gotoDefinitionAsync_2801812635(self_2801812636) {
  var result_2801812638 = null;

  BeforeRet: {
    var languageServer_2801812648 = (await getLanguageServer_2801812526(self_2801812636));
    if (isNone_2801801526(languageServer_2801812648)) {
    result_2801812638 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2801801498(languageServer_2801812648)) {
    var definition_2801812700 = (await getDefinition_2902458435(get_2801812675(languageServer_2801812648), self_2801812636.document.filename, selection_2801795577(self_2801812636).Field1));
    if (isSome_2801812705(definition_2801812700)) {
    selectionHEX3D_2801795583(self_2801812636, toSelection_2415919597(get_2801812722(definition_2801812700).location));
    scrollToCursor_2801806116(self_2801812636, 0);
    }
    
    }
    
    result_2801812638 = undefined;
    break BeforeRet;
  };

  return result_2801812638;

}

function gotoDefinition_2801812857(self_2801812858) {
    var _ = gotoDefinitionAsync_2801812635(self_2801812858);

  
}

function gotoDefinitionJsWrapper_2801812853(self_2801812886) {
    gotoDefinition_2801812857(self_2801812886);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2801812853(this));};
async function getCompletionsAsync_2801808206(self_2801808207) {
  var result_2801812767 = null;

  BeforeRet: {
    var languageServer_2801812777 = (await getLanguageServer_2801812526(self_2801808207));
    if (isNone_2801801526(languageServer_2801812777)) {
    result_2801812767 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2801801498(languageServer_2801812777)) {
    var completions_2801812811 = (await getCompletions_2902458445(get_2801812675(languageServer_2801812777), self_2801808207.document.languageId, self_2801808207.document.filename, selection_2801795577(self_2801808207).Field1));
    self_2801808207.completions = nimCopy(null, completions_2801812811, NTI2902458446);
    self_2801808207.selectedCompletion = clamp_1660945119(self_2801808207.selectedCompletion, 0, (self_2801808207.completions).length - 1);
    if (((self_2801808207.completions).length == 0)) {
    self_2801808207.showCompletions = false;
    }
    else {
      self_2801808207.showCompletions = true;
    }
    
    markDirty_2382364710(self_2801808207);
    }
    
    result_2801812767 = undefined;
    break BeforeRet;
  };

  return result_2801812767;

}

function getCompletions_2801812921(self_2801812922) {
    var _ = getCompletionsAsync_2801808206(self_2801812922);

  
}

function getCompletionsJsWrapper_2801812917(self_2801812950) {
    getCompletions_2801812921(self_2801812950);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2801812917(this));};

function hideCompletions_2801812971(self_2801812972) {
    self_2801812972.showCompletions = false;
    markDirty_2382364710(self_2801812972);

  
}

function hideCompletionsJsWrapper_2801812967(self_2801813000) {
    hideCompletions_2801812971(self_2801813000);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2801812967(this));};

function selectPrevCompletion_2801813021(self_2801813022) {
    if ((0 < (self_2801813022.completions).length)) {
    self_2801813022.selectedCompletion = clamp_1660945119(subInt(self_2801813022.selectedCompletion, 1), 0, subInt((self_2801813022.completions).length, 1));
    }
    else {
      self_2801813022.selectedCompletion = 0;
    }
    
    markDirty_2382364710(self_2801813022);

  
}

function selectPrevCompletionJsWrapper_2801813017(self_2801813064) {
    selectPrevCompletion_2801813021(self_2801813064);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2801813017(this));};

function selectNextCompletion_2801813085(self_2801813086) {
    if ((0 < (self_2801813086.completions).length)) {
    self_2801813086.selectedCompletion = clamp_1660945119(addInt(self_2801813086.selectedCompletion, 1), 0, subInt((self_2801813086.completions).length, 1));
    }
    else {
      self_2801813086.selectedCompletion = 0;
    }
    
    markDirty_2382364710(self_2801813086);

  
}

function selectNextCompletionJsWrapper_2801813081(self_2801813128) {
    selectNextCompletion_2801813085(self_2801813128);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2801813081(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2801813337 = 0;
      var L_2801813338 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801813337 < L_2801813338)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2801813337, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2801813337 = addInt(i_2801813337, 1);
            if (!(((x_1593835575).length == L_2801813338))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2415919425(cursor_2415919426) {
  var result_2415919427 = [];

  BeforeRet: {
    result_2415919427 = nimCopy(null, (HEX24_369098760(cursor_2415919426.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2415919426.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2415919427;

}

function addQuoted_2801813215(s_2801813217, s_2801813217_Idx, x_2801813218) {
    s_2801813217[s_2801813217_Idx].push.apply(s_2801813217[s_2801813217_Idx], HEX24_2415919425(x_2801813218));;

  
}

function addQuoted_2801813244(s_2801813246, s_2801813246_Idx, x_2801813247) {
    s_2801813246[s_2801813246_Idx].push.apply(s_2801813246[s_2801813246_Idx], reprEnum(x_2801813247, NTI2902458411));;

  
}

function HEX24_2801813165(x_2801813167) {
  var result_2801813168 = [[]];

    result_2801813168[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym905_2801813179 = 0;
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [110,97,109,101]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_1593835572(result_2801813168, 0, x_2801813167.name);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [115,99,111,112,101]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_1593835572(result_2801813168, 0, x_2801813167.scope);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [108,111,99,97,116,105,111,110]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_2801813215(result_2801813168, 0, x_2801813167.location);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [102,105,108,101,110,97,109,101]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_1593835572(result_2801813168, 0, x_2801813167.filename);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [107,105,110,100]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_2801813244(result_2801813168, 0, x_2801813167.kind);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [116,121,112]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_1593835572(result_2801813168, 0, x_2801813167.typ);
    if ((0 < countHEX60gensym905_2801813179)) {
    result_2801813168[0].push.apply(result_2801813168[0], [44,32]);;
    }
    
    result_2801813168[0].push.apply(result_2801813168[0], [100,111,99]);;
    result_2801813168[0].push.apply(result_2801813168[0], [58,32]);;
    countHEX60gensym905_2801813179 += 1;
    addQuoted_1593835572(result_2801813168, 0, x_2801813167.doc);
    result_2801813168[0].push.apply(result_2801813168[0], [41]);;

  return result_2801813168[0];

}

function formatValue_2801813160(result_2801813162, result_2801813162_Idx, value_2801813163, specifier_2801813164) {
    formatValue_721420459(result_2801813162, result_2801813162_Idx, HEX24_2801813165(value_2801813163), specifier_2801813164);

  
}

function applySelectedCompletion_2801813149(self_2801813150) {
  BeforeRet: {
    if (!(self_2801813150.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2801813150.completions).length - 1 < self_2801813150.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2801813154 = nimCopy(null, self_2801813150.completions[chckIndx(self_2801813150.selectedCompletion, 0, (self_2801813150.completions).length - 1)], NTI2902458414);
    var fmtRes_2801813159 = [mnewString(0)];
    fmtRes_2801813159[0].push.apply(fmtRes_2801813159[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2801813160(fmtRes_2801813159, 0, com_2801813154, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2801813159[0], NTI33554449)]);
    var cursor_2801813277 = nimCopy(null, selection_2801795577(self_2801813150).Field1, NTI2415919113);
    if ((cursor_2801813277.Field1 == 0)) {
    selectionsHEX3D_2801795833(self_2801813150, insert_2801802194(self_2801813150.document, [nimCopy(null, toSelection_2415919597(cursor_2801813277), NTI2415919115)], selections_2801795574(self_2801813150), com_2801813154.name, true, true, false));
    }
    else {
      var line_2801813278 = getLine_2801795438(self_2801813150.document, cursor_2801813277.Field0);
      var column_2801813279 = cursor_2801813277.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2801813279)) break Label2;
            switch (line_2801813278[chckIndx(subInt(column_2801813279, 1), 0, (line_2801813278).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2801813279 = subInt(column_2801813279, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2801795833(self_2801813150, edit_2801802411(self_2801813150.document, [nimCopy(null, {Field0: {Field0: cursor_2801813277.Field0, Field1: column_2801813279}, Field1: nimCopy(null, cursor_2801813277, NTI2415919113)}, NTI2801806898)], selections_2801795574(self_2801813150), com_2801813154.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2801813145(self_2801813320) {
    applySelectedCompletion_2801813149(self_2801813320);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2801813145(this));};

function handleHexChar_2046820363(c_2046820364) {
  var result_2046820365 = 0;

    switch (c_2046820364) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2046820365 = subInt(c_2046820364, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2046820365 = addInt(subInt(c_2046820364, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2046820365 = addInt(subInt(c_2046820364, 65), 10);
      break;
    default: 
      break;
    }

  return result_2046820365;

}

function hexbyte_2046820409(hex_2046820410) {
  var result_2046820411 = 0;

    result_2046820411 = handleHexChar_2046820363(hex_2046820410);

  return result_2046820411;

}

function parseOid_2046820432(str_2046820433) {
  var result_2046820434 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2046820433).length == 24))) {
    break BeforeRet;
    }
    
    result_2046820434.padding = 0;
    result_2046820434.time = 0;
    Label1: {
      var i_2046820439 = 0;
      var i_2952790119 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790119 < 4)) break Label3;
            i_2046820439 = i_2952790119;
            var hexValue_2046820444 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, i_2046820439), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, i_2046820439), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.time = (result_2046820434.time | (hexValue_2046820444 << mulInt(i_2046820439, 8)));
            i_2952790119 = addInt(i_2952790119, 1);
          }
      };
    };
    result_2046820434.fuzz = 0;
    Label4: {
      var i_2046820453 = 0;
      var i_2952790122 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2952790122 < 4)) break Label6;
            i_2046820453 = i_2952790122;
            var hexValue_2046820458 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, addInt(i_2046820453, 4)), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, addInt(i_2046820453, 4)), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.fuzz = (result_2046820434.fuzz | (hexValue_2046820458 << mulInt(i_2046820453, 8)));
            i_2952790122 = addInt(i_2952790122, 1);
          }
      };
    };
    result_2046820434.count = 0;
    Label7: {
      var i_2046820467 = 0;
      var i_2952790125 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2952790125 < 4)) break Label9;
            i_2046820467 = i_2952790125;
            var hexValue_2046820472 = ((hexbyte_2046820409(str_2046820433[chckIndx(mulInt(2, addInt(i_2046820467, 8)), 0, (str_2046820433).length - 1)]) << 4) | hexbyte_2046820409(str_2046820433[chckIndx(addInt(mulInt(2, addInt(i_2046820467, 8)), 1), 0, (str_2046820433).length - 1)]));
            result_2046820434.count = (result_2046820434.count | (hexValue_2046820472 << mulInt(i_2046820467, 8)));
            i_2952790125 = addInt(i_2952790125, 1);
          }
      };
    };
  };

  return result_2046820434;

}

function parseId_2046820606(s_2046820607) {
  var result_2046820608 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((s_2046820607).length == 24))) {
    rawEcho([105,110,118,97,108,105,100,32,105,100,32,39], s_2046820607, [39]);
    result_2046820608 = nimCopy(result_2046820608, idNone_2046820599(), NTI2046820355);
    break BeforeRet;
    }
    
    result_2046820608 = nimCopy(result_2046820608, parseOid_2046820432(s_2046820607), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820608;

}
var IdPrint_2952790018 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2952790019 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2952790020 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2952790021 = parseId_2046820606([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2952790022 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2952790023 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2952790024 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2952790025 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2952790026 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2952790027 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2952790028 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2952790029 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2952790030 = parseId_2046820606([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2952790031 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2952790032 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2952790033 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2952790034 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2952790035 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2952790036 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2952790037 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2952790038 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2952790039 = parseId_2046820606([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2952790040 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2952790041 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2952790042 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2952790043 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2952790044 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2952790045 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2952790046 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2952790047 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2952790048 = parseId_2046820606([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2952790049 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2952790050 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2952790051 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2952790052 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2952790053 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2952790054 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2952790055 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2952790056 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2952790057 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2952790058 = parseId_2046820606([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2952790059 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2952790060 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2952790061 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2952790062 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2952790063 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2952790064 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2952790065 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2952790066 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2952790067 = parseId_2046820606([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2952790068 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2952790069 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2952790070 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2952790071 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2952790072 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2952790073 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2952790074 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2952790075 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2952790076 = parseId_2046820606([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2952790077 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2952790078 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2952790079 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2952790080 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2952790081 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2952790082 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2952790083 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2952790084 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2952790085 = parseId_2046820606([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2952790086 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2952790087 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2952790088 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2952790089 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2952790090 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2952790091 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2952790092 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2952790093 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2952790094 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2952790095 = parseId_2046820606([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2952790096 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2952790097 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2952790098 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2952790099 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2952790100 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2952790101 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2952790102 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2952790103 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2952790104 = parseId_2046820606([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2952790105 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2952790106 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2952790107 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2952790108 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2952790109 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2952790110 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2952790111 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2952790112 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2952790113 = parseId_2046820606([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2952790114 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2952790115 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2952790116 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2952790117 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_3003121678 = [0];
var dependencyGlobalRevision_3003121696 = parseId_2046820606([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_3103785173 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_3003122103(t_3003122106, key_3003122107, hc_3003122108, hc_3003122108_Idx) {
  var result_3003122109 = 0;

  BeforeRet: {
    hc_3003122108[hc_3003122108_Idx] = hash_1325400236(key_3003122107);
    if ((hc_3003122108[hc_3003122108_Idx] == 0)) {
    hc_3003122108[hc_3003122108_Idx] = 314159265;
    }
    
    if (((t_3003122106.data).length == 0)) {
    result_3003122109 = -1;
    break BeforeRet;
    }
    
    var h_3003122197 = (hc_3003122108[hc_3003122108_Idx] & (t_3003122106.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field0)) break Label2;
          if (((t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field0 == hc_3003122108[hc_3003122108_Idx]) && (t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field1 == key_3003122107))) {
          result_3003122109 = h_3003122197;
          break BeforeRet;
          }
          
          h_3003122197 = nextTry_1308622883(h_3003122197, (t_3003122106.data).length - 1);
        }
    };
    result_3003122109 = subInt(-1, h_3003122197);
  };

  return result_3003122109;

}

function mustRehash_3003122627(t_3003122629) {
  var result_3003122630 = false;

    if (!((t_3003122629.counter < (t_3003122629.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122630 = ((mulInt((t_3003122629.data).length, 2) < mulInt(t_3003122629.counter, 3)) || (subInt((t_3003122629.data).length, t_3003122629.counter) < 4));

  return result_3003122630;

}

function rawInsert_3003123320(t_3003123324, data_3003123325, data_3003123325_Idx, key_3003123326, val_3003123327, hc_3003123328, h_3003123329) {
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field1 = key_3003123326;
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field2 = nimCopy(null, val_3003123327, NTI33554449);
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field0 = hc_3003123328;

  
}

function enlarge_3003122884(t_3003122887) {
    var n_3003122890 = [];
    n_3003122890 = new Array(chckRange(mulInt((t_3003122887.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122887.data).length, 2), 0, 2147483647) ; ++i) { n_3003122890[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3003122887.data; t_3003122887.data = n_3003122890; n_3003122890 = Temporary1;    Label2: {
      var i_3003122988 = 0;
      var colontmp__2936012877 = 0;
      colontmp__2936012877 = (n_3003122890).length - 1;
      var res_2936012878 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012878 <= colontmp__2936012877)) break Label4;
            i_3003122988 = res_2936012878;
            var eh_3003123069 = n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003123069)) {
            var j_3003123073 = (eh_3003123069 & (t_3003122887.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122887.data[chckIndx(j_3003123073, 0, (t_3003122887.data).length - 1)].Field0)) break Label6;
                  j_3003123073 = nextTry_1308622883(j_3003123073, (t_3003122887.data).length - 1);
                }
            };
            rawInsert_3003123320(t_3003122887, t_3003122887, "data", n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field1, n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field2, eh_3003123069, j_3003123073);
            }
            
            res_2936012878 = addInt(res_2936012878, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123570(t_3003123573, key_3003123574, hc_3003123575) {
  var result_3003123576 = 0;

  BeforeRet: {
    if (((t_3003123573.data).length == 0)) {
    result_3003123576 = -1;
    break BeforeRet;
    }
    
    var h_3003123661 = (hc_3003123575 & (t_3003123573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field0)) break Label2;
          if (((t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field0 == hc_3003123575) && (t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field1 == key_3003123574))) {
          result_3003123576 = h_3003123661;
          break BeforeRet;
          }
          
          h_3003123661 = nextTry_1308622883(h_3003123661, (t_3003123573.data).length - 1);
        }
    };
    result_3003123576 = subInt(-1, h_3003123661);
  };

  return result_3003123576;

}

function HEX5BHEX5DHEX3D_3003122008(t_3003122011, key_3003122012, val_3003122013) {
    if (((t_3003122011.data).length == 0)) {
    var correctSizeHEX60gensym3_3003122097 = slotsNeeded_1308622891(32);
    t_3003122011.counter = 0;
    t_3003122011.data = new Array(chckRange(correctSizeHEX60gensym3_3003122097, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3003122097, 0, 2147483647) ; ++i) { t_3003122011.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3003122102 = [0];
    var index_3003122459 = rawGet_3003122103(t_3003122011, key_3003122012, hc_3003122102, 0);
    if ((0 <= index_3003122459)) {
    t_3003122011.data[chckIndx(index_3003122459, 0, (t_3003122011.data).length - 1)].Field2 = nimCopy(null, val_3003122013, NTI33554449);
    }
    else {
      if (((t_3003122011.data).length == 0)) {
      var correctSizeHEX60gensym8_3003122622 = slotsNeeded_1308622891(32);
      t_3003122011.counter = 0;
      t_3003122011.data = new Array(chckRange(correctSizeHEX60gensym8_3003122622, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3003122622, 0, 2147483647) ; ++i) { t_3003122011.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3003122627(t_3003122011)) {
      enlarge_3003122884(t_3003122011);
      index_3003122459 = rawGetKnownHC_3003123570(t_3003122011, key_3003122012, hc_3003122102[0]);
      }
      
      index_3003122459 = subInt(-1, index_3003122459);
      rawInsert_3003123320(t_3003122011, t_3003122011, "data", key_3003122012, val_3003122013, hc_3003122102[0], index_3003122459);
      t_3003122011.counter = addInt(t_3003122011.counter, 1);
    }
    

  
}

function initDoublyLinkedList_3003123938() {
  var result_3003123940 = ({head: null, tail: null});

  return result_3003123940;

}

function initTable_3003123944(initialSize_3003123947) {
  var result_3003123948 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_3003123950 = slotsNeeded_1308622891(chckRange(initialSize_3003123947, 0, 2147483647));
    result_3003123948.counter = 0;
    result_3003123948.data = new Array(chckRange(correctSizeHEX60gensym16_3003123950, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3003123950, 0, 2147483647) ; ++i) { result_3003123948.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003123948;

}

function correctSize_3019898901(cap_3019898902) {
  var result_3019898903 = 0;

    result_3019898903 = cap_3019898902;

  return result_3019898903;

}

function newLruCache_3003123928(capacity_3003123931, recordRemovedKeys_3003123932) {
  var result_3003123933 = null;

    result_3003123933 = {capacity: capacity_3003123931, list: initDoublyLinkedList_3003123938(), table: initTable_3003123944(correctSize_3019898901(capacity_3003123931)), recordRemovedKeys: recordRemovedKeys_3003123932, removedKeys: ({data: [], counter: 0})};

  return result_3003123933;

}

function newCache_3003123923(capacity_3003123926) {
  var result_3003123927 = null;

    result_3003123927 = newLruCache_3003123928(capacity_3003123926, false);

  return result_3003123927;

}

function initDoublyLinkedList_3003124010() {
  var result_3003124012 = ({head: null, tail: null});

  return result_3003124012;

}

function initTable_3003124016(initialSize_3003124019) {
  var result_3003124020 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_3003124022 = slotsNeeded_1308622891(chckRange(initialSize_3003124019, 0, 2147483647));
    result_3003124020.counter = 0;
    result_3003124020.data = new Array(chckRange(correctSizeHEX60gensym18_3003124022, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_3003124022, 0, 2147483647) ; ++i) { result_3003124020.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003124020;

}

function newLruCache_3003124000(capacity_3003124003, recordRemovedKeys_3003124004) {
  var result_3003124005 = null;

    result_3003124005 = {capacity: capacity_3003124003, list: initDoublyLinkedList_3003124010(), table: initTable_3003124016(correctSize_3019898901(capacity_3003124003)), recordRemovedKeys: recordRemovedKeys_3003124004, removedKeys: ({data: [], counter: 0})};

  return result_3003124005;

}

function newCache_3003123995(capacity_3003123998) {
  var result_3003123999 = null;

    result_3003123999 = newLruCache_3003124000(capacity_3003123998, false);

  return result_3003123999;

}

function initDoublyLinkedList_3003124078() {
  var result_3003124080 = ({head: null, tail: null});

  return result_3003124080;

}

function initTable_3003124084(initialSize_3003124087) {
  var result_3003124088 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_3003124090 = slotsNeeded_1308622891(chckRange(initialSize_3003124087, 0, 2147483647));
    result_3003124088.counter = 0;
    result_3003124088.data = new Array(chckRange(correctSizeHEX60gensym20_3003124090, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003124090, 0, 2147483647) ; ++i) { result_3003124088.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003124088;

}

function newLruCache_3003124068(capacity_3003124071, recordRemovedKeys_3003124072) {
  var result_3003124073 = null;

    result_3003124073 = {capacity: capacity_3003124071, list: initDoublyLinkedList_3003124078(), table: initTable_3003124084(correctSize_3019898901(capacity_3003124071)), recordRemovedKeys: recordRemovedKeys_3003124072, removedKeys: ({data: [], counter: 0})};

  return result_3003124073;

}

function newCache_3003124063(capacity_3003124066) {
  var result_3003124067 = null;

    result_3003124067 = newLruCache_3003124068(capacity_3003124066, false);

  return result_3003124067;

}

function newDependencyGraph_3003121940() {
  var result_3003121941 = null;

    result_3003121941 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3003121941.revision = 0;
    HEX5BHEX5DHEX3D_3003122008(result_3003121941.queryNames, -1, []);
    result_3003121941.verified = newCache_3003123923(2000);
    result_3003121941.changed = newCache_3003123923(2000);
    result_3003121941.fingerprints = newCache_3003123995(2000);
    result_3003121941.dependencies = newCache_3003124063(2000);

  return result_3003121941;

}

function hash_2046820392(x_2046820394) {
  var result_2046820395 = 0;

    result_2046820395 = hashWangYi1_1325400244(x_2046820394);

  return result_2046820395;

}

function hash_2046820388(oid_2046820389) {
  var result_2046820390 = 0;

    var h_2046820391 = 0;
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.time));
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.fuzz));
    h_2046820391 = HEX21HEX26_1325400067(h_2046820391, hash_2046820392(oid_2046820389.count));
    result_2046820390 = HEX21HEX24_1325400082(h_2046820391);

  return result_2046820390;

}

function hash_2046820596(id_2046820597) {
  var result_2046820598 = 0;

  BeforeRet: {
    result_2046820598 = hash_2046820388(id_2046820597);
    break BeforeRet;
  };

  return result_2046820598;

}

function hash_2986345496(x_2986345498) {
  var result_2986345499 = 0;

    result_2986345499 = HEX21HEX26_1325400067(result_2986345499, hash_2046820596(x_2986345498["Field0"]));
    result_2986345499 = HEX21HEX26_1325400067(result_2986345499, hash_1325400236(x_2986345498["Field1"]));
    result_2986345499 = HEX21HEX24_1325400082(result_2986345499);

  return result_2986345499;

}

function HEX3DHEX3D_2046820384(oid1_2046820385, oid2_2046820386) {
  var result_2046820387 = false;

    result_2046820387 = (((oid1_2046820385.time == oid2_2046820386.time) && (oid1_2046820385.fuzz == oid2_2046820386.fuzz)) && (oid1_2046820385.count == oid2_2046820386.count));

  return result_2046820387;

}

function HEX3DHEX3D_2046820592(idA_2046820593, idB_2046820594) {
  var result_2046820595 = false;

  BeforeRet: {
    result_2046820595 = HEX3DHEX3D_2046820384(idA_2046820593, idB_2046820594);
    break BeforeRet;
  };

  return result_2046820595;

}

function HEX3DHEX3D_2986345833(x_2986345835, y_2986345836) {
  var result_2986345837 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2046820592(x_2986345835["Field0"], y_2986345836["Field0"]))) {
    result_2986345837 = false;
    break BeforeRet;
    }
    
    if (!((x_2986345835["Field1"] == y_2986345836["Field1"]))) {
    result_2986345837 = false;
    break BeforeRet;
    }
    
    result_2986345837 = true;
    break BeforeRet;
  };

  return result_2986345837;

}

function rawGet_2986345489(t_2986345492, key_2986345493, hc_2986345494, hc_2986345494_Idx) {
  var result_2986345495 = 0;

  BeforeRet: {
    hc_2986345494[hc_2986345494_Idx] = hash_2986345496(key_2986345493);
    if ((hc_2986345494[hc_2986345494_Idx] == 0)) {
    hc_2986345494[hc_2986345494_Idx] = 314159265;
    }
    
    if (((t_2986345492.data).length == 0)) {
    result_2986345495 = -1;
    break BeforeRet;
    }
    
    var h_2986345592 = (hc_2986345494[hc_2986345494_Idx] & (t_2986345492.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field0)) break Label2;
          if (((t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field0 == hc_2986345494[hc_2986345494_Idx]) && HEX3DHEX3D_2986345833(t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field1, key_2986345493))) {
          result_2986345495 = h_2986345592;
          break BeforeRet;
          }
          
          h_2986345592 = nextTry_1308622883(h_2986345592, (t_2986345492.data).length - 1);
        }
    };
    result_2986345495 = subInt(-1, h_2986345592);
  };

  return result_2986345495;

}

function hasKey_2986345482(t_2986345485, key_2986345486) {
  var result_2986345487 = false;

    var hc_2986345488 = [0];
    result_2986345487 = (0 <= rawGet_2986345489(t_2986345485, key_2986345486, hc_2986345488, 0));

  return result_2986345487;

}

function contains_2986345476(t_2986345479, key_2986345480) {
  var result_2986345481 = false;

  BeforeRet: {
    result_2986345481 = hasKey_2986345482(t_2986345479, key_2986345480);
    break BeforeRet;
  };

  return result_2986345481;

}

function contains_2986345382(cache_2986345385, key_2986345386) {
  var result_2986345387 = false;

    result_2986345387 = contains_2986345476(cache_2986345385.table, key_2986345386);

  return result_2986345387;

}

function HEX24_2046820477(oid_2046820478) {
            var Temporary4;

  var result_2046820479 = [];

    if (result_2046820479.length < 24) { for (var i = result_2046820479.length; i < 24; ++i) result_2046820479.push(0); }
         else {result_2046820479.length = 24; };
    Label1: {
      var i_2046820485 = 0;
      var i_2936012883 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012883 < 12)) break Label3;
            i_2046820485 = i_2936012883;
            if ((i_2046820485 < 4)) {
            Temporary4 = oid_2046820478.time;
            }
            else {
            if ((i_2046820485 < 8)) {
            Temporary4 = oid_2046820478.fuzz;
            }
            else {
            Temporary4 = oid_2046820478.count;
            }
            }
            var value_2046820486 = Temporary4;
            var byteOffset_2046820487 = modInt(i_2046820485, 4);
            var b_2046820492 = (value_2046820486 >> mulInt(byteOffset_2046820487, 8));
            result_2046820479[chckIndx(mulInt(2, i_2046820485), 0, (result_2046820479).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2046820492 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2046820479[chckIndx(addInt(mulInt(2, i_2046820485), 1), 0, (result_2046820479).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2046820492 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2936012883 = addInt(i_2936012883, 1);
          }
      };
    };

  return result_2046820479;

}

function HEX24_2046820589(id_2046820590) {
  var result_2046820591 = [];

  BeforeRet: {
    result_2046820591 = nimCopy(null, HEX24_2046820477(id_2046820590), NTI33554449);
    break BeforeRet;
  };

  return result_2046820591;

}

function formatValue_3003121884(result_3003121886, result_3003121886_Idx, value_3003121887, specifier_3003121888) {
    formatValue_721420459(result_3003121886, result_3003121886_Idx, HEX24_2046820589(value_3003121887), specifier_3003121888);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2516582764(n_2516582766, radix_2516582767, spec_2516582768) {
    var Temporary1;

  var result_2516582769 = [];

    var n_2516582772 = n_2516582766;
    var negative_2516582773 = (n_2516582772 < 0);
    if (negative_2516582773) {
    Temporary1 = ((~(n_2516582772) + 1) );
    }
    else {
    Temporary1 = n_2516582772;
    }
    
    var v_2516582774 = Temporary1;
    var xx_2516582775 = [];
    if (spec_2516582768.alternateForm) {
    switch (spec_2516582768.typ) {
    case 88:
      xx_2516582775 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2516582775 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2516582775 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2516582775 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2516582774 == 0)) {
    result_2516582769 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2516582769 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2516582774)) break Label3;
            var d_2516582776 = (v_2516582774 % radix_2516582767);
            v_2516582774 = Math.trunc(((v_2516582774 / radix_2516582767) ));
            result_2516582769.push.apply(result_2516582769, mkDigit_721420293(chckRange(d_2516582776, -2147483648, 2147483647), spec_2516582768.typ));;
          }
      };
      Label4: {
        var idx_2516582781 = 0;
        var colontmp__2936012887 = 0;
        colontmp__2936012887 = divInt((result_2516582769).length, 2);
        var i_2936012888 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2936012888 < colontmp__2936012887)) break Label6;
              idx_2516582781 = i_2936012888;
              var Temporary7 = result_2516582769[chckIndx(idx_2516582781, 0, (result_2516582769).length - 1)]; result_2516582769[chckIndx(idx_2516582781, 0, (result_2516582769).length - 1)] = result_2516582769[chckIndx(subInt(subInt((result_2516582769).length, idx_2516582781), 1), 0, (result_2516582769).length - 1)]; result_2516582769[chckIndx(subInt(subInt((result_2516582769).length, idx_2516582781), 1), 0, (result_2516582769).length - 1)] = Temporary7;              i_2936012888 = addInt(i_2936012888, 1);
            }
        };
      };
    }
    
    if (spec_2516582768.padWithZero) {
    var sign_2516582786 = (negative_2516582773 || !((spec_2516582768.sign == 45)));
    var toFill_2516582790 = subInt(subInt(subInt(spec_2516582768.minimumWidth, (result_2516582769).length), (xx_2516582775).length), (sign_2516582786 ? 1 : 0));
    if ((0 < toFill_2516582790)) {
    result_2516582769 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2516582790, 0, 2147483647)) || []).concat(result_2516582769 || []), NTI33554449);
    }
    
    }
    
    if (negative_2516582773) {
    result_2516582769 = nimCopy(null, ([45] || []).concat(xx_2516582775 || [],result_2516582769 || []), NTI33554449);
    }
    else {
    if (!((spec_2516582768.sign == 45))) {
    result_2516582769 = nimCopy(null, [spec_2516582768.sign].concat(xx_2516582775 || [],result_2516582769 || []), NTI33554449);
    }
    else {
      result_2516582769 = nimCopy(null, (xx_2516582775 || []).concat(result_2516582769 || []), NTI33554449);
    }
    }
    if ((spec_2516582768.align == 60)) {
    Label8: {
      var i_2516582795 = 0;
      var colontmp__2936012891 = 0;
      colontmp__2936012891 = (result_2516582769).length;
      var i_2936012892 = colontmp__2936012891;
      Label9: {
          Label10: while (true) {
          if (!(i_2936012892 < spec_2516582768.minimumWidth)) break Label10;
            i_2516582795 = i_2936012892;
            addChar(result_2516582769, spec_2516582768.fill);;
            i_2936012892 = addInt(i_2936012892, 1);
          }
      };
    };
    }
    else {
      var toFill_2516582796 = subInt(spec_2516582768.minimumWidth, (result_2516582769).length);
      if ((spec_2516582768.align == 94)) {
      var half_2516582797 = divInt(toFill_2516582796, 2);
      result_2516582769 = nimCopy(null, (nsuRepeatChar(spec_2516582768.fill, chckRange(half_2516582797, 0, 2147483647)) || []).concat(result_2516582769 || [],nsuRepeatChar(spec_2516582768.fill, chckRange(subInt(toFill_2516582796, half_2516582797), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2516582796)) {
        result_2516582769 = nimCopy(null, (nsuRepeatChar(spec_2516582768.fill, chckRange(toFill_2516582796, 0, 2147483647)) || []).concat(result_2516582769 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2516582769;

}

function formatValue_2516582756(result_2516582758, result_2516582758_Idx, value_2516582759, specifier_2516582760) {
  BeforeRet: {
    if (((specifier_2516582760).length == 0)) {
    result_2516582758[result_2516582758_Idx].push.apply(result_2516582758[result_2516582758_Idx], HEX24_369098760(value_2516582759));;
    break BeforeRet;
    }
    
    var spec_2516582761 = parseStandardFormatSpecifier_721420346(specifier_2516582760, 0, false);
    var radix_2516582762 = 10;
    switch (spec_2516582761.typ) {
    case 120:
    case 88:
      radix_2516582762 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2516582762 = 2;
      break;
    case 111:
      radix_2516582762 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2516582761.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2516582758[result_2516582758_Idx].push.apply(result_2516582758[result_2516582758_Idx], formatInt_2516582764(value_2516582759, radix_2516582762, spec_2516582761));;
  };

  
}

function HEX24_3003121876(item_3003121877) {
  var result_3003121878 = [];

  BeforeRet: {
    var fmtRes_3003121883 = [mnewString(0)];
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [40]);;
    formatValue_3003121884(fmtRes_3003121883, 0, item_3003121877.Field0, []);
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [44,32]);;
    formatValue_2516582756(fmtRes_3003121883, 0, item_3003121877.Field1, []);
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [41]);;
    result_3003121878 = nimCopy(null, fmtRes_3003121883[0], NTI33554449);
    break BeforeRet;
  };

  return result_3003121878;

}

function raiseKeyError_2986346129(key_2986346131) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3003121876(key_2986346131) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986346035(t_2986346038, key_2986346039) {
  var result_2986346040 = null;
  var result_2986346040_Idx = 0;

    var hcHEX60gensym22_2986346041 = [0];
    var indexHEX60gensym22_2986346048 = rawGet_2986345489(t_2986346038, key_2986346039, hcHEX60gensym22_2986346041, 0);
    if ((0 <= indexHEX60gensym22_2986346048)) {
    result_2986346040 = t_2986346038.data[chckIndx(indexHEX60gensym22_2986346048, 0, (t_2986346038.data).length - 1)]; result_2986346040_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986346039);
    }
    

  return [result_2986346040, result_2986346040_Idx];

}

function remove_2986346156(L_2986346158, n_2986346159) {
    if ((n_2986346159 == L_2986346158.tail)) {
    L_2986346158.tail = n_2986346159.prev;
    }
    
    if ((n_2986346159 == L_2986346158.head)) {
    L_2986346158.head = n_2986346159.next;
    }
    
    if (!((n_2986346159.next == null))) {
    n_2986346159.next.prev = n_2986346159.prev;
    }
    
    if (!((n_2986346159.prev == null))) {
    n_2986346159.prev.next = n_2986346159.next;
    }
    

  
}

function prepend_2986346484(L_2986346486, n_2986346487) {
    n_2986346487.prev = null;
    n_2986346487.next = L_2986346486.head;
    if (!((L_2986346486.head == null))) {
    if (!((L_2986346486.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986346486.head.prev = n_2986346487;
    }
    
    L_2986346486.head = n_2986346487;
    if ((L_2986346486.tail == null)) {
    L_2986346486.tail = n_2986346487;
    }
    

  
}

function HEX5BHEX5D_2986345949(cache_2986345952, key_2986345953) {
    var Temporary1;

  var result_2986345954 = null;

    var node_2986346142 = (Temporary1 = HEX5BHEX5D_2986346035(cache_2986345952.table, key_2986345953), Temporary1)[0][Temporary1[1]];
    result_2986345954 = node_2986346142.value.val;
    remove_2986346156(cache_2986345952.list, node_2986346142);
    prepend_2986346484(cache_2986345952.list, node_2986346142);

  return result_2986345954;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2936012922 = 0;
      colontmp__2936012922 = n_855639143;
      var res_2936012923 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2936012923 <= colontmp__2936012922)) break Label3;
            i_855639149 = res_2936012923;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2936012923 = addInt(res_2936012923, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3003121679(s_3003121680, n_3003121681) {
  var result_3003121682 = [];

    result_3003121682 = nimCopy(null, nsuRepeatStr(s_3003121680, n_3003121681), NTI33554449);

  return result_3003121682;

}

function symbolName_2969569242(a_2969569244) {
  var result_2969569245 = [];

    result_2969569245 = nimCopy(null, names_2969569252[chckIndx(subInt(a_2969569244, 0), 0, (names_2969569252).length - 1)], NTI33554449);

  return result_2969569245;

}

function len_2969567320(node_2969567321) {
  var result_2969567322 = 0;

  BeforeRet: {
    result_2969567322 = (node_2969567321.children).length;
    break BeforeRet;
  };

  return result_2969567322;

}

function collectionToString_2969569340(x_2969569342, prefix_2969569343, separator_2969569344, suffix_2969569345) {
  var result_2969569346 = [[]];

    result_2969569346[0] = nimCopy(null, prefix_2969569343, NTI33554449);
    var firstElement_2969569347 = true;
    Label1: {
      var value_2969569351 = 0;
      var i_2936012927 = 0;
      var L_2936012928 = (x_2969569342).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012927 < L_2936012928)) break Label3;
            value_2969569351 = x_2969569342[i_2936012927];
            if (firstElement_2969569347) {
            firstElement_2969569347 = false;
            }
            else {
            result_2969569346[0].push.apply(result_2969569346[0], separator_2969569344);;
            }
            
            addQuoted_855639425(result_2969569346, 0, value_2969569351);
            i_2936012927 += 1;
            if (!(((x_2969569342).length == L_2936012928))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2969569346[0].push.apply(result_2969569346[0], suffix_2969569345);;

  return result_2969569346[0];

}

function HEX24_2969569336(x_2969569338) {
  var result_2969569339 = [];

    result_2969569339 = nimCopy(null, collectionToString_2969569340(x_2969569338, [64,91], [44,32], [93]), NTI33554449);

  return result_2969569339;

}

function find_2969567347(a_2969567350, item_2969567351) {
  var result_2969567352 = 0;

  BeforeRet: {
    result_2969567352 = 0;
    Label1: {
      var i_2969567374 = null;
      var i_2936012932 = 0;
      var L_2936012933 = (a_2969567350).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012932 < L_2936012933)) break Label3;
            i_2969567374 = a_2969567350[chckIndx(i_2936012932, 0, (a_2969567350).length - 1)];
            if ((i_2969567374 == item_2969567351)) {
            break BeforeRet;
            }
            
            result_2969567352 = addInt(result_2969567352, 1);
            i_2936012932 = addInt(i_2936012932, 1);
            if (!(((a_2969567350).length == L_2936012933))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2969567352 = -1;
  };

  return result_2969567352;

}

function index_2969567340(node_2969567341) {
  var result_2969567342 = 0;

  BeforeRet: {
    if ((node_2969567341.parent == null)) {
    result_2969567342 = -1;
    break BeforeRet;
    }
    
    result_2969567342 = find_2969567347(node_2969567341.parent.children, node_2969567341);
    break BeforeRet;
  };

  return result_2969567342;

}

function reverse_2969569209(a_2969569211, first_2969569212, last_2969569213) {
    var x_2969569214 = first_2969569212;
    var y_2969569215 = last_2969569213;
    Label1: {
        Label2: while (true) {
        if (!(x_2969569214 < y_2969569215)) break Label2;
          var Temporary3 = a_2969569211[chckIndx(x_2969569214, 0, (a_2969569211).length - 1)]; a_2969569211[chckIndx(x_2969569214, 0, (a_2969569211).length - 1)] = a_2969569211[chckIndx(y_2969569215, 0, (a_2969569211).length - 1)]; a_2969569211[chckIndx(y_2969569215, 0, (a_2969569211).length - 1)] = Temporary3;          y_2969569215 = subInt(y_2969569215, 1);
          x_2969569214 = addInt(x_2969569214, 1);
        }
    };

  
}

function reverse_2969569203(a_2969569205) {
    reverse_2969569209(a_2969569205, 0, chckRange(nimMax(0, (a_2969569205).length - 1), 0, 2147483647));

  
}

function path_2969569187(node_2969569188) {
  var result_2969569189 = [];

    result_2969569189 = nimCopy(null, [], NTI2969568321);
    var node_2969569194 = node_2969569188;
    Label1: {
        Label2: while (true) {
        if (!!((node_2969569194.parent == null))) break Label2;
          result_2969569189.push(index_2969567340(node_2969569194));;
          node_2969569194 = node_2969569194.parent;
        }
    };
    reverse_2969569203(result_2969569189);

  return result_2969569189;

}

function HEX24_2969569239(node_2969569240) {
  var result_2969569241 = [];

    result_2969569241 = nimCopy(null, (symbolName_2969569242(node_2969569240.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2046820592(node_2969569240.id, idNone_2046820599()))) {
    result_2969569241.push.apply(result_2969569241, (HEX24_2046820589(node_2969569240.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2046820592(node_2969569240.reff, idNone_2046820599()))) {
    result_2969569241.push.apply(result_2969569241, ([114,101,102,102,58,32] || []).concat(HEX24_2046820589(node_2969569240.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2969569240.text).length)) {
    result_2969569241.push.apply(result_2969569241, ([39] || []).concat(node_2969569240.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2969567320(node_2969569240))) {
    result_2969569241.push.apply(result_2969569241, (HEX24_369098760(len_2969567320(node_2969569240)) || []).concat([44,32] || []));;
    }
    
    result_2969569241.push.apply(result_2969569241, HEX24_2969569336(path_2969569187(node_2969569240)));;
    result_2969569241.push.apply(result_2969569241, [41]);;

  return result_2969569241;

}

function getTypeKey_2986417463(ctxHEX60gensym90_2986417464, itemIdHEX60gensym90_2986417465) {
  var result_2986417466 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2936012936 = nimCopy(null, itemIdHEX60gensym90_2986417465, NTI3003121689);
    var colontmp__2936012937 = 0;
    result_2986417466 = nimCopy(result_2986417466, {Field0: nimCopy(null, colontmp__2936012936, NTI3003121689), Field1: colontmp__2936012937}, NTI3003121692);
    break BeforeRet;
  };

  return result_2986417466;

}

function bigEndian32_2046820522(b_2046820523) {
  var result_2046820524 = 0;

    result_2046820524 = (((((b_2046820523 & 255) << 24) | ((b_2046820523 & 65280) << 8)) | ((b_2046820523 & 16711680) >> 8)) | (b_2046820523 >> 24));

  return result_2046820524;

}

function genOid_2046820552() {
  var result_2046820553 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2046820556 = toUnix_1191183338(getTime_1191183389());
    var iHEX60gensym1_2046820557 = 0;
    incr_2046820503[0] = addInt(incr_2046820503[0], 1);
    iHEX60gensym1_2046820557 = ((incr_2046820503[0]) | 0);
    result_2046820553.time = bigEndian32_2046820522(timeHEX60gensym1_2046820556);
    result_2046820553.fuzz = fuzz_2046820508;
    result_2046820553.count = bigEndian32_2046820522(iHEX60gensym1_2046820557);

  return result_2046820553;

}

function newId_2046820569() {
  var result_2046820570 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2046820570 = nimCopy(result_2046820570, genOid_2046820552(), NTI2046820355);
    break BeforeRet;
  };

  return result_2046820570;

}

function getItem_2986398737(selfHEX60gensym75_2986398738) {
  var result_2986398739 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym75_2986398738.id, null_2046820612)) {
    selfHEX60gensym75_2986398738.id = nimCopy(selfHEX60gensym75_2986398738.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym75_2986398738.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936012938 = nimCopy(null, selfHEX60gensym75_2986398738.id, NTI2046820355);
    var colontmp__2936012939 = 0;
    result_2986398739 = nimCopy(result_2986398739, {Field0: nimCopy(null, colontmp__2936012938, NTI2046820355), Field1: colontmp__2936012939}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986398739;

}

function hash_3003121894(value_3003121895) {
  var result_3003121896 = 0;

    result_3003121896 = (hash_2046820596(value_3003121895.Field0) ^ hash_1325400236(value_3003121895.Field1));

  return result_3003121896;

}

function hash_3003124356(x_3003124358) {
  var result_3003124359 = 0;

    result_3003124359 = HEX21HEX26_1325400067(result_3003124359, hash_3003121894(x_3003124358["Field0"]));
    result_3003124359 = HEX21HEX26_1325400067(result_3003124359, hash_1325400236(x_3003124358["Field1"]));
    result_3003124359 = HEX21HEX24_1325400082(result_3003124359);

  return result_3003124359;

}

function HEX3DHEX3D_3003121900(a_3003121901, b_3003121902) {
  var result_3003121903 = false;

    result_3003121903 = (HEX3DHEX3D_2046820592(a_3003121901.Field0, b_3003121902.Field0) && (a_3003121901.Field1 == b_3003121902.Field1));

  return result_3003121903;

}

function HEX3DHEX3D_3003124693(x_3003124695, y_3003124696) {
  var result_3003124697 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3003121900(x_3003124695["Field0"], y_3003124696["Field0"]))) {
    result_3003124697 = false;
    break BeforeRet;
    }
    
    if (!((x_3003124695["Field1"] == y_3003124696["Field1"]))) {
    result_3003124697 = false;
    break BeforeRet;
    }
    
    result_3003124697 = true;
    break BeforeRet;
  };

  return result_3003124697;

}

function rawGet_2986444404(t_2986444407, key_2986444408, hc_2986444409, hc_2986444409_Idx) {
  var result_2986444410 = 0;

  BeforeRet: {
    hc_2986444409[hc_2986444409_Idx] = hash_3003124356(key_2986444408);
    if ((hc_2986444409[hc_2986444409_Idx] == 0)) {
    hc_2986444409[hc_2986444409_Idx] = 314159265;
    }
    
    if (((t_2986444407.data).length == 0)) {
    result_2986444410 = -1;
    break BeforeRet;
    }
    
    var h_2986444499 = (hc_2986444409[hc_2986444409_Idx] & (t_2986444407.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986444407.data[chckIndx(h_2986444499, 0, (t_2986444407.data).length - 1)].Field0)) break Label2;
          if (((t_2986444407.data[chckIndx(h_2986444499, 0, (t_2986444407.data).length - 1)].Field0 == hc_2986444409[hc_2986444409_Idx]) && HEX3DHEX3D_3003124693(t_2986444407.data[chckIndx(h_2986444499, 0, (t_2986444407.data).length - 1)].Field1, key_2986444408))) {
          result_2986444410 = h_2986444499;
          break BeforeRet;
          }
          
          h_2986444499 = nextTry_1308622883(h_2986444499, (t_2986444407.data).length - 1);
        }
    };
    result_2986444410 = subInt(-1, h_2986444499);
  };

  return result_2986444410;

}

function hasKey_2986444397(t_2986444400, key_2986444401) {
  var result_2986444402 = false;

    var hc_2986444403 = [0];
    result_2986444402 = (0 <= rawGet_2986444404(t_2986444400, key_2986444401, hc_2986444403, 0));

  return result_2986444402;

}

function contains_2986444391(t_2986444394, key_2986444395) {
  var result_2986444396 = false;

  BeforeRet: {
    result_2986444396 = hasKey_2986444397(t_2986444394, key_2986444395);
    break BeforeRet;
  };

  return result_2986444396;

}

function addQuoted_3003132538(s_3003132540, s_3003132540_Idx, x_3003132541) {
    s_3003132540[s_3003132540_Idx].push.apply(s_3003132540[s_3003132540_Idx], HEX24_3003121876(x_3003132541));;

  
}

function HEX24_3003132512(x_3003132514) {
  var result_3003132515 = [[]];

    result_3003132515[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_3003132526 = 0;
    if ((0 < countHEX60gensym66_3003132526)) {
    result_3003132515[0].push.apply(result_3003132515[0], [44,32]);;
    }
    
    result_3003132515[0].push.apply(result_3003132515[0], [105,116,101,109]);;
    result_3003132515[0].push.apply(result_3003132515[0], [58,32]);;
    countHEX60gensym66_3003132526 += 1;
    addQuoted_3003132538(result_3003132515, 0, x_3003132514["Field0"]);
    if ((0 < countHEX60gensym66_3003132526)) {
    result_3003132515[0].push.apply(result_3003132515[0], [44,32]);;
    }
    
    result_3003132515[0].push.apply(result_3003132515[0], [117,112,100,97,116,101]);;
    result_3003132515[0].push.apply(result_3003132515[0], [58,32]);;
    countHEX60gensym66_3003132526 += 1;
    addQuoted_855639425(result_3003132515, 0, x_3003132514["Field1"]);
    result_3003132515[0].push.apply(result_3003132515[0], [41]);;

  return result_3003132515[0];

}

function raiseKeyError_3003132465(key_3003132467) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3003132512(key_3003132467) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986444836(t_2986444839, key_2986444840) {
  var result_2986444841 = null;
  var result_2986444841_Idx = 0;

    var hcHEX60gensym22_2986444842 = [0];
    var indexHEX60gensym22_2986444849 = rawGet_2986444404(t_2986444839, key_2986444840, hcHEX60gensym22_2986444842, 0);
    if ((0 <= indexHEX60gensym22_2986444849)) {
    result_2986444841 = t_2986444839.data[chckIndx(indexHEX60gensym22_2986444849, 0, (t_2986444839.data).length - 1)]; result_2986444841_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_2986444840);
    }
    

  return [result_2986444841, result_2986444841_Idx];

}

function rawGet_2986445559(t_2986445562, key_2986445563, hc_2986445564, hc_2986445564_Idx) {
  var result_2986445565 = 0;

  BeforeRet: {
    hc_2986445564[hc_2986445564_Idx] = hash_3003124356(key_2986445563);
    if ((hc_2986445564[hc_2986445564_Idx] == 0)) {
    hc_2986445564[hc_2986445564_Idx] = 314159265;
    }
    
    if (((t_2986445562.data).length == 0)) {
    result_2986445565 = -1;
    break BeforeRet;
    }
    
    var h_2986445654 = (hc_2986445564[hc_2986445564_Idx] & (t_2986445562.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986445562.data[chckIndx(h_2986445654, 0, (t_2986445562.data).length - 1)].Field0)) break Label2;
          if (((t_2986445562.data[chckIndx(h_2986445654, 0, (t_2986445562.data).length - 1)].Field0 == hc_2986445564[hc_2986445564_Idx]) && HEX3DHEX3D_3003124693(t_2986445562.data[chckIndx(h_2986445654, 0, (t_2986445562.data).length - 1)].Field1, key_2986445563))) {
          result_2986445565 = h_2986445654;
          break BeforeRet;
          }
          
          h_2986445654 = nextTry_1308622883(h_2986445654, (t_2986445562.data).length - 1);
        }
    };
    result_2986445565 = subInt(-1, h_2986445654);
  };

  return result_2986445565;

}

function del_2986445553(t_2986445556, key_2986445557) {
    var hc_2986445558 = [0];
    var i_2986445920 = rawGet_2986445559(t_2986445556, key_2986445557, hc_2986445558, 0);
    var mskHEX60gensym36_2986445924 = (t_2986445556.data).length - 1;
    if ((0 <= i_2986445920)) {
    t_2986445556.counter = subInt(t_2986445556.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986445931 = i_2986445920;
            var rHEX60gensym36_2986445932 = jHEX60gensym36_2986445931;
            t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field0 = 0;
            t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field1 = nimCopy(t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field2 = nimCopy(null, [], NTI2986344456);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986445920 = (addInt(i_2986445920, 1) & mskHEX60gensym36_2986445924);
                  if (isEmpty_1308622877(t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986445932 = (t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)].Field0 & mskHEX60gensym36_2986445924);
                  if (!(((((rHEX60gensym36_2986445932 <= i_2986445920) && (jHEX60gensym36_2986445931 < rHEX60gensym36_2986445932)) || ((jHEX60gensym36_2986445931 < rHEX60gensym36_2986445932) && (i_2986445920 < jHEX60gensym36_2986445931))) || ((i_2986445920 < jHEX60gensym36_2986445931) && (rHEX60gensym36_2986445932 <= i_2986445920))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986445556.data[chckIndx(jHEX60gensym36_2986445931, 0, (t_2986445556.data).length - 1)] = nimCopy(t_2986445556.data[chckIndx(jHEX60gensym36_2986445931, 0, (t_2986445556.data).length - 1)], t_2986445556.data[chckIndx(i_2986445920, 0, (t_2986445556.data).length - 1)], NTI2986344468);
          }
      };
    };
    }
    

  
}

function rawGet_2986445052(t_2986445055, key_2986445056, hc_2986445057, hc_2986445057_Idx) {
  var result_2986445058 = 0;

  BeforeRet: {
    hc_2986445057[hc_2986445057_Idx] = hash_2046820596(key_2986445056);
    if ((hc_2986445057[hc_2986445057_Idx] == 0)) {
    hc_2986445057[hc_2986445057_Idx] = 314159265;
    }
    
    if (((t_2986445055.data).length == 0)) {
    result_2986445058 = -1;
    break BeforeRet;
    }
    
    var h_2986445144 = (hc_2986445057[hc_2986445057_Idx] & (t_2986445055.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986445055.data[chckIndx(h_2986445144, 0, (t_2986445055.data).length - 1)].Field0)) break Label2;
          if (((t_2986445055.data[chckIndx(h_2986445144, 0, (t_2986445055.data).length - 1)].Field0 == hc_2986445057[hc_2986445057_Idx]) && HEX3DHEX3D_2046820592(t_2986445055.data[chckIndx(h_2986445144, 0, (t_2986445055.data).length - 1)].Field1, key_2986445056))) {
          result_2986445058 = h_2986445144;
          break BeforeRet;
          }
          
          h_2986445144 = nextTry_1308622883(h_2986445144, (t_2986445055.data).length - 1);
        }
    };
    result_2986445058 = subInt(-1, h_2986445144);
  };

  return result_2986445058;

}

function raiseKeyError_2969569048(key_2969569050) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046820589(key_2969569050) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986445045(t_2986445048, key_2986445049) {
  var result_2986445050 = null;

    var hcHEX60gensym22_2986445051 = [0];
    var indexHEX60gensym22_2986445397 = rawGet_2986445052(t_2986445048, key_2986445049, hcHEX60gensym22_2986445051, 0);
    if ((0 <= indexHEX60gensym22_2986445397)) {
    result_2986445050 = t_2986445048.data[chckIndx(indexHEX60gensym22_2986445397, 0, (t_2986445048.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2986445049);
    }
    

  return result_2986445050;

}

function voidType_3070230940() {
  var result_3070230941 = null;

    result_3070230941 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_3070230941;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet58[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet59[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3070230942() {
  var result_3070230943 = null;

    result_3070230943 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_3070230943;

}

function errorType_3070230904() {
  var result_3070230905 = null;

    result_3070230905 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_3070230905;

}

function stringType_3070230944() {
  var result_3070230945 = null;

    result_3070230945 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_3070230945;

}

function HEX5BHEX5D_2969567316(node_2969567317, index_2969567318) {
  var result_2969567319 = null;

  BeforeRet: {
    result_2969567319 = node_2969567317.children[chckIndx(index_2969567318, 0, (node_2969567317.children).length - 1)];
    break BeforeRet;
  };

  return result_2969567319;

}

function recordDependency_2986398524(ctxHEX60gensym72_2986398525, itemHEX60gensym72_2986398526, updateHEX60gensym72_2986398527) {
    if ((0 < (ctxHEX60gensym72_2986398525.dependencyStack).length)) {
    ctxHEX60gensym72_2986398525.dependencyStack[chckIndx((ctxHEX60gensym72_2986398525.dependencyStack).length - 1, 0, (ctxHEX60gensym72_2986398525.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_2986398526, NTI3003121689), Field1: updateHEX60gensym72_2986398527});;
    }
    

  
}

function toFloat_33556023(i_33556024) {
  var result_33556025 = 0.0;

    result_33556025 = i_33556024;

  return result_33556025;

}

function HEX2F_33556035(x_33556036, y_33556037) {
  var result_33556038 = 0.0;

    result_33556038 = (toFloat_33556023(x_33556036) / toFloat_33556023(y_33556037));

  return result_33556038;

}

function toUnixFloat_1191183346(t_1191183347) {
  var result_1191183348 = 0.0;

    result_1191183348 = (t_1191183347.seconds + HEX2F_33556035(t_1191183347.nanosecond, convert_1191182870(3, 0, 1)));

  return result_1191183348;

}

function myGetTicks_2466250798() {
  var result_2466250799 = 0;

  BeforeRet: {
    var time_2466250800 = getTime_1191183389();
    result_2466250799 = (toUnixFloat_1191183346(time_2466250800) * 1000000000.0);
    break BeforeRet;
  };

  return result_2466250799;

}

function startTimer_2466250804() {
  var result_2466250805 = ({start: 0});

    result_2466250805 = nimCopy(result_2466250805, {start: myGetTicks_2466250798()}, NTI2466250783);

  return result_2466250805;

}

function rawGet_3003124349(t_3003124352, key_3003124353, hc_3003124354, hc_3003124354_Idx) {
  var result_3003124355 = 0;

  BeforeRet: {
    hc_3003124354[hc_3003124354_Idx] = hash_3003124356(key_3003124353);
    if ((hc_3003124354[hc_3003124354_Idx] == 0)) {
    hc_3003124354[hc_3003124354_Idx] = 314159265;
    }
    
    if (((t_3003124352.data).length == 0)) {
    result_3003124355 = -1;
    break BeforeRet;
    }
    
    var h_3003124452 = (hc_3003124354[hc_3003124354_Idx] & (t_3003124352.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field0)) break Label2;
          if (((t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field0 == hc_3003124354[hc_3003124354_Idx]) && HEX3DHEX3D_3003124693(t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field1, key_3003124353))) {
          result_3003124355 = h_3003124452;
          break BeforeRet;
          }
          
          h_3003124452 = nextTry_1308622883(h_3003124452, (t_3003124352.data).length - 1);
        }
    };
    result_3003124355 = subInt(-1, h_3003124452);
  };

  return result_3003124355;

}

function getOrDefault_3003124339(t_3003124342, key_3003124343, default_3003124344) {
    var Temporary1;

  var result_3003124345 = null;

    var hcHEX60gensym22_3003124348 = [0];
    var indexHEX60gensym22_3003124715 = rawGet_3003124349(t_3003124342, key_3003124343, hcHEX60gensym22_3003124348, 0);
    if ((0 <= indexHEX60gensym22_3003124715)) {
    Temporary1 = t_3003124342.data[chckIndx(indexHEX60gensym22_3003124715, 0, (t_3003124342.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003124344;
    }
    
    result_3003124345 = Temporary1;

  return result_3003124345;

}

function getOrDefault_3003124243(cache_3003124246, key_3003124247, val_3003124248) {
  var result_3003124249 = 0;

    var node_3003124805 = getOrDefault_3003124339(cache_3003124246.table, key_3003124247, null);
    if ((node_3003124805 == null)) {
    result_3003124249 = val_3003124248;
    }
    else {
      result_3003124249 = node_3003124805.value.val;
    }
    

  return result_3003124249;

}

function nodeColor_3003124149(graph_3003124150, key_3003124151, parentVerified_3003124152) {
  var result_3003124153 = 0;

  BeforeRet: {
    if ((key_3003124151.Field1 == -1)) {
    var inputChangedRevision_3003124809 = getOrDefault_3003124243(graph_3003124150.changed, key_3003124151, graph_3003124150.revision);
    if ((parentVerified_3003124152 < inputChangedRevision_3003124809)) {
    result_3003124153 = 1;
    break BeforeRet;
    }
    else {
      result_3003124153 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3003124905 = getOrDefault_3003124243(graph_3003124150.verified, key_3003124151, 0);
    if (!((verified_3003124905 == graph_3003124150.revision))) {
    result_3003124153 = 0;
    break BeforeRet;
    }
    
    var changed_3003125001 = getOrDefault_3003124243(graph_3003124150.changed, key_3003124151, graph_3003124150.revision);
    if ((changed_3003125001 == graph_3003124150.revision)) {
    result_3003124153 = 1;
    break BeforeRet;
    }
    
    result_3003124153 = 2;
    break BeforeRet;
  };

  return result_3003124153;

}

function hash_2969569587(node_2969569588) {
  var result_2969569589 = 0;

    result_2969569589 = node_2969569588;

  return result_2969569589;

}

function rawGet_2986346867(t_2986346870, key_2986346871, hc_2986346872, hc_2986346872_Idx) {
  var result_2986346873 = 0;

  BeforeRet: {
    hc_2986346872[hc_2986346872_Idx] = hash_2969569587(key_2986346871);
    if ((hc_2986346872[hc_2986346872_Idx] == 0)) {
    hc_2986346872[hc_2986346872_Idx] = 314159265;
    }
    
    if (((t_2986346870.data).length == 0)) {
    result_2986346873 = -1;
    break BeforeRet;
    }
    
    var h_2986346959 = (hc_2986346872[hc_2986346872_Idx] & (t_2986346870.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986346870.data[chckIndx(h_2986346959, 0, (t_2986346870.data).length - 1)].Field0)) break Label2;
          if (((t_2986346870.data[chckIndx(h_2986346959, 0, (t_2986346870.data).length - 1)].Field0 == hc_2986346872[hc_2986346872_Idx]) && (t_2986346870.data[chckIndx(h_2986346959, 0, (t_2986346870.data).length - 1)].Field1 == key_2986346871))) {
          result_2986346873 = h_2986346959;
          break BeforeRet;
          }
          
          h_2986346959 = nextTry_1308622883(h_2986346959, (t_2986346870.data).length - 1);
        }
    };
    result_2986346873 = subInt(-1, h_2986346959);
  };

  return result_2986346873;

}

function hasKey_2986417651(t_2986417654, key_2986417655) {
  var result_2986417656 = false;

    var hc_2986417657 = [0];
    result_2986417656 = (0 <= rawGet_2986346867(t_2986417654, key_2986417655, hc_2986417657, 0));

  return result_2986417656;

}

function contains_2986417645(t_2986417648, key_2986417649) {
  var result_2986417650 = false;

  BeforeRet: {
    result_2986417650 = hasKey_2986417651(t_2986417648, key_2986417649);
    break BeforeRet;
  };

  return result_2986417650;

}

function contains_2986417551(cache_2986417554, key_2986417555) {
  var result_2986417556 = false;

    result_2986417556 = contains_2986417645(cache_2986417554.table, key_2986417555);

  return result_2986417556;

}

function HEX5BHEX5D_2986414988(t_2986414991, key_2986414992) {
  var result_2986414993 = null;
  var result_2986414993_Idx = 0;

    var hcHEX60gensym22_2986414994 = [0];
    var indexHEX60gensym22_2986415001 = rawGet_3003122103(t_2986414991, key_2986414992, hcHEX60gensym22_2986414994, 0);
    if ((0 <= indexHEX60gensym22_2986415001)) {
    result_2986414993 = t_2986414991.data[chckIndx(indexHEX60gensym22_2986415001, 0, (t_2986414991.data).length - 1)]; result_2986414993_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_2986414992);
    }
    

  return [result_2986414993, result_2986414993_Idx];

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_3003127798(t_3003127801, key_3003127802, hc_3003127803, hc_3003127803_Idx) {
  var result_3003127804 = 0;

  BeforeRet: {
    hc_3003127803[hc_3003127803_Idx] = hash_3003124356(key_3003127802);
    if ((hc_3003127803[hc_3003127803_Idx] == 0)) {
    hc_3003127803[hc_3003127803_Idx] = 314159265;
    }
    
    if (((t_3003127801.data).length == 0)) {
    result_3003127804 = -1;
    break BeforeRet;
    }
    
    var h_3003127893 = (hc_3003127803[hc_3003127803_Idx] & (t_3003127801.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field0)) break Label2;
          if (((t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field0 == hc_3003127803[hc_3003127803_Idx]) && HEX3DHEX3D_3003124693(t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field1, key_3003127802))) {
          result_3003127804 = h_3003127893;
          break BeforeRet;
          }
          
          h_3003127893 = nextTry_1828716586(h_3003127893, (t_3003127801.data).length - 1);
        }
    };
    result_3003127804 = subInt(-1, h_3003127893);
  };

  return result_3003127804;

}

function contains_2986415161(s_2986415163, key_2986415164) {
  var result_2986415165 = false;

    var hc_2986415166 = [0];
    var index_2986415180 = rawGet_3003127798(s_2986415163, key_2986415164, hc_2986415166, 0);
    result_2986415165 = (0 <= index_2986415180);

  return result_2986415165;

}

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function mustRehash_3003129064(t_3003129066) {
  var result_3003129067 = false;

    if (!((t_3003129066.counter < (t_3003129066.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003129067 = ((mulInt((t_3003129066.data).length, 2) < mulInt(t_3003129066.counter, 3)) || (subInt((t_3003129066.data).length, t_3003129066.counter) < 4));

  return result_3003129067;

}

function rawGetKnownHC_3003129670(t_3003129673, key_3003129674, hc_3003129675) {
  var result_3003129676 = 0;

  BeforeRet: {
    if (((t_3003129673.data).length == 0)) {
    result_3003129676 = -1;
    break BeforeRet;
    }
    
    var h_3003129761 = (hc_3003129675 & (t_3003129673.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field0)) break Label2;
          if (((t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field0 == hc_3003129675) && HEX3DHEX3D_3003124693(t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field1, key_3003129674))) {
          result_3003129676 = h_3003129761;
          break BeforeRet;
          }
          
          h_3003129761 = nextTry_1828716586(h_3003129761, (t_3003129673.data).length - 1);
        }
    };
    result_3003129676 = subInt(-1, h_3003129761);
  };

  return result_3003129676;

}

function rawInsert_3003130174(s_3003130176, data_3003130177, data_3003130177_Idx, key_3003130178, hc_3003130179, h_3003130180) {
    if (((data_3003130177[data_3003130177_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_3003130263 = slotsNeeded_1828716594(64);
    s_3003130176.counter = 0;
    s_3003130176.data = new Array(chckRange(correctSizeHEX60gensym56_3003130263, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3003130263, 0, 2147483647) ; ++i) { s_3003130176.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field1 = nimCopy(data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field1, key_3003130178, NTI3003121692);
    data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field0 = hc_3003130179;

  
}

function enlarge_3003129327(s_3003129329) {
    var n_3003129331 = [];
    n_3003129331 = new Array(chckRange(mulInt((s_3003129329.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003129329.data).length, 2), 0, 2147483647) ; ++i) { n_3003129331[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3003129329.data; s_3003129329.data = n_3003129331; n_3003129331 = Temporary1;    Label2: {
      var i_3003129429 = 0;
      var colontmp__2936012955 = 0;
      colontmp__2936012955 = (n_3003129331).length - 1;
      var res_2936012956 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012956 <= colontmp__2936012955)) break Label4;
            i_3003129429 = res_2936012956;
            if (isFilled_1828716583(n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0)) {
            var j_3003130009 = subInt(-1, rawGetKnownHC_3003129670(s_3003129329, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field1, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0));
            rawInsert_3003130174(s_3003129329, s_3003129329, "data", n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field1, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0, j_3003130009);
            }
            
            res_2936012956 = addInt(res_2936012956, 1);
          }
      };
    };

  
}

function incl_3003128948(s_3003128950, key_3003128951) {
    if (((s_3003128950.data).length == 0)) {
    var correctSizeHEX60gensym49_3003129034 = slotsNeeded_1828716594(64);
    s_3003128950.counter = 0;
    s_3003128950.data = new Array(chckRange(correctSizeHEX60gensym49_3003129034, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_3003129034, 0, 2147483647) ; ++i) { s_3003128950.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3003129049 = [0];
    var index_3003129063 = rawGet_3003127798(s_3003128950, key_3003128951, hc_3003129049, 0);
    if ((index_3003129063 < 0)) {
    if (mustRehash_3003129064(s_3003128950)) {
    enlarge_3003129327(s_3003128950);
    index_3003129063 = rawGetKnownHC_3003129670(s_3003128950, key_3003128951, hc_3003129049[0]);
    }
    
    rawInsert_3003130174(s_3003128950, s_3003128950, "data", key_3003128951, hc_3003129049[0], subInt(-1, index_3003129063));
    s_3003128950.counter = addInt(s_3003128950.counter, 1);
    }
    

  
}

function getOrDefault_2986415392(t_2986415395, key_2986415396) {
  var result_2986415397 = [];

    var hcHEX60gensym462_2986415400 = [0];
    var indexHEX60gensym462_2986415407 = rawGet_3003122103(t_2986415395, key_2986415396, hcHEX60gensym462_2986415400, 0);
    if ((0 <= indexHEX60gensym462_2986415407)) {
    result_2986415397 = nimCopy(null, t_2986415395.data[chckIndx(indexHEX60gensym462_2986415407, 0, (t_2986415395.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_2986415397;

}

function rawGet_2986394583(t_2986394586, key_2986394587, hc_2986394588, hc_2986394588_Idx) {
  var result_2986394589 = 0;

  BeforeRet: {
    hc_2986394588[hc_2986394588_Idx] = hash_1325400236(key_2986394587);
    if ((hc_2986394588[hc_2986394588_Idx] == 0)) {
    hc_2986394588[hc_2986394588_Idx] = 314159265;
    }
    
    if (((t_2986394586.data).length == 0)) {
    result_2986394589 = -1;
    break BeforeRet;
    }
    
    var h_2986394677 = (hc_2986394588[hc_2986394588_Idx] & (t_2986394586.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986394586.data[chckIndx(h_2986394677, 0, (t_2986394586.data).length - 1)].Field0)) break Label2;
          if (((t_2986394586.data[chckIndx(h_2986394677, 0, (t_2986394586.data).length - 1)].Field0 == hc_2986394588[hc_2986394588_Idx]) && (t_2986394586.data[chckIndx(h_2986394677, 0, (t_2986394586.data).length - 1)].Field1 == key_2986394587))) {
          result_2986394589 = h_2986394677;
          break BeforeRet;
          }
          
          h_2986394677 = nextTry_1308622883(h_2986394677, (t_2986394586.data).length - 1);
        }
    };
    result_2986394589 = subInt(-1, h_2986394677);
  };

  return result_2986394589;

}

function hasKey_2986415570(t_2986415573, key_2986415574) {
  var result_2986415575 = false;

    var hc_2986415576 = [0];
    result_2986415575 = (0 <= rawGet_2986394583(t_2986415573, key_2986415574, hc_2986415576, 0));

  return result_2986415575;

}

function contains_2986415564(t_2986415567, key_2986415568) {
  var result_2986415569 = false;

  BeforeRet: {
    result_2986415569 = hasKey_2986415570(t_2986415567, key_2986415568);
    break BeforeRet;
  };

  return result_2986415569;

}

function HEX5BHEX5D_2986415663(t_2986415666, key_2986415667) {
  var result_2986415668 = null;
  var result_2986415668_Idx = 0;

    var hcHEX60gensym22_2986415669 = [0];
    var indexHEX60gensym22_2986415676 = rawGet_2986394583(t_2986415666, key_2986415667, hcHEX60gensym22_2986415669, 0);
    if ((0 <= indexHEX60gensym22_2986415676)) {
    result_2986415668 = t_2986415666.data[chckIndx(indexHEX60gensym22_2986415676, 0, (t_2986415666.data).length - 1)]; result_2986415668_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_2986415667);
    }
    

  return [result_2986415668, result_2986415668_Idx];

}

function newDoublyLinkedNode_3003133260(value_3003133262) {
  var result_3003133263 = null;

    result_3003133263 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_3003133263.value = nimCopy(result_3003133263.value, value_3003133262, NTI3003121716);

  return result_3003133263;

}

function mustRehash_3003133610(t_3003133612) {
  var result_3003133613 = false;

    if (!((t_3003133612.counter < (t_3003133612.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003133613 = ((mulInt((t_3003133612.data).length, 2) < mulInt(t_3003133612.counter, 3)) || (subInt((t_3003133612.data).length, t_3003133612.counter) < 4));

  return result_3003133613;

}

function rawInsert_3003134303(t_3003134307, data_3003134308, data_3003134308_Idx, key_3003134309, val_3003134310, hc_3003134311, h_3003134312) {
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field1 = nimCopy(data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field1, key_3003134309, NTI3003121692);
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field2 = val_3003134310;
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field0 = hc_3003134311;

  
}

function enlarge_3003133867(t_3003133870) {
    var n_3003133873 = [];
    n_3003133873 = new Array(chckRange(mulInt((t_3003133870.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003133870.data).length, 2), 0, 2147483647) ; ++i) { n_3003133873[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003133870.data; t_3003133870.data = n_3003133873; n_3003133873 = Temporary1;    Label2: {
      var i_3003133971 = 0;
      var colontmp__2936012962 = 0;
      colontmp__2936012962 = (n_3003133873).length - 1;
      var res_2936012963 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012963 <= colontmp__2936012962)) break Label4;
            i_3003133971 = res_2936012963;
            var eh_3003134052 = n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003134052)) {
            var j_3003134056 = (eh_3003134052 & (t_3003133870.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003133870.data[chckIndx(j_3003134056, 0, (t_3003133870.data).length - 1)].Field0)) break Label6;
                  j_3003134056 = nextTry_1308622883(j_3003134056, (t_3003133870.data).length - 1);
                }
            };
            rawInsert_3003134303(t_3003133870, t_3003133870, "data", n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field1, n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field2, eh_3003134052, j_3003134056);
            }
            
            res_2936012963 = addInt(res_2936012963, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003134553(t_3003134556, key_3003134557, hc_3003134558) {
  var result_3003134559 = 0;

  BeforeRet: {
    if (((t_3003134556.data).length == 0)) {
    result_3003134559 = -1;
    break BeforeRet;
    }
    
    var h_3003134644 = (hc_3003134558 & (t_3003134556.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field0)) break Label2;
          if (((t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field0 == hc_3003134558) && HEX3DHEX3D_3003124693(t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field1, key_3003134557))) {
          result_3003134559 = h_3003134644;
          break BeforeRet;
          }
          
          h_3003134644 = nextTry_1308622883(h_3003134644, (t_3003134556.data).length - 1);
        }
    };
    result_3003134559 = subInt(-1, h_3003134644);
  };

  return result_3003134559;

}

function HEX5BHEX5DHEX3D_3003133342(t_3003133345, key_3003133346, val_3003133347) {
    if (((t_3003133345.data).length == 0)) {
    var correctSizeHEX60gensym77_3003133430 = slotsNeeded_1308622891(32);
    t_3003133345.counter = 0;
    t_3003133345.data = new Array(chckRange(correctSizeHEX60gensym77_3003133430, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_3003133430, 0, 2147483647) ; ++i) { t_3003133345.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003133435 = [0];
    var index_3003133442 = rawGet_3003124349(t_3003133345, key_3003133346, hc_3003133435, 0);
    if ((0 <= index_3003133442)) {
    t_3003133345.data[chckIndx(index_3003133442, 0, (t_3003133345.data).length - 1)].Field2 = val_3003133347;
    }
    else {
      if (((t_3003133345.data).length == 0)) {
      var correctSizeHEX60gensym80_3003133605 = slotsNeeded_1308622891(32);
      t_3003133345.counter = 0;
      t_3003133345.data = new Array(chckRange(correctSizeHEX60gensym80_3003133605, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_3003133605, 0, 2147483647) ; ++i) { t_3003133345.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003133610(t_3003133345)) {
      enlarge_3003133867(t_3003133345);
      index_3003133442 = rawGetKnownHC_3003134553(t_3003133345, key_3003133346, hc_3003133435[0]);
      }
      
      index_3003133442 = subInt(-1, index_3003133442);
      rawInsert_3003134303(t_3003133345, t_3003133345, "data", key_3003133346, val_3003133347, hc_3003133435[0], index_3003133442);
      t_3003133345.counter = addInt(t_3003133345.counter, 1);
    }
    

  
}

function prepend_3003134953(L_3003134955, n_3003134956) {
    n_3003134956.prev = null;
    n_3003134956.next = L_3003134955.head;
    if (!((L_3003134955.head == null))) {
    if (!((L_3003134955.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003134955.head.prev = n_3003134956;
    }
    
    L_3003134955.head = n_3003134956;
    if ((L_3003134955.tail == null)) {
    L_3003134955.tail = n_3003134956;
    }
    

  
}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3003127792(s_3003127794, key_3003127795) {
          var Temporary5;

  var result_3003127796 = false;

  BeforeRet: {
    var hc_3003127797 = [0];
    var i_3003128159 = rawGet_3003127798(s_3003127794, key_3003127795, hc_3003127797, 0);
    var msk_3003128163 = (s_3003127794.data).length - 1;
    result_3003127796 = true;
    if ((0 <= i_3003128159)) {
    result_3003127796 = false;
    s_3003127794.counter = subInt(s_3003127794.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003128169 = i_3003128159;
          var r_3003128170 = j_3003128169;
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0 = 0;
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field1 = nimCopy(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003128159 = (addInt(i_3003128159, 1) & msk_3003128163);
                if (isEmpty_1828716580(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003128170 = (s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0 & msk_3003128163);
                if (!(((((r_3003128170 <= i_3003128159) && (j_3003128169 < r_3003128170)) || ((j_3003128169 < r_3003128170) && (i_3003128159 < j_3003128169))) || ((i_3003128159 < j_3003128169) && (r_3003128170 <= i_3003128159))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)];
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)] = genericReset(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)], NTI3003121772);
          s_3003127794.data[chckIndx(j_3003128169, 0, (s_3003127794.data).length - 1)] = nimCopy(s_3003127794.data[chckIndx(j_3003128169, 0, (s_3003127794.data).length - 1)], Temporary5, NTI3003121772);
        }
    };
    }
    
  };

  return result_3003127796;

}

function excl_3003127777(s_3003127779, key_3003127780) {
    var _ = exclImpl_3003127792(s_3003127779, key_3003127780);

  
}

function len_3003135346(t_3003135349) {
  var result_3003135350 = 0;

    result_3003135350 = t_3003135349.counter;

  return result_3003135350;

}

function len_3003135263(cache_3003135266) {
  var result_3003135267 = 0;

    result_3003135267 = len_3003135346(cache_3003135266.table);

  return result_3003135267;

}

function del_3003135438(t_3003135441, key_3003135442) {
    var hc_3003135443 = [0];
    var i_3003135450 = rawGet_3003124349(t_3003135441, key_3003135442, hc_3003135443, 0);
    var mskHEX60gensym36_3003135454 = (t_3003135441.data).length - 1;
    if ((0 <= i_3003135450)) {
    t_3003135441.counter = subInt(t_3003135441.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003135461 = i_3003135450;
            var rHEX60gensym36_3003135462 = jHEX60gensym36_3003135461;
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0 = 0;
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field1 = nimCopy(t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003135450 = (addInt(i_3003135450, 1) & mskHEX60gensym36_3003135454);
                  if (isEmpty_1308622877(t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003135462 = (t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0 & mskHEX60gensym36_3003135454);
                  if (!(((((rHEX60gensym36_3003135462 <= i_3003135450) && (jHEX60gensym36_3003135461 < rHEX60gensym36_3003135462)) || ((jHEX60gensym36_3003135461 < rHEX60gensym36_3003135462) && (i_3003135450 < jHEX60gensym36_3003135461))) || ((i_3003135450 < jHEX60gensym36_3003135461) && (rHEX60gensym36_3003135462 <= i_3003135450))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003135441.data[chckIndx(jHEX60gensym36_3003135461, 0, (t_3003135441.data).length - 1)] = nimCopy(t_3003135441.data[chckIndx(jHEX60gensym36_3003135461, 0, (t_3003135441.data).length - 1)], t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)], NTI3003121752);
          }
      };
    };
    }
    

  
}

function remove_3003136197(L_3003136199, n_3003136200) {
    if ((n_3003136200 == L_3003136199.tail)) {
    L_3003136199.tail = n_3003136200.prev;
    }
    
    if ((n_3003136200 == L_3003136199.head)) {
    L_3003136199.head = n_3003136200.next;
    }
    
    if (!((n_3003136200.next == null))) {
    n_3003136200.next.prev = n_3003136200.prev;
    }
    
    if (!((n_3003136200.prev == null))) {
    n_3003136200.prev.next = n_3003136200.next;
    }
    

  
}

function resize_3003135181(cache_3003135184) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003135184.capacity < len_3003135263(cache_3003135184))) break Label2;
          var t_3003135351 = cache_3003135184.list.tail;
          if (cache_3003135184.recordRemovedKeys) {
          incl_3003128948(cache_3003135184.removedKeys, t_3003135351.value.key);
          }
          
          del_3003135438(cache_3003135184.table, t_3003135351.value.key);
          remove_3003136197(cache_3003135184.list, t_3003135351);
        }
    };

  
}

function addNewNode_3003133252(cache_3003133255, key_3003133256, val_3003133257) {
    var node_3003133278 = newDoublyLinkedNode_3003133260({key: nimCopy(null, key_3003133256, NTI3003121692), val: val_3003133257});
    HEX5BHEX5DHEX3D_3003133342(cache_3003133255.table, key_3003133256, node_3003133278);
    prepend_3003134953(cache_3003133255.list, node_3003133278);
    if (cache_3003133255.recordRemovedKeys) {
    excl_3003127777(cache_3003133255.removedKeys, key_3003133256);
    }
    
    resize_3003135181(cache_3003133255);

  
}

function HEX5BHEX5DHEX3D_3003133124(cache_3003133127, key_3003133128, val_3003133129) {
    var node_3003133225 = getOrDefault_3003124339(cache_3003133127.table, key_3003133128, null);
    if ((node_3003133225 == null)) {
    addNewNode_3003133252(cache_3003133127, key_3003133128, val_3003133129);
    }
    else {
      node_3003133225.value.val = val_3003133129;
      remove_3003136197(cache_3003133127.list, node_3003133225);
      prepend_3003134953(cache_3003133127.list, node_3003133225);
    }
    

  
}

function rawGet_3003131853(t_3003131856, key_3003131857, hc_3003131858, hc_3003131858_Idx) {
  var result_3003131859 = 0;

  BeforeRet: {
    hc_3003131858[hc_3003131858_Idx] = hash_3003124356(key_3003131857);
    if ((hc_3003131858[hc_3003131858_Idx] == 0)) {
    hc_3003131858[hc_3003131858_Idx] = 314159265;
    }
    
    if (((t_3003131856.data).length == 0)) {
    result_3003131859 = -1;
    break BeforeRet;
    }
    
    var h_3003131948 = (hc_3003131858[hc_3003131858_Idx] & (t_3003131856.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field0)) break Label2;
          if (((t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field0 == hc_3003131858[hc_3003131858_Idx]) && HEX3DHEX3D_3003124693(t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field1, key_3003131857))) {
          result_3003131859 = h_3003131948;
          break BeforeRet;
          }
          
          h_3003131948 = nextTry_1308622883(h_3003131948, (t_3003131856.data).length - 1);
        }
    };
    result_3003131859 = subInt(-1, h_3003131948);
  };

  return result_3003131859;

}

function getOrDefault_3003136801(t_3003136804, key_3003136805, default_3003136806) {
    var Temporary1;

  var result_3003136807 = null;

    var hcHEX60gensym90_3003136810 = [0];
    var indexHEX60gensym90_3003136817 = rawGet_3003131853(t_3003136804, key_3003136805, hcHEX60gensym90_3003136810, 0);
    if ((0 <= indexHEX60gensym90_3003136817)) {
    Temporary1 = t_3003136804.data[chckIndx(indexHEX60gensym90_3003136817, 0, (t_3003136804.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003136806;
    }
    
    result_3003136807 = Temporary1;

  return result_3003136807;

}

function newDoublyLinkedNode_3003136933(value_3003136935) {
  var result_3003136936 = null;

    result_3003136936 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3003136936.value = nimCopy(result_3003136936.value, value_3003136935, NTI3003121795);

  return result_3003136936;

}

function mustRehash_3003137283(t_3003137285) {
  var result_3003137286 = false;

    if (!((t_3003137285.counter < (t_3003137285.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003137286 = ((mulInt((t_3003137285.data).length, 2) < mulInt(t_3003137285.counter, 3)) || (subInt((t_3003137285.data).length, t_3003137285.counter) < 4));

  return result_3003137286;

}

function rawInsert_3003137976(t_3003137980, data_3003137981, data_3003137981_Idx, key_3003137982, val_3003137983, hc_3003137984, h_3003137985) {
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field1 = nimCopy(data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field1, key_3003137982, NTI3003121692);
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field2 = val_3003137983;
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field0 = hc_3003137984;

  
}

function enlarge_3003137540(t_3003137543) {
    var n_3003137546 = [];
    n_3003137546 = new Array(chckRange(mulInt((t_3003137543.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003137543.data).length, 2), 0, 2147483647) ; ++i) { n_3003137546[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003137543.data; t_3003137543.data = n_3003137546; n_3003137546 = Temporary1;    Label2: {
      var i_3003137644 = 0;
      var colontmp__2936012974 = 0;
      colontmp__2936012974 = (n_3003137546).length - 1;
      var res_2936012975 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012975 <= colontmp__2936012974)) break Label4;
            i_3003137644 = res_2936012975;
            var eh_3003137725 = n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003137725)) {
            var j_3003137729 = (eh_3003137725 & (t_3003137543.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003137543.data[chckIndx(j_3003137729, 0, (t_3003137543.data).length - 1)].Field0)) break Label6;
                  j_3003137729 = nextTry_1308622883(j_3003137729, (t_3003137543.data).length - 1);
                }
            };
            rawInsert_3003137976(t_3003137543, t_3003137543, "data", n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field1, n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field2, eh_3003137725, j_3003137729);
            }
            
            res_2936012975 = addInt(res_2936012975, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003138226(t_3003138229, key_3003138230, hc_3003138231) {
  var result_3003138232 = 0;

  BeforeRet: {
    if (((t_3003138229.data).length == 0)) {
    result_3003138232 = -1;
    break BeforeRet;
    }
    
    var h_3003138317 = (hc_3003138231 & (t_3003138229.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field0)) break Label2;
          if (((t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field0 == hc_3003138231) && HEX3DHEX3D_3003124693(t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field1, key_3003138230))) {
          result_3003138232 = h_3003138317;
          break BeforeRet;
          }
          
          h_3003138317 = nextTry_1308622883(h_3003138317, (t_3003138229.data).length - 1);
        }
    };
    result_3003138232 = subInt(-1, h_3003138317);
  };

  return result_3003138232;

}

function HEX5BHEX5DHEX3D_3003137015(t_3003137018, key_3003137019, val_3003137020) {
    if (((t_3003137018.data).length == 0)) {
    var correctSizeHEX60gensym93_3003137103 = slotsNeeded_1308622891(32);
    t_3003137018.counter = 0;
    t_3003137018.data = new Array(chckRange(correctSizeHEX60gensym93_3003137103, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_3003137103, 0, 2147483647) ; ++i) { t_3003137018.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003137108 = [0];
    var index_3003137115 = rawGet_3003131853(t_3003137018, key_3003137019, hc_3003137108, 0);
    if ((0 <= index_3003137115)) {
    t_3003137018.data[chckIndx(index_3003137115, 0, (t_3003137018.data).length - 1)].Field2 = val_3003137020;
    }
    else {
      if (((t_3003137018.data).length == 0)) {
      var correctSizeHEX60gensym96_3003137278 = slotsNeeded_1308622891(32);
      t_3003137018.counter = 0;
      t_3003137018.data = new Array(chckRange(correctSizeHEX60gensym96_3003137278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3003137278, 0, 2147483647) ; ++i) { t_3003137018.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003137283(t_3003137018)) {
      enlarge_3003137540(t_3003137018);
      index_3003137115 = rawGetKnownHC_3003138226(t_3003137018, key_3003137019, hc_3003137108[0]);
      }
      
      index_3003137115 = subInt(-1, index_3003137115);
      rawInsert_3003137976(t_3003137018, t_3003137018, "data", key_3003137019, val_3003137020, hc_3003137108[0], index_3003137115);
      t_3003137018.counter = addInt(t_3003137018.counter, 1);
    }
    

  
}

function prepend_3003132872(L_3003132874, n_3003132875) {
    n_3003132875.prev = null;
    n_3003132875.next = L_3003132874.head;
    if (!((L_3003132874.head == null))) {
    if (!((L_3003132874.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003132874.head.prev = n_3003132875;
    }
    
    L_3003132874.head = n_3003132875;
    if ((L_3003132874.tail == null)) {
    L_3003132874.tail = n_3003132875;
    }
    

  
}

function len_3003138837(t_3003138840) {
  var result_3003138841 = 0;

    result_3003138841 = t_3003138840.counter;

  return result_3003138841;

}

function len_3003138754(cache_3003138757) {
  var result_3003138758 = 0;

    result_3003138758 = len_3003138837(cache_3003138757.table);

  return result_3003138758;

}

function del_3003138929(t_3003138932, key_3003138933) {
    var hc_3003138934 = [0];
    var i_3003138941 = rawGet_3003131853(t_3003138932, key_3003138933, hc_3003138934, 0);
    var mskHEX60gensym36_3003138945 = (t_3003138932.data).length - 1;
    if ((0 <= i_3003138941)) {
    t_3003138932.counter = subInt(t_3003138932.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003138952 = i_3003138941;
            var rHEX60gensym36_3003138953 = jHEX60gensym36_3003138952;
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0 = 0;
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field1 = nimCopy(t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003138941 = (addInt(i_3003138941, 1) & mskHEX60gensym36_3003138945);
                  if (isEmpty_1308622877(t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003138953 = (t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0 & mskHEX60gensym36_3003138945);
                  if (!(((((rHEX60gensym36_3003138953 <= i_3003138941) && (jHEX60gensym36_3003138952 < rHEX60gensym36_3003138953)) || ((jHEX60gensym36_3003138952 < rHEX60gensym36_3003138953) && (i_3003138941 < jHEX60gensym36_3003138952))) || ((i_3003138941 < jHEX60gensym36_3003138952) && (rHEX60gensym36_3003138953 <= i_3003138941))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003138932.data[chckIndx(jHEX60gensym36_3003138952, 0, (t_3003138932.data).length - 1)] = nimCopy(t_3003138932.data[chckIndx(jHEX60gensym36_3003138952, 0, (t_3003138932.data).length - 1)], t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)], NTI3003121831);
          }
      };
    };
    }
    

  
}

function remove_3003132580(L_3003132582, n_3003132583) {
    if ((n_3003132583 == L_3003132582.tail)) {
    L_3003132582.tail = n_3003132583.prev;
    }
    
    if ((n_3003132583 == L_3003132582.head)) {
    L_3003132582.head = n_3003132583.next;
    }
    
    if (!((n_3003132583.next == null))) {
    n_3003132583.next.prev = n_3003132583.prev;
    }
    
    if (!((n_3003132583.prev == null))) {
    n_3003132583.prev.next = n_3003132583.next;
    }
    

  
}

function resize_3003138672(cache_3003138675) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003138675.capacity < len_3003138754(cache_3003138675))) break Label2;
          var t_3003138842 = cache_3003138675.list.tail;
          if (cache_3003138675.recordRemovedKeys) {
          incl_3003128948(cache_3003138675.removedKeys, t_3003138842.value.key);
          }
          
          del_3003138929(cache_3003138675.table, t_3003138842.value.key);
          remove_3003132580(cache_3003138675.list, t_3003138842);
        }
    };

  
}

function addNewNode_3003136925(cache_3003136928, key_3003136929, val_3003136930) {
    var node_3003136951 = newDoublyLinkedNode_3003136933({key: nimCopy(null, key_3003136929, NTI3003121692), val: nimCopy(null, val_3003136930, NTI3003121688)});
    HEX5BHEX5DHEX3D_3003137015(cache_3003136928.table, key_3003136929, node_3003136951);
    prepend_3003132872(cache_3003136928.list, node_3003136951);
    if (cache_3003136928.recordRemovedKeys) {
    excl_3003127777(cache_3003136928.removedKeys, key_3003136929);
    }
    
    resize_3003138672(cache_3003136928);

  
}

function HEX5BHEX5DHEX3D_3003136706(cache_3003136709, key_3003136710, val_3003136711) {
    var node_3003136898 = getOrDefault_3003136801(cache_3003136709.table, key_3003136710, null);
    if ((node_3003136898 == null)) {
    addNewNode_3003136925(cache_3003136709, key_3003136710, val_3003136711);
    }
    else {
      node_3003136898.value.val = nimCopy(null, val_3003136711, NTI3003121688);
      remove_3003132580(cache_3003136709.list, node_3003136898);
      prepend_3003132872(cache_3003136709.list, node_3003136898);
    }
    

  
}

function markRed_3003136501(graph_3003136502, key_3003136503, fingerprint_3003136504) {
    HEX5BHEX5DHEX3D_3003133124(graph_3003136502.verified, key_3003136503, graph_3003136502.revision);
    HEX5BHEX5DHEX3D_3003133124(graph_3003136502.changed, key_3003136503, graph_3003136502.revision);
    HEX5BHEX5DHEX3D_3003136706(graph_3003136502.fingerprints, key_3003136503, fingerprint_3003136504);

  
}

function rawGet_3003125214(t_3003125217, key_3003125218, hc_3003125219, hc_3003125219_Idx) {
  var result_3003125220 = 0;

  BeforeRet: {
    hc_3003125219[hc_3003125219_Idx] = hash_3003124356(key_3003125218);
    if ((hc_3003125219[hc_3003125219_Idx] == 0)) {
    hc_3003125219[hc_3003125219_Idx] = 314159265;
    }
    
    if (((t_3003125217.data).length == 0)) {
    result_3003125220 = -1;
    break BeforeRet;
    }
    
    var h_3003125309 = (hc_3003125219[hc_3003125219_Idx] & (t_3003125217.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field0)) break Label2;
          if (((t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field0 == hc_3003125219[hc_3003125219_Idx]) && HEX3DHEX3D_3003124693(t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field1, key_3003125218))) {
          result_3003125220 = h_3003125309;
          break BeforeRet;
          }
          
          h_3003125309 = nextTry_1308622883(h_3003125309, (t_3003125217.data).length - 1);
        }
    };
    result_3003125220 = subInt(-1, h_3003125309);
  };

  return result_3003125220;

}

function getOrDefault_3003125204(t_3003125207, key_3003125208, default_3003125209) {
    var Temporary1;

  var result_3003125210 = null;

    var hcHEX60gensym28_3003125213 = [0];
    var indexHEX60gensym28_3003125566 = rawGet_3003125214(t_3003125207, key_3003125208, hcHEX60gensym28_3003125213, 0);
    if ((0 <= indexHEX60gensym28_3003125566)) {
    Temporary1 = t_3003125207.data[chckIndx(indexHEX60gensym28_3003125566, 0, (t_3003125207.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003125209;
    }
    
    result_3003125210 = Temporary1;

  return result_3003125210;

}

function newDoublyLinkedNode_3003125883(value_3003125885) {
  var result_3003125886 = null;

    result_3003125886 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3003125886.value = nimCopy(result_3003125886.value, value_3003125885, NTI3003121862);

  return result_3003125886;

}

function mustRehash_3003126233(t_3003126235) {
  var result_3003126236 = false;

    if (!((t_3003126235.counter < (t_3003126235.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003126236 = ((mulInt((t_3003126235.data).length, 2) < mulInt(t_3003126235.counter, 3)) || (subInt((t_3003126235.data).length, t_3003126235.counter) < 4));

  return result_3003126236;

}

function rawInsert_3003126926(t_3003126930, data_3003126931, data_3003126931_Idx, key_3003126932, val_3003126933, hc_3003126934, h_3003126935) {
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field1 = nimCopy(data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field1, key_3003126932, NTI3003121692);
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field2 = val_3003126933;
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field0 = hc_3003126934;

  
}

function enlarge_3003126490(t_3003126493) {
    var n_3003126496 = [];
    n_3003126496 = new Array(chckRange(mulInt((t_3003126493.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003126493.data).length, 2), 0, 2147483647) ; ++i) { n_3003126496[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003126493.data; t_3003126493.data = n_3003126496; n_3003126496 = Temporary1;    Label2: {
      var i_3003126594 = 0;
      var colontmp__2936012984 = 0;
      colontmp__2936012984 = (n_3003126496).length - 1;
      var res_2936012985 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012985 <= colontmp__2936012984)) break Label4;
            i_3003126594 = res_2936012985;
            var eh_3003126675 = n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003126675)) {
            var j_3003126679 = (eh_3003126675 & (t_3003126493.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003126493.data[chckIndx(j_3003126679, 0, (t_3003126493.data).length - 1)].Field0)) break Label6;
                  j_3003126679 = nextTry_1308622883(j_3003126679, (t_3003126493.data).length - 1);
                }
            };
            rawInsert_3003126926(t_3003126493, t_3003126493, "data", n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field1, n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field2, eh_3003126675, j_3003126679);
            }
            
            res_2936012985 = addInt(res_2936012985, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003127176(t_3003127179, key_3003127180, hc_3003127181) {
  var result_3003127182 = 0;

  BeforeRet: {
    if (((t_3003127179.data).length == 0)) {
    result_3003127182 = -1;
    break BeforeRet;
    }
    
    var h_3003127267 = (hc_3003127181 & (t_3003127179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field0)) break Label2;
          if (((t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field0 == hc_3003127181) && HEX3DHEX3D_3003124693(t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field1, key_3003127180))) {
          result_3003127182 = h_3003127267;
          break BeforeRet;
          }
          
          h_3003127267 = nextTry_1308622883(h_3003127267, (t_3003127179.data).length - 1);
        }
    };
    result_3003127182 = subInt(-1, h_3003127267);
  };

  return result_3003127182;

}

function HEX5BHEX5DHEX3D_3003125965(t_3003125968, key_3003125969, val_3003125970) {
    if (((t_3003125968.data).length == 0)) {
    var correctSizeHEX60gensym34_3003126053 = slotsNeeded_1308622891(32);
    t_3003125968.counter = 0;
    t_3003125968.data = new Array(chckRange(correctSizeHEX60gensym34_3003126053, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_3003126053, 0, 2147483647) ; ++i) { t_3003125968.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003126058 = [0];
    var index_3003126065 = rawGet_3003125214(t_3003125968, key_3003125969, hc_3003126058, 0);
    if ((0 <= index_3003126065)) {
    t_3003125968.data[chckIndx(index_3003126065, 0, (t_3003125968.data).length - 1)].Field2 = val_3003125970;
    }
    else {
      if (((t_3003125968.data).length == 0)) {
      var correctSizeHEX60gensym37_3003126228 = slotsNeeded_1308622891(32);
      t_3003125968.counter = 0;
      t_3003125968.data = new Array(chckRange(correctSizeHEX60gensym37_3003126228, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_3003126228, 0, 2147483647) ; ++i) { t_3003125968.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003126233(t_3003125968)) {
      enlarge_3003126490(t_3003125968);
      index_3003126065 = rawGetKnownHC_3003127176(t_3003125968, key_3003125969, hc_3003126058[0]);
      }
      
      index_3003126065 = subInt(-1, index_3003126065);
      rawInsert_3003126926(t_3003125968, t_3003125968, "data", key_3003125969, val_3003125970, hc_3003126058[0], index_3003126065);
      t_3003125968.counter = addInt(t_3003125968.counter, 1);
    }
    

  
}

function prepend_3003127576(L_3003127578, n_3003127579) {
    n_3003127579.prev = null;
    n_3003127579.next = L_3003127578.head;
    if (!((L_3003127578.head == null))) {
    if (!((L_3003127578.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003127578.head.prev = n_3003127579;
    }
    
    L_3003127578.head = n_3003127579;
    if ((L_3003127578.tail == null)) {
    L_3003127578.tail = n_3003127579;
    }
    

  
}

function len_3003128923(t_3003128926) {
  var result_3003128927 = 0;

    result_3003128927 = t_3003128926.counter;

  return result_3003128927;

}

function len_3003128840(cache_3003128843) {
  var result_3003128844 = 0;

    result_3003128844 = len_3003128923(cache_3003128843.table);

  return result_3003128844;

}

function del_3003130530(t_3003130533, key_3003130534) {
    var hc_3003130535 = [0];
    var i_3003130542 = rawGet_3003125214(t_3003130533, key_3003130534, hc_3003130535, 0);
    var mskHEX60gensym36_3003130546 = (t_3003130533.data).length - 1;
    if ((0 <= i_3003130542)) {
    t_3003130533.counter = subInt(t_3003130533.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003130553 = i_3003130542;
            var rHEX60gensym36_3003130554 = jHEX60gensym36_3003130553;
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0 = 0;
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field1 = nimCopy(t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003130542 = (addInt(i_3003130542, 1) & mskHEX60gensym36_3003130546);
                  if (isEmpty_1308622877(t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003130554 = (t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0 & mskHEX60gensym36_3003130546);
                  if (!(((((rHEX60gensym36_3003130554 <= i_3003130542) && (jHEX60gensym36_3003130553 < rHEX60gensym36_3003130554)) || ((jHEX60gensym36_3003130553 < rHEX60gensym36_3003130554) && (i_3003130542 < jHEX60gensym36_3003130553))) || ((i_3003130542 < jHEX60gensym36_3003130553) && (rHEX60gensym36_3003130554 <= i_3003130542))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003130533.data[chckIndx(jHEX60gensym36_3003130553, 0, (t_3003130533.data).length - 1)] = nimCopy(t_3003130533.data[chckIndx(jHEX60gensym36_3003130553, 0, (t_3003130533.data).length - 1)], t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)], NTI3003121898);
          }
      };
    };
    }
    

  
}

function remove_3003131289(L_3003131291, n_3003131292) {
    if ((n_3003131292 == L_3003131291.tail)) {
    L_3003131291.tail = n_3003131292.prev;
    }
    
    if ((n_3003131292 == L_3003131291.head)) {
    L_3003131291.head = n_3003131292.next;
    }
    
    if (!((n_3003131292.next == null))) {
    n_3003131292.next.prev = n_3003131292.prev;
    }
    
    if (!((n_3003131292.prev == null))) {
    n_3003131292.prev.next = n_3003131292.next;
    }
    

  
}

function resize_3003128758(cache_3003128761) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003128761.capacity < len_3003128840(cache_3003128761))) break Label2;
          var t_3003128928 = cache_3003128761.list.tail;
          if (cache_3003128761.recordRemovedKeys) {
          incl_3003128948(cache_3003128761.removedKeys, t_3003128928.value.key);
          }
          
          del_3003130530(cache_3003128761.table, t_3003128928.value.key);
          remove_3003131289(cache_3003128761.list, t_3003128928);
        }
    };

  
}

function addNewNode_3003125875(cache_3003125878, key_3003125879, val_3003125880) {
    var node_3003125901 = newDoublyLinkedNode_3003125883({key: nimCopy(null, key_3003125879, NTI3003121692), val: nimCopy(null, val_3003125880, NTI3003121848)});
    HEX5BHEX5DHEX3D_3003125965(cache_3003125878.table, key_3003125879, node_3003125901);
    prepend_3003127576(cache_3003125878.list, node_3003125901);
    if (cache_3003125878.recordRemovedKeys) {
    excl_3003127777(cache_3003125878.removedKeys, key_3003125879);
    }
    
    resize_3003128758(cache_3003125878);

  
}

function HEX5BHEX5DHEX3D_3003125747(cache_3003125750, key_3003125751, val_3003125752) {
    var node_3003125848 = getOrDefault_3003125204(cache_3003125750.table, key_3003125751, null);
    if ((node_3003125848 == null)) {
    addNewNode_3003125875(cache_3003125750, key_3003125751, val_3003125752);
    }
    else {
      node_3003125848.value.val = nimCopy(null, val_3003125752, NTI3003121848);
      remove_3003131289(cache_3003125750.list, node_3003125848);
      prepend_3003127576(cache_3003125750.list, node_3003125848);
    }
    

  
}

function clearEdges_3003125677(graph_3003125678, key_3003125679) {
    HEX5BHEX5DHEX3D_3003125747(graph_3003125678.dependencies, key_3003125679, []);

  
}

function setDependencies_3003131593(graph_3003131594, key_3003131595, deps_3003131596) {
    HEX5BHEX5DHEX3D_3003125747(graph_3003131594.dependencies, key_3003131595, deps_3003131596);

  
}

function pop_2986415809(s_2986415811, s_2986415811_Idx) {
  var result_2986415812 = [];

    var L_2986415816 = subInt((s_2986415811[s_2986415811_Idx]).length, 1);
    result_2986415812 = nimCopy(null, s_2986415811[s_2986415811_Idx][chckIndx(L_2986415816, 0, (s_2986415811[s_2986415811_Idx]).length - 1)], NTI2986344476);
    if (s_2986415811[s_2986415811_Idx].length < chckRange(L_2986415816, 0, 2147483647)) { for (var i = s_2986415811[s_2986415811_Idx].length ; i < chckRange(L_2986415816, 0, 2147483647) ; ++i) s_2986415811[s_2986415811_Idx].push([]); }
               else { s_2986415811[s_2986415811_Idx].length = chckRange(L_2986415816, 0, 2147483647); };

  return result_2986415812;

}

function pop_2986415840(s_2986415842, s_2986415842_Idx) {
  var result_2986415843 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_2986415847 = subInt((s_2986415842[s_2986415842_Idx]).length, 1);
    result_2986415843 = nimCopy(result_2986415843, s_2986415842[s_2986415842_Idx][chckIndx(L_2986415847, 0, (s_2986415842[s_2986415842_Idx]).length - 1)], NTI3003121692);
    if (s_2986415842[s_2986415842_Idx].length < chckRange(L_2986415847, 0, 2147483647)) { for (var i = s_2986415842[s_2986415842_Idx].length ; i < chckRange(L_2986415847, 0, 2147483647) ; ++i) s_2986415842[s_2986415842_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_2986415842[s_2986415842_Idx].length = chckRange(L_2986415847, 0, 2147483647); };

  return result_2986415843;

}

function hasKey_3003131846(t_3003131849, key_3003131850) {
  var result_3003131851 = false;

    var hc_3003131852 = [0];
    result_3003131851 = (0 <= rawGet_3003131853(t_3003131849, key_3003131850, hc_3003131852, 0));

  return result_3003131851;

}

function contains_3003131840(t_3003131843, key_3003131844) {
  var result_3003131845 = false;

  BeforeRet: {
    result_3003131845 = hasKey_3003131846(t_3003131843, key_3003131844);
    break BeforeRet;
  };

  return result_3003131845;

}

function contains_3003131746(cache_3003131749, key_3003131750) {
  var result_3003131751 = false;

    result_3003131751 = contains_3003131840(cache_3003131749.table, key_3003131750);

  return result_3003131751;

}

function HEX5BHEX5D_3003132371(t_3003132374, key_3003132375) {
  var result_3003132376 = null;
  var result_3003132376_Idx = 0;

    var hcHEX60gensym22_3003132377 = [0];
    var indexHEX60gensym22_3003132384 = rawGet_3003131853(t_3003132374, key_3003132375, hcHEX60gensym22_3003132377, 0);
    if ((0 <= indexHEX60gensym22_3003132384)) {
    result_3003132376 = t_3003132374.data[chckIndx(indexHEX60gensym22_3003132384, 0, (t_3003132374.data).length - 1)]; result_3003132376_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_3003132375);
    }
    

  return [result_3003132376, result_3003132376_Idx];

}

function HEX5BHEX5D_3003132285(cache_3003132288, key_3003132289) {
    var Temporary1;

  var result_3003132290 = [];

    var node_3003132566 = (Temporary1 = HEX5BHEX5D_3003132371(cache_3003132288.table, key_3003132289), Temporary1)[0][Temporary1[1]];
    result_3003132290 = nimCopy(null, node_3003132566.value.val, NTI3003121688);
    remove_3003132580(cache_3003132288.list, node_3003132566);
    prepend_3003132872(cache_3003132288.list, node_3003132566);

  return result_3003132290;

}

function fingerprint_3003131666(graph_3003131667, key_3003131668) {
  var result_3003131669 = [];

  BeforeRet: {
    if (contains_3003131746(graph_3003131667.fingerprints, key_3003131668)) {
    result_3003131669 = nimCopy(null, HEX5BHEX5D_3003132285(graph_3003131667.fingerprints, key_3003131668), NTI3003121688);
    break BeforeRet;
    }
    
  };

  return result_3003131669;

}

function HEX3DHEX3D_2986415853(x_2986415855, y_2986415856) {
  var result_2986415857 = false;

  BeforeRet: {
    var sameObject_2986415864 = false;
    sameObject_2986415864 = x_2986415855 === y_2986415856
    if (sameObject_2986415864) {
    result_2986415857 = true;
    break BeforeRet;
    }
    
    if (!(((x_2986415855).length == (y_2986415856).length))) {
    result_2986415857 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2986415878 = 0;
      var colontmp__2936012992 = 0;
      colontmp__2936012992 = subInt((x_2986415855).length, 1);
      var res_2936012993 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936012993 <= colontmp__2936012992)) break Label3;
            i_2986415878 = res_2936012993;
            if (!((x_2986415855[chckIndx(i_2986415878, 0, (x_2986415855).length - 1)] == y_2986415856[chckIndx(i_2986415878, 0, (y_2986415856).length - 1)]))) {
            result_2986415857 = false;
            break BeforeRet;
            }
            
            res_2936012993 = addInt(res_2936012993, 1);
          }
      };
    };
    result_2986415857 = true;
    break BeforeRet;
  };

  return result_2986415857;

}

function markGreen_3003133058(graph_3003133059, key_3003133060) {
    HEX5BHEX5DHEX3D_3003133124(graph_3003133059.verified, key_3003133060, graph_3003133059.revision);

  
}

function force_2986414895(ctxHEX60gensym88_2986414896, keyHEX60gensym88_2986414897) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_2986414896.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary1);
    try {
    if (ctxHEX60gensym88_2986414896.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_2986414988(ctxHEX60gensym88_2986414896.depGraph.queryNames, keyHEX60gensym88_2986414897.Field1), Temporary3)[0][Temporary3[1]], HEX24_3003121876(keyHEX60gensym88_2986414897.Field0));
    }
    
    if (contains_2986415161(ctxHEX60gensym88_2986414896.activeQuerySet, keyHEX60gensym88_2986414897)) {
    incl_3003128948(ctxHEX60gensym88_2986414896.recursiveQueries, keyHEX60gensym88_2986414897);
    var itemHEX60gensym88_2986415204 = nimCopy(null, keyHEX60gensym88_2986414897.Field0, NTI3003121689);
    var queryHEX60gensym88_2986415290 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2986414988(ctxHEX60gensym88_2986414896.depGraph.queryNames, keyHEX60gensym88_2986414897.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3003121876(itemHEX60gensym88_2986415204), [32,40], queryHEX60gensym88_2986415290, [41]);
    Label5: {
      var kHEX60gensym88_2986415298 = 0;
      var colontmp__2936012950 = 0;
      colontmp__2936012950 = (ctxHEX60gensym88_2986414896.activeQueryStack).length - 1;
      var res_2936012951 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2936012951 <= colontmp__2936012950)) break Label7;
            kHEX60gensym88_2986415298 = res_2936012951;
            var iHEX60gensym88_2986415302 = subInt(subInt((ctxHEX60gensym88_2986414896.activeQueryStack).length, kHEX60gensym88_2986415298), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_2986415298), [93,32,80,97,114,101,110,116,58,32], HEX24_3003121876(ctxHEX60gensym88_2986414896.activeQueryStack[chckIndx(iHEX60gensym88_2986415302, 0, (ctxHEX60gensym88_2986414896.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2986415392(ctxHEX60gensym88_2986414896.depGraph.queryNames, ctxHEX60gensym88_2986414896.activeQueryStack[chckIndx(iHEX60gensym88_2986415302, 0, (ctxHEX60gensym88_2986414896.activeQueryStack).length - 1)].Field1));
            res_2936012951 = addInt(res_2936012951, 1);
          }
      };
    };
    if (ctxHEX60gensym88_2986414896.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2986415564(ctxHEX60gensym88_2986414896.recoveryFunctions, keyHEX60gensym88_2986414897.Field1)) {
    (Temporary8 = HEX5BHEX5D_2986415663(ctxHEX60gensym88_2986414896.recoveryFunctions, keyHEX60gensym88_2986414897.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_2986414897);
    markRed_3003136501(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897, []);
    }
    
    break BeforeRet;
    }
    
    incl_3003128948(ctxHEX60gensym88_2986414896.activeQuerySet, keyHEX60gensym88_2986414897);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_2986414897, NTI3003121692);
    ctxHEX60gensym88_2986414896.activeQueryStack.push(Temporary9);;
    clearEdges_3003125677(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897);
    ctxHEX60gensym88_2986414896.dependencyStack.push([]);;
    recordDependency_2986398524(ctxHEX60gensym88_2986414896, keyHEX60gensym88_2986414897.Field0, -1);
    var fingerprintHEX60gensym88_2986415808 = ctxHEX60gensym88_2986414896.updateFunctions[chckIndx(keyHEX60gensym88_2986414897.Field1, 0, (ctxHEX60gensym88_2986414896.updateFunctions).length - 1)](keyHEX60gensym88_2986414897.Field0);
    setDependencies_3003131593(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897, pop_2986415809(ctxHEX60gensym88_2986414896, "dependencyStack"));
    excl_3003127777(ctxHEX60gensym88_2986414896.activeQuerySet, keyHEX60gensym88_2986414897);
    var _ = pop_2986415840(ctxHEX60gensym88_2986414896, "activeQueryStack");
    var prevFingerprintHEX60gensym88_2986415852 = fingerprint_3003131666(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897);
    if (HEX3DHEX3D_2986415853(fingerprintHEX60gensym88_2986415808, prevFingerprintHEX60gensym88_2986415852)) {
    if (ctxHEX60gensym88_2986414896.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3003133058(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897);
    }
    else {
      if (ctxHEX60gensym88_2986414896.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3003136501(ctxHEX60gensym88_2986414896.depGraph, keyHEX60gensym88_2986414897, fingerprintHEX60gensym88_2986415808);
    }
    
    } finally {
    if (ctxHEX60gensym88_2986414896.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary10);
    }
  };

  
}

function addQuoted_3070231011(s_3070231013, s_3070231013_Idx, x_3070231014) {
    s_3070231013[s_3070231013_Idx].push.apply(s_3070231013[s_3070231013_Idx], HEX24_3070230964(x_3070231014));;

  
}

function collectionToString_3070230971(x_3070230973, prefix_3070230974, separator_3070230975, suffix_3070230976) {
  var result_3070230977 = [[]];

    result_3070230977[0] = nimCopy(null, prefix_3070230974, NTI33554449);
    var firstElement_3070230978 = true;
    Label1: {
      var value_3070231001 = null;
      var i_2936012997 = 0;
      var L_2936012998 = (x_3070230973).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012997 < L_2936012998)) break Label3;
            value_3070231001 = x_3070230973[i_2936012997];
            if (firstElement_3070230978) {
            firstElement_3070230978 = false;
            }
            else {
            result_3070230977[0].push.apply(result_3070230977[0], separator_3070230975);;
            }
            
            if ((value_3070231001 == null)) {
            result_3070230977[0].push.apply(result_3070230977[0], [110,105,108]);;
            }
            else {
            addQuoted_3070231011(result_3070230977, 0, value_3070231001);
            }
            
            i_2936012997 += 1;
            if (!(((x_3070230973).length == L_2936012998))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070230977[0].push.apply(result_3070230977[0], suffix_3070230976);;

  return result_3070230977[0];

}

function HEX24_3070230967(x_3070230969) {
  var result_3070230970 = [];

    result_3070230970 = nimCopy(null, collectionToString_3070230971(x_3070230969, [64,91], [44,32], [93]), NTI33554449);

  return result_3070230970;

}

function formatValue_2801799778(result_2801799780, result_2801799780_Idx, value_2801799781, specifier_2801799782) {
    formatValue_721420459(result_2801799780, result_2801799780_Idx, nimBoolToStr(value_2801799781), specifier_2801799782);

  
}

function HEX24_3070230964(typ_3070230965) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3070230966 = [];

  BeforeRet: {
    switch (typ_3070230965.kind) {
    case 0:
      result_3070230966 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3070230966 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3070230966 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3070230966 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3070230965;
      if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230531)); }
      var Temporary2 = typ_3070230965;
      if (ConstSet61[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      result_3070230966 = nimCopy(null, (HEX24_3070230967(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3070230964(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3070230966 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3070231030 = [mnewString(0)];
      fmtRes_3070231030[0].push.apply(fmtRes_3070231030[0], [97,110,121,40]);;
      var Temporary3 = typ_3070230965;
      if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      formatValue_2801799778(fmtRes_3070231030, 0, Temporary3.open, []);
      fmtRes_3070231030[0].push.apply(fmtRes_3070231030[0], [41]);;
      result_3070230966 = nimCopy(null, fmtRes_3070231030[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070230966;

}

function raiseKeyError_2986417924(key_2986417926) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2969569239(key_2986417926) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986417830(t_2986417833, key_2986417834) {
  var result_2986417835 = null;
  var result_2986417835_Idx = 0;

    var hcHEX60gensym22_2986417836 = [0];
    var indexHEX60gensym22_2986417843 = rawGet_2986346867(t_2986417833, key_2986417834, hcHEX60gensym22_2986417836, 0);
    if ((0 <= indexHEX60gensym22_2986417843)) {
    result_2986417835 = t_2986417833.data[chckIndx(indexHEX60gensym22_2986417843, 0, (t_2986417833.data).length - 1)]; result_2986417835_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417924(key_2986417834);
    }
    

  return [result_2986417835, result_2986417835_Idx];

}

function remove_2986352771(L_2986352773, n_2986352774) {
    if ((n_2986352774 == L_2986352773.tail)) {
    L_2986352773.tail = n_2986352774.prev;
    }
    
    if ((n_2986352774 == L_2986352773.head)) {
    L_2986352773.head = n_2986352774.next;
    }
    
    if (!((n_2986352774.next == null))) {
    n_2986352774.next.prev = n_2986352774.prev;
    }
    
    if (!((n_2986352774.prev == null))) {
    n_2986352774.prev.next = n_2986352774.next;
    }
    

  
}

function prepend_2986349043(L_2986349045, n_2986349046) {
    n_2986349046.prev = null;
    n_2986349046.next = L_2986349045.head;
    if (!((L_2986349045.head == null))) {
    if (!((L_2986349045.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986349045.head.prev = n_2986349046;
    }
    
    L_2986349045.head = n_2986349046;
    if ((L_2986349045.tail == null)) {
    L_2986349045.tail = n_2986349046;
    }
    

  
}

function HEX5BHEX5D_2986417744(cache_2986417747, key_2986417748) {
    var Temporary1;

  var result_2986417749 = null;

    var node_2986417937 = (Temporary1 = HEX5BHEX5D_2986417830(cache_2986417747.table, key_2986417748), Temporary1)[0][Temporary1[1]];
    result_2986417749 = node_2986417937.value.val;
    remove_2986352771(cache_2986417747.list, node_2986417937);
    prepend_2986349043(cache_2986417747.list, node_2986417937);

  return result_2986417749;

}

function addQuoted_2986416102(s_2986416104, s_2986416104_Idx, x_2986416105) {
    s_2986416104[s_2986416104_Idx].push.apply(s_2986416104[s_2986416104_Idx], HEX24_3003132512(x_2986416105));;

  
}

function collectionToString_2986416069(x_2986416071, prefix_2986416072, separator_2986416073, suffix_2986416074) {
  var result_2986416075 = [[]];

    result_2986416075[0] = nimCopy(null, prefix_2986416072, NTI33554449);
    var firstElement_2986416076 = true;
    Label1: {
      var value_2986416098 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2936013013 = 0;
      var L_2936013014 = (x_2986416071).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013013 < L_2936013014)) break Label3;
            value_2986416098 = x_2986416071[i_2936013013];
            if (firstElement_2986416076) {
            firstElement_2986416076 = false;
            }
            else {
            result_2986416075[0].push.apply(result_2986416075[0], separator_2986416073);;
            }
            
            addQuoted_2986416102(result_2986416075, 0, value_2986416098);
            i_2936013013 += 1;
            if (!(((x_2986416071).length == L_2936013014))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986416075[0].push.apply(result_2986416075[0], suffix_2986416074);;

  return result_2986416075[0];

}

function HEX24_2986416065(x_2986416067) {
  var result_2986416068 = [];

    result_2986416068 = nimCopy(null, collectionToString_2986416069(x_2986416067, [64,91], [44,32], [93]), NTI33554449);

  return result_2986416068;

}

function getOrDefault_3003125108(cache_3003125111, key_3003125112, val_3003125113) {
  var result_3003125114 = [];

    var node_3003125656 = getOrDefault_3003125204(cache_3003125111.table, key_3003125112, null);
    if ((node_3003125656 == null)) {
    result_3003125114 = nimCopy(null, val_3003125113, NTI3003121848);
    }
    else {
      result_3003125114 = nimCopy(null, node_3003125656.value.val, NTI3003121848);
    }
    

  return result_3003125114;

}

function getDependencies_3003125011(graph_3003125012, key_3003125013) {
  var result_3003125014 = [];

    result_3003125014 = nimCopy(null, getOrDefault_3003125108(graph_3003125012.dependencies, key_3003125013, []), NTI3003121848);
    if ((((result_3003125014).length == 0) && !((key_3003125013.Field1 == -1)))) {
    result_3003125014.push({Field0: nimCopy(null, key_3003125013.Field0, NTI3003121689), Field1: -1});;
    }
    

  return result_3003125014;

}

function tryMarkGreen_2986415910(ctxHEX60gensym89_2986415911, keyHEX60gensym89_2986415912, tryForceHEX60gensym89_2986415913) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_2986415914 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_2986415911.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary1);
    try {
    if (ctxHEX60gensym89_2986415911.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, keyHEX60gensym89_2986415912.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3003121876(keyHEX60gensym89_2986415912.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_2986416065(getDependencies_3003125011(ctxHEX60gensym89_2986415911.depGraph, keyHEX60gensym89_2986415912)));
    }
    
    if (contains_2986415161(ctxHEX60gensym89_2986415911.activeQuerySet, keyHEX60gensym89_2986415912)) {
    incl_3003128948(ctxHEX60gensym89_2986415911.recursiveQueries, keyHEX60gensym89_2986415912);
    var itemHEX60gensym89_2986416214 = nimCopy(null, keyHEX60gensym89_2986415912.Field0, NTI3003121689);
    var queryHEX60gensym89_2986416300 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, keyHEX60gensym89_2986415912.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3003121876(itemHEX60gensym89_2986416214), [32,40], queryHEX60gensym89_2986416300, [41]);
    Label5: {
      var kHEX60gensym89_2986416308 = 0;
      var colontmp__2936013001 = 0;
      colontmp__2936013001 = (ctxHEX60gensym89_2986415911.activeQueryStack).length - 1;
      var res_2936013002 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2936013002 <= colontmp__2936013001)) break Label7;
            kHEX60gensym89_2986416308 = res_2936013002;
            var iHEX60gensym89_2986416312 = subInt(subInt((ctxHEX60gensym89_2986415911.activeQueryStack).length, kHEX60gensym89_2986416308), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_2986416308), [93,32,80,97,114,101,110,116,58,32], HEX24_3003121876(ctxHEX60gensym89_2986415911.activeQueryStack[chckIndx(iHEX60gensym89_2986416312, 0, (ctxHEX60gensym89_2986415911.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2986415392(ctxHEX60gensym89_2986415911.depGraph.queryNames, ctxHEX60gensym89_2986415911.activeQueryStack[chckIndx(iHEX60gensym89_2986416312, 0, (ctxHEX60gensym89_2986415911.activeQueryStack).length - 1)].Field1));
            res_2936013002 = addInt(res_2936013002, 1);
          }
      };
    };
    if (ctxHEX60gensym89_2986415911.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2986415564(ctxHEX60gensym89_2986415911.recoveryFunctions, keyHEX60gensym89_2986415912.Field1)) {
    (Temporary8 = HEX5BHEX5D_2986415663(ctxHEX60gensym89_2986415911.recoveryFunctions, keyHEX60gensym89_2986415912.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_2986415912);
    markRed_3003136501(ctxHEX60gensym89_2986415911.depGraph, keyHEX60gensym89_2986415912, []);
    }
    
    result_2986415914 = 2;
    break BeforeRet;
    }
    
    incl_3003128948(ctxHEX60gensym89_2986415911.activeQuerySet, keyHEX60gensym89_2986415912);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_2986415912, NTI3003121692);
    ctxHEX60gensym89_2986415911.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_2986416721 = getOrDefault_3003124243(ctxHEX60gensym89_2986415911.depGraph.verified, keyHEX60gensym89_2986415912, 0);
    Label11: {
      var iHEX60gensym89_2986416745 = 0;
      var depHEX60gensym89_2986416746 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2936013006 = [];
      colontmp__2936013006 = getDependencies_3003125011(ctxHEX60gensym89_2986415911.depGraph, keyHEX60gensym89_2986415912);
      var i_2936013008 = 0;
      var L_2936013009 = (colontmp__2936013006).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2936013008 < L_2936013009)) break Label13;
            iHEX60gensym89_2986416745 = i_2936013008;
            depHEX60gensym89_2986416746 = nimCopy(depHEX60gensym89_2986416746, colontmp__2936013006[chckIndx(i_2936013008, 0, (colontmp__2936013006).length - 1)], NTI3003121692);
            Label14: {
              if (HEX3DHEX3D_2046820592(depHEX60gensym89_2986416746.Field0.Field0, null_2046820612)) {
              if (ctxHEX60gensym89_2986415911.enableLogging) {
              rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2986415914 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2046820592(depHEX60gensym89_2986416746.Field0.Field0, dependencyGlobalRevision_3003121696)) {
              if ((verifiedHEX60gensym89_2986416721 < ctxHEX60gensym89_2986415911.depGraph.revision)) {
              if (ctxHEX60gensym89_2986415911.enableLogging) {
              rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2986415914 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_2986415911.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3003124149(ctxHEX60gensym89_2986415911.depGraph, depHEX60gensym89_2986416746, verifiedHEX60gensym89_2986416721)) {
              case 2:
                if (ctxHEX60gensym89_2986415911.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_2986415911.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_2986415914 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_2986415911.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_2986415910(ctxHEX60gensym89_2986415911, depHEX60gensym89_2986416746, true)) {
                case 2:
                  if (ctxHEX60gensym89_2986415911.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3003132512(keyHEX60gensym89_2986415912) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2986415914 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_2986415911.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_2986415913) {
                  force_2986414895(ctxHEX60gensym89_2986415911, depHEX60gensym89_2986416746);
                  }
                  else {
                    result_2986415914 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_2986415161(ctxHEX60gensym89_2986415911.recursiveQueries, keyHEX60gensym89_2986415912)) {
                  excl_3003127777(ctxHEX60gensym89_2986415911.recursiveQueries, keyHEX60gensym89_2986415912);
                  if (ctxHEX60gensym89_2986415911.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3003132512(keyHEX60gensym89_2986415912) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2986415914 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3003124149(ctxHEX60gensym89_2986415911.depGraph, depHEX60gensym89_2986416746, verifiedHEX60gensym89_2986416721) == 1)) {
                  if (ctxHEX60gensym89_2986415911.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_2986414988(ctxHEX60gensym89_2986415911.depGraph.queryNames, depHEX60gensym89_2986416746.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416746.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_2986415914 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2936013008 = addInt(i_2936013008, 1);
            if (!(((colontmp__2936013006).length == L_2936013009))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_2986415911.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3003133058(ctxHEX60gensym89_2986415911.depGraph, keyHEX60gensym89_2986415912);
    result_2986415914 = 0;
    break BeforeRet;
    } finally {
    excl_3003127777(ctxHEX60gensym89_2986415911.activeQuerySet, keyHEX60gensym89_2986415912);
    var _ = pop_2986415840(ctxHEX60gensym89_2986415911, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_2986415911.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary22);
    }
  };

  return result_2986415914;

}

function clear_2986418125(s_2986418127) {
    s_2986418127.counter = 0;
    Label1: {
      var i_2986418213 = 0;
      var colontmp__2936013017 = 0;
      colontmp__2936013017 = (s_2986418127.data).length;
      var i_2936013018 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013018 < colontmp__2936013017)) break Label3;
            i_2986418213 = i_2936013018;
            s_2986418127.data[chckIndx(i_2986418213, 0, (s_2986418127.data).length - 1)].Field0 = 0;
            s_2986418127.data[chckIndx(i_2986418213, 0, (s_2986418127.data).length - 1)].Field1 = nimCopy(s_2986418127.data[chckIndx(i_2986418213, 0, (s_2986418127.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            i_2936013018 = addInt(i_2936013018, 1);
          }
      };
    };

  
}

function elapsed_2466250815(timer_2466250816) {
  var result_2466250817 = 0;

    result_2466250817 = subInt(myGetTicks_2466250798(), timer_2466250816.start);

  return result_2466250817;

}

function computeType_2986418034(ctxHEX60gensym92_2986418035, inputHEX60gensym92_2986418036, recordDependencyHEX60gensym92_2986418037) {
    var Temporary3;
    var Temporary5;

  var result_2986418038 = null;

  BeforeRet: {
    var timerHEX60gensym92_2986418039 = startTimer_2466250804();
    ctxHEX60gensym92_2986418035.statsType.totalCalls = addInt(ctxHEX60gensym92_2986418035.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_2986418458 = getItem_2986398737(inputHEX60gensym92_2986418036);
    var keyHEX60gensym92_2986418459 = {Field0: nimCopy(null, itemHEX60gensym92_2986418458, NTI3003121689), Field1: 0};
    if (recordDependencyHEX60gensym92_2986418037) {
    recordDependency_2986398524(ctxHEX60gensym92_2986418035, itemHEX60gensym92_2986418458, 0);
    }
    
    var colorHEX60gensym92_2986418460 = nodeColor_3003124149(ctxHEX60gensym92_2986418035.depGraph, keyHEX60gensym92_2986418459, 0);
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_2986418460, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym92_2986418458));
    }
    
    if ((colorHEX60gensym92_2986418460 == 2)) {
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym92_2986418035, keyHEX60gensym92_2986418459);
    if (false) {
    markRed_3003136501(ctxHEX60gensym92_2986418035.depGraph, keyHEX60gensym92_2986418459, []);
    }
    
    if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
      }
      
    }
    
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986418036) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986418038 = HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_2986418460 == 0)) {
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym92_2986418035, keyHEX60gensym92_2986418459);
    if (false) {
    markRed_3003136501(ctxHEX60gensym92_2986418035.depGraph, keyHEX60gensym92_2986418459, []);
    }
    
    if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
    }
    
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986418036) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986418038 = HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym92_2986418035, keyHEX60gensym92_2986418459, true) == 0)) {
    if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
    }
    
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986418036) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986418038 = HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_2986418035.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym92_2986418035, keyHEX60gensym92_2986418459);
      if (false) {
      markRed_3003136501(ctxHEX60gensym92_2986418035.depGraph, keyHEX60gensym92_2986418459, []);
      }
      
      if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
      }
      
      if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986418036) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986418038 = HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_2986418460 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_2986418035.enableLogging && contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036)));
    }
    
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    force_2986414895(ctxHEX60gensym92_2986418035, keyHEX60gensym92_2986418459);
    }
    
    if (!(contains_2986417551(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986418036) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986418038 = HEX5BHEX5D_2986417744(ctxHEX60gensym92_2986418035.queryCacheType, inputHEX60gensym92_2986418036);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_2986418035.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym92_2986418035.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym92_2986418035.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym92_2986418035.statsType.time = addInt(ctxHEX60gensym92_2986418035.statsType.time, elapsed_2466250815(timerHEX60gensym92_2986418039));
    }
  };

  return result_2986418038;

}

function formatValue_2986453108(result_2986453110, result_2986453110_Idx, value_2986453111, specifier_2986453112) {
    formatValue_721420459(result_2986453110, result_2986453110_Idx, HEX24_3070230964(value_2986453111), specifier_2986453112);

  
}

function rawGet_2986353626(t_2986353629, key_2986353630, hc_2986353631, hc_2986353631_Idx) {
  var result_2986353632 = 0;

  BeforeRet: {
    hc_2986353631[hc_2986353631_Idx] = hash_2969569587(key_2986353630);
    if ((hc_2986353631[hc_2986353631_Idx] == 0)) {
    hc_2986353631[hc_2986353631_Idx] = 314159265;
    }
    
    if (((t_2986353629.data).length == 0)) {
    result_2986353632 = -1;
    break BeforeRet;
    }
    
    var h_2986353718 = (hc_2986353631[hc_2986353631_Idx] & (t_2986353629.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986353629.data[chckIndx(h_2986353718, 0, (t_2986353629.data).length - 1)].Field0)) break Label2;
          if (((t_2986353629.data[chckIndx(h_2986353718, 0, (t_2986353629.data).length - 1)].Field0 == hc_2986353631[hc_2986353631_Idx]) && (t_2986353629.data[chckIndx(h_2986353718, 0, (t_2986353629.data).length - 1)].Field1 == key_2986353630))) {
          result_2986353632 = h_2986353718;
          break BeforeRet;
          }
          
          h_2986353718 = nextTry_1308622883(h_2986353718, (t_2986353629.data).length - 1);
        }
    };
    result_2986353632 = subInt(-1, h_2986353718);
  };

  return result_2986353632;

}

function hasKey_2986421126(t_2986421129, key_2986421130) {
  var result_2986421131 = false;

    var hc_2986421132 = [0];
    result_2986421131 = (0 <= rawGet_2986353626(t_2986421129, key_2986421130, hc_2986421132, 0));

  return result_2986421131;

}

function contains_2986421120(t_2986421123, key_2986421124) {
  var result_2986421125 = false;

  BeforeRet: {
    result_2986421125 = hasKey_2986421126(t_2986421123, key_2986421124);
    break BeforeRet;
  };

  return result_2986421125;

}

function contains_2986421026(cache_2986421029, key_2986421030) {
  var result_2986421031 = false;

    result_2986421031 = contains_2986421120(cache_2986421029.table, key_2986421030);

  return result_2986421031;

}

function HEX24_3070231271(value_3070231272) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231273 = [];

  BeforeRet: {
    switch (value_3070231272.kind) {
    case 0:
      result_3070231273 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3070231273 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3070231272;
      if (ConstSet63[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3070231272;
      if (ConstSet64[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3070231273 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231272;
      if (ConstSet65[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2969569239(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3070231272;
      if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, HEX24_3070230964(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070231273;

}

function HEX5BHEX5D_2986421305(t_2986421308, key_2986421309) {
  var result_2986421310 = null;
  var result_2986421310_Idx = 0;

    var hcHEX60gensym22_2986421311 = [0];
    var indexHEX60gensym22_2986421318 = rawGet_2986353626(t_2986421308, key_2986421309, hcHEX60gensym22_2986421311, 0);
    if ((0 <= indexHEX60gensym22_2986421318)) {
    result_2986421310 = t_2986421308.data[chckIndx(indexHEX60gensym22_2986421318, 0, (t_2986421308.data).length - 1)]; result_2986421310_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417924(key_2986421309);
    }
    

  return [result_2986421310, result_2986421310_Idx];

}

function remove_2986357082(L_2986357084, n_2986357085) {
    if ((n_2986357085 == L_2986357084.tail)) {
    L_2986357084.tail = n_2986357085.prev;
    }
    
    if ((n_2986357085 == L_2986357084.head)) {
    L_2986357084.head = n_2986357085.next;
    }
    
    if (!((n_2986357085.next == null))) {
    n_2986357085.next.prev = n_2986357085.prev;
    }
    
    if (!((n_2986357085.prev == null))) {
    n_2986357085.prev.next = n_2986357085.next;
    }
    

  
}

function prepend_2986355811(L_2986355813, n_2986355814) {
    n_2986355814.prev = null;
    n_2986355814.next = L_2986355813.head;
    if (!((L_2986355813.head == null))) {
    if (!((L_2986355813.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986355813.head.prev = n_2986355814;
    }
    
    L_2986355813.head = n_2986355814;
    if ((L_2986355813.tail == null)) {
    L_2986355813.tail = n_2986355814;
    }
    

  
}

function HEX5BHEX5D_2986421219(cache_2986421222, key_2986421223) {
    var Temporary1;

  var result_2986421224 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986421411 = (Temporary1 = HEX5BHEX5D_2986421305(cache_2986421222.table, key_2986421223), Temporary1)[0][Temporary1[1]];
    result_2986421224 = nimCopy(result_2986421224, node_2986421411.value.val, NTI3070230535);
    remove_2986357082(cache_2986421222.list, node_2986421411);
    prepend_2986355811(cache_2986421222.list, node_2986421411);

  return result_2986421224;

}

function computeValue_2986421510(ctxHEX60gensym96_2986421511, inputHEX60gensym96_2986421512, recordDependencyHEX60gensym96_2986421513) {
    var Temporary3;
    var Temporary5;

  var result_2986421514 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym96_2986421515 = startTimer_2466250804();
    ctxHEX60gensym96_2986421511.statsValue.totalCalls = addInt(ctxHEX60gensym96_2986421511.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_2986421604 = getItem_2986398737(inputHEX60gensym96_2986421512);
    var keyHEX60gensym96_2986421605 = {Field0: nimCopy(null, itemHEX60gensym96_2986421604, NTI3003121689), Field1: 1};
    if (recordDependencyHEX60gensym96_2986421513) {
    recordDependency_2986398524(ctxHEX60gensym96_2986421511, itemHEX60gensym96_2986421604, 1);
    }
    
    var colorHEX60gensym96_2986421606 = nodeColor_3003124149(ctxHEX60gensym96_2986421511.depGraph, keyHEX60gensym96_2986421605, 0);
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_2986421606, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym96_2986421604));
    }
    
    if ((colorHEX60gensym96_2986421606 == 2)) {
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym96_2986421511, keyHEX60gensym96_2986421605);
    if (false) {
    markRed_3003136501(ctxHEX60gensym96_2986421511.depGraph, keyHEX60gensym96_2986421605, []);
    }
    
    if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
      }
      
    }
    
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986421512) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986421514 = nimCopy(result_2986421514, HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512), NTI3070230535);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_2986421606 == 0)) {
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym96_2986421511, keyHEX60gensym96_2986421605);
    if (false) {
    markRed_3003136501(ctxHEX60gensym96_2986421511.depGraph, keyHEX60gensym96_2986421605, []);
    }
    
    if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
    }
    
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986421512) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986421514 = nimCopy(result_2986421514, HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512), NTI3070230535);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym96_2986421511, keyHEX60gensym96_2986421605, true) == 0)) {
    if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
    }
    
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986421512) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986421514 = nimCopy(result_2986421514, HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512), NTI3070230535);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_2986421511.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym96_2986421511, keyHEX60gensym96_2986421605);
      if (false) {
      markRed_3003136501(ctxHEX60gensym96_2986421511.depGraph, keyHEX60gensym96_2986421605, []);
      }
      
      if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
      }
      
      if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986421512) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986421514 = nimCopy(result_2986421514, HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512), NTI3070230535);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_2986421606 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_2986421511.enableLogging && contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512)));
    }
    
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    force_2986414895(ctxHEX60gensym96_2986421511, keyHEX60gensym96_2986421605);
    }
    
    if (!(contains_2986421026(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986421512) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986421514 = nimCopy(result_2986421514, HEX5BHEX5D_2986421219(ctxHEX60gensym96_2986421511.queryCacheValue, inputHEX60gensym96_2986421512), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_2986421511.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym96_2986421511.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym96_2986421511.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym96_2986421511.statsValue.time = addInt(ctxHEX60gensym96_2986421511.statsValue.time, elapsed_2466250815(timerHEX60gensym96_2986421515));
    }
  };

  return result_2986421514;

}

function formatValue_3120563615(result_3120563617, result_3120563617_Idx, value_3120563618, specifier_3120563619) {
    formatValue_721420459(result_3120563617, result_3120563617_Idx, HEX24_3070231271(value_3120563618), specifier_3120563619);

  
}

function newFunctionType_3070230946(paramTypes_3070230947, returnType_3070230948) {
  var result_3070230949 = null;

    result_3070230949 = {kind: 4, returnType: returnType_3070230948, paramTypes: nimCopy(null, paramTypes_3070230947, NTI3070230838), open: false};

  return result_3070230949;

}

function HEX3DHEX3D_3070231104(x_3070231106, y_3070231107) {
  var result_3070231108 = false;

  BeforeRet: {
    var sameObject_3070231115 = false;
    sameObject_3070231115 = x_3070231106 === y_3070231107
    if (sameObject_3070231115) {
    result_3070231108 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070231106).length == (y_3070231107).length))) {
    result_3070231108 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070231129 = 0;
      var colontmp__2936013022 = 0;
      colontmp__2936013022 = subInt((x_3070231106).length, 1);
      var res_2936013023 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013023 <= colontmp__2936013022)) break Label3;
            i_3070231129 = res_2936013023;
            if (!(HEX3DHEX3D_3070231086(x_3070231106[chckIndx(i_3070231129, 0, (x_3070231106).length - 1)], y_3070231107[chckIndx(i_3070231129, 0, (y_3070231107).length - 1)]))) {
            result_3070231108 = false;
            break BeforeRet;
            }
            
            res_2936013023 = addInt(res_2936013023, 1);
          }
      };
    };
    result_3070231108 = true;
    break BeforeRet;
  };

  return result_3070231108;

}

function HEX3DHEX3D_3070231086(a_3070231087, b_3070231088) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3070231089 = false;

  BeforeRet: {
    if ((a_3070231087 == null)) {
    result_3070231089 = (b_3070231088 == null);
    break BeforeRet;
    }
    
    if ((b_3070231088 == null)) {
    result_3070231089 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231087.kind == b_3070231088.kind))) {
    result_3070231089 = false;
    break BeforeRet;
    }
    
    switch (a_3070231087.kind) {
    case 4:
      var Temporary2 = a_3070231087;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      var Temporary3 = b_3070231088;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      if (!HEX3DHEX3D_3070231086(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3070231087;
        if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
        var Temporary5 = b_3070231088;
        if (ConstSet72[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
        Temporary1 = HEX3DHEX3D_3070231104(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3070231089 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3070231087;
      if (ConstSet73[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
      var Temporary7 = b_3070231088;
      if (ConstSet74[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230531)); }
      result_3070231089 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3070231089 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3070231089;

}

function anyType_3070230961(open_3070230962) {
  var result_3070230963 = null;

    result_3070230963 = {kind: 5, open: open_3070230962, returnType: null, paramTypes: []};

  return result_3070230963;

}

function rawGet_2986362242(t_2986362245, key_2986362246, hc_2986362247, hc_2986362247_Idx) {
  var result_2986362248 = 0;

  BeforeRet: {
    hc_2986362247[hc_2986362247_Idx] = hash_2969569587(key_2986362246);
    if ((hc_2986362247[hc_2986362247_Idx] == 0)) {
    hc_2986362247[hc_2986362247_Idx] = 314159265;
    }
    
    if (((t_2986362245.data).length == 0)) {
    result_2986362248 = -1;
    break BeforeRet;
    }
    
    var h_2986362334 = (hc_2986362247[hc_2986362247_Idx] & (t_2986362245.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986362245.data[chckIndx(h_2986362334, 0, (t_2986362245.data).length - 1)].Field0)) break Label2;
          if (((t_2986362245.data[chckIndx(h_2986362334, 0, (t_2986362245.data).length - 1)].Field0 == hc_2986362247[hc_2986362247_Idx]) && (t_2986362245.data[chckIndx(h_2986362334, 0, (t_2986362245.data).length - 1)].Field1 == key_2986362246))) {
          result_2986362248 = h_2986362334;
          break BeforeRet;
          }
          
          h_2986362334 = nextTry_1308622883(h_2986362334, (t_2986362245.data).length - 1);
        }
    };
    result_2986362248 = subInt(-1, h_2986362334);
  };

  return result_2986362248;

}

function hasKey_2986427754(t_2986427757, key_2986427758) {
  var result_2986427759 = false;

    var hc_2986427760 = [0];
    result_2986427759 = (0 <= rawGet_2986362242(t_2986427757, key_2986427758, hc_2986427760, 0));

  return result_2986427759;

}

function contains_2986427748(t_2986427751, key_2986427752) {
  var result_2986427753 = false;

  BeforeRet: {
    result_2986427753 = hasKey_2986427754(t_2986427751, key_2986427752);
    break BeforeRet;
  };

  return result_2986427753;

}

function contains_2986427654(cache_2986427657, key_2986427658) {
  var result_2986427659 = false;

    result_2986427659 = contains_2986427748(cache_2986427657.table, key_2986427658);

  return result_2986427659;

}

function len_3070231838(t_3070231841) {
  var result_3070231842 = 0;

    result_3070231842 = t_3070231841.counter;

  return result_3070231842;

}

function addQuoted_2986398143(s_2986398145, s_2986398145_Idx, x_2986398146) {
    s_2986398145[s_2986398145_Idx].push.apply(s_2986398145[s_2986398145_Idx], HEX24_2046820589(x_2986398146));;

  
}

function HEX24_3070231688(symbol_3070231689) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3070231690 = [];

  BeforeRet: {
    switch (symbol_3070231689.kind) {
    case 0:
      var Temporary1 = symbol_3070231689;
      if (ConstSet86[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      result_3070231690 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2046820589(symbol_3070231689.id) || [],[44,32] || [],HEX24_2969569239(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3070231689;
      if (ConstSet87[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      var Temporary3 = symbol_3070231689;
      if (ConstSet88[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_3070231690 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2046820589(symbol_3070231689.id) || [],[44,32] || [],HEX24_3070230964(Temporary2.typ) || [],[44,32] || [],HEX24_3070231271(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070231690;

}

function addQuoted_2986397895(s_2986397897, s_2986397897_Idx, x_2986397898) {
    s_2986397897[s_2986397897_Idx].push.apply(s_2986397897[s_2986397897_Idx], HEX24_3070231688(x_2986397898));;

  
}

function HEX24_2986398050(t_2986398053) {
  var result_2986398054 = [[]];

    if ((len_3070231838(t_2986398053) == 0)) {
    result_2986398054[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_2986398054[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_2986398141 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_2986398142 = null;
        var L_2936013031 = len_3070231838(t_2986398053);
        Label2: {
          var h_2936013033 = 0;
          var colontmp__2936013034 = 0;
          colontmp__2936013034 = (t_2986398053.data).length - 1;
          var res_2936013035 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2936013035 <= colontmp__2936013034)) break Label4;
                h_2936013033 = res_2936013035;
                if (isFilled_1308622880(t_2986398053.data[chckIndx(h_2936013033, 0, (t_2986398053.data).length - 1)].Field0)) {
                key_2986398141 = nimCopy(key_2986398141, t_2986398053.data[chckIndx(h_2936013033, 0, (t_2986398053.data).length - 1)].Field1, NTI2046820355);
                val_2986398142 = t_2986398053.data[chckIndx(h_2936013033, 0, (t_2986398053.data).length - 1)].Field2;
                if ((1 < (result_2986398054[0]).length)) {
                result_2986398054[0].push.apply(result_2986398054[0], [44,32]);;
                }
                
                addQuoted_2986398143(result_2986398054, 0, key_2986398141);
                result_2986398054[0].push.apply(result_2986398054[0], [58,32]);;
                addQuoted_2986397895(result_2986398054, 0, val_2986398142);
                if (!((len_3070231838(t_2986398053) == L_2936013031))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2936013035 = addInt(res_2936013035, 1);
              }
          };
        };
      };
      result_2986398054[0].push.apply(result_2986398054[0], [125]);;
    }
    

  return result_2986398054[0];

}

function HEX5BHEX5D_2986427933(t_2986427936, key_2986427937) {
  var result_2986427938 = null;
  var result_2986427938_Idx = 0;

    var hcHEX60gensym22_2986427939 = [0];
    var indexHEX60gensym22_2986427946 = rawGet_2986362242(t_2986427936, key_2986427937, hcHEX60gensym22_2986427939, 0);
    if ((0 <= indexHEX60gensym22_2986427946)) {
    result_2986427938 = t_2986427936.data[chckIndx(indexHEX60gensym22_2986427946, 0, (t_2986427936.data).length - 1)]; result_2986427938_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417924(key_2986427937);
    }
    

  return [result_2986427938, result_2986427938_Idx];

}

function remove_2986365689(L_2986365691, n_2986365692) {
    if ((n_2986365692 == L_2986365691.tail)) {
    L_2986365691.tail = n_2986365692.prev;
    }
    
    if ((n_2986365692 == L_2986365691.head)) {
    L_2986365691.head = n_2986365692.next;
    }
    
    if (!((n_2986365692.next == null))) {
    n_2986365692.next.prev = n_2986365692.prev;
    }
    
    if (!((n_2986365692.prev == null))) {
    n_2986365692.prev.next = n_2986365692.next;
    }
    

  
}

function prepend_2986364418(L_2986364420, n_2986364421) {
    n_2986364421.prev = null;
    n_2986364421.next = L_2986364420.head;
    if (!((L_2986364420.head == null))) {
    if (!((L_2986364420.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986364420.head.prev = n_2986364421;
    }
    
    L_2986364420.head = n_2986364421;
    if ((L_2986364420.tail == null)) {
    L_2986364420.tail = n_2986364421;
    }
    

  
}

function HEX5BHEX5D_2986427847(cache_2986427850, key_2986427851) {
    var Temporary1;

  var result_2986427852 = null;

    var node_2986428039 = (Temporary1 = HEX5BHEX5D_2986427933(cache_2986427850.table, key_2986427851), Temporary1)[0][Temporary1[1]];
    result_2986427852 = node_2986428039.value.val;
    remove_2986365689(cache_2986427850.list, node_2986428039);
    prepend_2986364418(cache_2986427850.list, node_2986428039);

  return result_2986427852;

}

function computeSymbols_2986428140(ctxHEX60gensym104_2986428141, inputHEX60gensym104_2986428142, recordDependencyHEX60gensym104_2986428143) {
    var Temporary3;
    var Temporary5;

  var result_2986428146 = null;

  BeforeRet: {
    var timerHEX60gensym104_2986428147 = startTimer_2466250804();
    ctxHEX60gensym104_2986428141.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_2986428141.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_2986428236 = getItem_2986398737(inputHEX60gensym104_2986428142);
    var keyHEX60gensym104_2986428237 = {Field0: nimCopy(null, itemHEX60gensym104_2986428236, NTI3003121689), Field1: 3};
    if (recordDependencyHEX60gensym104_2986428143) {
    recordDependency_2986398524(ctxHEX60gensym104_2986428141, itemHEX60gensym104_2986428236, 3);
    }
    
    var colorHEX60gensym104_2986428238 = nodeColor_3003124149(ctxHEX60gensym104_2986428141.depGraph, keyHEX60gensym104_2986428237, 0);
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_2986428238, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym104_2986428236));
    }
    
    if ((colorHEX60gensym104_2986428238 == 2)) {
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym104_2986428141, keyHEX60gensym104_2986428237);
    if (false) {
    markRed_3003136501(ctxHEX60gensym104_2986428141.depGraph, keyHEX60gensym104_2986428237, []);
    }
    
    if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
      }
      
    }
    
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986428142) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986428146 = HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_2986428238 == 0)) {
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym104_2986428141, keyHEX60gensym104_2986428237);
    if (false) {
    markRed_3003136501(ctxHEX60gensym104_2986428141.depGraph, keyHEX60gensym104_2986428237, []);
    }
    
    if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
    }
    
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986428142) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986428146 = HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym104_2986428141, keyHEX60gensym104_2986428237, true) == 0)) {
    if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
    }
    
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986428142) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986428146 = HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_2986428141.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym104_2986428141, keyHEX60gensym104_2986428237);
      if (false) {
      markRed_3003136501(ctxHEX60gensym104_2986428141.depGraph, keyHEX60gensym104_2986428237, []);
      }
      
      if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
      }
      
      if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986428142) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986428146 = HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_2986428238 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_2986428141.enableLogging && contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986398050(HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142)));
    }
    
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    force_2986414895(ctxHEX60gensym104_2986428141, keyHEX60gensym104_2986428237);
    }
    
    if (!(contains_2986427654(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986428142) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986428146 = HEX5BHEX5D_2986427847(ctxHEX60gensym104_2986428141.queryCacheSymbols, inputHEX60gensym104_2986428142);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_2986428141.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym104_2986428141.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym104_2986428141.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym104_2986428141.statsSymbols.time = addInt(ctxHEX60gensym104_2986428141.statsSymbols.time, elapsed_2466250815(timerHEX60gensym104_2986428147));
    }
  };

  return result_2986428146;

}

function rawGet_2986442406(t_2986442409, key_2986442410, hc_2986442411, hc_2986442411_Idx) {
  var result_2986442412 = 0;

  BeforeRet: {
    hc_2986442411[hc_2986442411_Idx] = hash_2046820596(key_2986442410);
    if ((hc_2986442411[hc_2986442411_Idx] == 0)) {
    hc_2986442411[hc_2986442411_Idx] = 314159265;
    }
    
    if (((t_2986442409.data).length == 0)) {
    result_2986442412 = -1;
    break BeforeRet;
    }
    
    var h_2986442497 = (hc_2986442411[hc_2986442411_Idx] & (t_2986442409.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986442409.data[chckIndx(h_2986442497, 0, (t_2986442409.data).length - 1)].Field0)) break Label2;
          if (((t_2986442409.data[chckIndx(h_2986442497, 0, (t_2986442409.data).length - 1)].Field0 == hc_2986442411[hc_2986442411_Idx]) && HEX3DHEX3D_2046820592(t_2986442409.data[chckIndx(h_2986442497, 0, (t_2986442409.data).length - 1)].Field1, key_2986442410))) {
          result_2986442412 = h_2986442497;
          break BeforeRet;
          }
          
          h_2986442497 = nextTry_1308622883(h_2986442497, (t_2986442409.data).length - 1);
        }
    };
    result_2986442412 = subInt(-1, h_2986442497);
  };

  return result_2986442412;

}

function hasKey_2986453722(t_2986453725, key_2986453726) {
  var result_2986453727 = false;

    var hc_2986453728 = [0];
    result_2986453727 = (0 <= rawGet_2986442406(t_2986453725, key_2986453726, hc_2986453728, 0));

  return result_2986453727;

}

function hasKey_2986453596(t_2986453599, key_2986453600) {
  var result_2986453601 = false;

    result_2986453601 = hasKey_2986453722(t_2986453599, key_2986453600);

  return result_2986453601;

}

function contains_2986453560(t_2986453563, key_2986453564) {
  var result_2986453565 = false;

  BeforeRet: {
    result_2986453565 = hasKey_2986453596(t_2986453563, key_2986453564);
    break BeforeRet;
  };

  return result_2986453565;

}

function HEX5BHEX5D_2986453981(t_2986453984, key_2986453985) {
  var result_2986453986 = null;
  var result_2986453986_Idx = 0;

    var hcHEX60gensym22_2986453987 = [0];
    var indexHEX60gensym22_2986453994 = rawGet_2986442406(t_2986453984, key_2986453985, hcHEX60gensym22_2986453987, 0);
    if ((0 <= indexHEX60gensym22_2986453994)) {
    result_2986453986 = t_2986453984.data[chckIndx(indexHEX60gensym22_2986453994, 0, (t_2986453984.data).length - 1)]; result_2986453986_Idx = "Field2";
    }
    else {
    raiseKeyError_2969569048(key_2986453985);
    }
    

  return [result_2986453986, result_2986453986_Idx];

}

function HEX5BHEX5D_2986453815(t_2986453818, key_2986453819) {
    var Temporary1;

  var result_2986453820 = null;
  var result_2986453820_Idx = 0;

    result_2986453820 = (Temporary1 = HEX5BHEX5D_2986453981(t_2986453818, key_2986453819), Temporary1)[0]; result_2986453820_Idx = Temporary1[1];

  return [result_2986453820, result_2986453820_Idx];

}

function getItem_2986408006(selfHEX60gensym81_2986408007) {
  var result_2986408008 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym81_2986408007.id, null_2046820612)) {
    selfHEX60gensym81_2986408007.id = nimCopy(selfHEX60gensym81_2986408007.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym81_2986408007.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936013038 = nimCopy(null, selfHEX60gensym81_2986408007.id, NTI2046820355);
    var colontmp__2936013039 = 2;
    result_2986408008 = nimCopy(result_2986408008, {Field0: nimCopy(null, colontmp__2936013038, NTI2046820355), Field1: colontmp__2936013039}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986408008;

}

function hash_3070231691(symbol_3070231692) {
  var result_3070231693 = 0;

  BeforeRet: {
    result_3070231693 = hash_2046820596(symbol_3070231692.id);
    break BeforeRet;
  };

  return result_3070231693;

}

function HEX3DHEX3D_3070231294(a_3070231295, b_3070231296) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3070231297 = false;

  BeforeRet: {
    if (!((a_3070231295.kind == b_3070231296.kind))) {
    result_3070231297 = false;
    break BeforeRet;
    }
    
    switch (a_3070231295.kind) {
    case 0:
      result_3070231297 = true;
      break BeforeRet;
      break;
    case 1:
      result_3070231297 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3070231295;
      if (ConstSet91[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      var Temporary2 = b_3070231296;
      if (ConstSet92[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231297 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3070231295;
      if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      var Temporary4 = b_3070231296;
      if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231297 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3070231295;
      if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230534)); }
      var Temporary6 = b_3070231296;
      if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230534)); }
      result_3070231297 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3070231295;
      if (ConstSet97[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230534)); }
      var Temporary8 = b_3070231296;
      if (ConstSet98[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230534)); }
      result_3070231297 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3070231295;
      if (ConstSet99[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3070230534)); }
      var Temporary10 = b_3070231296;
      if (ConstSet100[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230534)); }
      result_3070231297 = HEX3DHEX3D_3070231086(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3070231297;

}

function HEX3DHEX3D_3070231694(a_3070231695, b_3070231696) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_3070231697 = false;

  BeforeRet: {
    if ((a_3070231695 == null)) {
    result_3070231697 = (b_3070231696 == null);
    break BeforeRet;
    }
    
    if ((b_3070231696 == null)) {
    result_3070231697 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820592(a_3070231695.id, b_3070231696.id))) {
    result_3070231697 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231695.kind == b_3070231696.kind))) {
    result_3070231697 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3070231695.name, b_3070231696.name))) {
    result_3070231697 = false;
    break BeforeRet;
    }
    
    switch (a_3070231695.kind) {
    case 1:
      var Temporary4 = a_3070231695;
      if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      var Temporary5 = b_3070231696;
      if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
      if (!HEX3DHEX3D_3070231086(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_3070231695;
        if (ConstSet101[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230537)); }
        var Temporary7 = b_3070231696;
        if (ConstSet102[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230537)); }
        Temporary3 = HEX3DHEX3D_3070231294(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_3070231695;
        if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230537)); }
        var Temporary9 = b_3070231696;
        if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3070230537)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_3070231695;
        if (ConstSet105[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230537)); }
        var Temporary11 = b_3070231696;
        if (ConstSet106[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3070230537)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_3070231697 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_3070231695;
      if (ConstSet107[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230537)); }
      var Temporary13 = b_3070231696;
      if (ConstSet108[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI3070230537)); }
      result_3070231697 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_3070231697;

}

function rawGet_2986367749(t_2986367752, key_2986367753, hc_2986367754, hc_2986367754_Idx) {
  var result_2986367755 = 0;

  BeforeRet: {
    hc_2986367754[hc_2986367754_Idx] = hash_3070231691(key_2986367753);
    if ((hc_2986367754[hc_2986367754_Idx] == 0)) {
    hc_2986367754[hc_2986367754_Idx] = 314159265;
    }
    
    if (((t_2986367752.data).length == 0)) {
    result_2986367755 = -1;
    break BeforeRet;
    }
    
    var h_2986367841 = (hc_2986367754[hc_2986367754_Idx] & (t_2986367752.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986367752.data[chckIndx(h_2986367841, 0, (t_2986367752.data).length - 1)].Field0)) break Label2;
          if (((t_2986367752.data[chckIndx(h_2986367841, 0, (t_2986367752.data).length - 1)].Field0 == hc_2986367754[hc_2986367754_Idx]) && HEX3DHEX3D_3070231694(t_2986367752.data[chckIndx(h_2986367841, 0, (t_2986367752.data).length - 1)].Field1, key_2986367753))) {
          result_2986367755 = h_2986367841;
          break BeforeRet;
          }
          
          h_2986367841 = nextTry_1308622883(h_2986367841, (t_2986367752.data).length - 1);
        }
    };
    result_2986367755 = subInt(-1, h_2986367841);
  };

  return result_2986367755;

}

function hasKey_2986431256(t_2986431259, key_2986431260) {
  var result_2986431261 = false;

    var hc_2986431262 = [0];
    result_2986431261 = (0 <= rawGet_2986367749(t_2986431259, key_2986431260, hc_2986431262, 0));

  return result_2986431261;

}

function contains_2986431250(t_2986431253, key_2986431254) {
  var result_2986431255 = false;

  BeforeRet: {
    result_2986431255 = hasKey_2986431256(t_2986431253, key_2986431254);
    break BeforeRet;
  };

  return result_2986431255;

}

function contains_2986431156(cache_2986431159, key_2986431160) {
  var result_2986431161 = false;

    result_2986431161 = contains_2986431250(cache_2986431159.table, key_2986431160);

  return result_2986431161;

}

function raiseKeyError_2986431529(key_2986431531) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070231688(key_2986431531) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986431435(t_2986431438, key_2986431439) {
  var result_2986431440 = null;
  var result_2986431440_Idx = 0;

    var hcHEX60gensym22_2986431441 = [0];
    var indexHEX60gensym22_2986431448 = rawGet_2986367749(t_2986431438, key_2986431439, hcHEX60gensym22_2986431441, 0);
    if ((0 <= indexHEX60gensym22_2986431448)) {
    result_2986431440 = t_2986431438.data[chckIndx(indexHEX60gensym22_2986431448, 0, (t_2986431438.data).length - 1)]; result_2986431440_Idx = "Field2";
    }
    else {
    raiseKeyError_2986431529(key_2986431439);
    }
    

  return [result_2986431440, result_2986431440_Idx];

}

function remove_2986373646(L_2986373648, n_2986373649) {
    if ((n_2986373649 == L_2986373648.tail)) {
    L_2986373648.tail = n_2986373649.prev;
    }
    
    if ((n_2986373649 == L_2986373648.head)) {
    L_2986373648.head = n_2986373649.next;
    }
    
    if (!((n_2986373649.next == null))) {
    n_2986373649.next.prev = n_2986373649.prev;
    }
    
    if (!((n_2986373649.prev == null))) {
    n_2986373649.prev.next = n_2986373649.next;
    }
    

  
}

function prepend_2986369917(L_2986369919, n_2986369920) {
    n_2986369920.prev = null;
    n_2986369920.next = L_2986369919.head;
    if (!((L_2986369919.head == null))) {
    if (!((L_2986369919.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986369919.head.prev = n_2986369920;
    }
    
    L_2986369919.head = n_2986369920;
    if ((L_2986369919.tail == null)) {
    L_2986369919.tail = n_2986369920;
    }
    

  
}

function HEX5BHEX5D_2986431349(cache_2986431352, key_2986431353) {
    var Temporary1;

  var result_2986431354 = null;

    var node_2986431542 = (Temporary1 = HEX5BHEX5D_2986431435(cache_2986431352.table, key_2986431353), Temporary1)[0][Temporary1[1]];
    result_2986431354 = node_2986431542.value.val;
    remove_2986373646(cache_2986431352.list, node_2986431542);
    prepend_2986369917(cache_2986431352.list, node_2986431542);

  return result_2986431354;

}

function computeSymbolType_2986431612(ctxHEX60gensym108_2986431613, inputHEX60gensym108_2986431614, recordDependencyHEX60gensym108_2986431615) {
    var Temporary3;
    var Temporary5;

  var result_2986431616 = null;

  BeforeRet: {
    var timerHEX60gensym108_2986431617 = startTimer_2466250804();
    ctxHEX60gensym108_2986431613.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_2986431613.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_2986431706 = getItem_2986408006(inputHEX60gensym108_2986431614);
    var keyHEX60gensym108_2986431707 = {Field0: nimCopy(null, itemHEX60gensym108_2986431706, NTI3003121689), Field1: 4};
    if (recordDependencyHEX60gensym108_2986431615) {
    recordDependency_2986398524(ctxHEX60gensym108_2986431613, itemHEX60gensym108_2986431706, 4);
    }
    
    var colorHEX60gensym108_2986431708 = nodeColor_3003124149(ctxHEX60gensym108_2986431613.depGraph, keyHEX60gensym108_2986431707, 0);
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_2986431708, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym108_2986431706));
    }
    
    if ((colorHEX60gensym108_2986431708 == 2)) {
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym108_2986431613, keyHEX60gensym108_2986431707);
    if (false) {
    markRed_3003136501(ctxHEX60gensym108_2986431613.depGraph, keyHEX60gensym108_2986431707, []);
    }
    
    if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
      }
      
    }
    
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym108_2986431614) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431616 = HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_2986431708 == 0)) {
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym108_2986431613, keyHEX60gensym108_2986431707);
    if (false) {
    markRed_3003136501(ctxHEX60gensym108_2986431613.depGraph, keyHEX60gensym108_2986431707, []);
    }
    
    if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
    }
    
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym108_2986431614) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431616 = HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym108_2986431613, keyHEX60gensym108_2986431707, true) == 0)) {
    if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
    }
    
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym108_2986431614) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431616 = HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_2986431613.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym108_2986431613, keyHEX60gensym108_2986431707);
      if (false) {
      markRed_3003136501(ctxHEX60gensym108_2986431613.depGraph, keyHEX60gensym108_2986431707, []);
      }
      
      if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
      }
      
      if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym108_2986431614) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986431616 = HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_2986431708 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_2986431613.enableLogging && contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614)));
    }
    
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    force_2986414895(ctxHEX60gensym108_2986431613, keyHEX60gensym108_2986431707);
    }
    
    if (!(contains_2986431156(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym108_2986431614) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431616 = HEX5BHEX5D_2986431349(ctxHEX60gensym108_2986431613.queryCacheSymbolType, inputHEX60gensym108_2986431614);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_2986431613.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym108_2986431613.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym108_2986431613.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym108_2986431613.statsSymbolType.time = addInt(ctxHEX60gensym108_2986431613.statsSymbolType.time, elapsed_2466250815(timerHEX60gensym108_2986431617));
    }
  };

  return result_2986431616;

}

function none_2986418018() {
  var result_2986418024 = ({val: null});

  return result_2986418024;

}

function none_2986418015() {
  var result_2986418017 = ({val: null});

    result_2986418017 = nimCopy(result_2986418017, none_2986418018(), NTI2986387392);

  return result_2986418017;

}

function isNone_2986454170(self_2986454172) {
  var result_2986454173 = false;

    result_2986454173 = (self_2986454172.val == null);

  return result_2986454173;

}

function get_2986454213(self_2986454215) {
  var result_2986454216 = null;
  var result_2986454216_Idx = 0;

  BeforeRet: {
    if (isNone_2986454170(self_2986454215)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2986454216 = self_2986454215; result_2986454216_Idx = "val";
    break BeforeRet;
  };

  return [result_2986454216, result_2986454216_Idx];

}

function some_2986418002(val_2986418004) {
  var result_2986418005 = ({val: null});

    if (!(!((val_2986418004 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986418005.val = val_2986418004;

  return result_2986418005;

}

function last_2969567490(node_2969567491) {
  var result_2969567492 = null;

  BeforeRet: {
    if ((0 < len_2969567320(node_2969567491))) {
    result_2969567492 = HEX5BHEX5D_2969567316(node_2969567491, subInt(len_2969567320(node_2969567491), 1));
    break BeforeRet;
    }
    
    result_2969567492 = null;
    break BeforeRet;
  };

  return result_2969567492;

}

function isSome_2986454340(self_2986454342) {
  var result_2986454343 = false;

    result_2986454343 = !((self_2986454342.val == null));

  return result_2986454343;

}

function get_2986454331(self_2986454333, otherwise_2986454334) {
    var Temporary1;

  var result_2986454335 = null;

    if (isSome_2986454340(self_2986454333)) {
    Temporary1 = self_2986454333.val;
    }
    else {
    Temporary1 = otherwise_2986454334;
    }
    
    result_2986454335 = Temporary1;

  return result_2986454335;

}

function rawGet_2986357938(t_2986357941, key_2986357942, hc_2986357943, hc_2986357943_Idx) {
  var result_2986357944 = 0;

  BeforeRet: {
    hc_2986357943[hc_2986357943_Idx] = hash_2969569587(key_2986357942);
    if ((hc_2986357943[hc_2986357943_Idx] == 0)) {
    hc_2986357943[hc_2986357943_Idx] = 314159265;
    }
    
    if (((t_2986357941.data).length == 0)) {
    result_2986357944 = -1;
    break BeforeRet;
    }
    
    var h_2986358030 = (hc_2986357943[hc_2986357943_Idx] & (t_2986357941.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986357941.data[chckIndx(h_2986358030, 0, (t_2986357941.data).length - 1)].Field0)) break Label2;
          if (((t_2986357941.data[chckIndx(h_2986358030, 0, (t_2986357941.data).length - 1)].Field0 == hc_2986357943[hc_2986357943_Idx]) && (t_2986357941.data[chckIndx(h_2986358030, 0, (t_2986357941.data).length - 1)].Field1 == key_2986357942))) {
          result_2986357944 = h_2986358030;
          break BeforeRet;
          }
          
          h_2986358030 = nextTry_1308622883(h_2986358030, (t_2986357941.data).length - 1);
        }
    };
    result_2986357944 = subInt(-1, h_2986358030);
  };

  return result_2986357944;

}

function hasKey_2986424263(t_2986424266, key_2986424267) {
  var result_2986424268 = false;

    var hc_2986424269 = [0];
    result_2986424268 = (0 <= rawGet_2986357938(t_2986424266, key_2986424267, hc_2986424269, 0));

  return result_2986424268;

}

function contains_2986424257(t_2986424260, key_2986424261) {
  var result_2986424262 = false;

  BeforeRet: {
    result_2986424262 = hasKey_2986424263(t_2986424260, key_2986424261);
    break BeforeRet;
  };

  return result_2986424262;

}

function contains_2986424163(cache_2986424166, key_2986424167) {
  var result_2986424168 = false;

    result_2986424168 = contains_2986424257(cache_2986424166.table, key_2986424167);

  return result_2986424168;

}

function isSome_3070232129(self_3070232131) {
  var result_3070232132 = false;

    result_3070232132 = !((self_3070232131.val == null));

  return result_3070232132;

}

function HEX24_2986397884(self_2986397886) {
  var result_2986397887 = [[]];

    if (isSome_3070232129(self_2986397886)) {
    result_2986397887[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2986397895(result_2986397887, 0, self_2986397886.val);
    result_2986397887[0].push.apply(result_2986397887[0], [41]);;
    }
    else {
      result_2986397887[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_2986397887[0];

}

function HEX5BHEX5D_2986424442(t_2986424445, key_2986424446) {
  var result_2986424447 = null;
  var result_2986424447_Idx = 0;

    var hcHEX60gensym22_2986424448 = [0];
    var indexHEX60gensym22_2986424455 = rawGet_2986357938(t_2986424445, key_2986424446, hcHEX60gensym22_2986424448, 0);
    if ((0 <= indexHEX60gensym22_2986424455)) {
    result_2986424447 = t_2986424445.data[chckIndx(indexHEX60gensym22_2986424455, 0, (t_2986424445.data).length - 1)]; result_2986424447_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417924(key_2986424446);
    }
    

  return [result_2986424447, result_2986424447_Idx];

}

function remove_2986361385(L_2986361387, n_2986361388) {
    if ((n_2986361388 == L_2986361387.tail)) {
    L_2986361387.tail = n_2986361388.prev;
    }
    
    if ((n_2986361388 == L_2986361387.head)) {
    L_2986361387.head = n_2986361388.next;
    }
    
    if (!((n_2986361388.next == null))) {
    n_2986361388.next.prev = n_2986361388.prev;
    }
    
    if (!((n_2986361388.prev == null))) {
    n_2986361388.prev.next = n_2986361388.next;
    }
    

  
}

function prepend_2986360114(L_2986360116, n_2986360117) {
    n_2986360117.prev = null;
    n_2986360117.next = L_2986360116.head;
    if (!((L_2986360116.head == null))) {
    if (!((L_2986360116.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986360116.head.prev = n_2986360117;
    }
    
    L_2986360116.head = n_2986360117;
    if ((L_2986360116.tail == null)) {
    L_2986360116.tail = n_2986360117;
    }
    

  
}

function HEX5BHEX5D_2986424356(cache_2986424359, key_2986424360) {
    var Temporary1;

  var result_2986424361 = ({val: null});

    var node_2986424548 = (Temporary1 = HEX5BHEX5D_2986424442(cache_2986424359.table, key_2986424360), Temporary1)[0][Temporary1[1]];
    result_2986424361 = nimCopy(result_2986424361, node_2986424548.value.val, NTI3070231688);
    remove_2986361385(cache_2986424359.list, node_2986424548);
    prepend_2986360114(cache_2986424359.list, node_2986424548);

  return result_2986424361;

}

function computeSymbol_2986424640(ctxHEX60gensym100_2986424641, inputHEX60gensym100_2986424642, recordDependencyHEX60gensym100_2986424643) {
    var Temporary3;
    var Temporary5;

  var result_2986424645 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym100_2986424646 = startTimer_2466250804();
    ctxHEX60gensym100_2986424641.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_2986424641.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_2986424735 = getItem_2986398737(inputHEX60gensym100_2986424642);
    var keyHEX60gensym100_2986424736 = {Field0: nimCopy(null, itemHEX60gensym100_2986424735, NTI3003121689), Field1: 2};
    if (recordDependencyHEX60gensym100_2986424643) {
    recordDependency_2986398524(ctxHEX60gensym100_2986424641, itemHEX60gensym100_2986424735, 2);
    }
    
    var colorHEX60gensym100_2986424737 = nodeColor_3003124149(ctxHEX60gensym100_2986424641.depGraph, keyHEX60gensym100_2986424736, 0);
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_2986424737, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym100_2986424735));
    }
    
    if ((colorHEX60gensym100_2986424737 == 2)) {
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym100_2986424641, keyHEX60gensym100_2986424736);
    if (false) {
    markRed_3003136501(ctxHEX60gensym100_2986424641.depGraph, keyHEX60gensym100_2986424736, []);
    }
    
    if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
      }
      
    }
    
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424642) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424645 = nimCopy(result_2986424645, HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642), NTI3070231688);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_2986424737 == 0)) {
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym100_2986424641, keyHEX60gensym100_2986424736);
    if (false) {
    markRed_3003136501(ctxHEX60gensym100_2986424641.depGraph, keyHEX60gensym100_2986424736, []);
    }
    
    if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
    }
    
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424642) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424645 = nimCopy(result_2986424645, HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642), NTI3070231688);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym100_2986424641, keyHEX60gensym100_2986424736, true) == 0)) {
    if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
    }
    
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424642) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424645 = nimCopy(result_2986424645, HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642), NTI3070231688);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_2986424641.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym100_2986424641, keyHEX60gensym100_2986424736);
      if (false) {
      markRed_3003136501(ctxHEX60gensym100_2986424641.depGraph, keyHEX60gensym100_2986424736, []);
      }
      
      if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
      }
      
      if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424642) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986424645 = nimCopy(result_2986424645, HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642), NTI3070231688);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_2986424737 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_2986424641.enableLogging && contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397884(HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642)));
    }
    
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    force_2986414895(ctxHEX60gensym100_2986424641, keyHEX60gensym100_2986424736);
    }
    
    if (!(contains_2986424163(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424642) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424645 = nimCopy(result_2986424645, HEX5BHEX5D_2986424356(ctxHEX60gensym100_2986424641.queryCacheSymbol, inputHEX60gensym100_2986424642), NTI3070231688);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_2986424641.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym100_2986424641.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym100_2986424641.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym100_2986424641.statsSymbol.time = addInt(ctxHEX60gensym100_2986424641.statsSymbol.time, elapsed_2466250815(timerHEX60gensym100_2986424646));
    }
  };

  return result_2986424645;

}

function isNone_3070232157(self_3070232159) {
  var result_3070232160 = false;

    result_3070232160 = (self_3070232159.val == null);

  return result_3070232160;

}

function get_3070232149(self_3070232151) {
  var result_3070232152 = null;

    if (isNone_3070232157(self_3070232151)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3070232152 = self_3070232151["val"];

  return result_3070232152;

}

function formatValue_2986454486(result_2986454488, result_2986454488_Idx, value_2986454489, specifier_2986454490) {
    formatValue_721420459(result_2986454488, result_2986454488_Idx, HEX24_3070231688(value_2986454489), specifier_2986454490);

  
}

function mustRehash_2986447008(t_2986447010) {
  var result_2986447011 = false;

    if (!((t_2986447010.counter < (t_2986447010.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986447011 = ((mulInt((t_2986447010.data).length, 2) < mulInt(t_2986447010.counter, 3)) || (subInt((t_2986447010.data).length, t_2986447010.counter) < 4));

  return result_2986447011;

}

function rawInsert_2986447701(t_2986447705, data_2986447706, data_2986447706_Idx, key_2986447707, val_2986447708, hc_2986447709, h_2986447710) {
    data_2986447706[data_2986447706_Idx][chckIndx(h_2986447710, 0, (data_2986447706[data_2986447706_Idx]).length - 1)].Field1 = nimCopy(data_2986447706[data_2986447706_Idx][chckIndx(h_2986447710, 0, (data_2986447706[data_2986447706_Idx]).length - 1)].Field1, key_2986447707, NTI3003121692);
    data_2986447706[data_2986447706_Idx][chckIndx(h_2986447710, 0, (data_2986447706[data_2986447706_Idx]).length - 1)].Field2 = nimCopy(null, val_2986447708, NTI2986344784);
    data_2986447706[data_2986447706_Idx][chckIndx(h_2986447710, 0, (data_2986447706[data_2986447706_Idx]).length - 1)].Field0 = hc_2986447709;

  
}

function enlarge_2986447265(t_2986447268) {
    var n_2986447271 = [];
    n_2986447271 = new Array(chckRange(mulInt((t_2986447268.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986447268.data).length, 2), 0, 2147483647) ; ++i) { n_2986447271[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2986447268.data; t_2986447268.data = n_2986447271; n_2986447271 = Temporary1;    Label2: {
      var i_2986447369 = 0;
      var colontmp__2936013044 = 0;
      colontmp__2936013044 = (n_2986447271).length - 1;
      var res_2936013045 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013045 <= colontmp__2936013044)) break Label4;
            i_2986447369 = res_2936013045;
            var eh_2986447450 = n_2986447271[chckIndx(i_2986447369, 0, (n_2986447271).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986447450)) {
            var j_2986447454 = (eh_2986447450 & (t_2986447268.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986447268.data[chckIndx(j_2986447454, 0, (t_2986447268.data).length - 1)].Field0)) break Label6;
                  j_2986447454 = nextTry_1308622883(j_2986447454, (t_2986447268.data).length - 1);
                }
            };
            rawInsert_2986447701(t_2986447268, t_2986447268, "data", n_2986447271[chckIndx(i_2986447369, 0, (n_2986447271).length - 1)].Field1, n_2986447271[chckIndx(i_2986447369, 0, (n_2986447271).length - 1)].Field2, eh_2986447450, j_2986447454);
            }
            
            res_2936013045 = addInt(res_2936013045, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986447960(t_2986447963, key_2986447964, hc_2986447965) {
  var result_2986447966 = 0;

  BeforeRet: {
    if (((t_2986447963.data).length == 0)) {
    result_2986447966 = -1;
    break BeforeRet;
    }
    
    var h_2986448051 = (hc_2986447965 & (t_2986447963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986447963.data[chckIndx(h_2986448051, 0, (t_2986447963.data).length - 1)].Field0)) break Label2;
          if (((t_2986447963.data[chckIndx(h_2986448051, 0, (t_2986447963.data).length - 1)].Field0 == hc_2986447965) && HEX3DHEX3D_3003124693(t_2986447963.data[chckIndx(h_2986448051, 0, (t_2986447963.data).length - 1)].Field1, key_2986447964))) {
          result_2986447966 = h_2986448051;
          break BeforeRet;
          }
          
          h_2986448051 = nextTry_1308622883(h_2986448051, (t_2986447963.data).length - 1);
        }
    };
    result_2986447966 = subInt(-1, h_2986448051);
  };

  return result_2986447966;

}

function HEX5BHEX5DHEX3D_2986446740(t_2986446743, key_2986446744, val_2986446745) {
    if (((t_2986446743.data).length == 0)) {
    var correctSizeHEX60gensym566_2986446828 = slotsNeeded_1308622891(32);
    t_2986446743.counter = 0;
    t_2986446743.data = new Array(chckRange(correctSizeHEX60gensym566_2986446828, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym566_2986446828, 0, 2147483647) ; ++i) { t_2986446743.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2986446833 = [0];
    var index_2986446840 = rawGet_2986444404(t_2986446743, key_2986446744, hc_2986446833, 0);
    if ((0 <= index_2986446840)) {
    t_2986446743.data[chckIndx(index_2986446840, 0, (t_2986446743.data).length - 1)].Field2 = nimCopy(null, val_2986446745, NTI2986344784);
    }
    else {
      if (((t_2986446743.data).length == 0)) {
      var correctSizeHEX60gensym569_2986447003 = slotsNeeded_1308622891(32);
      t_2986446743.counter = 0;
      t_2986446743.data = new Array(chckRange(correctSizeHEX60gensym569_2986447003, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym569_2986447003, 0, 2147483647) ; ++i) { t_2986446743.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2986447008(t_2986446743)) {
      enlarge_2986447265(t_2986446743);
      index_2986446840 = rawGetKnownHC_2986447960(t_2986446743, key_2986446744, hc_2986446833[0]);
      }
      
      index_2986446840 = subInt(-1, index_2986446840);
      rawInsert_2986447701(t_2986446743, t_2986446743, "data", key_2986446744, val_2986446745, hc_2986446833[0], index_2986446840);
      t_2986446743.counter = addInt(t_2986446743.counter, 1);
    }
    

  
}

function hasKey_2986448409(t_2986448412, key_2986448413) {
  var result_2986448414 = false;

    var hc_2986448415 = [0];
    result_2986448414 = (0 <= rawGet_2986445052(t_2986448412, key_2986448413, hc_2986448415, 0));

  return result_2986448414;

}

function contains_2986448403(t_2986448406, key_2986448407) {
  var result_2986448408 = false;

  BeforeRet: {
    result_2986448408 = hasKey_2986448409(t_2986448406, key_2986448407);
    break BeforeRet;
  };

  return result_2986448408;

}

function mustRehash_2986448753(t_2986448755) {
  var result_2986448756 = false;

    if (!((t_2986448755.counter < (t_2986448755.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986448756 = ((mulInt((t_2986448755.data).length, 2) < mulInt(t_2986448755.counter, 3)) || (subInt((t_2986448755.data).length, t_2986448755.counter) < 4));

  return result_2986448756;

}

function rawInsert_2986449446(t_2986449450, data_2986449451, data_2986449451_Idx, key_2986449452, val_2986449453, hc_2986449454, h_2986449455) {
    data_2986449451[data_2986449451_Idx][chckIndx(h_2986449455, 0, (data_2986449451[data_2986449451_Idx]).length - 1)].Field1 = nimCopy(data_2986449451[data_2986449451_Idx][chckIndx(h_2986449455, 0, (data_2986449451[data_2986449451_Idx]).length - 1)].Field1, key_2986449452, NTI2046820355);
    data_2986449451[data_2986449451_Idx][chckIndx(h_2986449455, 0, (data_2986449451[data_2986449451_Idx]).length - 1)].Field2 = nimCopy(data_2986449451[data_2986449451_Idx][chckIndx(h_2986449455, 0, (data_2986449451[data_2986449451_Idx]).length - 1)].Field2, val_2986449453, NTI2986344452);
    data_2986449451[data_2986449451_Idx][chckIndx(h_2986449455, 0, (data_2986449451[data_2986449451_Idx]).length - 1)].Field0 = hc_2986449454;

  
}

function enlarge_2986449010(t_2986449013) {
    var n_2986449016 = [];
    n_2986449016 = new Array(chckRange(mulInt((t_2986449013.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986449013.data).length, 2), 0, 2147483647) ; ++i) { n_2986449016[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_2986449013.data; t_2986449013.data = n_2986449016; n_2986449016 = Temporary1;    Label2: {
      var i_2986449114 = 0;
      var colontmp__2936013050 = 0;
      colontmp__2936013050 = (n_2986449016).length - 1;
      var res_2936013051 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013051 <= colontmp__2936013050)) break Label4;
            i_2986449114 = res_2936013051;
            var eh_2986449195 = n_2986449016[chckIndx(i_2986449114, 0, (n_2986449016).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986449195)) {
            var j_2986449199 = (eh_2986449195 & (t_2986449013.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986449013.data[chckIndx(j_2986449199, 0, (t_2986449013.data).length - 1)].Field0)) break Label6;
                  j_2986449199 = nextTry_1308622883(j_2986449199, (t_2986449013.data).length - 1);
                }
            };
            rawInsert_2986449446(t_2986449013, t_2986449013, "data", n_2986449016[chckIndx(i_2986449114, 0, (n_2986449016).length - 1)].Field1, n_2986449016[chckIndx(i_2986449114, 0, (n_2986449016).length - 1)].Field2, eh_2986449195, j_2986449199);
            }
            
            res_2936013051 = addInt(res_2936013051, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986449705(t_2986449708, key_2986449709, hc_2986449710) {
  var result_2986449711 = 0;

  BeforeRet: {
    if (((t_2986449708.data).length == 0)) {
    result_2986449711 = -1;
    break BeforeRet;
    }
    
    var h_2986449796 = (hc_2986449710 & (t_2986449708.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986449708.data[chckIndx(h_2986449796, 0, (t_2986449708.data).length - 1)].Field0)) break Label2;
          if (((t_2986449708.data[chckIndx(h_2986449796, 0, (t_2986449708.data).length - 1)].Field0 == hc_2986449710) && HEX3DHEX3D_2046820592(t_2986449708.data[chckIndx(h_2986449796, 0, (t_2986449708.data).length - 1)].Field1, key_2986449709))) {
          result_2986449711 = h_2986449796;
          break BeforeRet;
          }
          
          h_2986449796 = nextTry_1308622883(h_2986449796, (t_2986449708.data).length - 1);
        }
    };
    result_2986449711 = subInt(-1, h_2986449796);
  };

  return result_2986449711;

}

function HEX5BHEX5DHEX3D_2986448485(t_2986448488, key_2986448489, val_2986448490) {
    if (((t_2986448488.data).length == 0)) {
    var correctSizeHEX60gensym578_2986448573 = slotsNeeded_1308622891(32);
    t_2986448488.counter = 0;
    t_2986448488.data = new Array(chckRange(correctSizeHEX60gensym578_2986448573, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym578_2986448573, 0, 2147483647) ; ++i) { t_2986448488.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_2986448578 = [0];
    var index_2986448585 = rawGet_2986445052(t_2986448488, key_2986448489, hc_2986448578, 0);
    if ((0 <= index_2986448585)) {
    t_2986448488.data[chckIndx(index_2986448585, 0, (t_2986448488.data).length - 1)].Field2 = nimCopy(t_2986448488.data[chckIndx(index_2986448585, 0, (t_2986448488.data).length - 1)].Field2, val_2986448490, NTI2986344452);
    }
    else {
      if (((t_2986448488.data).length == 0)) {
      var correctSizeHEX60gensym581_2986448748 = slotsNeeded_1308622891(32);
      t_2986448488.counter = 0;
      t_2986448488.data = new Array(chckRange(correctSizeHEX60gensym581_2986448748, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym581_2986448748, 0, 2147483647) ; ++i) { t_2986448488.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2986448753(t_2986448488)) {
      enlarge_2986449010(t_2986448488);
      index_2986448585 = rawGetKnownHC_2986449705(t_2986448488, key_2986448489, hc_2986448578[0]);
      }
      
      index_2986448585 = subInt(-1, index_2986448585);
      rawInsert_2986449446(t_2986448488, t_2986448488, "data", key_2986448489, val_2986448490, hc_2986448578[0], index_2986448585);
      t_2986448488.counter = addInt(t_2986448488.counter, 1);
    }
    

  
}

function hasKey_2986450225(t_2986450228, key_2986450229) {
  var result_2986450230 = false;

    var hc_2986450231 = [0];
    result_2986450230 = (0 <= rawGet_2986445559(t_2986450228, key_2986450229, hc_2986450231, 0));

  return result_2986450230;

}

function contains_2986450219(t_2986450222, key_2986450223) {
  var result_2986450224 = false;

  BeforeRet: {
    result_2986450224 = hasKey_2986450225(t_2986450222, key_2986450223);
    break BeforeRet;
  };

  return result_2986450224;

}

function mustRehash_2986450658(t_2986450660) {
  var result_2986450661 = false;

    if (!((t_2986450660.counter < (t_2986450660.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986450661 = ((mulInt((t_2986450660.data).length, 2) < mulInt(t_2986450660.counter, 3)) || (subInt((t_2986450660.data).length, t_2986450660.counter) < 4));

  return result_2986450661;

}

function rawInsert_2986451351(t_2986451355, data_2986451356, data_2986451356_Idx, key_2986451357, val_2986451358, hc_2986451359, h_2986451360) {
    data_2986451356[data_2986451356_Idx][chckIndx(h_2986451360, 0, (data_2986451356[data_2986451356_Idx]).length - 1)].Field1 = nimCopy(data_2986451356[data_2986451356_Idx][chckIndx(h_2986451360, 0, (data_2986451356[data_2986451356_Idx]).length - 1)].Field1, key_2986451357, NTI3003121692);
    data_2986451356[data_2986451356_Idx][chckIndx(h_2986451360, 0, (data_2986451356[data_2986451356_Idx]).length - 1)].Field2 = nimCopy(null, val_2986451358, NTI2986344456);
    data_2986451356[data_2986451356_Idx][chckIndx(h_2986451360, 0, (data_2986451356[data_2986451356_Idx]).length - 1)].Field0 = hc_2986451359;

  
}

function enlarge_2986450915(t_2986450918) {
    var n_2986450921 = [];
    n_2986450921 = new Array(chckRange(mulInt((t_2986450918.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986450918.data).length, 2), 0, 2147483647) ; ++i) { n_2986450921[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2986450918.data; t_2986450918.data = n_2986450921; n_2986450921 = Temporary1;    Label2: {
      var i_2986451019 = 0;
      var colontmp__2936013056 = 0;
      colontmp__2936013056 = (n_2986450921).length - 1;
      var res_2936013057 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013057 <= colontmp__2936013056)) break Label4;
            i_2986451019 = res_2936013057;
            var eh_2986451100 = n_2986450921[chckIndx(i_2986451019, 0, (n_2986450921).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986451100)) {
            var j_2986451104 = (eh_2986451100 & (t_2986450918.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986450918.data[chckIndx(j_2986451104, 0, (t_2986450918.data).length - 1)].Field0)) break Label6;
                  j_2986451104 = nextTry_1308622883(j_2986451104, (t_2986450918.data).length - 1);
                }
            };
            rawInsert_2986451351(t_2986450918, t_2986450918, "data", n_2986450921[chckIndx(i_2986451019, 0, (n_2986450921).length - 1)].Field1, n_2986450921[chckIndx(i_2986451019, 0, (n_2986450921).length - 1)].Field2, eh_2986451100, j_2986451104);
            }
            
            res_2936013057 = addInt(res_2936013057, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986451601(t_2986451604, key_2986451605, hc_2986451606) {
  var result_2986451607 = 0;

  BeforeRet: {
    if (((t_2986451604.data).length == 0)) {
    result_2986451607 = -1;
    break BeforeRet;
    }
    
    var h_2986451692 = (hc_2986451606 & (t_2986451604.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986451604.data[chckIndx(h_2986451692, 0, (t_2986451604.data).length - 1)].Field0)) break Label2;
          if (((t_2986451604.data[chckIndx(h_2986451692, 0, (t_2986451604.data).length - 1)].Field0 == hc_2986451606) && HEX3DHEX3D_3003124693(t_2986451604.data[chckIndx(h_2986451692, 0, (t_2986451604.data).length - 1)].Field1, key_2986451605))) {
          result_2986451607 = h_2986451692;
          break BeforeRet;
          }
          
          h_2986451692 = nextTry_1308622883(h_2986451692, (t_2986451604.data).length - 1);
        }
    };
    result_2986451607 = subInt(-1, h_2986451692);
  };

  return result_2986451607;

}

function HEX5BHEX5DHEX3D_2986450390(t_2986450393, key_2986450394, val_2986450395) {
    if (((t_2986450393.data).length == 0)) {
    var correctSizeHEX60gensym590_2986450478 = slotsNeeded_1308622891(32);
    t_2986450393.counter = 0;
    t_2986450393.data = new Array(chckRange(correctSizeHEX60gensym590_2986450478, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym590_2986450478, 0, 2147483647) ; ++i) { t_2986450393.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2986450483 = [0];
    var index_2986450490 = rawGet_2986445559(t_2986450393, key_2986450394, hc_2986450483, 0);
    if ((0 <= index_2986450490)) {
    t_2986450393.data[chckIndx(index_2986450490, 0, (t_2986450393.data).length - 1)].Field2 = nimCopy(null, val_2986450395, NTI2986344456);
    }
    else {
      if (((t_2986450393.data).length == 0)) {
      var correctSizeHEX60gensym593_2986450653 = slotsNeeded_1308622891(32);
      t_2986450393.counter = 0;
      t_2986450393.data = new Array(chckRange(correctSizeHEX60gensym593_2986450653, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym593_2986450653, 0, 2147483647) ; ++i) { t_2986450393.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2986450658(t_2986450393)) {
      enlarge_2986450915(t_2986450393);
      index_2986450490 = rawGetKnownHC_2986451601(t_2986450393, key_2986450394, hc_2986450483[0]);
      }
      
      index_2986450490 = subInt(-1, index_2986450490);
      rawInsert_2986451351(t_2986450393, t_2986450393, "data", key_2986450394, val_2986450395, hc_2986450483[0], index_2986450490);
      t_2986450393.counter = addInt(t_2986450393.counter, 1);
    }
    

  
}

function HEX5BHEX5D_2986452123(t_2986452126, key_2986452127) {
  var result_2986452128 = null;
  var result_2986452128_Idx = 0;

    var hcHEX60gensym22_2986452129 = [0];
    var indexHEX60gensym22_2986452136 = rawGet_2986445559(t_2986452126, key_2986452127, hcHEX60gensym22_2986452129, 0);
    if ((0 <= indexHEX60gensym22_2986452136)) {
    result_2986452128 = t_2986452126.data[chckIndx(indexHEX60gensym22_2986452136, 0, (t_2986452126.data).length - 1)]; result_2986452128_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_2986452127);
    }
    

  return [result_2986452128, result_2986452128_Idx];

}

function del_2986452296(t_2986452299, key_2986452300) {
    var hc_2986452301 = [0];
    var i_2986452308 = rawGet_2986444404(t_2986452299, key_2986452300, hc_2986452301, 0);
    var mskHEX60gensym36_2986452312 = (t_2986452299.data).length - 1;
    if ((0 <= i_2986452308)) {
    t_2986452299.counter = subInt(t_2986452299.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986452319 = i_2986452308;
            var rHEX60gensym36_2986452320 = jHEX60gensym36_2986452319;
            t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field0 = 0;
            t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field1 = nimCopy(t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field2 = nimCopy(null, [], NTI2986344784);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986452308 = (addInt(i_2986452308, 1) & mskHEX60gensym36_2986452312);
                  if (isEmpty_1308622877(t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986452320 = (t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)].Field0 & mskHEX60gensym36_2986452312);
                  if (!(((((rHEX60gensym36_2986452320 <= i_2986452308) && (jHEX60gensym36_2986452319 < rHEX60gensym36_2986452320)) || ((jHEX60gensym36_2986452319 < rHEX60gensym36_2986452320) && (i_2986452308 < jHEX60gensym36_2986452319))) || ((i_2986452308 < jHEX60gensym36_2986452319) && (rHEX60gensym36_2986452320 <= i_2986452308))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986452299.data[chckIndx(jHEX60gensym36_2986452319, 0, (t_2986452299.data).length - 1)] = nimCopy(t_2986452299.data[chckIndx(jHEX60gensym36_2986452319, 0, (t_2986452299.data).length - 1)], t_2986452299.data[chckIndx(i_2986452308, 0, (t_2986452299.data).length - 1)], NTI2986344796);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_2986345267(ctx_2986345268, node_2986345269) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_2986444301 = null;

  BeforeRet: {
    var logQueryHEX60gensym555_2986444303 = (ctx_2986345268.enableLogging || ctx_2986345268.enableQueryLogging);
    if (logQueryHEX60gensym555_2986444303) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym555_2986444303) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345269) || []));
    }
    
    try {
    var key_2986444314 = nimCopy(null, getTypeKey_2986417463(ctx_2986345268, getItem_2986398737(node_2986345269)), NTI3003121692);
    if (contains_2986444391(ctx_2986345268.diagnosticsPerQuery, key_2986444314)) {
    Label3: {
      var id_2986444964 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2936012895 = [];
      colontmp__2936012895 = (Temporary4 = HEX5BHEX5D_2986444836(ctx_2986345268.diagnosticsPerQuery, key_2986444314), Temporary4)[0][Temporary4[1]];
      var i_2936012897 = 0;
      var L_2936012898 = (colontmp__2936012895).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2936012897 < L_2936012898)) break Label6;
            id_2986444964 = colontmp__2936012895[chckIndx(i_2936012897, 0, (colontmp__2936012895).length - 1)];
            del_2986445553(HEX5BHEX5D_2986445045(ctx_2986345268.diagnosticsPerNode, id_2986444964).queries, key_2986444314);
            i_2936012897 = addInt(i_2936012897, 1);
            if (!(((colontmp__2936012895).length == L_2936012898))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_2986446667 = [];
    var ids_2986446672 = [];
    try {
    Label8: {
      var expr_2986453045 = node_2986345269;
      var pos_2986453046 = 0;
      var _ = pos_2986453046;
      if ((expr_2986453045.kind == 0)) {
      result_2986444301 = voidType_3070230940();
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_2986345269.text);
      result_2986444301 = intType_3070230942();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_2986453045.kind == 3)) {
      result_2986444301 = stringType_3070230944();
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 12)) {
      result_2986444301 = voidType_3070230940();
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 11)) {
      if ((len_2969567320(node_2986345269) < 3)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var params_2986453069 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      recordDependency_2986398524(ctx_2986345268, getItem_2986398737(params_2986453069), -1);
      var returnTypeNode_2986453070 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      var paramTypes_2986453075 = [];
      var ok_2986453076 = true;
      Label10: {
        var param_2986453080 = null;
        var i_2936012908 = 0;
        var L_2936012909 = (params_2986453069.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2936012908 < L_2936012909)) break Label12;
              param_2986453080 = params_2986453069.children[chckIndx(i_2936012908, 0, (params_2986453069.children).length - 1)];
              Label13: {
                var paramType_2986453081 = computeType_2986418034(ctx_2986345268, param_2986453080, true);
                if ((paramType_2986453081.kind == 0)) {
                ok_2986453076 = false;
                break Label13;
                }
                
                paramTypes_2986453075.push(paramType_2986453081);;
              };
              i_2936012908 = addInt(i_2936012908, 1);
              if (!(((params_2986453069.children).length == L_2936012909))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_2986453090 = computeType_2986418034(ctx_2986345268, returnTypeNode_2986453070, true);
      if ((returnTypeType_2986453090.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((returnTypeType_2986453090.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_2986453070.id, NTI2046820355);
      ids_2986446672.push(Temporary14);;
      var fmtRes_2986453107 = [mnewString(0)];
      fmtRes_2986453107[0].push.apply(fmtRes_2986453107[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986453108(fmtRes_2986453107, 0, returnTypeType_2986453090, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453107[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var returnTypeValue_2986453117 = computeValue_2986421510(ctx_2986345268, returnTypeNode_2986453070, true);
      if ((returnTypeValue_2986453117.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_2986453117.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_2986453070.id, NTI2046820355);
      ids_2986446672.push(Temporary15);;
      var fmtRes_2986453134 = [mnewString(0)];
      fmtRes_2986453134[0].push.apply(fmtRes_2986453134[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986453134, 0, returnTypeValue_2986453117, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453134[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_2986453117;
      if (ConstSet67[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3070230534)); }
      var returnType_2986453144 = Temporary16.typ;
      result_2986444301 = newFunctionType_3070230946(paramTypes_2986453075, returnType_2986453144);
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 8)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      var Temporary17 = nimCopy(null, node_2986345269.id, NTI2046820355);
      ids_2986446672.push(Temporary17);;
      var fmtRes_2986453157 = mnewString(0);
      fmtRes_2986453157.push.apply(fmtRes_2986453157, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453157, NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var function_2986453162 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var functionType_2986453163 = computeType_2986418034(ctx_2986345268, function_2986453162, true);
      if ((functionType_2986453163.kind == 0)) {
      result_2986444301 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_2986453163.kind == 4))) {
      var Temporary18 = nimCopy(null, function_2986453162.id, NTI2046820355);
      ids_2986446672.push(Temporary18);;
      var fmtRes_2986453180 = [mnewString(0)];
      fmtRes_2986453180[0].push.apply(fmtRes_2986453180[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_2986453108(fmtRes_2986453180, 0, functionType_2986453163, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453180[0], NTI33554449)});;
      result_2986444301 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_2986453190 = subInt(len_2969567320(node_2986345269), 1);
      var Temporary21 = functionType_2986453163;
      if (ConstSet68[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI3070230531)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_2986453163;
        if (ConstSet75[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3070230531)); }
        var Temporary23 = functionType_2986453163;
        if (ConstSet76[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3070230531)); }
        Temporary20 = HEX3DHEX3D_3070231086((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_3070230961(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_2986453163;
        if (ConstSet77[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3070230531)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_2986453190);      }      var isValidOpenAnyCall_2986453200 = Temporary19;
        var Temporary27 = functionType_2986453163;
        if (ConstSet78[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230531)); }
        if (!!((numArgs_2986453190 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_2986453200);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_2986345269.id, NTI2046820355);
      ids_2986446672.push(Temporary28);;
      var fmtRes_2986453212 = [mnewString(0)];
      fmtRes_2986453212[0].push.apply(fmtRes_2986453212[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_2986453163;
      if (ConstSet79[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI3070230531)); }
      formatValue_2516582756(fmtRes_2986453212, 0, (Temporary29.paramTypes).length, []);
      fmtRes_2986453212[0].push.apply(fmtRes_2986453212[0], [32,103,111,116,32]);;
      formatValue_2516582756(fmtRes_2986453212, 0, numArgs_2986453190, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453212[0], NTI33554449)});;
      result_2986444301 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_2986453230 = true;
      Label30: {
        var i_2986453235 = 0;
        var res_2936012913 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2936012913 <= numArgs_2986453190)) break Label32;
              i_2986453235 = res_2936012913;
              Label33: {
                var argType_2986453236 = computeType_2986418034(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, i_2986453235), true);
                if ((argType_2986453236.kind == 0)) {
                allArgsOk_2986453230 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_2986453200) Temporary34 = false; else {                    var Temporary35 = functionType_2986453163;
                    if (ConstSet80[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI3070230531)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_2986453235);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_2986453163;
                  if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3070230531)); }
                if (!(HEX3DHEX3D_3070231086(argType_2986453236, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_2986453235, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2969567316(node_2986345269, i_2986453235).id, NTI2046820355);
                ids_2986446672.push(Temporary38);;
                var fmtRes_2986453252 = [mnewString(0)];
                fmtRes_2986453252[0].push.apply(fmtRes_2986453252[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2516582756(fmtRes_2986453252, 0, i_2986453235, []);
                fmtRes_2986453252[0].push.apply(fmtRes_2986453252[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_2986453163;
                if (ConstSet82[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI3070230531)); }
                formatValue_2986453108(fmtRes_2986453252, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_2986453235, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_2986453252[0].push.apply(fmtRes_2986453252[0], [32,103,111,116,32]);;
                formatValue_2986453108(fmtRes_2986453252, 0, argType_2986453236, []);
                diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453252[0], NTI33554449)});;
                allArgsOk_2986453230 = false;
                }
                
              };
              res_2936012913 = addInt(res_2936012913, 1);
            }
        };
      };
      if (!(allArgsOk_2986453230)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_2986453163;
      if (ConstSet83[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI3070230531)); }
      result_2986444301 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 4)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      result_2986444301 = computeType_2986418034(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 5)) {
      if ((len_2969567320(node_2986345269) < 1)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNode_2986453280 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var typ_2986453281 = voidType_3070230940();
      if (!((typeNode_2986453280.kind == 0))) {
      var typeNodeType_2986453286 = computeType_2986418034(ctx_2986345268, typeNode_2986453280, true);
      if ((typeNodeType_2986453286.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2986453286.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_2986453280.id, NTI2046820355);
      ids_2986446672.push(Temporary42);;
      var fmtRes_2986453303 = [mnewString(0)];
      fmtRes_2986453303[0].push.apply(fmtRes_2986453303[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986453108(fmtRes_2986453303, 0, typeNodeType_2986453286, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453303[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNodeValue_2986453313 = computeValue_2986421510(ctx_2986345268, typeNode_2986453280, true);
      if ((typeNodeValue_2986453313.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2986453313.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_2986453280.id, NTI2046820355);
      ids_2986446672.push(Temporary43);;
      var fmtRes_2986453330 = [mnewString(0)];
      fmtRes_2986453330[0].push.apply(fmtRes_2986453330[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986453330, 0, typeNodeValue_2986453313, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453330[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_2986453313;
      if (ConstSet84[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI3070230534)); }
      typ_2986453281 = Temporary44.typ;
      }
      
      if ((2 <= len_2969567320(node_2986345269))) {
      var valueNode_2986453340 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      if (!((valueNode_2986453340.kind == 0))) {
      var valueNodeType_2986453345 = computeType_2986418034(ctx_2986345268, valueNode_2986453340, true);
      if ((valueNodeType_2986453345.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((typ_2986453281.kind == 1)) {
      typ_2986453281 = valueNodeType_2986453345;
      }
      
      if (!(HEX3DHEX3D_3070231086(valueNodeType_2986453345, typ_2986453281))) {
      var Temporary45 = nimCopy(null, valueNode_2986453340.id, NTI2046820355);
      ids_2986446672.push(Temporary45);;
      var fmtRes_2986453362 = [mnewString(0)];
      fmtRes_2986453362[0].push.apply(fmtRes_2986453362[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2986453108(fmtRes_2986453362, 0, typ_2986453281, []);
      fmtRes_2986453362[0].push.apply(fmtRes_2986453362[0], [44,32,103,111,116,32]);;
      formatValue_2986453108(fmtRes_2986453362, 0, valueNodeType_2986453345, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453362[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2986444301 = typ_2986453281;
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 6)) {
      if ((len_2969567320(node_2986345269) < 1)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNode_2986453381 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var typ_2986453382 = voidType_3070230940();
      if (!((typeNode_2986453381.kind == 0))) {
      var typeNodeType_2986453387 = computeType_2986418034(ctx_2986345268, typeNode_2986453381, true);
      if ((typeNodeType_2986453387.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2986453387.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_2986453381.id, NTI2046820355);
      ids_2986446672.push(Temporary46);;
      var fmtRes_2986453404 = [mnewString(0)];
      fmtRes_2986453404[0].push.apply(fmtRes_2986453404[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986453108(fmtRes_2986453404, 0, typeNodeType_2986453387, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453404[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNodeValue_2986453414 = computeValue_2986421510(ctx_2986345268, typeNode_2986453381, true);
      if ((typeNodeValue_2986453414.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2986453414.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_2986453381.id, NTI2046820355);
      ids_2986446672.push(Temporary47);;
      var fmtRes_2986453431 = [mnewString(0)];
      fmtRes_2986453431[0].push.apply(fmtRes_2986453431[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986453431, 0, typeNodeValue_2986453414, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453431[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_2986453414;
      if (ConstSet85[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI3070230534)); }
      typ_2986453382 = Temporary48.typ;
      }
      
      if ((2 <= len_2969567320(node_2986345269))) {
      var valueNode_2986453441 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      if (!((valueNode_2986453441.kind == 0))) {
      var valueNodeType_2986453446 = computeType_2986418034(ctx_2986345268, valueNode_2986453441, true);
      if ((valueNodeType_2986453446.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((typ_2986453382.kind == 1)) {
      typ_2986453382 = valueNodeType_2986453446;
      }
      
      if (!(HEX3DHEX3D_3070231086(valueNodeType_2986453446, typ_2986453382))) {
      var Temporary49 = nimCopy(null, valueNode_2986453441.id, NTI2046820355);
      ids_2986446672.push(Temporary49);;
      var fmtRes_2986453463 = [mnewString(0)];
      fmtRes_2986453463[0].push.apply(fmtRes_2986453463[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2986453108(fmtRes_2986453463, 0, typ_2986453382, []);
      fmtRes_2986453463[0].push.apply(fmtRes_2986453463[0], [44,32,103,111,116,32]);;
      formatValue_2986453108(fmtRes_2986453463, 0, valueNodeType_2986453446, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986453463[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2986444301 = typ_2986453382;
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 1)) {
      var id_2986453482 = nimCopy(null, node_2986345269.reff, NTI2046820355);
      var symbols_2986453483 = computeSymbols_2986428140(ctx_2986345268, node_2986345269, true);
      if (contains_2986453560(symbols_2986453483, id_2986453482)) {
      var symbol_2986454087 = (Temporary50 = HEX5BHEX5D_2986453815(symbols_2986453483, id_2986453482), Temporary50)[0][Temporary50[1]];
      result_2986444301 = computeSymbolType_2986431612(ctx_2986345268, symbol_2986454087, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_2986345269.id, NTI2046820355);
      ids_2986446672.push(Temporary51);;
      var fmtRes_2986454096 = [mnewString(0)];
      fmtRes_2986454096[0].push.apply(fmtRes_2986454096[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3003121884(fmtRes_2986454096, 0, id_2986453482, []);
      fmtRes_2986454096[0].push.apply(fmtRes_2986454096[0], [39]);;
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454096[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 7)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      result_2986444301 = voidType_3070230940();
      break BeforeRet;
      }
      
      var lastType_2986454110 = null;
      Label52: {
        var child_2986454114 = null;
        var i_2936012916 = 0;
        var L_2936012917 = (node_2986345269.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2936012916 < L_2936012917)) break Label54;
              child_2986454114 = node_2986345269.children[chckIndx(i_2936012916, 0, (node_2986345269.children).length - 1)];
              lastType_2986454110 = computeType_2986418034(ctx_2986345268, child_2986454114, true);
              if ((lastType_2986454110.kind == 0)) {
              result_2986444301 = errorType_3070230904();
              break BeforeRet;
              }
              
              i_2936012916 = addInt(i_2936012916, 1);
              if (!(((node_2986345269.children).length == L_2936012917))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_2986444301 = lastType_2986454110;
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 9)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var ok_2986454123 = true;
      var commonType_2986454126 = [none_2986418015()];
      var index_2986454127 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_2986454127, 1) < len_2969567320(node_2986345269))) break Label56;
            Label57: {
              try {
              var condition_2986454132 = HEX5BHEX5D_2969567316(node_2986345269, index_2986454127);
              var trueCase_2986454133 = HEX5BHEX5D_2969567316(node_2986345269, addInt(index_2986454127, 1));
              var conditionType_2986454134 = computeType_2986418034(ctx_2986345268, condition_2986454132, true);
              if ((conditionType_2986454134.kind == 0)) {
              ok_2986454123 = false;
              }
              else {
              if (!((conditionType_2986454134.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_2986454132.id, NTI2046820355);
              ids_2986446672.push(Temporary59);;
              var fmtRes_2986454151 = [mnewString(0)];
              fmtRes_2986454151[0].push.apply(fmtRes_2986454151[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_2986453108(fmtRes_2986454151, 0, conditionType_2986454134, []);
              diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454151[0], NTI33554449)});;
              ok_2986454123 = false;
              }
              }
              var trueCaseType_2986454161 = computeType_2986418034(ctx_2986345268, trueCase_2986454133, true);
              if ((trueCaseType_2986454161.kind == 0)) {
              ok_2986454123 = false;
              break Label57;
              }
              
              if ((isNone_2986454170(commonType_2986454126[0]) || HEX3DHEX3D_3070231086(trueCaseType_2986454161, (Temporary60 = get_2986454213(commonType_2986454126[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_2986454126[0] = nimCopy(commonType_2986454126[0], some_2986418002(trueCaseType_2986454161), NTI2986387392);
              }
              else {
                commonType_2986454126[0] = nimCopy(commonType_2986454126[0], some_2986418002(voidType_3070230940()), NTI2986387392);
              }
              
              } finally {
              index_2986454127 = addInt(index_2986454127, 2);
              }
            };
          }
      };
      if (!((modInt(len_2969567320(node_2986345269), 2) == 0))) {
      var falseCaseType_2986454240 = computeType_2986418034(ctx_2986345268, last_2969567490(node_2986345269), true);
      if ((falseCaseType_2986454240.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((isNone_2986454170(commonType_2986454126[0]) || HEX3DHEX3D_3070231086(falseCaseType_2986454240, (Temporary61 = get_2986454213(commonType_2986454126[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_2986454126[0] = nimCopy(commonType_2986454126[0], some_2986418002(falseCaseType_2986454240), NTI2986387392);
      }
      else {
        commonType_2986454126[0] = nimCopy(commonType_2986454126[0], some_2986418002(voidType_3070230940()), NTI2986387392);
      }
      
      }
      
      if (!(ok_2986454123)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      result_2986444301 = get_2986454331(commonType_2986454126[0], voidType_3070230940());
      break BeforeRet;
      }
      else {
      if ((expr_2986453045.kind == 10)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var ok_2986454352 = true;
      var conditionType_2986454353 = computeType_2986418034(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 0), true);
      if ((conditionType_2986454353.kind == 0)) {
      ok_2986454352 = false;
      }
      else {
      if (!((conditionType_2986454353.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2969567316(node_2986345269, 0).id, NTI2046820355);
      ids_2986446672.push(Temporary62);;
      var fmtRes_2986454370 = [mnewString(0)];
      fmtRes_2986454370[0].push.apply(fmtRes_2986454370[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_2986453108(fmtRes_2986454370, 0, conditionType_2986454353, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454370[0], NTI33554449)});;
      ok_2986454352 = false;
      }
      }
      var bodyType_2986454380 = computeType_2986418034(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 1), true);
      if ((bodyType_2986454380.kind == 0)) {
      ok_2986454352 = false;
      }
      
      if (ok_2986454352) {
      result_2986444301 = voidType_3070230940();
      break BeforeRet;
      }
      else {
        result_2986444301 = errorType_3070230904();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_2986453045.kind == 13)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var target_2986454389 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var value_2986454390 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      var targetType_2986454391 = computeType_2986418034(ctx_2986345268, target_2986454389, true);
      if ((targetType_2986454391.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      var valueType_2986454396 = computeType_2986418034(ctx_2986345268, value_2986454390, true);
      if ((valueType_2986454396.kind == 0)) {
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3070231086(targetType_2986454391, valueType_2986454396))) {
      var Temporary63 = nimCopy(null, value_2986454390.id, NTI2046820355);
      ids_2986446672.push(Temporary63);;
      var fmtRes_2986454409 = [mnewString(0)];
      fmtRes_2986454409[0].push.apply(fmtRes_2986454409[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_2986453108(fmtRes_2986454409, 0, valueType_2986454396, []);
      fmtRes_2986454409[0].push.apply(fmtRes_2986454409[0], [32,116,111,32]);;
      formatValue_2986453108(fmtRes_2986454409, 0, targetType_2986454391, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454409[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
        var oHEX60gensym687_2986454426 = computeSymbol_2986424640(ctx_2986345268, target_2986454389, true);
        if (!isSome_3070232129(oHEX60gensym687_2986454426)) Temporary64 = false; else {          var sym_2986454472 = get_3070232149(oHEX60gensym687_2986454426);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_2986454472.kind == 1)) {
      var Temporary65 = nimCopy(null, target_2986454389.id, NTI2046820355);
      ids_2986446672.push(Temporary65);;
      var fmtRes_2986454485 = [mnewString(0)];
      fmtRes_2986454485[0].push.apply(fmtRes_2986454485[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_2986454486(fmtRes_2986454485, 0, sym_2986454472, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454485[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((sym_2986454472.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_2986454472;
        if (ConstSet109[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI3070230537)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_2986454389.id, NTI2046820355);
      ids_2986446672.push(Temporary67);;
      var fmtRes_2986454516 = [mnewString(0)];
      fmtRes_2986454516[0].push.apply(fmtRes_2986454516[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_2986454486(fmtRes_2986454516, 0, sym_2986454472, []);
      diagnostics_2986446667.push({message: nimCopy(null, fmtRes_2986454516[0], NTI33554449)});;
      result_2986444301 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      result_2986444301 = voidType_3070230940();
      break BeforeRet;
      }
      else {
        result_2986444301 = errorType_3070230904();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_2986446667).length)) {
    HEX5BHEX5DHEX3D_2986446740(ctx_2986345268.diagnosticsPerQuery, key_2986444314, ids_2986446672);
    Label68: {
      var i_2986448324 = 0;
      var colontmp__2936012901 = 0;
      colontmp__2936012901 = (ids_2986446672).length - 1;
      var res_2936012902 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2936012902 <= colontmp__2936012901)) break Label70;
            i_2986448324 = res_2936012902;
            var id_2986448325 = nimCopy(null, ids_2986446672[chckIndx(i_2986448324, 0, (ids_2986446672).length - 1)], NTI2046820355);
            var diag_2986448326 = nimCopy(null, diagnostics_2986446667[chckIndx(i_2986448324, 0, (diagnostics_2986446667).length - 1)], NTI2986344451);
            if (!(contains_2986448403(ctx_2986345268.diagnosticsPerNode, id_2986448325))) {
            HEX5BHEX5DHEX3D_2986448485(ctx_2986345268.diagnosticsPerNode, id_2986448325, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_2986450219(HEX5BHEX5D_2986445045(ctx_2986345268.diagnosticsPerNode, id_2986448325).queries, key_2986444314))) {
            HEX5BHEX5DHEX3D_2986450390(HEX5BHEX5D_2986445045(ctx_2986345268.diagnosticsPerNode, id_2986448325).queries, key_2986444314, []);
            }
            
            var Temporary72 = nimCopy(null, diag_2986448326, NTI2986344451);
            (Temporary71 = HEX5BHEX5D_2986452123(HEX5BHEX5D_2986445045(ctx_2986345268.diagnosticsPerNode, id_2986448325).queries, key_2986444314), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2936012902 = addInt(res_2936012902, 1);
          }
      };
    };
    }
    else {
    del_2986452296(ctx_2986345268.diagnosticsPerQuery, key_2986444314);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym555_2986444303 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070230964(result_2986444301) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym555_2986444303) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986444301;

}

function getOrDefault_2986346857(t_2986346860, key_2986346861, default_2986346862) {
    var Temporary1;

  var result_2986346863 = null;

    var hcHEX60gensym128_2986346866 = [0];
    var indexHEX60gensym128_2986347225 = rawGet_2986346867(t_2986346860, key_2986346861, hcHEX60gensym128_2986346866, 0);
    if ((0 <= indexHEX60gensym128_2986347225)) {
    Temporary1 = t_2986346860.data[chckIndx(indexHEX60gensym128_2986347225, 0, (t_2986346860.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986346862;
    }
    
    result_2986346863 = Temporary1;

  return result_2986346863;

}

function newDoublyLinkedNode_2986347350(value_2986347352) {
  var result_2986347353 = null;

    result_2986347353 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986347353.value = nimCopy(result_2986347353.value, value_2986347352, NTI2986344813);

  return result_2986347353;

}

function mustRehash_2986347700(t_2986347702) {
  var result_2986347703 = false;

    if (!((t_2986347702.counter < (t_2986347702.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986347703 = ((mulInt((t_2986347702.data).length, 2) < mulInt(t_2986347702.counter, 3)) || (subInt((t_2986347702.data).length, t_2986347702.counter) < 4));

  return result_2986347703;

}

function rawInsert_2986348393(t_2986348397, data_2986348398, data_2986348398_Idx, key_2986348399, val_2986348400, hc_2986348401, h_2986348402) {
    data_2986348398[data_2986348398_Idx][chckIndx(h_2986348402, 0, (data_2986348398[data_2986348398_Idx]).length - 1)].Field1 = key_2986348399;
    data_2986348398[data_2986348398_Idx][chckIndx(h_2986348402, 0, (data_2986348398[data_2986348398_Idx]).length - 1)].Field2 = val_2986348400;
    data_2986348398[data_2986348398_Idx][chckIndx(h_2986348402, 0, (data_2986348398[data_2986348398_Idx]).length - 1)].Field0 = hc_2986348401;

  
}

function enlarge_2986347957(t_2986347960) {
    var n_2986347963 = [];
    n_2986347963 = new Array(chckRange(mulInt((t_2986347960.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986347960.data).length, 2), 0, 2147483647) ; ++i) { n_2986347963[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986347960.data; t_2986347960.data = n_2986347963; n_2986347963 = Temporary1;    Label2: {
      var i_2986348061 = 0;
      var colontmp__2936013064 = 0;
      colontmp__2936013064 = (n_2986347963).length - 1;
      var res_2936013065 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013065 <= colontmp__2936013064)) break Label4;
            i_2986348061 = res_2936013065;
            var eh_2986348142 = n_2986347963[chckIndx(i_2986348061, 0, (n_2986347963).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986348142)) {
            var j_2986348146 = (eh_2986348142 & (t_2986347960.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986347960.data[chckIndx(j_2986348146, 0, (t_2986347960.data).length - 1)].Field0)) break Label6;
                  j_2986348146 = nextTry_1308622883(j_2986348146, (t_2986347960.data).length - 1);
                }
            };
            rawInsert_2986348393(t_2986347960, t_2986347960, "data", n_2986347963[chckIndx(i_2986348061, 0, (n_2986347963).length - 1)].Field1, n_2986347963[chckIndx(i_2986348061, 0, (n_2986347963).length - 1)].Field2, eh_2986348142, j_2986348146);
            }
            
            res_2936013065 = addInt(res_2936013065, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986348643(t_2986348646, key_2986348647, hc_2986348648) {
  var result_2986348649 = 0;

  BeforeRet: {
    if (((t_2986348646.data).length == 0)) {
    result_2986348649 = -1;
    break BeforeRet;
    }
    
    var h_2986348734 = (hc_2986348648 & (t_2986348646.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986348646.data[chckIndx(h_2986348734, 0, (t_2986348646.data).length - 1)].Field0)) break Label2;
          if (((t_2986348646.data[chckIndx(h_2986348734, 0, (t_2986348646.data).length - 1)].Field0 == hc_2986348648) && (t_2986348646.data[chckIndx(h_2986348734, 0, (t_2986348646.data).length - 1)].Field1 == key_2986348647))) {
          result_2986348649 = h_2986348734;
          break BeforeRet;
          }
          
          h_2986348734 = nextTry_1308622883(h_2986348734, (t_2986348646.data).length - 1);
        }
    };
    result_2986348649 = subInt(-1, h_2986348734);
  };

  return result_2986348649;

}

function HEX5BHEX5DHEX3D_2986347432(t_2986347435, key_2986347436, val_2986347437) {
    if (((t_2986347435.data).length == 0)) {
    var correctSizeHEX60gensym133_2986347520 = slotsNeeded_1308622891(32);
    t_2986347435.counter = 0;
    t_2986347435.data = new Array(chckRange(correctSizeHEX60gensym133_2986347520, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym133_2986347520, 0, 2147483647) ; ++i) { t_2986347435.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986347525 = [0];
    var index_2986347532 = rawGet_2986346867(t_2986347435, key_2986347436, hc_2986347525, 0);
    if ((0 <= index_2986347532)) {
    t_2986347435.data[chckIndx(index_2986347532, 0, (t_2986347435.data).length - 1)].Field2 = val_2986347437;
    }
    else {
      if (((t_2986347435.data).length == 0)) {
      var correctSizeHEX60gensym136_2986347695 = slotsNeeded_1308622891(32);
      t_2986347435.counter = 0;
      t_2986347435.data = new Array(chckRange(correctSizeHEX60gensym136_2986347695, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_2986347695, 0, 2147483647) ; ++i) { t_2986347435.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986347700(t_2986347435)) {
      enlarge_2986347957(t_2986347435);
      index_2986347532 = rawGetKnownHC_2986348643(t_2986347435, key_2986347436, hc_2986347525[0]);
      }
      
      index_2986347532 = subInt(-1, index_2986347532);
      rawInsert_2986348393(t_2986347435, t_2986347435, "data", key_2986347436, val_2986347437, hc_2986347525[0], index_2986347532);
      t_2986347435.counter = addInt(t_2986347435.counter, 1);
    }
    

  
}

function rawGet_2986349292(t_2986349295, key_2986349296, hc_2986349297, hc_2986349297_Idx) {
  var result_2986349298 = 0;

  BeforeRet: {
    hc_2986349297[hc_2986349297_Idx] = hash_2969569587(key_2986349296);
    if ((hc_2986349297[hc_2986349297_Idx] == 0)) {
    hc_2986349297[hc_2986349297_Idx] = 314159265;
    }
    
    if (((t_2986349295.data).length == 0)) {
    result_2986349298 = -1;
    break BeforeRet;
    }
    
    var h_2986349384 = (hc_2986349297[hc_2986349297_Idx] & (t_2986349295.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986349295.data[chckIndx(h_2986349384, 0, (t_2986349295.data).length - 1)].Field0)) break Label2;
          if (((t_2986349295.data[chckIndx(h_2986349384, 0, (t_2986349295.data).length - 1)].Field0 == hc_2986349297[hc_2986349297_Idx]) && (t_2986349295.data[chckIndx(h_2986349384, 0, (t_2986349295.data).length - 1)].Field1 == key_2986349296))) {
          result_2986349298 = h_2986349384;
          break BeforeRet;
          }
          
          h_2986349384 = nextTry_1828716586(h_2986349384, (t_2986349295.data).length - 1);
        }
    };
    result_2986349298 = subInt(-1, h_2986349384);
  };

  return result_2986349298;

}

function exclImpl_2986349286(s_2986349288, key_2986349289) {
          var Temporary5;

  var result_2986349290 = false;

  BeforeRet: {
    var hc_2986349291 = [0];
    var i_2986349650 = rawGet_2986349292(s_2986349288, key_2986349289, hc_2986349291, 0);
    var msk_2986349654 = (s_2986349288.data).length - 1;
    result_2986349290 = true;
    if ((0 <= i_2986349650)) {
    result_2986349290 = false;
    s_2986349288.counter = subInt(s_2986349288.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986349660 = i_2986349650;
          var r_2986349661 = j_2986349660;
          s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)].Field0 = 0;
          s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986349650 = (addInt(i_2986349650, 1) & msk_2986349654);
                if (isEmpty_1828716580(s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986349661 = (s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)].Field0 & msk_2986349654);
                if (!(((((r_2986349661 <= i_2986349650) && (j_2986349660 < r_2986349661)) || ((j_2986349660 < r_2986349661) && (i_2986349650 < j_2986349660))) || ((i_2986349650 < j_2986349660) && (r_2986349661 <= i_2986349650))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)];
          s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)] = genericReset(s_2986349288.data[chckIndx(i_2986349650, 0, (s_2986349288.data).length - 1)], NTI2986344869);
          s_2986349288.data[chckIndx(j_2986349660, 0, (s_2986349288.data).length - 1)] = nimCopy(s_2986349288.data[chckIndx(j_2986349660, 0, (s_2986349288.data).length - 1)], Temporary5, NTI2986344869);
        }
    };
    }
    
  };

  return result_2986349290;

}

function excl_2986349271(s_2986349273, key_2986349274) {
    var _ = exclImpl_2986349286(s_2986349273, key_2986349274);

  
}

function len_2986350405(t_2986350408) {
  var result_2986350409 = 0;

    result_2986350409 = t_2986350408.counter;

  return result_2986350409;

}

function len_2986350322(cache_2986350325) {
  var result_2986350326 = 0;

    result_2986350326 = len_2986350405(cache_2986350325.table);

  return result_2986350326;

}

function mustRehash_2986350546(t_2986350548) {
  var result_2986350549 = false;

    if (!((t_2986350548.counter < (t_2986350548.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986350549 = ((mulInt((t_2986350548.data).length, 2) < mulInt(t_2986350548.counter, 3)) || (subInt((t_2986350548.data).length, t_2986350548.counter) < 4));

  return result_2986350549;

}

function rawGetKnownHC_2986351152(t_2986351155, key_2986351156, hc_2986351157) {
  var result_2986351158 = 0;

  BeforeRet: {
    if (((t_2986351155.data).length == 0)) {
    result_2986351158 = -1;
    break BeforeRet;
    }
    
    var h_2986351243 = (hc_2986351157 & (t_2986351155.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986351155.data[chckIndx(h_2986351243, 0, (t_2986351155.data).length - 1)].Field0)) break Label2;
          if (((t_2986351155.data[chckIndx(h_2986351243, 0, (t_2986351155.data).length - 1)].Field0 == hc_2986351157) && (t_2986351155.data[chckIndx(h_2986351243, 0, (t_2986351155.data).length - 1)].Field1 == key_2986351156))) {
          result_2986351158 = h_2986351243;
          break BeforeRet;
          }
          
          h_2986351243 = nextTry_1828716586(h_2986351243, (t_2986351155.data).length - 1);
        }
    };
    result_2986351158 = subInt(-1, h_2986351243);
  };

  return result_2986351158;

}

function rawInsert_2986351656(s_2986351658, data_2986351659, data_2986351659_Idx, key_2986351660, hc_2986351661, h_2986351662) {
    if (((data_2986351659[data_2986351659_Idx]).length == 0)) {
    var correctSizeHEX60gensym155_2986351745 = slotsNeeded_1828716594(64);
    s_2986351658.counter = 0;
    s_2986351658.data = new Array(chckRange(correctSizeHEX60gensym155_2986351745, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym155_2986351745, 0, 2147483647) ; ++i) { s_2986351658.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986351659[data_2986351659_Idx][chckIndx(h_2986351662, 0, (data_2986351659[data_2986351659_Idx]).length - 1)].Field1 = key_2986351660;
    data_2986351659[data_2986351659_Idx][chckIndx(h_2986351662, 0, (data_2986351659[data_2986351659_Idx]).length - 1)].Field0 = hc_2986351661;

  
}

function enlarge_2986350809(s_2986350811) {
    var n_2986350813 = [];
    n_2986350813 = new Array(chckRange(mulInt((s_2986350811.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986350811.data).length, 2), 0, 2147483647) ; ++i) { n_2986350813[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986350811.data; s_2986350811.data = n_2986350813; n_2986350813 = Temporary1;    Label2: {
      var i_2986350911 = 0;
      var colontmp__2936013073 = 0;
      colontmp__2936013073 = (n_2986350813).length - 1;
      var res_2936013074 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013074 <= colontmp__2936013073)) break Label4;
            i_2986350911 = res_2936013074;
            if (isFilled_1828716583(n_2986350813[chckIndx(i_2986350911, 0, (n_2986350813).length - 1)].Field0)) {
            var j_2986351491 = subInt(-1, rawGetKnownHC_2986351152(s_2986350811, n_2986350813[chckIndx(i_2986350911, 0, (n_2986350813).length - 1)].Field1, n_2986350813[chckIndx(i_2986350911, 0, (n_2986350813).length - 1)].Field0));
            rawInsert_2986351656(s_2986350811, s_2986350811, "data", n_2986350813[chckIndx(i_2986350911, 0, (n_2986350813).length - 1)].Field1, n_2986350813[chckIndx(i_2986350911, 0, (n_2986350813).length - 1)].Field0, j_2986351491);
            }
            
            res_2936013074 = addInt(res_2936013074, 1);
          }
      };
    };

  
}

function incl_2986350430(s_2986350432, key_2986350433) {
    if (((s_2986350432.data).length == 0)) {
    var correctSizeHEX60gensym148_2986350516 = slotsNeeded_1828716594(64);
    s_2986350432.counter = 0;
    s_2986350432.data = new Array(chckRange(correctSizeHEX60gensym148_2986350516, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_2986350516, 0, 2147483647) ; ++i) { s_2986350432.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986350531 = [0];
    var index_2986350545 = rawGet_2986349292(s_2986350432, key_2986350433, hc_2986350531, 0);
    if ((index_2986350545 < 0)) {
    if (mustRehash_2986350546(s_2986350432)) {
    enlarge_2986350809(s_2986350432);
    index_2986350545 = rawGetKnownHC_2986351152(s_2986350432, key_2986350433, hc_2986350531[0]);
    }
    
    rawInsert_2986351656(s_2986350432, s_2986350432, "data", key_2986350433, hc_2986350531[0], subInt(-1, index_2986350545));
    s_2986350432.counter = addInt(s_2986350432.counter, 1);
    }
    

  
}

function del_2986352012(t_2986352015, key_2986352016) {
    var hc_2986352017 = [0];
    var i_2986352024 = rawGet_2986346867(t_2986352015, key_2986352016, hc_2986352017, 0);
    var mskHEX60gensym36_2986352028 = (t_2986352015.data).length - 1;
    if ((0 <= i_2986352024)) {
    t_2986352015.counter = subInt(t_2986352015.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986352035 = i_2986352024;
            var rHEX60gensym36_2986352036 = jHEX60gensym36_2986352035;
            t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)].Field0 = 0;
            t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)].Field1 = null;
            t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986352024 = (addInt(i_2986352024, 1) & mskHEX60gensym36_2986352028);
                  if (isEmpty_1308622877(t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986352036 = (t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)].Field0 & mskHEX60gensym36_2986352028);
                  if (!(((((rHEX60gensym36_2986352036 <= i_2986352024) && (jHEX60gensym36_2986352035 < rHEX60gensym36_2986352036)) || ((jHEX60gensym36_2986352035 < rHEX60gensym36_2986352036) && (i_2986352024 < jHEX60gensym36_2986352035))) || ((i_2986352024 < jHEX60gensym36_2986352035) && (rHEX60gensym36_2986352036 <= i_2986352024))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986352015.data[chckIndx(jHEX60gensym36_2986352035, 0, (t_2986352015.data).length - 1)] = nimCopy(t_2986352015.data[chckIndx(jHEX60gensym36_2986352035, 0, (t_2986352015.data).length - 1)], t_2986352015.data[chckIndx(i_2986352024, 0, (t_2986352015.data).length - 1)], NTI2986344849);
          }
      };
    };
    }
    

  
}

function resize_2986350240(cache_2986350243) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986350243.capacity < len_2986350322(cache_2986350243))) break Label2;
          var t_2986350410 = cache_2986350243.list.tail;
          if (cache_2986350243.recordRemovedKeys) {
          incl_2986350430(cache_2986350243.removedKeys, t_2986350410.value.key);
          }
          
          del_2986352012(cache_2986350243.table, t_2986350410.value.key);
          remove_2986352771(cache_2986350243.list, t_2986350410);
        }
    };

  
}

function addNewNode_2986347342(cache_2986347345, key_2986347346, val_2986347347) {
    var node_2986347368 = newDoublyLinkedNode_2986347350({key: key_2986347346, val: val_2986347347});
    HEX5BHEX5DHEX3D_2986347432(cache_2986347345.table, key_2986347346, node_2986347368);
    prepend_2986349043(cache_2986347345.list, node_2986347368);
    if (cache_2986347345.recordRemovedKeys) {
    excl_2986349271(cache_2986347345.removedKeys, key_2986347346);
    }
    
    resize_2986350240(cache_2986347345);

  
}

function HEX5BHEX5DHEX3D_2986346762(cache_2986346765, key_2986346766, val_2986346767) {
    var node_2986347315 = getOrDefault_2986346857(cache_2986346765.table, key_2986346766, null);
    if ((node_2986347315 == null)) {
    addNewNode_2986347342(cache_2986346765, key_2986346766, val_2986346767);
    }
    else {
      node_2986347315.value.val = val_2986346767;
      remove_2986352771(cache_2986346765.list, node_2986347315);
      prepend_2986349043(cache_2986346765.list, node_2986347315);
    }
    

  
}

function HEX26_3070231137(x_3070231139, y_3070231140) {
  var result_3070231141 = [];

    result_3070231141 = new Array(chckRange(addInt((x_3070231139).length, (y_3070231140).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3070231139).length, (y_3070231140).length), 0, 2147483647) ; ++i) { result_3070231141[i] = 0; }    Label1: {
      var i_3070231159 = 0;
      var colontmp__2936013085 = 0;
      colontmp__2936013085 = subInt((x_3070231139).length, 1);
      var res_2936013086 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013086 <= colontmp__2936013085)) break Label3;
            i_3070231159 = res_2936013086;
            result_3070231141[chckIndx(i_3070231159, 0, (result_3070231141).length - 1)] = x_3070231139[chckIndx(i_3070231159, 0, (x_3070231139).length - 1)];
            res_2936013086 = addInt(res_2936013086, 1);
          }
      };
    };
    Label4: {
      var i_3070231167 = 0;
      var colontmp__2936013089 = 0;
      colontmp__2936013089 = subInt((y_3070231140).length, 1);
      var res_2936013090 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2936013090 <= colontmp__2936013089)) break Label6;
            i_3070231167 = res_2936013090;
            result_3070231141[chckIndx(addInt(i_3070231167, (x_3070231139).length), 0, (result_3070231141).length - 1)] = y_3070231140[chckIndx(i_3070231167, 0, (y_3070231140).length - 1)];
            res_2936013090 = addInt(res_2936013090, 1);
          }
      };
    };

  return result_3070231141;

}

function add_3070231175(x_3070231177, x_3070231177_Idx, y_3070231178) {
    var Temporary1;

    var xl_3070231182 = (x_3070231177[x_3070231177_Idx]).length;
    if (x_3070231177[x_3070231177_Idx].length < (Temporary1 = chckRange(addInt(xl_3070231182, (y_3070231178).length), 0, 2147483647), Temporary1)) { for (var i = x_3070231177[x_3070231177_Idx].length ; i < Temporary1 ; ++i) x_3070231177[x_3070231177_Idx].push(0); }
               else { x_3070231177[x_3070231177_Idx].length = Temporary1; };
    Label2: {
      var i_3070231197 = 0;
      var colontmp__2936013093 = 0;
      colontmp__2936013093 = (y_3070231178).length - 1;
      var res_2936013094 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013094 <= colontmp__2936013093)) break Label4;
            i_3070231197 = res_2936013094;
            x_3070231177[x_3070231177_Idx][chckIndx(addInt(xl_3070231182, i_3070231197), 0, (x_3070231177[x_3070231177_Idx]).length - 1)] = y_3070231178[chckIndx(i_3070231197, 0, (y_3070231178).length - 1)];
            res_2936013094 = addInt(res_2936013094, 1);
          }
      };
    };

  
}

function fingerprint_3070231130(typ_3070231131) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3070231132 = [[]];

    switch (typ_3070231131.kind) {
    case 4:
      var Temporary1 = typ_3070231131;
      if (ConstSet110[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230531)); }
      result_3070231132[0] = nimCopy(null, HEX26_3070231137([typ_3070231131.kind], fingerprint_3070231130(Temporary1.returnType)), NTI3070230983);
      Label2: {
        var param_3070231174 = null;
        var colontmp__2936013080 = [];
        var Temporary3 = typ_3070231131;
        if (ConstSet111[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
        colontmp__2936013080 = Temporary3.paramTypes;
        var i_2936013081 = 0;
        var L_2936013082 = (colontmp__2936013080).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2936013081 < L_2936013082)) break Label5;
              param_3070231174 = colontmp__2936013080[chckIndx(i_2936013081, 0, (colontmp__2936013080).length - 1)];
              add_3070231175(result_3070231132, 0, fingerprint_3070231130(param_3070231174));
              i_2936013081 = addInt(i_2936013081, 1);
              if (!(((colontmp__2936013080).length == L_2936013082))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3070231131;
      if (ConstSet112[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
      result_3070231132[0] = nimCopy(null, [typ_3070231131.kind, Temporary6.open], NTI3003121997);
      break;
    default: 
      result_3070231132[0] = nimCopy(null, [typ_3070231131.kind], NTI3070230977);
      break;
    }

  return result_3070231132[0];

}

function initDoublyLinkedList_2986353238() {
  var result_2986353240 = ({head: null, tail: null});

  return result_2986353240;

}

function initTable_2986353244(initialSize_2986353247) {
  var result_2986353248 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_2986353250 = slotsNeeded_1308622891(chckRange(initialSize_2986353247, 0, 2147483647));
    result_2986353248.counter = 0;
    result_2986353248.data = new Array(chckRange(correctSizeHEX60gensym156_2986353250, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_2986353250, 0, 2147483647) ; ++i) { result_2986353248.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986353248;

}

function newLruCache_2986353228(capacity_2986353231, recordRemovedKeys_2986353232) {
  var result_2986353233 = null;

    result_2986353233 = {capacity: capacity_2986353231, list: initDoublyLinkedList_2986353238(), table: initTable_2986353244(correctSize_3019898901(capacity_2986353231)), recordRemovedKeys: recordRemovedKeys_2986353232, removedKeys: ({data: [], counter: 0})};

  return result_2986353233;

}

function newCache_2986353223(capacity_2986353226) {
  var result_2986353227 = null;

    result_2986353227 = newLruCache_2986353228(capacity_2986353226, false);

  return result_2986353227;

}

function init_2986353218(result_2986353221, result_2986353221_Idx, capacity_2986353222) {
    result_2986353221[result_2986353221_Idx] = newCache_2986353223(capacity_2986353222);

  
}

function errorValue_3070231215() {
  var result_3070231216 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231216 = nimCopy(result_3070231216, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231216;

}

function HEX5BHEX5D_3120563989(s_3120563993, x_3120563994) {
  var result_3120563995 = [];

    var a_3120563997 = x_3120563994.a;
    var L_3120564003 = addInt(subInt(subInt((s_3120563993).length, x_3120563994.b), a_3120563997), 1);
    result_3120563995 = new Array(chckRange(L_3120564003, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3120564003, 0, 2147483647) ; ++i) { result_3120563995[i] = null; }    Label1: {
      var i_3120564012 = 0;
      var i_2936013104 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013104 < L_3120564003)) break Label3;
            i_3120564012 = i_2936013104;
            result_3120563995[chckIndx(i_3120564012, 0, (result_3120563995).length - 1)] = s_3120563993[chckIndx(addInt(i_3120564012, a_3120563997), 0, (s_3120563993).length - 1)];
            i_2936013104 = addInt(i_2936013104, 1);
          }
      };
    };

  return result_3120563995;

}

function formatValue_3070231363(result_3070231365, result_3070231365_Idx, value_3070231366, specifier_3070231367) {
    formatValue_721420459(result_3070231365, result_3070231365_Idx, HEX24_2969569239(value_3070231366), specifier_3070231367);

  
}

function hash_3070231277(x_3070231279) {
  var result_3070231280 = 0;

    result_3070231280 = hashWangYi1_1325400244(x_3070231279);

  return result_3070231280;

}

function hash_3070231039(x_3070231041) {
  var result_3070231042 = 0;

    result_3070231042 = hashWangYi1_1325400244(x_3070231041);

  return result_3070231042;

}

function hash_3070231050(x_3070231052) {
  var result_3070231053 = 0;

    Label1: {
      var a_3070231067 = null;
      var i_2936013121 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013121 < (x_3070231052).length)) break Label3;
            a_3070231067 = x_3070231052[chckIndx(i_2936013121, 0, (x_3070231052).length - 1)];
            result_3070231053 = HEX21HEX26_1325400067(result_3070231053, hash_3070231036(a_3070231067));
            i_2936013121 = addInt(i_2936013121, 1);
          }
      };
    };
    result_3070231053 = HEX21HEX24_1325400082(result_3070231053);

  return result_3070231053;

}

function hash_2717911611(x_2717911613) {
  var result_2717911614 = 0;

    result_2717911614 = hashWangYi1_1325400244((x_2717911613 ? 1 : 0));

  return result_2717911614;

}

function hash_3070231036(typ_3070231037) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231038 = 0;

  BeforeRet: {
    switch (typ_3070231037.kind) {
    case 4:
      var Temporary2 = typ_3070231037;
      if (ConstSet118[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      var Temporary3 = typ_3070231037;
      if (ConstSet119[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      Temporary1 = ((hash_3070231039(typ_3070231037.kind) ^ hash_3070231036(Temporary2.returnType)) ^ hash_3070231050(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3070231037;
      if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
      Temporary1 = (hash_3070231039(typ_3070231037.kind) ^ hash_2717911611(Temporary4.open));
      break;
    default: 
      result_3070231038 = hash_3070231039(typ_3070231037.kind);
      break BeforeRet;
      break;
    }
    result_3070231038 = Temporary1;
  };

  return result_3070231038;

}

function hash_3070231274(value_3070231275) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231276 = 0;

  BeforeRet: {
    switch (value_3070231275.kind) {
    case 0:
      result_3070231276 = hash_3070231277(value_3070231275.kind);
      break BeforeRet;
      break;
    case 1:
      result_3070231276 = hash_3070231277(value_3070231275.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3070231275;
      if (ConstSet115[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231276 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3070231275;
      if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231276 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3070231276 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231275;
      if (ConstSet117[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      result_3070231276 = hash_2969569587(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3070231275;
      if (ConstSet121[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231276 = hash_3070231036(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3070231276;

}

function hash_3070231508(x_3070231510) {
  var result_3070231511 = 0;

    Label1: {
      var a_3070231525 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013117 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013117 < (x_3070231510).length)) break Label3;
            a_3070231525 = x_3070231510[chckIndx(i_2936013117, 0, (x_3070231510).length - 1)];
            result_3070231511 = HEX21HEX26_1325400067(result_3070231511, hash_3070231274(a_3070231525));
            i_2936013117 = addInt(i_2936013117, 1);
          }
      };
    };
    result_3070231511 = HEX21HEX24_1325400082(result_3070231511);

  return result_3070231511;

}

function hash_3070231526(x_3070231528) {
  var result_3070231529 = 0;

    result_3070231529 = HEX21HEX26_1325400067(result_3070231529, hash_1325400236(x_3070231528.val));
    result_3070231529 = HEX21HEX26_1325400067(result_3070231529, hash_2717911611(x_3070231528.has));
    result_3070231529 = HEX21HEX24_1325400082(result_3070231529);

  return result_3070231529;

}

function hash_3070231505(fec_3070231506) {
  var result_3070231507 = 0;

    result_3070231507 = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_2969569587(fec_3070231506.node), hash_3070231508(fec_3070231506.arguments)), hash_3070231526(fec_3070231506.maxLoopIterations));
    result_3070231507 = HEX21HEX24_1325400082(result_3070231507);

  return result_3070231507;

}

function HEX3DHEX3D_3070231566(x_3070231568, y_3070231569) {
  var result_3070231570 = false;

  BeforeRet: {
    var sameObject_3070231577 = false;
    sameObject_3070231577 = x_3070231568 === y_3070231569
    if (sameObject_3070231577) {
    result_3070231570 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070231568).length == (y_3070231569).length))) {
    result_3070231570 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070231591 = 0;
      var colontmp__2936013124 = 0;
      colontmp__2936013124 = subInt((x_3070231568).length, 1);
      var res_2936013125 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013125 <= colontmp__2936013124)) break Label3;
            i_3070231591 = res_2936013125;
            if (!(HEX3DHEX3D_3070231294(x_3070231568[chckIndx(i_3070231591, 0, (x_3070231568).length - 1)], y_3070231569[chckIndx(i_3070231591, 0, (y_3070231569).length - 1)]))) {
            result_3070231570 = false;
            break BeforeRet;
            }
            
            res_2936013125 = addInt(res_2936013125, 1);
          }
      };
    };
    result_3070231570 = true;
    break BeforeRet;
  };

  return result_3070231570;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3070231654(a_3070231656, b_3070231657) {
  var result_3070231658 = false;

    result_3070231658 = (((isSome_1191185117(a_3070231656) && isSome_1191185117(b_3070231657)) && (a_3070231656.val == b_3070231657.val)) || (isNone_1191185194(a_3070231656) && isNone_1191185194(b_3070231657)));

  return result_3070231658;

}

function HEX3DHEX3D_3070231549(a_3070231550, b_3070231551) {
  var result_3070231552 = false;

  BeforeRet: {
    if ((a_3070231550 == null)) {
    result_3070231552 = (b_3070231551 == null);
    break BeforeRet;
    }
    
    if ((b_3070231551 == null)) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231550.node == b_3070231551.node))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070231566(a_3070231550.arguments, b_3070231551.arguments))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070231654(a_3070231550.maxLoopIterations, b_3070231551.maxLoopIterations))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    result_3070231552 = true;
    break BeforeRet;
  };

  return result_3070231552;

}

function getItem_2986411410(selfHEX60gensym84_2986411411) {
  var result_2986411412 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym84_2986411411.id, null_2046820612)) {
    selfHEX60gensym84_2986411411.id = nimCopy(selfHEX60gensym84_2986411411.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym84_2986411411.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936013127 = nimCopy(null, selfHEX60gensym84_2986411411.id, NTI2046820355);
    var colontmp__2936013128 = 3;
    result_2986411412 = nimCopy(result_2986411412, {Field0: nimCopy(null, colontmp__2936013127, NTI2046820355), Field1: colontmp__2936013128}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986411412;

}

function rawGet_2986378646(t_2986378649, key_2986378650, hc_2986378651, hc_2986378651_Idx) {
  var result_2986378652 = 0;

  BeforeRet: {
    hc_2986378651[hc_2986378651_Idx] = hash_2986345496(key_2986378650);
    if ((hc_2986378651[hc_2986378651_Idx] == 0)) {
    hc_2986378651[hc_2986378651_Idx] = 314159265;
    }
    
    if (((t_2986378649.data).length == 0)) {
    result_2986378652 = -1;
    break BeforeRet;
    }
    
    var h_2986378741 = (hc_2986378651[hc_2986378651_Idx] & (t_2986378649.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986378649.data[chckIndx(h_2986378741, 0, (t_2986378649.data).length - 1)].Field0)) break Label2;
          if (((t_2986378649.data[chckIndx(h_2986378741, 0, (t_2986378649.data).length - 1)].Field0 == hc_2986378651[hc_2986378651_Idx]) && HEX3DHEX3D_2986345833(t_2986378649.data[chckIndx(h_2986378741, 0, (t_2986378649.data).length - 1)].Field1, key_2986378650))) {
          result_2986378652 = h_2986378741;
          break BeforeRet;
          }
          
          h_2986378741 = nextTry_1308622883(h_2986378741, (t_2986378649.data).length - 1);
        }
    };
    result_2986378652 = subInt(-1, h_2986378741);
  };

  return result_2986378652;

}

function getOrDefault_2986411661(t_2986411664, key_2986411665, default_2986411666) {
    var Temporary1;

  var result_2986411667 = null;

    var hcHEX60gensym447_2986411670 = [0];
    var indexHEX60gensym447_2986411677 = rawGet_2986378646(t_2986411664, key_2986411665, hcHEX60gensym447_2986411670, 0);
    if ((0 <= indexHEX60gensym447_2986411677)) {
    Temporary1 = t_2986411664.data[chckIndx(indexHEX60gensym447_2986411677, 0, (t_2986411664.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986411666;
    }
    
    result_2986411667 = Temporary1;

  return result_2986411667;

}

function newDoublyLinkedNode_2986411793(value_2986411795) {
  var result_2986411796 = null;

    result_2986411796 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986411796.value = nimCopy(result_2986411796.value, value_2986411795, NTI2986344711);

  return result_2986411796;

}

function mustRehash_2986412134(t_2986412136) {
  var result_2986412137 = false;

    if (!((t_2986412136.counter < (t_2986412136.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986412137 = ((mulInt((t_2986412136.data).length, 2) < mulInt(t_2986412136.counter, 3)) || (subInt((t_2986412136.data).length, t_2986412136.counter) < 4));

  return result_2986412137;

}

function rawInsert_2986412827(t_2986412831, data_2986412832, data_2986412832_Idx, key_2986412833, val_2986412834, hc_2986412835, h_2986412836) {
    data_2986412832[data_2986412832_Idx][chckIndx(h_2986412836, 0, (data_2986412832[data_2986412832_Idx]).length - 1)].Field1 = nimCopy(data_2986412832[data_2986412832_Idx][chckIndx(h_2986412836, 0, (data_2986412832[data_2986412832_Idx]).length - 1)].Field1, key_2986412833, NTI3003121689);
    data_2986412832[data_2986412832_Idx][chckIndx(h_2986412836, 0, (data_2986412832[data_2986412832_Idx]).length - 1)].Field2 = val_2986412834;
    data_2986412832[data_2986412832_Idx][chckIndx(h_2986412836, 0, (data_2986412832[data_2986412832_Idx]).length - 1)].Field0 = hc_2986412835;

  
}

function enlarge_2986412391(t_2986412394) {
    var n_2986412397 = [];
    n_2986412397 = new Array(chckRange(mulInt((t_2986412394.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986412394.data).length, 2), 0, 2147483647) ; ++i) { n_2986412397[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986412394.data; t_2986412394.data = n_2986412397; n_2986412397 = Temporary1;    Label2: {
      var i_2986412495 = 0;
      var colontmp__2936013132 = 0;
      colontmp__2936013132 = (n_2986412397).length - 1;
      var res_2936013133 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013133 <= colontmp__2936013132)) break Label4;
            i_2986412495 = res_2936013133;
            var eh_2986412576 = n_2986412397[chckIndx(i_2986412495, 0, (n_2986412397).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986412576)) {
            var j_2986412580 = (eh_2986412576 & (t_2986412394.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986412394.data[chckIndx(j_2986412580, 0, (t_2986412394.data).length - 1)].Field0)) break Label6;
                  j_2986412580 = nextTry_1308622883(j_2986412580, (t_2986412394.data).length - 1);
                }
            };
            rawInsert_2986412827(t_2986412394, t_2986412394, "data", n_2986412397[chckIndx(i_2986412495, 0, (n_2986412397).length - 1)].Field1, n_2986412397[chckIndx(i_2986412495, 0, (n_2986412397).length - 1)].Field2, eh_2986412576, j_2986412580);
            }
            
            res_2936013133 = addInt(res_2936013133, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986413077(t_2986413080, key_2986413081, hc_2986413082) {
  var result_2986413083 = 0;

  BeforeRet: {
    if (((t_2986413080.data).length == 0)) {
    result_2986413083 = -1;
    break BeforeRet;
    }
    
    var h_2986413168 = (hc_2986413082 & (t_2986413080.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986413080.data[chckIndx(h_2986413168, 0, (t_2986413080.data).length - 1)].Field0)) break Label2;
          if (((t_2986413080.data[chckIndx(h_2986413168, 0, (t_2986413080.data).length - 1)].Field0 == hc_2986413082) && HEX3DHEX3D_2986345833(t_2986413080.data[chckIndx(h_2986413168, 0, (t_2986413080.data).length - 1)].Field1, key_2986413081))) {
          result_2986413083 = h_2986413168;
          break BeforeRet;
          }
          
          h_2986413168 = nextTry_1308622883(h_2986413168, (t_2986413080.data).length - 1);
        }
    };
    result_2986413083 = subInt(-1, h_2986413168);
  };

  return result_2986413083;

}

function HEX5BHEX5DHEX3D_2986411866(t_2986411869, key_2986411870, val_2986411871) {
    if (((t_2986411869.data).length == 0)) {
    var correctSizeHEX60gensym450_2986411954 = slotsNeeded_1308622891(32);
    t_2986411869.counter = 0;
    t_2986411869.data = new Array(chckRange(correctSizeHEX60gensym450_2986411954, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym450_2986411954, 0, 2147483647) ; ++i) { t_2986411869.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986411959 = [0];
    var index_2986411966 = rawGet_2986378646(t_2986411869, key_2986411870, hc_2986411959, 0);
    if ((0 <= index_2986411966)) {
    t_2986411869.data[chckIndx(index_2986411966, 0, (t_2986411869.data).length - 1)].Field2 = val_2986411871;
    }
    else {
      if (((t_2986411869.data).length == 0)) {
      var correctSizeHEX60gensym453_2986412129 = slotsNeeded_1308622891(32);
      t_2986411869.counter = 0;
      t_2986411869.data = new Array(chckRange(correctSizeHEX60gensym453_2986412129, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym453_2986412129, 0, 2147483647) ; ++i) { t_2986411869.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986412134(t_2986411869)) {
      enlarge_2986412391(t_2986411869);
      index_2986411966 = rawGetKnownHC_2986413077(t_2986411869, key_2986411870, hc_2986411959[0]);
      }
      
      index_2986411966 = subInt(-1, index_2986411966);
      rawInsert_2986412827(t_2986411869, t_2986411869, "data", key_2986411870, val_2986411871, hc_2986411959[0], index_2986411966);
      t_2986411869.counter = addInt(t_2986411869.counter, 1);
    }
    

  
}

function prepend_2986379626(L_2986379628, n_2986379629) {
    n_2986379629.prev = null;
    n_2986379629.next = L_2986379628.head;
    if (!((L_2986379628.head == null))) {
    if (!((L_2986379628.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986379628.head.prev = n_2986379629;
    }
    
    L_2986379628.head = n_2986379629;
    if ((L_2986379628.tail == null)) {
    L_2986379628.tail = n_2986379629;
    }
    

  
}

function rawGet_2986400848(t_2986400851, key_2986400852, hc_2986400853, hc_2986400853_Idx) {
  var result_2986400854 = 0;

  BeforeRet: {
    hc_2986400853[hc_2986400853_Idx] = hash_2986345496(key_2986400852);
    if ((hc_2986400853[hc_2986400853_Idx] == 0)) {
    hc_2986400853[hc_2986400853_Idx] = 314159265;
    }
    
    if (((t_2986400851.data).length == 0)) {
    result_2986400854 = -1;
    break BeforeRet;
    }
    
    var h_2986400943 = (hc_2986400853[hc_2986400853_Idx] & (t_2986400851.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986400851.data[chckIndx(h_2986400943, 0, (t_2986400851.data).length - 1)].Field0)) break Label2;
          if (((t_2986400851.data[chckIndx(h_2986400943, 0, (t_2986400851.data).length - 1)].Field0 == hc_2986400853[hc_2986400853_Idx]) && HEX3DHEX3D_2986345833(t_2986400851.data[chckIndx(h_2986400943, 0, (t_2986400851.data).length - 1)].Field1, key_2986400852))) {
          result_2986400854 = h_2986400943;
          break BeforeRet;
          }
          
          h_2986400943 = nextTry_1828716586(h_2986400943, (t_2986400851.data).length - 1);
        }
    };
    result_2986400854 = subInt(-1, h_2986400943);
  };

  return result_2986400854;

}

function exclImpl_2986400842(s_2986400844, key_2986400845) {
          var Temporary5;

  var result_2986400846 = false;

  BeforeRet: {
    var hc_2986400847 = [0];
    var i_2986401209 = rawGet_2986400848(s_2986400844, key_2986400845, hc_2986400847, 0);
    var msk_2986401213 = (s_2986400844.data).length - 1;
    result_2986400846 = true;
    if ((0 <= i_2986401209)) {
    result_2986400846 = false;
    s_2986400844.counter = subInt(s_2986400844.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986401219 = i_2986401209;
          var r_2986401220 = j_2986401219;
          s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)].Field0 = 0;
          s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)].Field1 = nimCopy(s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986401209 = (addInt(i_2986401209, 1) & msk_2986401213);
                if (isEmpty_1828716580(s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986401220 = (s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)].Field0 & msk_2986401213);
                if (!(((((r_2986401220 <= i_2986401209) && (j_2986401219 < r_2986401220)) || ((j_2986401219 < r_2986401220) && (i_2986401209 < j_2986401219))) || ((i_2986401209 < j_2986401219) && (r_2986401220 <= i_2986401209))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)];
          s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)] = genericReset(s_2986400844.data[chckIndx(i_2986401209, 0, (s_2986400844.data).length - 1)], NTI2986344566);
          s_2986400844.data[chckIndx(j_2986401219, 0, (s_2986400844.data).length - 1)] = nimCopy(s_2986400844.data[chckIndx(j_2986401219, 0, (s_2986400844.data).length - 1)], Temporary5, NTI2986344566);
        }
    };
    }
    
  };

  return result_2986400846;

}

function excl_2986400827(s_2986400829, key_2986400830) {
    var _ = exclImpl_2986400842(s_2986400829, key_2986400830);

  
}

function len_2986413688(t_2986413691) {
  var result_2986413692 = 0;

    result_2986413692 = t_2986413691.counter;

  return result_2986413692;

}

function len_2986413605(cache_2986413608) {
  var result_2986413609 = 0;

    result_2986413609 = len_2986413688(cache_2986413608.table);

  return result_2986413609;

}

function mustRehash_2986402114(t_2986402116) {
  var result_2986402117 = false;

    if (!((t_2986402116.counter < (t_2986402116.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986402117 = ((mulInt((t_2986402116.data).length, 2) < mulInt(t_2986402116.counter, 3)) || (subInt((t_2986402116.data).length, t_2986402116.counter) < 4));

  return result_2986402117;

}

function rawGetKnownHC_2986402720(t_2986402723, key_2986402724, hc_2986402725) {
  var result_2986402726 = 0;

  BeforeRet: {
    if (((t_2986402723.data).length == 0)) {
    result_2986402726 = -1;
    break BeforeRet;
    }
    
    var h_2986402811 = (hc_2986402725 & (t_2986402723.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986402723.data[chckIndx(h_2986402811, 0, (t_2986402723.data).length - 1)].Field0)) break Label2;
          if (((t_2986402723.data[chckIndx(h_2986402811, 0, (t_2986402723.data).length - 1)].Field0 == hc_2986402725) && HEX3DHEX3D_2986345833(t_2986402723.data[chckIndx(h_2986402811, 0, (t_2986402723.data).length - 1)].Field1, key_2986402724))) {
          result_2986402726 = h_2986402811;
          break BeforeRet;
          }
          
          h_2986402811 = nextTry_1828716586(h_2986402811, (t_2986402723.data).length - 1);
        }
    };
    result_2986402726 = subInt(-1, h_2986402811);
  };

  return result_2986402726;

}

function rawInsert_2986403224(s_2986403226, data_2986403227, data_2986403227_Idx, key_2986403228, hc_2986403229, h_2986403230) {
    if (((data_2986403227[data_2986403227_Idx]).length == 0)) {
    var correctSizeHEX60gensym403_2986403313 = slotsNeeded_1828716594(64);
    s_2986403226.counter = 0;
    s_2986403226.data = new Array(chckRange(correctSizeHEX60gensym403_2986403313, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_2986403313, 0, 2147483647) ; ++i) { s_2986403226.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    data_2986403227[data_2986403227_Idx][chckIndx(h_2986403230, 0, (data_2986403227[data_2986403227_Idx]).length - 1)].Field1 = nimCopy(data_2986403227[data_2986403227_Idx][chckIndx(h_2986403230, 0, (data_2986403227[data_2986403227_Idx]).length - 1)].Field1, key_2986403228, NTI3003121689);
    data_2986403227[data_2986403227_Idx][chckIndx(h_2986403230, 0, (data_2986403227[data_2986403227_Idx]).length - 1)].Field0 = hc_2986403229;

  
}

function enlarge_2986402377(s_2986402379) {
    var n_2986402381 = [];
    n_2986402381 = new Array(chckRange(mulInt((s_2986402379.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986402379.data).length, 2), 0, 2147483647) ; ++i) { n_2986402381[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    var Temporary1 = s_2986402379.data; s_2986402379.data = n_2986402381; n_2986402381 = Temporary1;    Label2: {
      var i_2986402479 = 0;
      var colontmp__2936013141 = 0;
      colontmp__2936013141 = (n_2986402381).length - 1;
      var res_2936013142 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013142 <= colontmp__2936013141)) break Label4;
            i_2986402479 = res_2936013142;
            if (isFilled_1828716583(n_2986402381[chckIndx(i_2986402479, 0, (n_2986402381).length - 1)].Field0)) {
            var j_2986403059 = subInt(-1, rawGetKnownHC_2986402720(s_2986402379, n_2986402381[chckIndx(i_2986402479, 0, (n_2986402381).length - 1)].Field1, n_2986402381[chckIndx(i_2986402479, 0, (n_2986402381).length - 1)].Field0));
            rawInsert_2986403224(s_2986402379, s_2986402379, "data", n_2986402381[chckIndx(i_2986402479, 0, (n_2986402381).length - 1)].Field1, n_2986402381[chckIndx(i_2986402479, 0, (n_2986402381).length - 1)].Field0, j_2986403059);
            }
            
            res_2936013142 = addInt(res_2936013142, 1);
          }
      };
    };

  
}

function incl_2986401998(s_2986402000, key_2986402001) {
    if (((s_2986402000.data).length == 0)) {
    var correctSizeHEX60gensym396_2986402084 = slotsNeeded_1828716594(64);
    s_2986402000.counter = 0;
    s_2986402000.data = new Array(chckRange(correctSizeHEX60gensym396_2986402084, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym396_2986402084, 0, 2147483647) ; ++i) { s_2986402000.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    var hc_2986402099 = [0];
    var index_2986402113 = rawGet_2986400848(s_2986402000, key_2986402001, hc_2986402099, 0);
    if ((index_2986402113 < 0)) {
    if (mustRehash_2986402114(s_2986402000)) {
    enlarge_2986402377(s_2986402000);
    index_2986402113 = rawGetKnownHC_2986402720(s_2986402000, key_2986402001, hc_2986402099[0]);
    }
    
    rawInsert_2986403224(s_2986402000, s_2986402000, "data", key_2986402001, hc_2986402099[0], subInt(-1, index_2986402113));
    s_2986402000.counter = addInt(s_2986402000.counter, 1);
    }
    

  
}

function del_2986413780(t_2986413783, key_2986413784) {
    var hc_2986413785 = [0];
    var i_2986413792 = rawGet_2986378646(t_2986413783, key_2986413784, hc_2986413785, 0);
    var mskHEX60gensym36_2986413796 = (t_2986413783.data).length - 1;
    if ((0 <= i_2986413792)) {
    t_2986413783.counter = subInt(t_2986413783.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986413803 = i_2986413792;
            var rHEX60gensym36_2986413804 = jHEX60gensym36_2986413803;
            t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field0 = 0;
            t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field1 = nimCopy(t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986413792 = (addInt(i_2986413792, 1) & mskHEX60gensym36_2986413796);
                  if (isEmpty_1308622877(t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986413804 = (t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)].Field0 & mskHEX60gensym36_2986413796);
                  if (!(((((rHEX60gensym36_2986413804 <= i_2986413792) && (jHEX60gensym36_2986413803 < rHEX60gensym36_2986413804)) || ((jHEX60gensym36_2986413803 < rHEX60gensym36_2986413804) && (i_2986413792 < jHEX60gensym36_2986413803))) || ((i_2986413792 < jHEX60gensym36_2986413803) && (rHEX60gensym36_2986413804 <= i_2986413792))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986413783.data[chckIndx(jHEX60gensym36_2986413803, 0, (t_2986413783.data).length - 1)] = nimCopy(t_2986413783.data[chckIndx(jHEX60gensym36_2986413803, 0, (t_2986413783.data).length - 1)], t_2986413783.data[chckIndx(i_2986413792, 0, (t_2986413783.data).length - 1)], NTI2986344747);
          }
      };
    };
    }
    

  
}

function remove_2986379298(L_2986379300, n_2986379301) {
    if ((n_2986379301 == L_2986379300.tail)) {
    L_2986379300.tail = n_2986379301.prev;
    }
    
    if ((n_2986379301 == L_2986379300.head)) {
    L_2986379300.head = n_2986379301.next;
    }
    
    if (!((n_2986379301.next == null))) {
    n_2986379301.next.prev = n_2986379301.prev;
    }
    
    if (!((n_2986379301.prev == null))) {
    n_2986379301.prev.next = n_2986379301.next;
    }
    

  
}

function resize_2986413523(cache_2986413526) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986413526.capacity < len_2986413605(cache_2986413526))) break Label2;
          var t_2986413693 = cache_2986413526.list.tail;
          if (cache_2986413526.recordRemovedKeys) {
          incl_2986401998(cache_2986413526.removedKeys, t_2986413693.value.key);
          }
          
          del_2986413780(cache_2986413526.table, t_2986413693.value.key);
          remove_2986379298(cache_2986413526.list, t_2986413693);
        }
    };

  
}

function addNewNode_2986411785(cache_2986411788, key_2986411789, val_2986411790) {
    var node_2986411802 = newDoublyLinkedNode_2986411793({key: nimCopy(null, key_2986411789, NTI3003121689), val: val_2986411790});
    HEX5BHEX5DHEX3D_2986411866(cache_2986411788.table, key_2986411789, node_2986411802);
    prepend_2986379626(cache_2986411788.list, node_2986411802);
    if (cache_2986411788.recordRemovedKeys) {
    excl_2986400827(cache_2986411788.removedKeys, key_2986411789);
    }
    
    resize_2986413523(cache_2986411788);

  
}

function HEX5BHEX5DHEX3D_2986411566(cache_2986411569, key_2986411570, val_2986411571) {
    var node_2986411758 = getOrDefault_2986411661(cache_2986411569.table, key_2986411570, null);
    if ((node_2986411758 == null)) {
    addNewNode_2986411785(cache_2986411569, key_2986411570, val_2986411571);
    }
    else {
      node_2986411758.value.val = val_2986411571;
      remove_2986379298(cache_2986411569.list, node_2986411758);
      prepend_2986379626(cache_2986411569.list, node_2986411758);
    }
    

  
}

function getOrCreateFunctionExecutionContext_2986411419(ctxHEX60gensym85_2986411420, dataHEX60gensym85_2986411421) {
  var result_2986411422 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_2986411431 = null;
      Label2: {
        var node_2936013112 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936013113 = ctxHEX60gensym85_2986411420.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936013113 == null))) break Label4;
              node_2936013112 = nimCopy(node_2936013112, it_2936013113.value, NTI2986344711);
              existingHEX60gensym85_2986411431 = node_2936013112.val;
              if (((hash_3070231505(existingHEX60gensym85_2986411431) == hash_3070231505(dataHEX60gensym85_2986411421)) && HEX3DHEX3D_3070231549(existingHEX60gensym85_2986411431, dataHEX60gensym85_2986411421))) {
              result_2986411422 = existingHEX60gensym85_2986411431;
              break BeforeRet;
              }
              
              it_2936013113 = it_2936013113.next;
            }
        };
      };
    };
    var itemHEX60gensym85_2986411432 = getItem_2986411410(dataHEX60gensym85_2986411421);
    var keyHEX60gensym85_2986411433 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_2986411432, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym85_2986411420.depGraph.changed, keyHEX60gensym85_2986411433, ctxHEX60gensym85_2986411420.depGraph.revision);
    HEX5BHEX5DHEX3D_2986411566(ctxHEX60gensym85_2986411420.itemsFunctionExecutionContext, itemHEX60gensym85_2986411432, dataHEX60gensym85_2986411421);
    result_2986411422 = dataHEX60gensym85_2986411421;
    break BeforeRet;
  };

  return result_2986411422;

}

function rawGet_2986380018(t_2986380021, key_2986380022, hc_2986380023, hc_2986380023_Idx) {
  var result_2986380024 = 0;

  BeforeRet: {
    hc_2986380023[hc_2986380023_Idx] = hash_3070231505(key_2986380022);
    if ((hc_2986380023[hc_2986380023_Idx] == 0)) {
    hc_2986380023[hc_2986380023_Idx] = 314159265;
    }
    
    if (((t_2986380021.data).length == 0)) {
    result_2986380024 = -1;
    break BeforeRet;
    }
    
    var h_2986380110 = (hc_2986380023[hc_2986380023_Idx] & (t_2986380021.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986380021.data[chckIndx(h_2986380110, 0, (t_2986380021.data).length - 1)].Field0)) break Label2;
          if (((t_2986380021.data[chckIndx(h_2986380110, 0, (t_2986380021.data).length - 1)].Field0 == hc_2986380023[hc_2986380023_Idx]) && HEX3DHEX3D_3070231549(t_2986380021.data[chckIndx(h_2986380110, 0, (t_2986380021.data).length - 1)].Field1, key_2986380022))) {
          result_2986380024 = h_2986380110;
          break BeforeRet;
          }
          
          h_2986380110 = nextTry_1308622883(h_2986380110, (t_2986380021.data).length - 1);
        }
    };
    result_2986380024 = subInt(-1, h_2986380110);
  };

  return result_2986380024;

}

function hasKey_2986437463(t_2986437466, key_2986437467) {
  var result_2986437468 = false;

    var hc_2986437469 = [0];
    result_2986437468 = (0 <= rawGet_2986380018(t_2986437466, key_2986437467, hc_2986437469, 0));

  return result_2986437468;

}

function contains_2986437457(t_2986437460, key_2986437461) {
  var result_2986437462 = false;

  BeforeRet: {
    result_2986437462 = hasKey_2986437463(t_2986437460, key_2986437461);
    break BeforeRet;
  };

  return result_2986437462;

}

function contains_2986437363(cache_2986437366, key_2986437367) {
  var result_2986437368 = false;

    result_2986437368 = contains_2986437457(cache_2986437366.table, key_2986437367);

  return result_2986437368;

}

function addQuoted_3070231411(s_3070231413, s_3070231413_Idx, x_3070231414) {
    s_3070231413[s_3070231413_Idx].push.apply(s_3070231413[s_3070231413_Idx], HEX24_3070231271(x_3070231414));;

  
}

function collectionToString_3070231377(x_3070231379, prefix_3070231380, separator_3070231381, suffix_3070231382) {
  var result_3070231383 = [[]];

    result_3070231383[0] = nimCopy(null, prefix_3070231380, NTI33554449);
    var firstElement_3070231384 = true;
    Label1: {
      var value_3070231407 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013150 = 0;
      var L_2936013151 = (x_3070231379).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013150 < L_2936013151)) break Label3;
            value_3070231407 = x_3070231379[i_2936013150];
            if (firstElement_3070231384) {
            firstElement_3070231384 = false;
            }
            else {
            result_3070231383[0].push.apply(result_3070231383[0], separator_3070231381);;
            }
            
            addQuoted_3070231411(result_3070231383, 0, value_3070231407);
            i_2936013150 += 1;
            if (!(((x_3070231379).length == L_2936013151))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070231383[0].push.apply(result_3070231383[0], suffix_3070231382);;

  return result_3070231383[0];

}

function HEX24_3070231373(x_3070231375) {
  var result_3070231376 = [];

    result_3070231376 = nimCopy(null, collectionToString_3070231377(x_3070231375, [64,91], [44,32], [93]), NTI33554449);

  return result_3070231376;

}

function formatValue_3070231368(result_3070231370, result_3070231370_Idx, value_3070231371, specifier_3070231372) {
    formatValue_721420459(result_3070231370, result_3070231370_Idx, HEX24_3070231373(value_3070231371), specifier_3070231372);

  
}

function HEX24_3070231486(self_3070231488) {
  var result_3070231489 = [[]];

    if (isSome_1191185117(self_3070231488)) {
    result_3070231489[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3070231489, 0, self_3070231488.val);
    result_3070231489[0].push.apply(result_3070231489[0], [41]);;
    }
    else {
      result_3070231489[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3070231489[0];

}

function formatValue_3070231435(result_3070231437, result_3070231437_Idx, value_3070231438, specifier_3070231439) {
    formatValue_721420459(result_3070231437, result_3070231437_Idx, HEX24_3070231486(value_3070231438), specifier_3070231439);

  
}

function HEX24_3070231355(fec_3070231356) {
  var result_3070231357 = [];

  BeforeRet: {
    var fmtRes_3070231362 = [mnewString(0)];
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [67,97,108,108,32]);;
    formatValue_3070231363(fmtRes_3070231362, 0, fec_3070231356.node, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [40]);;
    formatValue_3070231368(fmtRes_3070231362, 0, fec_3070231356.arguments, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3070231435(fmtRes_3070231362, 0, fec_3070231356.maxLoopIterations, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [41]);;
    result_3070231357 = nimCopy(null, fmtRes_3070231362[0], NTI33554449);
    break BeforeRet;
  };

  return result_3070231357;

}

function raiseKeyError_2986437736(key_2986437738) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070231355(key_2986437738) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986437642(t_2986437645, key_2986437646) {
  var result_2986437647 = null;
  var result_2986437647_Idx = 0;

    var hcHEX60gensym22_2986437648 = [0];
    var indexHEX60gensym22_2986437655 = rawGet_2986380018(t_2986437645, key_2986437646, hcHEX60gensym22_2986437648, 0);
    if ((0 <= indexHEX60gensym22_2986437655)) {
    result_2986437647 = t_2986437645.data[chckIndx(indexHEX60gensym22_2986437655, 0, (t_2986437645.data).length - 1)]; result_2986437647_Idx = "Field2";
    }
    else {
    raiseKeyError_2986437736(key_2986437646);
    }
    

  return [result_2986437647, result_2986437647_Idx];

}

function remove_2986385924(L_2986385926, n_2986385927) {
    if ((n_2986385927 == L_2986385926.tail)) {
    L_2986385926.tail = n_2986385927.prev;
    }
    
    if ((n_2986385927 == L_2986385926.head)) {
    L_2986385926.head = n_2986385927.next;
    }
    
    if (!((n_2986385927.next == null))) {
    n_2986385927.next.prev = n_2986385927.prev;
    }
    
    if (!((n_2986385927.prev == null))) {
    n_2986385927.prev.next = n_2986385927.next;
    }
    

  
}

function prepend_2986382195(L_2986382197, n_2986382198) {
    n_2986382198.prev = null;
    n_2986382198.next = L_2986382197.head;
    if (!((L_2986382197.head == null))) {
    if (!((L_2986382197.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986382197.head.prev = n_2986382198;
    }
    
    L_2986382197.head = n_2986382198;
    if ((L_2986382197.tail == null)) {
    L_2986382197.tail = n_2986382198;
    }
    

  
}

function HEX5BHEX5D_2986437556(cache_2986437559, key_2986437560) {
    var Temporary1;

  var result_2986437561 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986437749 = (Temporary1 = HEX5BHEX5D_2986437642(cache_2986437559.table, key_2986437560), Temporary1)[0][Temporary1[1]];
    result_2986437561 = nimCopy(result_2986437561, node_2986437749.value.val, NTI3070230535);
    remove_2986385924(cache_2986437559.list, node_2986437749);
    prepend_2986382195(cache_2986437559.list, node_2986437749);

  return result_2986437561;

}

function computeFunctionExecution_2986437819(ctxHEX60gensym116_2986437820, inputHEX60gensym116_2986437821) {
    var Temporary3;
    var Temporary5;

  var result_2986437822 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym116_2986437823 = startTimer_2466250804();
    ctxHEX60gensym116_2986437820.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_2986437820.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_2986437912 = getItem_2986411410(inputHEX60gensym116_2986437821);
    var keyHEX60gensym116_2986437913 = {Field0: nimCopy(null, itemHEX60gensym116_2986437912, NTI3003121689), Field1: 6};
    recordDependency_2986398524(ctxHEX60gensym116_2986437820, itemHEX60gensym116_2986437912, 6);
    if (ctxHEX60gensym116_2986437820.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym116_2986437820.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3003121876(itemHEX60gensym116_2986437912));
    }
    
    force_2986414895(ctxHEX60gensym116_2986437820, keyHEX60gensym116_2986437913);
    if (!(contains_2986437363(ctxHEX60gensym116_2986437820.queryCacheFunctionExecution, inputHEX60gensym116_2986437821))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3070231355(inputHEX60gensym116_2986437821) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986437822 = nimCopy(result_2986437822, HEX5BHEX5D_2986437556(ctxHEX60gensym116_2986437820.queryCacheFunctionExecution, inputHEX60gensym116_2986437821), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_2986437820.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym116_2986437820.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym116_2986437820.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym116_2986437820.statsFunctionExecution.time = addInt(ctxHEX60gensym116_2986437820.statsFunctionExecution.time, elapsed_2466250815(timerHEX60gensym116_2986437823));
    }
  };

  return result_2986437822;

}

function rawGet_2986374501(t_2986374504, key_2986374505, hc_2986374506, hc_2986374506_Idx) {
  var result_2986374507 = 0;

  BeforeRet: {
    hc_2986374506[hc_2986374506_Idx] = hash_3070231691(key_2986374505);
    if ((hc_2986374506[hc_2986374506_Idx] == 0)) {
    hc_2986374506[hc_2986374506_Idx] = 314159265;
    }
    
    if (((t_2986374504.data).length == 0)) {
    result_2986374507 = -1;
    break BeforeRet;
    }
    
    var h_2986374593 = (hc_2986374506[hc_2986374506_Idx] & (t_2986374504.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986374504.data[chckIndx(h_2986374593, 0, (t_2986374504.data).length - 1)].Field0)) break Label2;
          if (((t_2986374504.data[chckIndx(h_2986374593, 0, (t_2986374504.data).length - 1)].Field0 == hc_2986374506[hc_2986374506_Idx]) && HEX3DHEX3D_3070231694(t_2986374504.data[chckIndx(h_2986374593, 0, (t_2986374504.data).length - 1)].Field1, key_2986374505))) {
          result_2986374507 = h_2986374593;
          break BeforeRet;
          }
          
          h_2986374593 = nextTry_1308622883(h_2986374593, (t_2986374504.data).length - 1);
        }
    };
    result_2986374507 = subInt(-1, h_2986374593);
  };

  return result_2986374507;

}

function hasKey_2986434360(t_2986434363, key_2986434364) {
  var result_2986434365 = false;

    var hc_2986434366 = [0];
    result_2986434365 = (0 <= rawGet_2986374501(t_2986434363, key_2986434364, hc_2986434366, 0));

  return result_2986434365;

}

function contains_2986434354(t_2986434357, key_2986434358) {
  var result_2986434359 = false;

  BeforeRet: {
    result_2986434359 = hasKey_2986434360(t_2986434357, key_2986434358);
    break BeforeRet;
  };

  return result_2986434359;

}

function contains_2986434260(cache_2986434263, key_2986434264) {
  var result_2986434265 = false;

    result_2986434265 = contains_2986434354(cache_2986434263.table, key_2986434264);

  return result_2986434265;

}

function HEX5BHEX5D_2986434539(t_2986434542, key_2986434543) {
  var result_2986434544 = null;
  var result_2986434544_Idx = 0;

    var hcHEX60gensym22_2986434545 = [0];
    var indexHEX60gensym22_2986434552 = rawGet_2986374501(t_2986434542, key_2986434543, hcHEX60gensym22_2986434545, 0);
    if ((0 <= indexHEX60gensym22_2986434552)) {
    result_2986434544 = t_2986434542.data[chckIndx(indexHEX60gensym22_2986434552, 0, (t_2986434542.data).length - 1)]; result_2986434544_Idx = "Field2";
    }
    else {
    raiseKeyError_2986431529(key_2986434543);
    }
    

  return [result_2986434544, result_2986434544_Idx];

}

function remove_2986377949(L_2986377951, n_2986377952) {
    if ((n_2986377952 == L_2986377951.tail)) {
    L_2986377951.tail = n_2986377952.prev;
    }
    
    if ((n_2986377952 == L_2986377951.head)) {
    L_2986377951.head = n_2986377952.next;
    }
    
    if (!((n_2986377952.next == null))) {
    n_2986377952.next.prev = n_2986377952.prev;
    }
    
    if (!((n_2986377952.prev == null))) {
    n_2986377952.prev.next = n_2986377952.next;
    }
    

  
}

function prepend_2986376678(L_2986376680, n_2986376681) {
    n_2986376681.prev = null;
    n_2986376681.next = L_2986376680.head;
    if (!((L_2986376680.head == null))) {
    if (!((L_2986376680.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986376680.head.prev = n_2986376681;
    }
    
    L_2986376680.head = n_2986376681;
    if ((L_2986376680.tail == null)) {
    L_2986376680.tail = n_2986376681;
    }
    

  
}

function HEX5BHEX5D_2986434453(cache_2986434456, key_2986434457) {
    var Temporary1;

  var result_2986434458 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986434645 = (Temporary1 = HEX5BHEX5D_2986434539(cache_2986434456.table, key_2986434457), Temporary1)[0][Temporary1[1]];
    result_2986434458 = nimCopy(result_2986434458, node_2986434645.value.val, NTI3070230535);
    remove_2986377949(cache_2986434456.list, node_2986434645);
    prepend_2986376678(cache_2986434456.list, node_2986434645);

  return result_2986434458;

}

function computeSymbolValue_2986434715(ctxHEX60gensym112_2986434716, inputHEX60gensym112_2986434717, recordDependencyHEX60gensym112_2986434718) {
    var Temporary3;
    var Temporary5;

  var result_2986434719 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym112_2986434720 = startTimer_2466250804();
    ctxHEX60gensym112_2986434716.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_2986434716.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_2986434809 = getItem_2986408006(inputHEX60gensym112_2986434717);
    var keyHEX60gensym112_2986434810 = {Field0: nimCopy(null, itemHEX60gensym112_2986434809, NTI3003121689), Field1: 5};
    if (recordDependencyHEX60gensym112_2986434718) {
    recordDependency_2986398524(ctxHEX60gensym112_2986434716, itemHEX60gensym112_2986434809, 5);
    }
    
    var colorHEX60gensym112_2986434811 = nodeColor_3003124149(ctxHEX60gensym112_2986434716.depGraph, keyHEX60gensym112_2986434810, 0);
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_2986434811, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym112_2986434809));
    }
    
    if ((colorHEX60gensym112_2986434811 == 2)) {
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym112_2986434716, keyHEX60gensym112_2986434810);
    if (false) {
    markRed_3003136501(ctxHEX60gensym112_2986434716.depGraph, keyHEX60gensym112_2986434810, []);
    }
    
    if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
      }
      
    }
    
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym112_2986434717) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434719 = nimCopy(result_2986434719, HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717), NTI3070230535);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_2986434811 == 0)) {
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym112_2986434716, keyHEX60gensym112_2986434810);
    if (false) {
    markRed_3003136501(ctxHEX60gensym112_2986434716.depGraph, keyHEX60gensym112_2986434810, []);
    }
    
    if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
    }
    
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym112_2986434717) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434719 = nimCopy(result_2986434719, HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717), NTI3070230535);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym112_2986434716, keyHEX60gensym112_2986434810, true) == 0)) {
    if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
    }
    
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym112_2986434717) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434719 = nimCopy(result_2986434719, HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717), NTI3070230535);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_2986434716.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym112_2986434716, keyHEX60gensym112_2986434810);
      if (false) {
      markRed_3003136501(ctxHEX60gensym112_2986434716.depGraph, keyHEX60gensym112_2986434810, []);
      }
      
      if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
      }
      
      if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym112_2986434717) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986434719 = nimCopy(result_2986434719, HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717), NTI3070230535);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_2986434811 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_2986434716.enableLogging && contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717)));
    }
    
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    force_2986414895(ctxHEX60gensym112_2986434716, keyHEX60gensym112_2986434810);
    }
    
    if (!(contains_2986434260(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231688(inputHEX60gensym112_2986434717) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434719 = nimCopy(result_2986434719, HEX5BHEX5D_2986434453(ctxHEX60gensym112_2986434716.queryCacheSymbolValue, inputHEX60gensym112_2986434717), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_2986434716.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym112_2986434716.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym112_2986434716.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym112_2986434716.statsSymbolValue.time = addInt(ctxHEX60gensym112_2986434716.statsSymbolValue.time, elapsed_2466250815(timerHEX60gensym112_2986434720));
    }
  };

  return result_2986434719;

}

function voidValue_3070231244() {
  var result_3070231245 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231245 = nimCopy(result_3070231245, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231245;

}

function some_2986421476(val_2986421478) {
  var result_2986421479 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2986421479.has = true;
    result_2986421479.val = nimCopy(result_2986421479.val, val_2986421478, NTI3070230535);

  return result_2986421479;

}

function none_2986421484() {
  var result_2986421491 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_2986421491;

}

function none_2986421481() {
  var result_2986421483 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2986421483 = nimCopy(result_2986421483, none_2986421484(), NTI2986389396);

  return result_2986421483;

}

function getValue_2986420941(ctxHEX60gensym95_2986420942, inputHEX60gensym95_2986420943) {
  var result_2986420949 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_2986421026(ctxHEX60gensym95_2986420942.queryCacheValue, inputHEX60gensym95_2986420943)) {
    result_2986420949 = nimCopy(result_2986420949, some_2986421476(HEX5BHEX5D_2986421219(ctxHEX60gensym95_2986420942.queryCacheValue, inputHEX60gensym95_2986420943)), NTI2986389396);
    break BeforeRet;
    }
    
    result_2986420949 = nimCopy(result_2986420949, none_2986421481(), NTI2986389396);
    break BeforeRet;
  };

  return result_2986420949;

}

function isSome_3120562208(self_3120562210) {
  var result_3120562211 = false;

    result_3120562211 = self_3120562210.has;

  return result_3120562211;

}

function isNone_3120562233(self_3120562235) {
  var result_3120562236 = false;

    result_3120562236 = !(self_3120562235.has);

  return result_3120562236;

}

function get_3120562225(self_3120562227) {
  var result_3120562228 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3120562233(self_3120562227)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3120562228 = self_3120562227.val;

  return result_3120562228;

}

function newAstFunctionValue_3070231267(node_3070231268, rev_3070231269) {
  var result_3070231270 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3070231270 = nimCopy(result_3070231270, {kind: 5, node: node_3070231268, rev: rev_3070231269, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_3070231270;

}

function computeValueImpl_2986345270(ctx_2986345271, node_2986345272) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_2986454574 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym695_2986454576 = (ctx_2986345271.enableLogging || ctx_2986345271.enableQueryLogging);
    if (logQueryHEX60gensym695_2986454576) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym695_2986454576) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345272) || []));
    }
    
    try {
    Label3: {
      var expr_2986454587 = node_2986345272;
      var pos_2986454588 = 0;
      var _ = pos_2986454588;
      if ((expr_2986454587.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_2986345272.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_2986454595 = Temporary4;
      result_2986454574 = nimCopy(result_2986454574, {kind: 3, intValue: value_2986454595, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 3)) {
      result_2986454574 = nimCopy(result_2986454574, {kind: 2, stringValue: nimCopy(null, node_2986345272.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 8)) {
      var function_2986454604 = HEX5BHEX5D_2969567316(node_2986345272, 0);
      var functionValue_2986454605 = computeValue_2986421510(ctx_2986345271, function_2986454604, true);
      if ((functionValue_2986454605.kind == 0)) {
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var args_2986454614 = [];
      Label6: {
        var arg_2986454633 = null;
        var colontmp__2936013098 = [];
        colontmp__2936013098 = HEX5BHEX5D_3120563989(node_2986345272.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2936013099 = 0;
        var L_2936013100 = (colontmp__2936013098).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2936013099 < L_2936013100)) break Label8;
              arg_2986454633 = colontmp__2936013098[chckIndx(i_2936013099, 0, (colontmp__2936013098).length - 1)];
              var value_2986454634 = computeValue_2986421510(ctx_2986345271, arg_2986454633, true);
              if ((value_2986454634.kind == 0)) {
              result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_2986454634, NTI3070230535);
              args_2986454614.push(Temporary9);;
              i_2936013099 = addInt(i_2936013099, 1);
              if (!(((colontmp__2936013098).length == L_2936013100))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_2986454605.kind == 4)) {
        var Temporary10 = functionValue_2986454605;
        if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230534)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_2986454655 = [mnewString(0)];
      fmtRes_2986454655[0].push.apply(fmtRes_2986454655[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3003121884(fmtRes_2986454655, 0, function_2986454604.id, []);
      fmtRes_2986454655[0].push.apply(fmtRes_2986454655[0], [39,32,97,116,32]);;
      formatValue_3070231363(fmtRes_2986454655, 0, node_2986345272, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986454655[0], NTI33554449)]);
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_2986454605;
      if (ConstSet114[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3070230534)); }
      result_2986454574 = nimCopy(result_2986454574, Temporary11.impl(args_2986454614), NTI3070230535);
      break BeforeRet;
      }
      
      if ((functionValue_2986454605.kind == 5)) {
      var Temporary12 = functionValue_2986454605;
      if (ConstSet122[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230534)); }
      var fec_2986454670 = getOrCreateFunctionExecutionContext_2986411419(ctx_2986345271, {node: Temporary12.node, arguments: nimCopy(null, args_2986454614, NTI2986408772), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_2986454574 = nimCopy(result_2986454574, computeFunctionExecution_2986437819(ctx_2986345271, fec_2986454670), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 7)) {
      if ((len_2969567320(node_2986345272) == 0)) {
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986454574 = nimCopy(result_2986454574, computeValue_2986421510(ctx_2986345271, last_2969567490(node_2986345272), true), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 4)) {
      if ((len_2969567320(node_2986345272) == 0)) {
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986454574 = nimCopy(result_2986454574, computeValue_2986421510(ctx_2986345271, HEX5BHEX5D_2969567316(node_2986345272, 0), true), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 1)) {
      var id_2986454683 = nimCopy(null, node_2986345272.reff, NTI2046820355);
      var symbols_2986454684 = computeSymbols_2986428140(ctx_2986345271, node_2986345272, true);
      if (contains_2986453560(symbols_2986454684, id_2986454683)) {
      var symbol_2986454851 = (Temporary13 = HEX5BHEX5D_2986453815(symbols_2986454684, id_2986454683), Temporary13)[0][Temporary13[1]];
      result_2986454574 = nimCopy(result_2986454574, computeSymbolValue_2986434715(ctx_2986345271, symbol_2986454851, true), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 9)) {
      if ((len_2969567320(node_2986345272) < 2)) {
      result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var index_2986454856 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_2986454856, 1) < len_2969567320(node_2986345272))) break Label15;
            try {
            var condition_2986454861 = HEX5BHEX5D_2969567316(node_2986345272, index_2986454856);
            var trueCase_2986454862 = HEX5BHEX5D_2969567316(node_2986345272, addInt(index_2986454856, 1));
            var conditionValue_2986454863 = computeValue_2986421510(ctx_2986345271, condition_2986454861, true);
            if ((conditionValue_2986454863.kind == 0)) {
            result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_2986454863.kind == 3))) {
            var fmtRes_2986454876 = [mnewString(0)];
            fmtRes_2986454876[0].push.apply(fmtRes_2986454876[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_2986454876, 0, conditionValue_2986454863, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986454876[0], NTI33554449)]);
            result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_2986454863.intValue == 0))) {
            var trueCaseValue_2986454882 = computeValue_2986421510(ctx_2986345271, trueCase_2986454862, true);
            result_2986454574 = nimCopy(result_2986454574, trueCaseValue_2986454882, NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_2986454856 = addInt(index_2986454856, 2);
            }
          }
      };
      if (!((modInt(len_2969567320(node_2986345272), 2) == 0))) {
      var falseCaseValue_2986454883 = computeValue_2986421510(ctx_2986345271, last_2969567490(node_2986345272), true);
      result_2986454574 = nimCopy(result_2986454574, falseCaseValue_2986454883, NTI3070230535);
      break BeforeRet;
      }
      
      result_2986454574 = nimCopy(result_2986454574, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454587.kind == 11)) {
        var oHEX60gensym720_2986454890 = getValue_2986420941(ctx_2986345271, node_2986345272);
        if (!isSome_3120562208(oHEX60gensym720_2986454890)) Temporary19 = false; else {          var value_2986454936 = nimCopy(null, get_3120562225(oHEX60gensym720_2986454890), NTI3070230535);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_2986454936.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_2986454936;
      if (ConstSet123[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI3070230534)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_2986454941 = Temporary17;
      result_2986454574 = nimCopy(result_2986454574, newAstFunctionValue_3070231267(node_2986345272, addInt(currentRev_2986454941, 1)), NTI3070230535);
      break BeforeRet;
      }
      else {
        result_2986454574 = nimCopy(result_2986454574, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym695_2986454576 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986454574) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym695_2986454576) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986454574;

}

function getOrDefault_2986353616(t_2986353619, key_2986353620, default_2986353621) {
    var Temporary1;

  var result_2986353622 = null;

    var hcHEX60gensym159_2986353625 = [0];
    var indexHEX60gensym159_2986353984 = rawGet_2986353626(t_2986353619, key_2986353620, hcHEX60gensym159_2986353625, 0);
    if ((0 <= indexHEX60gensym159_2986353984)) {
    Temporary1 = t_2986353619.data[chckIndx(indexHEX60gensym159_2986353984, 0, (t_2986353619.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986353621;
    }
    
    result_2986353622 = Temporary1;

  return result_2986353622;

}

function newDoublyLinkedNode_2986354109(value_2986354111) {
  var result_2986354112 = null;

    result_2986354112 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986354112.value = nimCopy(result_2986354112.value, value_2986354111, NTI2986344888);

  return result_2986354112;

}

function mustRehash_2986354468(t_2986354470) {
  var result_2986354471 = false;

    if (!((t_2986354470.counter < (t_2986354470.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986354471 = ((mulInt((t_2986354470.data).length, 2) < mulInt(t_2986354470.counter, 3)) || (subInt((t_2986354470.data).length, t_2986354470.counter) < 4));

  return result_2986354471;

}

function rawInsert_2986355161(t_2986355165, data_2986355166, data_2986355166_Idx, key_2986355167, val_2986355168, hc_2986355169, h_2986355170) {
    data_2986355166[data_2986355166_Idx][chckIndx(h_2986355170, 0, (data_2986355166[data_2986355166_Idx]).length - 1)].Field1 = key_2986355167;
    data_2986355166[data_2986355166_Idx][chckIndx(h_2986355170, 0, (data_2986355166[data_2986355166_Idx]).length - 1)].Field2 = val_2986355168;
    data_2986355166[data_2986355166_Idx][chckIndx(h_2986355170, 0, (data_2986355166[data_2986355166_Idx]).length - 1)].Field0 = hc_2986355169;

  
}

function enlarge_2986354725(t_2986354728) {
    var n_2986354731 = [];
    n_2986354731 = new Array(chckRange(mulInt((t_2986354728.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986354728.data).length, 2), 0, 2147483647) ; ++i) { n_2986354731[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986354728.data; t_2986354728.data = n_2986354731; n_2986354731 = Temporary1;    Label2: {
      var i_2986354829 = 0;
      var colontmp__2936013156 = 0;
      colontmp__2936013156 = (n_2986354731).length - 1;
      var res_2936013157 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013157 <= colontmp__2936013156)) break Label4;
            i_2986354829 = res_2936013157;
            var eh_2986354910 = n_2986354731[chckIndx(i_2986354829, 0, (n_2986354731).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986354910)) {
            var j_2986354914 = (eh_2986354910 & (t_2986354728.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986354728.data[chckIndx(j_2986354914, 0, (t_2986354728.data).length - 1)].Field0)) break Label6;
                  j_2986354914 = nextTry_1308622883(j_2986354914, (t_2986354728.data).length - 1);
                }
            };
            rawInsert_2986355161(t_2986354728, t_2986354728, "data", n_2986354731[chckIndx(i_2986354829, 0, (n_2986354731).length - 1)].Field1, n_2986354731[chckIndx(i_2986354829, 0, (n_2986354731).length - 1)].Field2, eh_2986354910, j_2986354914);
            }
            
            res_2936013157 = addInt(res_2936013157, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986355411(t_2986355414, key_2986355415, hc_2986355416) {
  var result_2986355417 = 0;

  BeforeRet: {
    if (((t_2986355414.data).length == 0)) {
    result_2986355417 = -1;
    break BeforeRet;
    }
    
    var h_2986355502 = (hc_2986355416 & (t_2986355414.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986355414.data[chckIndx(h_2986355502, 0, (t_2986355414.data).length - 1)].Field0)) break Label2;
          if (((t_2986355414.data[chckIndx(h_2986355502, 0, (t_2986355414.data).length - 1)].Field0 == hc_2986355416) && (t_2986355414.data[chckIndx(h_2986355502, 0, (t_2986355414.data).length - 1)].Field1 == key_2986355415))) {
          result_2986355417 = h_2986355502;
          break BeforeRet;
          }
          
          h_2986355502 = nextTry_1308622883(h_2986355502, (t_2986355414.data).length - 1);
        }
    };
    result_2986355417 = subInt(-1, h_2986355502);
  };

  return result_2986355417;

}

function HEX5BHEX5DHEX3D_2986354200(t_2986354203, key_2986354204, val_2986354205) {
    if (((t_2986354203.data).length == 0)) {
    var correctSizeHEX60gensym164_2986354288 = slotsNeeded_1308622891(32);
    t_2986354203.counter = 0;
    t_2986354203.data = new Array(chckRange(correctSizeHEX60gensym164_2986354288, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_2986354288, 0, 2147483647) ; ++i) { t_2986354203.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986354293 = [0];
    var index_2986354300 = rawGet_2986353626(t_2986354203, key_2986354204, hc_2986354293, 0);
    if ((0 <= index_2986354300)) {
    t_2986354203.data[chckIndx(index_2986354300, 0, (t_2986354203.data).length - 1)].Field2 = val_2986354205;
    }
    else {
      if (((t_2986354203.data).length == 0)) {
      var correctSizeHEX60gensym167_2986354463 = slotsNeeded_1308622891(32);
      t_2986354203.counter = 0;
      t_2986354203.data = new Array(chckRange(correctSizeHEX60gensym167_2986354463, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_2986354463, 0, 2147483647) ; ++i) { t_2986354203.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986354468(t_2986354203)) {
      enlarge_2986354725(t_2986354203);
      index_2986354300 = rawGetKnownHC_2986355411(t_2986354203, key_2986354204, hc_2986354293[0]);
      }
      
      index_2986354300 = subInt(-1, index_2986354300);
      rawInsert_2986355161(t_2986354203, t_2986354203, "data", key_2986354204, val_2986354205, hc_2986354293[0], index_2986354300);
      t_2986354203.counter = addInt(t_2986354203.counter, 1);
    }
    

  
}

function len_2986356231(t_2986356234) {
  var result_2986356235 = 0;

    result_2986356235 = t_2986356234.counter;

  return result_2986356235;

}

function len_2986356148(cache_2986356151) {
  var result_2986356152 = 0;

    result_2986356152 = len_2986356231(cache_2986356151.table);

  return result_2986356152;

}

function del_2986356323(t_2986356326, key_2986356327) {
    var hc_2986356328 = [0];
    var i_2986356335 = rawGet_2986353626(t_2986356326, key_2986356327, hc_2986356328, 0);
    var mskHEX60gensym36_2986356339 = (t_2986356326.data).length - 1;
    if ((0 <= i_2986356335)) {
    t_2986356326.counter = subInt(t_2986356326.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986356346 = i_2986356335;
            var rHEX60gensym36_2986356347 = jHEX60gensym36_2986356346;
            t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)].Field0 = 0;
            t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)].Field1 = null;
            t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986356335 = (addInt(i_2986356335, 1) & mskHEX60gensym36_2986356339);
                  if (isEmpty_1308622877(t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986356347 = (t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)].Field0 & mskHEX60gensym36_2986356339);
                  if (!(((((rHEX60gensym36_2986356347 <= i_2986356335) && (jHEX60gensym36_2986356346 < rHEX60gensym36_2986356347)) || ((jHEX60gensym36_2986356346 < rHEX60gensym36_2986356347) && (i_2986356335 < jHEX60gensym36_2986356346))) || ((i_2986356335 < jHEX60gensym36_2986356346) && (rHEX60gensym36_2986356347 <= i_2986356335))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986356326.data[chckIndx(jHEX60gensym36_2986356346, 0, (t_2986356326.data).length - 1)] = nimCopy(t_2986356326.data[chckIndx(jHEX60gensym36_2986356346, 0, (t_2986356326.data).length - 1)], t_2986356326.data[chckIndx(i_2986356335, 0, (t_2986356326.data).length - 1)], NTI2986344924);
          }
      };
    };
    }
    

  
}

function resize_2986356066(cache_2986356069) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986356069.capacity < len_2986356148(cache_2986356069))) break Label2;
          var t_2986356236 = cache_2986356069.list.tail;
          if (cache_2986356069.recordRemovedKeys) {
          incl_2986350430(cache_2986356069.removedKeys, t_2986356236.value.key);
          }
          
          del_2986356323(cache_2986356069.table, t_2986356236.value.key);
          remove_2986357082(cache_2986356069.list, t_2986356236);
        }
    };

  
}

function addNewNode_2986354101(cache_2986354104, key_2986354105, val_2986354106) {
    var node_2986354136 = newDoublyLinkedNode_2986354109({key: key_2986354105, val: nimCopy(null, val_2986354106, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986354200(cache_2986354104.table, key_2986354105, node_2986354136);
    prepend_2986355811(cache_2986354104.list, node_2986354136);
    if (cache_2986354104.recordRemovedKeys) {
    excl_2986349271(cache_2986354104.removedKeys, key_2986354105);
    }
    
    resize_2986356066(cache_2986354104);

  
}

function HEX5BHEX5DHEX3D_2986353521(cache_2986353524, key_2986353525, val_2986353526) {
    var node_2986354074 = getOrDefault_2986353616(cache_2986353524.table, key_2986353525, null);
    if ((node_2986354074 == null)) {
    addNewNode_2986354101(cache_2986353524, key_2986353525, val_2986353526);
    }
    else {
      node_2986354074.value.val = nimCopy(node_2986354074.value.val, val_2986353526, NTI3070230535);
      remove_2986357082(cache_2986353524.list, node_2986354074);
      prepend_2986355811(cache_2986353524.list, node_2986354074);
    }
    

  
}

function fingerprint_3070231311(value_3070231312) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3070231313 = [];

  BeforeRet: {
    switch (value_3070231312.kind) {
    case 0:
      result_3070231313 = nimCopy(null, [value_3070231312.kind], NTI3070230977);
      break BeforeRet;
      break;
    case 1:
      result_3070231313 = nimCopy(null, [value_3070231312.kind], NTI3070230977);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3070231312;
      if (ConstSet124[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, Temporary1.intValue], NTI3003121997);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3070231312;
      if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, hash_1325400491(Temporary2.stringValue)], NTI3003121997);
      break BeforeRet;
      break;
    case 4:
      result_3070231313 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231312;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      var Temporary4 = value_3070231312;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, hash_2969569587(Temporary3.node), Temporary4.rev], NTI3070231167);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3070231312;
      if (ConstSet128[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, HEX26_3070231137([value_3070231312.kind], fingerprint_3070231130(Temporary5.typ)), NTI3070230983);
      break BeforeRet;
      break;
    }
  };

  return result_3070231313;

}

function initDoublyLinkedList_2986357549() {
  var result_2986357551 = ({head: null, tail: null});

  return result_2986357551;

}

function initTable_2986357555(initialSize_2986357558) {
  var result_2986357559 = ({data: [], counter: 0});

    var correctSizeHEX60gensym177_2986357561 = slotsNeeded_1308622891(chckRange(initialSize_2986357558, 0, 2147483647));
    result_2986357559.counter = 0;
    result_2986357559.data = new Array(chckRange(correctSizeHEX60gensym177_2986357561, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym177_2986357561, 0, 2147483647) ; ++i) { result_2986357559.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986357559;

}

function newLruCache_2986357539(capacity_2986357542, recordRemovedKeys_2986357543) {
  var result_2986357544 = null;

    result_2986357544 = {capacity: capacity_2986357542, list: initDoublyLinkedList_2986357549(), table: initTable_2986357555(correctSize_3019898901(capacity_2986357542)), recordRemovedKeys: recordRemovedKeys_2986357543, removedKeys: ({data: [], counter: 0})};

  return result_2986357544;

}

function newCache_2986357534(capacity_2986357537) {
  var result_2986357538 = null;

    result_2986357538 = newLruCache_2986357539(capacity_2986357537, false);

  return result_2986357538;

}

function init_2986357529(result_2986357532, result_2986357532_Idx, capacity_2986357533) {
    result_2986357532[result_2986357532_Idx] = newCache_2986357534(capacity_2986357533);

  
}

function some_2986407983(val_2986407985) {
  var result_2986407986 = ({val: null});

    if (!(!((val_2986407985 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986407986.val = val_2986407985;

  return result_2986407986;

}

function rawGet_2986366386(t_2986366389, key_2986366390, hc_2986366391, hc_2986366391_Idx) {
  var result_2986366392 = 0;

  BeforeRet: {
    hc_2986366391[hc_2986366391_Idx] = hash_2986345496(key_2986366390);
    if ((hc_2986366391[hc_2986366391_Idx] == 0)) {
    hc_2986366391[hc_2986366391_Idx] = 314159265;
    }
    
    if (((t_2986366389.data).length == 0)) {
    result_2986366392 = -1;
    break BeforeRet;
    }
    
    var h_2986366481 = (hc_2986366391[hc_2986366391_Idx] & (t_2986366389.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986366389.data[chckIndx(h_2986366481, 0, (t_2986366389.data).length - 1)].Field0)) break Label2;
          if (((t_2986366389.data[chckIndx(h_2986366481, 0, (t_2986366389.data).length - 1)].Field0 == hc_2986366391[hc_2986366391_Idx]) && HEX3DHEX3D_2986345833(t_2986366389.data[chckIndx(h_2986366481, 0, (t_2986366389.data).length - 1)].Field1, key_2986366390))) {
          result_2986366392 = h_2986366481;
          break BeforeRet;
          }
          
          h_2986366481 = nextTry_1308622883(h_2986366481, (t_2986366389.data).length - 1);
        }
    };
    result_2986366392 = subInt(-1, h_2986366481);
  };

  return result_2986366392;

}

function getOrDefault_2986408257(t_2986408260, key_2986408261, default_2986408262) {
    var Temporary1;

  var result_2986408263 = null;

    var hcHEX60gensym428_2986408266 = [0];
    var indexHEX60gensym428_2986408273 = rawGet_2986366386(t_2986408260, key_2986408261, hcHEX60gensym428_2986408266, 0);
    if ((0 <= indexHEX60gensym428_2986408273)) {
    Temporary1 = t_2986408260.data[chckIndx(indexHEX60gensym428_2986408273, 0, (t_2986408260.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986408262;
    }
    
    result_2986408263 = Temporary1;

  return result_2986408263;

}

function newDoublyLinkedNode_2986408389(value_2986408391) {
  var result_2986408392 = null;

    result_2986408392 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986408392.value = nimCopy(result_2986408392.value, value_2986408391, NTI2986344647);

  return result_2986408392;

}

function mustRehash_2986408730(t_2986408732) {
  var result_2986408733 = false;

    if (!((t_2986408732.counter < (t_2986408732.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986408733 = ((mulInt((t_2986408732.data).length, 2) < mulInt(t_2986408732.counter, 3)) || (subInt((t_2986408732.data).length, t_2986408732.counter) < 4));

  return result_2986408733;

}

function rawInsert_2986409423(t_2986409427, data_2986409428, data_2986409428_Idx, key_2986409429, val_2986409430, hc_2986409431, h_2986409432) {
    data_2986409428[data_2986409428_Idx][chckIndx(h_2986409432, 0, (data_2986409428[data_2986409428_Idx]).length - 1)].Field1 = nimCopy(data_2986409428[data_2986409428_Idx][chckIndx(h_2986409432, 0, (data_2986409428[data_2986409428_Idx]).length - 1)].Field1, key_2986409429, NTI3003121689);
    data_2986409428[data_2986409428_Idx][chckIndx(h_2986409432, 0, (data_2986409428[data_2986409428_Idx]).length - 1)].Field2 = val_2986409430;
    data_2986409428[data_2986409428_Idx][chckIndx(h_2986409432, 0, (data_2986409428[data_2986409428_Idx]).length - 1)].Field0 = hc_2986409431;

  
}

function enlarge_2986408987(t_2986408990) {
    var n_2986408993 = [];
    n_2986408993 = new Array(chckRange(mulInt((t_2986408990.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986408990.data).length, 2), 0, 2147483647) ; ++i) { n_2986408993[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986408990.data; t_2986408990.data = n_2986408993; n_2986408993 = Temporary1;    Label2: {
      var i_2986409091 = 0;
      var colontmp__2936013167 = 0;
      colontmp__2936013167 = (n_2986408993).length - 1;
      var res_2936013168 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013168 <= colontmp__2936013167)) break Label4;
            i_2986409091 = res_2936013168;
            var eh_2986409172 = n_2986408993[chckIndx(i_2986409091, 0, (n_2986408993).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986409172)) {
            var j_2986409176 = (eh_2986409172 & (t_2986408990.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986408990.data[chckIndx(j_2986409176, 0, (t_2986408990.data).length - 1)].Field0)) break Label6;
                  j_2986409176 = nextTry_1308622883(j_2986409176, (t_2986408990.data).length - 1);
                }
            };
            rawInsert_2986409423(t_2986408990, t_2986408990, "data", n_2986408993[chckIndx(i_2986409091, 0, (n_2986408993).length - 1)].Field1, n_2986408993[chckIndx(i_2986409091, 0, (n_2986408993).length - 1)].Field2, eh_2986409172, j_2986409176);
            }
            
            res_2936013168 = addInt(res_2936013168, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986409673(t_2986409676, key_2986409677, hc_2986409678) {
  var result_2986409679 = 0;

  BeforeRet: {
    if (((t_2986409676.data).length == 0)) {
    result_2986409679 = -1;
    break BeforeRet;
    }
    
    var h_2986409764 = (hc_2986409678 & (t_2986409676.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986409676.data[chckIndx(h_2986409764, 0, (t_2986409676.data).length - 1)].Field0)) break Label2;
          if (((t_2986409676.data[chckIndx(h_2986409764, 0, (t_2986409676.data).length - 1)].Field0 == hc_2986409678) && HEX3DHEX3D_2986345833(t_2986409676.data[chckIndx(h_2986409764, 0, (t_2986409676.data).length - 1)].Field1, key_2986409677))) {
          result_2986409679 = h_2986409764;
          break BeforeRet;
          }
          
          h_2986409764 = nextTry_1308622883(h_2986409764, (t_2986409676.data).length - 1);
        }
    };
    result_2986409679 = subInt(-1, h_2986409764);
  };

  return result_2986409679;

}

function HEX5BHEX5DHEX3D_2986408462(t_2986408465, key_2986408466, val_2986408467) {
    if (((t_2986408465.data).length == 0)) {
    var correctSizeHEX60gensym431_2986408550 = slotsNeeded_1308622891(32);
    t_2986408465.counter = 0;
    t_2986408465.data = new Array(chckRange(correctSizeHEX60gensym431_2986408550, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym431_2986408550, 0, 2147483647) ; ++i) { t_2986408465.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986408555 = [0];
    var index_2986408562 = rawGet_2986366386(t_2986408465, key_2986408466, hc_2986408555, 0);
    if ((0 <= index_2986408562)) {
    t_2986408465.data[chckIndx(index_2986408562, 0, (t_2986408465.data).length - 1)].Field2 = val_2986408467;
    }
    else {
      if (((t_2986408465.data).length == 0)) {
      var correctSizeHEX60gensym434_2986408725 = slotsNeeded_1308622891(32);
      t_2986408465.counter = 0;
      t_2986408465.data = new Array(chckRange(correctSizeHEX60gensym434_2986408725, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym434_2986408725, 0, 2147483647) ; ++i) { t_2986408465.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986408730(t_2986408465)) {
      enlarge_2986408987(t_2986408465);
      index_2986408562 = rawGetKnownHC_2986409673(t_2986408465, key_2986408466, hc_2986408555[0]);
      }
      
      index_2986408562 = subInt(-1, index_2986408562);
      rawInsert_2986409423(t_2986408465, t_2986408465, "data", key_2986408466, val_2986408467, hc_2986408555[0], index_2986408562);
      t_2986408465.counter = addInt(t_2986408465.counter, 1);
    }
    

  
}

function prepend_2986367366(L_2986367368, n_2986367369) {
    n_2986367369.prev = null;
    n_2986367369.next = L_2986367368.head;
    if (!((L_2986367368.head == null))) {
    if (!((L_2986367368.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986367368.head.prev = n_2986367369;
    }
    
    L_2986367368.head = n_2986367369;
    if ((L_2986367368.tail == null)) {
    L_2986367368.tail = n_2986367369;
    }
    

  
}

function len_2986410284(t_2986410287) {
  var result_2986410288 = 0;

    result_2986410288 = t_2986410287.counter;

  return result_2986410288;

}

function len_2986410201(cache_2986410204) {
  var result_2986410205 = 0;

    result_2986410205 = len_2986410284(cache_2986410204.table);

  return result_2986410205;

}

function del_2986410376(t_2986410379, key_2986410380) {
    var hc_2986410381 = [0];
    var i_2986410388 = rawGet_2986366386(t_2986410379, key_2986410380, hc_2986410381, 0);
    var mskHEX60gensym36_2986410392 = (t_2986410379.data).length - 1;
    if ((0 <= i_2986410388)) {
    t_2986410379.counter = subInt(t_2986410379.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986410399 = i_2986410388;
            var rHEX60gensym36_2986410400 = jHEX60gensym36_2986410399;
            t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field0 = 0;
            t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field1 = nimCopy(t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986410388 = (addInt(i_2986410388, 1) & mskHEX60gensym36_2986410392);
                  if (isEmpty_1308622877(t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986410400 = (t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)].Field0 & mskHEX60gensym36_2986410392);
                  if (!(((((rHEX60gensym36_2986410400 <= i_2986410388) && (jHEX60gensym36_2986410399 < rHEX60gensym36_2986410400)) || ((jHEX60gensym36_2986410399 < rHEX60gensym36_2986410400) && (i_2986410388 < jHEX60gensym36_2986410399))) || ((i_2986410388 < jHEX60gensym36_2986410399) && (rHEX60gensym36_2986410400 <= i_2986410388))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986410379.data[chckIndx(jHEX60gensym36_2986410399, 0, (t_2986410379.data).length - 1)] = nimCopy(t_2986410379.data[chckIndx(jHEX60gensym36_2986410399, 0, (t_2986410379.data).length - 1)], t_2986410379.data[chckIndx(i_2986410388, 0, (t_2986410379.data).length - 1)], NTI2986344683);
          }
      };
    };
    }
    

  
}

function remove_2986367038(L_2986367040, n_2986367041) {
    if ((n_2986367041 == L_2986367040.tail)) {
    L_2986367040.tail = n_2986367041.prev;
    }
    
    if ((n_2986367041 == L_2986367040.head)) {
    L_2986367040.head = n_2986367041.next;
    }
    
    if (!((n_2986367041.next == null))) {
    n_2986367041.next.prev = n_2986367041.prev;
    }
    
    if (!((n_2986367041.prev == null))) {
    n_2986367041.prev.next = n_2986367041.next;
    }
    

  
}

function resize_2986410119(cache_2986410122) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986410122.capacity < len_2986410201(cache_2986410122))) break Label2;
          var t_2986410289 = cache_2986410122.list.tail;
          if (cache_2986410122.recordRemovedKeys) {
          incl_2986401998(cache_2986410122.removedKeys, t_2986410289.value.key);
          }
          
          del_2986410376(cache_2986410122.table, t_2986410289.value.key);
          remove_2986367038(cache_2986410122.list, t_2986410289);
        }
    };

  
}

function addNewNode_2986408381(cache_2986408384, key_2986408385, val_2986408386) {
    var node_2986408398 = newDoublyLinkedNode_2986408389({key: nimCopy(null, key_2986408385, NTI3003121689), val: val_2986408386});
    HEX5BHEX5DHEX3D_2986408462(cache_2986408384.table, key_2986408385, node_2986408398);
    prepend_2986367366(cache_2986408384.list, node_2986408398);
    if (cache_2986408384.recordRemovedKeys) {
    excl_2986400827(cache_2986408384.removedKeys, key_2986408385);
    }
    
    resize_2986410119(cache_2986408384);

  
}

function HEX5BHEX5DHEX3D_2986408162(cache_2986408165, key_2986408166, val_2986408167) {
    var node_2986408354 = getOrDefault_2986408257(cache_2986408165.table, key_2986408166, null);
    if ((node_2986408354 == null)) {
    addNewNode_2986408381(cache_2986408165, key_2986408166, val_2986408167);
    }
    else {
      node_2986408354.value.val = val_2986408167;
      remove_2986367038(cache_2986408165.list, node_2986408354);
      prepend_2986367366(cache_2986408165.list, node_2986408354);
    }
    

  
}

function newSymbol_2986414607(ctxHEX60gensym86_2986414608, dataHEX60gensym86_2986414609) {
  var result_2986414610 = null;

  BeforeRet: {
    var itemHEX60gensym86_2986414611 = getItem_2986408006(dataHEX60gensym86_2986414609);
    var keyHEX60gensym86_2986414612 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_2986414611, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym86_2986414608.depGraph.changed, keyHEX60gensym86_2986414612, ctxHEX60gensym86_2986414608.depGraph.revision);
    HEX5BHEX5DHEX3D_2986408162(ctxHEX60gensym86_2986414608.itemsSymbol, itemHEX60gensym86_2986414611, dataHEX60gensym86_2986414609);
    result_2986414610 = dataHEX60gensym86_2986414609;
    break BeforeRet;
  };

  return result_2986414610;

}

function none_2986407999() {
  var result_2986408005 = ({val: null});

  return result_2986408005;

}

function none_2986407996() {
  var result_2986407998 = ({val: null});

    result_2986407998 = nimCopy(result_2986407998, none_2986407999(), NTI3070231688);

  return result_2986407998;

}

function computeSymbolImpl_2986345273(ctx_2986345274, node_2986345275) {
      var Temporary4;

  var result_2986454948 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym721_2986454950 = (ctx_2986345274.enableLogging || ctx_2986345274.enableQueryLogging);
    if (logQueryHEX60gensym721_2986454950) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym721_2986454950) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345275) || []));
    }
    
    try {
    Label3: {
      var expr_2986455021 = node_2986345275;
      var pos_2986455022 = 0;
      var _ = pos_2986455022;
      if ((expr_2986455021.kind == 1)) {
      var symbols_2986455029 = computeSymbols_2986428140(ctx_2986345274, node_2986345275, true);
      if (contains_2986453560(symbols_2986455029, node_2986345275.reff)) {
      result_2986454948 = nimCopy(result_2986454948, some_2986407983((Temporary4 = HEX5BHEX5D_2986453815(symbols_2986455029, node_2986345275.reff), Temporary4)[0][Temporary4[1]]), NTI3070231688);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_2986455021.kind == 4)) {
      result_2986454948 = nimCopy(result_2986454948, some_2986407983(newSymbol_2986414607(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2046820355), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
      if ((expr_2986455021.kind == 5)) {
      result_2986454948 = nimCopy(result_2986454948, some_2986407983(newSymbol_2986414607(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2046820355), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
      if ((expr_2986455021.kind == 6)) {
      result_2986454948 = nimCopy(result_2986454948, some_2986407983(newSymbol_2986414607(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2046820355), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
        var fmtRes_2986455224 = [mnewString(0)];
        fmtRes_2986455224[0].push.apply(fmtRes_2986455224[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3070231363(fmtRes_2986455224, 0, node_2986345275, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986455224[0], NTI33554449)]);
        result_2986454948 = nimCopy(result_2986454948, none_2986407996(), NTI3070231688);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym721_2986454950 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2986397884(result_2986454948) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym721_2986454950) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986454948;

}

function getOrDefault_2986357928(t_2986357931, key_2986357932, default_2986357933) {
    var Temporary1;

  var result_2986357934 = null;

    var hcHEX60gensym180_2986357937 = [0];
    var indexHEX60gensym180_2986358296 = rawGet_2986357938(t_2986357931, key_2986357932, hcHEX60gensym180_2986357937, 0);
    if ((0 <= indexHEX60gensym180_2986358296)) {
    Temporary1 = t_2986357931.data[chckIndx(indexHEX60gensym180_2986358296, 0, (t_2986357931.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986357933;
    }
    
    result_2986357934 = Temporary1;

  return result_2986357934;

}

function newDoublyLinkedNode_2986358421(value_2986358423) {
  var result_2986358424 = null;

    result_2986358424 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_2986358424.value = nimCopy(result_2986358424.value, value_2986358423, NTI2986344959);

  return result_2986358424;

}

function mustRehash_2986358771(t_2986358773) {
  var result_2986358774 = false;

    if (!((t_2986358773.counter < (t_2986358773.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986358774 = ((mulInt((t_2986358773.data).length, 2) < mulInt(t_2986358773.counter, 3)) || (subInt((t_2986358773.data).length, t_2986358773.counter) < 4));

  return result_2986358774;

}

function rawInsert_2986359464(t_2986359468, data_2986359469, data_2986359469_Idx, key_2986359470, val_2986359471, hc_2986359472, h_2986359473) {
    data_2986359469[data_2986359469_Idx][chckIndx(h_2986359473, 0, (data_2986359469[data_2986359469_Idx]).length - 1)].Field1 = key_2986359470;
    data_2986359469[data_2986359469_Idx][chckIndx(h_2986359473, 0, (data_2986359469[data_2986359469_Idx]).length - 1)].Field2 = val_2986359471;
    data_2986359469[data_2986359469_Idx][chckIndx(h_2986359473, 0, (data_2986359469[data_2986359469_Idx]).length - 1)].Field0 = hc_2986359472;

  
}

function enlarge_2986359028(t_2986359031) {
    var n_2986359034 = [];
    n_2986359034 = new Array(chckRange(mulInt((t_2986359031.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986359031.data).length, 2), 0, 2147483647) ; ++i) { n_2986359034[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986359031.data; t_2986359031.data = n_2986359034; n_2986359034 = Temporary1;    Label2: {
      var i_2986359132 = 0;
      var colontmp__2936013176 = 0;
      colontmp__2936013176 = (n_2986359034).length - 1;
      var res_2936013177 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013177 <= colontmp__2936013176)) break Label4;
            i_2986359132 = res_2936013177;
            var eh_2986359213 = n_2986359034[chckIndx(i_2986359132, 0, (n_2986359034).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986359213)) {
            var j_2986359217 = (eh_2986359213 & (t_2986359031.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986359031.data[chckIndx(j_2986359217, 0, (t_2986359031.data).length - 1)].Field0)) break Label6;
                  j_2986359217 = nextTry_1308622883(j_2986359217, (t_2986359031.data).length - 1);
                }
            };
            rawInsert_2986359464(t_2986359031, t_2986359031, "data", n_2986359034[chckIndx(i_2986359132, 0, (n_2986359034).length - 1)].Field1, n_2986359034[chckIndx(i_2986359132, 0, (n_2986359034).length - 1)].Field2, eh_2986359213, j_2986359217);
            }
            
            res_2936013177 = addInt(res_2936013177, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986359714(t_2986359717, key_2986359718, hc_2986359719) {
  var result_2986359720 = 0;

  BeforeRet: {
    if (((t_2986359717.data).length == 0)) {
    result_2986359720 = -1;
    break BeforeRet;
    }
    
    var h_2986359805 = (hc_2986359719 & (t_2986359717.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986359717.data[chckIndx(h_2986359805, 0, (t_2986359717.data).length - 1)].Field0)) break Label2;
          if (((t_2986359717.data[chckIndx(h_2986359805, 0, (t_2986359717.data).length - 1)].Field0 == hc_2986359719) && (t_2986359717.data[chckIndx(h_2986359805, 0, (t_2986359717.data).length - 1)].Field1 == key_2986359718))) {
          result_2986359720 = h_2986359805;
          break BeforeRet;
          }
          
          h_2986359805 = nextTry_1308622883(h_2986359805, (t_2986359717.data).length - 1);
        }
    };
    result_2986359720 = subInt(-1, h_2986359805);
  };

  return result_2986359720;

}

function HEX5BHEX5DHEX3D_2986358503(t_2986358506, key_2986358507, val_2986358508) {
    if (((t_2986358506.data).length == 0)) {
    var correctSizeHEX60gensym185_2986358591 = slotsNeeded_1308622891(32);
    t_2986358506.counter = 0;
    t_2986358506.data = new Array(chckRange(correctSizeHEX60gensym185_2986358591, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym185_2986358591, 0, 2147483647) ; ++i) { t_2986358506.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986358596 = [0];
    var index_2986358603 = rawGet_2986357938(t_2986358506, key_2986358507, hc_2986358596, 0);
    if ((0 <= index_2986358603)) {
    t_2986358506.data[chckIndx(index_2986358603, 0, (t_2986358506.data).length - 1)].Field2 = val_2986358508;
    }
    else {
      if (((t_2986358506.data).length == 0)) {
      var correctSizeHEX60gensym188_2986358766 = slotsNeeded_1308622891(32);
      t_2986358506.counter = 0;
      t_2986358506.data = new Array(chckRange(correctSizeHEX60gensym188_2986358766, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_2986358766, 0, 2147483647) ; ++i) { t_2986358506.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986358771(t_2986358506)) {
      enlarge_2986359028(t_2986358506);
      index_2986358603 = rawGetKnownHC_2986359714(t_2986358506, key_2986358507, hc_2986358596[0]);
      }
      
      index_2986358603 = subInt(-1, index_2986358603);
      rawInsert_2986359464(t_2986358506, t_2986358506, "data", key_2986358507, val_2986358508, hc_2986358596[0], index_2986358603);
      t_2986358506.counter = addInt(t_2986358506.counter, 1);
    }
    

  
}

function len_2986360534(t_2986360537) {
  var result_2986360538 = 0;

    result_2986360538 = t_2986360537.counter;

  return result_2986360538;

}

function len_2986360451(cache_2986360454) {
  var result_2986360455 = 0;

    result_2986360455 = len_2986360534(cache_2986360454.table);

  return result_2986360455;

}

function del_2986360626(t_2986360629, key_2986360630) {
    var hc_2986360631 = [0];
    var i_2986360638 = rawGet_2986357938(t_2986360629, key_2986360630, hc_2986360631, 0);
    var mskHEX60gensym36_2986360642 = (t_2986360629.data).length - 1;
    if ((0 <= i_2986360638)) {
    t_2986360629.counter = subInt(t_2986360629.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986360649 = i_2986360638;
            var rHEX60gensym36_2986360650 = jHEX60gensym36_2986360649;
            t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)].Field0 = 0;
            t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)].Field1 = null;
            t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986360638 = (addInt(i_2986360638, 1) & mskHEX60gensym36_2986360642);
                  if (isEmpty_1308622877(t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986360650 = (t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)].Field0 & mskHEX60gensym36_2986360642);
                  if (!(((((rHEX60gensym36_2986360650 <= i_2986360638) && (jHEX60gensym36_2986360649 < rHEX60gensym36_2986360650)) || ((jHEX60gensym36_2986360649 < rHEX60gensym36_2986360650) && (i_2986360638 < jHEX60gensym36_2986360649))) || ((i_2986360638 < jHEX60gensym36_2986360649) && (rHEX60gensym36_2986360650 <= i_2986360638))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986360629.data[chckIndx(jHEX60gensym36_2986360649, 0, (t_2986360629.data).length - 1)] = nimCopy(t_2986360629.data[chckIndx(jHEX60gensym36_2986360649, 0, (t_2986360629.data).length - 1)], t_2986360629.data[chckIndx(i_2986360638, 0, (t_2986360629.data).length - 1)], NTI2986344995);
          }
      };
    };
    }
    

  
}

function resize_2986360369(cache_2986360372) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986360372.capacity < len_2986360451(cache_2986360372))) break Label2;
          var t_2986360539 = cache_2986360372.list.tail;
          if (cache_2986360372.recordRemovedKeys) {
          incl_2986350430(cache_2986360372.removedKeys, t_2986360539.value.key);
          }
          
          del_2986360626(cache_2986360372.table, t_2986360539.value.key);
          remove_2986361385(cache_2986360372.list, t_2986360539);
        }
    };

  
}

function addNewNode_2986358413(cache_2986358416, key_2986358417, val_2986358418) {
    var node_2986358439 = newDoublyLinkedNode_2986358421({key: key_2986358417, val: nimCopy(null, val_2986358418, NTI3070231688)});
    HEX5BHEX5DHEX3D_2986358503(cache_2986358416.table, key_2986358417, node_2986358439);
    prepend_2986360114(cache_2986358416.list, node_2986358439);
    if (cache_2986358416.recordRemovedKeys) {
    excl_2986349271(cache_2986358416.removedKeys, key_2986358417);
    }
    
    resize_2986360369(cache_2986358416);

  
}

function HEX5BHEX5DHEX3D_2986357833(cache_2986357836, key_2986357837, val_2986357838) {
    var node_2986358386 = getOrDefault_2986357928(cache_2986357836.table, key_2986357837, null);
    if ((node_2986358386 == null)) {
    addNewNode_2986358413(cache_2986357836, key_2986357837, val_2986357838);
    }
    else {
      node_2986358386.value.val = nimCopy(node_2986358386.value.val, val_2986357838, NTI3070231688);
      remove_2986361385(cache_2986357836.list, node_2986358386);
      prepend_2986360114(cache_2986357836.list, node_2986358386);
    }
    

  
}

function fingerprint_3070231721(symbol_3070231722) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3070231723 = [];

    switch (symbol_3070231722.kind) {
    case 0:
      var Temporary1 = symbol_3070231722;
      if (ConstSet129[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      result_3070231723 = nimCopy(null, [hash_2046820596(symbol_3070231722.id), hash_1325400491(symbol_3070231722.name), symbol_3070231722.kind, hash_2046820596(Temporary1.node.id)], NTI3070231437);
      break;
    case 1:
      var Temporary2 = symbol_3070231722;
      if (ConstSet130[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      var Temporary3 = symbol_3070231722;
      if (ConstSet131[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      var Temporary4 = symbol_3070231722;
      if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      var Temporary5 = symbol_3070231722;
      if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
      result_3070231723 = nimCopy(null, HEX26_3070231137(HEX26_3070231137([hash_2046820596(symbol_3070231722.id), hash_1325400491(symbol_3070231722.name), symbol_3070231722.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3070231130(Temporary4.typ)), fingerprint_3070231311(Temporary5.value)), NTI3070230983);
      break;
    }

  return result_3070231723;

}

function fingerprint_3070232115(symbol_3070232120) {
      var Temporary1;

  var result_3070232121 = [];

  BeforeRet: {
      var oHEX60gensym27_3070232124 = nimCopy(null, symbol_3070232120, NTI3070231688);
      if (!isSome_3070232129(oHEX60gensym27_3070232124)) Temporary1 = false; else {        var s_3070232175 = get_3070232149(oHEX60gensym27_3070232124);
        Temporary1 = true;      }    if (Temporary1) {
    result_3070232121 = nimCopy(null, fingerprint_3070231721(s_3070232175), NTI3003121688);
    break BeforeRet;
    }
    
    result_3070232121 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3070232121;

}

function initDoublyLinkedList_2986361852() {
  var result_2986361854 = ({head: null, tail: null});

  return result_2986361854;

}

function initTable_2986361858(initialSize_2986361861) {
  var result_2986361862 = ({data: [], counter: 0});

    var correctSizeHEX60gensym198_2986361864 = slotsNeeded_1308622891(chckRange(initialSize_2986361861, 0, 2147483647));
    result_2986361862.counter = 0;
    result_2986361862.data = new Array(chckRange(correctSizeHEX60gensym198_2986361864, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym198_2986361864, 0, 2147483647) ; ++i) { result_2986361862.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986361862;

}

function newLruCache_2986361842(capacity_2986361845, recordRemovedKeys_2986361846) {
  var result_2986361847 = null;

    result_2986361847 = {capacity: capacity_2986361845, list: initDoublyLinkedList_2986361852(), table: initTable_2986361858(correctSize_3019898901(capacity_2986361845)), recordRemovedKeys: recordRemovedKeys_2986361846, removedKeys: ({data: [], counter: 0})};

  return result_2986361847;

}

function newCache_2986361837(capacity_2986361840) {
  var result_2986361841 = null;

    result_2986361841 = newLruCache_2986361842(capacity_2986361840, false);

  return result_2986361841;

}

function init_2986361832(result_2986361835, result_2986361835_Idx, capacity_2986361836) {
    result_2986361835[result_2986361835_Idx] = newCache_2986361837(capacity_2986361836);

  
}

function initTable_2986397032(initialSize_2986397035) {
  var result_2986397036 = ({data: [], counter: 0});

    var correctSizeHEX60gensym369_2986397038 = slotsNeeded_1308622891(chckRange(initialSize_2986397035, 0, 2147483647));
    result_2986397036.counter = 0;
    result_2986397036.data = new Array(chckRange(correctSizeHEX60gensym369_2986397038, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_2986397038, 0, 2147483647) ; ++i) { result_2986397036.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_2986397036;

}

function newTable_2986442112(initialSize_2986442115) {
  var result_2986442116 = null;

    result_2986442116 = ({data: [], counter: 0});
    result_2986442116 = nimCopy(result_2986442116, initTable_2986397032(initialSize_2986442115), NTI3070231496);

  return result_2986442116;

}

function none_2969567439() {
  var result_2969567445 = ({val: null});

  return result_2969567445;

}

function none_2969567436() {
  var result_2969567438 = ({val: null});

    result_2969567438 = nimCopy(result_2969567438, none_2969567439(), NTI2969567351);

  return result_2969567438;

}

function some_2969567458(val_2969567460) {
  var result_2969567461 = ({val: null});

    if (!(!((val_2969567460 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969567461.val = val_2969567460;

  return result_2969567461;

}

function findWithParentRec_2969569157(node_2969569158, kind_2969569159) {
  var result_2969569161 = ({val: null});

  BeforeRet: {
    if ((node_2969569158.parent == null)) {
    result_2969569161 = nimCopy(result_2969569161, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    if ((node_2969569158.parent.kind == kind_2969569159)) {
    result_2969569161 = nimCopy(result_2969569161, some_2969567458(node_2969569158), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969569161 = nimCopy(result_2969569161, findWithParentRec_2969569157(node_2969569158.parent, kind_2969569159), NTI2969567351);
    break BeforeRet;
  };

  return result_2969569161;

}

function isSome_2969569114(self_2969569116) {
  var result_2969569117 = false;

    result_2969569117 = !((self_2969569116.val == null));

  return result_2969569117;

}

function isNone_2969569142(self_2969569144) {
  var result_2969569145 = false;

    result_2969569145 = (self_2969569144.val == null);

  return result_2969569145;

}

function get_2969569134(self_2969569136) {
  var result_2969569137 = null;

    if (isNone_2969569142(self_2969569136)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969569137 = self_2969569136["val"];

  return result_2969569137;

}

function mustRehash_2986442909(t_2986442911) {
  var result_2986442912 = false;

    if (!((t_2986442911.counter < (t_2986442911.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986442912 = ((mulInt((t_2986442911.data).length, 2) < mulInt(t_2986442911.counter, 3)) || (subInt((t_2986442911.data).length, t_2986442911.counter) < 4));

  return result_2986442912;

}

function rawInsert_2986443602(t_2986443606, data_2986443607, data_2986443607_Idx, key_2986443608, val_2986443609, hc_2986443610, h_2986443611) {
    data_2986443607[data_2986443607_Idx][chckIndx(h_2986443611, 0, (data_2986443607[data_2986443607_Idx]).length - 1)].Field1 = nimCopy(data_2986443607[data_2986443607_Idx][chckIndx(h_2986443611, 0, (data_2986443607[data_2986443607_Idx]).length - 1)].Field1, key_2986443608, NTI2046820355);
    data_2986443607[data_2986443607_Idx][chckIndx(h_2986443611, 0, (data_2986443607[data_2986443607_Idx]).length - 1)].Field2 = val_2986443609;
    data_2986443607[data_2986443607_Idx][chckIndx(h_2986443611, 0, (data_2986443607[data_2986443607_Idx]).length - 1)].Field0 = hc_2986443610;

  
}

function enlarge_2986443166(t_2986443169) {
    var n_2986443172 = [];
    n_2986443172 = new Array(chckRange(mulInt((t_2986443169.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986443169.data).length, 2), 0, 2147483647) ; ++i) { n_2986443172[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2986443169.data; t_2986443169.data = n_2986443172; n_2986443172 = Temporary1;    Label2: {
      var i_2986443270 = 0;
      var colontmp__2936013221 = 0;
      colontmp__2936013221 = (n_2986443172).length - 1;
      var res_2936013222 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013222 <= colontmp__2936013221)) break Label4;
            i_2986443270 = res_2936013222;
            var eh_2986443351 = n_2986443172[chckIndx(i_2986443270, 0, (n_2986443172).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986443351)) {
            var j_2986443355 = (eh_2986443351 & (t_2986443169.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986443169.data[chckIndx(j_2986443355, 0, (t_2986443169.data).length - 1)].Field0)) break Label6;
                  j_2986443355 = nextTry_1308622883(j_2986443355, (t_2986443169.data).length - 1);
                }
            };
            rawInsert_2986443602(t_2986443169, t_2986443169, "data", n_2986443172[chckIndx(i_2986443270, 0, (n_2986443172).length - 1)].Field1, n_2986443172[chckIndx(i_2986443270, 0, (n_2986443172).length - 1)].Field2, eh_2986443351, j_2986443355);
            }
            
            res_2936013222 = addInt(res_2936013222, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986443852(t_2986443855, key_2986443856, hc_2986443857) {
  var result_2986443858 = 0;

  BeforeRet: {
    if (((t_2986443855.data).length == 0)) {
    result_2986443858 = -1;
    break BeforeRet;
    }
    
    var h_2986443943 = (hc_2986443857 & (t_2986443855.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986443855.data[chckIndx(h_2986443943, 0, (t_2986443855.data).length - 1)].Field0)) break Label2;
          if (((t_2986443855.data[chckIndx(h_2986443943, 0, (t_2986443855.data).length - 1)].Field0 == hc_2986443857) && HEX3DHEX3D_2046820592(t_2986443855.data[chckIndx(h_2986443943, 0, (t_2986443855.data).length - 1)].Field1, key_2986443856))) {
          result_2986443858 = h_2986443943;
          break BeforeRet;
          }
          
          h_2986443943 = nextTry_1308622883(h_2986443943, (t_2986443855.data).length - 1);
        }
    };
    result_2986443858 = subInt(-1, h_2986443943);
  };

  return result_2986443858;

}

function HEX5BHEX5DHEX3D_2986442311(t_2986442314, key_2986442315, val_2986442316) {
    if (((t_2986442314.data).length == 0)) {
    var correctSizeHEX60gensym540_2986442400 = slotsNeeded_1308622891(32);
    t_2986442314.counter = 0;
    t_2986442314.data = new Array(chckRange(correctSizeHEX60gensym540_2986442400, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym540_2986442400, 0, 2147483647) ; ++i) { t_2986442314.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2986442405 = [0];
    var index_2986442741 = rawGet_2986442406(t_2986442314, key_2986442315, hc_2986442405, 0);
    if ((0 <= index_2986442741)) {
    t_2986442314.data[chckIndx(index_2986442741, 0, (t_2986442314.data).length - 1)].Field2 = val_2986442316;
    }
    else {
      if (((t_2986442314.data).length == 0)) {
      var correctSizeHEX60gensym545_2986442904 = slotsNeeded_1308622891(32);
      t_2986442314.counter = 0;
      t_2986442314.data = new Array(chckRange(correctSizeHEX60gensym545_2986442904, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym545_2986442904, 0, 2147483647) ; ++i) { t_2986442314.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2986442909(t_2986442314)) {
      enlarge_2986443166(t_2986442314);
      index_2986442741 = rawGetKnownHC_2986443852(t_2986442314, key_2986442315, hc_2986442405[0]);
      }
      
      index_2986442741 = subInt(-1, index_2986442741);
      rawInsert_2986443602(t_2986442314, t_2986442314, "data", key_2986442315, val_2986442316, hc_2986442405[0], index_2986442741);
      t_2986442314.counter = addInt(t_2986442314.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_2986455468(t_2986455471, key_2986455472, val_2986455473) {
    HEX5BHEX5DHEX3D_2986442311(t_2986455471, key_2986455472, val_2986455473);

  
}

function base_2969567326(node_2969567327) {
  var result_2969567328 = null;

  BeforeRet: {
    if ((node_2969567327.parent == null)) {
    result_2969567328 = node_2969567327;
    break BeforeRet;
    }
    
    result_2969567328 = base_2969567326(node_2969567327.parent);
    break BeforeRet;
  };

  return result_2969567328;

}

function len_2986456156(t_2986456159) {
  var result_2986456160 = 0;

    result_2986456160 = t_2986456159.counter;

  return result_2986456160;

}

function computeSymbolsImpl_2986345277(ctx_2986345278, node_2986345279) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_2986455263 = null;

    var logQueryHEX60gensym732_2986455265 = (ctx_2986345278.enableLogging || ctx_2986345278.enableQueryLogging);
    if (logQueryHEX60gensym732_2986455265) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym732_2986455265) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345279) || []));
    }
    
    try {
    result_2986455263 = newTable_2986442112(32);
      var oHEX60gensym733_2986455347 = findWithParentRec_2969569157(node_2986345279, 7);
      if (!isSome_2969569114(oHEX60gensym733_2986455347)) Temporary4 = false; else {        var parentInNodeList_2986455393 = get_2969569134(oHEX60gensym733_2986455347);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_2986455393.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_2986455398 = computeSymbols_2986428140(ctx_2986345278, parentInNodeList_2986455393.parent, true);
    Label5: {
      var id_2986455403 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_2986455404 = null;
      var L_2936013184 = len_3070231838(parentSymbols_2986455398);
      Label6: {
        var h_2936013186 = 0;
        var colontmp__2936013187 = 0;
        colontmp__2936013187 = (parentSymbols_2986455398.data).length - 1;
        var res_2936013188 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2936013188 <= colontmp__2936013187)) break Label8;
              h_2936013186 = res_2936013188;
              if (isFilled_1308622880(parentSymbols_2986455398.data[chckIndx(h_2936013186, 0, (parentSymbols_2986455398.data).length - 1)].Field0)) {
              var colontmp__2936013191 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_2986455398.data[chckIndx(h_2936013186, 0, (parentSymbols_2986455398.data).length - 1)].Field1, NTI2046820355), Field1: parentSymbols_2986455398.data[chckIndx(h_2936013186, 0, (parentSymbols_2986455398.data).length - 1)].Field2}, NTI3070231514);
              id_2986455403 = nimCopy(id_2986455403, colontmp__2936013191["Field0"], NTI2046820355);
              sym_2986455404 = colontmp__2936013191["Field1"];
              HEX5BHEX5DHEX3D_2986455468(result_2986455263, id_2986455403, sym_2986455404);
              if (!((len_3070231838(parentSymbols_2986455398) == L_2936013184))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013188 = addInt(res_2936013188, 1);
            }
        };
      };
    };
    recordDependency_2986398524(ctx_2986345278, getItem_2986398737(parentInNodeList_2986455393.parent), -1);
    var bIsOrderDependent_2986455627 = !((parentInNodeList_2986455393.parent.parent == null));
    Label9: {
      var child_2986455631 = null;
      var i_2936013194 = 0;
      var L_2936013195 = (parentInNodeList_2986455393.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2936013194 < L_2936013195)) break Label11;
            child_2986455631 = parentInNodeList_2986455393.parent.children[chckIndx(i_2936013194, 0, (parentInNodeList_2986455393.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_2986455627 && (child_2986455631 == parentInNodeList_2986455393))) {
              break Label9;
              }
              
              if (((!((child_2986455631.kind == 4)) && !((child_2986455631.kind == 5))) && !((child_2986455631.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym739_2986455650 = computeSymbol_2986424640(ctx_2986345278, child_2986455631, true);
                if (!isSome_3070232129(oHEX60gensym739_2986455650)) Temporary13 = false; else {                  var symbol_2986455696 = get_3070232149(oHEX60gensym739_2986455650);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_2986455468(result_2986455263, symbol_2986455696.id, symbol_2986455696);
              }
              
            };
            i_2936013194 = addInt(i_2936013194, 1);
            if (!(((parentInNodeList_2986455393.parent.children).length == L_2936013195))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym740_2986455768 = findWithParentRec_2969569157(node_2986345279, 11);
      if (!isSome_2969569114(oHEX60gensym740_2986455768)) Temporary14 = false; else {        var parentInFunctionDef_2986455814 = get_2969569134(oHEX60gensym740_2986455768);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_2986455815 = parentInFunctionDef_2986455814.parent;
    if ((0 < len_2969567320(functionDefinition_2986455815))) {
    var params_2986455816 = HEX5BHEX5D_2969567316(functionDefinition_2986455815, 0);
    recordDependency_2986398524(ctx_2986345278, getItem_2986398737(params_2986455816), -1);
    Label15: {
      var param_2986455820 = null;
      var i_2936013198 = 0;
      var L_2936013199 = (params_2986455816.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2936013198 < L_2936013199)) break Label17;
            param_2986455820 = params_2986455816.children[chckIndx(i_2936013198, 0, (params_2986455816.children).length - 1)];
            recordDependency_2986398524(ctx_2986345278, getItem_2986398737(param_2986455820), -1);
              var oHEX60gensym742_2986455823 = computeSymbol_2986424640(ctx_2986345278, param_2986455820, true);
              if (!isSome_3070232129(oHEX60gensym742_2986455823)) Temporary18 = false; else {                var symbol_2986455869 = get_3070232149(oHEX60gensym742_2986455823);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_2986455468(result_2986455263, param_2986455820.id, symbol_2986455869);
            }
            
            i_2936013198 = addInt(i_2936013198, 1);
            if (!(((params_2986455816.children).length == L_2936013199))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_2986455939 = base_2969567326(node_2986345279);
    recordDependency_2986398524(ctx_2986345278, getItem_2986398737(root_2986455939), -1);
    Label19: {
      var child_2986455943 = null;
      var i_2936013203 = 0;
      var L_2936013204 = (root_2986455939.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2936013203 < L_2936013204)) break Label21;
            child_2986455943 = root_2986455939.children[chckIndx(i_2936013203, 0, (root_2986455939.children).length - 1)];
            Label22: {
              if (((!((child_2986455943.kind == 4)) && !((child_2986455943.kind == 5))) && !((child_2986455943.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym746_2986455958 = computeSymbol_2986424640(ctx_2986345278, child_2986455943, true);
                if (!isSome_3070232129(oHEX60gensym746_2986455958)) Temporary23 = false; else {                  var symbol_2986456004 = get_3070232149(oHEX60gensym746_2986455958);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_2986455468(result_2986455263, symbol_2986456004.id, symbol_2986456004);
              }
              
            };
            i_2936013203 = addInt(i_2936013203, 1);
            if (!(((root_2986455939.children).length == L_2936013204))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_2986456497 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2986456498 = null;
      var L_2936013211 = len_2986456156(ctx_2986345278.globalScope);
      Label25: {
        var h_2936013213 = 0;
        var colontmp__2936013214 = 0;
        colontmp__2936013214 = (ctx_2986345278.globalScope.data).length - 1;
        var res_2936013215 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2936013215 <= colontmp__2936013214)) break Label27;
              h_2936013213 = res_2936013215;
              if (isFilled_1308622880(ctx_2986345278.globalScope.data[chckIndx(h_2936013213, 0, (ctx_2986345278.globalScope.data).length - 1)].Field0)) {
              var colontmp__2936013218 = nimCopy(null, {Field0: nimCopy(null, ctx_2986345278.globalScope.data[chckIndx(h_2936013213, 0, (ctx_2986345278.globalScope.data).length - 1)].Field1, NTI2046820355), Field1: ctx_2986345278.globalScope.data[chckIndx(h_2936013213, 0, (ctx_2986345278.globalScope.data).length - 1)].Field2}, NTI2986409679);
              key_2986456497 = nimCopy(key_2986456497, colontmp__2936013218["Field0"], NTI2046820355);
              symbol_2986456498 = colontmp__2936013218["Field1"];
              recordDependency_2986398524(ctx_2986345278, getItem_2986408006(symbol_2986456498), -1);
              HEX5BHEX5DHEX3D_2986455468(result_2986455263, symbol_2986456498.id, symbol_2986456498);
              if (!((len_2986456156(ctx_2986345278.globalScope) == L_2936013211))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013215 = addInt(res_2936013215, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym732_2986455265 && false)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2986398050(result_2986455263) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym732_2986455265) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }

  return result_2986455263;

}

function getOrDefault_2986362232(t_2986362235, key_2986362236, default_2986362237) {
    var Temporary1;

  var result_2986362238 = null;

    var hcHEX60gensym201_2986362241 = [0];
    var indexHEX60gensym201_2986362600 = rawGet_2986362242(t_2986362235, key_2986362236, hcHEX60gensym201_2986362241, 0);
    if ((0 <= indexHEX60gensym201_2986362600)) {
    Temporary1 = t_2986362235.data[chckIndx(indexHEX60gensym201_2986362600, 0, (t_2986362235.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986362237;
    }
    
    result_2986362238 = Temporary1;

  return result_2986362238;

}

function newDoublyLinkedNode_2986362725(value_2986362727) {
  var result_2986362728 = null;

    result_2986362728 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986362728.value = nimCopy(result_2986362728.value, value_2986362727, NTI2986345032);

  return result_2986362728;

}

function mustRehash_2986363075(t_2986363077) {
  var result_2986363078 = false;

    if (!((t_2986363077.counter < (t_2986363077.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986363078 = ((mulInt((t_2986363077.data).length, 2) < mulInt(t_2986363077.counter, 3)) || (subInt((t_2986363077.data).length, t_2986363077.counter) < 4));

  return result_2986363078;

}

function rawInsert_2986363768(t_2986363772, data_2986363773, data_2986363773_Idx, key_2986363774, val_2986363775, hc_2986363776, h_2986363777) {
    data_2986363773[data_2986363773_Idx][chckIndx(h_2986363777, 0, (data_2986363773[data_2986363773_Idx]).length - 1)].Field1 = key_2986363774;
    data_2986363773[data_2986363773_Idx][chckIndx(h_2986363777, 0, (data_2986363773[data_2986363773_Idx]).length - 1)].Field2 = val_2986363775;
    data_2986363773[data_2986363773_Idx][chckIndx(h_2986363777, 0, (data_2986363773[data_2986363773_Idx]).length - 1)].Field0 = hc_2986363776;

  
}

function enlarge_2986363332(t_2986363335) {
    var n_2986363338 = [];
    n_2986363338 = new Array(chckRange(mulInt((t_2986363335.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986363335.data).length, 2), 0, 2147483647) ; ++i) { n_2986363338[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986363335.data; t_2986363335.data = n_2986363338; n_2986363338 = Temporary1;    Label2: {
      var i_2986363436 = 0;
      var colontmp__2936013227 = 0;
      colontmp__2936013227 = (n_2986363338).length - 1;
      var res_2936013228 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013228 <= colontmp__2936013227)) break Label4;
            i_2986363436 = res_2936013228;
            var eh_2986363517 = n_2986363338[chckIndx(i_2986363436, 0, (n_2986363338).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986363517)) {
            var j_2986363521 = (eh_2986363517 & (t_2986363335.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986363335.data[chckIndx(j_2986363521, 0, (t_2986363335.data).length - 1)].Field0)) break Label6;
                  j_2986363521 = nextTry_1308622883(j_2986363521, (t_2986363335.data).length - 1);
                }
            };
            rawInsert_2986363768(t_2986363335, t_2986363335, "data", n_2986363338[chckIndx(i_2986363436, 0, (n_2986363338).length - 1)].Field1, n_2986363338[chckIndx(i_2986363436, 0, (n_2986363338).length - 1)].Field2, eh_2986363517, j_2986363521);
            }
            
            res_2936013228 = addInt(res_2936013228, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986364018(t_2986364021, key_2986364022, hc_2986364023) {
  var result_2986364024 = 0;

  BeforeRet: {
    if (((t_2986364021.data).length == 0)) {
    result_2986364024 = -1;
    break BeforeRet;
    }
    
    var h_2986364109 = (hc_2986364023 & (t_2986364021.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986364021.data[chckIndx(h_2986364109, 0, (t_2986364021.data).length - 1)].Field0)) break Label2;
          if (((t_2986364021.data[chckIndx(h_2986364109, 0, (t_2986364021.data).length - 1)].Field0 == hc_2986364023) && (t_2986364021.data[chckIndx(h_2986364109, 0, (t_2986364021.data).length - 1)].Field1 == key_2986364022))) {
          result_2986364024 = h_2986364109;
          break BeforeRet;
          }
          
          h_2986364109 = nextTry_1308622883(h_2986364109, (t_2986364021.data).length - 1);
        }
    };
    result_2986364024 = subInt(-1, h_2986364109);
  };

  return result_2986364024;

}

function HEX5BHEX5DHEX3D_2986362807(t_2986362810, key_2986362811, val_2986362812) {
    if (((t_2986362810.data).length == 0)) {
    var correctSizeHEX60gensym206_2986362895 = slotsNeeded_1308622891(32);
    t_2986362810.counter = 0;
    t_2986362810.data = new Array(chckRange(correctSizeHEX60gensym206_2986362895, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym206_2986362895, 0, 2147483647) ; ++i) { t_2986362810.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986362900 = [0];
    var index_2986362907 = rawGet_2986362242(t_2986362810, key_2986362811, hc_2986362900, 0);
    if ((0 <= index_2986362907)) {
    t_2986362810.data[chckIndx(index_2986362907, 0, (t_2986362810.data).length - 1)].Field2 = val_2986362812;
    }
    else {
      if (((t_2986362810.data).length == 0)) {
      var correctSizeHEX60gensym209_2986363070 = slotsNeeded_1308622891(32);
      t_2986362810.counter = 0;
      t_2986362810.data = new Array(chckRange(correctSizeHEX60gensym209_2986363070, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym209_2986363070, 0, 2147483647) ; ++i) { t_2986362810.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986363075(t_2986362810)) {
      enlarge_2986363332(t_2986362810);
      index_2986362907 = rawGetKnownHC_2986364018(t_2986362810, key_2986362811, hc_2986362900[0]);
      }
      
      index_2986362907 = subInt(-1, index_2986362907);
      rawInsert_2986363768(t_2986362810, t_2986362810, "data", key_2986362811, val_2986362812, hc_2986362900[0], index_2986362907);
      t_2986362810.counter = addInt(t_2986362810.counter, 1);
    }
    

  
}

function len_2986364838(t_2986364841) {
  var result_2986364842 = 0;

    result_2986364842 = t_2986364841.counter;

  return result_2986364842;

}

function len_2986364755(cache_2986364758) {
  var result_2986364759 = 0;

    result_2986364759 = len_2986364838(cache_2986364758.table);

  return result_2986364759;

}

function del_2986364930(t_2986364933, key_2986364934) {
    var hc_2986364935 = [0];
    var i_2986364942 = rawGet_2986362242(t_2986364933, key_2986364934, hc_2986364935, 0);
    var mskHEX60gensym36_2986364946 = (t_2986364933.data).length - 1;
    if ((0 <= i_2986364942)) {
    t_2986364933.counter = subInt(t_2986364933.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986364953 = i_2986364942;
            var rHEX60gensym36_2986364954 = jHEX60gensym36_2986364953;
            t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)].Field0 = 0;
            t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)].Field1 = null;
            t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986364942 = (addInt(i_2986364942, 1) & mskHEX60gensym36_2986364946);
                  if (isEmpty_1308622877(t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986364954 = (t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)].Field0 & mskHEX60gensym36_2986364946);
                  if (!(((((rHEX60gensym36_2986364954 <= i_2986364942) && (jHEX60gensym36_2986364953 < rHEX60gensym36_2986364954)) || ((jHEX60gensym36_2986364953 < rHEX60gensym36_2986364954) && (i_2986364942 < jHEX60gensym36_2986364953))) || ((i_2986364942 < jHEX60gensym36_2986364953) && (rHEX60gensym36_2986364954 <= i_2986364942))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986364933.data[chckIndx(jHEX60gensym36_2986364953, 0, (t_2986364933.data).length - 1)] = nimCopy(t_2986364933.data[chckIndx(jHEX60gensym36_2986364953, 0, (t_2986364933.data).length - 1)], t_2986364933.data[chckIndx(i_2986364942, 0, (t_2986364933.data).length - 1)], NTI2986345068);
          }
      };
    };
    }
    

  
}

function resize_2986364673(cache_2986364676) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986364676.capacity < len_2986364755(cache_2986364676))) break Label2;
          var t_2986364843 = cache_2986364676.list.tail;
          if (cache_2986364676.recordRemovedKeys) {
          incl_2986350430(cache_2986364676.removedKeys, t_2986364843.value.key);
          }
          
          del_2986364930(cache_2986364676.table, t_2986364843.value.key);
          remove_2986365689(cache_2986364676.list, t_2986364843);
        }
    };

  
}

function addNewNode_2986362717(cache_2986362720, key_2986362721, val_2986362722) {
    var node_2986362743 = newDoublyLinkedNode_2986362725({key: key_2986362721, val: val_2986362722});
    HEX5BHEX5DHEX3D_2986362807(cache_2986362720.table, key_2986362721, node_2986362743);
    prepend_2986364418(cache_2986362720.list, node_2986362743);
    if (cache_2986362720.recordRemovedKeys) {
    excl_2986349271(cache_2986362720.removedKeys, key_2986362721);
    }
    
    resize_2986364673(cache_2986362720);

  
}

function HEX5BHEX5DHEX3D_2986362137(cache_2986362140, key_2986362141, val_2986362142) {
    var node_2986362690 = getOrDefault_2986362232(cache_2986362140.table, key_2986362141, null);
    if ((node_2986362690 == null)) {
    addNewNode_2986362717(cache_2986362140, key_2986362141, val_2986362142);
    }
    else {
      node_2986362690.value.val = val_2986362142;
      remove_2986365689(cache_2986362140.list, node_2986362690);
      prepend_2986364418(cache_2986362140.list, node_2986362690);
    }
    

  
}

function fingerprint_3070231776(symbols_3070231784) {
  var result_3070231785 = [[]];

    result_3070231785[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3070232100 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3070232101 = null;
      var L_2936013235 = len_3070231838(symbols_3070231784);
      Label2: {
        var h_2936013237 = 0;
        var colontmp__2936013238 = 0;
        colontmp__2936013238 = (symbols_3070231784.data).length - 1;
        var res_2936013239 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936013239 <= colontmp__2936013238)) break Label4;
              h_2936013237 = res_2936013239;
              if (isFilled_1308622880(symbols_3070231784.data[chckIndx(h_2936013237, 0, (symbols_3070231784.data).length - 1)].Field0)) {
              var colontmp__2936013242 = nimCopy(null, {Field0: nimCopy(null, symbols_3070231784.data[chckIndx(h_2936013237, 0, (symbols_3070231784.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3070231784.data[chckIndx(h_2936013237, 0, (symbols_3070231784.data).length - 1)].Field2}, NTI3070231514);
              key_3070232100 = nimCopy(key_3070232100, colontmp__2936013242["Field0"], NTI2046820355);
              value_3070232101 = colontmp__2936013242["Field1"];
              add_3070231175(result_3070231785, 0, fingerprint_3070231721(value_3070232101));
              if (!((len_3070231838(symbols_3070231784) == L_2936013235))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013239 = addInt(res_2936013239, 1);
            }
        };
      };
    };

  return result_3070231785[0];

}

function initDoublyLinkedList_2986366156() {
  var result_2986366158 = ({head: null, tail: null});

  return result_2986366158;

}

function initTable_2986366162(initialSize_2986366165) {
  var result_2986366166 = ({data: [], counter: 0});

    var correctSizeHEX60gensym219_2986366168 = slotsNeeded_1308622891(chckRange(initialSize_2986366165, 0, 2147483647));
    result_2986366166.counter = 0;
    result_2986366166.data = new Array(chckRange(correctSizeHEX60gensym219_2986366168, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym219_2986366168, 0, 2147483647) ; ++i) { result_2986366166.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986366166;

}

function newLruCache_2986366146(capacity_2986366149, recordRemovedKeys_2986366150) {
  var result_2986366151 = null;

    result_2986366151 = {capacity: capacity_2986366149, list: initDoublyLinkedList_2986366156(), table: initTable_2986366162(correctSize_3019898901(capacity_2986366149)), recordRemovedKeys: recordRemovedKeys_2986366150, removedKeys: ({data: [], counter: 0})};

  return result_2986366151;

}

function newCache_2986366141(capacity_2986366144) {
  var result_2986366145 = null;

    result_2986366145 = newLruCache_2986366146(capacity_2986366144, false);

  return result_2986366145;

}

function init_2986366136(result_2986366139, result_2986366139_Idx, capacity_2986366140) {
    result_2986366139[result_2986366139_Idx] = newCache_2986366141(capacity_2986366140);

  
}

function hasKey_2986366379(t_2986366382, key_2986366383) {
  var result_2986366384 = false;

    var hc_2986366385 = [0];
    result_2986366384 = (0 <= rawGet_2986366386(t_2986366382, key_2986366383, hc_2986366385, 0));

  return result_2986366384;

}

function contains_2986366373(t_2986366376, key_2986366377) {
  var result_2986366378 = false;

  BeforeRet: {
    result_2986366378 = hasKey_2986366379(t_2986366376, key_2986366377);
    break BeforeRet;
  };

  return result_2986366378;

}

function contains_2986366279(cache_2986366282, key_2986366283) {
  var result_2986366284 = false;

    result_2986366284 = contains_2986366373(cache_2986366282.table, key_2986366283);

  return result_2986366284;

}

function HEX5BHEX5D_2986366918(t_2986366921, key_2986366922) {
  var result_2986366923 = null;
  var result_2986366923_Idx = 0;

    var hcHEX60gensym22_2986366924 = [0];
    var indexHEX60gensym22_2986366931 = rawGet_2986366386(t_2986366921, key_2986366922, hcHEX60gensym22_2986366924, 0);
    if ((0 <= indexHEX60gensym22_2986366931)) {
    result_2986366923 = t_2986366921.data[chckIndx(indexHEX60gensym22_2986366931, 0, (t_2986366921.data).length - 1)]; result_2986366923_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986366922);
    }
    

  return [result_2986366923, result_2986366923_Idx];

}

function HEX5BHEX5D_2986366832(cache_2986366835, key_2986366836) {
    var Temporary1;

  var result_2986366837 = null;

    var node_2986367024 = (Temporary1 = HEX5BHEX5D_2986366918(cache_2986366835.table, key_2986366836), Temporary1)[0][Temporary1[1]];
    result_2986366837 = node_2986367024.value.val;
    remove_2986367038(cache_2986366835.list, node_2986367024);
    prepend_2986367366(cache_2986366835.list, node_2986367024);

  return result_2986366837;

}

function computeSymbolTypeImpl_2986345282(ctx_2986345283, symbol_2986345284) {
      var Temporary3;
      var Temporary4;

  var result_2986444269 = null;

  BeforeRet: {
    var logQueryHEX60gensym553_2986444271 = (ctx_2986345283.enableLogging || ctx_2986345283.enableQueryLogging);
    if (logQueryHEX60gensym553_2986444271) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym553_2986444271) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3070231688(symbol_2986345284) || []));
    }
    
    try {
    switch (symbol_2986345284.kind) {
    case 0:
      var Temporary3 = symbol_2986345284;
      if (ConstSet134[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_2986444269 = computeType_2986418034(ctx_2986345283, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2986345284;
      if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      result_2986444269 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym553_2986444271 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070230964(result_2986444269) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym553_2986444271) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986444269;

}

function getOrDefault_2986367739(t_2986367742, key_2986367743, default_2986367744) {
    var Temporary1;

  var result_2986367745 = null;

    var hcHEX60gensym226_2986367748 = [0];
    var indexHEX60gensym226_2986368103 = rawGet_2986367749(t_2986367742, key_2986367743, hcHEX60gensym226_2986367748, 0);
    if ((0 <= indexHEX60gensym226_2986368103)) {
    Temporary1 = t_2986367742.data[chckIndx(indexHEX60gensym226_2986368103, 0, (t_2986367742.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986367744;
    }
    
    result_2986367745 = Temporary1;

  return result_2986367745;

}

function newDoublyLinkedNode_2986368228(value_2986368230) {
  var result_2986368231 = null;

    result_2986368231 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986368231.value = nimCopy(result_2986368231.value, value_2986368230, NTI2986345098);

  return result_2986368231;

}

function mustRehash_2986368578(t_2986368580) {
  var result_2986368581 = false;

    if (!((t_2986368580.counter < (t_2986368580.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986368581 = ((mulInt((t_2986368580.data).length, 2) < mulInt(t_2986368580.counter, 3)) || (subInt((t_2986368580.data).length, t_2986368580.counter) < 4));

  return result_2986368581;

}

function rawInsert_2986369271(t_2986369275, data_2986369276, data_2986369276_Idx, key_2986369277, val_2986369278, hc_2986369279, h_2986369280) {
    data_2986369276[data_2986369276_Idx][chckIndx(h_2986369280, 0, (data_2986369276[data_2986369276_Idx]).length - 1)].Field1 = key_2986369277;
    data_2986369276[data_2986369276_Idx][chckIndx(h_2986369280, 0, (data_2986369276[data_2986369276_Idx]).length - 1)].Field2 = val_2986369278;
    data_2986369276[data_2986369276_Idx][chckIndx(h_2986369280, 0, (data_2986369276[data_2986369276_Idx]).length - 1)].Field0 = hc_2986369279;

  
}

function enlarge_2986368835(t_2986368838) {
    var n_2986368841 = [];
    n_2986368841 = new Array(chckRange(mulInt((t_2986368838.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986368838.data).length, 2), 0, 2147483647) ; ++i) { n_2986368841[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986368838.data; t_2986368838.data = n_2986368841; n_2986368841 = Temporary1;    Label2: {
      var i_2986368939 = 0;
      var colontmp__2936013245 = 0;
      colontmp__2936013245 = (n_2986368841).length - 1;
      var res_2936013246 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013246 <= colontmp__2936013245)) break Label4;
            i_2986368939 = res_2936013246;
            var eh_2986369020 = n_2986368841[chckIndx(i_2986368939, 0, (n_2986368841).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986369020)) {
            var j_2986369024 = (eh_2986369020 & (t_2986368838.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986368838.data[chckIndx(j_2986369024, 0, (t_2986368838.data).length - 1)].Field0)) break Label6;
                  j_2986369024 = nextTry_1308622883(j_2986369024, (t_2986368838.data).length - 1);
                }
            };
            rawInsert_2986369271(t_2986368838, t_2986368838, "data", n_2986368841[chckIndx(i_2986368939, 0, (n_2986368841).length - 1)].Field1, n_2986368841[chckIndx(i_2986368939, 0, (n_2986368841).length - 1)].Field2, eh_2986369020, j_2986369024);
            }
            
            res_2936013246 = addInt(res_2936013246, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986369521(t_2986369524, key_2986369525, hc_2986369526) {
  var result_2986369527 = 0;

  BeforeRet: {
    if (((t_2986369524.data).length == 0)) {
    result_2986369527 = -1;
    break BeforeRet;
    }
    
    var h_2986369612 = (hc_2986369526 & (t_2986369524.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986369524.data[chckIndx(h_2986369612, 0, (t_2986369524.data).length - 1)].Field0)) break Label2;
          if (((t_2986369524.data[chckIndx(h_2986369612, 0, (t_2986369524.data).length - 1)].Field0 == hc_2986369526) && HEX3DHEX3D_3070231694(t_2986369524.data[chckIndx(h_2986369612, 0, (t_2986369524.data).length - 1)].Field1, key_2986369525))) {
          result_2986369527 = h_2986369612;
          break BeforeRet;
          }
          
          h_2986369612 = nextTry_1308622883(h_2986369612, (t_2986369524.data).length - 1);
        }
    };
    result_2986369527 = subInt(-1, h_2986369612);
  };

  return result_2986369527;

}

function HEX5BHEX5DHEX3D_2986368310(t_2986368313, key_2986368314, val_2986368315) {
    if (((t_2986368313.data).length == 0)) {
    var correctSizeHEX60gensym231_2986368398 = slotsNeeded_1308622891(32);
    t_2986368313.counter = 0;
    t_2986368313.data = new Array(chckRange(correctSizeHEX60gensym231_2986368398, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym231_2986368398, 0, 2147483647) ; ++i) { t_2986368313.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986368403 = [0];
    var index_2986368410 = rawGet_2986367749(t_2986368313, key_2986368314, hc_2986368403, 0);
    if ((0 <= index_2986368410)) {
    t_2986368313.data[chckIndx(index_2986368410, 0, (t_2986368313.data).length - 1)].Field2 = val_2986368315;
    }
    else {
      if (((t_2986368313.data).length == 0)) {
      var correctSizeHEX60gensym234_2986368573 = slotsNeeded_1308622891(32);
      t_2986368313.counter = 0;
      t_2986368313.data = new Array(chckRange(correctSizeHEX60gensym234_2986368573, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_2986368573, 0, 2147483647) ; ++i) { t_2986368313.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986368578(t_2986368313)) {
      enlarge_2986368835(t_2986368313);
      index_2986368410 = rawGetKnownHC_2986369521(t_2986368313, key_2986368314, hc_2986368403[0]);
      }
      
      index_2986368410 = subInt(-1, index_2986368410);
      rawInsert_2986369271(t_2986368313, t_2986368313, "data", key_2986368314, val_2986368315, hc_2986368403[0], index_2986368410);
      t_2986368313.counter = addInt(t_2986368313.counter, 1);
    }
    

  
}

function rawGet_2986370166(t_2986370169, key_2986370170, hc_2986370171, hc_2986370171_Idx) {
  var result_2986370172 = 0;

  BeforeRet: {
    hc_2986370171[hc_2986370171_Idx] = hash_3070231691(key_2986370170);
    if ((hc_2986370171[hc_2986370171_Idx] == 0)) {
    hc_2986370171[hc_2986370171_Idx] = 314159265;
    }
    
    if (((t_2986370169.data).length == 0)) {
    result_2986370172 = -1;
    break BeforeRet;
    }
    
    var h_2986370258 = (hc_2986370171[hc_2986370171_Idx] & (t_2986370169.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986370169.data[chckIndx(h_2986370258, 0, (t_2986370169.data).length - 1)].Field0)) break Label2;
          if (((t_2986370169.data[chckIndx(h_2986370258, 0, (t_2986370169.data).length - 1)].Field0 == hc_2986370171[hc_2986370171_Idx]) && HEX3DHEX3D_3070231694(t_2986370169.data[chckIndx(h_2986370258, 0, (t_2986370169.data).length - 1)].Field1, key_2986370170))) {
          result_2986370172 = h_2986370258;
          break BeforeRet;
          }
          
          h_2986370258 = nextTry_1828716586(h_2986370258, (t_2986370169.data).length - 1);
        }
    };
    result_2986370172 = subInt(-1, h_2986370258);
  };

  return result_2986370172;

}

function exclImpl_2986370160(s_2986370162, key_2986370163) {
          var Temporary5;

  var result_2986370164 = false;

  BeforeRet: {
    var hc_2986370165 = [0];
    var i_2986370520 = rawGet_2986370166(s_2986370162, key_2986370163, hc_2986370165, 0);
    var msk_2986370524 = (s_2986370162.data).length - 1;
    result_2986370164 = true;
    if ((0 <= i_2986370520)) {
    result_2986370164 = false;
    s_2986370162.counter = subInt(s_2986370162.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986370530 = i_2986370520;
          var r_2986370531 = j_2986370530;
          s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)].Field0 = 0;
          s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986370520 = (addInt(i_2986370520, 1) & msk_2986370524);
                if (isEmpty_1828716580(s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986370531 = (s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)].Field0 & msk_2986370524);
                if (!(((((r_2986370531 <= i_2986370520) && (j_2986370530 < r_2986370531)) || ((j_2986370530 < r_2986370531) && (i_2986370520 < j_2986370530))) || ((i_2986370520 < j_2986370530) && (r_2986370531 <= i_2986370520))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)];
          s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)] = genericReset(s_2986370162.data[chckIndx(i_2986370520, 0, (s_2986370162.data).length - 1)], NTI2986345154);
          s_2986370162.data[chckIndx(j_2986370530, 0, (s_2986370162.data).length - 1)] = nimCopy(s_2986370162.data[chckIndx(j_2986370530, 0, (s_2986370162.data).length - 1)], Temporary5, NTI2986345154);
        }
    };
    }
    
  };

  return result_2986370164;

}

function excl_2986370145(s_2986370147, key_2986370148) {
    var _ = exclImpl_2986370160(s_2986370147, key_2986370148);

  
}

function len_2986371284(t_2986371287) {
  var result_2986371288 = 0;

    result_2986371288 = t_2986371287.counter;

  return result_2986371288;

}

function len_2986371201(cache_2986371204) {
  var result_2986371205 = 0;

    result_2986371205 = len_2986371284(cache_2986371204.table);

  return result_2986371205;

}

function mustRehash_2986371425(t_2986371427) {
  var result_2986371428 = false;

    if (!((t_2986371427.counter < (t_2986371427.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986371428 = ((mulInt((t_2986371427.data).length, 2) < mulInt(t_2986371427.counter, 3)) || (subInt((t_2986371427.data).length, t_2986371427.counter) < 4));

  return result_2986371428;

}

function rawGetKnownHC_2986372031(t_2986372034, key_2986372035, hc_2986372036) {
  var result_2986372037 = 0;

  BeforeRet: {
    if (((t_2986372034.data).length == 0)) {
    result_2986372037 = -1;
    break BeforeRet;
    }
    
    var h_2986372122 = (hc_2986372036 & (t_2986372034.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986372034.data[chckIndx(h_2986372122, 0, (t_2986372034.data).length - 1)].Field0)) break Label2;
          if (((t_2986372034.data[chckIndx(h_2986372122, 0, (t_2986372034.data).length - 1)].Field0 == hc_2986372036) && HEX3DHEX3D_3070231694(t_2986372034.data[chckIndx(h_2986372122, 0, (t_2986372034.data).length - 1)].Field1, key_2986372035))) {
          result_2986372037 = h_2986372122;
          break BeforeRet;
          }
          
          h_2986372122 = nextTry_1828716586(h_2986372122, (t_2986372034.data).length - 1);
        }
    };
    result_2986372037 = subInt(-1, h_2986372122);
  };

  return result_2986372037;

}

function rawInsert_2986372531(s_2986372533, data_2986372534, data_2986372534_Idx, key_2986372535, hc_2986372536, h_2986372537) {
    if (((data_2986372534[data_2986372534_Idx]).length == 0)) {
    var correctSizeHEX60gensym253_2986372620 = slotsNeeded_1828716594(64);
    s_2986372533.counter = 0;
    s_2986372533.data = new Array(chckRange(correctSizeHEX60gensym253_2986372620, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym253_2986372620, 0, 2147483647) ; ++i) { s_2986372533.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986372534[data_2986372534_Idx][chckIndx(h_2986372537, 0, (data_2986372534[data_2986372534_Idx]).length - 1)].Field1 = key_2986372535;
    data_2986372534[data_2986372534_Idx][chckIndx(h_2986372537, 0, (data_2986372534[data_2986372534_Idx]).length - 1)].Field0 = hc_2986372536;

  
}

function enlarge_2986371688(s_2986371690) {
    var n_2986371692 = [];
    n_2986371692 = new Array(chckRange(mulInt((s_2986371690.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986371690.data).length, 2), 0, 2147483647) ; ++i) { n_2986371692[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986371690.data; s_2986371690.data = n_2986371692; n_2986371692 = Temporary1;    Label2: {
      var i_2986371790 = 0;
      var colontmp__2936013254 = 0;
      colontmp__2936013254 = (n_2986371692).length - 1;
      var res_2936013255 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013255 <= colontmp__2936013254)) break Label4;
            i_2986371790 = res_2936013255;
            if (isFilled_1828716583(n_2986371692[chckIndx(i_2986371790, 0, (n_2986371692).length - 1)].Field0)) {
            var j_2986372366 = subInt(-1, rawGetKnownHC_2986372031(s_2986371690, n_2986371692[chckIndx(i_2986371790, 0, (n_2986371692).length - 1)].Field1, n_2986371692[chckIndx(i_2986371790, 0, (n_2986371692).length - 1)].Field0));
            rawInsert_2986372531(s_2986371690, s_2986371690, "data", n_2986371692[chckIndx(i_2986371790, 0, (n_2986371692).length - 1)].Field1, n_2986371692[chckIndx(i_2986371790, 0, (n_2986371692).length - 1)].Field0, j_2986372366);
            }
            
            res_2936013255 = addInt(res_2936013255, 1);
          }
      };
    };

  
}

function incl_2986371309(s_2986371311, key_2986371312) {
    if (((s_2986371311.data).length == 0)) {
    var correctSizeHEX60gensym246_2986371395 = slotsNeeded_1828716594(64);
    s_2986371311.counter = 0;
    s_2986371311.data = new Array(chckRange(correctSizeHEX60gensym246_2986371395, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_2986371395, 0, 2147483647) ; ++i) { s_2986371311.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986371410 = [0];
    var index_2986371424 = rawGet_2986370166(s_2986371311, key_2986371312, hc_2986371410, 0);
    if ((index_2986371424 < 0)) {
    if (mustRehash_2986371425(s_2986371311)) {
    enlarge_2986371688(s_2986371311);
    index_2986371424 = rawGetKnownHC_2986372031(s_2986371311, key_2986371312, hc_2986371410[0]);
    }
    
    rawInsert_2986372531(s_2986371311, s_2986371311, "data", key_2986371312, hc_2986371410[0], subInt(-1, index_2986371424));
    s_2986371311.counter = addInt(s_2986371311.counter, 1);
    }
    

  
}

function del_2986372887(t_2986372890, key_2986372891) {
    var hc_2986372892 = [0];
    var i_2986372899 = rawGet_2986367749(t_2986372890, key_2986372891, hc_2986372892, 0);
    var mskHEX60gensym36_2986372903 = (t_2986372890.data).length - 1;
    if ((0 <= i_2986372899)) {
    t_2986372890.counter = subInt(t_2986372890.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986372910 = i_2986372899;
            var rHEX60gensym36_2986372911 = jHEX60gensym36_2986372910;
            t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)].Field0 = 0;
            t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)].Field1 = null;
            t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986372899 = (addInt(i_2986372899, 1) & mskHEX60gensym36_2986372903);
                  if (isEmpty_1308622877(t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986372911 = (t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)].Field0 & mskHEX60gensym36_2986372903);
                  if (!(((((rHEX60gensym36_2986372911 <= i_2986372899) && (jHEX60gensym36_2986372910 < rHEX60gensym36_2986372911)) || ((jHEX60gensym36_2986372910 < rHEX60gensym36_2986372911) && (i_2986372899 < jHEX60gensym36_2986372910))) || ((i_2986372899 < jHEX60gensym36_2986372910) && (rHEX60gensym36_2986372911 <= i_2986372899))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986372890.data[chckIndx(jHEX60gensym36_2986372910, 0, (t_2986372890.data).length - 1)] = nimCopy(t_2986372890.data[chckIndx(jHEX60gensym36_2986372910, 0, (t_2986372890.data).length - 1)], t_2986372890.data[chckIndx(i_2986372899, 0, (t_2986372890.data).length - 1)], NTI2986345134);
          }
      };
    };
    }
    

  
}

function resize_2986371119(cache_2986371122) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986371122.capacity < len_2986371201(cache_2986371122))) break Label2;
          var t_2986371289 = cache_2986371122.list.tail;
          if (cache_2986371122.recordRemovedKeys) {
          incl_2986371309(cache_2986371122.removedKeys, t_2986371289.value.key);
          }
          
          del_2986372887(cache_2986371122.table, t_2986371289.value.key);
          remove_2986373646(cache_2986371122.list, t_2986371289);
        }
    };

  
}

function addNewNode_2986368220(cache_2986368223, key_2986368224, val_2986368225) {
    var node_2986368246 = newDoublyLinkedNode_2986368228({key: key_2986368224, val: val_2986368225});
    HEX5BHEX5DHEX3D_2986368310(cache_2986368223.table, key_2986368224, node_2986368246);
    prepend_2986369917(cache_2986368223.list, node_2986368246);
    if (cache_2986368223.recordRemovedKeys) {
    excl_2986370145(cache_2986368223.removedKeys, key_2986368224);
    }
    
    resize_2986371119(cache_2986368223);

  
}

function HEX5BHEX5DHEX3D_2986367644(cache_2986367647, key_2986367648, val_2986367649) {
    var node_2986368193 = getOrDefault_2986367739(cache_2986367647.table, key_2986367648, null);
    if ((node_2986368193 == null)) {
    addNewNode_2986368220(cache_2986367647, key_2986367648, val_2986367649);
    }
    else {
      node_2986368193.value.val = val_2986367649;
      remove_2986373646(cache_2986367647.list, node_2986368193);
      prepend_2986369917(cache_2986367647.list, node_2986368193);
    }
    

  
}

function initDoublyLinkedList_2986374113() {
  var result_2986374115 = ({head: null, tail: null});

  return result_2986374115;

}

function initTable_2986374119(initialSize_2986374122) {
  var result_2986374123 = ({data: [], counter: 0});

    var correctSizeHEX60gensym254_2986374125 = slotsNeeded_1308622891(chckRange(initialSize_2986374122, 0, 2147483647));
    result_2986374123.counter = 0;
    result_2986374123.data = new Array(chckRange(correctSizeHEX60gensym254_2986374125, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym254_2986374125, 0, 2147483647) ; ++i) { result_2986374123.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986374123;

}

function newLruCache_2986374103(capacity_2986374106, recordRemovedKeys_2986374107) {
  var result_2986374108 = null;

    result_2986374108 = {capacity: capacity_2986374106, list: initDoublyLinkedList_2986374113(), table: initTable_2986374119(correctSize_3019898901(capacity_2986374106)), recordRemovedKeys: recordRemovedKeys_2986374107, removedKeys: ({data: [], counter: 0})};

  return result_2986374108;

}

function newCache_2986374098(capacity_2986374101) {
  var result_2986374102 = null;

    result_2986374102 = newLruCache_2986374103(capacity_2986374101, false);

  return result_2986374102;

}

function init_2986374093(result_2986374096, result_2986374096_Idx, capacity_2986374097) {
    result_2986374096[result_2986374096_Idx] = newCache_2986374098(capacity_2986374097);

  
}

function computeSymbolValueImpl_2986345285(ctx_2986345286, symbol_2986345287) {
      var Temporary3;
      var Temporary4;

  var result_2986444285 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym554_2986444287 = (ctx_2986345286.enableLogging || ctx_2986345286.enableQueryLogging);
    if (logQueryHEX60gensym554_2986444287) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym554_2986444287) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3070231688(symbol_2986345287) || []));
    }
    
    try {
    switch (symbol_2986345287.kind) {
    case 0:
      var Temporary3 = symbol_2986345287;
      if (ConstSet136[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_2986444285 = nimCopy(result_2986444285, computeValue_2986421510(ctx_2986345286, Temporary3.node, true), NTI3070230535);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2986345287;
      if (ConstSet137[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      result_2986444285 = nimCopy(result_2986444285, Temporary4.value, NTI3070230535);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym554_2986444287 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986444285) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym554_2986444287) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986444285;

}

function getOrDefault_2986374491(t_2986374494, key_2986374495, default_2986374496) {
    var Temporary1;

  var result_2986374497 = null;

    var hcHEX60gensym257_2986374500 = [0];
    var indexHEX60gensym257_2986374855 = rawGet_2986374501(t_2986374494, key_2986374495, hcHEX60gensym257_2986374500, 0);
    if ((0 <= indexHEX60gensym257_2986374855)) {
    Temporary1 = t_2986374494.data[chckIndx(indexHEX60gensym257_2986374855, 0, (t_2986374494.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986374496;
    }
    
    result_2986374497 = Temporary1;

  return result_2986374497;

}

function newDoublyLinkedNode_2986374980(value_2986374982) {
  var result_2986374983 = null;

    result_2986374983 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986374983.value = nimCopy(result_2986374983.value, value_2986374982, NTI2986345173);

  return result_2986374983;

}

function mustRehash_2986375339(t_2986375341) {
  var result_2986375342 = false;

    if (!((t_2986375341.counter < (t_2986375341.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986375342 = ((mulInt((t_2986375341.data).length, 2) < mulInt(t_2986375341.counter, 3)) || (subInt((t_2986375341.data).length, t_2986375341.counter) < 4));

  return result_2986375342;

}

function rawInsert_2986376032(t_2986376036, data_2986376037, data_2986376037_Idx, key_2986376038, val_2986376039, hc_2986376040, h_2986376041) {
    data_2986376037[data_2986376037_Idx][chckIndx(h_2986376041, 0, (data_2986376037[data_2986376037_Idx]).length - 1)].Field1 = key_2986376038;
    data_2986376037[data_2986376037_Idx][chckIndx(h_2986376041, 0, (data_2986376037[data_2986376037_Idx]).length - 1)].Field2 = val_2986376039;
    data_2986376037[data_2986376037_Idx][chckIndx(h_2986376041, 0, (data_2986376037[data_2986376037_Idx]).length - 1)].Field0 = hc_2986376040;

  
}

function enlarge_2986375596(t_2986375599) {
    var n_2986375602 = [];
    n_2986375602 = new Array(chckRange(mulInt((t_2986375599.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986375599.data).length, 2), 0, 2147483647) ; ++i) { n_2986375602[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986375599.data; t_2986375599.data = n_2986375602; n_2986375602 = Temporary1;    Label2: {
      var i_2986375700 = 0;
      var colontmp__2936013262 = 0;
      colontmp__2936013262 = (n_2986375602).length - 1;
      var res_2936013263 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013263 <= colontmp__2936013262)) break Label4;
            i_2986375700 = res_2936013263;
            var eh_2986375781 = n_2986375602[chckIndx(i_2986375700, 0, (n_2986375602).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986375781)) {
            var j_2986375785 = (eh_2986375781 & (t_2986375599.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986375599.data[chckIndx(j_2986375785, 0, (t_2986375599.data).length - 1)].Field0)) break Label6;
                  j_2986375785 = nextTry_1308622883(j_2986375785, (t_2986375599.data).length - 1);
                }
            };
            rawInsert_2986376032(t_2986375599, t_2986375599, "data", n_2986375602[chckIndx(i_2986375700, 0, (n_2986375602).length - 1)].Field1, n_2986375602[chckIndx(i_2986375700, 0, (n_2986375602).length - 1)].Field2, eh_2986375781, j_2986375785);
            }
            
            res_2936013263 = addInt(res_2936013263, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986376282(t_2986376285, key_2986376286, hc_2986376287) {
  var result_2986376288 = 0;

  BeforeRet: {
    if (((t_2986376285.data).length == 0)) {
    result_2986376288 = -1;
    break BeforeRet;
    }
    
    var h_2986376373 = (hc_2986376287 & (t_2986376285.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986376285.data[chckIndx(h_2986376373, 0, (t_2986376285.data).length - 1)].Field0)) break Label2;
          if (((t_2986376285.data[chckIndx(h_2986376373, 0, (t_2986376285.data).length - 1)].Field0 == hc_2986376287) && HEX3DHEX3D_3070231694(t_2986376285.data[chckIndx(h_2986376373, 0, (t_2986376285.data).length - 1)].Field1, key_2986376286))) {
          result_2986376288 = h_2986376373;
          break BeforeRet;
          }
          
          h_2986376373 = nextTry_1308622883(h_2986376373, (t_2986376285.data).length - 1);
        }
    };
    result_2986376288 = subInt(-1, h_2986376373);
  };

  return result_2986376288;

}

function HEX5BHEX5DHEX3D_2986375071(t_2986375074, key_2986375075, val_2986375076) {
    if (((t_2986375074.data).length == 0)) {
    var correctSizeHEX60gensym262_2986375159 = slotsNeeded_1308622891(32);
    t_2986375074.counter = 0;
    t_2986375074.data = new Array(chckRange(correctSizeHEX60gensym262_2986375159, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym262_2986375159, 0, 2147483647) ; ++i) { t_2986375074.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986375164 = [0];
    var index_2986375171 = rawGet_2986374501(t_2986375074, key_2986375075, hc_2986375164, 0);
    if ((0 <= index_2986375171)) {
    t_2986375074.data[chckIndx(index_2986375171, 0, (t_2986375074.data).length - 1)].Field2 = val_2986375076;
    }
    else {
      if (((t_2986375074.data).length == 0)) {
      var correctSizeHEX60gensym265_2986375334 = slotsNeeded_1308622891(32);
      t_2986375074.counter = 0;
      t_2986375074.data = new Array(chckRange(correctSizeHEX60gensym265_2986375334, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym265_2986375334, 0, 2147483647) ; ++i) { t_2986375074.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986375339(t_2986375074)) {
      enlarge_2986375596(t_2986375074);
      index_2986375171 = rawGetKnownHC_2986376282(t_2986375074, key_2986375075, hc_2986375164[0]);
      }
      
      index_2986375171 = subInt(-1, index_2986375171);
      rawInsert_2986376032(t_2986375074, t_2986375074, "data", key_2986375075, val_2986375076, hc_2986375164[0], index_2986375171);
      t_2986375074.counter = addInt(t_2986375074.counter, 1);
    }
    

  
}

function len_2986377098(t_2986377101) {
  var result_2986377102 = 0;

    result_2986377102 = t_2986377101.counter;

  return result_2986377102;

}

function len_2986377015(cache_2986377018) {
  var result_2986377019 = 0;

    result_2986377019 = len_2986377098(cache_2986377018.table);

  return result_2986377019;

}

function del_2986377190(t_2986377193, key_2986377194) {
    var hc_2986377195 = [0];
    var i_2986377202 = rawGet_2986374501(t_2986377193, key_2986377194, hc_2986377195, 0);
    var mskHEX60gensym36_2986377206 = (t_2986377193.data).length - 1;
    if ((0 <= i_2986377202)) {
    t_2986377193.counter = subInt(t_2986377193.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986377213 = i_2986377202;
            var rHEX60gensym36_2986377214 = jHEX60gensym36_2986377213;
            t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)].Field0 = 0;
            t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)].Field1 = null;
            t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986377202 = (addInt(i_2986377202, 1) & mskHEX60gensym36_2986377206);
                  if (isEmpty_1308622877(t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986377214 = (t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)].Field0 & mskHEX60gensym36_2986377206);
                  if (!(((((rHEX60gensym36_2986377214 <= i_2986377202) && (jHEX60gensym36_2986377213 < rHEX60gensym36_2986377214)) || ((jHEX60gensym36_2986377213 < rHEX60gensym36_2986377214) && (i_2986377202 < jHEX60gensym36_2986377213))) || ((i_2986377202 < jHEX60gensym36_2986377213) && (rHEX60gensym36_2986377214 <= i_2986377202))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986377193.data[chckIndx(jHEX60gensym36_2986377213, 0, (t_2986377193.data).length - 1)] = nimCopy(t_2986377193.data[chckIndx(jHEX60gensym36_2986377213, 0, (t_2986377193.data).length - 1)], t_2986377193.data[chckIndx(i_2986377202, 0, (t_2986377193.data).length - 1)], NTI2986345209);
          }
      };
    };
    }
    

  
}

function resize_2986376933(cache_2986376936) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986376936.capacity < len_2986377015(cache_2986376936))) break Label2;
          var t_2986377103 = cache_2986376936.list.tail;
          if (cache_2986376936.recordRemovedKeys) {
          incl_2986371309(cache_2986376936.removedKeys, t_2986377103.value.key);
          }
          
          del_2986377190(cache_2986376936.table, t_2986377103.value.key);
          remove_2986377949(cache_2986376936.list, t_2986377103);
        }
    };

  
}

function addNewNode_2986374972(cache_2986374975, key_2986374976, val_2986374977) {
    var node_2986375007 = newDoublyLinkedNode_2986374980({key: key_2986374976, val: nimCopy(null, val_2986374977, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986375071(cache_2986374975.table, key_2986374976, node_2986375007);
    prepend_2986376678(cache_2986374975.list, node_2986375007);
    if (cache_2986374975.recordRemovedKeys) {
    excl_2986370145(cache_2986374975.removedKeys, key_2986374976);
    }
    
    resize_2986376933(cache_2986374975);

  
}

function HEX5BHEX5DHEX3D_2986374396(cache_2986374399, key_2986374400, val_2986374401) {
    var node_2986374945 = getOrDefault_2986374491(cache_2986374399.table, key_2986374400, null);
    if ((node_2986374945 == null)) {
    addNewNode_2986374972(cache_2986374399, key_2986374400, val_2986374401);
    }
    else {
      node_2986374945.value.val = nimCopy(node_2986374945.value.val, val_2986374401, NTI3070230535);
      remove_2986377949(cache_2986374399.list, node_2986374945);
      prepend_2986376678(cache_2986374399.list, node_2986374945);
    }
    

  
}

function initDoublyLinkedList_2986378416() {
  var result_2986378418 = ({head: null, tail: null});

  return result_2986378418;

}

function initTable_2986378422(initialSize_2986378425) {
  var result_2986378426 = ({data: [], counter: 0});

    var correctSizeHEX60gensym275_2986378428 = slotsNeeded_1308622891(chckRange(initialSize_2986378425, 0, 2147483647));
    result_2986378426.counter = 0;
    result_2986378426.data = new Array(chckRange(correctSizeHEX60gensym275_2986378428, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym275_2986378428, 0, 2147483647) ; ++i) { result_2986378426.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986378426;

}

function newLruCache_2986378406(capacity_2986378409, recordRemovedKeys_2986378410) {
  var result_2986378411 = null;

    result_2986378411 = {capacity: capacity_2986378409, list: initDoublyLinkedList_2986378416(), table: initTable_2986378422(correctSize_3019898901(capacity_2986378409)), recordRemovedKeys: recordRemovedKeys_2986378410, removedKeys: ({data: [], counter: 0})};

  return result_2986378411;

}

function newCache_2986378401(capacity_2986378404) {
  var result_2986378405 = null;

    result_2986378405 = newLruCache_2986378406(capacity_2986378404, false);

  return result_2986378405;

}

function init_2986378396(result_2986378399, result_2986378399_Idx, capacity_2986378400) {
    result_2986378399[result_2986378399_Idx] = newCache_2986378401(capacity_2986378400);

  
}

function hasKey_2986378639(t_2986378642, key_2986378643) {
  var result_2986378644 = false;

    var hc_2986378645 = [0];
    result_2986378644 = (0 <= rawGet_2986378646(t_2986378642, key_2986378643, hc_2986378645, 0));

  return result_2986378644;

}

function contains_2986378633(t_2986378636, key_2986378637) {
  var result_2986378638 = false;

  BeforeRet: {
    result_2986378638 = hasKey_2986378639(t_2986378636, key_2986378637);
    break BeforeRet;
  };

  return result_2986378638;

}

function contains_2986378539(cache_2986378542, key_2986378543) {
  var result_2986378544 = false;

    result_2986378544 = contains_2986378633(cache_2986378542.table, key_2986378543);

  return result_2986378544;

}

function HEX5BHEX5D_2986379178(t_2986379181, key_2986379182) {
  var result_2986379183 = null;
  var result_2986379183_Idx = 0;

    var hcHEX60gensym22_2986379184 = [0];
    var indexHEX60gensym22_2986379191 = rawGet_2986378646(t_2986379181, key_2986379182, hcHEX60gensym22_2986379184, 0);
    if ((0 <= indexHEX60gensym22_2986379191)) {
    result_2986379183 = t_2986379181.data[chckIndx(indexHEX60gensym22_2986379191, 0, (t_2986379181.data).length - 1)]; result_2986379183_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986379182);
    }
    

  return [result_2986379183, result_2986379183_Idx];

}

function HEX5BHEX5D_2986379092(cache_2986379095, key_2986379096) {
    var Temporary1;

  var result_2986379097 = null;

    var node_2986379284 = (Temporary1 = HEX5BHEX5D_2986379178(cache_2986379095.table, key_2986379096), Temporary1)[0][Temporary1[1]];
    result_2986379097 = node_2986379284.value.val;
    remove_2986379298(cache_2986379095.list, node_2986379284);
    prepend_2986379626(cache_2986379095.list, node_2986379284);

  return result_2986379097;

}

function initTable_3120564412(initialSize_3120564415) {
  var result_3120564416 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3120564418 = slotsNeeded_1308622891(chckRange(initialSize_3120564415, 0, 2147483647));
    result_3120564416.counter = 0;
    result_3120564416.data = new Array(chckRange(correctSizeHEX60gensym58_3120564418, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3120564418, 0, 2147483647) ; ++i) { result_3120564416.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3120564416;

}

function rawGet_3120562341(t_3120562344, key_3120562345, hc_3120562346, hc_3120562346_Idx) {
  var result_3120562347 = 0;

  BeforeRet: {
    hc_3120562346[hc_3120562346_Idx] = hash_2046820596(key_3120562345);
    if ((hc_3120562346[hc_3120562346_Idx] == 0)) {
    hc_3120562346[hc_3120562346_Idx] = 314159265;
    }
    
    if (((t_3120562344.data).length == 0)) {
    result_3120562347 = -1;
    break BeforeRet;
    }
    
    var h_3120562398 = (hc_3120562346[hc_3120562346_Idx] & (t_3120562344.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field0)) break Label2;
          if (((t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field0 == hc_3120562346[hc_3120562346_Idx]) && HEX3DHEX3D_2046820592(t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field1, key_3120562345))) {
          result_3120562347 = h_3120562398;
          break BeforeRet;
          }
          
          h_3120562398 = nextTry_1308622883(h_3120562398, (t_3120562344.data).length - 1);
        }
    };
    result_3120562347 = subInt(-1, h_3120562398);
  };

  return result_3120562347;

}

function mustRehash_3120562686(t_3120562688) {
  var result_3120562689 = false;

    if (!((t_3120562688.counter < (t_3120562688.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3120562689 = ((mulInt((t_3120562688.data).length, 2) < mulInt(t_3120562688.counter, 3)) || (subInt((t_3120562688.data).length, t_3120562688.counter) < 4));

  return result_3120562689;

}

function rawInsert_3120563135(t_3120563139, data_3120563140, data_3120563140_Idx, key_3120563141, val_3120563142, hc_3120563143, h_3120563144) {
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field1 = nimCopy(data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field1, key_3120563141, NTI2046820355);
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field2 = nimCopy(data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field2, val_3120563142, NTI3070230535);
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field0 = hc_3120563143;

  
}

function enlarge_3120562841(t_3120562844) {
    var n_3120562847 = [];
    n_3120562847 = new Array(chckRange(mulInt((t_3120562844.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3120562844.data).length, 2), 0, 2147483647) ; ++i) { n_3120562847[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3120562844.data; t_3120562844.data = n_3120562847; n_3120562847 = Temporary1;    Label2: {
      var i_3120562911 = 0;
      var colontmp__2936013277 = 0;
      colontmp__2936013277 = (n_3120562847).length - 1;
      var res_2936013278 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013278 <= colontmp__2936013277)) break Label4;
            i_3120562911 = res_2936013278;
            var eh_3120562965 = n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field0;
            if (isFilled_1308622880(eh_3120562965)) {
            var j_3120562969 = (eh_3120562965 & (t_3120562844.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3120562844.data[chckIndx(j_3120562969, 0, (t_3120562844.data).length - 1)].Field0)) break Label6;
                  j_3120562969 = nextTry_1308622883(j_3120562969, (t_3120562844.data).length - 1);
                }
            };
            rawInsert_3120563135(t_3120562844, t_3120562844, "data", n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field1, n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field2, eh_3120562965, j_3120562969);
            }
            
            res_2936013278 = addInt(res_2936013278, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3120563304(t_3120563307, key_3120563308, hc_3120563309) {
  var result_3120563310 = 0;

  BeforeRet: {
    if (((t_3120563307.data).length == 0)) {
    result_3120563310 = -1;
    break BeforeRet;
    }
    
    var h_3120563361 = (hc_3120563309 & (t_3120563307.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field0)) break Label2;
          if (((t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field0 == hc_3120563309) && HEX3DHEX3D_2046820592(t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field1, key_3120563308))) {
          result_3120563310 = h_3120563361;
          break BeforeRet;
          }
          
          h_3120563361 = nextTry_1308622883(h_3120563361, (t_3120563307.data).length - 1);
        }
    };
    result_3120563310 = subInt(-1, h_3120563361);
  };

  return result_3120563310;

}

function HEX5BHEX5DHEX3D_3120562280(t_3120562283, key_3120562284, val_3120562285) {
    if (((t_3120562283.data).length == 0)) {
    var correctSizeHEX60gensym3_3120562335 = slotsNeeded_1308622891(32);
    t_3120562283.counter = 0;
    t_3120562283.data = new Array(chckRange(correctSizeHEX60gensym3_3120562335, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3120562335, 0, 2147483647) ; ++i) { t_3120562283.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3120562340 = [0];
    var index_3120562579 = rawGet_3120562341(t_3120562283, key_3120562284, hc_3120562340, 0);
    if ((0 <= index_3120562579)) {
    t_3120562283.data[chckIndx(index_3120562579, 0, (t_3120562283.data).length - 1)].Field2 = nimCopy(t_3120562283.data[chckIndx(index_3120562579, 0, (t_3120562283.data).length - 1)].Field2, val_3120562285, NTI3070230535);
    }
    else {
      if (((t_3120562283.data).length == 0)) {
      var correctSizeHEX60gensym8_3120562681 = slotsNeeded_1308622891(32);
      t_3120562283.counter = 0;
      t_3120562283.data = new Array(chckRange(correctSizeHEX60gensym8_3120562681, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3120562681, 0, 2147483647) ; ++i) { t_3120562283.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3120562686(t_3120562283)) {
      enlarge_3120562841(t_3120562283);
      index_3120562579 = rawGetKnownHC_3120563304(t_3120562283, key_3120562284, hc_3120562340[0]);
      }
      
      index_3120562579 = subInt(-1, index_3120562579);
      rawInsert_3120563135(t_3120562283, t_3120562283, "data", key_3120562284, val_3120562285, hc_3120562340[0], index_3120562579);
      t_3120562283.counter = addInt(t_3120562283.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3120563742(t_3120563745, key_3120563746) {
  var result_3120563747 = false;

    var hc_3120563748 = [0];
    result_3120563747 = (0 <= rawGet_3120562341(t_3120563745, key_3120563746, hc_3120563748, 0));

  return result_3120563747;

}

function contains_3120563736(t_3120563739, key_3120563740) {
  var result_3120563741 = false;

  BeforeRet: {
    result_3120563741 = hasKey_3120563742(t_3120563739, key_3120563740);
    break BeforeRet;
  };

  return result_3120563741;

}

function HEX5BHEX5D_3120563808(t_3120563811, key_3120563812) {
  var result_3120563813 = null;

    var hcHEX60gensym22_3120563814 = [0];
    var indexHEX60gensym22_3120563821 = rawGet_3120562341(t_3120563811, key_3120563812, hcHEX60gensym22_3120563814, 0);
    if ((0 <= indexHEX60gensym22_3120563821)) {
    result_3120563813 = t_3120563811.data[chckIndx(indexHEX60gensym22_3120563821, 0, (t_3120563811.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_3120563812);
    }
    

  return result_3120563813;

}

function newFunctionExecutionContext_2986414751(ctxHEX60gensym87_2986414752, dataHEX60gensym87_2986414753) {
  var result_2986414754 = null;

  BeforeRet: {
    var itemHEX60gensym87_2986414755 = getItem_2986411410(dataHEX60gensym87_2986414753);
    var keyHEX60gensym87_2986414756 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_2986414755, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym87_2986414752.depGraph.changed, keyHEX60gensym87_2986414756, ctxHEX60gensym87_2986414752.depGraph.revision);
    HEX5BHEX5DHEX3D_2986411566(ctxHEX60gensym87_2986414752.itemsFunctionExecutionContext, itemHEX60gensym87_2986414755, dataHEX60gensym87_2986414753);
    result_2986414754 = dataHEX60gensym87_2986414753;
    break BeforeRet;
  };

  return result_2986414754;

}

function executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, node_3120563549, variables_3120563552) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3120563553 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3120563547.enableExecutionLogging) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (ctx_3120563547.enableExecutionLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2969569239(node_3120563549));
    }
    
    try {
    Label3: {
      var expr_3120563564 = node_3120563549;
      var pos_3120563565 = 0;
      var _ = pos_3120563565;
      if ((expr_3120563564.kind == 0)) {
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 7)) {
      var lastValue_3120563576 = errorValue_3070231215();
      Label4: {
        var child_3120563580 = null;
        var i_2936013283 = 0;
        var L_2936013284 = (node_3120563549.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2936013283 < L_2936013284)) break Label6;
              child_3120563580 = node_3120563549.children[chckIndx(i_2936013283, 0, (node_3120563549.children).length - 1)];
              lastValue_3120563576 = nimCopy(lastValue_3120563576, executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, child_3120563580, variables_3120563552), NTI3070230535);
              i_2936013283 = addInt(i_2936013283, 1);
              if (!(((node_3120563549.children).length == L_2936013284))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3120563553 = nimCopy(result_3120563553, lastValue_3120563576, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 3)) {
      result_3120563553 = nimCopy(result_3120563553, {kind: 2, stringValue: nimCopy(null, node_3120563549.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3120563549.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3120563589 = Temporary7;
      result_3120563553 = nimCopy(result_3120563553, {kind: 3, intValue: value_3120563589, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 9)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var index_3120563594 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3120563594, 1) < len_2969567320(node_3120563549))) break Label10;
            try {
            var condition_3120563599 = HEX5BHEX5D_2969567316(node_3120563549, index_3120563594);
            var trueCase_3120563600 = HEX5BHEX5D_2969567316(node_3120563549, addInt(index_3120563594, 1));
            var conditionValue_3120563601 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, condition_3120563599, variables_3120563552);
            if ((conditionValue_3120563601.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_3120563601.kind == 3))) {
            var fmtRes_3120563614 = [mnewString(0)];
            fmtRes_3120563614[0].push.apply(fmtRes_3120563614[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_3120563614, 0, conditionValue_3120563601, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563614[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3120563601;
              if (ConstSet138[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230534)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3120563620 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, trueCase_3120563600, variables_3120563552);
            result_3120563553 = nimCopy(result_3120563553, trueCaseValue_3120563620, NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_3120563594 = addInt(index_3120563594, 2);
            }
          }
      };
      if (!((modInt(len_2969567320(node_3120563549), 2) == 0))) {
      var falseCaseValue_3120563621 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, last_2969567490(node_3120563549), variables_3120563552);
      result_3120563553 = nimCopy(result_3120563553, falseCaseValue_3120563621, NTI3070230535);
      break BeforeRet;
      }
      
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 10)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var condition_3120563626 = HEX5BHEX5D_2969567316(node_3120563549, 0);
      var body_3120563627 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var index_3120563628 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3120563649 = get_1191185108(fec_3120563548.maxLoopIterations, 1000);
            if ((maxLoopIterations_3120563649 < index_3120563628)) {
            var fmtRes_3120563654 = [mnewString(0)];
            fmtRes_3120563654[0].push.apply(fmtRes_3120563654[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2516582756(fmtRes_3120563654, 0, maxLoopIterations_3120563649, []);
            fmtRes_3120563654[0].push.apply(fmtRes_3120563654[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3070231363(fmtRes_3120563654, 0, node_3120563549, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563654[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            var conditionValue_3120563665 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, condition_3120563626, variables_3120563552);
            if ((conditionValue_3120563665.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_3120563665.kind == 3))) {
            var fmtRes_3120563678 = [mnewString(0)];
            fmtRes_3120563678[0].push.apply(fmtRes_3120563678[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_3120563678, 0, conditionValue_3120563665, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563678[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3120563665;
              if (ConstSet139[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3070230534)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3120563684 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, body_3120563627, variables_3120563552);
            if ((bodyValue_3120563684.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_3120563628 = addInt(index_3120563628, 1);
            }
          }
      };
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 1)) {
      var id_3120563693 = nimCopy(null, node_3120563549.reff, NTI2046820355);
      if (contains_3120563736(variables_3120563552, id_3120563693)) {
      result_3120563553 = nimCopy(result_3120563553, HEX5BHEX5D_3120563808(variables_3120563552, id_3120563693), NTI3070230535);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3120563889 = computeSymbol_2986424640(ctx_3120563547, node_3120563549, true);
        if (!isSome_3070232129(oHEX60gensym44_3120563889)) Temporary17 = false; else {          var sym_3120563912 = get_3070232149(oHEX60gensym44_3120563889);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3120563913 = computeSymbolValue_2986434715(ctx_3120563547, sym_3120563912, true);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, id_3120563693, value_3120563913);
      result_3120563553 = nimCopy(result_3120563553, value_3120563913, NTI3070230535);
      break BeforeRet;
      }
      
      var fmtRes_3120563964 = [mnewString(0)];
      fmtRes_3120563964[0].push.apply(fmtRes_3120563964[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3070231363(fmtRes_3120563964, 0, node_3120563549, []);
      fmtRes_3120563964[0].push.apply(fmtRes_3120563964[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563964[0], NTI33554449)]);
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 8)) {
      var function_3120563974 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, HEX5BHEX5D_2969567316(node_3120563549, 0), variables_3120563552);
      switch (function_3120563974.kind) {
      case 0:
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        break;
      case 4:
        var args_3120563979 = [];
        Label18: {
          var arg_3120564016 = null;
          var colontmp__2936013289 = [];
          colontmp__2936013289 = HEX5BHEX5D_3120563989(node_3120563549.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2936013290 = 0;
          var L_2936013291 = (colontmp__2936013289).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2936013290 < L_2936013291)) break Label20;
                arg_3120564016 = colontmp__2936013289[chckIndx(i_2936013290, 0, (colontmp__2936013289).length - 1)];
                var value_3120564017 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, arg_3120564016, variables_3120563552);
                if ((value_3120564017.kind == 0)) {
                result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3120564017, NTI3070230535);
                args_3120563979.push(Temporary21);;
                i_2936013290 = addInt(i_2936013290, 1);
                if (!(((colontmp__2936013289).length == L_2936013291))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3120563974;
        if (ConstSet140[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3070230534)); }
        result_3120563553 = nimCopy(result_3120563553, Temporary22.impl(args_3120563979), NTI3070230535);
        break BeforeRet;
        break;
      case 5:
        var args_3120564030 = [];
        Label23: {
          var arg_3120564049 = null;
          var colontmp__2936013294 = [];
          colontmp__2936013294 = HEX5BHEX5D_3120563989(node_3120563549.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2936013295 = 0;
          var L_2936013296 = (colontmp__2936013294).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2936013295 < L_2936013296)) break Label25;
                arg_3120564049 = colontmp__2936013294[chckIndx(i_2936013295, 0, (colontmp__2936013294).length - 1)];
                var value_3120564050 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, arg_3120564049, variables_3120563552);
                if ((value_3120564050.kind == 0)) {
                result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3120564050, NTI3070230535);
                args_3120564030.push(Temporary26);;
                i_2936013295 = addInt(i_2936013295, 1);
                if (!(((colontmp__2936013294).length == L_2936013296))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3120563974;
        if (ConstSet141[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230534)); }
        var fec_3120564059 = newFunctionExecutionContext_2986414751(ctx_3120563547, {node: Temporary27.node, arguments: nimCopy(null, args_3120564030, NTI3120563186), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3120563553 = nimCopy(result_3120563553, computeFunctionExecution_2986437819(ctx_3120563547, fec_3120564059), NTI3070230535);
        break BeforeRet;
        break;
      default: 
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3120563564.kind == 5)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var valueNode_3120564064 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var value_3120564065 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564064, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, node_3120563549.id, value_3120564065);
      result_3120563553 = nimCopy(result_3120563553, value_3120564065, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 6)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var valueNode_3120564116 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var value_3120564117 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564116, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, node_3120563549.id, value_3120564117);
      result_3120563553 = nimCopy(result_3120563553, value_3120564117, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 4)) {
      var id_3120564168 = nimCopy(null, node_3120563549.id, NTI2046820355);
      if (contains_3120563736(variables_3120563552, id_3120564168)) {
      result_3120563553 = nimCopy(result_3120563553, HEX5BHEX5D_3120563808(variables_3120563552, id_3120564168), NTI3070230535);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3120563564.kind == 13)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var targetNode_3120564278 = HEX5BHEX5D_2969567316(node_3120563549, 0);
      var valueNode_3120564279 = HEX5BHEX5D_2969567316(node_3120563549, 1);
        var oHEX60gensym55_3120564282 = computeSymbol_2986424640(ctx_3120563547, targetNode_3120564278, true);
        if (!isSome_3070232129(oHEX60gensym55_3120564282)) Temporary28 = false; else {          var sym_3120564305 = get_3070232149(oHEX60gensym55_3120564282);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3120564306 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564279, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, sym_3120564305.id, value_3120564306);
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
        var fmtRes_3120564357 = [mnewString(0)];
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3070231363(fmtRes_3120564357, 0, node_3120563549, []);
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3070231363(fmtRes_3120564357, 0, targetNode_3120564278, []);
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564357[0], NTI33554449)]);
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3120564372 = [mnewString(0)];
        fmtRes_3120564372[0].push.apply(fmtRes_3120564372[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3070231363(fmtRes_3120564372, 0, node_3120563549, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564372[0], NTI33554449)]);
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3120563547.enableExecutionLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [45,62,32], HEX24_3070231271(result_3120563553));
    }
    
    }
    } finally {
    if (ctx_3120563547.enableExecutionLogging) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_3120563553;

}

function computeFunctionExecutionImpl2_3120564407(ctx_3120564408, fec_3120564409) {
      var Temporary4;
        var Temporary5;

  var result_3120564410 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3120564411 = HEX5BHEX5D_2969567316(fec_3120564409.node, 2);
    var variables_3120564423 = [initTable_3120564412(32)];
    var params_3120564424 = HEX5BHEX5D_2969567316(fec_3120564409.node, 0);
    Label1: {
      var i_3120564466 = 0;
      var arg_3120564467 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013271 = 0;
      var L_2936013272 = (fec_3120564409.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013271 < L_2936013272)) break Label3;
            i_3120564466 = i_2936013271;
            arg_3120564467 = nimCopy(arg_3120564467, fec_3120564409.arguments[chckIndx(i_2936013271, 0, (fec_3120564409.arguments).length - 1)], NTI3070230535);
            if ((len_2969567320(params_3120564424) <= i_3120564466)) {
            var fmtRes_3120564472 = [mnewString(0)];
            fmtRes_3120564472[0].push.apply(fmtRes_3120564472[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2516582756(fmtRes_3120564472, 0, len_2969567320(params_3120564424), []);
            fmtRes_3120564472[0].push.apply(fmtRes_3120564472[0], [44,32,103,111,116,32]);;
            formatValue_2516582756(fmtRes_3120564472, 0, (fec_3120564409.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564472[0], NTI33554449)]);
            result_3120564410 = nimCopy(result_3120564410, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            var param_3120564486 = HEX5BHEX5D_2969567316(params_3120564424, i_3120564466);
            HEX5BHEX5DHEX3D_3120562280(variables_3120564423[0], param_3120564486.id, arg_3120564467);
            i_2936013271 = addInt(i_2936013271, 1);
            if (!(((fec_3120564409.arguments).length == L_2936013272))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3120564533 = executeNodeRec_3120563546(ctx_3120564408, fec_3120564409, body_3120564411, variables_3120564423[0]);
    if ((bodyResult_3120564533.kind == 0)) {
    result_3120564410 = nimCopy(result_3120564410, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var functionType_3120564538 = computeType_2986418034(ctx_3120564408, fec_3120564409.node, true);
      if (!(functionType_3120564538.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3120564538;
        if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3120564410 = nimCopy(result_3120564410, voidValue_3070231244(), NTI3070230535);
    break BeforeRet;
    }
    
    result_3120564410 = nimCopy(result_3120564410, bodyResult_3120564533, NTI3070230535);
    break BeforeRet;
  };

  return result_3120564410;

}

function computeFunctionExecutionImpl_2986345288(ctx_2986345289, fec_2986345290) {
  var result_2986441576 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym530_2986441578 = (ctx_2986345289.enableLogging || ctx_2986345289.enableQueryLogging);
    if (logQueryHEX60gensym530_2986441578) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym530_2986441578) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3070231355(fec_2986345290) || []));
    }
    
    try {
    result_2986441576 = nimCopy(result_2986441576, computeFunctionExecutionImpl2_3120564407(ctx_2986345289, fec_2986345290), NTI3070230535);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym530_2986441578 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986441576) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym530_2986441578) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986441576;

}

function getOrDefault_2986380008(t_2986380011, key_2986380012, default_2986380013) {
    var Temporary1;

  var result_2986380014 = null;

    var hcHEX60gensym282_2986380017 = [0];
    var indexHEX60gensym282_2986380372 = rawGet_2986380018(t_2986380011, key_2986380012, hcHEX60gensym282_2986380017, 0);
    if ((0 <= indexHEX60gensym282_2986380372)) {
    Temporary1 = t_2986380011.data[chckIndx(indexHEX60gensym282_2986380372, 0, (t_2986380011.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986380013;
    }
    
    result_2986380014 = Temporary1;

  return result_2986380014;

}

function newDoublyLinkedNode_2986380497(value_2986380499) {
  var result_2986380500 = null;

    result_2986380500 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986380500.value = nimCopy(result_2986380500.value, value_2986380499, NTI2986345239);

  return result_2986380500;

}

function mustRehash_2986380856(t_2986380858) {
  var result_2986380859 = false;

    if (!((t_2986380858.counter < (t_2986380858.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986380859 = ((mulInt((t_2986380858.data).length, 2) < mulInt(t_2986380858.counter, 3)) || (subInt((t_2986380858.data).length, t_2986380858.counter) < 4));

  return result_2986380859;

}

function rawInsert_2986381549(t_2986381553, data_2986381554, data_2986381554_Idx, key_2986381555, val_2986381556, hc_2986381557, h_2986381558) {
    data_2986381554[data_2986381554_Idx][chckIndx(h_2986381558, 0, (data_2986381554[data_2986381554_Idx]).length - 1)].Field1 = key_2986381555;
    data_2986381554[data_2986381554_Idx][chckIndx(h_2986381558, 0, (data_2986381554[data_2986381554_Idx]).length - 1)].Field2 = val_2986381556;
    data_2986381554[data_2986381554_Idx][chckIndx(h_2986381558, 0, (data_2986381554[data_2986381554_Idx]).length - 1)].Field0 = hc_2986381557;

  
}

function enlarge_2986381113(t_2986381116) {
    var n_2986381119 = [];
    n_2986381119 = new Array(chckRange(mulInt((t_2986381116.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986381116.data).length, 2), 0, 2147483647) ; ++i) { n_2986381119[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986381116.data; t_2986381116.data = n_2986381119; n_2986381119 = Temporary1;    Label2: {
      var i_2986381217 = 0;
      var colontmp__2936013300 = 0;
      colontmp__2936013300 = (n_2986381119).length - 1;
      var res_2936013301 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013301 <= colontmp__2936013300)) break Label4;
            i_2986381217 = res_2936013301;
            var eh_2986381298 = n_2986381119[chckIndx(i_2986381217, 0, (n_2986381119).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986381298)) {
            var j_2986381302 = (eh_2986381298 & (t_2986381116.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986381116.data[chckIndx(j_2986381302, 0, (t_2986381116.data).length - 1)].Field0)) break Label6;
                  j_2986381302 = nextTry_1308622883(j_2986381302, (t_2986381116.data).length - 1);
                }
            };
            rawInsert_2986381549(t_2986381116, t_2986381116, "data", n_2986381119[chckIndx(i_2986381217, 0, (n_2986381119).length - 1)].Field1, n_2986381119[chckIndx(i_2986381217, 0, (n_2986381119).length - 1)].Field2, eh_2986381298, j_2986381302);
            }
            
            res_2936013301 = addInt(res_2936013301, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986381799(t_2986381802, key_2986381803, hc_2986381804) {
  var result_2986381805 = 0;

  BeforeRet: {
    if (((t_2986381802.data).length == 0)) {
    result_2986381805 = -1;
    break BeforeRet;
    }
    
    var h_2986381890 = (hc_2986381804 & (t_2986381802.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986381802.data[chckIndx(h_2986381890, 0, (t_2986381802.data).length - 1)].Field0)) break Label2;
          if (((t_2986381802.data[chckIndx(h_2986381890, 0, (t_2986381802.data).length - 1)].Field0 == hc_2986381804) && HEX3DHEX3D_3070231549(t_2986381802.data[chckIndx(h_2986381890, 0, (t_2986381802.data).length - 1)].Field1, key_2986381803))) {
          result_2986381805 = h_2986381890;
          break BeforeRet;
          }
          
          h_2986381890 = nextTry_1308622883(h_2986381890, (t_2986381802.data).length - 1);
        }
    };
    result_2986381805 = subInt(-1, h_2986381890);
  };

  return result_2986381805;

}

function HEX5BHEX5DHEX3D_2986380588(t_2986380591, key_2986380592, val_2986380593) {
    if (((t_2986380591.data).length == 0)) {
    var correctSizeHEX60gensym287_2986380676 = slotsNeeded_1308622891(32);
    t_2986380591.counter = 0;
    t_2986380591.data = new Array(chckRange(correctSizeHEX60gensym287_2986380676, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym287_2986380676, 0, 2147483647) ; ++i) { t_2986380591.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986380681 = [0];
    var index_2986380688 = rawGet_2986380018(t_2986380591, key_2986380592, hc_2986380681, 0);
    if ((0 <= index_2986380688)) {
    t_2986380591.data[chckIndx(index_2986380688, 0, (t_2986380591.data).length - 1)].Field2 = val_2986380593;
    }
    else {
      if (((t_2986380591.data).length == 0)) {
      var correctSizeHEX60gensym290_2986380851 = slotsNeeded_1308622891(32);
      t_2986380591.counter = 0;
      t_2986380591.data = new Array(chckRange(correctSizeHEX60gensym290_2986380851, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_2986380851, 0, 2147483647) ; ++i) { t_2986380591.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986380856(t_2986380591)) {
      enlarge_2986381113(t_2986380591);
      index_2986380688 = rawGetKnownHC_2986381799(t_2986380591, key_2986380592, hc_2986380681[0]);
      }
      
      index_2986380688 = subInt(-1, index_2986380688);
      rawInsert_2986381549(t_2986380591, t_2986380591, "data", key_2986380592, val_2986380593, hc_2986380681[0], index_2986380688);
      t_2986380591.counter = addInt(t_2986380591.counter, 1);
    }
    

  
}

function rawGet_2986382444(t_2986382447, key_2986382448, hc_2986382449, hc_2986382449_Idx) {
  var result_2986382450 = 0;

  BeforeRet: {
    hc_2986382449[hc_2986382449_Idx] = hash_3070231505(key_2986382448);
    if ((hc_2986382449[hc_2986382449_Idx] == 0)) {
    hc_2986382449[hc_2986382449_Idx] = 314159265;
    }
    
    if (((t_2986382447.data).length == 0)) {
    result_2986382450 = -1;
    break BeforeRet;
    }
    
    var h_2986382536 = (hc_2986382449[hc_2986382449_Idx] & (t_2986382447.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986382447.data[chckIndx(h_2986382536, 0, (t_2986382447.data).length - 1)].Field0)) break Label2;
          if (((t_2986382447.data[chckIndx(h_2986382536, 0, (t_2986382447.data).length - 1)].Field0 == hc_2986382449[hc_2986382449_Idx]) && HEX3DHEX3D_3070231549(t_2986382447.data[chckIndx(h_2986382536, 0, (t_2986382447.data).length - 1)].Field1, key_2986382448))) {
          result_2986382450 = h_2986382536;
          break BeforeRet;
          }
          
          h_2986382536 = nextTry_1828716586(h_2986382536, (t_2986382447.data).length - 1);
        }
    };
    result_2986382450 = subInt(-1, h_2986382536);
  };

  return result_2986382450;

}

function exclImpl_2986382438(s_2986382440, key_2986382441) {
          var Temporary5;

  var result_2986382442 = false;

  BeforeRet: {
    var hc_2986382443 = [0];
    var i_2986382798 = rawGet_2986382444(s_2986382440, key_2986382441, hc_2986382443, 0);
    var msk_2986382802 = (s_2986382440.data).length - 1;
    result_2986382442 = true;
    if ((0 <= i_2986382798)) {
    result_2986382442 = false;
    s_2986382440.counter = subInt(s_2986382440.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986382808 = i_2986382798;
          var r_2986382809 = j_2986382808;
          s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)].Field0 = 0;
          s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986382798 = (addInt(i_2986382798, 1) & msk_2986382802);
                if (isEmpty_1828716580(s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986382809 = (s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)].Field0 & msk_2986382802);
                if (!(((((r_2986382809 <= i_2986382798) && (j_2986382808 < r_2986382809)) || ((j_2986382808 < r_2986382809) && (i_2986382798 < j_2986382808))) || ((i_2986382798 < j_2986382808) && (r_2986382809 <= i_2986382798))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)];
          s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)] = genericReset(s_2986382440.data[chckIndx(i_2986382798, 0, (s_2986382440.data).length - 1)], NTI2986345295);
          s_2986382440.data[chckIndx(j_2986382808, 0, (s_2986382440.data).length - 1)] = nimCopy(s_2986382440.data[chckIndx(j_2986382808, 0, (s_2986382440.data).length - 1)], Temporary5, NTI2986345295);
        }
    };
    }
    
  };

  return result_2986382442;

}

function excl_2986382423(s_2986382425, key_2986382426) {
    var _ = exclImpl_2986382438(s_2986382425, key_2986382426);

  
}

function len_2986383562(t_2986383565) {
  var result_2986383566 = 0;

    result_2986383566 = t_2986383565.counter;

  return result_2986383566;

}

function len_2986383479(cache_2986383482) {
  var result_2986383483 = 0;

    result_2986383483 = len_2986383562(cache_2986383482.table);

  return result_2986383483;

}

function mustRehash_2986383703(t_2986383705) {
  var result_2986383706 = false;

    if (!((t_2986383705.counter < (t_2986383705.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986383706 = ((mulInt((t_2986383705.data).length, 2) < mulInt(t_2986383705.counter, 3)) || (subInt((t_2986383705.data).length, t_2986383705.counter) < 4));

  return result_2986383706;

}

function rawGetKnownHC_2986384309(t_2986384312, key_2986384313, hc_2986384314) {
  var result_2986384315 = 0;

  BeforeRet: {
    if (((t_2986384312.data).length == 0)) {
    result_2986384315 = -1;
    break BeforeRet;
    }
    
    var h_2986384400 = (hc_2986384314 & (t_2986384312.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986384312.data[chckIndx(h_2986384400, 0, (t_2986384312.data).length - 1)].Field0)) break Label2;
          if (((t_2986384312.data[chckIndx(h_2986384400, 0, (t_2986384312.data).length - 1)].Field0 == hc_2986384314) && HEX3DHEX3D_3070231549(t_2986384312.data[chckIndx(h_2986384400, 0, (t_2986384312.data).length - 1)].Field1, key_2986384313))) {
          result_2986384315 = h_2986384400;
          break BeforeRet;
          }
          
          h_2986384400 = nextTry_1828716586(h_2986384400, (t_2986384312.data).length - 1);
        }
    };
    result_2986384315 = subInt(-1, h_2986384400);
  };

  return result_2986384315;

}

function rawInsert_2986384809(s_2986384811, data_2986384812, data_2986384812_Idx, key_2986384813, hc_2986384814, h_2986384815) {
    if (((data_2986384812[data_2986384812_Idx]).length == 0)) {
    var correctSizeHEX60gensym309_2986384898 = slotsNeeded_1828716594(64);
    s_2986384811.counter = 0;
    s_2986384811.data = new Array(chckRange(correctSizeHEX60gensym309_2986384898, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym309_2986384898, 0, 2147483647) ; ++i) { s_2986384811.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986384812[data_2986384812_Idx][chckIndx(h_2986384815, 0, (data_2986384812[data_2986384812_Idx]).length - 1)].Field1 = key_2986384813;
    data_2986384812[data_2986384812_Idx][chckIndx(h_2986384815, 0, (data_2986384812[data_2986384812_Idx]).length - 1)].Field0 = hc_2986384814;

  
}

function enlarge_2986383966(s_2986383968) {
    var n_2986383970 = [];
    n_2986383970 = new Array(chckRange(mulInt((s_2986383968.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986383968.data).length, 2), 0, 2147483647) ; ++i) { n_2986383970[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986383968.data; s_2986383968.data = n_2986383970; n_2986383970 = Temporary1;    Label2: {
      var i_2986384068 = 0;
      var colontmp__2936013309 = 0;
      colontmp__2936013309 = (n_2986383970).length - 1;
      var res_2936013310 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013310 <= colontmp__2936013309)) break Label4;
            i_2986384068 = res_2936013310;
            if (isFilled_1828716583(n_2986383970[chckIndx(i_2986384068, 0, (n_2986383970).length - 1)].Field0)) {
            var j_2986384644 = subInt(-1, rawGetKnownHC_2986384309(s_2986383968, n_2986383970[chckIndx(i_2986384068, 0, (n_2986383970).length - 1)].Field1, n_2986383970[chckIndx(i_2986384068, 0, (n_2986383970).length - 1)].Field0));
            rawInsert_2986384809(s_2986383968, s_2986383968, "data", n_2986383970[chckIndx(i_2986384068, 0, (n_2986383970).length - 1)].Field1, n_2986383970[chckIndx(i_2986384068, 0, (n_2986383970).length - 1)].Field0, j_2986384644);
            }
            
            res_2936013310 = addInt(res_2936013310, 1);
          }
      };
    };

  
}

function incl_2986383587(s_2986383589, key_2986383590) {
    if (((s_2986383589.data).length == 0)) {
    var correctSizeHEX60gensym302_2986383673 = slotsNeeded_1828716594(64);
    s_2986383589.counter = 0;
    s_2986383589.data = new Array(chckRange(correctSizeHEX60gensym302_2986383673, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_2986383673, 0, 2147483647) ; ++i) { s_2986383589.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986383688 = [0];
    var index_2986383702 = rawGet_2986382444(s_2986383589, key_2986383590, hc_2986383688, 0);
    if ((index_2986383702 < 0)) {
    if (mustRehash_2986383703(s_2986383589)) {
    enlarge_2986383966(s_2986383589);
    index_2986383702 = rawGetKnownHC_2986384309(s_2986383589, key_2986383590, hc_2986383688[0]);
    }
    
    rawInsert_2986384809(s_2986383589, s_2986383589, "data", key_2986383590, hc_2986383688[0], subInt(-1, index_2986383702));
    s_2986383589.counter = addInt(s_2986383589.counter, 1);
    }
    

  
}

function del_2986385165(t_2986385168, key_2986385169) {
    var hc_2986385170 = [0];
    var i_2986385177 = rawGet_2986380018(t_2986385168, key_2986385169, hc_2986385170, 0);
    var mskHEX60gensym36_2986385181 = (t_2986385168.data).length - 1;
    if ((0 <= i_2986385177)) {
    t_2986385168.counter = subInt(t_2986385168.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986385188 = i_2986385177;
            var rHEX60gensym36_2986385189 = jHEX60gensym36_2986385188;
            t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)].Field0 = 0;
            t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)].Field1 = null;
            t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986385177 = (addInt(i_2986385177, 1) & mskHEX60gensym36_2986385181);
                  if (isEmpty_1308622877(t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986385189 = (t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)].Field0 & mskHEX60gensym36_2986385181);
                  if (!(((((rHEX60gensym36_2986385189 <= i_2986385177) && (jHEX60gensym36_2986385188 < rHEX60gensym36_2986385189)) || ((jHEX60gensym36_2986385188 < rHEX60gensym36_2986385189) && (i_2986385177 < jHEX60gensym36_2986385188))) || ((i_2986385177 < jHEX60gensym36_2986385188) && (rHEX60gensym36_2986385189 <= i_2986385177))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986385168.data[chckIndx(jHEX60gensym36_2986385188, 0, (t_2986385168.data).length - 1)] = nimCopy(t_2986385168.data[chckIndx(jHEX60gensym36_2986385188, 0, (t_2986385168.data).length - 1)], t_2986385168.data[chckIndx(i_2986385177, 0, (t_2986385168.data).length - 1)], NTI2986345275);
          }
      };
    };
    }
    

  
}

function resize_2986383397(cache_2986383400) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986383400.capacity < len_2986383479(cache_2986383400))) break Label2;
          var t_2986383567 = cache_2986383400.list.tail;
          if (cache_2986383400.recordRemovedKeys) {
          incl_2986383587(cache_2986383400.removedKeys, t_2986383567.value.key);
          }
          
          del_2986385165(cache_2986383400.table, t_2986383567.value.key);
          remove_2986385924(cache_2986383400.list, t_2986383567);
        }
    };

  
}

function addNewNode_2986380489(cache_2986380492, key_2986380493, val_2986380494) {
    var node_2986380524 = newDoublyLinkedNode_2986380497({key: key_2986380493, val: nimCopy(null, val_2986380494, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986380588(cache_2986380492.table, key_2986380493, node_2986380524);
    prepend_2986382195(cache_2986380492.list, node_2986380524);
    if (cache_2986380492.recordRemovedKeys) {
    excl_2986382423(cache_2986380492.removedKeys, key_2986380493);
    }
    
    resize_2986383397(cache_2986380492);

  
}

function HEX5BHEX5DHEX3D_2986379913(cache_2986379916, key_2986379917, val_2986379918) {
    var node_2986380462 = getOrDefault_2986380008(cache_2986379916.table, key_2986379917, null);
    if ((node_2986380462 == null)) {
    addNewNode_2986380489(cache_2986379916, key_2986379917, val_2986379918);
    }
    else {
      node_2986380462.value.val = nimCopy(node_2986380462.value.val, val_2986379918, NTI3070230535);
      remove_2986385924(cache_2986379916.list, node_2986380462);
      prepend_2986382195(cache_2986379916.list, node_2986380462);
    }
    

  
}

function initDoublyLinkedList_2986386395() {
  var result_2986386397 = ({head: null, tail: null});

  return result_2986386397;

}

function initTable_2986386401(initialSize_2986386404) {
  var result_2986386405 = ({data: [], counter: 0});

    var correctSizeHEX60gensym310_2986386407 = slotsNeeded_1308622891(chckRange(initialSize_2986386404, 0, 2147483647));
    result_2986386405.counter = 0;
    result_2986386405.data = new Array(chckRange(correctSizeHEX60gensym310_2986386407, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym310_2986386407, 0, 2147483647) ; ++i) { result_2986386405.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986386405;

}

function newLruCache_2986386385(capacity_2986386388, recordRemovedKeys_2986386389) {
  var result_2986386390 = null;

    result_2986386390 = {capacity: capacity_2986386388, list: initDoublyLinkedList_2986386395(), table: initTable_2986386401(correctSize_3019898901(capacity_2986386388)), recordRemovedKeys: recordRemovedKeys_2986386389, removedKeys: ({data: [], counter: 0})};

  return result_2986386390;

}

function newCache_2986386380(capacity_2986386383) {
  var result_2986386384 = null;

    result_2986386384 = newLruCache_2986386385(capacity_2986386383, false);

  return result_2986386384;

}

function init_2986386375(result_2986386378, result_2986386378_Idx, capacity_2986386379) {
    result_2986386378[result_2986386378_Idx] = newCache_2986386380(capacity_2986386379);

  
}

function rawGet_2986386625(t_2986386628, key_2986386629, hc_2986386630, hc_2986386630_Idx) {
  var result_2986386631 = 0;

  BeforeRet: {
    hc_2986386630[hc_2986386630_Idx] = hash_2986345496(key_2986386629);
    if ((hc_2986386630[hc_2986386630_Idx] == 0)) {
    hc_2986386630[hc_2986386630_Idx] = 314159265;
    }
    
    if (((t_2986386628.data).length == 0)) {
    result_2986386631 = -1;
    break BeforeRet;
    }
    
    var h_2986386720 = (hc_2986386630[hc_2986386630_Idx] & (t_2986386628.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986386628.data[chckIndx(h_2986386720, 0, (t_2986386628.data).length - 1)].Field0)) break Label2;
          if (((t_2986386628.data[chckIndx(h_2986386720, 0, (t_2986386628.data).length - 1)].Field0 == hc_2986386630[hc_2986386630_Idx]) && HEX3DHEX3D_2986345833(t_2986386628.data[chckIndx(h_2986386720, 0, (t_2986386628.data).length - 1)].Field1, key_2986386629))) {
          result_2986386631 = h_2986386720;
          break BeforeRet;
          }
          
          h_2986386720 = nextTry_1308622883(h_2986386720, (t_2986386628.data).length - 1);
        }
    };
    result_2986386631 = subInt(-1, h_2986386720);
  };

  return result_2986386631;

}

function hasKey_2986386618(t_2986386621, key_2986386622) {
  var result_2986386623 = false;

    var hc_2986386624 = [0];
    result_2986386623 = (0 <= rawGet_2986386625(t_2986386621, key_2986386622, hc_2986386624, 0));

  return result_2986386623;

}

function contains_2986386612(t_2986386615, key_2986386616) {
  var result_2986386617 = false;

  BeforeRet: {
    result_2986386617 = hasKey_2986386618(t_2986386615, key_2986386616);
    break BeforeRet;
  };

  return result_2986386617;

}

function contains_2986386518(cache_2986386521, key_2986386522) {
  var result_2986386523 = false;

    result_2986386523 = contains_2986386612(cache_2986386521.table, key_2986386522);

  return result_2986386523;

}

function HEX5BHEX5D_2986387157(t_2986387160, key_2986387161) {
  var result_2986387162 = null;
  var result_2986387162_Idx = 0;

    var hcHEX60gensym22_2986387163 = [0];
    var indexHEX60gensym22_2986387170 = rawGet_2986386625(t_2986387160, key_2986387161, hcHEX60gensym22_2986387163, 0);
    if ((0 <= indexHEX60gensym22_2986387170)) {
    result_2986387162 = t_2986387160.data[chckIndx(indexHEX60gensym22_2986387170, 0, (t_2986387160.data).length - 1)]; result_2986387162_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986387161);
    }
    

  return [result_2986387162, result_2986387162_Idx];

}

function remove_2986387277(L_2986387279, n_2986387280) {
    if ((n_2986387280 == L_2986387279.tail)) {
    L_2986387279.tail = n_2986387280.prev;
    }
    
    if ((n_2986387280 == L_2986387279.head)) {
    L_2986387279.head = n_2986387280.next;
    }
    
    if (!((n_2986387280.next == null))) {
    n_2986387280.next.prev = n_2986387280.prev;
    }
    
    if (!((n_2986387280.prev == null))) {
    n_2986387280.prev.next = n_2986387280.next;
    }
    

  
}

function prepend_2986387605(L_2986387607, n_2986387608) {
    n_2986387608.prev = null;
    n_2986387608.next = L_2986387607.head;
    if (!((L_2986387607.head == null))) {
    if (!((L_2986387607.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986387607.head.prev = n_2986387608;
    }
    
    L_2986387607.head = n_2986387608;
    if ((L_2986387607.tail == null)) {
    L_2986387607.tail = n_2986387608;
    }
    

  
}

function HEX5BHEX5D_2986387071(cache_2986387074, key_2986387075) {
    var Temporary1;

  var result_2986387076 = null;

    var node_2986387263 = (Temporary1 = HEX5BHEX5D_2986387157(cache_2986387074.table, key_2986387075), Temporary1)[0][Temporary1[1]];
    result_2986387076 = node_2986387263.value.val;
    remove_2986387277(cache_2986387074.list, node_2986387263);
    prepend_2986387605(cache_2986387074.list, node_2986387263);

  return result_2986387076;

}

function dependOnCurrentRevision_2986398548(ctxHEX60gensym73_2986398549) {
    if ((0 < (ctxHEX60gensym73_2986398549.dependencyStack).length)) {
    ctxHEX60gensym73_2986398549.dependencyStack[chckIndx((ctxHEX60gensym73_2986398549.dependencyStack).length - 1, 0, (ctxHEX60gensym73_2986398549.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3003121696, NTI2046820355), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3103788430(initialSize_3103788433) {
  var result_3103788434 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3103788436 = slotsNeeded_1308622891(chckRange(initialSize_3103788433, 0, 2147483647));
    result_3103788434.counter = 0;
    result_3103788434.data = new Array(chckRange(correctSizeHEX60gensym96_3103788436, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3103788436, 0, 2147483647) ; ++i) { result_3103788434.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3103788434;

}

function rawGet_3070233214(t_3070233217, key_3070233218, hc_3070233219, hc_3070233219_Idx) {
  var result_3070233220 = 0;

  BeforeRet: {
    hc_3070233219[hc_3070233219_Idx] = hash_2046820596(key_3070233218);
    if ((hc_3070233219[hc_3070233219_Idx] == 0)) {
    hc_3070233219[hc_3070233219_Idx] = 314159265;
    }
    
    if (((t_3070233217.data).length == 0)) {
    result_3070233220 = -1;
    break BeforeRet;
    }
    
    var h_3070233272 = (hc_3070233219[hc_3070233219_Idx] & (t_3070233217.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3070233217.data[chckIndx(h_3070233272, 0, (t_3070233217.data).length - 1)].Field0)) break Label2;
          if (((t_3070233217.data[chckIndx(h_3070233272, 0, (t_3070233217.data).length - 1)].Field0 == hc_3070233219[hc_3070233219_Idx]) && HEX3DHEX3D_2046820592(t_3070233217.data[chckIndx(h_3070233272, 0, (t_3070233217.data).length - 1)].Field1, key_3070233218))) {
          result_3070233220 = h_3070233272;
          break BeforeRet;
          }
          
          h_3070233272 = nextTry_1308622883(h_3070233272, (t_3070233217.data).length - 1);
        }
    };
    result_3070233220 = subInt(-1, h_3070233272);
  };

  return result_3070233220;

}

function hasKey_3070233207(t_3070233210, key_3070233211) {
  var result_3070233212 = false;

    var hc_3070233213 = [0];
    result_3070233212 = (0 <= rawGet_3070233214(t_3070233210, key_3070233211, hc_3070233213, 0));

  return result_3070233212;

}

function contains_3103785325(t_3103785328, key_3103785329) {
  var result_3103785330 = false;

  BeforeRet: {
    result_3103785330 = hasKey_3070233207(t_3103785328, key_3103785329);
    break BeforeRet;
  };

  return result_3103785330;

}

function rawGet_3103785569(t_3103785572, key_3103785573, hc_3103785574, hc_3103785574_Idx) {
  var result_3103785575 = 0;

  BeforeRet: {
    hc_3103785574[hc_3103785574_Idx] = hash_2046820596(key_3103785573);
    if ((hc_3103785574[hc_3103785574_Idx] == 0)) {
    hc_3103785574[hc_3103785574_Idx] = 314159265;
    }
    
    if (((t_3103785572.data).length == 0)) {
    result_3103785575 = -1;
    break BeforeRet;
    }
    
    var h_3103785626 = (hc_3103785574[hc_3103785574_Idx] & (t_3103785572.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field0)) break Label2;
          if (((t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field0 == hc_3103785574[hc_3103785574_Idx]) && HEX3DHEX3D_2046820592(t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field1, key_3103785573))) {
          result_3103785575 = h_3103785626;
          break BeforeRet;
          }
          
          h_3103785626 = nextTry_1308622883(h_3103785626, (t_3103785572.data).length - 1);
        }
    };
    result_3103785575 = subInt(-1, h_3103785626);
  };

  return result_3103785575;

}

function mustRehash_3103785914(t_3103785916) {
  var result_3103785917 = false;

    if (!((t_3103785916.counter < (t_3103785916.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3103785917 = ((mulInt((t_3103785916.data).length, 2) < mulInt(t_3103785916.counter, 3)) || (subInt((t_3103785916.data).length, t_3103785916.counter) < 4));

  return result_3103785917;

}

function rawInsert_3103786363(t_3103786367, data_3103786368, data_3103786368_Idx, key_3103786369, val_3103786370, hc_3103786371, h_3103786372) {
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field1 = nimCopy(data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field1, key_3103786369, NTI2046820355);
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field2 = nimCopy(data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field2, val_3103786370, NTI3070230558);
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field0 = hc_3103786371;

  
}

function enlarge_3103786069(t_3103786072) {
    var n_3103786075 = [];
    n_3103786075 = new Array(chckRange(mulInt((t_3103786072.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3103786072.data).length, 2), 0, 2147483647) ; ++i) { n_3103786075[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3103786072.data; t_3103786072.data = n_3103786075; n_3103786075 = Temporary1;    Label2: {
      var i_3103786139 = 0;
      var colontmp__2936013336 = 0;
      colontmp__2936013336 = (n_3103786075).length - 1;
      var res_2936013337 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013337 <= colontmp__2936013336)) break Label4;
            i_3103786139 = res_2936013337;
            var eh_3103786193 = n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field0;
            if (isFilled_1308622880(eh_3103786193)) {
            var j_3103786197 = (eh_3103786193 & (t_3103786072.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3103786072.data[chckIndx(j_3103786197, 0, (t_3103786072.data).length - 1)].Field0)) break Label6;
                  j_3103786197 = nextTry_1308622883(j_3103786197, (t_3103786072.data).length - 1);
                }
            };
            rawInsert_3103786363(t_3103786072, t_3103786072, "data", n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field1, n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field2, eh_3103786193, j_3103786197);
            }
            
            res_2936013337 = addInt(res_2936013337, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3103786532(t_3103786535, key_3103786536, hc_3103786537) {
  var result_3103786538 = 0;

  BeforeRet: {
    if (((t_3103786535.data).length == 0)) {
    result_3103786538 = -1;
    break BeforeRet;
    }
    
    var h_3103786589 = (hc_3103786537 & (t_3103786535.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field0)) break Label2;
          if (((t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field0 == hc_3103786537) && HEX3DHEX3D_2046820592(t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field1, key_3103786536))) {
          result_3103786538 = h_3103786589;
          break BeforeRet;
          }
          
          h_3103786589 = nextTry_1308622883(h_3103786589, (t_3103786535.data).length - 1);
        }
    };
    result_3103786538 = subInt(-1, h_3103786589);
  };

  return result_3103786538;

}

function HEX5BHEX5DHEX3D_3103785508(t_3103785511, key_3103785512, val_3103785513) {
    if (((t_3103785511.data).length == 0)) {
    var correctSizeHEX60gensym21_3103785563 = slotsNeeded_1308622891(32);
    t_3103785511.counter = 0;
    t_3103785511.data = new Array(chckRange(correctSizeHEX60gensym21_3103785563, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3103785563, 0, 2147483647) ; ++i) { t_3103785511.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3103785568 = [0];
    var index_3103785807 = rawGet_3103785569(t_3103785511, key_3103785512, hc_3103785568, 0);
    if ((0 <= index_3103785807)) {
    t_3103785511.data[chckIndx(index_3103785807, 0, (t_3103785511.data).length - 1)].Field2 = nimCopy(t_3103785511.data[chckIndx(index_3103785807, 0, (t_3103785511.data).length - 1)].Field2, val_3103785513, NTI3070230558);
    }
    else {
      if (((t_3103785511.data).length == 0)) {
      var correctSizeHEX60gensym26_3103785909 = slotsNeeded_1308622891(32);
      t_3103785511.counter = 0;
      t_3103785511.data = new Array(chckRange(correctSizeHEX60gensym26_3103785909, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3103785909, 0, 2147483647) ; ++i) { t_3103785511.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3103785914(t_3103785511)) {
      enlarge_3103786069(t_3103785511);
      index_3103785807 = rawGetKnownHC_3103786532(t_3103785511, key_3103785512, hc_3103785568[0]);
      }
      
      index_3103785807 = subInt(-1, index_3103785807);
      rawInsert_3103786363(t_3103785511, t_3103785511, "data", key_3103785512, val_3103785513, hc_3103785568[0], index_3103785807);
      t_3103785511.counter = addInt(t_3103785511.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2113929296(a_2113929297, b_2113929298) {
  var result_2113929299 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929299.x = min_33555609(a_2113929297.x, b_2113929298.x);
    result_2113929299.y = min_33555609(a_2113929297.y, b_2113929298.y);
    result_2113929299.w = (max_33555642((a_2113929297.x + a_2113929297.w), (b_2113929298.x + b_2113929298.w)) - result_2113929299.x);
    result_2113929299.h = (max_33555642((a_2113929297.y + a_2113929297.h), (b_2113929298.y + b_2113929298.h)) - result_2113929299.y);

  return result_2113929299;

}

function HEX2B_2097152155(a_2097152156, b_2097152157) {
  var result_2097152158 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152158.x = (a_2097152156.x + b_2097152157.x);
    result_2097152158.y = (a_2097152156.y + b_2097152157.y);
    result_2097152158.w = a_2097152156.w;
    result_2097152158.h = a_2097152156.h;

  return result_2097152158;

}

function vec2_2130707293(xHEX60gensym45_2130707294, yHEX60gensym45_2130707295) {
  var result_2130707296 = ({x: 0.0, y: 0.0});

    result_2130707296 = nimCopy(result_2130707296, {x: xHEX60gensym45_2130707294, y: yHEX60gensym45_2130707295}, NTI2130706720);

  return result_2130707296;

}

function xy_2113929248(rect_2113929249) {
  var result_2113929250 = ({x: 0.0, y: 0.0});

    result_2113929250 = nimCopy(result_2113929250, vec2_2130707293(rect_2113929249.x, rect_2113929249.y), NTI2130706720);

  return result_2113929250;

}

function add_3070232661(node_3070232662, node_3070232662_Idx, child_3070232663) {
  var result_3070232664 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3070232662[node_3070232662_Idx].children.push(child_3070232663);;
    child_3070232663.depth = addInt(node_3070232662[node_3070232662_Idx].depth, 1);
    child_3070232663.parent = node_3070232662[node_3070232662_Idx];
    child_3070232663.bounds.x = node_3070232662[node_3070232662_Idx].bounds.w;
    node_3070232662[node_3070232662_Idx].bounds = nimCopy(node_3070232662[node_3070232662_Idx].bounds, or_2113929296(node_3070232662[node_3070232662_Idx].bounds, HEX2B_2097152155(child_3070232663.bounds, xy_2113929248(node_3070232662[node_3070232662_Idx].bounds))), NTI2113929221);
    result_3070232664 = nimCopy(result_3070232664, {parent: node_3070232662[node_3070232662_Idx], first: (node_3070232662[node_3070232662_Idx].children).length - 1, last: (node_3070232662[node_3070232662_Idx].children).length}, NTI3070230558);
    break BeforeRet;
  };

  return result_3070232664;

}

function map_3070232208(s_3070232211, op_3070232213) {
  var result_3070232214 = [];

    result_3070232214 = new Array(chckRange((s_3070232211).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3070232211).length, 0, 2147483647) ; ++i) { result_3070232214[i] = null; }    Label1: {
      var i_3070232230 = 0;
      var colontmp__2936013346 = 0;
      colontmp__2936013346 = (s_3070232211).length;
      var i_2936013347 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013347 < colontmp__2936013346)) break Label3;
            i_3070232230 = i_2936013347;
            result_3070232214[chckIndx(i_3070232230, 0, (result_3070232214).length - 1)] = op_3070232213(s_3070232211[chckIndx(i_3070232230, 0, (s_3070232211).length - 1)]);
            i_2936013347 = addInt(i_2936013347, 1);
          }
      };
    };

  return result_3070232214;

}

function clone_3070232189(node_3070232190) {
    
function HEX3Aanonymous_3070232195(c_3070232203) {
      var result_3070232206 = null;

        result_3070232206 = clone_3070232189(c_3070232203);

      return result_3070232206;

    }

  var result_3070232191 = null;

    result_3070232191 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_3070232191.id = nimCopy(result_3070232191.id, newId_2046820569(), NTI2046820355);
    result_3070232191.parent = node_3070232190.parent;
    result_3070232191.node = node_3070232190.node;
    result_3070232191.text = nimCopy(null, node_3070232190.text, NTI33554449);
    result_3070232191.bounds = nimCopy(result_3070232191.bounds, node_3070232190.bounds, NTI2113929221);
    result_3070232191.indent = node_3070232190.indent;
    result_3070232191.font = nimCopy(null, node_3070232190.font, NTI33554449);
    result_3070232191.fontSize = node_3070232190.fontSize;
    result_3070232191.render = node_3070232190.render;
    result_3070232191.children = nimCopy(null, map_3070232208(node_3070232190.children, HEX3Aanonymous_3070232195), NTI3070231781);
    Label1: {
      var c_3070232234 = null;
      var i_2936013342 = 0;
      var L_2936013343 = (result_3070232191.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013342 < L_2936013343)) break Label3;
            c_3070232234 = result_3070232191.children[chckIndx(i_2936013342, 0, (result_3070232191.children).length - 1)];
            c_3070232234.parent = result_3070232191;
            i_2936013342 = addInt(i_2936013342, 1);
            if (!(((result_3070232191.children).length == L_2936013343))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3070232191;

}

function HEX5BHEX5D_3103785394(t_3103785397, key_3103785398) {
  var result_3103785399 = null;
  var result_3103785399_Idx = 0;

    var hcHEX60gensym22_3103785400 = [0];
    var indexHEX60gensym22_3103785407 = rawGet_3070233214(t_3103785397, key_3103785398, hcHEX60gensym22_3103785400, 0);
    if ((0 <= indexHEX60gensym22_3103785407)) {
    result_3103785399 = t_3103785397.data[chckIndx(indexHEX60gensym22_3103785407, 0, (t_3103785397.data).length - 1)]; result_3103785399_Idx = "Field2";
    }
    else {
    raiseKeyError_2969569048(key_3103785398);
    }
    

  return [result_3103785399, result_3103785399_Idx];

}

function createReplacement_3103785277(input_3103785278, node_3103785279, layout_3103785280, line_3103785281, line_3103785281_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3103785282 = false;

  BeforeRet: {
    if (contains_3103785325(input_3103785278.replacements, node_3103785279.id)) {
    HEX5BHEX5DHEX3D_3103785508(layout_3103785280.nodeToVisualNode, node_3103785279.id, add_3070232661(line_3103785281, line_3103785281_Idx, clone_3070232189((Temporary1 = HEX5BHEX5D_3103785394(input_3103785278.replacements, node_3103785279.id), Temporary1)[0][Temporary1[1]])));
    result_3103785282 = true;
    break BeforeRet;
    }
    
    if (contains_3103785325(input_3103785278.replacements, node_3103785279.reff)) {
    HEX5BHEX5DHEX3D_3103785508(layout_3103785280.nodeToVisualNode, node_3103785279.id, add_3070232661(line_3103785281, line_3103785281_Idx, clone_3070232189((Temporary2 = HEX5BHEX5D_3103785394(input_3103785278.replacements, node_3103785279.reff), Temporary2)[0][Temporary2[1]])));
    result_3103785282 = true;
    break BeforeRet;
    }
    
    result_3103785282 = false;
    break BeforeRet;
  };

  return result_3103785282;

}

function rect_2113929240(pos_2113929241, size_2113929242) {
  var result_2113929243 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929243.x = pos_2113929241.x;
    result_2113929243.y = pos_2113929241.y;
    result_2113929243.w = size_2113929242.x;
    result_2113929243.h = size_2113929242.y;

  return result_2113929243;

}

function vec2_2130707254() {
  var result_2130707255 = ({x: 0.0, y: 0.0});

    result_2130707255 = nimCopy(result_2130707255, {x: 0.0, y: 0.0}, NTI2130706720);

  return result_2130707255;

}

function whHEX3D_2113929257(rect_2113929258, v_2113929259) {
    rect_2113929258.w = v_2113929259.x;
    rect_2113929258.h = v_2113929259.y;

  
}

function newTextNode_3103785204(text_3103785205, color_3103785206, font_3103785207, measureText_3103785210, node_3103785211) {
  var result_3103785212 = null;

    result_3103785212 = {id: newId_2046820569(), text: nimCopy(null, text_3103785205, NTI33554449), colors: [nimCopy(null, color_3103785206, NTI33554449)], font: nimCopy(null, font_3103785207, NTI33554449), fontSize: config_3103785173[0].fontSize, node: node_3103785211, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2113929257(result_3103785212.bounds, measureText_3103785210(text_3103785205));

  return result_3103785212;

}

function newTextNode_3103785217(text_3103785218, colors_3103785219, font_3103785220, measureText_3103785223, node_3103785224, styleOverride_3103785234) {
  var result_3103785235 = null;

    result_3103785235 = {id: newId_2046820569(), text: nimCopy(null, text_3103785218, NTI33554449), colors: nimCopy(null, colors_3103785219, NTI3103785143), font: nimCopy(null, font_3103785220, NTI33554449), fontSize: config_3103785173[0].fontSize, node: node_3103785224, styleOverride: nimCopy(null, styleOverride_3103785234, NTI3070230572), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2113929257(result_3103785235.bounds, measureText_3103785223(text_3103785218));

  return result_3103785235;

}

function none_3103785226() {
  var result_3103785233 = ({val: {}, has: false});

  return result_3103785233;

}

function getColorForSymbol_3103786921(ctx_3103786922, sym_3103786923) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3103786924 = [];

  BeforeRet: {
    var typ_3103786925 = computeSymbolType_2986431612(ctx_3103786922, sym_3103786923, false);
    switch (typ_3103786925.kind) {
    case 0:
      result_3103786924 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3103786924 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3103786923.kind == 1)) {
      var Temporary1 = sym_3103786923;
      if (ConstSet145[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3103786924 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3103786054);
        break BeforeRet;
        break;
      }
      }
      
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      break;
    default: 
      if ((sym_3103786923.kind == 0)) {
        var Temporary2 = sym_3103786923;
        if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      if ((Temporary2.node.kind == 4)) {
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3103786923;
        if (ConstSet147[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3103786923;
          if (ConstSet148[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3103786923;
        if (ConstSet149[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230537)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      }
      else {
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
    break BeforeRet;
  };

  return result_3103786924;

}

function some_3103787041(val_3103787043) {
  var result_3103787044 = ({val: {}, has: false});

    result_3103787044.has = true;
    result_3103787044.val = nimCopy(result_3103787044.val, val_3103787043, NTI3070230567);

  return result_3103787044;

}

function getStyleForSymbol_3103786990(ctx_3103786991, sym_3103786992) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3103786994 = ({val: {}, has: false});

    var style_3103786995 = nimCopy(null, ConstSet150, NTI3103786118);
    if ((sym_3103786992.kind == 0)) {
      var Temporary1 = sym_3103786992;
      if (ConstSet151[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
    if ((Temporary1.node.kind == 6)) {
    style_3103786995 = nimCopy(style_3103786995, SetPlus(style_3103786995, ConstSet152), NTI3103786118);
    }
    
      var Temporary2 = sym_3103786992;
      if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3103787014 = computeSymbolType_2986431612(ctx_3103786991, sym_3103786992, false);
    if (!((typ_3103787014.kind == 4))) {
    style_3103786995 = nimCopy(style_3103786995, SetPlus(style_3103786995, ConstSet154), NTI3103786118);
    }
    
    }
    
    }
    else {
    if ((sym_3103786992.kind == 1)) {
      var Temporary3 = sym_3103786992;
      if (ConstSet155[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3103786995[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3103786995, ConstSet156))) {
    result_3103786994 = nimCopy(result_3103786994, some_3103787041(style_3103786995), NTI3070230572);
    }
    

  return result_3103786994;

}

function len_3070230753(node_3070230754) {
  var result_3070230755 = 0;

  BeforeRet: {
    result_3070230755 = (node_3070230754.children).length;
    break BeforeRet;
  };

  return result_3070230755;

}

function addLine_3070232693(node_3070232694, node_3070232694_Idx, child_3070232695, child_3070232695_Idx) {
    node_3070232694[node_3070232694_Idx].children.push(child_3070232695[child_3070232695_Idx]);;
    child_3070232695[child_3070232695_Idx].depth = addInt(node_3070232694[node_3070232694_Idx].depth, 1);
    child_3070232695[child_3070232695_Idx].parent = node_3070232694[node_3070232694_Idx];
    child_3070232695[child_3070232695_Idx].bounds.y = node_3070232694[node_3070232694_Idx].bounds.h;
    node_3070232694[node_3070232694_Idx].bounds = nimCopy(node_3070232694[node_3070232694_Idx].bounds, or_2113929296(node_3070232694[node_3070232694_Idx].bounds, HEX2B_2097152155(child_3070232695[child_3070232695_Idx].bounds, xy_2113929248(node_3070232694[node_3070232694_Idx].bounds))), NTI2113929221);

  
}

function rect_2113929234(x_2113929235, y_2113929236, w_2113929237, h_2113929238) {
  var result_2113929239 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929239.x = x_2113929235;
    result_2113929239.y = y_2113929236;
    result_2113929239.w = w_2113929237;
    result_2113929239.h = h_2113929238;

  return result_2113929239;

}

function getPrecedenceForNode_3103784974(ctx_3103784975, node_3103784976) {
      var Temporary1;
      var Temporary2;

  var result_3103784977 = 0;

  BeforeRet: {
    if ((!((node_3103784976.kind == 8)) || (len_2969567320(node_3103784976) == 0))) {
    result_3103784977 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3103784984 = computeSymbol_2986424640(ctx_3103784975, HEX5BHEX5D_2969567316(node_3103784976, 0), false);
      if (!isSome_3070232129(oHEX60gensym1_3103784984)) Temporary1 = false; else {        var symbol_3103785007 = get_3070232149(oHEX60gensym1_3103784984);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3103785007.kind) {
    case 1:
      var Temporary2 = symbol_3103785007;
      if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      result_3103784977 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3103784977 = 0;
    break BeforeRet;
  };

  return result_3103784977;

}

function some_3103785259(val_3103785261) {
  var result_3103785262 = ({val: [], has: false});

    result_3103785262.has = true;
    result_3103785262.val = nimCopy(null, val_3103785261, NTI3103785172);

  return result_3103785262;

}

function newBlockNode_3103785245(colors_3103785246, size_3103785247, node_3103785248, styleOverride_3103785257) {
  var result_3103785258 = null;

    result_3103785258 = {id: newId_2046820569(), node: node_3103785248, styleOverride: nimCopy(null, styleOverride_3103785257, NTI3070230572), background: some_3103785259(colors_3103785246), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2113929257(result_3103785258.bounds, size_3103785247);

  return result_3103785258;

}

function HEX2BHEX3D_2113929329(x_2113929331, x_2113929331_Idx, y_2113929332) {
    x_2113929331[x_2113929331_Idx] = (x_2113929331[x_2113929331_Idx] + y_2113929332);

  
}

function formatValue_3103788382(result_3103788384, result_3103788384_Idx, value_3103788385, specifier_3103788386) {
    formatValue_721420459(result_3103788384, result_3103788384_Idx, reprEnum(value_3103788385, NTI2969567235), specifier_3103788386);

  
}

function createLayoutLineForRemainingChildren_3103787059(ctx_3103787060, input_3103787061, node_3103787062, firstChildIndex_3103787063, result_3103787064, line_3103787065, line_3103787065_Idx) {
  BeforeRet: {
    if ((len_2969567320(node_3103787062) <= firstChildIndex_3103787063)) {
    break BeforeRet;
    }
    
    var _ = add_3070232661(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([60], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
    Label1: {
      var i_3103787074 = 0;
      var colontmp__2936013352 = 0;
      colontmp__2936013352 = len_2969567320(node_3103787062);
      var i_2936013353 = firstChildIndex_3103787063;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013353 < colontmp__2936013352)) break Label3;
            i_3103787074 = i_2936013353;
            if ((firstChildIndex_3103787063 < i_3103787074)) {
            var _ = add_3070232661(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
            }
            
            createLayoutLineForNode_3103787053(ctx_3103787060, input_3103787061, HEX5BHEX5D_2969567316(node_3103787062, i_3103787074), result_3103787064, line_3103787065, line_3103787065_Idx);
            i_2936013353 = addInt(i_2936013353, 1);
          }
      };
    };
    var _ = add_3070232661(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([62], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
  };

  
}

function createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3103787098 = ((ConstSet143[node_3103787056.kind] != undefined) && (ConstSet144[node_3103787056.parent.kind] != undefined));
    var prevLine_3103787099 = line_3103787058[line_3103787058_Idx];
    var first_3103787103 = (prevLine_3103787099.children).length;
    try {
    var oldLineHEX60gensym42_3103787158 = [line_3103787058[line_3103787058_Idx]];
    var containerLineHEX60gensym42_3103787159 = [{id: newId_2046820569(), node: node_3103787056, parent: line_3103787058[line_3103787058_Idx], orientation: 1, depth: addInt(line_3103787058[line_3103787058_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_3103787098) {
    line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: containerLineHEX60gensym42_3103787159[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3103787159[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_2986418034(ctx_3103787054, node_3103787056, false);
    var lastUsedChild_3103787206 = -1;
    try {
    Label4: {
      var expr_3103787207 = node_3103787056;
      var pos_3103787208 = 0;
      var _ = pos_3103787208;
      if ((expr_3103787207.kind == 0)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(line_3103787058, line_3103787058_Idx, {id: newId_2046820569(), colors: [nimCopy(null, config_3103785173[0].colors.empty, NTI33554449)], node: node_3103787056, bounds: rect_2113929240(vec2_2130707254(), vec2_2130707293((config_3103785173[0].fontSize * 0.5), config_3103785173[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_3103787207.kind == 2)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(node_3103787056.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      }
      
      }
      else {
      if ((expr_3103787207.kind == 3)) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(node_3103787056.text, [115,116,114,105,110,103], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056));
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      else {
      if ((expr_3103787207.kind == 1)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym61_3103787333 = computeSymbol_2986424640(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232129(oHEX60gensym61_3103787333)) Temporary5 = false; else {          var sym_3103787356 = get_3070232149(oHEX60gensym61_3103787333);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(sym_3103787356.name, getColorForSymbol_3103786921(ctx_3103787054, sym_3103787356), config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787356))));
      }
      else {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_2046820589(node_3103787056.reff), [118,97,114,105,97,98,108,101], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      }
      
      }
      
      }
      else {
      if ((expr_3103787207.kind == 4)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym63_3103787455 = computeSymbol_2986424640(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232129(oHEX60gensym63_3103787455)) Temporary7 = false; else {          var sym_3103787478 = get_3070232149(oHEX60gensym63_3103787455);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3103786921(ctx_3103787054, sym_3103787478);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3103787483 = nimCopy(null, Temporary6, NTI3103786020);
        var oHEX60gensym64_3103787486 = computeSymbol_2986424640(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232129(oHEX60gensym64_3103787486)) Temporary8 = false; else {          var sym_3103787509 = get_3070232149(oHEX60gensym64_3103787486);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(sym_3103787509.name, color_3103787483, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787509)));
      }
      else {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(HEX24_2046820589(node_3103787056.id), color_3103787483, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, none_3103785226()));
      }
      
      }
      
      var typ_3103787510 = computeType_2986418034(ctx_3103787054, node_3103787056, false);
      if ((typ_3103787510.kind == 4)) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      else {
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787510), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      var value_3103787527 = computeValue_2986421510(ctx_3103787054, node_3103787056, false);
      switch (value_3103787527.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2969567316(node_3103787056, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070231271(value_3103787527), [115,116,114,105,110,103], config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3103787206 = 0;
      }
      else {
      if ((expr_3103787207.kind == 5)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym67_3103787538 = computeSymbol_2986424640(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232129(oHEX60gensym67_3103787538)) Temporary10 = false; else {          var sym_3103787561 = get_3070232149(oHEX60gensym67_3103787538);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3103786921(ctx_3103787054, sym_3103787561), Field1: getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787561)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3103785226()};
      }
      
      var colontmp__2936013349 = nimCopy(null, Temporary9, NTI3103786490);
      var color_3103787573 = nimCopy(null, colontmp__2936013349["Field0"], NTI3103786020);
      var style_3103787574 = nimCopy(null, colontmp__2936013349["Field1"], NTI3070230572);
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(node_3103787056.text, color_3103787573, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, style_3103787574));
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      if ((((HEX5BHEX5D_2969567316(node_3103787056, 0).kind == 0) && ((HEX5BHEX5D_2969567316(node_3103787056, 0).text).length == 0)) && !(contains_3103785325(input_3103787055.replacements, HEX5BHEX5D_2969567316(node_3103787056, 0).id)))) {
      var typ_3103787630 = computeType_2986418034(ctx_3103787054, node_3103787056, false);
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787630), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      }
      
      if ((1 < len_2969567320(node_3103787056))) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 6)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym71_3103787687 = computeSymbol_2986424640(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232129(oHEX60gensym71_3103787687)) Temporary12 = false; else {          var sym_3103787710 = get_3070232149(oHEX60gensym71_3103787687);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3103786921(ctx_3103787054, sym_3103787710), Field1: getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787710)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3103785226()};
      }
      
      var colontmp__2936013350 = nimCopy(null, Temporary11, NTI3103786593);
      var color_3103787722 = nimCopy(null, colontmp__2936013350["Field0"], NTI3103786020);
      var style_3103787723 = nimCopy(null, colontmp__2936013350["Field1"], NTI3070230572);
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(node_3103787056.text, color_3103787722, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, style_3103787723));
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32,109,117,116,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      if ((((HEX5BHEX5D_2969567316(node_3103787056, 0).kind == 0) && ((HEX5BHEX5D_2969567316(node_3103787056, 0).text).length == 0)) && !(contains_3103785325(input_3103787055.replacements, HEX5BHEX5D_2969567316(node_3103787056, 0).id)))) {
      var typ_3103787779 = computeType_2986418034(ctx_3103787054, node_3103787056, false);
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787779), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      }
      
      if ((1 < len_2969567320(node_3103787056))) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 11)) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([102,110], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      var parent_3103787834 = line_3103787058[line_3103787058_Idx];
      var first_3103787835 = len_3070230753(parent_3103787834);
      Label13: {
        var i_3103787859 = 0;
        var param_3103787860 = null;
        var colontmp__2936013318 = [];
        colontmp__2936013318 = HEX5BHEX5D_2969567316(node_3103787056, 0).children;
        var i_2936013320 = 0;
        var L_2936013321 = (colontmp__2936013318).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2936013320 < L_2936013321)) break Label15;
              i_3103787859 = i_2936013320;
              param_3103787860 = colontmp__2936013318[chckIndx(i_2936013320, 0, (colontmp__2936013318).length - 1)];
              if ((0 < i_3103787859)) {
              var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
              }
              
              createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, param_3103787860, result_3103787057, line_3103787058, line_3103787058_Idx);
              i_2936013320 = addInt(i_2936013320, 1);
              if (!(((colontmp__2936013318).length == L_2936013321))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2969567320(HEX5BHEX5D_2969567316(node_3103787056, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.empty, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, {parent: parent_3103787834, first: first_3103787835, last: len_3070230753(parent_3103787834)});
      }
      
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41,32], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((1 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((2 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 2;
      }
      else {
      if ((expr_3103787207.kind == 9)) {
      var parent_3103787965 = [line_3103787058[line_3103787058_Idx].parent];
      var prevIndent_3103787966 = line_3103787058[line_3103787058_Idx].indent;
      var first_3103787970 = (parent_3103787965[0].children).length;
      try {
      var i_3103788023 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3103788023, 1) < len_2969567320(node_3103787056))) break Label18;
            try {
            if ((i_3103788023 == 0)) {
            var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([105,102,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
            }
            else {
              addLine_3070232693(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
              line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103787965[0], bounds: rect_2113929234((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([101,108,105,102,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
            }
            
            createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, i_3103788023), result_3103787057, line_3103787058, line_3103787058_Idx);
            var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
            createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, addInt(i_3103788023, 1)), result_3103787057, line_3103787058, line_3103787058_Idx);
            } finally {
            i_3103788023 = addInt(i_3103788023, 2);
            }
          }
      };
      if ((modInt(len_2969567320(node_3103787056), 2) == 1)) {
      addLine_3070232693(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103787965[0], bounds: rect_2113929234((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([101,108,115,101,58,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, last_2969567490(node_3103787056), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      addLine_3070232693(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103787965[0], bounds: rect_2113929234((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
      } finally {
      if ((first_3103787970 < (parent_3103787965[0].children).length)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103787965[0], first: first_3103787970, last: (parent_3103787965[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3103787207.kind == 10)) {
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([119,104,105,108,101,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      if ((1 <= len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((2 <= len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 7)) {
      var parent_3103788044 = [line_3103787058[line_3103787058_Idx].parent];
      var first_3103788048 = addInt((parent_3103788044[0].children).length, 1);
      try {
      var prevIndent_3103788101 = line_3103787058[line_3103787058_Idx].indent;
      Label21: {
        var child_3103788105 = null;
        var i_2936013325 = 0;
        var L_2936013326 = (node_3103787056.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2936013325 < L_2936013326)) break Label23;
              child_3103788105 = node_3103787056.children[chckIndx(i_2936013325, 0, (node_3103787056.children).length - 1)];
              addLine_3070232693(parent_3103788044, 0, line_3103787058, line_3103787058_Idx);
              line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103788044[0], bounds: rect_2113929234((prevIndent_3103788101 * config_3103785173[0].indent), 0.0, config_3103785173[0].indent, 0.0), indent: addInt(prevIndent_3103788101, 1), node: child_3103788105, depth: addInt(parent_3103788044[0].depth, 1), orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, child_3103788105, result_3103787057, line_3103787058, line_3103787058_Idx);
              i_2936013325 = addInt(i_2936013325, 1);
              if (!(((node_3103787056.children).length == L_2936013326))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3070232693(parent_3103788044, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103788044[0], bounds: rect_2113929234((prevIndent_3103788101 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788101, depth: addInt(parent_3103788044[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
      } finally {
      if ((first_3103788048 < (parent_3103788044[0].children).length)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103788044[0], first: first_3103788048, last: (parent_3103788044[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3103787207.kind == 13)) {
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 8)) {
      if ((len_2969567320(node_3103787056) == 0)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3103785173[0].colors.empty, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      break BeforeRet;
      }
      
      var isDivision_3103788164 = false;
        var oHEX60gensym90_3103788167 = computeSymbol_2986424640(ctx_3103787054, HEX5BHEX5D_2969567316(node_3103787056, 0), false);
        if (!isSome_3070232129(oHEX60gensym90_3103788167)) Temporary26 = false; else {          var sym_3103788190 = get_3070232149(oHEX60gensym90_3103788167);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3103788190.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2046820592(sym_3103788190.id, IdDiv_2952790022)) {
      isDivision_3103788164 = true;
      }
      
      var Temporary27 = sym_3103788190;
      if (ConstSet157[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230537)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3103788195 = Temporary28;
      if ((len_2969567320(node_3103787056) == addInt(arity_3103788195, 1))) {
      var Temporary30 = sym_3103788190;
      if (ConstSet158[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3070230537)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3103788196 = Temporary24;
      switch (operatorNotation_3103788196) {
      case 3:
        var parentPrecedence_3103788197 = getPrecedenceForNode_3103784974(ctx_3103787054, node_3103787056.parent);
        var precedence_3103788198 = getPrecedenceForNode_3103784974(ctx_3103787054, node_3103787056);
        var renderParens_3103788199 = (precedence_3103788198 < parentPrecedence_3103788197);
        if ((isDivision_3103788164 && !(input_3103787055.renderDivisionVertically))) {
        var oldLineHEX60gensym91_3103788202 = [line_3103787058[line_3103787058_Idx]];
        var containerLineHEX60gensym91_3103788203 = [{id: newId_2046820569(), node: node_3103787056, parent: line_3103787058[line_3103787058_Idx], orientation: 1, depth: addInt(line_3103787058[line_3103787058_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: containerLineHEX60gensym91_3103788203[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3103788203[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_3103788250 = [line_3103787058[line_3103787058_Idx].parent];
        var prevIndent_3103788251 = line_3103787058[line_3103787058_Idx].indent;
        var first_3103788255 = (parent_3103788250[0].children).length;
        try {
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        addLine_3070232693(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        var line1_3103788308 = line_3103787058[line_3103787058_Idx];
        line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103788250[0], bounds: rect_2113929234((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_3103788313 = newBlockNode_3103785245([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2130707293(0.0, (config_3103785173[0].fontSize * 0.1)), HEX5BHEX5D_2969567316(node_3103787056, 0), none_3103785226());
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, divLine_3103788313);
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, {parent: line_3103787058[line_3103787058_Idx], first: 0, last: 1});
        addLine_3070232693(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103788250[0], bounds: rect_2113929234((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
        addLine_3070232693(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        var line2_3103788360 = line_3103787058[line_3103787058_Idx];
        line_3103787058[line_3103787058_Idx] = {id: newId_2046820569(), parent: parent_3103788250[0], bounds: rect_2113929234((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_3103788313.bounds.w = max_33555642(line1_3103788308.bounds.w, line2_3103788360.bounds.w);
        divLine_3103788313.parent.bounds.w = divLine_3103788313.bounds.w;
        var shorterLine_3103788361 = line1_3103788308;
        var longerLine_3103788362 = line2_3103788360;
        if ((longerLine_3103788362.bounds.w < shorterLine_3103788361.bounds.w)) {
        shorterLine_3103788361 = line2_3103788360;
        longerLine_3103788362 = line1_3103788308;
        }
        
        var lengthDiff_3103788363 = (longerLine_3103788362.bounds.w - shorterLine_3103788361.bounds.w);
        HEX2BHEX3D_2113929329(shorterLine_3103788361.bounds, "x", (lengthDiff_3103788363 / 2.0));
        lastUsedChild_3103787206 = 2;
        } finally {
        if ((first_3103788255 < (parent_3103788250[0].children).length)) {
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103788250[0], first: first_3103788255, last: (parent_3103788250[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3070232693(containerLineHEX60gensym91_3103788203, 0, line_3103787058, line_3103787058_Idx);
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(oldLineHEX60gensym91_3103788202, 0, containerLineHEX60gensym91_3103788203[0]));
        line_3103787058[line_3103787058_Idx] = oldLineHEX60gensym91_3103788202[0];
        }
        
        }
        }
        else {
          if (renderParens_3103788199) {
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          }
          
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.separator, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.separator, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
          if (renderParens_3103788199) {
          var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          }
          
          lastUsedChild_3103787206 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        lastUsedChild_3103787206 = 1;
        break;
      case 2:
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        lastUsedChild_3103787206 = 1;
        break;
      default: 
        if ((0 < len_2969567320(node_3103787056))) {
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        }
        
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        Label33: {
          var i_3103788372 = 0;
          var colontmp__2936013329 = 0;
          colontmp__2936013329 = len_2969567320(node_3103787056);
          var i_2936013330 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2936013330 < colontmp__2936013329)) break Label35;
                i_3103788372 = i_2936013330;
                if ((1 < i_3103788372)) {
                var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
                }
                
                createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, i_3103788372), result_3103787057, line_3103787058, line_3103787058_Idx);
                i_2936013330 = addInt(i_2936013330, 1);
              }
          };
        };
        var _ = add_3070232661(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
        break;
      }
      }
      else {
        var fmtRes_3103788381 = [mnewString(0)];
        fmtRes_3103788381[0].push.apply(fmtRes_3103788381[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3103788382(fmtRes_3103788381, 0, node_3103787056.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3103788381[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3103787059(ctx_3103787054, input_3103787055, node_3103787056, addInt(lastUsedChild_3103787206, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
    }
    } finally {
    if (renderInline_3103787098) {
    addLine_3070232693(containerLineHEX60gensym42_3103787159, 0, line_3103787058, line_3103787058_Idx);
    HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232661(oldLineHEX60gensym42_3103787158, 0, containerLineHEX60gensym42_3103787159[0]));
    line_3103787058[line_3103787058_Idx] = oldLineHEX60gensym42_3103787158[0];
    }
    
    }
    } finally {
    if ((first_3103787103 < (prevLine_3103787099.children).length)) {
    HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: prevLine_3103787099, first: first_3103787103, last: (prevLine_3103787099.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3103788408(vnode_3103788409) {
    var height_3103788410 = vnode_3103788409.bounds.h;
    Label1: {
      var child_3103788414 = null;
      var i_2936013356 = 0;
      var L_2936013357 = (vnode_3103788409.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013356 < L_2936013357)) break Label3;
            child_3103788414 = vnode_3103788409.children[chckIndx(i_2936013356, 0, (vnode_3103788409.children).length - 1)];
            if ((vnode_3103788409.orientation == 0)) {
            var heightDiff_3103788420 = (height_3103788410 - child_3103788414.bounds.h);
            HEX2BHEX3D_2113929329(child_3103788414.bounds, "y", (heightDiff_3103788420 * 0.5));
            }
            
            centerChildrenVertically_3103788408(child_3103788414);
            i_2936013356 = addInt(i_2936013356, 1);
            if (!(((vnode_3103788409.children).length == L_2936013357))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3103788425(ctx_3103788426, input_3103788427) {
  var result_3103788428 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_3103788429 = input_3103788427.node;
    result_3103788428[0] = nimCopy(result_3103788428[0], {node: node_3103788429, root: {id: newId_2046820569(), orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_3103788430(32)}, NTI3070230559);
    var line_3103788441 = [{id: newId_2046820569(), node: node_3103788429, parent: result_3103788428[0].root, orientation: 0, depth: addInt(result_3103788428[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_3103787053(ctx_3103788426, input_3103788427, node_3103788429, result_3103788428[0], line_3103788441, 0);
    addLine_3070232693(line_3103788441[0], "parent", line_3103788441, 0);
    centerChildrenVertically_3103788408(result_3103788428[0].root);

  return result_3103788428[0];

}

function computeNodeLayoutImpl_2986345291(ctx_2986345292, nodeLayoutInput_2986345293) {
  var result_2986441572 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_2986398548(ctx_2986345292);
    result_2986441572 = nimCopy(result_2986441572, computeNodeLayoutImpl2_3103788425(ctx_2986345292, nodeLayoutInput_2986345293), NTI3070230559);
    break BeforeRet;
  };

  return result_2986441572;

}

function hash_3070232774(input_3070232775) {
  var result_3070232776 = 0;

    result_3070232776 = HEX21HEX26_1325400067(hash_2969569587(input_3070232775.node), hash_2046820596(input_3070232775.selectedNode));
    result_3070232776 = HEX21HEX24_1325400082(result_3070232776);

  return result_3070232776;

}

function len_3070232912(t_3070232915) {
  var result_3070232916 = 0;

    result_3070232916 = t_3070232915.counter;

  return result_3070232916;

}

function HEX3DHEX3D_3070232601(x_3070232603, y_3070232604) {
  var result_3070232605 = false;

  BeforeRet: {
    var sameObject_3070232612 = false;
    sameObject_3070232612 = x_3070232603 === y_3070232604
    if (sameObject_3070232612) {
    result_3070232605 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070232603).length == (y_3070232604).length))) {
    result_3070232605 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070232626 = 0;
      var colontmp__2936013372 = 0;
      colontmp__2936013372 = subInt((x_3070232603).length, 1);
      var res_2936013373 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013373 <= colontmp__2936013372)) break Label3;
            i_3070232626 = res_2936013373;
            if (!(eqStrings(x_3070232603[chckIndx(i_3070232626, 0, (x_3070232603).length - 1)], y_3070232604[chckIndx(i_3070232626, 0, (y_3070232604).length - 1)]))) {
            result_3070232605 = false;
            break BeforeRet;
            }
            
            res_2936013373 = addInt(res_2936013373, 1);
          }
      };
    };
    result_3070232605 = true;
    break BeforeRet;
  };

  return result_3070232605;

}

function HEX3DHEX3D_2516582947(x_2516582949, y_2516582950) {
  var result_2516582951 = false;

  BeforeRet: {
    if (!((x_2516582949.x == y_2516582950.x))) {
    result_2516582951 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582949.y == y_2516582950.y))) {
    result_2516582951 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582949.w == y_2516582950.w))) {
    result_2516582951 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582949.h == y_2516582950.h))) {
    result_2516582951 = false;
    break BeforeRet;
    }
    
    result_2516582951 = true;
    break BeforeRet;
  };

  return result_2516582951;

}

function HEX3DHEX3D_3070232635(x_3070232637, y_3070232638) {
  var result_3070232639 = false;

  BeforeRet: {
    var sameObject_3070232646 = false;
    sameObject_3070232646 = x_3070232637 === y_3070232638
    if (sameObject_3070232646) {
    result_3070232639 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070232637).length == (y_3070232638).length))) {
    result_3070232639 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070232660 = 0;
      var colontmp__2936013376 = 0;
      colontmp__2936013376 = subInt((x_3070232637).length, 1);
      var res_2936013377 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013377 <= colontmp__2936013376)) break Label3;
            i_3070232660 = res_2936013377;
            if (!(HEX3DHEX3D_3070232584(x_3070232637[chckIndx(i_3070232660, 0, (x_3070232637).length - 1)], y_3070232638[chckIndx(i_3070232660, 0, (y_3070232638).length - 1)]))) {
            result_3070232639 = false;
            break BeforeRet;
            }
            
            res_2936013377 = addInt(res_2936013377, 1);
          }
      };
    };
    result_3070232639 = true;
    break BeforeRet;
  };

  return result_3070232639;

}

function HEX3DHEX3D_3070232584(a_3070232585, b_3070232586) {
  var result_3070232587 = false;

  BeforeRet: {
    if ((a_3070232585 == null)) {
    result_3070232587 = (b_3070232586 == null);
    break BeforeRet;
    }
    
    if ((b_3070232586 == null)) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3070232585.text, b_3070232586.text))) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232585.node == b_3070232586.node))) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070232601(a_3070232585.colors, b_3070232586.colors))) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2516582947(a_3070232585.bounds, b_3070232586.bounds))) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232585.render == b_3070232586.render))) {
    result_3070232587 = false;
    break BeforeRet;
    }
    
    result_3070232587 = HEX3DHEX3D_3070232635(a_3070232585.children, b_3070232586.children);
    break BeforeRet;
  };

  return result_3070232587;

}

function getOrDefault_3070233501(t_3070233504, key_3070233505) {
  var result_3070233506 = null;

    var hcHEX60gensym49_3070233509 = [0];
    var indexHEX60gensym49_3070233516 = rawGet_3070233214(t_3070233504, key_3070233505, hcHEX60gensym49_3070233509, 0);
    if ((0 <= indexHEX60gensym49_3070233516)) {
    result_3070233506 = t_3070233504.data[chckIndx(indexHEX60gensym49_3070233516, 0, (t_3070233504.data).length - 1)].Field2;
    }
    

  return result_3070233506;

}

function HEX3DHEX3D_3070232856(s_3070232859, t_3070232860) {
  var result_3070232861 = false;

  BeforeRet: {
    if ((s_3070232859.counter == t_3070232860.counter)) {
    Label1: {
      var keyHEX60gensym43_3070233165 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_3070233166 = null;
      var L_2936013365 = len_3070232912(s_3070232859);
      Label2: {
        var h_2936013367 = 0;
        var colontmp__2936013368 = 0;
        colontmp__2936013368 = (s_3070232859.data).length - 1;
        var res_2936013369 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936013369 <= colontmp__2936013368)) break Label4;
              h_2936013367 = res_2936013369;
              if (isFilled_1308622880(s_3070232859.data[chckIndx(h_2936013367, 0, (s_3070232859.data).length - 1)].Field0)) {
              keyHEX60gensym43_3070233165 = nimCopy(keyHEX60gensym43_3070233165, s_3070232859.data[chckIndx(h_2936013367, 0, (s_3070232859.data).length - 1)].Field1, NTI2046820355);
              valHEX60gensym43_3070233166 = s_3070232859.data[chckIndx(h_2936013367, 0, (s_3070232859.data).length - 1)].Field2;
              if (!(hasKey_3070233207(t_3070232860, keyHEX60gensym43_3070233165))) {
              result_3070232861 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3070232584(getOrDefault_3070233501(t_3070232860, keyHEX60gensym43_3070233165), valHEX60gensym43_3070233166))) {
              result_3070232861 = false;
              break BeforeRet;
              }
              
              if (!((len_3070232912(s_3070232859) == L_2936013365))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013369 = addInt(res_2936013369, 1);
            }
        };
      };
    };
    result_3070232861 = true;
    break BeforeRet;
    }
    
  };

  return result_3070232861;

}

function HEX3DHEX3D_3070232777(a_3070232778, b_3070232779) {
  var result_3070232780 = false;

  BeforeRet: {
    if ((a_3070232778 == null)) {
    result_3070232780 = (b_3070232779 == null);
    break BeforeRet;
    }
    
    if ((b_3070232779 == null)) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232778.revision == b_3070232779.revision))) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232778.node == b_3070232779.node))) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2046820592(a_3070232778.selectedNode, b_3070232779.selectedNode))) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070232856(a_3070232778.replacements, b_3070232779.replacements))) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232778.renderDivisionVertically == b_3070232779.renderDivisionVertically))) {
    result_3070232780 = false;
    break BeforeRet;
    }
    
    result_3070232780 = true;
    break BeforeRet;
  };

  return result_3070232780;

}

function rawGet_2986387997(t_2986388000, key_2986388001, hc_2986388002, hc_2986388002_Idx) {
  var result_2986388003 = 0;

  BeforeRet: {
    hc_2986388002[hc_2986388002_Idx] = hash_3070232774(key_2986388001);
    if ((hc_2986388002[hc_2986388002_Idx] == 0)) {
    hc_2986388002[hc_2986388002_Idx] = 314159265;
    }
    
    if (((t_2986388000.data).length == 0)) {
    result_2986388003 = -1;
    break BeforeRet;
    }
    
    var h_2986388089 = (hc_2986388002[hc_2986388002_Idx] & (t_2986388000.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986388000.data[chckIndx(h_2986388089, 0, (t_2986388000.data).length - 1)].Field0)) break Label2;
          if (((t_2986388000.data[chckIndx(h_2986388089, 0, (t_2986388000.data).length - 1)].Field0 == hc_2986388002[hc_2986388002_Idx]) && HEX3DHEX3D_3070232777(t_2986388000.data[chckIndx(h_2986388089, 0, (t_2986388000.data).length - 1)].Field1, key_2986388001))) {
          result_2986388003 = h_2986388089;
          break BeforeRet;
          }
          
          h_2986388089 = nextTry_1308622883(h_2986388089, (t_2986388000.data).length - 1);
        }
    };
    result_2986388003 = subInt(-1, h_2986388089);
  };

  return result_2986388003;

}

function getOrDefault_2986387987(t_2986387990, key_2986387991, default_2986387992) {
    var Temporary1;

  var result_2986387993 = null;

    var hcHEX60gensym317_2986387996 = [0];
    var indexHEX60gensym317_2986388351 = rawGet_2986387997(t_2986387990, key_2986387991, hcHEX60gensym317_2986387996, 0);
    if ((0 <= indexHEX60gensym317_2986388351)) {
    Temporary1 = t_2986387990.data[chckIndx(indexHEX60gensym317_2986388351, 0, (t_2986387990.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986387992;
    }
    
    result_2986387993 = Temporary1;

  return result_2986387993;

}

function newDoublyLinkedNode_2986388476(value_2986388478) {
  var result_2986388479 = null;

    result_2986388479 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_2986388479.value = nimCopy(result_2986388479.value, value_2986388478, NTI2986345314);

  return result_2986388479;

}

function mustRehash_2986388826(t_2986388828) {
  var result_2986388829 = false;

    if (!((t_2986388828.counter < (t_2986388828.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986388829 = ((mulInt((t_2986388828.data).length, 2) < mulInt(t_2986388828.counter, 3)) || (subInt((t_2986388828.data).length, t_2986388828.counter) < 4));

  return result_2986388829;

}

function rawInsert_2986389519(t_2986389523, data_2986389524, data_2986389524_Idx, key_2986389525, val_2986389526, hc_2986389527, h_2986389528) {
    data_2986389524[data_2986389524_Idx][chckIndx(h_2986389528, 0, (data_2986389524[data_2986389524_Idx]).length - 1)].Field1 = key_2986389525;
    data_2986389524[data_2986389524_Idx][chckIndx(h_2986389528, 0, (data_2986389524[data_2986389524_Idx]).length - 1)].Field2 = val_2986389526;
    data_2986389524[data_2986389524_Idx][chckIndx(h_2986389528, 0, (data_2986389524[data_2986389524_Idx]).length - 1)].Field0 = hc_2986389527;

  
}

function enlarge_2986389083(t_2986389086) {
    var n_2986389089 = [];
    n_2986389089 = new Array(chckRange(mulInt((t_2986389086.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986389086.data).length, 2), 0, 2147483647) ; ++i) { n_2986389089[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986389086.data; t_2986389086.data = n_2986389089; n_2986389089 = Temporary1;    Label2: {
      var i_2986389187 = 0;
      var colontmp__2936013381 = 0;
      colontmp__2936013381 = (n_2986389089).length - 1;
      var res_2936013382 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013382 <= colontmp__2936013381)) break Label4;
            i_2986389187 = res_2936013382;
            var eh_2986389268 = n_2986389089[chckIndx(i_2986389187, 0, (n_2986389089).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986389268)) {
            var j_2986389272 = (eh_2986389268 & (t_2986389086.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986389086.data[chckIndx(j_2986389272, 0, (t_2986389086.data).length - 1)].Field0)) break Label6;
                  j_2986389272 = nextTry_1308622883(j_2986389272, (t_2986389086.data).length - 1);
                }
            };
            rawInsert_2986389519(t_2986389086, t_2986389086, "data", n_2986389089[chckIndx(i_2986389187, 0, (n_2986389089).length - 1)].Field1, n_2986389089[chckIndx(i_2986389187, 0, (n_2986389089).length - 1)].Field2, eh_2986389268, j_2986389272);
            }
            
            res_2936013382 = addInt(res_2936013382, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986389769(t_2986389772, key_2986389773, hc_2986389774) {
  var result_2986389775 = 0;

  BeforeRet: {
    if (((t_2986389772.data).length == 0)) {
    result_2986389775 = -1;
    break BeforeRet;
    }
    
    var h_2986389860 = (hc_2986389774 & (t_2986389772.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986389772.data[chckIndx(h_2986389860, 0, (t_2986389772.data).length - 1)].Field0)) break Label2;
          if (((t_2986389772.data[chckIndx(h_2986389860, 0, (t_2986389772.data).length - 1)].Field0 == hc_2986389774) && HEX3DHEX3D_3070232777(t_2986389772.data[chckIndx(h_2986389860, 0, (t_2986389772.data).length - 1)].Field1, key_2986389773))) {
          result_2986389775 = h_2986389860;
          break BeforeRet;
          }
          
          h_2986389860 = nextTry_1308622883(h_2986389860, (t_2986389772.data).length - 1);
        }
    };
    result_2986389775 = subInt(-1, h_2986389860);
  };

  return result_2986389775;

}

function HEX5BHEX5DHEX3D_2986388558(t_2986388561, key_2986388562, val_2986388563) {
    if (((t_2986388561.data).length == 0)) {
    var correctSizeHEX60gensym322_2986388646 = slotsNeeded_1308622891(32);
    t_2986388561.counter = 0;
    t_2986388561.data = new Array(chckRange(correctSizeHEX60gensym322_2986388646, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym322_2986388646, 0, 2147483647) ; ++i) { t_2986388561.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986388651 = [0];
    var index_2986388658 = rawGet_2986387997(t_2986388561, key_2986388562, hc_2986388651, 0);
    if ((0 <= index_2986388658)) {
    t_2986388561.data[chckIndx(index_2986388658, 0, (t_2986388561.data).length - 1)].Field2 = val_2986388563;
    }
    else {
      if (((t_2986388561.data).length == 0)) {
      var correctSizeHEX60gensym325_2986388821 = slotsNeeded_1308622891(32);
      t_2986388561.counter = 0;
      t_2986388561.data = new Array(chckRange(correctSizeHEX60gensym325_2986388821, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_2986388821, 0, 2147483647) ; ++i) { t_2986388561.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986388826(t_2986388561)) {
      enlarge_2986389083(t_2986388561);
      index_2986388658 = rawGetKnownHC_2986389769(t_2986388561, key_2986388562, hc_2986388651[0]);
      }
      
      index_2986388658 = subInt(-1, index_2986388658);
      rawInsert_2986389519(t_2986388561, t_2986388561, "data", key_2986388562, val_2986388563, hc_2986388651[0], index_2986388658);
      t_2986388561.counter = addInt(t_2986388561.counter, 1);
    }
    

  
}

function prepend_2986390165(L_2986390167, n_2986390168) {
    n_2986390168.prev = null;
    n_2986390168.next = L_2986390167.head;
    if (!((L_2986390167.head == null))) {
    if (!((L_2986390167.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986390167.head.prev = n_2986390168;
    }
    
    L_2986390167.head = n_2986390168;
    if ((L_2986390167.tail == null)) {
    L_2986390167.tail = n_2986390168;
    }
    

  
}

function rawGet_2986390414(t_2986390417, key_2986390418, hc_2986390419, hc_2986390419_Idx) {
  var result_2986390420 = 0;

  BeforeRet: {
    hc_2986390419[hc_2986390419_Idx] = hash_3070232774(key_2986390418);
    if ((hc_2986390419[hc_2986390419_Idx] == 0)) {
    hc_2986390419[hc_2986390419_Idx] = 314159265;
    }
    
    if (((t_2986390417.data).length == 0)) {
    result_2986390420 = -1;
    break BeforeRet;
    }
    
    var h_2986390506 = (hc_2986390419[hc_2986390419_Idx] & (t_2986390417.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986390417.data[chckIndx(h_2986390506, 0, (t_2986390417.data).length - 1)].Field0)) break Label2;
          if (((t_2986390417.data[chckIndx(h_2986390506, 0, (t_2986390417.data).length - 1)].Field0 == hc_2986390419[hc_2986390419_Idx]) && HEX3DHEX3D_3070232777(t_2986390417.data[chckIndx(h_2986390506, 0, (t_2986390417.data).length - 1)].Field1, key_2986390418))) {
          result_2986390420 = h_2986390506;
          break BeforeRet;
          }
          
          h_2986390506 = nextTry_1828716586(h_2986390506, (t_2986390417.data).length - 1);
        }
    };
    result_2986390420 = subInt(-1, h_2986390506);
  };

  return result_2986390420;

}

function exclImpl_2986390408(s_2986390410, key_2986390411) {
          var Temporary5;

  var result_2986390412 = false;

  BeforeRet: {
    var hc_2986390413 = [0];
    var i_2986390768 = rawGet_2986390414(s_2986390410, key_2986390411, hc_2986390413, 0);
    var msk_2986390772 = (s_2986390410.data).length - 1;
    result_2986390412 = true;
    if ((0 <= i_2986390768)) {
    result_2986390412 = false;
    s_2986390410.counter = subInt(s_2986390410.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986390778 = i_2986390768;
          var r_2986390779 = j_2986390778;
          s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)].Field0 = 0;
          s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986390768 = (addInt(i_2986390768, 1) & msk_2986390772);
                if (isEmpty_1828716580(s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986390779 = (s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)].Field0 & msk_2986390772);
                if (!(((((r_2986390779 <= i_2986390768) && (j_2986390778 < r_2986390779)) || ((j_2986390778 < r_2986390779) && (i_2986390768 < j_2986390778))) || ((i_2986390768 < j_2986390778) && (r_2986390779 <= i_2986390768))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)];
          s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)] = genericReset(s_2986390410.data[chckIndx(i_2986390768, 0, (s_2986390410.data).length - 1)], NTI2986345370);
          s_2986390410.data[chckIndx(j_2986390778, 0, (s_2986390410.data).length - 1)] = nimCopy(s_2986390410.data[chckIndx(j_2986390778, 0, (s_2986390410.data).length - 1)], Temporary5, NTI2986345370);
        }
    };
    }
    
  };

  return result_2986390412;

}

function excl_2986390393(s_2986390395, key_2986390396) {
    var _ = exclImpl_2986390408(s_2986390395, key_2986390396);

  
}

function len_2986391532(t_2986391535) {
  var result_2986391536 = 0;

    result_2986391536 = t_2986391535.counter;

  return result_2986391536;

}

function len_2986391449(cache_2986391452) {
  var result_2986391453 = 0;

    result_2986391453 = len_2986391532(cache_2986391452.table);

  return result_2986391453;

}

function mustRehash_2986391673(t_2986391675) {
  var result_2986391676 = false;

    if (!((t_2986391675.counter < (t_2986391675.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986391676 = ((mulInt((t_2986391675.data).length, 2) < mulInt(t_2986391675.counter, 3)) || (subInt((t_2986391675.data).length, t_2986391675.counter) < 4));

  return result_2986391676;

}

function rawGetKnownHC_2986392279(t_2986392282, key_2986392283, hc_2986392284) {
  var result_2986392285 = 0;

  BeforeRet: {
    if (((t_2986392282.data).length == 0)) {
    result_2986392285 = -1;
    break BeforeRet;
    }
    
    var h_2986392370 = (hc_2986392284 & (t_2986392282.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986392282.data[chckIndx(h_2986392370, 0, (t_2986392282.data).length - 1)].Field0)) break Label2;
          if (((t_2986392282.data[chckIndx(h_2986392370, 0, (t_2986392282.data).length - 1)].Field0 == hc_2986392284) && HEX3DHEX3D_3070232777(t_2986392282.data[chckIndx(h_2986392370, 0, (t_2986392282.data).length - 1)].Field1, key_2986392283))) {
          result_2986392285 = h_2986392370;
          break BeforeRet;
          }
          
          h_2986392370 = nextTry_1828716586(h_2986392370, (t_2986392282.data).length - 1);
        }
    };
    result_2986392285 = subInt(-1, h_2986392370);
  };

  return result_2986392285;

}

function rawInsert_2986392779(s_2986392781, data_2986392782, data_2986392782_Idx, key_2986392783, hc_2986392784, h_2986392785) {
    if (((data_2986392782[data_2986392782_Idx]).length == 0)) {
    var correctSizeHEX60gensym344_2986392868 = slotsNeeded_1828716594(64);
    s_2986392781.counter = 0;
    s_2986392781.data = new Array(chckRange(correctSizeHEX60gensym344_2986392868, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym344_2986392868, 0, 2147483647) ; ++i) { s_2986392781.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986392782[data_2986392782_Idx][chckIndx(h_2986392785, 0, (data_2986392782[data_2986392782_Idx]).length - 1)].Field1 = key_2986392783;
    data_2986392782[data_2986392782_Idx][chckIndx(h_2986392785, 0, (data_2986392782[data_2986392782_Idx]).length - 1)].Field0 = hc_2986392784;

  
}

function enlarge_2986391936(s_2986391938) {
    var n_2986391940 = [];
    n_2986391940 = new Array(chckRange(mulInt((s_2986391938.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986391938.data).length, 2), 0, 2147483647) ; ++i) { n_2986391940[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986391938.data; s_2986391938.data = n_2986391940; n_2986391940 = Temporary1;    Label2: {
      var i_2986392038 = 0;
      var colontmp__2936013390 = 0;
      colontmp__2936013390 = (n_2986391940).length - 1;
      var res_2936013391 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013391 <= colontmp__2936013390)) break Label4;
            i_2986392038 = res_2936013391;
            if (isFilled_1828716583(n_2986391940[chckIndx(i_2986392038, 0, (n_2986391940).length - 1)].Field0)) {
            var j_2986392614 = subInt(-1, rawGetKnownHC_2986392279(s_2986391938, n_2986391940[chckIndx(i_2986392038, 0, (n_2986391940).length - 1)].Field1, n_2986391940[chckIndx(i_2986392038, 0, (n_2986391940).length - 1)].Field0));
            rawInsert_2986392779(s_2986391938, s_2986391938, "data", n_2986391940[chckIndx(i_2986392038, 0, (n_2986391940).length - 1)].Field1, n_2986391940[chckIndx(i_2986392038, 0, (n_2986391940).length - 1)].Field0, j_2986392614);
            }
            
            res_2936013391 = addInt(res_2936013391, 1);
          }
      };
    };

  
}

function incl_2986391557(s_2986391559, key_2986391560) {
    if (((s_2986391559.data).length == 0)) {
    var correctSizeHEX60gensym337_2986391643 = slotsNeeded_1828716594(64);
    s_2986391559.counter = 0;
    s_2986391559.data = new Array(chckRange(correctSizeHEX60gensym337_2986391643, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_2986391643, 0, 2147483647) ; ++i) { s_2986391559.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986391658 = [0];
    var index_2986391672 = rawGet_2986390414(s_2986391559, key_2986391560, hc_2986391658, 0);
    if ((index_2986391672 < 0)) {
    if (mustRehash_2986391673(s_2986391559)) {
    enlarge_2986391936(s_2986391559);
    index_2986391672 = rawGetKnownHC_2986392279(s_2986391559, key_2986391560, hc_2986391658[0]);
    }
    
    rawInsert_2986392779(s_2986391559, s_2986391559, "data", key_2986391560, hc_2986391658[0], subInt(-1, index_2986391672));
    s_2986391559.counter = addInt(s_2986391559.counter, 1);
    }
    

  
}

function del_2986393135(t_2986393138, key_2986393139) {
    var hc_2986393140 = [0];
    var i_2986393147 = rawGet_2986387997(t_2986393138, key_2986393139, hc_2986393140, 0);
    var mskHEX60gensym36_2986393151 = (t_2986393138.data).length - 1;
    if ((0 <= i_2986393147)) {
    t_2986393138.counter = subInt(t_2986393138.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986393158 = i_2986393147;
            var rHEX60gensym36_2986393159 = jHEX60gensym36_2986393158;
            t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)].Field0 = 0;
            t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)].Field1 = null;
            t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986393147 = (addInt(i_2986393147, 1) & mskHEX60gensym36_2986393151);
                  if (isEmpty_1308622877(t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986393159 = (t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)].Field0 & mskHEX60gensym36_2986393151);
                  if (!(((((rHEX60gensym36_2986393159 <= i_2986393147) && (jHEX60gensym36_2986393158 < rHEX60gensym36_2986393159)) || ((jHEX60gensym36_2986393158 < rHEX60gensym36_2986393159) && (i_2986393147 < jHEX60gensym36_2986393158))) || ((i_2986393147 < jHEX60gensym36_2986393158) && (rHEX60gensym36_2986393159 <= i_2986393147))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986393138.data[chckIndx(jHEX60gensym36_2986393158, 0, (t_2986393138.data).length - 1)] = nimCopy(t_2986393138.data[chckIndx(jHEX60gensym36_2986393158, 0, (t_2986393138.data).length - 1)], t_2986393138.data[chckIndx(i_2986393147, 0, (t_2986393138.data).length - 1)], NTI2986345350);
          }
      };
    };
    }
    

  
}

function remove_2986393894(L_2986393896, n_2986393897) {
    if ((n_2986393897 == L_2986393896.tail)) {
    L_2986393896.tail = n_2986393897.prev;
    }
    
    if ((n_2986393897 == L_2986393896.head)) {
    L_2986393896.head = n_2986393897.next;
    }
    
    if (!((n_2986393897.next == null))) {
    n_2986393897.next.prev = n_2986393897.prev;
    }
    
    if (!((n_2986393897.prev == null))) {
    n_2986393897.prev.next = n_2986393897.next;
    }
    

  
}

function resize_2986391367(cache_2986391370) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986391370.capacity < len_2986391449(cache_2986391370))) break Label2;
          var t_2986391537 = cache_2986391370.list.tail;
          if (cache_2986391370.recordRemovedKeys) {
          incl_2986391557(cache_2986391370.removedKeys, t_2986391537.value.key);
          }
          
          del_2986393135(cache_2986391370.table, t_2986391537.value.key);
          remove_2986393894(cache_2986391370.list, t_2986391537);
        }
    };

  
}

function addNewNode_2986388468(cache_2986388471, key_2986388472, val_2986388473) {
    var node_2986388494 = newDoublyLinkedNode_2986388476({key: key_2986388472, val: nimCopy(null, val_2986388473, NTI3070230559)});
    HEX5BHEX5DHEX3D_2986388558(cache_2986388471.table, key_2986388472, node_2986388494);
    prepend_2986390165(cache_2986388471.list, node_2986388494);
    if (cache_2986388471.recordRemovedKeys) {
    excl_2986390393(cache_2986388471.removedKeys, key_2986388472);
    }
    
    resize_2986391367(cache_2986388471);

  
}

function HEX5BHEX5DHEX3D_2986387892(cache_2986387895, key_2986387896, val_2986387897) {
    var node_2986388441 = getOrDefault_2986387987(cache_2986387895.table, key_2986387896, null);
    if ((node_2986388441 == null)) {
    addNewNode_2986388468(cache_2986387895, key_2986387896, val_2986387897);
    }
    else {
      node_2986388441.value.val = nimCopy(node_2986388441.value.val, val_2986387897, NTI3070230559);
      remove_2986393894(cache_2986387895.list, node_2986388441);
      prepend_2986390165(cache_2986387895.list, node_2986388441);
    }
    

  
}

function initDoublyLinkedList_2986394374() {
  var result_2986394376 = ({head: null, tail: null});

  return result_2986394376;

}

function initTable_2986394380(initialSize_2986394383) {
  var result_2986394384 = ({data: [], counter: 0});

    var correctSizeHEX60gensym345_2986394386 = slotsNeeded_1308622891(chckRange(initialSize_2986394383, 0, 2147483647));
    result_2986394384.counter = 0;
    result_2986394384.data = new Array(chckRange(correctSizeHEX60gensym345_2986394386, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym345_2986394386, 0, 2147483647) ; ++i) { result_2986394384.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986394384;

}

function newLruCache_2986394364(capacity_2986394367, recordRemovedKeys_2986394368) {
  var result_2986394369 = null;

    result_2986394369 = {capacity: capacity_2986394367, list: initDoublyLinkedList_2986394374(), table: initTable_2986394380(correctSize_3019898901(capacity_2986394367)), recordRemovedKeys: recordRemovedKeys_2986394368, removedKeys: ({data: [], counter: 0})};

  return result_2986394369;

}

function newCache_2986394359(capacity_2986394362) {
  var result_2986394363 = null;

    result_2986394363 = newLruCache_2986394364(capacity_2986394362, false);

  return result_2986394363;

}

function init_2986394354(result_2986394357, result_2986394357_Idx, capacity_2986394358) {
    result_2986394357[result_2986394357_Idx] = newCache_2986394359(capacity_2986394358);

  
}

function mustRehash_2986395107(t_2986395109) {
  var result_2986395110 = false;

    if (!((t_2986395109.counter < (t_2986395109.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986395110 = ((mulInt((t_2986395109.data).length, 2) < mulInt(t_2986395109.counter, 3)) || (subInt((t_2986395109.data).length, t_2986395109.counter) < 4));

  return result_2986395110;

}

function rawInsert_2986395800(t_2986395804, data_2986395805, data_2986395805_Idx, key_2986395806, val_2986395807, hc_2986395808, h_2986395809) {
    data_2986395805[data_2986395805_Idx][chckIndx(h_2986395809, 0, (data_2986395805[data_2986395805_Idx]).length - 1)].Field1 = key_2986395806;
    data_2986395805[data_2986395805_Idx][chckIndx(h_2986395809, 0, (data_2986395805[data_2986395805_Idx]).length - 1)].Field2 = val_2986395807;
    data_2986395805[data_2986395805_Idx][chckIndx(h_2986395809, 0, (data_2986395805[data_2986395805_Idx]).length - 1)].Field0 = hc_2986395808;

  
}

function enlarge_2986395364(t_2986395367) {
    var n_2986395370 = [];
    n_2986395370 = new Array(chckRange(mulInt((t_2986395367.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986395367.data).length, 2), 0, 2147483647) ; ++i) { n_2986395370[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2986395367.data; t_2986395367.data = n_2986395370; n_2986395370 = Temporary1;    Label2: {
      var i_2986395468 = 0;
      var colontmp__2936013398 = 0;
      colontmp__2936013398 = (n_2986395370).length - 1;
      var res_2936013399 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013399 <= colontmp__2936013398)) break Label4;
            i_2986395468 = res_2936013399;
            var eh_2986395549 = n_2986395370[chckIndx(i_2986395468, 0, (n_2986395370).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986395549)) {
            var j_2986395553 = (eh_2986395549 & (t_2986395367.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986395367.data[chckIndx(j_2986395553, 0, (t_2986395367.data).length - 1)].Field0)) break Label6;
                  j_2986395553 = nextTry_1308622883(j_2986395553, (t_2986395367.data).length - 1);
                }
            };
            rawInsert_2986395800(t_2986395367, t_2986395367, "data", n_2986395370[chckIndx(i_2986395468, 0, (n_2986395370).length - 1)].Field1, n_2986395370[chckIndx(i_2986395468, 0, (n_2986395370).length - 1)].Field2, eh_2986395549, j_2986395553);
            }
            
            res_2936013399 = addInt(res_2936013399, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986396059(t_2986396062, key_2986396063, hc_2986396064) {
  var result_2986396065 = 0;

  BeforeRet: {
    if (((t_2986396062.data).length == 0)) {
    result_2986396065 = -1;
    break BeforeRet;
    }
    
    var h_2986396150 = (hc_2986396064 & (t_2986396062.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986396062.data[chckIndx(h_2986396150, 0, (t_2986396062.data).length - 1)].Field0)) break Label2;
          if (((t_2986396062.data[chckIndx(h_2986396150, 0, (t_2986396062.data).length - 1)].Field0 == hc_2986396064) && (t_2986396062.data[chckIndx(h_2986396150, 0, (t_2986396062.data).length - 1)].Field1 == key_2986396063))) {
          result_2986396065 = h_2986396150;
          break BeforeRet;
          }
          
          h_2986396150 = nextTry_1308622883(h_2986396150, (t_2986396062.data).length - 1);
        }
    };
    result_2986396065 = subInt(-1, h_2986396150);
  };

  return result_2986396065;

}

function HEX5BHEX5DHEX3D_2986394488(t_2986394491, key_2986394492, val_2986394493) {
    if (((t_2986394491.data).length == 0)) {
    var correctSizeHEX60gensym348_2986394577 = slotsNeeded_1308622891(32);
    t_2986394491.counter = 0;
    t_2986394491.data = new Array(chckRange(correctSizeHEX60gensym348_2986394577, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym348_2986394577, 0, 2147483647) ; ++i) { t_2986394491.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2986394582 = [0];
    var index_2986394939 = rawGet_2986394583(t_2986394491, key_2986394492, hc_2986394582, 0);
    if ((0 <= index_2986394939)) {
    t_2986394491.data[chckIndx(index_2986394939, 0, (t_2986394491.data).length - 1)].Field2 = val_2986394493;
    }
    else {
      if (((t_2986394491.data).length == 0)) {
      var correctSizeHEX60gensym353_2986395102 = slotsNeeded_1308622891(32);
      t_2986394491.counter = 0;
      t_2986394491.data = new Array(chckRange(correctSizeHEX60gensym353_2986395102, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym353_2986395102, 0, 2147483647) ; ++i) { t_2986394491.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2986395107(t_2986394491)) {
      enlarge_2986395364(t_2986394491);
      index_2986394939 = rawGetKnownHC_2986396059(t_2986394491, key_2986394492, hc_2986394582[0]);
      }
      
      index_2986394939 = subInt(-1, index_2986394939);
      rawInsert_2986395800(t_2986394491, t_2986394491, "data", key_2986394492, val_2986394493, hc_2986394582[0], index_2986394939);
      t_2986394491.counter = addInt(t_2986394491.counter, 1);
    }
    

  
}

function formatValue_2986441597(result_2986441599, result_2986441599_Idx, value_2986441600, specifier_2986441601) {
    formatValue_721420459(result_2986441599, result_2986441599_Idx, HEX24_3003132512(value_2986441600), specifier_2986441601);

  
}

function getAstNode_2986398560(ctxHEX60gensym74_2986398561, idHEX60gensym74_2986398562) {
  var result_2986398564 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_2986398565 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_2986398562, NTI2046820355), Field1: 0}, NTI3003121689);
    if (contains_2986345382(ctxHEX60gensym74_2986398561.itemsAstNode, itemHEX60gensym74_2986398565)) {
    result_2986398564 = nimCopy(result_2986398564, some_2969567458(HEX5BHEX5D_2986345949(ctxHEX60gensym74_2986398561.itemsAstNode, itemHEX60gensym74_2986398565)), NTI2969567351);
    break BeforeRet;
    }
    
    result_2986398564 = nimCopy(result_2986398564, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2986398564;

}

function recoverValue_2986345255(ctx_2986345256, key_2986345257) {
      var Temporary1;

    var fmtRes_2986441596 = [mnewString(0)];
    fmtRes_2986441596[0].push.apply(fmtRes_2986441596[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_2986441597(fmtRes_2986441596, 0, key_2986345257, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441596[0], NTI33554449)]);
      var oHEX60gensym532_2986441607 = getAstNode_2986398560(ctx_2986345256, key_2986345257.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym532_2986441607)) Temporary1 = false; else {        var node_2986441653 = get_2969569134(oHEX60gensym532_2986441607);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986353521(ctx_2986345256.queryCacheValue, node_2986441653, errorValue_3070231215());
    }
    

  
}

function recoverType_2986345258(ctx_2986345259, key_2986345260) {
      var Temporary1;

    var fmtRes_2986441730 = [mnewString(0)];
    fmtRes_2986441730[0].push.apply(fmtRes_2986441730[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_2986441597(fmtRes_2986441730, 0, key_2986345260, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441730[0], NTI33554449)]);
      var oHEX60gensym534_2986441738 = getAstNode_2986398560(ctx_2986345259, key_2986345260.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym534_2986441738)) Temporary1 = false; else {        var node_2986441784 = get_2969569134(oHEX60gensym534_2986441738);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986346762(ctx_2986345259.queryCacheType, node_2986441784, errorType_3070230904());
    }
    

  
}

function recoverSymbol_2986345261(ctx_2986345262, key_2986345263) {
      var Temporary1;

    var fmtRes_2986441861 = [mnewString(0)];
    fmtRes_2986441861[0].push.apply(fmtRes_2986441861[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_2986441597(fmtRes_2986441861, 0, key_2986345263, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441861[0], NTI33554449)]);
      var oHEX60gensym536_2986441869 = getAstNode_2986398560(ctx_2986345262, key_2986345263.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym536_2986441869)) Temporary1 = false; else {        var node_2986441915 = get_2969569134(oHEX60gensym536_2986441869);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986357833(ctx_2986345262.queryCacheSymbol, node_2986441915, none_2986407996());
    }
    

  
}

function recoverSymbols_2986345264(ctx_2986345265, key_2986345266) {
      var Temporary1;

    var fmtRes_2986441994 = [mnewString(0)];
    fmtRes_2986441994[0].push.apply(fmtRes_2986441994[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_2986441597(fmtRes_2986441994, 0, key_2986345266, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441994[0], NTI33554449)]);
      var oHEX60gensym538_2986442002 = getAstNode_2986398560(ctx_2986345265, key_2986345266.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym538_2986442002)) Temporary1 = false; else {        var node_2986442048 = get_2969569134(oHEX60gensym538_2986442002);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986362137(ctx_2986345265.queryCacheSymbols, node_2986442048, newTable_2986442112(32));
    }
    

  
}

function initDoublyLinkedList_2986396694() {
  var result_2986396696 = ({head: null, tail: null});

  return result_2986396696;

}

function initTable_2986396700(initialSize_2986396703) {
  var result_2986396704 = ({data: [], counter: 0});

    var correctSizeHEX60gensym361_2986396706 = slotsNeeded_1308622891(chckRange(initialSize_2986396703, 0, 2147483647));
    result_2986396704.counter = 0;
    result_2986396704.data = new Array(chckRange(correctSizeHEX60gensym361_2986396706, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_2986396706, 0, 2147483647) ; ++i) { result_2986396704.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396704;

}

function newLruCache_2986396684(capacity_2986396687, recordRemovedKeys_2986396688) {
  var result_2986396689 = null;

    result_2986396689 = {capacity: capacity_2986396687, list: initDoublyLinkedList_2986396694(), table: initTable_2986396700(correctSize_3019898901(capacity_2986396687)), recordRemovedKeys: recordRemovedKeys_2986396688, removedKeys: ({data: [], counter: 0})};

  return result_2986396689;

}

function newCache_2986396679(capacity_2986396682) {
  var result_2986396683 = null;

    result_2986396683 = newLruCache_2986396684(capacity_2986396682, false);

  return result_2986396683;

}

function init_2986396674(result_2986396677, result_2986396677_Idx, capacity_2986396678) {
    result_2986396677[result_2986396677_Idx] = newCache_2986396679(capacity_2986396678);

  
}

function initDoublyLinkedList_2986396792() {
  var result_2986396794 = ({head: null, tail: null});

  return result_2986396794;

}

function initTable_2986396798(initialSize_2986396801) {
  var result_2986396802 = ({data: [], counter: 0});

    var correctSizeHEX60gensym363_2986396804 = slotsNeeded_1308622891(chckRange(initialSize_2986396801, 0, 2147483647));
    result_2986396802.counter = 0;
    result_2986396802.data = new Array(chckRange(correctSizeHEX60gensym363_2986396804, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym363_2986396804, 0, 2147483647) ; ++i) { result_2986396802.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396802;

}

function newLruCache_2986396782(capacity_2986396785, recordRemovedKeys_2986396786) {
  var result_2986396787 = null;

    result_2986396787 = {capacity: capacity_2986396785, list: initDoublyLinkedList_2986396792(), table: initTable_2986396798(correctSize_3019898901(capacity_2986396785)), recordRemovedKeys: recordRemovedKeys_2986396786, removedKeys: ({data: [], counter: 0})};

  return result_2986396787;

}

function newCache_2986396777(capacity_2986396780) {
  var result_2986396781 = null;

    result_2986396781 = newLruCache_2986396782(capacity_2986396780, false);

  return result_2986396781;

}

function init_2986396772(result_2986396775, result_2986396775_Idx, capacity_2986396776) {
    result_2986396775[result_2986396775_Idx] = newCache_2986396777(capacity_2986396776);

  
}

function initDoublyLinkedList_2986396890() {
  var result_2986396892 = ({head: null, tail: null});

  return result_2986396892;

}

function initTable_2986396896(initialSize_2986396899) {
  var result_2986396900 = ({data: [], counter: 0});

    var correctSizeHEX60gensym365_2986396902 = slotsNeeded_1308622891(chckRange(initialSize_2986396899, 0, 2147483647));
    result_2986396900.counter = 0;
    result_2986396900.data = new Array(chckRange(correctSizeHEX60gensym365_2986396902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym365_2986396902, 0, 2147483647) ; ++i) { result_2986396900.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396900;

}

function newLruCache_2986396880(capacity_2986396883, recordRemovedKeys_2986396884) {
  var result_2986396885 = null;

    result_2986396885 = {capacity: capacity_2986396883, list: initDoublyLinkedList_2986396890(), table: initTable_2986396896(correctSize_3019898901(capacity_2986396883)), recordRemovedKeys: recordRemovedKeys_2986396884, removedKeys: ({data: [], counter: 0})};

  return result_2986396885;

}

function newCache_2986396875(capacity_2986396878) {
  var result_2986396879 = null;

    result_2986396879 = newLruCache_2986396880(capacity_2986396878, false);

  return result_2986396879;

}

function init_2986396870(result_2986396873, result_2986396873_Idx, capacity_2986396874) {
    result_2986396873[result_2986396873_Idx] = newCache_2986396875(capacity_2986396874);

  
}

function initDoublyLinkedList_2986396988() {
  var result_2986396990 = ({head: null, tail: null});

  return result_2986396990;

}

function initTable_2986396994(initialSize_2986396997) {
  var result_2986396998 = ({data: [], counter: 0});

    var correctSizeHEX60gensym367_2986397000 = slotsNeeded_1308622891(chckRange(initialSize_2986396997, 0, 2147483647));
    result_2986396998.counter = 0;
    result_2986396998.data = new Array(chckRange(correctSizeHEX60gensym367_2986397000, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym367_2986397000, 0, 2147483647) ; ++i) { result_2986396998.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396998;

}

function newLruCache_2986396978(capacity_2986396981, recordRemovedKeys_2986396982) {
  var result_2986396983 = null;

    result_2986396983 = {capacity: capacity_2986396981, list: initDoublyLinkedList_2986396988(), table: initTable_2986396994(correctSize_3019898901(capacity_2986396981)), recordRemovedKeys: recordRemovedKeys_2986396982, removedKeys: ({data: [], counter: 0})};

  return result_2986396983;

}

function newCache_2986396973(capacity_2986396976) {
  var result_2986396977 = null;

    result_2986396977 = newLruCache_2986396978(capacity_2986396976, false);

  return result_2986396977;

}

function init_2986396968(result_2986396971, result_2986396971_Idx, capacity_2986396972) {
    result_2986396971[result_2986396971_Idx] = newCache_2986396973(capacity_2986396972);

  
}

function initTable_2986397043(initialSize_2986397046) {
  var result_2986397047 = ({data: [], counter: 0});

    var correctSizeHEX60gensym371_2986397049 = slotsNeeded_1308622891(chckRange(initialSize_2986397046, 0, 2147483647));
    result_2986397047.counter = 0;
    result_2986397047.data = new Array(chckRange(correctSizeHEX60gensym371_2986397049, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym371_2986397049, 0, 2147483647) ; ++i) { result_2986397047.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_2986397047;

}

function initTable_2986397063(initialSize_2986397066) {
  var result_2986397067 = ({data: [], counter: 0});

    var correctSizeHEX60gensym373_2986397069 = slotsNeeded_1308622891(chckRange(initialSize_2986397066, 0, 2147483647));
    result_2986397067.counter = 0;
    result_2986397067.data = new Array(chckRange(correctSizeHEX60gensym373_2986397069, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym373_2986397069, 0, 2147483647) ; ++i) { result_2986397067.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_2986397067;

}

function newContext_2986345294() {
    
function HEX3Aanonymous_2986345303(itemHEX60gensym28_2986345304) {
      var result_2986345305 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym28_2986345304))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym28_2986345304) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsType.forcedCalls = addInt(ctx_2986344632.statsType.forcedCalls, 1);
        var argHEX60gensym28_2986346697 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym28_2986345304);
        var valueHEX60gensym28_2986346698 = computeTypeImpl_2986345267(ctx_2986344632, argHEX60gensym28_2986346697);
        HEX5BHEX5DHEX3D_2986346762(ctx_2986344632.queryCacheType, argHEX60gensym28_2986346697, valueHEX60gensym28_2986346698);
        result_2986345305 = nimCopy(null, fingerprint_3070231130(valueHEX60gensym28_2986346698), NTI3003121688);
        break BeforeRet;
      };

      return result_2986345305;

    }
    
function HEX3Aanonymous_2986353282(itemHEX60gensym29_2986353283) {
      var result_2986353284 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym29_2986353283))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym29_2986353283) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsValue.forcedCalls = addInt(ctx_2986344632.statsValue.forcedCalls, 1);
        var argHEX60gensym29_2986353456 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym29_2986353283);
        var valueHEX60gensym29_2986353457 = computeValueImpl_2986345270(ctx_2986344632, argHEX60gensym29_2986353456);
        HEX5BHEX5DHEX3D_2986353521(ctx_2986344632.queryCacheValue, argHEX60gensym29_2986353456, valueHEX60gensym29_2986353457);
        result_2986353284 = nimCopy(null, fingerprint_3070231311(valueHEX60gensym29_2986353457), NTI3003121688);
        break BeforeRet;
      };

      return result_2986353284;

    }
    
function HEX3Aanonymous_2986357593(itemHEX60gensym30_2986357594) {
      var result_2986357595 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym30_2986357594))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003121876(itemHEX60gensym30_2986357594) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbol.forcedCalls = addInt(ctx_2986344632.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_2986357767 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym30_2986357594);
        var valueHEX60gensym30_2986357769 = computeSymbolImpl_2986345273(ctx_2986344632, argHEX60gensym30_2986357767);
        HEX5BHEX5DHEX3D_2986357833(ctx_2986344632.queryCacheSymbol, argHEX60gensym30_2986357767, valueHEX60gensym30_2986357769);
        result_2986357595 = nimCopy(null, fingerprint_3070232115(valueHEX60gensym30_2986357769), NTI3003121688);
        break BeforeRet;
      };

      return result_2986357595;

    }
    
function HEX3Aanonymous_2986361896(itemHEX60gensym31_2986361897) {
      var result_2986361898 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym31_2986361897))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003121876(itemHEX60gensym31_2986361897) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbols.forcedCalls = addInt(ctx_2986344632.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_2986362070 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym31_2986361897);
        var valueHEX60gensym31_2986362073 = computeSymbolsImpl_2986345277(ctx_2986344632, argHEX60gensym31_2986362070);
        HEX5BHEX5DHEX3D_2986362137(ctx_2986344632.queryCacheSymbols, argHEX60gensym31_2986362070, valueHEX60gensym31_2986362073);
        result_2986361898 = nimCopy(null, fingerprint_3070231776(valueHEX60gensym31_2986362073), NTI3003121688);
        break BeforeRet;
      };

      return result_2986361898;

    }
    
function HEX3Aanonymous_2986366200(itemHEX60gensym32_2986366201) {
      var result_2986366202 = [];

      BeforeRet: {
        if (!(contains_2986366279(ctx_2986344632.itemsSymbol, itemHEX60gensym32_2986366201))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym32_2986366201) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbolType.forcedCalls = addInt(ctx_2986344632.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_2986367579 = HEX5BHEX5D_2986366832(ctx_2986344632.itemsSymbol, itemHEX60gensym32_2986366201);
        var valueHEX60gensym32_2986367580 = computeSymbolTypeImpl_2986345282(ctx_2986344632, argHEX60gensym32_2986367579);
        HEX5BHEX5DHEX3D_2986367644(ctx_2986344632.queryCacheSymbolType, argHEX60gensym32_2986367579, valueHEX60gensym32_2986367580);
        result_2986366202 = nimCopy(null, fingerprint_3070231130(valueHEX60gensym32_2986367580), NTI3003121688);
        break BeforeRet;
      };

      return result_2986366202;

    }
    
function HEX3Aanonymous_2986374157(itemHEX60gensym33_2986374158) {
      var result_2986374159 = [];

      BeforeRet: {
        if (!(contains_2986366279(ctx_2986344632.itemsSymbol, itemHEX60gensym33_2986374158))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym33_2986374158) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbolValue.forcedCalls = addInt(ctx_2986344632.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_2986374331 = HEX5BHEX5D_2986366832(ctx_2986344632.itemsSymbol, itemHEX60gensym33_2986374158);
        var valueHEX60gensym33_2986374332 = computeSymbolValueImpl_2986345285(ctx_2986344632, argHEX60gensym33_2986374331);
        HEX5BHEX5DHEX3D_2986374396(ctx_2986344632.queryCacheSymbolValue, argHEX60gensym33_2986374331, valueHEX60gensym33_2986374332);
        result_2986374159 = nimCopy(null, fingerprint_3070231311(valueHEX60gensym33_2986374332), NTI3003121688);
        break BeforeRet;
      };

      return result_2986374159;

    }
    
function HEX3Aanonymous_2986378460(itemHEX60gensym34_2986378461) {
      var result_2986378462 = [];

      BeforeRet: {
        if (!(contains_2986378539(ctx_2986344632.itemsFunctionExecutionContext, itemHEX60gensym34_2986378461))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3003121876(itemHEX60gensym34_2986378461) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsFunctionExecution.forcedCalls = addInt(ctx_2986344632.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_2986379848 = HEX5BHEX5D_2986379092(ctx_2986344632.itemsFunctionExecutionContext, itemHEX60gensym34_2986378461);
        var valueHEX60gensym34_2986379849 = computeFunctionExecutionImpl_2986345288(ctx_2986344632, argHEX60gensym34_2986379848);
        HEX5BHEX5DHEX3D_2986379913(ctx_2986344632.queryCacheFunctionExecution, argHEX60gensym34_2986379848, valueHEX60gensym34_2986379849);
        result_2986378462 = nimCopy(null, [], NTI2986369034);
        break BeforeRet;
      };

      return result_2986378462;

    }
    
function HEX3Aanonymous_2986386439(itemHEX60gensym35_2986386440) {
      var result_2986386441 = [];

      BeforeRet: {
        if (!(contains_2986386518(ctx_2986344632.itemsNodeLayoutInput, itemHEX60gensym35_2986386440))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3003121876(itemHEX60gensym35_2986386440) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsNodeLayout.forcedCalls = addInt(ctx_2986344632.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_2986387827 = HEX5BHEX5D_2986387071(ctx_2986344632.itemsNodeLayoutInput, itemHEX60gensym35_2986386440);
        var valueHEX60gensym35_2986387828 = computeNodeLayoutImpl_2986345291(ctx_2986344632, argHEX60gensym35_2986387827);
        HEX5BHEX5DHEX3D_2986387892(ctx_2986344632.queryCacheNodeLayout, argHEX60gensym35_2986387827, valueHEX60gensym35_2986387828);
        result_2986386441 = nimCopy(null, [], NTI2986373631);
        break BeforeRet;
      };

      return result_2986386441;

    }
    
function HEX3Aanonymous_2986394423(keyHEX60gensym36_2986394424) {
        recoverValue_2986345255(ctx_2986344632, keyHEX60gensym36_2986394424);

      
    }
    
function HEX3Aanonymous_2986396417(keyHEX60gensym37_2986396418) {
        recoverType_2986345258(ctx_2986344632, keyHEX60gensym37_2986396418);

      
    }
    
function HEX3Aanonymous_2986396493(keyHEX60gensym38_2986396494) {
        recoverSymbol_2986345261(ctx_2986344632, keyHEX60gensym38_2986396494);

      
    }
    
function HEX3Aanonymous_2986396569(keyHEX60gensym39_2986396570) {
        recoverSymbols_2986345264(ctx_2986344632, keyHEX60gensym39_2986396570);

      
    }

  var result_2986345295 = null;

  BeforeRet: {
    var ctx_2986344632 = null;
    ctx_2986344632 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_2986344632.depGraph = newDependencyGraph_3003121940();
    ctx_2986344632.dependencyStack = nimCopy(null, [], NTI2986345408);
    ctx_2986344632.updateType = HEX3Aanonymous_2986345303;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateType);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 0, [84,121,112,101]);
    init_2986353218(ctx_2986344632, "queryCacheType", 2000);
    ctx_2986344632.updateValue = HEX3Aanonymous_2986353282;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateValue);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_2986357529(ctx_2986344632, "queryCacheValue", 2000);
    ctx_2986344632.updateSymbol = HEX3Aanonymous_2986357593;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbol);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_2986361832(ctx_2986344632, "queryCacheSymbol", 2000);
    ctx_2986344632.updateSymbols = HEX3Aanonymous_2986361896;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbols);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_2986366136(ctx_2986344632, "queryCacheSymbols", 2000);
    ctx_2986344632.updateSymbolType = HEX3Aanonymous_2986366200;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbolType);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_2986374093(ctx_2986344632, "queryCacheSymbolType", 2000);
    ctx_2986344632.updateSymbolValue = HEX3Aanonymous_2986374157;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_2986378396(ctx_2986344632, "queryCacheSymbolValue", 2000);
    ctx_2986344632.updateFunctionExecution = HEX3Aanonymous_2986378460;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_2986386375(ctx_2986344632, "queryCacheFunctionExecution", 2000);
    ctx_2986344632.updateNodeLayout = HEX3Aanonymous_2986386439;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_2986394354(ctx_2986344632, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_2986394488(ctx_2986344632.recoveryFunctions, 1, HEX3Aanonymous_2986394423);
    HEX5BHEX5DHEX3D_2986394488(ctx_2986344632.recoveryFunctions, 0, HEX3Aanonymous_2986396417);
    HEX5BHEX5DHEX3D_2986394488(ctx_2986344632.recoveryFunctions, 2, HEX3Aanonymous_2986396493);
    HEX5BHEX5DHEX3D_2986394488(ctx_2986344632.recoveryFunctions, 3, HEX3Aanonymous_2986396569);
    init_2986396674(ctx_2986344632, "itemsAstNode", 2000);
    init_2986396772(ctx_2986344632, "itemsNodeLayoutInput", 2000);
    init_2986396870(ctx_2986344632, "itemsSymbol", 2000);
    init_2986396968(ctx_2986344632, "itemsFunctionExecutionContext", 2000);
    ctx_2986344632.globalScope = nimCopy(ctx_2986344632.globalScope, initTable_2986397032(32), NTI3070231496);
    ctx_2986344632.enableQueryLogging = false;
    ctx_2986344632.enableExecutionLogging = false;
    ctx_2986344632.diagnosticsPerNode = nimCopy(ctx_2986344632.diagnosticsPerNode, initTable_2986397043(32), NTI2986344773);
    ctx_2986344632.diagnosticsPerQuery = nimCopy(ctx_2986344632.diagnosticsPerQuery, initTable_2986397063(32), NTI2986344790);
    result_2986345295 = ctx_2986344632;
    break BeforeRet;
  };

  return result_2986345295;

}
var executionOutput_2936012854 = [{lines: [], scroll: 0}];
var ctx_2936012855 = newContext_2986345294();
ctx_2936012855.enableLogging = false;
ctx_2936012855.enableQueryLogging = false;

function newFunctionValue_3070231255(impl_3070231256) {
  var result_3070231257 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3070231257 = nimCopy(result_3070231257, {kind: 4, impl: impl_3070231256, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_3070231257;

}

function createBinaryIntOperator_2936013402(operator_2936013406) {
    
function HEX3Aanonymous_2936013408(values_2936013409) {
        var Temporary1;
        var Temporary2;

      var result_2936013410 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2936013409).length < 2)) {
        result_2936013410 = nimCopy(result_2936013410, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        if ((!((values_2936013409[chckIndx(0, 0, (values_2936013409).length - 1)].kind == 3)) || !((values_2936013409[chckIndx(1, 0, (values_2936013409).length - 1)].kind == 3)))) {
        result_2936013410 = nimCopy(result_2936013410, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var Temporary1 = values_2936013409[chckIndx(0, 0, (values_2936013409).length - 1)];
        if (ConstSet160[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
        var Temporary2 = values_2936013409[chckIndx(1, 0, (values_2936013409).length - 1)];
        if (ConstSet161[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
        result_2936013410 = nimCopy(result_2936013410, {kind: 3, intValue: operator_2936013406(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
        break BeforeRet;
      };

      return result_2936013410;

    }

  var result_2936013407 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013407 = nimCopy(result_2936013407, newFunctionValue_3070231255(HEX3Aanonymous_2936013408), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013407;

}

function createUnityIntOperator_2936013422(operator_2936013425) {
    
function HEX3Aanonymous_2936013427(values_2936013428) {
        var Temporary1;

      var result_2936013429 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2936013428).length < 1)) {
        result_2936013429 = nimCopy(result_2936013429, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var value_2936013433 = nimCopy(null, values_2936013428[chckIndx(0, 0, (values_2936013428).length - 1)], NTI3070230535);
        if (!((value_2936013433.kind == 3))) {
        result_2936013429 = nimCopy(result_2936013429, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var Temporary1 = value_2936013433;
        if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
        result_2936013429 = nimCopy(result_2936013429, {kind: 3, intValue: operator_2936013425(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
        break BeforeRet;
      };

      return result_2936013429;

    }

  var result_2936013426 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013426 = nimCopy(result_2936013426, newFunctionValue_3070231255(HEX3Aanonymous_2936013427), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013426;

}

function stringValue_3070231249(value_3070231250) {
  var result_3070231251 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231251 = nimCopy(result_3070231251, {kind: 2, stringValue: nimCopy(null, value_3070231250, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231251;

}

function join_2936013577(a_2936013579, sep_2936013580) {
  var result_2936013581 = [];

    result_2936013581 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2936013596 = 0;
      var x_2936013597 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936015332 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936015332 < (a_2936013579).length)) break Label3;
            i_2936013596 = i_2936015332;
            x_2936013597 = nimCopy(x_2936013597, a_2936013579[chckIndx(i_2936015332, 0, (a_2936013579).length - 1)], NTI3070230535);
            if ((0 < i_2936013596)) {
            result_2936013581.push.apply(result_2936013581, sep_2936013580);;
            }
            
            result_2936013581.push.apply(result_2936013581, HEX24_3070231271(x_2936013597));;
            i_2936015332 = addInt(i_2936015332, 1);
          }
      };
    };

  return result_2936013581;

}

function delete_2936013615(s_2936013617, s_2936013617_Idx, slice_2936013618) {
    if (!((((slice_2936013618.a < (s_2936013617[s_2936013617_Idx]).length) && (0 <= slice_2936013618.a)) && (slice_2936013618.b < (s_2936013617[s_2936013617_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2936013618, NTI805306392), Field1: (s_2936013617[s_2936013617_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2936013618.a <= slice_2936013618.b)) {
    var n_2936013665 = addInt(subInt(slice_2936013618.b, slice_2936013618.a), 1);
    var first_2936013666 = slice_2936013618.a;
    s_2936013617[s_2936013617_Idx].splice(first_2936013666, n_2936013665);
    }
    

  
}

function color_2634023294(c_2634023295) {
  var result_2634023296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634023296 = nimCopy(result_2634023296, c_2634023295, NTI2550136835);

  return result_2634023296;

}

function addOutput_2936013598(self_2936013600, line_2936013601, color_2936013602) {
    if ((1500 <= (self_2936013600.lines).length)) {
    delete_2936013615(self_2936013600, "lines", HEX2EHEX2E_805306418(0, subInt((self_2936013600.lines).length, 1000)));
    }
    
    if ((0 < self_2936013600.scroll)) {
    self_2936013600.scroll = addInt(self_2936013600.scroll, 1);
    }
    
    self_2936013600.lines.push({Field0: nimCopy(null, line_2936013601, NTI33554449), Field1: color_2634023294(color_2936013602)});;

  
}

function typeType_3070230959() {
  var result_3070230960 = null;

    result_3070230960 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_3070230960;

}

function typeValue_3070231252(typ_3070231253) {
  var result_3070231254 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231254 = nimCopy(result_3070231254, {kind: 6, typ: typ_3070231253, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3070230535);

  return result_3070231254;

}

function HEX3Aanonymous_2936013483(a_2936013484, b_2936013485) {
  var result_2936013486 = 0;

    result_2936013486 = addInt(a_2936013484, b_2936013485);

  return result_2936013486;

}

function HEX3Aanonymous_2936013488(a_2936013489, b_2936013490) {
  var result_2936013491 = 0;

    result_2936013491 = subInt(a_2936013489, b_2936013490);

  return result_2936013491;

}

function HEX3Aanonymous_2936013493(a_2936013494, b_2936013495) {
  var result_2936013496 = 0;

    result_2936013496 = mulInt(a_2936013494, b_2936013495);

  return result_2936013496;

}

function HEX3Aanonymous_2936013498(a_2936013499, b_2936013500) {
  var result_2936013501 = 0;

    result_2936013501 = divInt(a_2936013499, b_2936013500);

  return result_2936013501;

}

function HEX3Aanonymous_2936013503(a_2936013504, b_2936013505) {
  var result_2936013506 = 0;

    result_2936013506 = modInt(a_2936013504, b_2936013505);

  return result_2936013506;

}

function HEX3Aanonymous_2936013508(a_2936013509) {
  var result_2936013510 = 0;

    result_2936013510 = negInt(a_2936013509);

  return result_2936013510;

}

function HEX3Aanonymous_2936013512(a_2936013513) {
    var Temporary1;

  var result_2936013514 = 0;

    if (!((a_2936013513 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2936013514 = Temporary1;

  return result_2936013514;

}

function HEX3Aanonymous_2936013516(a_2936013517, b_2936013518) {
    var Temporary1;

  var result_2936013519 = 0;

    if ((a_2936013517 < b_2936013518)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013519 = Temporary1;

  return result_2936013519;

}

function HEX3Aanonymous_2936013521(a_2936013522, b_2936013523) {
    var Temporary1;

  var result_2936013524 = 0;

    if ((a_2936013522 <= b_2936013523)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013524 = Temporary1;

  return result_2936013524;

}

function HEX3Aanonymous_2936013526(a_2936013527, b_2936013528) {
    var Temporary1;

  var result_2936013529 = 0;

    if ((b_2936013528 < a_2936013527)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013529 = Temporary1;

  return result_2936013529;

}

function HEX3Aanonymous_2936013531(a_2936013532, b_2936013533) {
    var Temporary1;

  var result_2936013534 = 0;

    if ((b_2936013533 <= a_2936013532)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013534 = Temporary1;

  return result_2936013534;

}

function HEX3Aanonymous_2936013536(a_2936013537, b_2936013538) {
    var Temporary1;

  var result_2936013539 = 0;

    if ((a_2936013537 == b_2936013538)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013539 = Temporary1;

  return result_2936013539;

}

function HEX3Aanonymous_2936013541(a_2936013542, b_2936013543) {
    var Temporary1;

  var result_2936013544 = 0;

    if (!((a_2936013542 == b_2936013543))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013544 = Temporary1;

  return result_2936013544;

}

function HEX3Aanonymous_2936013546(a_2936013547, b_2936013548) {
    var Temporary1;

  var result_2936013549 = 0;

    if ((!((a_2936013547 == 0)) && !((b_2936013548 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013549 = Temporary1;

  return result_2936013549;

}

function HEX3Aanonymous_2936013551(a_2936013552, b_2936013553) {
    var Temporary1;

  var result_2936013554 = 0;

    if ((!((a_2936013552 == 0)) || !((b_2936013553 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013554 = Temporary1;

  return result_2936013554;

}

function HEX3Aanonymous_2936013556(a_2936013557, b_2936013558) {
    var Temporary1;

  var result_2936013559 = 0;

    if ((a_2936013557 < b_2936013558)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2936013558 < a_2936013557)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2936013559 = Temporary1;

  return result_2936013559;

}

function HEX3Aanonymous_2936013561(values_2936013562) {
    var Temporary1;

  var result_2936013563 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2936013562).length < 2)) {
    result_2936013563 = nimCopy(result_2936013563, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var leftValue_2936013567 = nimCopy(null, values_2936013562[chckIndx(0, 0, (values_2936013562).length - 1)], NTI3070230535);
    var rightValue_2936013568 = nimCopy(null, values_2936013562[chckIndx(1, 0, (values_2936013562).length - 1)], NTI3070230535);
    if (!((leftValue_2936013567.kind == 2))) {
    result_2936013563 = nimCopy(result_2936013563, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2936013567;
    if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
    result_2936013563 = nimCopy(result_2936013563, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3070231271(rightValue_2936013568) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_2936013563;

}

function HEX3Aanonymous_2936013574(values_2936013575) {
  var result_2936013576 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013576 = nimCopy(result_2936013576, stringValue_3070231249(join_2936013577(values_2936013575, [])), NTI3070230535);
    addOutput_2936013598(executionOutput_2936012854[0], HEX24_3070231271(result_2936013576), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3070231271(result_2936013576)]);
    result_2936013576 = nimCopy(result_2936013576, voidValue_3070231244(), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013576;

}

function HEX3Aanonymous_2936013685(values_2936013688) {
  var result_2936013691 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2936013691 = nimCopy(result_2936013691, stringValue_3070231249(join_2936013577(values_2936013688, [])), NTI3070230535);

  return result_2936013691;

}
var typeAddIntInt_2936013442 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeSubIntInt_2936013447 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeMulIntInt_2936013452 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeDivIntInt_2936013457 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeModIntInt_2936013462 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeAddStringInt_2936013467 = newFunctionType_3070230946([stringType_3070230944(), intType_3070230942()], stringType_3070230944());
var typeNegInt_2936013472 = newFunctionType_3070230946([intType_3070230942()], intType_3070230942());
var typeNotInt_2936013477 = newFunctionType_3070230946([intType_3070230942()], intType_3070230942());
var typeFnIntIntInt_2936013482 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var funcAddIntInt_2936013487 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013483);
var funcSubIntInt_2936013492 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013488);
var funcMulIntInt_2936013497 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013493);
var funcDivIntInt_2936013502 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013498);
var funcModIntInt_2936013507 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013503);
var funcNegInt_2936013511 = createUnityIntOperator_2936013422(HEX3Aanonymous_2936013508);
var funcNotInt_2936013515 = createUnityIntOperator_2936013422(HEX3Aanonymous_2936013512);
var funcLessIntInt_2936013520 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013516);
var funcLessEqualIntInt_2936013525 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013521);
var funcGreaterIntInt_2936013530 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013526);
var funcGreaterEqualIntInt_2936013535 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013531);
var funcEqualIntInt_2936013540 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013536);
var funcNotEqualIntInt_2936013545 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013541);
var funcAndIntInt_2936013550 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013546);
var funcOrIntInt_2936013555 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013551);
var funcOrderIntInt_2936013560 = createBinaryIntOperator_2936013402(HEX3Aanonymous_2936013556);
var funcAddStringInt_2936013573 = newFunctionValue_3070231255(HEX3Aanonymous_2936013561);
var funcPrintAny_2936013684 = newFunctionValue_3070231255(HEX3Aanonymous_2936013574);
var funcBuildStringAny_2936013696 = newFunctionValue_3070231255(HEX3Aanonymous_2936013685);
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdAdd_2952790019, {id: nimCopy(null, IdAdd_2952790019, NTI2046820355), name: [43], kind: 1, typ: typeAddIntInt_2936013442, value: nimCopy(null, funcAddIntInt_2936013487, NTI3070230535), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdSub_2952790020, {id: nimCopy(null, IdSub_2952790020, NTI2046820355), name: [45], kind: 1, typ: typeSubIntInt_2936013447, value: nimCopy(null, funcSubIntInt_2936013492, NTI3070230535), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdMul_2952790021, {id: nimCopy(null, IdMul_2952790021, NTI2046820355), name: [42], kind: 1, typ: typeMulIntInt_2936013452, value: nimCopy(null, funcMulIntInt_2936013497, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdDiv_2952790022, {id: nimCopy(null, IdDiv_2952790022, NTI2046820355), name: [47], kind: 1, typ: typeDivIntInt_2936013457, value: nimCopy(null, funcDivIntInt_2936013502, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdMod_2952790023, {id: nimCopy(null, IdMod_2952790023, NTI2046820355), name: [37], kind: 1, typ: typeModIntInt_2936013462, value: nimCopy(null, funcModIntInt_2936013507, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdNegate_2952790024, {id: nimCopy(null, IdNegate_2952790024, NTI2046820355), name: [45], kind: 1, typ: typeNegInt_2936013472, value: nimCopy(null, funcNegInt_2936013511, NTI3070230535), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdNot_2952790025, {id: nimCopy(null, IdNot_2952790025, NTI2046820355), name: [33], kind: 1, typ: typeNotInt_2936013477, value: nimCopy(null, funcNotInt_2936013515, NTI3070230535), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdAppendString_2952790027, {id: nimCopy(null, IdAppendString_2952790027, NTI2046820355), name: [38], kind: 1, typ: typeAddStringInt_2936013467, value: nimCopy(null, funcAddStringInt_2936013573, NTI3070230535), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdLess_2952790031, {id: nimCopy(null, IdLess_2952790031, NTI2046820355), name: [60], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcLessIntInt_2936013520, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdLessEqual_2952790032, {id: nimCopy(null, IdLessEqual_2952790032, NTI2046820355), name: [60,61], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcLessEqualIntInt_2936013525, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdGreater_2952790033, {id: nimCopy(null, IdGreater_2952790033, NTI2046820355), name: [62], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcGreaterIntInt_2936013530, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdGreaterEqual_2952790034, {id: nimCopy(null, IdGreaterEqual_2952790034, NTI2046820355), name: [62,61], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcGreaterEqualIntInt_2936013535, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdEqual_2952790035, {id: nimCopy(null, IdEqual_2952790035, NTI2046820355), name: [61,61], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcEqualIntInt_2936013540, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdNotEqual_2952790036, {id: nimCopy(null, IdNotEqual_2952790036, NTI2046820355), name: [33,61], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcNotEqualIntInt_2936013545, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdAnd_2952790037, {id: nimCopy(null, IdAnd_2952790037, NTI2046820355), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcAndIntInt_2936013550, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdOr_2952790038, {id: nimCopy(null, IdOr_2952790038, NTI2046820355), name: [111,114], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcOrIntInt_2936013555, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdOrder_2952790039, {id: nimCopy(null, IdOrder_2952790039, NTI2046820355), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2936013482, value: nimCopy(null, funcOrderIntInt_2936013560, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdInt_2952790028, {id: nimCopy(null, IdInt_2952790028, NTI2046820355), name: [105,110,116], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(intType_3070230942()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdString_2952790029, {id: nimCopy(null, IdString_2952790029, NTI2046820355), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(stringType_3070230944()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdVoid_2952790030, {id: nimCopy(null, IdVoid_2952790030, NTI2046820355), name: [118,111,105,100], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(voidType_3070230940()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdPrint_2952790018, {id: nimCopy(null, IdPrint_2952790018, NTI2046820355), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3070230946([anyType_3070230961(true)], voidType_3070230940()), value: nimCopy(null, funcPrintAny_2936013684, NTI3070230535), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986442311(ctx_2936012855.globalScope, IdBuildString_2952790040, {id: nimCopy(null, IdBuildString_2952790040, NTI2046820355), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3070230946([anyType_3070230961(true)], stringType_3070230944()), value: nimCopy(null, funcBuildStringAny_2936013696, NTI3070230535), node: null, operatorNotation: 0, precedence: 0});
Label160: {
  var symbol_2936015237 = [null];
  var L_2936015324 = len_2986456156(ctx_2936012855.globalScope);
  Label161: {
    var h_2936015326 = 0;
    var colontmp__2936015327 = 0;
    colontmp__2936015327 = (ctx_2936012855.globalScope.data).length - 1;
    var res_2936015328 = 0;
    Label162: {
        Label163: while (true) {
        if (!(res_2936015328 <= colontmp__2936015327)) break Label163;
          h_2936015326 = res_2936015328;
          if (isFilled_1308622880(ctx_2936012855.globalScope.data[chckIndx(h_2936015326, 0, (ctx_2936012855.globalScope.data).length - 1)].Field0)) {
          symbol_2936015237[0] = ctx_2936012855.globalScope.data[chckIndx(h_2936015326, 0, (ctx_2936012855.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_2986414607(ctx_2936012855, symbol_2936015237[0]);
          if (!((len_2986456156(ctx_2936012855.globalScope) == L_2936015324))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2936015328 = addInt(res_2936015328, 1);
        }
    };
  };
};

function isEditing_2936020308(self_2936020309) {
  var result_2936020310 = false;

    result_2936020310 = !((self_2936020309.textEditor == null));

  return result_2936020310;

}

function node_2936015481(editor_2936015482) {
  var result_2936015483 = null;

  BeforeRet: {
    result_2936015483 = editor_2936015482.selectedNode;
    break BeforeRet;
  };

  return result_2936015483;

}

function newSeq_2936016647(len_2936016649) {
  var result_2936016650 = [];

    result_2936016650 = new Array(len_2936016649); for (var i = 0 ; i < len_2936016649 ; ++i) { result_2936016650[i] = null; }
  return result_2936016650;

}

function expandIfNeeded_2936016637(deq_2936016639) {
              var Temporary5;
    var Temporary6;

    if ((deq_2936016639.mask == 0)) {
    var correctSizeHEX60gensym42_2936016641 = nextPowerOfTwo_872415437(4);
    deq_2936016639.mask = subInt(correctSizeHEX60gensym42_2936016641, 1);
    deq_2936016639.data = new Array(chckRange(correctSizeHEX60gensym42_2936016641, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2936016641, 0, 2147483647) ; ++i) { deq_2936016639.data[i] = null; }    }
    
    var cap_2936016646 = addInt(deq_2936016639.mask, 1);
    if ((cap_2936016646 <= deq_2936016639.count)) {
    var n_2936016655 = newSeq_2936016647(chckRange(mulInt(cap_2936016646, 2), 0, 2147483647));
    var i_2936016656 = 0;
    Label1: {
      var x_2936016666 = null;
      var x_2936016666_Idx = 0;
      var i_2936024103 = deq_2936016639.head;
      Label2: {
        var c_2936024105 = 0;
        var i_2936024106 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2936024106 < deq_2936016639.count)) break Label4;
              c_2936024105 = i_2936024106;
              x_2936016666 = deq_2936016639.data; x_2936016666_Idx = chckIndx(i_2936024103, 0, (deq_2936016639.data).length - 1);
              Temporary5 = x_2936016666[x_2936016666_Idx];
              x_2936016666[x_2936016666_Idx] = genericReset(x_2936016666[x_2936016666_Idx], NTI2969567236);
              n_2936016655[chckIndx(i_2936016656, 0, (n_2936016655).length - 1)] = Temporary5;
              i_2936016656 = addInt(i_2936016656, 1);
              i_2936024103 = (addInt(i_2936024103, 1) & deq_2936016639.mask);
              i_2936024106 = addInt(i_2936024106, 1);
            }
        };
      };
    };
    Temporary6 = n_2936016655;
    n_2936016655 = genericReset(n_2936016655, NTI2936014911);
    deq_2936016639.data = nimCopy(null, Temporary6, NTI2936014911);
    deq_2936016639.mask = subInt(mulInt(cap_2936016646, 2), 1);
    deq_2936016639.tail = deq_2936016639.count;
    deq_2936016639.head = 0;
    }
    

  
}

function addLast_2936016628(deq_2936016630, item_2936016631) {
    expandIfNeeded_2936016637(deq_2936016630);
    deq_2936016630.count = addInt(deq_2936016630.count, 1);
    deq_2936016630.data[chckIndx(deq_2936016630.tail, 0, (deq_2936016630.data).length - 1)] = item_2936016631;
    deq_2936016630.tail = (addInt(deq_2936016630.tail, 1) & deq_2936016630.mask);

  
}

function len_2936016769(deq_2936016771) {
  var result_2936016772 = 0;

    result_2936016772 = deq_2936016771.count;

  return result_2936016772;

}

function popFirst_2936016778(deq_2936016780) {
    var Temporary1;

  var result_2936016781 = null;

    if ((deq_2936016780.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2936016780.count = subInt(deq_2936016780.count, 1);
    Temporary1 = deq_2936016780.data[chckIndx(deq_2936016780.head, 0, (deq_2936016780.data).length - 1)];
    deq_2936016780.data[chckIndx(deq_2936016780.head, 0, (deq_2936016780.data).length - 1)] = genericReset(deq_2936016780.data[chckIndx(deq_2936016780.head, 0, (deq_2936016780.data).length - 1)], NTI2969567236);
    result_2936016781 = Temporary1;
    deq_2936016780.head = (addInt(deq_2936016780.head, 1) & deq_2936016780.mask);

  return result_2936016781;

}

function hasKey_2936015564(t_2936015567, key_2936015568) {
  var result_2936015569 = false;

    var hc_2936015570 = [0];
    result_2936015569 = (0 <= rawGet_3103785569(t_2936015567, key_2936015568, hc_2936015570, 0));

  return result_2936015569;

}

function contains_2936015558(t_2936015561, key_2936015562) {
  var result_2936015563 = false;

  BeforeRet: {
    result_2936015563 = hasKey_2936015564(t_2936015561, key_2936015562);
    break BeforeRet;
  };

  return result_2936015563;

}

function HEX5BHEX5D_2936015654(t_2936015657, key_2936015658) {
  var result_2936015659 = null;

    var hcHEX60gensym22_2936015660 = [0];
    var indexHEX60gensym22_2936015667 = rawGet_3103785569(t_2936015657, key_2936015658, hcHEX60gensym22_2936015660, 0);
    if ((0 <= indexHEX60gensym22_2936015667)) {
    result_2936015659 = t_2936015657.data[chckIndx(indexHEX60gensym22_2936015667, 0, (t_2936015657.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2936015658);
    }
    

  return result_2936015659;

}

function xyHEX3D_2113929251(rect_2113929252, v_2113929253) {
    rect_2113929252.x = v_2113929253.x;
    rect_2113929252.y = v_2113929253.y;

  
}

function HEX2B_2113929971(aHEX60gensym72_2113929973, bHEX60gensym72_2113929974) {
  var result_2113929975 = ({x: 0.0, y: 0.0});

    result_2113929975 = nimCopy(result_2113929975, {x: (aHEX60gensym72_2113929973.x + bHEX60gensym72_2113929974.x), y: (aHEX60gensym72_2113929973.y + bHEX60gensym72_2113929974.y)}, NTI2130706720);

  return result_2113929975;

}

function wh_2113929254(rect_2113929255) {
  var result_2113929256 = ({x: 0.0, y: 0.0});

    result_2113929256 = nimCopy(result_2113929256, vec2_2130707293(rect_2113929255.w, rect_2113929255.h), NTI2130706720);

  return result_2113929256;

}

function absoluteBounds_3070232318(node_3070232319) {
  var result_3070232320 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3070232319.parent == null)) {
    result_3070232320 = nimCopy(result_3070232320, node_3070232319.bounds, NTI2113929221);
    }
    else {
      result_3070232320 = nimCopy(result_3070232320, rect_2113929240(HEX2B_2113929971(xy_2113929248(absoluteBounds_3070232318(node_3070232319.parent)), xy_2113929248(node_3070232319.bounds)), wh_2113929254(node_3070232319.bounds)), NTI2113929221);
    }
    

  return result_3070232320;

}

function absoluteBounds_3070232356(nodeRange_3070232357) {
  var result_3070232358 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3070232358[0] = nimCopy(result_3070232358[0], nodeRange_3070232357.parent.children[chckIndx(nodeRange_3070232357.first, 0, (nodeRange_3070232357.parent.children).length - 1)].bounds, NTI2113929221);
    Label1: {
      var i_3070232363 = 0;
      var colontmp__2936024121 = 0;
      colontmp__2936024121 = addInt(nodeRange_3070232357.first, 1);
      var i_2936024122 = colontmp__2936024121;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024122 < nodeRange_3070232357.last)) break Label3;
            i_3070232363 = i_2936024122;
            result_3070232358[0] = nimCopy(result_3070232358[0], or_2113929296(result_3070232358[0], nodeRange_3070232357.parent.children[chckIndx(i_3070232363, 0, (nodeRange_3070232357.parent.children).length - 1)].bounds), NTI2113929221);
            i_2936024122 = addInt(i_2936024122, 1);
          }
      };
    };
    xyHEX3D_2113929251(result_3070232358[0], HEX2B_2113929971(xy_2113929248(result_3070232358[0]), xy_2113929248(absoluteBounds_3070232318(nodeRange_3070232357.parent))));

  return result_3070232358[0];

}

function and_2113929300(a_2113929301, b_2113929302) {
  var result_2113929303 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929303.x = max_33555642(a_2113929301.x, b_2113929302.x);
    result_2113929303.y = max_33555642(a_2113929301.y, b_2113929302.y);
    result_2113929303.w = (min_33555609((a_2113929301.x + a_2113929301.w), (b_2113929302.x + b_2113929302.w)) - result_2113929303.x);
    result_2113929303.h = (min_33555609((a_2113929301.y + a_2113929301.h), (b_2113929302.y + b_2113929302.h)) - result_2113929303.y);

  return result_2113929303;

}

function intersects_2097152177(a_2097152178, b_2097152179) {
  var result_2097152180 = false;

  BeforeRet: {
    var intersection_2097152181 = and_2113929300(a_2097152178, b_2097152179);
    result_2097152180 = ((0.0 < intersection_2097152181.w) && (0.0 < intersection_2097152181.h));
    break BeforeRet;
  };

  return result_2097152180;

}

function subbase_2969567333(node_2969567334) {
  var result_2969567335 = null;

  BeforeRet: {
    if ((node_2969567334.parent.parent == null)) {
    result_2969567335 = node_2969567334;
    break BeforeRet;
    }
    
    result_2969567335 = subbase_2969567333(node_2969567334.parent);
    break BeforeRet;
  };

  return result_2969567335;

}

function getItem_2986404614(selfHEX60gensym78_2986404615) {
  var result_2986404616 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2046820592(selfHEX60gensym78_2986404615.id, null_2046820612)) {
    selfHEX60gensym78_2986404615.id = nimCopy(selfHEX60gensym78_2986404615.id, newId_2046820569(), NTI2046820355);
    }
    
    if (!(!(HEX3DHEX3D_2046820592(selfHEX60gensym78_2986404615.id, null_2046820612)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936024133 = nimCopy(null, selfHEX60gensym78_2986404615.id, NTI2046820355);
    var colontmp__2936024134 = 1;
    result_2986404616 = nimCopy(result_2986404616, {Field0: nimCopy(null, colontmp__2936024133, NTI2046820355), Field1: colontmp__2936024134}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986404616;

}

function getOrDefault_2986404865(t_2986404868, key_2986404869, default_2986404870) {
    var Temporary1;

  var result_2986404871 = null;

    var hcHEX60gensym409_2986404874 = [0];
    var indexHEX60gensym409_2986404881 = rawGet_2986386625(t_2986404868, key_2986404869, hcHEX60gensym409_2986404874, 0);
    if ((0 <= indexHEX60gensym409_2986404881)) {
    Temporary1 = t_2986404868.data[chckIndx(indexHEX60gensym409_2986404881, 0, (t_2986404868.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986404870;
    }
    
    result_2986404871 = Temporary1;

  return result_2986404871;

}

function newDoublyLinkedNode_2986404997(value_2986404999) {
  var result_2986405000 = null;

    result_2986405000 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986405000.value = nimCopy(result_2986405000.value, value_2986404999, NTI2986344583);

  return result_2986405000;

}

function mustRehash_2986405338(t_2986405340) {
  var result_2986405341 = false;

    if (!((t_2986405340.counter < (t_2986405340.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986405341 = ((mulInt((t_2986405340.data).length, 2) < mulInt(t_2986405340.counter, 3)) || (subInt((t_2986405340.data).length, t_2986405340.counter) < 4));

  return result_2986405341;

}

function rawInsert_2986406031(t_2986406035, data_2986406036, data_2986406036_Idx, key_2986406037, val_2986406038, hc_2986406039, h_2986406040) {
    data_2986406036[data_2986406036_Idx][chckIndx(h_2986406040, 0, (data_2986406036[data_2986406036_Idx]).length - 1)].Field1 = nimCopy(data_2986406036[data_2986406036_Idx][chckIndx(h_2986406040, 0, (data_2986406036[data_2986406036_Idx]).length - 1)].Field1, key_2986406037, NTI3003121689);
    data_2986406036[data_2986406036_Idx][chckIndx(h_2986406040, 0, (data_2986406036[data_2986406036_Idx]).length - 1)].Field2 = val_2986406038;
    data_2986406036[data_2986406036_Idx][chckIndx(h_2986406040, 0, (data_2986406036[data_2986406036_Idx]).length - 1)].Field0 = hc_2986406039;

  
}

function enlarge_2986405595(t_2986405598) {
    var n_2986405601 = [];
    n_2986405601 = new Array(chckRange(mulInt((t_2986405598.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986405598.data).length, 2), 0, 2147483647) ; ++i) { n_2986405601[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986405598.data; t_2986405598.data = n_2986405601; n_2986405601 = Temporary1;    Label2: {
      var i_2986405699 = 0;
      var colontmp__2936024137 = 0;
      colontmp__2936024137 = (n_2986405601).length - 1;
      var res_2936024138 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936024138 <= colontmp__2936024137)) break Label4;
            i_2986405699 = res_2936024138;
            var eh_2986405780 = n_2986405601[chckIndx(i_2986405699, 0, (n_2986405601).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986405780)) {
            var j_2986405784 = (eh_2986405780 & (t_2986405598.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986405598.data[chckIndx(j_2986405784, 0, (t_2986405598.data).length - 1)].Field0)) break Label6;
                  j_2986405784 = nextTry_1308622883(j_2986405784, (t_2986405598.data).length - 1);
                }
            };
            rawInsert_2986406031(t_2986405598, t_2986405598, "data", n_2986405601[chckIndx(i_2986405699, 0, (n_2986405601).length - 1)].Field1, n_2986405601[chckIndx(i_2986405699, 0, (n_2986405601).length - 1)].Field2, eh_2986405780, j_2986405784);
            }
            
            res_2936024138 = addInt(res_2936024138, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986406281(t_2986406284, key_2986406285, hc_2986406286) {
  var result_2986406287 = 0;

  BeforeRet: {
    if (((t_2986406284.data).length == 0)) {
    result_2986406287 = -1;
    break BeforeRet;
    }
    
    var h_2986406372 = (hc_2986406286 & (t_2986406284.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986406284.data[chckIndx(h_2986406372, 0, (t_2986406284.data).length - 1)].Field0)) break Label2;
          if (((t_2986406284.data[chckIndx(h_2986406372, 0, (t_2986406284.data).length - 1)].Field0 == hc_2986406286) && HEX3DHEX3D_2986345833(t_2986406284.data[chckIndx(h_2986406372, 0, (t_2986406284.data).length - 1)].Field1, key_2986406285))) {
          result_2986406287 = h_2986406372;
          break BeforeRet;
          }
          
          h_2986406372 = nextTry_1308622883(h_2986406372, (t_2986406284.data).length - 1);
        }
    };
    result_2986406287 = subInt(-1, h_2986406372);
  };

  return result_2986406287;

}

function HEX5BHEX5DHEX3D_2986405070(t_2986405073, key_2986405074, val_2986405075) {
    if (((t_2986405073.data).length == 0)) {
    var correctSizeHEX60gensym412_2986405158 = slotsNeeded_1308622891(32);
    t_2986405073.counter = 0;
    t_2986405073.data = new Array(chckRange(correctSizeHEX60gensym412_2986405158, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym412_2986405158, 0, 2147483647) ; ++i) { t_2986405073.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986405163 = [0];
    var index_2986405170 = rawGet_2986386625(t_2986405073, key_2986405074, hc_2986405163, 0);
    if ((0 <= index_2986405170)) {
    t_2986405073.data[chckIndx(index_2986405170, 0, (t_2986405073.data).length - 1)].Field2 = val_2986405075;
    }
    else {
      if (((t_2986405073.data).length == 0)) {
      var correctSizeHEX60gensym415_2986405333 = slotsNeeded_1308622891(32);
      t_2986405073.counter = 0;
      t_2986405073.data = new Array(chckRange(correctSizeHEX60gensym415_2986405333, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_2986405333, 0, 2147483647) ; ++i) { t_2986405073.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986405338(t_2986405073)) {
      enlarge_2986405595(t_2986405073);
      index_2986405170 = rawGetKnownHC_2986406281(t_2986405073, key_2986405074, hc_2986405163[0]);
      }
      
      index_2986405170 = subInt(-1, index_2986405170);
      rawInsert_2986406031(t_2986405073, t_2986405073, "data", key_2986405074, val_2986405075, hc_2986405163[0], index_2986405170);
      t_2986405073.counter = addInt(t_2986405073.counter, 1);
    }
    

  
}

function len_2986406892(t_2986406895) {
  var result_2986406896 = 0;

    result_2986406896 = t_2986406895.counter;

  return result_2986406896;

}

function len_2986406809(cache_2986406812) {
  var result_2986406813 = 0;

    result_2986406813 = len_2986406892(cache_2986406812.table);

  return result_2986406813;

}

function del_2986406984(t_2986406987, key_2986406988) {
    var hc_2986406989 = [0];
    var i_2986406996 = rawGet_2986386625(t_2986406987, key_2986406988, hc_2986406989, 0);
    var mskHEX60gensym36_2986407000 = (t_2986406987.data).length - 1;
    if ((0 <= i_2986406996)) {
    t_2986406987.counter = subInt(t_2986406987.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986407007 = i_2986406996;
            var rHEX60gensym36_2986407008 = jHEX60gensym36_2986407007;
            t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field0 = 0;
            t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field1 = nimCopy(t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986406996 = (addInt(i_2986406996, 1) & mskHEX60gensym36_2986407000);
                  if (isEmpty_1308622877(t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986407008 = (t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)].Field0 & mskHEX60gensym36_2986407000);
                  if (!(((((rHEX60gensym36_2986407008 <= i_2986406996) && (jHEX60gensym36_2986407007 < rHEX60gensym36_2986407008)) || ((jHEX60gensym36_2986407007 < rHEX60gensym36_2986407008) && (i_2986406996 < jHEX60gensym36_2986407007))) || ((i_2986406996 < jHEX60gensym36_2986407007) && (rHEX60gensym36_2986407008 <= i_2986406996))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986406987.data[chckIndx(jHEX60gensym36_2986407007, 0, (t_2986406987.data).length - 1)] = nimCopy(t_2986406987.data[chckIndx(jHEX60gensym36_2986407007, 0, (t_2986406987.data).length - 1)], t_2986406987.data[chckIndx(i_2986406996, 0, (t_2986406987.data).length - 1)], NTI2986344619);
          }
      };
    };
    }
    

  
}

function resize_2986406727(cache_2986406730) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986406730.capacity < len_2986406809(cache_2986406730))) break Label2;
          var t_2986406897 = cache_2986406730.list.tail;
          if (cache_2986406730.recordRemovedKeys) {
          incl_2986401998(cache_2986406730.removedKeys, t_2986406897.value.key);
          }
          
          del_2986406984(cache_2986406730.table, t_2986406897.value.key);
          remove_2986387277(cache_2986406730.list, t_2986406897);
        }
    };

  
}

function addNewNode_2986404989(cache_2986404992, key_2986404993, val_2986404994) {
    var node_2986405006 = newDoublyLinkedNode_2986404997({key: nimCopy(null, key_2986404993, NTI3003121689), val: val_2986404994});
    HEX5BHEX5DHEX3D_2986405070(cache_2986404992.table, key_2986404993, node_2986405006);
    prepend_2986387605(cache_2986404992.list, node_2986405006);
    if (cache_2986404992.recordRemovedKeys) {
    excl_2986400827(cache_2986404992.removedKeys, key_2986404993);
    }
    
    resize_2986406727(cache_2986404992);

  
}

function HEX5BHEX5DHEX3D_2986404770(cache_2986404773, key_2986404774, val_2986404775) {
    var node_2986404962 = getOrDefault_2986404865(cache_2986404773.table, key_2986404774, null);
    if ((node_2986404962 == null)) {
    addNewNode_2986404989(cache_2986404773, key_2986404774, val_2986404775);
    }
    else {
      node_2986404962.value.val = val_2986404775;
      remove_2986387277(cache_2986404773.list, node_2986404962);
      prepend_2986387605(cache_2986404773.list, node_2986404962);
    }
    

  
}

function getOrCreateNodeLayoutInput_2986404623(ctxHEX60gensym79_2986404624, dataHEX60gensym79_2986404625) {
  var result_2986404626 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_2986404635 = null;
      Label2: {
        var node_2936024130 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936024131 = ctxHEX60gensym79_2986404624.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936024131 == null))) break Label4;
              node_2936024130 = nimCopy(node_2936024130, it_2936024131.value, NTI2986344583);
              existingHEX60gensym79_2986404635 = node_2936024130.val;
              if (((hash_3070232774(existingHEX60gensym79_2986404635) == hash_3070232774(dataHEX60gensym79_2986404625)) && HEX3DHEX3D_3070232777(existingHEX60gensym79_2986404635, dataHEX60gensym79_2986404625))) {
              result_2986404626 = existingHEX60gensym79_2986404635;
              break BeforeRet;
              }
              
              it_2936024131 = it_2936024131.next;
            }
        };
      };
    };
    var itemHEX60gensym79_2986404636 = getItem_2986404614(dataHEX60gensym79_2986404625);
    var keyHEX60gensym79_2986404637 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_2986404636, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym79_2986404624.depGraph.changed, keyHEX60gensym79_2986404637, ctxHEX60gensym79_2986404624.depGraph.revision);
    HEX5BHEX5DHEX3D_2986404770(ctxHEX60gensym79_2986404624.itemsNodeLayoutInput, itemHEX60gensym79_2986404636, dataHEX60gensym79_2986404625);
    result_2986404626 = dataHEX60gensym79_2986404625;
    break BeforeRet;
  };

  return result_2986404626;

}

function hasKey_2986438623(t_2986438626, key_2986438627) {
  var result_2986438628 = false;

    var hc_2986438629 = [0];
    result_2986438628 = (0 <= rawGet_2986387997(t_2986438626, key_2986438627, hc_2986438629, 0));

  return result_2986438628;

}

function contains_2986438617(t_2986438620, key_2986438621) {
  var result_2986438622 = false;

  BeforeRet: {
    result_2986438622 = hasKey_2986438623(t_2986438620, key_2986438621);
    break BeforeRet;
  };

  return result_2986438622;

}

function contains_2986438523(cache_2986438526, key_2986438527) {
  var result_2986438528 = false;

    result_2986438528 = contains_2986438617(cache_2986438526.table, key_2986438527);

  return result_2986438528;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2130707366(result_2130707368, result_2130707368_Idx, x_2130707369) {
    add_33556386(result_2130707368, result_2130707368_Idx, nimFloatToString_385876087(x_2130707369));

  
}

function HEX24_2130707362(x_2130707364) {
  var result_2130707365 = [[]];

    addFloat_2130707366(result_2130707365, 0, x_2130707364);

  return result_2130707365[0];

}

function HEX24_2113929281(a_2113929282) {
  var result_2113929283 = [];

    result_2113929283 = nimCopy(null, ([40] || []).concat(HEX24_2130707362(a_2113929282.x) || [],[44,32] || [],HEX24_2130707362(a_2113929282.y) || [],[58,32] || [],HEX24_2130707362(a_2113929282.w) || [],[32,120,32] || [],HEX24_2130707362(a_2113929282.h) || [],[41] || []), NTI33554449);

  return result_2113929283;

}

function collectionToString_3070232406(x_3070232408, prefix_3070232409, separator_3070232410, suffix_3070232411) {
  var result_3070232412 = [[]];

    result_3070232412[0] = nimCopy(null, prefix_3070232409, NTI33554449);
    var firstElement_3070232413 = true;
    Label1: {
      var value_3070232417 = [];
      var i_2936024149 = 0;
      var L_2936024150 = (x_3070232408).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024149 < L_2936024150)) break Label3;
            value_3070232417 = x_3070232408[i_2936024149];
            if (firstElement_3070232413) {
            firstElement_3070232413 = false;
            }
            else {
            result_3070232412[0].push.apply(result_3070232412[0], separator_3070232410);;
            }
            
            addQuoted_1593835572(result_3070232412, 0, value_3070232417);
            i_2936024149 += 1;
            if (!(((x_3070232408).length == L_2936024150))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070232412[0].push.apply(result_3070232412[0], suffix_3070232411);;

  return result_3070232412[0];

}

function HEX24_3070232402(x_3070232404) {
  var result_3070232405 = [];

    result_3070232405 = nimCopy(null, collectionToString_3070232406(x_3070232404, [64,91], [44,32], [93]), NTI33554449);

  return result_3070232405;

}

function HEX24_3070232395(vnode_3070232396) {
  var result_3070232397 = [];

    result_3070232397 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3070232397.push.apply(result_3070232397, (vnode_3070232396.text || []).concat([39,44,32] || []));;
    result_3070232397.push.apply(result_3070232397, (HEX24_2113929281(vnode_3070232396.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3070232396.node == null))) {
    result_3070232397.push.apply(result_3070232397, (HEX24_2969569239(vnode_3070232396.node) || []).concat([44,32] || []));;
    }
    
    result_3070232397.push.apply(result_3070232397, (HEX24_3070232402(vnode_3070232396.colors) || []).concat([44,32] || []));;
    result_3070232397.push.apply(result_3070232397, [41]);;

  return result_3070232397;

}

function join_3070232712(a_3070232714, sep_3070232715) {
  var result_3070232716 = [];

    result_3070232716 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3070232731 = 0;
      var x_3070232732 = null;
      var i_2936024146 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024146 < (a_3070232714).length)) break Label3;
            i_3070232731 = i_2936024146;
            x_3070232732 = a_3070232714[chckIndx(i_2936024146, 0, (a_3070232714).length - 1)];
            if ((0 < i_3070232731)) {
            result_3070232716.push.apply(result_3070232716, sep_3070232715);;
            }
            
            result_3070232716.push.apply(result_3070232716, HEX24_3070232395(x_3070232732));;
            i_2936024146 = addInt(i_2936024146, 1);
          }
      };
    };

  return result_3070232716;

}

function HEX24_3070232709(nodeLayout_3070232710) {
  var result_3070232711 = [];

    result_3070232711 = nimCopy(null, join_3070232712(nodeLayout_3070232710.root.children, [10]), NTI33554449);

  return result_3070232711;

}

function HEX24_3070232746(input_3070232747) {
  var result_3070232748 = [];

  BeforeRet: {
    var fmtRes_3070232753 = [mnewString(0)];
    fmtRes_3070232753[0].push.apply(fmtRes_3070232753[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3003121884(fmtRes_3070232753, 0, input_3070232747.id, []);
    fmtRes_3070232753[0].push.apply(fmtRes_3070232753[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3070231363(fmtRes_3070232753, 0, input_3070232747.node, []);
    fmtRes_3070232753[0].push.apply(fmtRes_3070232753[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3003121884(fmtRes_3070232753, 0, input_3070232747.selectedNode, []);
    fmtRes_3070232753[0].push.apply(fmtRes_3070232753[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2516582756(fmtRes_3070232753, 0, input_3070232747.revision, []);
    fmtRes_3070232753[0].push.apply(fmtRes_3070232753[0], [41]);;
    result_3070232748 = nimCopy(null, fmtRes_3070232753[0], NTI33554449);
    break BeforeRet;
  };

  return result_3070232748;

}

function raiseKeyError_2986438896(key_2986438898) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070232746(key_2986438898) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986438802(t_2986438805, key_2986438806) {
  var result_2986438807 = null;
  var result_2986438807_Idx = 0;

    var hcHEX60gensym22_2986438808 = [0];
    var indexHEX60gensym22_2986438815 = rawGet_2986387997(t_2986438805, key_2986438806, hcHEX60gensym22_2986438808, 0);
    if ((0 <= indexHEX60gensym22_2986438815)) {
    result_2986438807 = t_2986438805.data[chckIndx(indexHEX60gensym22_2986438815, 0, (t_2986438805.data).length - 1)]; result_2986438807_Idx = "Field2";
    }
    else {
    raiseKeyError_2986438896(key_2986438806);
    }
    

  return [result_2986438807, result_2986438807_Idx];

}

function HEX5BHEX5D_2986438716(cache_2986438719, key_2986438720) {
    var Temporary1;

  var result_2986438721 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_2986438909 = (Temporary1 = HEX5BHEX5D_2986438802(cache_2986438719.table, key_2986438720), Temporary1)[0][Temporary1[1]];
    result_2986438721 = nimCopy(result_2986438721, node_2986438909.value.val, NTI3070230559);
    remove_2986393894(cache_2986438719.list, node_2986438909);
    prepend_2986390165(cache_2986438719.list, node_2986438909);

  return result_2986438721;

}

function computeNodeLayout_2986438999(ctxHEX60gensym120_2986439000, inputHEX60gensym120_2986439001, recordDependencyHEX60gensym120_2986439002) {
    var Temporary3;
    var Temporary5;

  var result_2986439003 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym120_2986439004 = startTimer_2466250804();
    ctxHEX60gensym120_2986439000.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_2986439000.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_2986439093 = getItem_2986404614(inputHEX60gensym120_2986439001);
    var keyHEX60gensym120_2986439094 = {Field0: nimCopy(null, itemHEX60gensym120_2986439093, NTI3003121689), Field1: 7};
    if (recordDependencyHEX60gensym120_2986439002) {
    recordDependency_2986398524(ctxHEX60gensym120_2986439000, itemHEX60gensym120_2986439093, 7);
    }
    
    var colorHEX60gensym120_2986439095 = nodeColor_3003124149(ctxHEX60gensym120_2986439000.depGraph, keyHEX60gensym120_2986439094, 0);
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_2986439095, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym120_2986439093));
    }
    
    if ((colorHEX60gensym120_2986439095 == 2)) {
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym120_2986439000, keyHEX60gensym120_2986439094);
    if (true) {
    markRed_3003136501(ctxHEX60gensym120_2986439000.depGraph, keyHEX60gensym120_2986439094, []);
    }
    
    if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
      }
      
    }
    
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232746(inputHEX60gensym120_2986439001) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986439003 = nimCopy(result_2986439003, HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001), NTI3070230559);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_2986439095 == 0)) {
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414895(ctxHEX60gensym120_2986439000, keyHEX60gensym120_2986439094);
    if (true) {
    markRed_3003136501(ctxHEX60gensym120_2986439000.depGraph, keyHEX60gensym120_2986439094, []);
    }
    
    if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
    }
    
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232746(inputHEX60gensym120_2986439001) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986439003 = nimCopy(result_2986439003, HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001), NTI3070230559);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415910(ctxHEX60gensym120_2986439000, keyHEX60gensym120_2986439094, true) == 0)) {
    if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
    }
    
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232746(inputHEX60gensym120_2986439001) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986439003 = nimCopy(result_2986439003, HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001), NTI3070230559);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_2986439000.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414895(ctxHEX60gensym120_2986439000, keyHEX60gensym120_2986439094);
      if (true) {
      markRed_3003136501(ctxHEX60gensym120_2986439000.depGraph, keyHEX60gensym120_2986439094, []);
      }
      
      if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
      }
      
      if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232746(inputHEX60gensym120_2986439001) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986439003 = nimCopy(result_2986439003, HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001), NTI3070230559);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_2986439095 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_2986439000.enableLogging && contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070232709(HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001)));
    }
    
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    force_2986414895(ctxHEX60gensym120_2986439000, keyHEX60gensym120_2986439094);
    }
    
    if (!(contains_2986438523(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232746(inputHEX60gensym120_2986439001) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986439003 = nimCopy(result_2986439003, HEX5BHEX5D_2986438716(ctxHEX60gensym120_2986439000.queryCacheNodeLayout, inputHEX60gensym120_2986439001), NTI3070230559);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_2986439000.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym120_2986439000.dependencyStack).length == 0)) {
    clear_2986418125(ctxHEX60gensym120_2986439000.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym120_2986439000.statsNodeLayout.time = addInt(ctxHEX60gensym120_2986439000.statsNodeLayout.time, elapsed_2466250815(timerHEX60gensym120_2986439004));
    }
  };

  return result_2986439003;

}

function prev_2969567471(node_2969567472) {
  var result_2969567474 = ({val: null});

  BeforeRet: {
    if ((node_2969567472.parent == null)) {
    result_2969567474 = nimCopy(result_2969567474, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var i_2969567481 = index_2969567340(node_2969567472);
    if ((i_2969567481 <= 0)) {
    result_2969567474 = nimCopy(result_2969567474, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969567474 = nimCopy(result_2969567474, some_2969567458(HEX5BHEX5D_2969567316(node_2969567472.parent, subInt(i_2969567481, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2969567474;

}

function HEX2BHEX3D_2936015979(aHEX60gensym79_2936015981, bHEX60gensym79_2936015982) {
    HEX2BHEX3D_2113929329(aHEX60gensym79_2936015981, "x", bHEX60gensym79_2936015982);
    HEX2BHEX3D_2113929329(aHEX60gensym79_2936015981, "y", bHEX60gensym79_2936015982);

  
}

function bounds_3070232743(nodeLayout_3070232744) {
  var result_3070232745 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3070232745 = nimCopy(result_3070232745, nodeLayout_3070232744.root.bounds, NTI2113929221);
    break BeforeRet;
  };

  return result_3070232745;

}

function insert_2936015991(x_2936015993, x_2936015993_Idx, item_2936015994, i_2936015995) {
    var it_2936016015 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({x: 0.0, y: 0.0})};
    x_2936015993[x_2936015993_Idx] = x_2936015993[x_2936015993_Idx] || []; x_2936015993[x_2936015993_Idx].splice(i_2936015995, 0, it_2936016015);
    x_2936015993[x_2936015993_Idx][chckIndx(i_2936015995, 0, (x_2936015993[x_2936015993_Idx]).length - 1)] = nimCopy(x_2936015993[x_2936015993_Idx][chckIndx(i_2936015995, 0, (x_2936015993[x_2936015993_Idx]).length - 1)], item_2936015994, NTI2936014330);

  
}

function next_2969567425(node_2969567426) {
  var result_2969567431 = ({val: null});

  BeforeRet: {
    if ((node_2969567426.parent == null)) {
    result_2969567431 = nimCopy(result_2969567431, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var i_2969567455 = index_2969567340(node_2969567426);
    if ((subInt(len_2969567320(node_2969567426.parent), 1) <= i_2969567455)) {
    result_2969567431 = nimCopy(result_2969567431, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969567431 = nimCopy(result_2969567431, some_2969567458(HEX5BHEX5D_2969567316(node_2969567426.parent, addInt(i_2969567455, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2969567431;

}

function HEX5BHEX5D_2936016463(t_2936016466, key_2936016467) {
  var result_2936016468 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2936016469 = [0];
    var indexHEX60gensym20_2936016476 = rawGet_3103785569(t_2936016466, key_2936016467, hcHEX60gensym20_2936016469, 0);
    if ((0 <= indexHEX60gensym20_2936016476)) {
    result_2936016468 = nimCopy(result_2936016468, t_2936016466.data[chckIndx(indexHEX60gensym20_2936016476, 0, (t_2936016466.data).length - 1)].Field2, NTI3070230558);
    }
    else {
    raiseKeyError_2969569048(key_2936016467);
    }
    

  return result_2936016468;

}

function handleSelectedNodeChanged_2936015484(editor_2936015485) {
          
function HEX3Aanonymous_2936015852(t_2936015855) {
            var result_2936015858 = ({x: 0.0, y: 0.0});

              result_2936015858 = nimCopy(result_2936015858, measureText_2499805349(gEditor.platform, t_2936015855), NTI2130706720);

            return result_2936015858;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2936015953(t_2936015956) {
            var result_2936015959 = ({x: 0.0, y: 0.0});

              result_2936015959 = nimCopy(result_2936015959, measureText_2499805349(gEditor.platform, t_2936015956), NTI2130706720);

            return result_2936015959;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2936016130(t_2936016133) {
            var result_2936016136 = ({x: 0.0, y: 0.0});

              result_2936016136 = nimCopy(result_2936016136, measureText_2499805349(gEditor.platform, t_2936016133), NTI2130706720);

            return result_2936016136;

          }
    
function HEX3Aanonymous_2936016314(t_2936016317) {
      var result_2936016320 = ({x: 0.0, y: 0.0});

        result_2936016320 = nimCopy(result_2936016320, measureText_2499805349(gEditor.platform, t_2936016317), NTI2130706720);

      return result_2936016320;

    }

  BeforeRet: {
    var node_2936015486 = node_2936015481(editor_2936015485);
    var foundNode_2936015487 = false;
    var i_2936015488 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2936015488 < (editor_2936015485.lastLayouts).length)) break Label2;
          try {
          var layout_2936015498 = nimCopy(null, editor_2936015485.lastLayouts[chckIndx(i_2936015488, 0, (editor_2936015485.lastLayouts).length - 1)].Field0, NTI3070230559);
          var offset_2936015499 = nimCopy(null, editor_2936015485.lastLayouts[chckIndx(i_2936015488, 0, (editor_2936015485.lastLayouts).length - 1)].Field1, NTI2130706720);
          if (contains_2936015558(layout_2936015498.nodeToVisualNode, node_2936015486.id)) {
          var visualNode_2936015757 = nimCopy(null, HEX5BHEX5D_2936015654(layout_2936015498.nodeToVisualNode, node_2936015486.id), NTI3070230558);
          var bounds_2936015767 = HEX2B_2097152155(absoluteBounds_3070232356(visualNode_2936015757), vec2_2130707293(0.0, offset_2936015499.y));
          if (!(intersects_2097152177(bounds_2936015767, editor_2936015485.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2936015767.y + bounds_2936015767.h) < 100.0)) {
          var subbase_2936015768 = subbase_2969567333(node_2936015486);
          editor_2936015485.previousBaseIndex = index_2969567340(subbase_2936015768);
          editor_2936015485.scrollOffset = (100.0 - ((bounds_2936015767.y + bounds_2936015767.h) - offset_2936015499.y));
          }
          else {
          if (((editor_2936015485.lastBounds.h - 100.0) < bounds_2936015767.y)) {
          var subbase_2936015769 = subbase_2969567333(node_2936015486);
          editor_2936015485.previousBaseIndex = index_2969567340(subbase_2936015769);
          editor_2936015485.scrollOffset = ((-((bounds_2936015767.y - offset_2936015499.y)) + editor_2936015485.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2936015488 = addInt(i_2936015488, 1);
          }
        }
    };
    i_2936015488 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2936015488 < (editor_2936015485.lastLayouts).length)) break Label5;
          try {
          var layout_2936015778 = nimCopy(null, editor_2936015485.lastLayouts[chckIndx(i_2936015488, 0, (editor_2936015485.lastLayouts).length - 1)].Field0, NTI3070230559);
          var offset_2936015779 = [nimCopy(null, editor_2936015485.lastLayouts[chckIndx(i_2936015488, 0, (editor_2936015485.lastLayouts).length - 1)].Field1, NTI2130706720)];
          var targetNode_2936015780 = node_2936015486;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2936015780 == null)) && !(contains_2936015558(layout_2936015778.nodeToVisualNode, targetNode_2936015780.id)))) break Label8;
                targetNode_2936015780 = targetNode_2936015780.parent;
              }
          };
          if (!((targetNode_2936015780 == null))) {
          var input_2936015859 = getOrCreateNodeLayoutInput_2986404623(ctx_2936012855, {node: subbase_2969567333(targetNode_2936015780), selectedNode: nimCopy(null, node_2936015486.id, NTI2046820355), measureText: HEX3Aanonymous_2936015852, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936015778 = nimCopy(layout_2936015778, computeNodeLayout_2986438999(ctx_2936012855, input_2936015859, true), NTI3070230559);
          foundNode_2936015487 = true;
          }
          else {
            if (!(node_2936015486.parent == editor_2936015485.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2936015866 = prev_2969567471(node_2936015486);
              if (!isSome_2969569114(oHEX60gensym31_2936015866)) Temporary11 = false; else {                var prev_2936015889 = get_2969569134(oHEX60gensym31_2936015866);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2936015558(layout_2936015778.nodeToVisualNode, prev_2936015889.id);            }          if (Temporary9) {
          var input_2936015960 = getOrCreateNodeLayoutInput_2986404623(ctx_2936012855, {node: subbase_2969567333(node_2936015486), selectedNode: nimCopy(null, node_2936015486.id, NTI2046820355), measureText: HEX3Aanonymous_2936015953, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936015778 = nimCopy(layout_2936015778, computeNodeLayout_2986438999(ctx_2936012855, input_2936015960, true), NTI3070230559);
          HEX2BHEX3D_2936015979(offset_2936015779[0], bounds_3070232743(layout_2936015778).h);
          insert_2936015991(editor_2936015485, "lastLayouts", {Field0: nimCopy(null, layout_2936015778, NTI3070230559), Field1: nimCopy(null, offset_2936015779[0], NTI2130706720)}, chckRange(addInt(i_2936015488, 1), 0, 2147483647));
          Label12: {
            var k_2936016032 = 0;
            var colontmp__2936024112 = 0;
            var colontmp__2936024113 = 0;
            colontmp__2936024112 = addInt(i_2936015488, 1);
            colontmp__2936024113 = (editor_2936015485.lastLayouts).length - 1;
            var res_2936024114 = colontmp__2936024112;
            Label13: {
                Label14: while (true) {
                if (!(res_2936024114 <= colontmp__2936024113)) break Label14;
                  k_2936016032 = res_2936024114;
                  HEX2BHEX3D_2113929329(editor_2936015485.lastLayouts[chckIndx(k_2936016032, 0, (editor_2936015485.lastLayouts).length - 1)].Field1, "y", bounds_3070232743(layout_2936015778).h);
                  res_2936024114 = addInt(res_2936024114, 1);
                }
            };
          };
          foundNode_2936015487 = true;
          }
          else {
            if (!(node_2936015486.parent == editor_2936015485.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2936016043 = next_2969567425(node_2936015486);
              if (!isSome_2969569114(oHEX60gensym34_2936016043)) Temporary17 = false; else {                var next_2936016066 = get_2969569134(oHEX60gensym34_2936016043);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2936015558(layout_2936015778.nodeToVisualNode, next_2936016066.id);            }          if (Temporary15) {
          var input_2936016137 = getOrCreateNodeLayoutInput_2986404623(ctx_2936012855, {node: subbase_2969567333(node_2936015486), selectedNode: nimCopy(null, node_2936015486.id, NTI2046820355), measureText: HEX3Aanonymous_2936016130, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936015778 = nimCopy(layout_2936015778, computeNodeLayout_2986438999(ctx_2936012855, input_2936016137, true), NTI3070230559);
          insert_2936015991(editor_2936015485, "lastLayouts", {Field0: nimCopy(null, layout_2936015778, NTI3070230559), Field1: nimCopy(null, offset_2936015779[0], NTI2130706720)}, chckRange(i_2936015488, 0, 2147483647));
          Label18: {
            var k_2936016150 = 0;
            var colontmp__2936024117 = 0;
            colontmp__2936024117 = (editor_2936015485.lastLayouts).length - 1;
            var res_2936024118 = i_2936015488;
            Label19: {
                Label20: while (true) {
                if (!(res_2936024118 <= colontmp__2936024117)) break Label20;
                  k_2936016150 = res_2936024118;
                  HEX2BHEX3D_2113929329(editor_2936015485.lastLayouts[chckIndx(k_2936016150, 0, (editor_2936015485.lastLayouts).length - 1)].Field1, "y", bounds_3070232743(layout_2936015778).h);
                  res_2936024118 = addInt(res_2936024118, 1);
                }
            };
          };
          foundNode_2936015487 = true;
          }
          }}
          if ((foundNode_2936015487 && contains_2936015558(layout_2936015778.nodeToVisualNode, node_2936015486.id))) {
          var visualNode_2936016300 = nimCopy(null, HEX5BHEX5D_2936015654(layout_2936015778.nodeToVisualNode, node_2936015486.id), NTI3070230558);
          var bounds_2936016310 = HEX2B_2097152155(absoluteBounds_3070232356(visualNode_2936016300), vec2_2130707293(0.0, offset_2936015779[0].y));
          if (!(intersects_2097152177(bounds_2936016310, rect_2113929234(0.0, 0.0, editor_2936015485.lastBounds.w, editor_2936015485.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2936016310.y + bounds_2936016310.h) < 100.0)) {
          var subbase_2936016311 = subbase_2969567333(node_2936015486);
          editor_2936015485.previousBaseIndex = index_2969567340(subbase_2936016311);
          editor_2936015485.scrollOffset = (100.0 - ((bounds_2936016310.y + bounds_2936016310.h) - offset_2936015779[0].y));
          }
          else {
          if (((editor_2936015485.lastBounds.h - 100.0) < bounds_2936016310.y)) {
          var subbase_2936016312 = subbase_2969567333(node_2936015486);
          editor_2936015485.previousBaseIndex = index_2969567340(subbase_2936016312);
          editor_2936015485.scrollOffset = ((-((bounds_2936016310.y - offset_2936015779[0].y)) + editor_2936015485.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2936015488 = addInt(i_2936015488, 1);
          }
        }
    };
    var subbase_2936016313 = subbase_2969567333(node_2936015486);
    var input_2936016321 = getOrCreateNodeLayoutInput_2986404623(ctx_2936012855, {node: subbase_2936016313, selectedNode: nimCopy(null, node_2936015486.id, NTI2046820355), measureText: HEX3Aanonymous_2936016314, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2936016322 = computeNodeLayout_2986438999(ctx_2936012855, input_2936016321, true);
    if (contains_2936015558(layout_2936016322.nodeToVisualNode, node_2936015486.id)) {
    var visualNode_2936016557 = HEX5BHEX5D_2936016463(layout_2936016322.nodeToVisualNode, node_2936015486.id);
    var bounds_2936016558 = absoluteBounds_3070232356(visualNode_2936016557);
    editor_2936015485.previousBaseIndex = index_2969567340(subbase_2936016313);
    editor_2936015485.scrollOffset = (-(bounds_2936016558.y) + (editor_2936015485.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2936016604(editor_2936016605, node_2936016606) {
  BeforeRet: {
    if ((node_2936016606 == editor_2936016605.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2936016606.parent == null) || !((base_2969567326(node_2936016606) == editor_2936016605.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2936016605.selectedNode == null))) {
    addLast_2936016628(editor_2936016605.selectionHistory, editor_2936016605.selectedNode);
    }
    
    if ((100 < len_2936016769(editor_2936016605.selectionHistory))) {
    var _ = popFirst_2936016778(editor_2936016605.selectionHistory);
    }
    
    editor_2936016605.selectedNode = node_2936016606;
    handleSelectedNodeChanged_2936015484(editor_2936016605);
  };

  
}

function moveCursor_2936024001(self_2936024002, direction_2936024003) {
  BeforeRet: {
    if ((direction_2936024003 < 0)) {
    if (isEditing_2936020308(self_2936024002)) {
    break BeforeRet;
    }
    
    var index_2936024004 = index_2969567340(node_2936015481(self_2936024002));
    if ((0 < index_2936024004)) {
    nodeHEX3D_2936016604(self_2936024002, HEX5BHEX5D_2969567316(node_2936015481(self_2936024002).parent, subInt(index_2936024004, 1)));
    }
    
    }
    else {
      if (isEditing_2936020308(self_2936024002)) {
      break BeforeRet;
      }
      
      var index_2936024005 = index_2969567340(node_2936015481(self_2936024002));
      if (((0 <= index_2936024005) && (index_2936024005 < subInt(len_2969567320(node_2936015481(self_2936024002).parent), 1)))) {
      nodeHEX3D_2936016604(self_2936024002, HEX5BHEX5D_2969567316(node_2936015481(self_2936024002).parent, addInt(index_2936024005, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2936023997(self_2936024057, direction_2936024058) {
    moveCursor_2936024001(self_2936024057, direction_2936024058);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2936023997(this, direction_));};

function moveCursorUp_2936024159(self_2936024160) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936024160)) {
    break BeforeRet;
    }
    
    if (((!((node_2936015481(self_2936024160) == self_2936024160.document.rootNode)) && !((node_2936015481(self_2936024160).parent == self_2936024160.document.rootNode))) && !((node_2936015481(self_2936024160).parent == null)))) {
    nodeHEX3D_2936016604(self_2936024160, node_2936015481(self_2936024160).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2936024155(self_2936024200) {
    moveCursorUp_2936024159(self_2936024200);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2936024155(this));};

function moveCursorDown_2936024221(self_2936024222) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936024222)) {
    break BeforeRet;
    }
    
    if ((0 < len_2969567320(node_2936015481(self_2936024222)))) {
    nodeHEX3D_2936016604(self_2936024222, HEX5BHEX5D_2969567316(node_2936015481(self_2936024222), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2936024217(self_2936024250) {
    moveCursorDown_2936024221(self_2936024250);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2936024217(this));};

function getNextChild_2936015476(document_2936015477, node_2936015478, min_2936015479) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2936020944 = ({val: null});

  BeforeRet: {
    if ((len_2969567320(node_2936015478) == 0)) {
    result_2936020944 = nimCopy(result_2936020944, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2936020947 = node_2936015478;
      var pos_2936020948 = 0;
      var _ = pos_2936020948;
      if ((expr_2936020947.kind == 8)) {
        var oHEX60gensym125_2936020957 = computeSymbol_2986424640(ctx_2936012855, HEX5BHEX5D_2969567316(node_2936015478, 0), true);
        if (!isSome_3070232129(oHEX60gensym125_2936020957)) Temporary3 = false; else {          var sym_2936020980 = get_3070232149(oHEX60gensym125_2936020957);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2936020980.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2936020980;
      if (ConstSet164[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2969567320(node_2936015478) == 3)) {
        if ((min_2936015479 == 0)) {
        result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 2)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015479 == 1)) {
        result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015479 == 2)) {
        result_2936020944 = nimCopy(result_2936020944, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2969567320(node_2936015478) == 2)) {
        if ((min_2936015479 == 0)) {
        result_2936020944 = nimCopy(result_2936020944, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015479 == 1)) {
        result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2936015479 < 0)) {
    result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, 0)), NTI2969567351);
    break BeforeRet;
    }
    
    if ((subInt(len_2969567320(node_2936015478), 1) <= min_2936015479)) {
    result_2936020944 = nimCopy(result_2936020944, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2936020944 = nimCopy(result_2936020944, some_2969567458(HEX5BHEX5D_2969567316(node_2936015478, addInt(min_2936015479, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2936020944;

}

function shouldSelectNode_2936021012(node_2936021013) {
  var result_2936021014 = false;

  BeforeRet: {
    switch (node_2936021013.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2936021014 = (len_2969567320(node_2936021013) == 0);
      break BeforeRet;
      break;
    default: 
      result_2936021014 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2936021014;

}

function moveCursorNext_2936024271(self_2936024272) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2936020308(self_2936024272)) {
    break BeforeRet;
    }
    
    var node_2936024273 = node_2936015481(self_2936024272);
    Label1: {
      var __2936024274 = 0;
      var n_2936024275 = null;
      var colontmp__2936024324 = null;
      colontmp__2936024324 = node_2936015481(self_2936024272);
      var n_2936024326 = colontmp__2936024324;
      var i_2936024327 = 0;
      var gotoChild_2936024328 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936024326 == null))) break Label3;
            if ((gotoChild_2936024328 && (0 < len_2969567320(n_2936024326)))) {
            n_2936024326 = get_2969569134(getNextChild_2936015476(self_2936024272.document, n_2936024326, -1));
            __2936024274 = i_2936024327;
            n_2936024275 = n_2936024326;
            Label4: {
              if (!(shouldSelectNode_2936021012(n_2936024275))) {
              break Label4;
              }
              
              if (!((n_2936024275 == node_2936015481(self_2936024272)))) {
              nodeHEX3D_2936016604(self_2936024272, n_2936024275);
              break Label1;
              }
              
            };
            gotoChild_2936024328 = true;
            }
            else {
              if (!!((n_2936024326.parent == null))) Temporary5 = false; else {                var oHEX60gensym82_2936024330 = getNextChild_2936015476(self_2936024272.document, n_2936024326.parent, index_2969567340(n_2936024326));
                if (!isSome_2969569114(oHEX60gensym82_2936024330)) Temporary6 = false; else {                  var ne_2936024331 = get_2969569134(oHEX60gensym82_2936024330);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2936024326 = ne_2936024331;
            __2936024274 = i_2936024327;
            n_2936024275 = n_2936024326;
            Label7: {
              if (!(shouldSelectNode_2936021012(n_2936024275))) {
              break Label7;
              }
              
              if (!((n_2936024275 == node_2936015481(self_2936024272)))) {
              nodeHEX3D_2936016604(self_2936024272, n_2936024275);
              break Label1;
              }
              
            };
            gotoChild_2936024328 = true;
            }
            else {
              gotoChild_2936024328 = false;
              n_2936024326 = n_2936024326.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2936024267(self_2936024307) {
    moveCursorNext_2936024271(self_2936024307);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2936024267(this));};

function getPrevChild_2936015471(document_2936015472, node_2936015473, max_2936015474) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2936021094 = ({val: null});

  BeforeRet: {
    if ((len_2969567320(node_2936015473) == 0)) {
    result_2936021094 = nimCopy(result_2936021094, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2936021097 = node_2936015473;
      var pos_2936021098 = 0;
      var _ = pos_2936021098;
      if ((expr_2936021097.kind == 8)) {
        var oHEX60gensym134_2936021107 = computeSymbol_2986424640(ctx_2936012855, HEX5BHEX5D_2969567316(node_2936015473, 0), true);
        if (!isSome_3070232129(oHEX60gensym134_2936021107)) Temporary3 = false; else {          var sym_2936021130 = get_3070232149(oHEX60gensym134_2936021107);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2936021130.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2936021130;
      if (ConstSet165[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2969567320(node_2936015473) == 3)) {
        if ((max_2936015474 == 0)) {
        result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015474 == 1)) {
        result_2936021094 = nimCopy(result_2936021094, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015474 == 2)) {
        result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, 2)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2969567320(node_2936015473) == 2)) {
        if ((max_2936015474 == 0)) {
        result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015474 == 1)) {
        result_2936021094 = nimCopy(result_2936021094, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2936015474 < 0)) {
    result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, subInt(len_2969567320(node_2936015473), 1))), NTI2969567351);
    break BeforeRet;
    }
    else {
    if ((max_2936015474 == 0)) {
    result_2936021094 = nimCopy(result_2936021094, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    }
    result_2936021094 = nimCopy(result_2936021094, some_2969567458(HEX5BHEX5D_2969567316(node_2936015473, subInt(max_2936015474, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021094;

}

function moveCursorPrev_2936024339(self_2936024340) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2936020308(self_2936024340)) {
    break BeforeRet;
    }
    
    var node_2936024341 = node_2936015481(self_2936024340);
    Label1: {
      var n_2936024342 = null;
      var colontmp__2936024391 = null;
      colontmp__2936024391 = node_2936015481(self_2936024340);
      var gotoChild_2936024393 = false;
      var n_2936024394 = colontmp__2936024391;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936024394 == null))) break Label3;
            if ((gotoChild_2936024393 && (0 < len_2969567320(n_2936024394)))) {
            n_2936024394 = get_2969569134(getPrevChild_2936015471(self_2936024340.document, n_2936024394, -1));
            gotoChild_2936024393 = true;
            }
            else {
              if (!!((n_2936024394.parent == null))) Temporary4 = false; else {                var oHEX60gensym86_2936024396 = getPrevChild_2936015471(self_2936024340.document, n_2936024394.parent, index_2969567340(n_2936024394));
                if (!isSome_2969569114(oHEX60gensym86_2936024396)) Temporary5 = false; else {                  var ne_2936024397 = get_2969569134(oHEX60gensym86_2936024396);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2936024342 = n_2936024394;
            Label6: {
              if (!(shouldSelectNode_2936021012(n_2936024342))) {
              break Label6;
              }
              
              if (!((n_2936024342 == node_2936015481(self_2936024340)))) {
              nodeHEX3D_2936016604(self_2936024340, n_2936024342);
              break Label1;
              }
              
            };
            n_2936024394 = ne_2936024397;
            gotoChild_2936024393 = true;
            }
            else {
              n_2936024342 = n_2936024394;
              Label7: {
                if (!(shouldSelectNode_2936021012(n_2936024342))) {
                break Label7;
                }
                
                if (!((n_2936024342 == node_2936015481(self_2936024340)))) {
                nodeHEX3D_2936016604(self_2936024340, n_2936024342);
                break Label1;
                }
                
              };
              gotoChild_2936024393 = false;
              n_2936024394 = n_2936024394.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2936024335(self_2936024374) {
    moveCursorPrev_2936024339(self_2936024374);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2936024335(this));};

function getNextLine_2936021178(document_2936021179, node_2936021180) {
              var Temporary6;
              var Temporary7;

  var result_2936021182 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2936021183 = 0;
      var n_2936021184 = null;
      var n_2936024478 = node_2936021180;
      var idx_2936024479 = -1;
      var i_2936024480 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936024479 == -1)) {
            __2936021183 = i_2936024480;
            n_2936021184 = n_2936024478;
            Label5: {
              if (((n_2936021184 == node_2936021180) || (n_2936021184.parent == null))) {
              break Label5;
              }
              
              if ((n_2936021184.parent.kind == 7)) {
              if (((n_2936021184.kind == 7) && (len_2969567320(n_2936021184) == 0))) {
              result_2936021182 = nimCopy(result_2936021182, some_2969567458(n_2936021184), NTI2969567351);
              break BeforeRet;
              }
              else {
              if (!((n_2936021184.kind == 7))) {
              result_2936021182 = nimCopy(result_2936021182, some_2969567458(n_2936021184), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021184.parent.kind == 9)) {
              var isElse_2936021219 = ((n_2936021184 == last_2969567490(n_2936021184.parent)) && !((modInt(len_2969567320(n_2936021184.parent), 2) == 0)));
              var isCondition_2936021220 = (!(isElse_2936021219) && (modInt(index_2969567340(n_2936021184), 2) == 0));
              if (((n_2936021184.kind == 7) && (len_2969567320(n_2936021184) == 0))) {
              result_2936021182 = nimCopy(result_2936021182, some_2969567458(n_2936021184), NTI2969567351);
              break BeforeRet;
              }
              else {
              if ((!((n_2936021184.kind == 7)) && (!(isCondition_2936021220) || (0 < index_2969567340(n_2936021184))))) {
              result_2936021182 = nimCopy(result_2936021182, some_2969567458(n_2936021184), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2936024479, 1) < len_2969567320(n_2936024478))) {
            n_2936024478 = HEX5BHEX5D_2969567316(n_2936024478, addInt(idx_2936024479, 1));
            idx_2936024479 = -1;
            }
            else {
              var oHEX60gensym71_2936024482 = next_2969567425(n_2936024478);
              if (!isSome_2969569114(oHEX60gensym71_2936024482)) Temporary7 = false; else {                var ne_2936024483 = get_2969569134(oHEX60gensym71_2936024482);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2936024478 == null));              }            if (Temporary6) {
            n_2936024478 = ne_2936024483;
            idx_2936024479 = -1;
            }
            else {
            if (((!((n_2936024478.parent == null)) && !((n_2936024478 == null))) && !((n_2936024478.parent == null)))) {
            idx_2936024479 = index_2969567340(n_2936024478);
            n_2936024478 = n_2936024478.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2936024480 = addInt(i_2936024480, 1);
            }
          }
      };
    };
    result_2936021182 = nimCopy(result_2936021182, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021182;

}

function moveCursorNextLine_2936024405(self_2936024406) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936020308(self_2936024406)) {
    break BeforeRet;
    }
    
      var oHEX60gensym589_2936024409 = getNextLine_2936021178(self_2936024406.document, node_2936015481(self_2936024406));
      if (!isSome_2969569114(oHEX60gensym589_2936024409)) Temporary1 = false; else {        var next_2936024432 = get_2969569134(oHEX60gensym589_2936024409);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936016604(self_2936024406, next_2936024432);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2936024401(self_2936024460) {
    moveCursorNextLine_2936024405(self_2936024460);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2936024401(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2936021237(document_2936021238, node_2936021239) {
              var Temporary4;

  var result_2936021241 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2936021242 = null;
      var idx_2936024563 = 0;
      var n_2936024564 = node_2936021239;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936024564 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936024564), 1)), subInt(idx_2936024563, 1))) {
            n_2936024564 = HEX5BHEX5D_2969567316(n_2936024564, subInt(idx_2936024563, 1));
            idx_2936024563 = len_2969567320(n_2936024564);
            }
            else {
              var oHEX60gensym90_2936024566 = prev_2969567471(n_2936024564);
              if (!isSome_2969569114(oHEX60gensym90_2936024566)) Temporary4 = false; else {                var ne_2936024567 = get_2969569134(oHEX60gensym90_2936024566);
                Temporary4 = true;              }            if (Temporary4) {
            n_2936021242 = n_2936024564;
            Label5: {
              if (((n_2936021242 == node_2936021239) || (n_2936021242.parent == null))) {
              break Label5;
              }
              
              if ((n_2936021242.parent.kind == 7)) {
              if (((n_2936021242.kind == 7) && (len_2969567320(n_2936021242) == 0))) {
              result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
              break BeforeRet;
              }
              else {
              if (!((n_2936021242.kind == 7))) {
              result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021242.parent.kind == 9)) {
              var isElse_2936021277 = ((n_2936021242 == last_2969567490(n_2936021242.parent)) && !((modInt(len_2969567320(n_2936021242.parent), 2) == 0)));
              var isCondition_2936021278 = (!(isElse_2936021277) && (modInt(index_2969567340(n_2936021242), 2) == 0));
              if (((n_2936021242.kind == 7) && (len_2969567320(n_2936021242) == 0))) {
              result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
              break BeforeRet;
              }
              else {
              if ((!((n_2936021242.kind == 7)) && (!(isCondition_2936021278) || (0 < index_2969567340(n_2936021242))))) {
              result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021242.kind == 9)) {
              result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
              break BeforeRet;
              }
              
            };
            n_2936024564 = ne_2936024567;
            idx_2936024563 = len_2969567320(n_2936024564);
            }
            else {
              n_2936021242 = n_2936024564;
              Label6: {
                if (((n_2936021242 == node_2936021239) || (n_2936021242.parent == null))) {
                break Label6;
                }
                
                if ((n_2936021242.parent.kind == 7)) {
                if (((n_2936021242.kind == 7) && (len_2969567320(n_2936021242) == 0))) {
                result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
                break BeforeRet;
                }
                else {
                if (!((n_2936021242.kind == 7))) {
                result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2936021242.parent.kind == 9)) {
                var isElse_2936024568 = ((n_2936021242 == last_2969567490(n_2936021242.parent)) && !((modInt(len_2969567320(n_2936021242.parent), 2) == 0)));
                var isCondition_2936024569 = (!(isElse_2936024568) && (modInt(index_2969567340(n_2936021242), 2) == 0));
                if (((n_2936021242.kind == 7) && (len_2969567320(n_2936021242) == 0))) {
                result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
                break BeforeRet;
                }
                else {
                if ((!((n_2936021242.kind == 7)) && (!(isCondition_2936024569) || (0 < index_2969567340(n_2936021242))))) {
                result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2936021242.kind == 9)) {
                result_2936021241 = nimCopy(result_2936021241, some_2969567458(n_2936021242), NTI2969567351);
                break BeforeRet;
                }
                
              };
              idx_2936024563 = index_2969567340(n_2936024564);
              n_2936024564 = n_2936024564.parent;
            }
            }
          }
      };
    };
    result_2936021241 = nimCopy(result_2936021241, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021241;

}

function moveCursorPrevLine_2936024490(self_2936024491) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936020308(self_2936024491)) {
    break BeforeRet;
    }
    
      var oHEX60gensym598_2936024494 = getPrevLine_2936021237(self_2936024491.document, node_2936015481(self_2936024491));
      if (!isSome_2969569114(oHEX60gensym598_2936024494)) Temporary1 = false; else {        var prev_2936024517 = get_2969569134(oHEX60gensym598_2936024494);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936016604(self_2936024491, prev_2936024517);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2936024486(self_2936024545) {
    moveCursorPrevLine_2936024490(self_2936024545);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2936024486(this));};

function selectContaining_2936024576(self_2936024577, container_2936024578) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2936020308(self_2936024577)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2936024578)) {
    case "function":
        var oHEX60gensym608_2936024581 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 11);
        if (!isSome_2969569114(oHEX60gensym608_2936024581)) Temporary1 = false; else {          var child_2936024604 = get_2969569134(oHEX60gensym608_2936024581);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024604.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym609_2936024607 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 4);
        if (!isSome_2969569114(oHEX60gensym609_2936024607)) Temporary2 = false; else {          var child_2936024630 = get_2969569134(oHEX60gensym609_2936024607);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024630.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym610_2936024633 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 7);
        if (!isSome_2969569114(oHEX60gensym610_2936024633)) Temporary3 = false; else {          var child_2936024656 = get_2969569134(oHEX60gensym610_2936024633);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024656);
      }
      
      break;
    case "node-list":
        var oHEX60gensym611_2936024659 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 7);
        if (!isSome_2969569114(oHEX60gensym611_2936024659)) Temporary4 = false; else {          var child_2936024682 = get_2969569134(oHEX60gensym611_2936024659);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024682.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym612_2936024685 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 9);
        if (!isSome_2969569114(oHEX60gensym612_2936024685)) Temporary5 = false; else {          var child_2936024708 = get_2969569134(oHEX60gensym612_2936024685);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024708.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym613_2936024711 = findWithParentRec_2969569157(node_2936015481(self_2936024577), 10);
        if (!isSome_2969569114(oHEX60gensym613_2936024711)) Temporary6 = false; else {          var child_2936024734 = get_2969569134(oHEX60gensym613_2936024711);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2936016604(self_2936024577, child_2936024734.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2936024572(self_2936024763, container_2936024764) {
    selectContaining_2936024576(self_2936024763, container_2936024764);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2936024572(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_2986457416(cache_2986457419, key_2986457420) {
    var node_2986457516 = getOrDefault_3003124339(cache_2986457419.table, key_2986457420, null);
    if (!((node_2986457516 == null))) {
    del_3003135438(cache_2986457419.table, key_2986457420);
    remove_3003136197(cache_2986457419.list, node_2986457516);
    }
    

  
}

function deleteNode_2986457346(ctx_2986457347, node_2986457348) {
          var Temporary3;
            var Temporary4;

    ctx_2986457347.depGraph.revision = addInt(ctx_2986457347.depGraph.revision, 1);
    del_2986457416(ctx_2986457347.depGraph.changed, {Field0: getItem_2986398737(node_2986457348), Field1: -1});
    if (!((node_2986457348.parent == null))) {
    HEX5BHEX5DHEX3D_3003133124(ctx_2986457347.depGraph.changed, {Field0: getItem_2986398737(node_2986457348.parent), Field1: -1}, ctx_2986457347.depGraph.revision);
    }
    
    var parent_2986457678 = node_2986457348.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2986457678 == null))) Temporary3 = false; else {            var oHEX60gensym758_2986457685 = findWithParentRec_2969569157(parent_2986457678, 11);
            if (!isSome_2969569114(oHEX60gensym758_2986457685)) Temporary4 = false; else {              var child_2986457731 = get_2969569134(oHEX60gensym758_2986457685);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2986457732 = child_2986457731.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986457347.depGraph.changed, {Field0: getItem_2986398737(functionDefinition_2986457732), Field1: -1}, ctx_2986457347.depGraph.revision);
          parent_2986457678 = functionDefinition_2986457732.parent;
        }
    };

  
}

function rawGet_3170893898(t_3170893901, key_3170893902, hc_3170893903, hc_3170893903_Idx) {
  var result_3170893904 = 0;

  BeforeRet: {
    hc_3170893903[hc_3170893903_Idx] = hash_2046820596(key_3170893902);
    if ((hc_3170893903[hc_3170893903_Idx] == 0)) {
    hc_3170893903[hc_3170893903_Idx] = 314159265;
    }
    
    if (((t_3170893901.data).length == 0)) {
    result_3170893904 = -1;
    break BeforeRet;
    }
    
    var h_3170893956 = (hc_3170893903[hc_3170893903_Idx] & (t_3170893901.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field0)) break Label2;
          if (((t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field0 == hc_3170893903[hc_3170893903_Idx]) && HEX3DHEX3D_2046820592(t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field1, key_3170893902))) {
          result_3170893904 = h_3170893956;
          break BeforeRet;
          }
          
          h_3170893956 = nextTry_1308622883(h_3170893956, (t_3170893901.data).length - 1);
        }
    };
    result_3170893904 = subInt(-1, h_3170893956);
  };

  return result_3170893904;

}

function del_2936019449(t_2936019452, key_2936019453) {
    var hc_2936019454 = [0];
    var i_2936019461 = rawGet_3170893898(t_2936019452, key_2936019453, hc_2936019454, 0);
    var mskHEX60gensym36_2936019465 = (t_2936019452.data).length - 1;
    if ((0 <= i_2936019461)) {
    t_2936019452.counter = subInt(t_2936019452.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2936019472 = i_2936019461;
            var rHEX60gensym36_2936019473 = jHEX60gensym36_2936019472;
            t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field0 = 0;
            t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field1 = nimCopy(t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2046820355);
            t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2936019461 = (addInt(i_2936019461, 1) & mskHEX60gensym36_2936019465);
                  if (isEmpty_1308622877(t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2936019473 = (t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)].Field0 & mskHEX60gensym36_2936019465);
                  if (!(((((rHEX60gensym36_2936019473 <= i_2936019461) && (jHEX60gensym36_2936019472 < rHEX60gensym36_2936019473)) || ((jHEX60gensym36_2936019472 < rHEX60gensym36_2936019473) && (i_2936019461 < jHEX60gensym36_2936019472))) || ((i_2936019461 < jHEX60gensym36_2936019472) && (rHEX60gensym36_2936019473 <= i_2936019461))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2936019452.data[chckIndx(jHEX60gensym36_2936019472, 0, (t_2936019452.data).length - 1)] = nimCopy(t_2936019452.data[chckIndx(jHEX60gensym36_2936019472, 0, (t_2936019452.data).length - 1)], t_2936019452.data[chckIndx(i_2936019461, 0, (t_2936019452.data).length - 1)], NTI2936014301);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2936019035(doc_2936019036, node_2936019037) {
              var Temporary8;

    var fmtRes_2936019042 = [mnewString(0)];
    fmtRes_2936019042[0].push.apply(fmtRes_2936019042[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936019042, 0, node_2936019037, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936019042[0], NTI33554449)]);
    Label1: {
      var child_2936019051 = null;
      var i_2936024838 = 0;
      var L_2936024839 = (node_2936019037.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024838 < L_2936024839)) break Label3;
            child_2936019051 = node_2936019037.children[chckIndx(i_2936024838, 0, (node_2936019037.children).length - 1)];
            handleNodeDelete_2936019035(doc_2936019036, child_2936019051);
            i_2936024838 = addInt(i_2936024838, 1);
            if (!(((node_2936019037.children).length == L_2936024839))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_2986457346(ctx_2936012855, node_2936019037);
    Label4: {
      var i_2936019085 = 0;
      var update_2936019086 = null;
      var i_2936024848 = 0;
      var L_2936024849 = (ctx_2936012855.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2936024848 < L_2936024849)) break Label6;
            i_2936019085 = i_2936024848;
            update_2936019086 = ctx_2936012855.updateFunctions[chckIndx(i_2936024848, 0, (ctx_2936012855.updateFunctions).length - 1)];
            var key_2936019087 = {Field0: getItem_2986398737(node_2936019037), Field1: i_2936019085};
            if (contains_2986444391(ctx_2936012855.diagnosticsPerQuery, key_2936019087)) {
            Label7: {
              var id_2936019236 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2936024843 = [];
              colontmp__2936024843 = (Temporary8 = HEX5BHEX5D_2986444836(ctx_2936012855.diagnosticsPerQuery, key_2936019087), Temporary8)[0][Temporary8[1]];
              var i_2936024844 = 0;
              var L_2936024845 = (colontmp__2936024843).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2936024844 < L_2936024845)) break Label10;
                    id_2936019236 = colontmp__2936024843[chckIndx(i_2936024844, 0, (colontmp__2936024843).length - 1)];
                    del_2986445553(HEX5BHEX5D_2986445045(ctx_2936012855.diagnosticsPerNode, id_2936019236).queries, key_2936019087);
                    i_2936024844 = addInt(i_2936024844, 1);
                    if (!(((colontmp__2936024843).length == L_2936024845))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_2986452296(ctx_2936012855.diagnosticsPerQuery, key_2936019087);
            }
            
            i_2936024848 = addInt(i_2936024848, 1);
            if (!(((ctx_2936012855.updateFunctions).length == L_2936024849))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2936019449(doc_2936019036.nodes, node_2936019037.id);

  
}

function HEX5BHEX5DHEX3D_2969567496(node_2969567497, index_2969567498, newNode_2969567499) {
    newNode_2969567499.parent = node_2969567497;
    node_2969567497.children[chckIndx(index_2969567498, 0, (node_2969567497.children).length - 1)].parent = null;
    node_2969567497.children[chckIndx(index_2969567498, 0, (node_2969567497.children).length - 1)] = newNode_2969567499;

  
}

function getOrDefault_2986398992(t_2986398995, key_2986398996, default_2986398997) {
    var Temporary1;

  var result_2986398998 = null;

    var hcHEX60gensym380_2986399001 = [0];
    var indexHEX60gensym380_2986399008 = rawGet_2986345489(t_2986398995, key_2986398996, hcHEX60gensym380_2986399001, 0);
    if ((0 <= indexHEX60gensym380_2986399008)) {
    Temporary1 = t_2986398995.data[chckIndx(indexHEX60gensym380_2986399008, 0, (t_2986398995.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986398997;
    }
    
    result_2986398998 = Temporary1;

  return result_2986398998;

}

function newDoublyLinkedNode_2986399124(value_2986399126) {
  var result_2986399127 = null;

    result_2986399127 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986399127.value = nimCopy(result_2986399127.value, value_2986399126, NTI2986344510);

  return result_2986399127;

}

function mustRehash_2986399465(t_2986399467) {
  var result_2986399468 = false;

    if (!((t_2986399467.counter < (t_2986399467.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986399468 = ((mulInt((t_2986399467.data).length, 2) < mulInt(t_2986399467.counter, 3)) || (subInt((t_2986399467.data).length, t_2986399467.counter) < 4));

  return result_2986399468;

}

function rawInsert_2986400158(t_2986400162, data_2986400163, data_2986400163_Idx, key_2986400164, val_2986400165, hc_2986400166, h_2986400167) {
    data_2986400163[data_2986400163_Idx][chckIndx(h_2986400167, 0, (data_2986400163[data_2986400163_Idx]).length - 1)].Field1 = nimCopy(data_2986400163[data_2986400163_Idx][chckIndx(h_2986400167, 0, (data_2986400163[data_2986400163_Idx]).length - 1)].Field1, key_2986400164, NTI3003121689);
    data_2986400163[data_2986400163_Idx][chckIndx(h_2986400167, 0, (data_2986400163[data_2986400163_Idx]).length - 1)].Field2 = val_2986400165;
    data_2986400163[data_2986400163_Idx][chckIndx(h_2986400167, 0, (data_2986400163[data_2986400163_Idx]).length - 1)].Field0 = hc_2986400166;

  
}

function enlarge_2986399722(t_2986399725) {
    var n_2986399728 = [];
    n_2986399728 = new Array(chckRange(mulInt((t_2986399725.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986399725.data).length, 2), 0, 2147483647) ; ++i) { n_2986399728[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986399725.data; t_2986399725.data = n_2986399728; n_2986399728 = Temporary1;    Label2: {
      var i_2986399826 = 0;
      var colontmp__2936024882 = 0;
      colontmp__2936024882 = (n_2986399728).length - 1;
      var res_2936024883 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936024883 <= colontmp__2936024882)) break Label4;
            i_2986399826 = res_2936024883;
            var eh_2986399907 = n_2986399728[chckIndx(i_2986399826, 0, (n_2986399728).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986399907)) {
            var j_2986399911 = (eh_2986399907 & (t_2986399725.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986399725.data[chckIndx(j_2986399911, 0, (t_2986399725.data).length - 1)].Field0)) break Label6;
                  j_2986399911 = nextTry_1308622883(j_2986399911, (t_2986399725.data).length - 1);
                }
            };
            rawInsert_2986400158(t_2986399725, t_2986399725, "data", n_2986399728[chckIndx(i_2986399826, 0, (n_2986399728).length - 1)].Field1, n_2986399728[chckIndx(i_2986399826, 0, (n_2986399728).length - 1)].Field2, eh_2986399907, j_2986399911);
            }
            
            res_2936024883 = addInt(res_2936024883, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986400408(t_2986400411, key_2986400412, hc_2986400413) {
  var result_2986400414 = 0;

  BeforeRet: {
    if (((t_2986400411.data).length == 0)) {
    result_2986400414 = -1;
    break BeforeRet;
    }
    
    var h_2986400499 = (hc_2986400413 & (t_2986400411.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986400411.data[chckIndx(h_2986400499, 0, (t_2986400411.data).length - 1)].Field0)) break Label2;
          if (((t_2986400411.data[chckIndx(h_2986400499, 0, (t_2986400411.data).length - 1)].Field0 == hc_2986400413) && HEX3DHEX3D_2986345833(t_2986400411.data[chckIndx(h_2986400499, 0, (t_2986400411.data).length - 1)].Field1, key_2986400412))) {
          result_2986400414 = h_2986400499;
          break BeforeRet;
          }
          
          h_2986400499 = nextTry_1308622883(h_2986400499, (t_2986400411.data).length - 1);
        }
    };
    result_2986400414 = subInt(-1, h_2986400499);
  };

  return result_2986400414;

}

function HEX5BHEX5DHEX3D_2986399197(t_2986399200, key_2986399201, val_2986399202) {
    if (((t_2986399200.data).length == 0)) {
    var correctSizeHEX60gensym383_2986399285 = slotsNeeded_1308622891(32);
    t_2986399200.counter = 0;
    t_2986399200.data = new Array(chckRange(correctSizeHEX60gensym383_2986399285, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym383_2986399285, 0, 2147483647) ; ++i) { t_2986399200.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986399290 = [0];
    var index_2986399297 = rawGet_2986345489(t_2986399200, key_2986399201, hc_2986399290, 0);
    if ((0 <= index_2986399297)) {
    t_2986399200.data[chckIndx(index_2986399297, 0, (t_2986399200.data).length - 1)].Field2 = val_2986399202;
    }
    else {
      if (((t_2986399200.data).length == 0)) {
      var correctSizeHEX60gensym386_2986399460 = slotsNeeded_1308622891(32);
      t_2986399200.counter = 0;
      t_2986399200.data = new Array(chckRange(correctSizeHEX60gensym386_2986399460, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym386_2986399460, 0, 2147483647) ; ++i) { t_2986399200.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986399465(t_2986399200)) {
      enlarge_2986399722(t_2986399200);
      index_2986399297 = rawGetKnownHC_2986400408(t_2986399200, key_2986399201, hc_2986399290[0]);
      }
      
      index_2986399297 = subInt(-1, index_2986399297);
      rawInsert_2986400158(t_2986399200, t_2986399200, "data", key_2986399201, val_2986399202, hc_2986399290[0], index_2986399297);
      t_2986399200.counter = addInt(t_2986399200.counter, 1);
    }
    

  
}

function len_2986401973(t_2986401976) {
  var result_2986401977 = 0;

    result_2986401977 = t_2986401976.counter;

  return result_2986401977;

}

function len_2986401890(cache_2986401893) {
  var result_2986401894 = 0;

    result_2986401894 = len_2986401973(cache_2986401893.table);

  return result_2986401894;

}

function del_2986403580(t_2986403583, key_2986403584) {
    var hc_2986403585 = [0];
    var i_2986403592 = rawGet_2986345489(t_2986403583, key_2986403584, hc_2986403585, 0);
    var mskHEX60gensym36_2986403596 = (t_2986403583.data).length - 1;
    if ((0 <= i_2986403592)) {
    t_2986403583.counter = subInt(t_2986403583.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986403603 = i_2986403592;
            var rHEX60gensym36_2986403604 = jHEX60gensym36_2986403603;
            t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field0 = 0;
            t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field1 = nimCopy(t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986403592 = (addInt(i_2986403592, 1) & mskHEX60gensym36_2986403596);
                  if (isEmpty_1308622877(t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986403604 = (t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)].Field0 & mskHEX60gensym36_2986403596);
                  if (!(((((rHEX60gensym36_2986403604 <= i_2986403592) && (jHEX60gensym36_2986403603 < rHEX60gensym36_2986403604)) || ((jHEX60gensym36_2986403603 < rHEX60gensym36_2986403604) && (i_2986403592 < jHEX60gensym36_2986403603))) || ((i_2986403592 < jHEX60gensym36_2986403603) && (rHEX60gensym36_2986403604 <= i_2986403592))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986403583.data[chckIndx(jHEX60gensym36_2986403603, 0, (t_2986403583.data).length - 1)] = nimCopy(t_2986403583.data[chckIndx(jHEX60gensym36_2986403603, 0, (t_2986403583.data).length - 1)], t_2986403583.data[chckIndx(i_2986403592, 0, (t_2986403583.data).length - 1)], NTI2986344546);
          }
      };
    };
    }
    

  
}

function resize_2986401808(cache_2986401811) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986401811.capacity < len_2986401890(cache_2986401811))) break Label2;
          var t_2986401978 = cache_2986401811.list.tail;
          if (cache_2986401811.recordRemovedKeys) {
          incl_2986401998(cache_2986401811.removedKeys, t_2986401978.value.key);
          }
          
          del_2986403580(cache_2986401811.table, t_2986401978.value.key);
          remove_2986346156(cache_2986401811.list, t_2986401978);
        }
    };

  
}

function addNewNode_2986399116(cache_2986399119, key_2986399120, val_2986399121) {
    var node_2986399133 = newDoublyLinkedNode_2986399124({key: nimCopy(null, key_2986399120, NTI3003121689), val: val_2986399121});
    HEX5BHEX5DHEX3D_2986399197(cache_2986399119.table, key_2986399120, node_2986399133);
    prepend_2986346484(cache_2986399119.list, node_2986399133);
    if (cache_2986399119.recordRemovedKeys) {
    excl_2986400827(cache_2986399119.removedKeys, key_2986399120);
    }
    
    resize_2986401808(cache_2986399119);

  
}

function HEX5BHEX5DHEX3D_2986398897(cache_2986398900, key_2986398901, val_2986398902) {
    var node_2986399089 = getOrDefault_2986398992(cache_2986398900.table, key_2986398901, null);
    if ((node_2986399089 == null)) {
    addNewNode_2986399116(cache_2986398900, key_2986398901, val_2986398902);
    }
    else {
      node_2986399089.value.val = val_2986398902;
      remove_2986346156(cache_2986398900.list, node_2986399089);
      prepend_2986346484(cache_2986398900.list, node_2986399089);
    }
    

  
}

function insertNode_2986456654(ctx_2986456655, node_2986456656) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_2986456655.depGraph.revision = addInt(ctx_2986456655.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456655.depGraph.changed, {Field0: getItem_2986398737(node_2986456656), Field1: -1}, ctx_2986456655.depGraph.revision);
    if (!((node_2986456656.parent == null))) {
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456655.depGraph.changed, {Field0: getItem_2986398737(node_2986456656.parent), Field1: -1}, ctx_2986456655.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_2986398897(ctx_2986456655.itemsAstNode, getItem_2986398737(node_2986456656), node_2986456656);
    Label1: {
      var key_2986456872 = 0;
      var child_2986456873 = null;
      var n_2936024871 = node_2986456656;
      var idx_2936024872 = -1;
      var i_2936024873 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936024872 == -1)) {
            var colontmp__2936024876 = nimCopy(null, {Field0: i_2936024873, Field1: n_2936024871}, NTI2969568569);
            key_2986456872 = colontmp__2936024876["Field0"];
            child_2986456873 = colontmp__2936024876["Field1"];
            HEX5BHEX5DHEX3D_3003133124(ctx_2986456655.depGraph.changed, {Field0: getItem_2986398737(child_2986456873), Field1: -1}, ctx_2986456655.depGraph.revision);
            HEX5BHEX5DHEX3D_2986398897(ctx_2986456655.itemsAstNode, getItem_2986398737(child_2986456873), child_2986456873);
            }
            
            if ((addInt(idx_2936024872, 1) < len_2969567320(n_2936024871))) {
            n_2936024871 = HEX5BHEX5D_2969567316(n_2936024871, addInt(idx_2936024872, 1));
            idx_2936024872 = -1;
            }
            else {
              var oHEX60gensym74_2936024877 = next_2969567425(n_2936024871);
              if (!isSome_2969569114(oHEX60gensym74_2936024877)) Temporary5 = false; else {                var ne_2936024878 = get_2969569134(oHEX60gensym74_2936024877);
                Temporary5 = true;              }            if (Temporary5) {
            n_2936024871 = ne_2936024878;
            idx_2936024872 = -1;
            }
            else {
            if ((!((n_2936024871.parent == null)) && !((n_2936024871.parent == node_2986456656)))) {
            idx_2936024872 = index_2969567340(n_2936024871);
            n_2936024871 = n_2936024871.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2936024873 = addInt(i_2936024873, 1);
            }
          }
      };
    };
    var parent_2986457012 = node_2986456656.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_2986457012 == null))) Temporary8 = false; else {            var oHEX60gensym752_2986457019 = findWithParentRec_2969569157(parent_2986457012, 11);
            if (!isSome_2969569114(oHEX60gensym752_2986457019)) Temporary9 = false; else {              var child_2986457065 = get_2969569134(oHEX60gensym752_2986457019);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_2986457066 = child_2986457065.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986456655.depGraph.changed, {Field0: getItem_2986398737(functionDefinition_2986457066), Field1: -1}, ctx_2986456655.depGraph.revision);
          parent_2986457012 = functionDefinition_2986457066.parent;
        }
    };

  
}

function mustRehash_2936017775(t_2936017777) {
  var result_2936017778 = false;

    if (!((t_2936017777.counter < (t_2936017777.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2936017778 = ((mulInt((t_2936017777.data).length, 2) < mulInt(t_2936017777.counter, 3)) || (subInt((t_2936017777.data).length, t_2936017777.counter) < 4));

  return result_2936017778;

}

function rawInsert_2936018384(t_2936018388, data_2936018389, data_2936018389_Idx, key_2936018390, val_2936018391, hc_2936018392, h_2936018393) {
    data_2936018389[data_2936018389_Idx][chckIndx(h_2936018393, 0, (data_2936018389[data_2936018389_Idx]).length - 1)].Field1 = nimCopy(data_2936018389[data_2936018389_Idx][chckIndx(h_2936018393, 0, (data_2936018389[data_2936018389_Idx]).length - 1)].Field1, key_2936018390, NTI2046820355);
    data_2936018389[data_2936018389_Idx][chckIndx(h_2936018393, 0, (data_2936018389[data_2936018389_Idx]).length - 1)].Field2 = val_2936018391;
    data_2936018389[data_2936018389_Idx][chckIndx(h_2936018393, 0, (data_2936018389[data_2936018389_Idx]).length - 1)].Field0 = hc_2936018392;

  
}

function enlarge_2936017978(t_2936017981) {
    var n_2936017984 = [];
    n_2936017984 = new Array(chckRange(mulInt((t_2936017981.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2936017981.data).length, 2), 0, 2147483647) ; ++i) { n_2936017984[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2936017981.data; t_2936017981.data = n_2936017984; n_2936017984 = Temporary1;    Label2: {
      var i_2936018064 = 0;
      var colontmp__2936024891 = 0;
      colontmp__2936024891 = (n_2936017984).length - 1;
      var res_2936024892 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936024892 <= colontmp__2936024891)) break Label4;
            i_2936018064 = res_2936024892;
            var eh_2936018142 = n_2936017984[chckIndx(i_2936018064, 0, (n_2936017984).length - 1)].Field0;
            if (isFilled_1308622880(eh_2936018142)) {
            var j_2936018146 = (eh_2936018142 & (t_2936017981.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2936017981.data[chckIndx(j_2936018146, 0, (t_2936017981.data).length - 1)].Field0)) break Label6;
                  j_2936018146 = nextTry_1308622883(j_2936018146, (t_2936017981.data).length - 1);
                }
            };
            rawInsert_2936018384(t_2936017981, t_2936017981, "data", n_2936017984[chckIndx(i_2936018064, 0, (n_2936017984).length - 1)].Field1, n_2936017984[chckIndx(i_2936018064, 0, (n_2936017984).length - 1)].Field2, eh_2936018142, j_2936018146);
            }
            
            res_2936024892 = addInt(res_2936024892, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2936018625(t_2936018628, key_2936018629, hc_2936018630) {
  var result_2936018631 = 0;

  BeforeRet: {
    if (((t_2936018628.data).length == 0)) {
    result_2936018631 = -1;
    break BeforeRet;
    }
    
    var h_2936018698 = (hc_2936018630 & (t_2936018628.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2936018628.data[chckIndx(h_2936018698, 0, (t_2936018628.data).length - 1)].Field0)) break Label2;
          if (((t_2936018628.data[chckIndx(h_2936018698, 0, (t_2936018628.data).length - 1)].Field0 == hc_2936018630) && HEX3DHEX3D_2046820592(t_2936018628.data[chckIndx(h_2936018698, 0, (t_2936018628.data).length - 1)].Field1, key_2936018629))) {
          result_2936018631 = h_2936018698;
          break BeforeRet;
          }
          
          h_2936018698 = nextTry_1308622883(h_2936018698, (t_2936018628.data).length - 1);
        }
    };
    result_2936018631 = subInt(-1, h_2936018698);
  };

  return result_2936018631;

}

function HEX5BHEX5DHEX3D_2936017546(t_2936017549, key_2936017550, val_2936017551) {
    if (((t_2936017549.data).length == 0)) {
    var correctSizeHEX60gensym95_2936017616 = slotsNeeded_1308622891(32);
    t_2936017549.counter = 0;
    t_2936017549.data = new Array(chckRange(correctSizeHEX60gensym95_2936017616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym95_2936017616, 0, 2147483647) ; ++i) { t_2936017549.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2936017621 = [0];
    var index_2936017628 = rawGet_3170893898(t_2936017549, key_2936017550, hc_2936017621, 0);
    if ((0 <= index_2936017628)) {
    t_2936017549.data[chckIndx(index_2936017628, 0, (t_2936017549.data).length - 1)].Field2 = val_2936017551;
    }
    else {
      if (((t_2936017549.data).length == 0)) {
      var correctSizeHEX60gensym98_2936017770 = slotsNeeded_1308622891(32);
      t_2936017549.counter = 0;
      t_2936017549.data = new Array(chckRange(correctSizeHEX60gensym98_2936017770, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_2936017770, 0, 2147483647) ; ++i) { t_2936017549.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2936017775(t_2936017549)) {
      enlarge_2936017978(t_2936017549);
      index_2936017628 = rawGetKnownHC_2936018625(t_2936017549, key_2936017550, hc_2936017621[0]);
      }
      
      index_2936017628 = subInt(-1, index_2936017628);
      rawInsert_2936018384(t_2936017549, t_2936017549, "data", key_2936017550, val_2936017551, hc_2936017621[0], index_2936017628);
      t_2936017549.counter = addInt(t_2936017549.counter, 1);
    }
    

  
}

function handleNodeInserted_2936017460(doc_2936017461, node_2936017462) {
              var Temporary8;

    var fmtRes_2936017467 = [mnewString(0)];
    fmtRes_2936017467[0].push.apply(fmtRes_2936017467[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936017467, 0, node_2936017462, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017467[0], NTI33554449)]);
    insertNode_2986456654(ctx_2936012855, node_2936017462);
    Label1: {
      var handler_2936017495 = null;
      var i_2936024857 = 0;
      var L_2936024858 = (doc_2936017461.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024857 < L_2936024858)) break Label3;
            handler_2936017495 = doc_2936017461.onNodeInserted[chckIndx(i_2936024857, 0, (doc_2936017461.onNodeInserted).length - 1)];
            handler_2936017495(doc_2936017461, node_2936017462);
            i_2936024857 = addInt(i_2936024857, 1);
            if (!(((doc_2936017461.onNodeInserted).length == L_2936024858))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2936017546(doc_2936017461.nodes, node_2936017462.id, node_2936017462);
    Label4: {
      var key_2936018951 = 0;
      var child_2936018952 = null;
      var n_2936024862 = node_2936017462;
      var idx_2936024863 = -1;
      var i_2936024864 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2936024863 == -1)) {
            var colontmp__2936024867 = nimCopy(null, {Field0: i_2936024864, Field1: n_2936024862}, NTI2969568569);
            key_2936018951 = colontmp__2936024867["Field0"];
            child_2936018952 = colontmp__2936024867["Field1"];
            HEX5BHEX5DHEX3D_2936017546(doc_2936017461.nodes, child_2936018952.id, child_2936018952);
            }
            
            if ((addInt(idx_2936024863, 1) < len_2969567320(n_2936024862))) {
            n_2936024862 = HEX5BHEX5D_2969567316(n_2936024862, addInt(idx_2936024863, 1));
            idx_2936024863 = -1;
            }
            else {
              var oHEX60gensym74_2936024868 = next_2969567425(n_2936024862);
              if (!isSome_2969569114(oHEX60gensym74_2936024868)) Temporary8 = false; else {                var ne_2936024869 = get_2969569134(oHEX60gensym74_2936024868);
                Temporary8 = true;              }            if (Temporary8) {
            n_2936024862 = ne_2936024869;
            idx_2936024863 = -1;
            }
            else {
            if ((!((n_2936024862.parent == null)) && !((n_2936024862.parent == node_2936017462)))) {
            idx_2936024863 = index_2969567340(n_2936024862);
            n_2936024862 = n_2936024862.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2936024864 = addInt(i_2936024864, 1);
            }
          }
      };
    };

  
}

function replaceNode_2936021302(document_2936021303, node_2936021304, newNode_2936021305) {
  var result_2936021306 = null;

  BeforeRet: {
    if ((node_2936021304.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2936021312 = index_2969567340(node_2936021304);
    document_2936021303.undoOps.push({kind: 1, parent: node_2936021304.parent, idx: idx_2936021312, node: node_2936021304, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936021303.redoOps = nimCopy(null, [], NTI2936017595);
    handleNodeDelete_2936019035(document_2936021303, node_2936021304);
    HEX5BHEX5DHEX3D_2969567496(node_2936021304.parent, idx_2936021312, newNode_2936021305);
    handleNodeInserted_2936017460(document_2936021303, newNode_2936021305);
    result_2936021306 = newNode_2936021305;
    break BeforeRet;
  };

  return result_2936021306;

}

function delete_2969567504(x_2969567506, x_2969567506_Idx, i_2969567507) {
    x_2969567506[x_2969567506_Idx].splice(i_2969567507, 1);

  
}

function delete_2969567500(node_2969567501, index_2969567502) {
  var result_2969567503 = null;

  BeforeRet: {
    if (((index_2969567502 < 0) || (len_2969567320(node_2969567501) <= index_2969567502))) {
    result_2969567503 = node_2969567501;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2969567316(node_2969567501, index_2969567502).parent = null;
    delete_2969567504(node_2969567501, "children", chckRange(index_2969567502, 0, 2147483647));
    if ((index_2969567502 < len_2969567320(node_2969567501))) {
    result_2969567503 = HEX5BHEX5D_2969567316(node_2969567501, index_2969567502);
    break BeforeRet;
    }
    else {
    if ((0 < len_2969567320(node_2969567501))) {
    result_2969567503 = HEX5BHEX5D_2969567316(node_2969567501, subInt(index_2969567502, 1));
    break BeforeRet;
    }
    else {
      result_2969567503 = node_2969567501;
      break BeforeRet;
    }
    }
  };

  return result_2969567503;

}

function deleteNode_2936021366(document_2936021367, node_2936021368) {
  var result_2936021369 = null;

  BeforeRet: {
    if ((node_2936021368.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2936021368.parent == document_2936021367.rootNode) && (len_2969567320(document_2936021367.rootNode) == 1))) {
    result_2936021369 = replaceNode_2936021302(document_2936021367, node_2936021368, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2936021367.undoOps.push({kind: 0, parent: node_2936021368.parent, idx: index_2969567340(node_2936021368), node: node_2936021368, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936021367.redoOps = nimCopy(null, [], NTI2936017595);
    handleNodeDelete_2936019035(document_2936021367, node_2936021368);
    result_2936021369 = delete_2969567500(node_2936021368.parent, index_2969567340(node_2936021368));
    break BeforeRet;
  };

  return result_2936021369;

}

function deleteSelected_2936024790(self_2936024791) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936024791)) {
    break BeforeRet;
    }
    
    self_2936024791.deletedNode = nimCopy(self_2936024791.deletedNode, some_2969567458(node_2936015481(self_2936024791)), NTI2969567351);
    nodeHEX3D_2936016604(self_2936024791, deleteNode_2936021366(self_2936024791.document, node_2936015481(self_2936024791)));
  };

  
}

function deleteSelectedJsWrapper_2936024786(self_2936024822) {
    deleteSelected_2936024790(self_2936024822);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2936024786(this));};

function initTable_2969569068(initialSize_2969569071) {
  var result_2969569072 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2969569074 = slotsNeeded_1308622891(chckRange(initialSize_2969569071, 0, 2147483647));
    result_2969569072.counter = 0;
    result_2969569072.data = new Array(chckRange(correctSizeHEX60gensym29_2969569074, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2969569074, 0, 2147483647) ; ++i) { result_2969569072.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_2969569072;

}

function rawGet_2969567639(t_2969567642, key_2969567643, hc_2969567644, hc_2969567644_Idx) {
  var result_2969567645 = 0;

  BeforeRet: {
    hc_2969567644[hc_2969567644_Idx] = hash_2046820596(key_2969567643);
    if ((hc_2969567644[hc_2969567644_Idx] == 0)) {
    hc_2969567644[hc_2969567644_Idx] = 314159265;
    }
    
    if (((t_2969567642.data).length == 0)) {
    result_2969567645 = -1;
    break BeforeRet;
    }
    
    var h_2969567696 = (hc_2969567644[hc_2969567644_Idx] & (t_2969567642.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field0)) break Label2;
          if (((t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field0 == hc_2969567644[hc_2969567644_Idx]) && HEX3DHEX3D_2046820592(t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field1, key_2969567643))) {
          result_2969567645 = h_2969567696;
          break BeforeRet;
          }
          
          h_2969567696 = nextTry_1308622883(h_2969567696, (t_2969567642.data).length - 1);
        }
    };
    result_2969567645 = subInt(-1, h_2969567696);
  };

  return result_2969567645;

}

function mustRehash_2969567984(t_2969567986) {
  var result_2969567987 = false;

    if (!((t_2969567986.counter < (t_2969567986.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969567987 = ((mulInt((t_2969567986.data).length, 2) < mulInt(t_2969567986.counter, 3)) || (subInt((t_2969567986.data).length, t_2969567986.counter) < 4));

  return result_2969567987;

}

function rawInsert_2969568433(t_2969568437, data_2969568438, data_2969568438_Idx, key_2969568439, val_2969568440, hc_2969568441, h_2969568442) {
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field1 = nimCopy(data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field1, key_2969568439, NTI2046820355);
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field2 = nimCopy(data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field2, val_2969568440, NTI2046820355);
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field0 = hc_2969568441;

  
}

function enlarge_2969568139(t_2969568142) {
    var n_2969568145 = [];
    n_2969568145 = new Array(chckRange(mulInt((t_2969568142.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969568142.data).length, 2), 0, 2147483647) ; ++i) { n_2969568145[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_2969568142.data; t_2969568142.data = n_2969568145; n_2969568145 = Temporary1;    Label2: {
      var i_2969568209 = 0;
      var colontmp__2936024960 = 0;
      colontmp__2936024960 = (n_2969568145).length - 1;
      var res_2936024961 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936024961 <= colontmp__2936024960)) break Label4;
            i_2969568209 = res_2936024961;
            var eh_2969568263 = n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969568263)) {
            var j_2969568267 = (eh_2969568263 & (t_2969568142.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969568142.data[chckIndx(j_2969568267, 0, (t_2969568142.data).length - 1)].Field0)) break Label6;
                  j_2969568267 = nextTry_1308622883(j_2969568267, (t_2969568142.data).length - 1);
                }
            };
            rawInsert_2969568433(t_2969568142, t_2969568142, "data", n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field1, n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field2, eh_2969568263, j_2969568267);
            }
            
            res_2936024961 = addInt(res_2936024961, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969568602(t_2969568605, key_2969568606, hc_2969568607) {
  var result_2969568608 = 0;

  BeforeRet: {
    if (((t_2969568605.data).length == 0)) {
    result_2969568608 = -1;
    break BeforeRet;
    }
    
    var h_2969568659 = (hc_2969568607 & (t_2969568605.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field0)) break Label2;
          if (((t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field0 == hc_2969568607) && HEX3DHEX3D_2046820592(t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field1, key_2969568606))) {
          result_2969568608 = h_2969568659;
          break BeforeRet;
          }
          
          h_2969568659 = nextTry_1308622883(h_2969568659, (t_2969568605.data).length - 1);
        }
    };
    result_2969568608 = subInt(-1, h_2969568659);
  };

  return result_2969568608;

}

function HEX5BHEX5DHEX3D_2969567578(t_2969567581, key_2969567582, val_2969567583) {
    if (((t_2969567581.data).length == 0)) {
    var correctSizeHEX60gensym15_2969567633 = slotsNeeded_1308622891(32);
    t_2969567581.counter = 0;
    t_2969567581.data = new Array(chckRange(correctSizeHEX60gensym15_2969567633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2969567633, 0, 2147483647) ; ++i) { t_2969567581.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_2969567638 = [0];
    var index_2969567877 = rawGet_2969567639(t_2969567581, key_2969567582, hc_2969567638, 0);
    if ((0 <= index_2969567877)) {
    t_2969567581.data[chckIndx(index_2969567877, 0, (t_2969567581.data).length - 1)].Field2 = nimCopy(t_2969567581.data[chckIndx(index_2969567877, 0, (t_2969567581.data).length - 1)].Field2, val_2969567583, NTI2046820355);
    }
    else {
      if (((t_2969567581.data).length == 0)) {
      var correctSizeHEX60gensym20_2969567979 = slotsNeeded_1308622891(32);
      t_2969567581.counter = 0;
      t_2969567581.data = new Array(chckRange(correctSizeHEX60gensym20_2969567979, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2969567979, 0, 2147483647) ; ++i) { t_2969567581.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_2969567984(t_2969567581)) {
      enlarge_2969568139(t_2969567581);
      index_2969567877 = rawGetKnownHC_2969568602(t_2969567581, key_2969567582, hc_2969567638[0]);
      }
      
      index_2969567877 = subInt(-1, index_2969567877);
      rawInsert_2969568433(t_2969567581, t_2969567581, "data", key_2969567582, val_2969567583, hc_2969567638[0], index_2969567877);
      t_2969567581.counter = addInt(t_2969567581.counter, 1);
    }
    

  
}

function add_2969567270(node_2969567271, child_2969567272) {
    if (HEX3DHEX3D_2046820592(node_2969567271.id, null_2046820612)) {
    node_2969567271.id = nimCopy(node_2969567271.id, newId_2046820569(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820592(child_2969567272.id, null_2046820612)) {
    child_2969567272.id = nimCopy(child_2969567272.id, newId_2046820569(), NTI2046820355);
    }
    
    child_2969567272.parent = node_2969567271;
    node_2969567271.children.push(child_2969567272);;

  
}

function clone_2969567526(node_2969567527, idMap_2969567535) {
  var result_2969567536 = null;

    var newNodeId_2969567537 = newId_2046820569();
    result_2969567536 = {kind: node_2969567527.kind, id: nimCopy(null, newNodeId_2969567537, NTI2046820355), reff: nimCopy(null, node_2969567527.reff, NTI2046820355), text: nimCopy(null, node_2969567527.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2969567578(idMap_2969567535, node_2969567527.id, newNodeId_2969567537);
    Label1: {
      var child_2969568843 = null;
      var i_2936024954 = 0;
      var L_2936024955 = (node_2969567527.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024954 < L_2936024955)) break Label3;
            child_2969568843 = node_2969567527.children[chckIndx(i_2936024954, 0, (node_2969567527.children).length - 1)];
            add_2969567270(result_2969567536, clone_2969567526(child_2969568843, idMap_2969567535));
            i_2936024954 = addInt(i_2936024954, 1);
            if (!(((node_2969567527.children).length == L_2936024955))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2969567536;

}

function hasKey_2969568915(t_2969568918, key_2969568919) {
  var result_2969568920 = false;

    var hc_2969568921 = [0];
    result_2969568920 = (0 <= rawGet_2969567639(t_2969568918, key_2969568919, hc_2969568921, 0));

  return result_2969568920;

}

function contains_2969568909(t_2969568912, key_2969568913) {
  var result_2969568914 = false;

  BeforeRet: {
    result_2969568914 = hasKey_2969568915(t_2969568912, key_2969568913);
    break BeforeRet;
  };

  return result_2969568914;

}

function HEX5BHEX5D_2969568981(t_2969568984, key_2969568985) {
  var result_2969568986 = null;

    var hcHEX60gensym22_2969568987 = [0];
    var indexHEX60gensym22_2969568994 = rawGet_2969567639(t_2969568984, key_2969568985, hcHEX60gensym22_2969568987, 0);
    if ((0 <= indexHEX60gensym22_2969568994)) {
    result_2969568986 = t_2969568984.data[chckIndx(indexHEX60gensym22_2969568994, 0, (t_2969568984.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2969568985);
    }
    

  return result_2969568986;

}

function replaceReferences_2969568862(node_2969568863, idMap_2969568866) {
    if (contains_2969568909(idMap_2969568866, node_2969568863.reff)) {
    node_2969568863.reff = nimCopy(node_2969568863.reff, HEX5BHEX5D_2969568981(idMap_2969568866, node_2969568863.reff), NTI2046820355);
    }
    
    Label1: {
      var child_2969569064 = null;
      var i_2936024965 = 0;
      var L_2936024966 = (node_2969568863.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024965 < L_2936024966)) break Label3;
            child_2969569064 = node_2969568863.children[chckIndx(i_2936024965, 0, (node_2969568863.children).length - 1)];
            replaceReferences_2969568862(child_2969569064, idMap_2969568866);
            i_2936024965 = addInt(i_2936024965, 1);
            if (!(((node_2969568863.children).length == L_2936024966))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2969569065(node_2969569066) {
  var result_2969569067 = null;

  BeforeRet: {
    var idMap_2969569079 = [initTable_2969569068(32)];
    var newNode_2969569080 = clone_2969567526(node_2969569066, idMap_2969569079[0]);
    replaceReferences_2969568862(newNode_2969569080, idMap_2969569079[0]);
    result_2969569067 = newNode_2969569080;
    break BeforeRet;
  };

  return result_2969569067;

}

function copySelected_2936024906(self_2936024907) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936024907)) {
    break BeforeRet;
    }
    
    self_2936024907.deletedNode = nimCopy(self_2936024907.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936015481(self_2936024907))), NTI2969567351);
  };

  
}

function copySelectedJsWrapper_2936024902(self_2936024938) {
    copySelected_2936024906(self_2936024938);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2936024902(this));};

function getSymbol_2986407811(ctxHEX60gensym80_2986407812, idHEX60gensym80_2986407813) {
  var result_2986407815 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_2986407816 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_2986407813, NTI2046820355), Field1: 2}, NTI3003121689);
    if (contains_2986366279(ctxHEX60gensym80_2986407812.itemsSymbol, itemHEX60gensym80_2986407816)) {
    result_2986407815 = nimCopy(result_2986407815, some_2986407983(HEX5BHEX5D_2986366832(ctxHEX60gensym80_2986407812.itemsSymbol, itemHEX60gensym80_2986407816)), NTI3070231688);
    break BeforeRet;
    }
    
    result_2986407815 = nimCopy(result_2986407815, none_2986407996(), NTI3070231688);
    break BeforeRet;
  };

  return result_2986407815;

}

function content_2801796767(document_2801796768) {
  var result_2801796769 = [];

  BeforeRet: {
    result_2801796769 = nimCopy(null, document_2801796768.lines, NTI2801795212);
    break BeforeRet;
  };

  return result_2801796769;

}

function updateNode_2986457136(ctx_2986457137, node_2986457138) {
          var Temporary3;
            var Temporary4;

    ctx_2986457137.depGraph.revision = addInt(ctx_2986457137.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986457137.depGraph.changed, {Field0: getItem_2986398737(node_2986457138), Field1: -1}, ctx_2986457137.depGraph.revision);
    var parent_2986457212 = node_2986457138.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2986457212 == null))) Temporary3 = false; else {            var oHEX60gensym754_2986457219 = findWithParentRec_2969569157(parent_2986457212, 11);
            if (!isSome_2969569114(oHEX60gensym754_2986457219)) Temporary4 = false; else {              var child_2986457265 = get_2969569134(oHEX60gensym754_2986457219);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2986457266 = child_2986457265.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986457137.depGraph.changed, {Field0: getItem_2986398737(functionDefinition_2986457266), Field1: -1}, ctx_2986457137.depGraph.revision);
          parent_2986457212 = functionDefinition_2986457266.parent;
        }
    };
    var fmtRes_2986457340 = [mnewString(0)];
    fmtRes_2986457340[0].push.apply(fmtRes_2986457340[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3070231363(fmtRes_2986457340, 0, node_2986457138, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986457340[0], NTI33554449)]);

  
}

function notifySymbolChanged_2986456568(ctx_2986456569, sym_2986456570) {
    ctx_2986456569.depGraph.revision = addInt(ctx_2986456569.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456569.depGraph.changed, {Field0: getItem_2986408006(sym_2986456570), Field1: -1}, ctx_2986456569.depGraph.revision);
    var fmtRes_2986456648 = [mnewString(0)];
    fmtRes_2986456648[0].push.apply(fmtRes_2986456648[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2986456648, 0, sym_2986456570.name, []);
    fmtRes_2986456648[0].push.apply(fmtRes_2986456648[0], [32,40]);;
    formatValue_3003121884(fmtRes_2986456648, 0, sym_2986456570.id, []);
    fmtRes_2986456648[0].push.apply(fmtRes_2986456648[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986456648[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2936025079 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025079 < rows_1979711496)) break Label3;
            i_1979711534 = i_2936025079;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2936025079 = addInt(i_2936025079, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2936025085 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2936025085 < rows_1979711496)) break Label6;
            i_1979711551 = i_2936025085;
            Label7: {
              var k_1979711556 = 0;
              var i_2936025083 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2936025083 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2936025083;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2936025083 = addInt(i_2936025083, 1);
                  }
              };
            };
            i_2936025085 = addInt(i_2936025085, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2936025091 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2936025091 < cols_1979711497)) break Label12;
            col_1979711561 = i_2936025091;
            Label13: {
              var row_1979711566 = 0;
              var i_2936025089 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2936025089 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2936025089;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2936025089 = addInt(i_2936025089, 1);
                  }
              };
            };
            i_2936025091 = addInt(i_2936025091, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2936025101 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025101 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2936025101];
            addChar(str_33557214, x_33557228);;
            i_2936025101 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3154116712(len_3154116714) {
  var result_3154116715 = [];

    result_3154116715 = new Array(len_3154116714); for (var i = 0 ; i < len_3154116714 ; ++i) { result_3154116715[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3154116715;

}

function mergeAlt_3154116751(a_3154116753, b_3154116754, lo_3154116755, m_3154116756, hi_3154116757, cmp_3154116760, order_3154116761) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3154116760(a_3154116753[chckIndx(m_3154116756, 0, (a_3154116753).length - 1)], a_3154116753[chckIndx(addInt(m_3154116756, 1), 0, (a_3154116753).length - 1)]), order_3154116761) <= 0)) {
    break BeforeRet;
    }
    
    var j_3154116762 = lo_3154116755;
    if (!((j_3154116762 <= m_3154116756))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3154116768 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3154116762 <= m_3154116756)) break Label2;
          b_3154116754[chckIndx(bb_3154116768, 0, (b_3154116754).length - 1)] = nimCopy(b_3154116754[chckIndx(bb_3154116768, 0, (b_3154116754).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)], NTI2936014308);
          bb_3154116768 = addInt(bb_3154116768, 1);
          j_3154116762 = addInt(j_3154116762, 1);
        }
    };
    var i_3154116779 = 0;
    var k_3154116780 = lo_3154116755;
    Label3: {
        Label4: while (true) {
        if (!((k_3154116780 < j_3154116762) && (j_3154116762 <= hi_3154116757))) break Label4;
          if ((HEX2A_1023410184(cmp_3154116760(b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)]), order_3154116761) <= 0)) {
          a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], NTI2936014308);
          i_3154116779 = addInt(i_3154116779, 1);
          }
          else {
            a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)], NTI2936014308);
            j_3154116762 = addInt(j_3154116762, 1);
          }
          
          k_3154116780 = addInt(k_3154116780, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3154116780 < j_3154116762)) break Label6;
          a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], NTI2936014308);
          k_3154116780 = addInt(k_3154116780, 1);
          i_3154116779 = addInt(i_3154116779, 1);
        }
    };
  };

  
}

function sort_3154116700(a_3154116702, cmp_3154116705, order_3154116706) {
    var n_3154116711 = (a_3154116702).length;
    var b_3154116748 = newSeq_3154116712(chckRange(divInt(n_3154116711, 2), 0, 2147483647));
    var s_3154116749 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3154116749 < n_3154116711)) break Label2;
          var m_3154116750 = subInt(subInt(n_3154116711, 1), s_3154116749);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3154116750)) break Label4;
                mergeAlt_3154116751(a_3154116702, b_3154116748, nimMax(addInt(subInt(m_3154116750, s_3154116749), 1), 0), m_3154116750, addInt(m_3154116750, s_3154116749), cmp_3154116705, order_3154116706);
                m_3154116750 = subInt(m_3154116750, mulInt(s_3154116749, 2));
              }
          };
          s_3154116749 = mulInt(s_3154116749, 2);
        }
    };

  
}

function cmp_3154116680(x_3154116682, y_3154116683) {
  var result_3154116684 = 0;

  BeforeRet: {
    if ((x_3154116682 == y_3154116683)) {
    result_3154116684 = 0;
    break BeforeRet;
    }
    
    if ((x_3154116682 < y_3154116683)) {
    result_3154116684 = -1;
    break BeforeRet;
    }
    
    result_3154116684 = 1;
    break BeforeRet;
  };

  return result_3154116684;

}

function getCompletions_2936020521(editor_2936020522, text_2936020523, contextNode_2936020527) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2936020671(a_2936020689, b_2936020690) {
      var result_2936020695 = 0;

        result_2936020695 = cmp_3154116680(a_2936020689.score, b_2936020690.score);

      return result_2936020695;

    }

  var result_2936020528 = [];

  BeforeRet: {
    result_2936020528 = nimCopy(null, [], NTI3154116626);
    if (((isNone_2969569142(contextNode_2936020527) || (get_2969569134(contextNode_2936020527).kind == 1)) || (get_2969569134(contextNode_2936020527).kind == 0))) {
    var symbols_2936020593 = computeSymbols_2986428140(ctx_2936012855, get_2969569134(contextNode_2936020527), true);
    Label1: {
      var key_2936020598 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2936020599 = null;
      var L_2936025070 = len_3070231838(symbols_2936020593);
      Label2: {
        var h_2936025072 = 0;
        var colontmp__2936025073 = 0;
        colontmp__2936025073 = (symbols_2936020593.data).length - 1;
        var res_2936025074 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936025074 <= colontmp__2936025073)) break Label4;
              h_2936025072 = res_2936025074;
              if (isFilled_1308622880(symbols_2936020593.data[chckIndx(h_2936025072, 0, (symbols_2936020593.data).length - 1)].Field0)) {
              var colontmp__2936025077 = nimCopy(null, {Field0: nimCopy(null, symbols_2936020593.data[chckIndx(h_2936025072, 0, (symbols_2936020593.data).length - 1)].Field1, NTI2046820355), Field1: symbols_2936020593.data[chckIndx(h_2936025072, 0, (symbols_2936020593.data).length - 1)].Field2}, NTI3070231514);
              key_2936020598 = nimCopy(key_2936020598, colontmp__2936025077["Field0"], NTI2046820355);
              symbol_2936020599 = colontmp__2936025077["Field1"];
              var score_2936020600 = fuzzyMatch_1979711568(text_2936020523, symbol_2936020599.name);
              result_2936020528.push({kind: 0, score: score_2936020600, id: nimCopy(null, symbol_2936020599.id, NTI2046820355), nodeKind: 0, name: []});;
              if (!((len_3070231838(symbols_2936020593) == L_2936025070))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936025074 = addInt(res_2936025074, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym118_2936020607 = nimCopy(null, contextNode_2936020527, NTI2969567351);
      if (!isSome_2969569114(oHEX60gensym118_2936020607)) Temporary6 = false; else {        var node_2936020630 = get_2969569134(oHEX60gensym118_2936020607);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2936020630.kind == 0);      }    if (Temporary5) {
    result_2936020528.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2936020523, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2936020523, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2936020523, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2936020523, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2936020523, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2936020523, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2936020528.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2936020523, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936020528.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2936020523, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2936020523);
    result_2936020528.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3154116700(result_2936020528, HEX3Aanonymous_2936020671, 0);
    break BeforeRet;
  };

  return result_2936020528;

}

function updateCompletions_2936015469(editor_2936015470) {
  BeforeRet: {
    if ((editor_2936015470.textDocument == null)) {
    editor_2936015470.completions = nimCopy(null, [], NTI3154116626);
    editor_2936015470.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2936020719 = nsuJoinSep(content_2801796767(editor_2936015470.textDocument), []);
    editor_2936015470.completions = nimCopy(null, getCompletions_2936020521(editor_2936015470, text_2936020719, some_2969567458(node_2936015481(editor_2936015470))), NTI2936016987);
    editor_2936015470.completionText = nimCopy(null, text_2936020719, NTI33554449);
    if ((0 < (editor_2936015470.completions).length)) {
    editor_2936015470.selectedCompletion = clamp_1660945119(editor_2936015470.selectedCompletion, 0, subInt((editor_2936015470.completions).length, 1));
    }
    else {
      editor_2936015470.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2936020734(self_2936020735, apply_2936020736) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2936020308(self_2936020735))) {
    break BeforeRet;
    }
    
    if (apply_2936020736) {
    if (!(HEX3DHEX3D_2046820592(self_2936020735.currentlyEditedSymbol, null_2046820612))) {
      var oHEX60gensym640_2936024979 = getSymbol_2986407811(ctx_2936012855, self_2936020735.currentlyEditedSymbol);
      if (!isSome_3070232129(oHEX60gensym640_2936024979)) Temporary1 = false; else {        var sym_2936025002 = get_3070232149(oHEX60gensym640_2936024979);
        Temporary1 = true;      }    if (Temporary1) {
    self_2936020735.document.undoOps.push({kind: 4, id: nimCopy(null, self_2936020735.currentlyEditedSymbol, NTI2046820355), text: nimCopy(null, sym_2936025002.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2936025002.name = nimCopy(null, nsuJoinSep(content_2801796767(self_2936020735.textDocument), []), NTI33554449);
    if ((sym_2936025002.kind == 0)) {
    var Temporary2 = sym_2936025002;
    if (ConstSet166[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
    Temporary2.node.text = nimCopy(null, sym_2936025002.name, NTI33554449);
    var Temporary3 = sym_2936025002;
    if (ConstSet167[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
    updateNode_2986457136(ctx_2936012855, Temporary3.node);
    }
    
    notifySymbolChanged_2986456568(ctx_2936012855, sym_2936025002);
    }
    
    }
    else {
    if (!((self_2936020735.currentlyEditedNode == null))) {
    self_2936020735.document.undoOps.push({kind: 3, node: self_2936020735.currentlyEditedNode, text: nimCopy(null, self_2936020735.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2936020735.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2801796767(self_2936020735.textDocument), [10]), NTI33554449);
    updateNode_2986457136(ctx_2936012855, self_2936020735.currentlyEditedNode);
    }
    }
    }
    
    unregister_2382364835(self_2936020735.textEditor);
    self_2936020735.textEditor = null;
    self_2936020735.textDocument = null;
    self_2936020735.currentlyEditedSymbol = nimCopy(self_2936020735.currentlyEditedSymbol, null_2046820612, NTI2046820355);
    self_2936020735.currentlyEditedNode = null;
    updateCompletions_2936015469(self_2936020735);
  };

  
}

function finishEditJsWrapper_2936024970(self_2936025047, apply_2936025048) {
    finishEdit_2936020734(self_2936025047, apply_2936025048);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2936024970(this, apply_));};

function pop_2936021439(s_2936021441, s_2936021441_Idx) {
  var result_2936021442 = null;

    var L_2936021446 = subInt((s_2936021441[s_2936021441_Idx]).length, 1);
    result_2936021442 = s_2936021441[s_2936021441_Idx][chckIndx(L_2936021446, 0, (s_2936021441[s_2936021441_Idx]).length - 1)];
    if (s_2936021441[s_2936021441_Idx].length < chckRange(L_2936021446, 0, 2147483647)) { for (var i = s_2936021441[s_2936021441_Idx].length ; i < chckRange(L_2936021446, 0, 2147483647) ; ++i) s_2936021441[s_2936021441_Idx].push(null); }
               else { s_2936021441[s_2936021441_Idx].length = chckRange(L_2936021446, 0, 2147483647); };

  return result_2936021442;

}

function formatValue_2936015343(result_2936015345, result_2936015345_Idx, value_2936015346, specifier_2936015347) {
    formatValue_721420459(result_2936015345, result_2936015345_Idx, reprEnum(value_2936015346, NTI2936014151), specifier_2936015347);

  
}

function HEX24_2936015335(op_2936015336) {
  var result_2936015337 = [];

    var fmtRes_2936015342 = [mnewString(0)];
    formatValue_2936015343(fmtRes_2936015342, 0, op_2936015336.kind, []);
    fmtRes_2936015342[0].push.apply(fmtRes_2936015342[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2936015342, 0, op_2936015336.text, []);
    fmtRes_2936015342[0].push.apply(fmtRes_2936015342[0], [39]);;
    result_2936015337 = nimCopy(null, fmtRes_2936015342[0], NTI33554449);
    if (!(HEX3DHEX3D_2046820592(op_2936015336.id, null_2046820612))) {
    var fmtRes_2936015355 = [mnewString(0)];
    fmtRes_2936015355[0].push.apply(fmtRes_2936015355[0], [44,32,105,100,32,61,32]);;
    formatValue_3003121884(fmtRes_2936015355, 0, op_2936015336.id, []);
    result_2936015337.push.apply(result_2936015337, fmtRes_2936015355[0]);;
    }
    
    if (!((op_2936015336.node == null))) {
    var fmtRes_2936015369 = [mnewString(0)];
    fmtRes_2936015369[0].push.apply(fmtRes_2936015369[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3070231363(fmtRes_2936015369, 0, op_2936015336.node, []);
    result_2936015337.push.apply(result_2936015337, fmtRes_2936015369[0]);;
    }
    
    if (!((op_2936015336.parent == null))) {
    var fmtRes_2936015383 = [mnewString(0)];
    fmtRes_2936015383[0].push.apply(fmtRes_2936015383[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3070231363(fmtRes_2936015383, 0, op_2936015336.parent, []);
    fmtRes_2936015383[0].push.apply(fmtRes_2936015383[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2516582756(fmtRes_2936015383, 0, op_2936015336.idx, []);
    result_2936015337.push.apply(result_2936015337, fmtRes_2936015383[0]);;
    }
    

  return result_2936015337;

}

function formatValue_2936021457(result_2936021459, result_2936021459_Idx, value_2936021460, specifier_2936021461) {
    formatValue_721420459(result_2936021459, result_2936021459_Idx, HEX24_2936015335(value_2936021460), specifier_2936021461);

  
}

function insert_2969567290(x_2969567292, x_2969567292_Idx, item_2969567293, i_2969567294) {
    var it_2969567315 = null;
    x_2969567292[x_2969567292_Idx] = x_2969567292[x_2969567292_Idx] || []; x_2969567292[x_2969567292_Idx].splice(i_2969567294, 0, it_2969567315);
    x_2969567292[x_2969567292_Idx][chckIndx(i_2969567294, 0, (x_2969567292[x_2969567292_Idx]).length - 1)] = item_2969567293;

  
}

function insert_2969567286(node_2969567287, child_2969567288, idx_2969567289) {
    if (HEX3DHEX3D_2046820592(node_2969567287.id, null_2046820612)) {
    node_2969567287.id = nimCopy(node_2969567287.id, newId_2046820569(), NTI2046820355);
    }
    
    if (HEX3DHEX3D_2046820592(child_2969567288.id, null_2046820612)) {
    child_2969567288.id = nimCopy(child_2969567288.id, newId_2046820569(), NTI2046820355);
    }
    
    child_2969567288.parent = node_2969567287;
    insert_2969567290(node_2969567287, "children", child_2969567288, chckRange(idx_2969567289, 0, 2147483647));

  
}

function undo_2936021429(document_2936021430) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2936021432 = ({val: null});

  BeforeRet: {
    if (((document_2936021430.undoOps).length == 0)) {
    result_2936021432 = nimCopy(result_2936021432, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var undoOp_2936021451 = pop_2936021439(document_2936021430, "undoOps");
    var fmtRes_2936021456 = [mnewString(0)];
    fmtRes_2936021456[0].push.apply(fmtRes_2936021456[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2936021457(fmtRes_2936021456, 0, undoOp_2936021451, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021456[0], NTI33554449)]);
    switch (undoOp_2936021451.kind) {
    case 0:
      insert_2969567286(undoOp_2936021451.parent, undoOp_2936021451.node, undoOp_2936021451.idx);
      handleNodeInserted_2936017460(document_2936021430, undoOp_2936021451.node);
      document_2936021430.redoOps.push(undoOp_2936021451);;
      result_2936021432 = nimCopy(result_2936021432, some_2969567458(undoOp_2936021451.node), NTI2969567351);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2936021469 = HEX5BHEX5D_2969567316(undoOp_2936021451.parent, undoOp_2936021451.idx);
      handleNodeDelete_2936019035(document_2936021430, HEX5BHEX5D_2969567316(undoOp_2936021451.parent, undoOp_2936021451.idx));
      HEX5BHEX5DHEX3D_2969567496(undoOp_2936021451.parent, undoOp_2936021451.idx, undoOp_2936021451.node);
      handleNodeInserted_2936017460(document_2936021430, undoOp_2936021451.node);
      document_2936021430.redoOps.push({kind: 1, parent: undoOp_2936021451.parent, idx: undoOp_2936021451.idx, node: oldNode_2936021469, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2936021432 = nimCopy(result_2936021432, some_2969567458(undoOp_2936021451.node), NTI2969567351);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2936019035(document_2936021430, HEX5BHEX5D_2969567316(undoOp_2936021451.parent, undoOp_2936021451.idx));
      var _ = delete_2969567500(undoOp_2936021451.parent, undoOp_2936021451.idx);
      document_2936021430.redoOps.push(undoOp_2936021451);;
      if ((undoOp_2936021451.idx < len_2969567320(undoOp_2936021451.parent))) {
      result_2936021432 = nimCopy(result_2936021432, some_2969567458(HEX5BHEX5D_2969567316(undoOp_2936021451.parent, undoOp_2936021451.idx)), NTI2969567351);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2936021451.idx)) {
      result_2936021432 = nimCopy(result_2936021432, some_2969567458(HEX5BHEX5D_2969567316(undoOp_2936021451.parent, subInt(undoOp_2936021451.idx, 1))), NTI2969567351);
      break BeforeRet;
      }
      }
      result_2936021432 = nimCopy(result_2936021432, some_2969567458(undoOp_2936021451.parent), NTI2969567351);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym148_2936021492 = getSymbol_2986407811(ctx_2936012855, undoOp_2936021451.id);
        if (!isSome_3070232129(oHEX60gensym148_2936021492)) Temporary1 = false; else {          var symbol_2936021515 = get_3070232149(oHEX60gensym148_2936021492);
          Temporary1 = true;        }      if (Temporary1) {
      document_2936021430.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2936021451.id, NTI2046820355), text: nimCopy(null, symbol_2936021515.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2936021515.name = nimCopy(null, undoOp_2936021451.text, NTI33554449);
      if ((symbol_2936021515.kind == 0)) {
      var Temporary2 = symbol_2936021515;
      if (ConstSet175[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      Temporary2.node.text = nimCopy(null, symbol_2936021515.name, NTI33554449);
      var Temporary3 = symbol_2936021515;
      if (ConstSet176[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      updateNode_2986457136(ctx_2936012855, Temporary3.node);
      }
      
      notifySymbolChanged_2986456568(ctx_2936012855, symbol_2936021515);
      }
      
      break;
    case 3:
      document_2936021430.redoOps.push({kind: 3, node: undoOp_2936021451.node, text: nimCopy(null, undoOp_2936021451.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2936021451.node.text = nimCopy(null, undoOp_2936021451.text, NTI33554449);
      updateNode_2986457136(ctx_2936012855, undoOp_2936021451.node);
      break;
    }
    result_2936021432 = nimCopy(result_2936021432, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021432;

}

function undo_2936025114(self_2936025115) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025115)) {
    break BeforeRet;
    }
    
    finishEdit_2936020734(self_2936025115, false);
      var oHEX60gensym650_2936025118 = undo_2936021429(self_2936025115.document);
      if (!isSome_2969569114(oHEX60gensym650_2936025118)) Temporary1 = false; else {        var node_2936025141 = get_2969569134(oHEX60gensym650_2936025118);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936016604(self_2936025115, node_2936025141);
    }
    
  };

  
}

function undoJsWrapper2_2936025110(self_2936025169) {
    undo_2936025114(self_2936025169);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2936025110(this));};

function redo_2936021530(document_2936021531) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2936021533 = ({val: null});

  BeforeRet: {
    if (((document_2936021531.redoOps).length == 0)) {
    result_2936021533 = nimCopy(result_2936021533, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var redoOp_2936021542 = pop_2936021439(document_2936021531, "redoOps");
    var fmtRes_2936021547 = [mnewString(0)];
    fmtRes_2936021547[0].push.apply(fmtRes_2936021547[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2936021457(fmtRes_2936021547, 0, redoOp_2936021542, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021547[0], NTI33554449)]);
    switch (redoOp_2936021542.kind) {
    case 0:
      document_2936021531.undoOps.push({kind: 0, parent: redoOp_2936021542.parent, idx: redoOp_2936021542.idx, node: redoOp_2936021542.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2936019035(document_2936021531, HEX5BHEX5D_2969567316(redoOp_2936021542.parent, redoOp_2936021542.idx));
      var _ = delete_2969567500(redoOp_2936021542.parent, redoOp_2936021542.idx);
      if ((redoOp_2936021542.idx < len_2969567320(redoOp_2936021542.parent))) {
      result_2936021533 = nimCopy(result_2936021533, some_2969567458(HEX5BHEX5D_2969567316(redoOp_2936021542.parent, redoOp_2936021542.idx)), NTI2969567351);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2936021542.idx)) {
      result_2936021533 = nimCopy(result_2936021533, some_2969567458(HEX5BHEX5D_2969567316(redoOp_2936021542.parent, subInt(redoOp_2936021542.idx, 1))), NTI2969567351);
      break BeforeRet;
      }
      }
      result_2936021533 = nimCopy(result_2936021533, some_2969567458(redoOp_2936021542.parent), NTI2969567351);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2936021566 = HEX5BHEX5D_2969567316(redoOp_2936021542.parent, redoOp_2936021542.idx);
      handleNodeDelete_2936019035(document_2936021531, HEX5BHEX5D_2969567316(redoOp_2936021542.parent, redoOp_2936021542.idx));
      HEX5BHEX5DHEX3D_2969567496(redoOp_2936021542.parent, redoOp_2936021542.idx, redoOp_2936021542.node);
      handleNodeInserted_2936017460(document_2936021531, redoOp_2936021542.node);
      document_2936021531.undoOps.push({kind: 1, parent: redoOp_2936021542.parent, idx: redoOp_2936021542.idx, node: oldNode_2936021566, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2936021533 = nimCopy(result_2936021533, some_2969567458(redoOp_2936021542.node), NTI2969567351);
      break BeforeRet;
      break;
    case 2:
      insert_2969567286(redoOp_2936021542.parent, redoOp_2936021542.node, redoOp_2936021542.idx);
      handleNodeInserted_2936017460(document_2936021531, redoOp_2936021542.node);
      document_2936021531.undoOps.push(redoOp_2936021542);;
      result_2936021533 = nimCopy(result_2936021533, some_2969567458(redoOp_2936021542.node), NTI2969567351);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2936021583 = getSymbol_2986407811(ctx_2936012855, redoOp_2936021542.id);
        if (!isSome_3070232129(oHEX60gensym151_2936021583)) Temporary1 = false; else {          var symbol_2936021606 = get_3070232149(oHEX60gensym151_2936021583);
          Temporary1 = true;        }      if (Temporary1) {
      document_2936021531.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2936021542.id, NTI2046820355), text: nimCopy(null, symbol_2936021606.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2936021606.name = nimCopy(null, redoOp_2936021542.text, NTI33554449);
      if ((symbol_2936021606.kind == 0)) {
      var Temporary2 = symbol_2936021606;
      if (ConstSet177[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      Temporary2.node.text = nimCopy(null, symbol_2936021606.name, NTI33554449);
      var Temporary3 = symbol_2936021606;
      if (ConstSet178[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      updateNode_2986457136(ctx_2936012855, Temporary3.node);
      }
      
      notifySymbolChanged_2986456568(ctx_2936012855, symbol_2936021606);
      }
      
      break;
    case 3:
      document_2936021531.undoOps.push({kind: 3, node: redoOp_2936021542.node, text: nimCopy(null, redoOp_2936021542.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2936021542.node.text = nimCopy(null, redoOp_2936021542.text, NTI33554449);
      updateNode_2986457136(ctx_2936012855, redoOp_2936021542.node);
      break;
    }
    result_2936021533 = nimCopy(result_2936021533, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021533;

}

function redo_2936025191(self_2936025192) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025192)) {
    break BeforeRet;
    }
    
    finishEdit_2936020734(self_2936025192, false);
      var oHEX60gensym659_2936025195 = redo_2936021530(self_2936025192.document);
      if (!isSome_2969569114(oHEX60gensym659_2936025195)) Temporary1 = false; else {        var node_2936025218 = get_2969569134(oHEX60gensym659_2936025195);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936016604(self_2936025192, node_2936025218);
    }
    
  };

  
}

function redoJsWrapper2_2936025187(self_2936025246) {
    redo_2936025191(self_2936025246);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2936025187(this));};

function canInsertInto_2936023848(self_2936023849, parent_2936023850) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2936023851 = false;

  BeforeRet: {
    switch (parent_2936023850.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2936023851 = false;
      break BeforeRet;
      break;
    case 4:
      result_2936023851 = (len_2969567320(parent_2936023850) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2936023851 = (len_2969567320(parent_2936023850) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2936023851 = (len_2969567320(parent_2936023850) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2936023851 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2969567320(parent_2936023850) == 0)) {
      result_2936023851 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym526_2936023854 = computeSymbol_2986424640(ctx_2936012855, HEX5BHEX5D_2969567316(parent_2936023850, 0), true);
        if (!isSome_3070232129(oHEX60gensym526_2936023854)) Temporary1 = false; else {          var sym_2936023877 = get_3070232149(oHEX60gensym526_2936023854);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2936023877.kind == 1)) {
      var Temporary2 = sym_2936023877;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2936023851 = (len_2969567320(parent_2936023850) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2936023851 = (len_2969567320(parent_2936023850) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2936023882 = computeType_2986418034(ctx_2936012855, HEX5BHEX5D_2969567316(parent_2936023850, 0), true);
      if ((typ_2936023882.kind == 4)) {
        var Temporary4 = typ_2936023882;
        if (ConstSet180[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2936023882;
          if (ConstSet181[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
          var Temporary6 = typ_2936023882;
          if (ConstSet182[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
          Temporary3 = HEX3DHEX3D_3070231086((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3070230961(true));        }      if (Temporary3) {
      result_2936023851 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2936023882;
      if (ConstSet183[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230531)); }
      result_2936023851 = (len_2969567320(parent_2936023850) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2936023851 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2936023851;

}

function some_2936021661(val_2936021663) {
  var result_2936021664 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2936021664.has = true;
    result_2936021664.val = nimCopy(result_2936021664.val, val_2936021663, NTI2936017889);

  return result_2936021664;

}

function none_2936021675() {
  var result_2936021682 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2936021682;

}

function none_2936022162() {
  var result_2936022164 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2936022164 = nimCopy(result_2936022164, none_2936021675(), NTI2936017894);

  return result_2936022164;

}

function createNodeFromAction_2936021621(editor_2936021622, arg_2936021623, node_2936021624, typ_2936021625) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2936021631 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2936021623)) {
    case "deleted":
        var oHEX60gensym152_2936021634 = nimCopy(null, editor_2936021622.deletedNode, NTI2969567351);
        if (!isSome_2969569114(oHEX60gensym152_2936021634)) Temporary1 = false; else {          var node_2936021657 = get_2969569134(oHEX60gensym152_2936021634);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2936021622.deletedNode = nimCopy(editor_2936021622.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936021657)), NTI2969567351);
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936021657, Field1: 0}), NTI2936017894);
      break BeforeRet;
      }
      
      result_2936021631 = nimCopy(result_2936021631, none_2936021675(), NTI2936017894);
      break BeforeRet;
      break;
    case "empty":
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: {kind: 0, id: newId_2046820569(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "identifier":
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "number-literal":
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym153_2936021696 = null;
        Label3: {
          var res_2936021766 = null;
          res_2936021766 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936021766.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936021766.id = nimCopy(res_2936021766.id, newId_2046820569(), NTI2046820355);
          Label5: {
            Label6: {
              var res_2936021769 = null;
              res_2936021769 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936021769.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936021766, res_2936021769);
        };
      };
      var node_2936021788 = res_2936021766;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936021788, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym160_2936021796 = null;
        Label9: {
          var res_2936021802 = null;
          res_2936021802 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936021802.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936021802.id = nimCopy(res_2936021802.id, newId_2046820569(), NTI2046820355);
          Label11: {
            Label12: {
              var res_2936021805 = null;
              res_2936021805 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936021805.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936021802, res_2936021805);
            Label14: {
              var res_2936021807 = null;
              res_2936021807 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936021807.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936021802, res_2936021807);
          };
        };
      };
      var node_2936021835 = res_2936021802;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936021835, Field1: 1}), NTI2936017894);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym170_2936021843 = null;
        Label17: {
          var res_2936021849 = null;
          res_2936021849 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936021849.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936021849.id = nimCopy(res_2936021849.id, newId_2046820569(), NTI2046820355);
          Label19: {
            Label20: {
              var res_2936021852 = null;
              res_2936021852 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936021852.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936021849, res_2936021852);
            Label22: {
              var res_2936021854 = null;
              res_2936021854 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936021854.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936021849, res_2936021854);
          };
        };
      };
      var node_2936021882 = res_2936021849;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936021882, Field1: 1}), NTI2936017894);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2936021886 = computeSymbol_2986424640(ctx_2936012855, node_2936021624, true);
        var oHEX60gensym180_2936021889 = nimCopy(null, sym_2936021886, NTI3070231688);
        if (!isSome_3070232129(oHEX60gensym180_2936021889)) Temporary26 = false; else {          var sym_2936021912 = get_3070232149(oHEX60gensym180_2936021889);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2936021912.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2936021912;
      if (ConstSet184[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230537)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2936021917 = Temporary24;
      switch (kind_2936021917) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym181_2936021922 = null;
          Label30: {
            var res_2936021928 = null;
            res_2936021928 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936021928.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2936021930 = null;
                res_2936021930 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936021930.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936021928, res_2936021930);
              Label35: {
                var res_2936021932 = null;
                res_2936021932 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936021932.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936021928, res_2936021932);
            };
          };
        };
        Temporary28 = res_2936021928;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym191_2936021964 = null;
          Label38: {
            var res_2936021970 = null;
            res_2936021970 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936021970.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2936021972 = null;
                res_2936021972 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936021972.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936021970, res_2936021972);
              Label43: {
                var res_2936021974 = null;
                res_2936021974 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936021974.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936021970, res_2936021974);
              Label45: {
                var res_2936021976 = null;
                res_2936021976 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936021976.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936021970, res_2936021976);
            };
          };
        };
        Temporary28 = res_2936021970;
        break;
      case 0:
        var typ_2936022013 = computeType_2986418034(ctx_2936012855, node_2936021624, true);
        if ((typ_2936022013.kind == 0)) {
        Label48: {
          var tmpHEX60gensym204_2936022022 = null;
          Label49: {
            var res_2936022028 = null;
            res_2936022028 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022028.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2936022030 = null;
                res_2936022030 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022030.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022028, res_2936022030);
              Label54: {
                var res_2936022032 = null;
                res_2936022032 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022032.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022028, res_2936022032);
              Label56: {
                var res_2936022034 = null;
                res_2936022034 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022034.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022028, res_2936022034);
            };
          };
        };
        Temporary47 = res_2936022028;
        }
        else {
        if (!((typ_2936022013.kind == 4))) {
        Label58: {
          var tmpHEX60gensym218_2936022079 = null;
          Label59: {
            var res_2936022085 = null;
            res_2936022085 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022085.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2936022087 = null;
                res_2936022087 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022087.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2969567270(res_2936022085, res_2936022087);
          };
        };
        Temporary47 = res_2936022085;
        }
        else {
          Label64: {
            var tmpHEX60gensym225_2936022110 = null;
            Label65: {
              var res_2936022116 = null;
              res_2936022116 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022116.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2936022118 = null;
                  res_2936022118 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2936022118.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2969567270(res_2936022116, res_2936022118);
            };
          };
          var newNode_2936022137 = res_2936022116;
          Label70: {
            var __2936022141 = null;
            var colontmp__2936025501 = [];
            var Temporary71 = typ_2936022013;
            if (ConstSet185[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3070230531)); }
            colontmp__2936025501 = Temporary71.paramTypes;
            var i_2936025502 = 0;
            var L_2936025503 = (colontmp__2936025501).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2936025502 < L_2936025503)) break Label73;
                  __2936022141 = colontmp__2936025501[chckIndx(i_2936025502, 0, (colontmp__2936025501).length - 1)];
                  Label74: {
                    var tmpHEX60gensym232_2936022146 = null;
                    Label75: {
                      var res_2936022152 = null;
                      res_2936022152 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2936022152.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2969567270(newNode_2936022137, res_2936022152);
                  i_2936025502 = addInt(i_2936025502, 1);
                  if (!(((colontmp__2936025501).length == L_2936025503))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2936022137;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2936021631 = nimCopy(result_2936021631, none_2936022162(), NTI2936017894);
        break BeforeRet;
        break;
      }
      var node_2936022181 = Temporary28;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022181, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym236_2936022189 = null;
        Label78: {
          var res_2936022195 = null;
          res_2936022195 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022195.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2936022197 = null;
              res_2936022197 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022197.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022195, res_2936022197);
            Label83: {
              var res_2936022199 = null;
              res_2936022199 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022199.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022195, res_2936022199);
          };
        };
      };
      var node_2936022227 = res_2936022195;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022227, Field1: 1}), NTI2936017894);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2936021625.kind == 2)) {
      Temporary85 = IdAppendString_2952790027;
      }
      else {
      Temporary85 = IdAdd_2952790019;
      }
      
      var operator_2936022235 = nimCopy(null, Temporary85, NTI2046820355);
      Label86: {
        var tmpHEX60gensym246_2936022240 = null;
        Label87: {
          var res_2936022246 = null;
          res_2936022246 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022246.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2936022248 = null;
              res_2936022248 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022248.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022248.reff = nimCopy(res_2936022248.reff, operator_2936022235, NTI2046820355);
            };
            add_2969567270(res_2936022246, res_2936022248);
            Label92: {
              var res_2936022251 = null;
              res_2936022251 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022251.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022246, res_2936022251);
            Label94: {
              var res_2936022253 = null;
              res_2936022253 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022253.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022246, res_2936022253);
          };
        };
      };
      var node_2936022290 = res_2936022246;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022290, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym259_2936022298 = null;
        Label97: {
          var res_2936022304 = null;
          res_2936022304 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022304.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2936022306 = null;
              res_2936022306 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022306.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022306.reff = nimCopy(res_2936022306.reff, IdSub_2952790020, NTI2046820355);
            };
            add_2969567270(res_2936022304, res_2936022306);
            Label102: {
              var res_2936022309 = null;
              res_2936022309 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022309.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022304, res_2936022309);
            Label104: {
              var res_2936022311 = null;
              res_2936022311 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022311.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022304, res_2936022311);
          };
        };
      };
      var node_2936022348 = res_2936022304;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022348, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym272_2936022356 = null;
        Label107: {
          var res_2936022362 = null;
          res_2936022362 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022362.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2936022364 = null;
              res_2936022364 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022364.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022364.reff = nimCopy(res_2936022364.reff, IdMul_2952790021, NTI2046820355);
            };
            add_2969567270(res_2936022362, res_2936022364);
            Label112: {
              var res_2936022367 = null;
              res_2936022367 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022367.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022362, res_2936022367);
            Label114: {
              var res_2936022369 = null;
              res_2936022369 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022369.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022362, res_2936022369);
          };
        };
      };
      var node_2936022406 = res_2936022362;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022406, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym285_2936022414 = null;
        Label117: {
          var res_2936022420 = null;
          res_2936022420 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022420.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2936022422 = null;
              res_2936022422 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022422.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022422.reff = nimCopy(res_2936022422.reff, IdDiv_2952790022, NTI2046820355);
            };
            add_2969567270(res_2936022420, res_2936022422);
            Label122: {
              var res_2936022425 = null;
              res_2936022425 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022425.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022420, res_2936022425);
            Label124: {
              var res_2936022427 = null;
              res_2936022427 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022427.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022420, res_2936022427);
          };
        };
      };
      var node_2936022464 = res_2936022420;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022464, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym298_2936022472 = null;
        Label127: {
          var res_2936022478 = null;
          res_2936022478 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022478.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2936022480 = null;
              res_2936022480 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022480.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022480.reff = nimCopy(res_2936022480.reff, IdMod_2952790023, NTI2046820355);
            };
            add_2969567270(res_2936022478, res_2936022480);
            Label132: {
              var res_2936022483 = null;
              res_2936022483 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022483.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022478, res_2936022483);
            Label134: {
              var res_2936022485 = null;
              res_2936022485 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022485.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022478, res_2936022485);
          };
        };
      };
      var node_2936022522 = res_2936022478;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022522, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym311_2936022530 = null;
        Label137: {
          var res_2936022536 = null;
          res_2936022536 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022536.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936022536.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2936022547 = res_2936022536;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022547, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym315_2936022555 = null;
        Label140: {
          var res_2936022561 = null;
          res_2936022561 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022561.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2936022563 = null;
              res_2936022563 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022563.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936022561, res_2936022563);
        };
      };
      var node_2936022582 = res_2936022561;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022582, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym322_2936022590 = null;
        Label146: {
          var res_2936022596 = null;
          res_2936022596 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022596.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2936022598 = null;
              res_2936022598 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022598.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022596, res_2936022598);
            Label151: {
              var res_2936022600 = null;
              res_2936022600 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022600.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022596, res_2936022600);
          };
        };
      };
      var node_2936022628 = res_2936022596;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022628, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym332_2936022636 = null;
        Label154: {
          var res_2936022642 = null;
          res_2936022642 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022642.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2936022644 = null;
              res_2936022644 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022644.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022644.reff = nimCopy(res_2936022644.reff, IdEqual_2952790035, NTI2046820355);
            };
            add_2969567270(res_2936022642, res_2936022644);
            Label159: {
              var res_2936022647 = null;
              res_2936022647 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022647.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022642, res_2936022647);
            Label161: {
              var res_2936022649 = null;
              res_2936022649 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022649.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022642, res_2936022649);
          };
        };
      };
      var node_2936022686 = res_2936022642;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022686, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym345_2936022694 = null;
        Label164: {
          var res_2936022700 = null;
          res_2936022700 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022700.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2936022702 = null;
              res_2936022702 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022702.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022702.reff = nimCopy(res_2936022702.reff, IdNotEqual_2952790036, NTI2046820355);
            };
            add_2969567270(res_2936022700, res_2936022702);
            Label169: {
              var res_2936022705 = null;
              res_2936022705 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022705.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022700, res_2936022705);
            Label171: {
              var res_2936022707 = null;
              res_2936022707 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022707.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022700, res_2936022707);
          };
        };
      };
      var node_2936022744 = res_2936022700;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022744, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym358_2936022752 = null;
        Label174: {
          var res_2936022758 = null;
          res_2936022758 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022758.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2936022760 = null;
              res_2936022760 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022760.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022760.reff = nimCopy(res_2936022760.reff, IdLessEqual_2952790032, NTI2046820355);
            };
            add_2969567270(res_2936022758, res_2936022760);
            Label179: {
              var res_2936022763 = null;
              res_2936022763 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022763.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022758, res_2936022763);
            Label181: {
              var res_2936022765 = null;
              res_2936022765 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022765.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022758, res_2936022765);
          };
        };
      };
      var node_2936022802 = res_2936022758;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022802, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym371_2936022810 = null;
        Label184: {
          var res_2936022816 = null;
          res_2936022816 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022816.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2936022818 = null;
              res_2936022818 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022818.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022818.reff = nimCopy(res_2936022818.reff, IdGreaterEqual_2952790034, NTI2046820355);
            };
            add_2969567270(res_2936022816, res_2936022818);
            Label189: {
              var res_2936022821 = null;
              res_2936022821 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022821.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022816, res_2936022821);
            Label191: {
              var res_2936022823 = null;
              res_2936022823 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022823.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022816, res_2936022823);
          };
        };
      };
      var node_2936022860 = res_2936022816;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022860, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym384_2936022868 = null;
        Label194: {
          var res_2936022874 = null;
          res_2936022874 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022874.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2936022876 = null;
              res_2936022876 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022876.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022876.reff = nimCopy(res_2936022876.reff, IdLess_2952790031, NTI2046820355);
            };
            add_2969567270(res_2936022874, res_2936022876);
            Label199: {
              var res_2936022879 = null;
              res_2936022879 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022879.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022874, res_2936022879);
            Label201: {
              var res_2936022881 = null;
              res_2936022881 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022881.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022874, res_2936022881);
          };
        };
      };
      var node_2936022918 = res_2936022874;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022918, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym397_2936022926 = null;
        Label204: {
          var res_2936022932 = null;
          res_2936022932 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022932.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2936022934 = null;
              res_2936022934 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022934.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022934.reff = nimCopy(res_2936022934.reff, IdGreater_2952790033, NTI2046820355);
            };
            add_2969567270(res_2936022932, res_2936022934);
            Label209: {
              var res_2936022937 = null;
              res_2936022937 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022937.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022932, res_2936022937);
            Label211: {
              var res_2936022939 = null;
              res_2936022939 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022939.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022932, res_2936022939);
          };
        };
      };
      var node_2936022976 = res_2936022932;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936022976, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym410_2936022984 = null;
        Label214: {
          var res_2936022990 = null;
          res_2936022990 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022990.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2936022992 = null;
              res_2936022992 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022992.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022992.reff = nimCopy(res_2936022992.reff, IdOrder_2952790039, NTI2046820355);
            };
            add_2969567270(res_2936022990, res_2936022992);
            Label219: {
              var res_2936022995 = null;
              res_2936022995 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022995.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022990, res_2936022995);
            Label221: {
              var res_2936022997 = null;
              res_2936022997 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022997.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022990, res_2936022997);
          };
        };
      };
      var node_2936023034 = res_2936022990;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936023034, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym423_2936023042 = null;
        Label224: {
          var res_2936023048 = null;
          res_2936023048 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023048.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2936023050 = null;
              res_2936023050 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023050.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023050.reff = nimCopy(res_2936023050.reff, IdAnd_2952790037, NTI2046820355);
            };
            add_2969567270(res_2936023048, res_2936023050);
            Label229: {
              var res_2936023053 = null;
              res_2936023053 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023053.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023048, res_2936023053);
            Label231: {
              var res_2936023055 = null;
              res_2936023055 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023055.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023048, res_2936023055);
          };
        };
      };
      var node_2936023092 = res_2936023048;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936023092, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym436_2936023100 = null;
        Label234: {
          var res_2936023106 = null;
          res_2936023106 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023106.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2936023108 = null;
              res_2936023108 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023108.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023108.reff = nimCopy(res_2936023108.reff, IdOr_2952790038, NTI2046820355);
            };
            add_2969567270(res_2936023106, res_2936023108);
            Label239: {
              var res_2936023111 = null;
              res_2936023111 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023111.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023106, res_2936023111);
            Label241: {
              var res_2936023113 = null;
              res_2936023113 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023113.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023106, res_2936023113);
          };
        };
      };
      var node_2936023150 = res_2936023106;
      result_2936021631 = nimCopy(result_2936021631, some_2936021661({Field0: node_2936023150, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    default: 
      result_2936021631 = nimCopy(result_2936021631, none_2936022162(), NTI2936017894);
      break BeforeRet;
      break;
    }
  };

  return result_2936021631;

}

function isSome_2936025280(self_2936025282) {
  var result_2936025283 = false;

    result_2936025283 = self_2936025282.has;

  return result_2936025283;

}

function isNone_2936025305(self_2936025307) {
  var result_2936025308 = false;

    result_2936025308 = !(self_2936025307.has);

  return result_2936025308;

}

function get_2936025297(self_2936025299) {
  var result_2936025300 = {Field0: null, Field1: 0};

    if (isNone_2936025305(self_2936025299)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2936025300 = self_2936025299.val;

  return result_2936025300;

}

function insertNode_2936019029(document_2936019030, node_2936019031, index_2936019032, newNode_2936019033) {
  var result_2936021393 = ({val: null});

  BeforeRet: {
    var node_2936021394 = node_2936019031;
    var index_2936021395 = index_2936019032;
    if ((node_2936021394 == null)) {
    node_2936021394 = document_2936019030.rootNode;
    index_2936021395 = 0;
    }
    
    document_2936019030.undoOps.push({kind: 2, parent: node_2936021394, idx: index_2936021395, node: newNode_2936019033, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936019030.redoOps = nimCopy(null, [], NTI2936017595);
    insert_2969567286(node_2936021394, newNode_2936019033, index_2936021395);
    handleNodeInserted_2936017460(document_2936019030, newNode_2936019033);
    result_2936021393 = nimCopy(result_2936021393, some_2969567458(newNode_2936019033), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021393;

}

function shouldEditNode_2936023500(doc_2936023501, node_2936023502) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2936023503 = false;

  BeforeRet: {
    if (((node_2936023502.kind == 0) && eqStrings(node_2936023502.text, []))) {
    result_2936023503 = true;
    break BeforeRet;
    }
    
    if (((node_2936023502.kind == 2) && eqStrings(node_2936023502.text, []))) {
    result_2936023503 = true;
    break BeforeRet;
    }
    
    if ((node_2936023502.kind == 4)) {
    var oHEX60gensym519_2936023518 = computeSymbol_2986424640(ctx_2936012855, node_2936023502, true);
    if (!isSome_3070232129(oHEX60gensym519_2936023518)) Temporary2 = false; else {      var symbol_2936023541 = get_3070232149(oHEX60gensym519_2936023518);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2936023541.name, []);    }    result_2936023503 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2936023502.kind == 5)) {
    var oHEX60gensym520_2936023548 = computeSymbol_2986424640(ctx_2936012855, node_2936023502, true);
    if (!isSome_3070232129(oHEX60gensym520_2936023548)) Temporary4 = false; else {      var symbol_2936023571 = get_3070232149(oHEX60gensym520_2936023548);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2936023571.name, []);    }    result_2936023503 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2936023502.kind == 6)) {
    var oHEX60gensym521_2936023578 = computeSymbol_2986424640(ctx_2936012855, node_2936023502, true);
    if (!isSome_3070232129(oHEX60gensym521_2936023578)) Temporary6 = false; else {      var symbol_2936023601 = get_3070232149(oHEX60gensym521_2936023578);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2936023601.name, []);    }    result_2936023503 = Temporary5;
    break BeforeRet;
    }
    
    result_2936023503 = false;
    break BeforeRet;
  };

  return result_2936023503;

}

function formatValue_2936020323(result_2936020325, result_2936020325_Idx, value_2936020326, specifier_2936020327) {
    formatValue_721420459(result_2936020325, result_2936020325_Idx, reprEnum(value_2936020326, NTI3070230537), specifier_2936020327);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2936025606 = 0;
      var last_2936025607 = 0;
      var eolpos_2936025608 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2936025607 < (s_855638695).length) && !((ConstSet187[s_855638695[chckIndx(last_2936025607, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2936025607 = addInt(last_2936025607, 1);
                }
            };
            eolpos_2936025608 = last_2936025607;
            if ((last_2936025607 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2936025607, 0, (s_855638695).length - 1)] == 10)) {
            last_2936025607 = addInt(last_2936025607, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2936025607, 0, (s_855638695).length - 1)] == 13)) {
            last_2936025607 = addInt(last_2936025607, 1);
            if (((last_2936025607 < (s_855638695).length) && (s_855638695[chckIndx(last_2936025607, 0, (s_855638695).length - 1)] == 10))) {
            last_2936025607 = addInt(last_2936025607, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2936025607, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2936025608, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2936025606, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2936025608 == last_2936025607)) {
            break Label2;
            }
            
            first_2936025606 = last_2936025607;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2801796630(self_2801796631, value_2801796632) {
    if (self_2801796631.singleLine) {
    self_2801796631.lines = nimCopy(null, [nsuReplaceStr(value_2801796632, [10], [])], NTI1560281203);
    if (((self_2801796631.lines).length == 0)) {
    self_2801796631.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2801796631.tsParser == null))) {
    self_2801796631.currentTree = parseString_2868903995(self_2801796631.tsParser, self_2801796631.lines[chckIndx(0, 0, (self_2801796631.lines).length - 1)], none_2868904002());
    }
    
    }
    else {
      self_2801796631.lines = nimCopy(null, nsuSplitLines(value_2801796632, false), NTI855638530);
      if (((self_2801796631.lines).length == 0)) {
      self_2801796631.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2801796631.tsParser == null))) {
      self_2801796631.currentTree = parseString_2868903995(self_2801796631.tsParser, value_2801796632, none_2868904002());
      }
      
    }
    
    self_2801796631.version = addInt(self_2801796631.version, 1);
    notifyTextChanged_2801795996(self_2801796631);

  
}

function newTextDocument_2801801429(filename_2801801431, content_2801801432, app_2801801433) {
  var result_2801801434 = null;

    result_2801801434 = ({m_type: NTI2801795211, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_2801801438 = result_2801801434;
    self_2801801438.filename = nimCopy(null, filename_2801801431, NTI33554449);
    self_2801801438.currentTree = null;
    self_2801801438.appFile = app_2801801433;
    var _ = initTreesitter_2801801211(self_2801801438);
    var language_2801801439 = getLanguageForFile_2885681156(filename_2801801431);
    if (isSome_2315255872(language_2801801439)) {
    self_2801801438.languageId = nimCopy(null, get_2801801248(language_2801801439), NTI33554449);
    }
    
    contentHEX3D_2801796630(self_2801801438, content_2801801432);

  return result_2801801434;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2801796671(self_2801796672, value_2801796673) {
    if (self_2801796672.singleLine) {
    self_2801796672.lines = nimCopy(null, [nsuJoinSep(value_2801796673, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2801796735 = 0;
        var resultHEX60gensym22_2801796742 = newSeq_503316959(chckRange((value_2801796673).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2801796746 = [];
          var i_2936025613 = 0;
          var L_2936025614 = (value_2801796673).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2936025613 < L_2936025614)) break Label4;
                itHEX60gensym22_2801796746 = value_2801796673[chckIndx(i_2936025613, 0, (value_2801796673).length - 1)];
                resultHEX60gensym22_2801796742[chckIndx(iHEX60gensym22_2801796735, 0, (resultHEX60gensym22_2801796742).length - 1)] = nimCopy(null, itHEX60gensym22_2801796746, NTI33554449);
                iHEX60gensym22_2801796735 = addInt(iHEX60gensym22_2801796735, 1);
                i_2936025613 = addInt(i_2936025613, 1);
                if (!(((value_2801796673).length == L_2936025614))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2801796672.lines = nimCopy(null, resultHEX60gensym22_2801796742, NTI503316776);
    }
    
    if (((self_2801796672.lines).length == 0)) {
    self_2801796672.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2801796758 = nsuJoinSep(value_2801796673, [10]);
    if (!((self_2801796672.tsParser == null))) {
    self_2801796672.currentTree = parseString_2868903995(self_2801796672.tsParser, strValue_2801796758, none_2868904002());
    }
    
    self_2801796672.version = addInt(self_2801796672.version, 1);
    notifyTextChanged_2801795996(self_2801796672);

  
}

function createTextEditorInstance_2801813744() {
  var result_2801813745 = null;

  BeforeRet: {
    var editor_2801813750 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2415919597({Field0: 0, Field1: 0}), NTI2415919115)], m_type: NTI2801795294, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2801813750 = createWithPrototype(editor_text_prototype, editor_2801813750);
    result_2801813745 = editor_2801813750;
    break BeforeRet;
  };

  return result_2801813745;

}

function newEditorId_2415919419() {
  var result_2415919420 = 0;

    result_2415919420 = nextEditorId_2415919418[0];
    nextEditorId_2415919418[0] = addInt(nextEditorId_2415919418[0], 1);

  return result_2415919420;

}

function init_2382364705(self_2382364706) {
    self_2382364706.id = newEditorId_2415919419();
    self_2382364706.renderHeader = true;
    self_2382364706.fillAvailableSpace = true;

  
}

function subscribe_2801813808(event_2801813810, callback_2801813812) {
  var result_2801813813 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2801813813 = nimCopy(result_2801813813, newId_2046820569(), NTI2046820355);
    event_2801813810.handlers.push({Field0: nimCopy(null, result_2801813813, NTI2046820355), Field1: callback_2801813812});;

  return result_2801813813;

}

function clampSelection_2801795994(self_2801795995) {
    selectionsHEX3D_2801795833(self_2801795995, clampAndMergeSelections_2801795570(self_2801795995, self_2801795995.selectionsInternal));
    markDirty_2382364710(self_2801795995);

  
}

function handleTextDocumentTextChanged_2801813742(self_2801813743) {
    clampSelection_2801795994(self_2801813743);
    updateSearchResults_2801802635(self_2801813743);
    markDirty_2382364710(self_2801813743);

  
}

function newTextEditor_2801813760(document_2801813761, ed_2801813762) {
    
function HEX3Aanonymous_2801813783(__2801813784) {
        handleTextDocumentTextChanged_2801813742(editor_2801813764);

      
    }

  var result_2801813763 = null;

  BeforeRet: {
    var editor_2801813764 = createTextEditorInstance_2801813744();
    editor_2801813764.document = document_2801813761;
    init_2382364705(editor_2801813764);
    if (((editor_2801813764.document.lines).length == 0)) {
    editor_2801813764.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847760(editor_2801813764, ed_2801813762);
    var _ = subscribe_2801813808(document_2801813761.textChanged, HEX3Aanonymous_2801813783);
    result_2801813763 = editor_2801813764;
    break BeforeRet;
  };

  return result_2801813763;

}

function some_3154117142(val_3154117144) {
  var result_3154117145 = ({val: 0, has: false});

    result_3154117145.has = true;
    result_3154117145.val = val_3154117144;

  return result_3154117145;

}

function handleTextDocumentChanged_2936020306(self_2936020307) {
    updateCompletions_2936015469(self_2936020307);

  
}

function editSymbol_2936020315(self_2936020316, symbol_2936020317) {
    var Temporary1;
    
function HEX3Aanonymous_2936020373(doc_2936020374) {
        handleTextDocumentChanged_2936020306(self_2936020316);

      
    }

    var fmtRes_2936020322 = [mnewString(0)];
    fmtRes_2936020322[0].push.apply(fmtRes_2936020322[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2936020322, 0, symbol_2936020317.name, []);
    fmtRes_2936020322[0].push.apply(fmtRes_2936020322[0], [32,40]);;
    formatValue_2936020323(fmtRes_2936020322, 0, symbol_2936020317.kind, []);
    fmtRes_2936020322[0].push.apply(fmtRes_2936020322[0], [44,32]);;
    formatValue_3003121884(fmtRes_2936020322, 0, symbol_2936020317.id, []);
    fmtRes_2936020322[0].push.apply(fmtRes_2936020322[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020322[0], NTI33554449)]);
    if ((symbol_2936020317.kind == 0)) {
    var fmtRes_2936020344 = [mnewString(0)];
    fmtRes_2936020344[0].push.apply(fmtRes_2936020344[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2936020317;
    if (ConstSet186[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
    formatValue_3070231363(fmtRes_2936020344, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020344[0], NTI33554449)]);
    }
    
    self_2936020316.currentlyEditedNode = null;
    self_2936020316.currentlyEditedSymbol = nimCopy(self_2936020316.currentlyEditedSymbol, symbol_2936020317.id, NTI2046820355);
    self_2936020316.textDocument = newTextDocument_2801801429([], [], false);
    contentHEX3D_2801796671(self_2936020316.textDocument, [nimCopy(null, symbol_2936020317.name, NTI33554449)]);
    self_2936020316.textEditor = newTextEditor_2801813760(self_2936020316.textDocument, self_2936020316.editor);
    setMode_2801806301(self_2936020316.textEditor, [105,110,115,101,114,116]);
    self_2936020316.textEditor.renderHeader = false;
    self_2936020316.textEditor.fillAvailableSpace = false;
    self_2936020316.textEditor.lineNumbers = nimCopy(self_2936020316.textEditor.lineNumbers, some_3154117142(0), NTI2801795338);
    var _ = subscribe_2801813808(self_2936020316.textDocument.textChanged, HEX3Aanonymous_2936020373);
    updateCompletions_2936015469(self_2936020316);

  
}

function editNode_2936020403(self_2936020404, node_2936020405) {
    
function HEX3Aanonymous_2936020435(doc_2936020436) {
        handleTextDocumentChanged_2936020306(self_2936020404);

      
    }

    var fmtRes_2936020410 = [mnewString(0)];
    fmtRes_2936020410[0].push.apply(fmtRes_2936020410[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3070231363(fmtRes_2936020410, 0, node_2936020405, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020410[0], NTI33554449)]);
    self_2936020404.currentlyEditedNode = node_2936020405;
    self_2936020404.currentlyEditedSymbol = nimCopy(self_2936020404.currentlyEditedSymbol, null_2046820612, NTI2046820355);
    self_2936020404.textDocument = newTextDocument_2801801429([], [], false);
    contentHEX3D_2801796671(self_2936020404.textDocument, nsuSplitLines(node_2936020405.text, false));
    self_2936020404.textEditor = newTextEditor_2801813760(self_2936020404.textDocument, self_2936020404.editor);
    setMode_2801806301(self_2936020404.textEditor, [105,110,115,101,114,116]);
    self_2936020404.textEditor.renderHeader = false;
    self_2936020404.textEditor.fillAvailableSpace = false;
    self_2936020404.textEditor.lineNumbers = nimCopy(self_2936020404.textEditor.lineNumbers, some_3154117142(0), NTI2801795338);
    var _ = subscribe_2801813808(self_2936020404.textDocument.textChanged, HEX3Aanonymous_2936020435);
    updateCompletions_2936015469(self_2936020404);

  
}

function tryEdit_2936020465(self_2936020466, node_2936020467) {
      var Temporary1;
      var Temporary2;

  var result_2936020468 = false;

  BeforeRet: {
      var oHEX60gensym116_2936020471 = getSymbol_2986407811(ctx_2936012855, node_2936020467.id);
      if (!isSome_3070232129(oHEX60gensym116_2936020471)) Temporary1 = false; else {        var sym_2936020494 = get_3070232149(oHEX60gensym116_2936020471);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2936020315(self_2936020466, sym_2936020494);
    result_2936020468 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym117_2936020497 = getSymbol_2986407811(ctx_2936012855, node_2936020467.reff);
      if (!isSome_3070232129(oHEX60gensym117_2936020497)) Temporary2 = false; else {        var sym_2936020520 = get_3070232149(oHEX60gensym117_2936020497);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2936020315(self_2936020466, sym_2936020520);
    result_2936020468 = true;
    break BeforeRet;
    }
    else {
      switch (node_2936020467.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2936020403(self_2936020466, node_2936020467);
        result_2936020468 = true;
        break BeforeRet;
        break;
      default: 
        result_2936020468 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2936020468;

}

function insertAfterSmart_2936025267(self_2936025268, nodeTemplate_2936025269) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2936025349(n_2936025352) {
        var result_2936025355 = false;

          result_2936025355 = shouldEditNode_2936023500(self_2936025268.document, n_2936025352);

        return result_2936025355;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025268)) {
    break BeforeRet;
    }
    
    var node_2936025270 = node_2936015481(self_2936025268);
    Label1: {
      var next_2936025271 = null;
      if (true) {
      Temporary2 = node_2936025270;
      }
      else {
      Temporary2 = node_2936025270.parent;
      }
      
      var node_2936025438 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2936025438 == null))) break Label4;
            next_2936025271 = node_2936025438;
            if (canInsertInto_2936023848(self_2936025268, next_2936025271.parent)) {
            node_2936025270 = next_2936025271;
            break Label1;
            }
            
            node_2936025438 = node_2936025438.parent;
          }
      };
    };
    var index_2936025272 = index_2969567340(node_2936025270);
      var oHEX60gensym669_2936025275 = createNodeFromAction_2936021621(self_2936025268, nodeTemplate_2936025269, node_2936025270, errorType_3070230904());
      if (!isSome_2936025280(oHEX60gensym669_2936025275)) Temporary5 = false; else {        var newNodeIndex_2936025320 = nimCopy(null, get_2936025297(oHEX60gensym669_2936025275), NTI2936017889);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2936025321 = newNodeIndex_2936025320["Field0"];
    var __2936025322 = newNodeIndex_2936025320["Field1"];
      var oHEX60gensym671_2936025325 = insertNode_2936019029(self_2936025268.document, node_2936025270.parent, addInt(index_2936025272, 1), newNode_2936025321);
      if (!isSome_2969569114(oHEX60gensym671_2936025325)) Temporary6 = false; else {        var node_2936025348 = get_2969569134(oHEX60gensym671_2936025325);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2936016604(self_2936025268, node_2936025348);
    Label7: {
      var __2936025356 = 0;
      var emptyNode_2936025357 = null;
      var colontmp__2936025441 = null;
      colontmp__2936025441 = HEX3Aanonymous_2936025349;
      var i_2936025449 = 0;
      Label8: {
        var __2936025451 = 0;
        var child_2936025452 = null;
        var n_2936025453 = newNode_2936025321;
        var idx_2936025454 = -1;
        var i_2936025455 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2936025454 == -1)) {
              __2936025451 = i_2936025455;
              child_2936025452 = n_2936025453;
              if (colontmp__2936025441(child_2936025452)) {
              __2936025356 = i_2936025449;
              emptyNode_2936025357 = child_2936025452;
              nodeHEX3D_2936016604(self_2936025268, emptyNode_2936025357);
              var _ = tryEdit_2936020465(self_2936025268, node_2936015481(self_2936025268));
              break Label7;
              i_2936025449 = addInt(i_2936025449, 1);
              }
              
              }
              
              if ((addInt(idx_2936025454, 1) < len_2969567320(n_2936025453))) {
              n_2936025453 = HEX5BHEX5D_2969567316(n_2936025453, addInt(idx_2936025454, 1));
              idx_2936025454 = -1;
              }
              else {
                var oHEX60gensym71_2936025457 = next_2969567425(n_2936025453);
                if (!isSome_2969569114(oHEX60gensym71_2936025457)) Temporary13 = false; else {                  var ne_2936025458 = get_2969569134(oHEX60gensym71_2936025457);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2936025453 == newNode_2936025321));                }              if (Temporary12) {
              n_2936025453 = ne_2936025458;
              idx_2936025454 = -1;
              }
              else {
              if (((!((n_2936025453.parent == null)) && !((n_2936025453 == newNode_2936025321))) && !((n_2936025453.parent == newNode_2936025321)))) {
              idx_2936025454 = index_2969567340(n_2936025453);
              n_2936025453 = n_2936025453.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2936025455 = addInt(i_2936025455, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936025362 = [mnewString(0)];
      fmtRes_2936025362[0].push.apply(fmtRes_2936025362[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936025362, 0, newNode_2936025321, []);
      fmtRes_2936025362[0].push.apply(fmtRes_2936025362[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936025362, 0, node_2936015481(self_2936025268).parent, []);
      fmtRes_2936025362[0].push.apply(fmtRes_2936025362[0], [32,97,116,32]);;
      formatValue_2516582756(fmtRes_2936025362, 0, addInt(index_2936025272, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936025362[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2936025263(self_2936025415, nodeTemplate_2936025416) {
    insertAfterSmart_2936025267(self_2936025415, nodeTemplate_2936025416);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2936025263(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2936025622(self_2936025623, nodeTemplate_2936025624) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936025681(n_2936025684) {
        var result_2936025687 = false;

          result_2936025687 = shouldEditNode_2936023500(self_2936025623.document, n_2936025684);

        return result_2936025687;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025623)) {
    break BeforeRet;
    }
    
    var node_2936025625 = node_2936015481(self_2936025623);
    var index_2936025626 = index_2969567340(node_2936025625);
      var oHEX60gensym682_2936025629 = createNodeFromAction_2936021621(self_2936025623, nodeTemplate_2936025624, node_2936025625, errorType_3070230904());
      if (!isSome_2936025280(oHEX60gensym682_2936025629)) Temporary1 = false; else {        var newNodeIndex_2936025652 = nimCopy(null, get_2936025297(oHEX60gensym682_2936025629), NTI2936017889);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936025653 = newNodeIndex_2936025652["Field0"];
    var __2936025654 = newNodeIndex_2936025652["Field1"];
      var oHEX60gensym683_2936025657 = insertNode_2936019029(self_2936025623.document, node_2936025625.parent, addInt(index_2936025626, 1), newNode_2936025653);
      if (!isSome_2969569114(oHEX60gensym683_2936025657)) Temporary2 = false; else {        var node_2936025680 = get_2969569134(oHEX60gensym683_2936025657);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936016604(self_2936025623, node_2936025680);
    Label3: {
      var __2936025688 = 0;
      var emptyNode_2936025689 = null;
      var colontmp__2936025760 = null;
      colontmp__2936025760 = HEX3Aanonymous_2936025681;
      var i_2936025761 = 0;
      Label4: {
        var __2936025763 = 0;
        var child_2936025764 = null;
        var n_2936025765 = newNode_2936025653;
        var idx_2936025766 = -1;
        var i_2936025767 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936025766 == -1)) {
              __2936025763 = i_2936025767;
              child_2936025764 = n_2936025765;
              if (colontmp__2936025760(child_2936025764)) {
              __2936025688 = i_2936025761;
              emptyNode_2936025689 = child_2936025764;
              nodeHEX3D_2936016604(self_2936025623, emptyNode_2936025689);
              var _ = tryEdit_2936020465(self_2936025623, node_2936015481(self_2936025623));
              break Label3;
              i_2936025761 = addInt(i_2936025761, 1);
              }
              
              }
              
              if ((addInt(idx_2936025766, 1) < len_2969567320(n_2936025765))) {
              n_2936025765 = HEX5BHEX5D_2969567316(n_2936025765, addInt(idx_2936025766, 1));
              idx_2936025766 = -1;
              }
              else {
                var oHEX60gensym71_2936025769 = next_2969567425(n_2936025765);
                if (!isSome_2969569114(oHEX60gensym71_2936025769)) Temporary9 = false; else {                  var ne_2936025770 = get_2969569134(oHEX60gensym71_2936025769);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936025765 == newNode_2936025653));                }              if (Temporary8) {
              n_2936025765 = ne_2936025770;
              idx_2936025766 = -1;
              }
              else {
              if (((!((n_2936025765.parent == null)) && !((n_2936025765 == newNode_2936025653))) && !((n_2936025765.parent == newNode_2936025653)))) {
              idx_2936025766 = index_2969567340(n_2936025765);
              n_2936025765 = n_2936025765.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936025767 = addInt(i_2936025767, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936025694 = [mnewString(0)];
      fmtRes_2936025694[0].push.apply(fmtRes_2936025694[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936025694, 0, newNode_2936025653, []);
      fmtRes_2936025694[0].push.apply(fmtRes_2936025694[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936025694, 0, node_2936015481(self_2936025623).parent, []);
      fmtRes_2936025694[0].push.apply(fmtRes_2936025694[0], [32,97,116,32]);;
      formatValue_2516582756(fmtRes_2936025694, 0, addInt(index_2936025626, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936025694[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2936025618(self_2936025738, nodeTemplate_2936025739) {
    insertAfter_2936025622(self_2936025738, nodeTemplate_2936025739);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2936025618(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2936025777(self_2936025778, nodeTemplate_2936025779) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936025835(n_2936025838) {
        var result_2936025841 = false;

          result_2936025841 = shouldEditNode_2936023500(self_2936025778.document, n_2936025838);

        return result_2936025841;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025778)) {
    break BeforeRet;
    }
    
    var index_2936025780 = index_2969567340(node_2936015481(self_2936025778));
      var oHEX60gensym694_2936025783 = createNodeFromAction_2936021621(self_2936025778, nodeTemplate_2936025779, node_2936015481(self_2936025778), errorType_3070230904());
      if (!isSome_2936025280(oHEX60gensym694_2936025783)) Temporary1 = false; else {        var newNodeIndex_2936025806 = nimCopy(null, get_2936025297(oHEX60gensym694_2936025783), NTI2936017889);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936025807 = newNodeIndex_2936025806["Field0"];
    var __2936025808 = newNodeIndex_2936025806["Field1"];
      var oHEX60gensym695_2936025811 = insertNode_2936019029(self_2936025778.document, node_2936015481(self_2936025778).parent, index_2936025780, newNode_2936025807);
      if (!isSome_2969569114(oHEX60gensym695_2936025811)) Temporary2 = false; else {        var node_2936025834 = get_2969569134(oHEX60gensym695_2936025811);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936016604(self_2936025778, node_2936025834);
    Label3: {
      var __2936025842 = 0;
      var emptyNode_2936025843 = null;
      var colontmp__2936025914 = null;
      colontmp__2936025914 = HEX3Aanonymous_2936025835;
      var i_2936025915 = 0;
      Label4: {
        var __2936025917 = 0;
        var child_2936025918 = null;
        var n_2936025919 = newNode_2936025807;
        var idx_2936025920 = -1;
        var i_2936025921 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936025920 == -1)) {
              __2936025917 = i_2936025921;
              child_2936025918 = n_2936025919;
              if (colontmp__2936025914(child_2936025918)) {
              __2936025842 = i_2936025915;
              emptyNode_2936025843 = child_2936025918;
              nodeHEX3D_2936016604(self_2936025778, emptyNode_2936025843);
              var _ = tryEdit_2936020465(self_2936025778, node_2936015481(self_2936025778));
              break Label3;
              i_2936025915 = addInt(i_2936025915, 1);
              }
              
              }
              
              if ((addInt(idx_2936025920, 1) < len_2969567320(n_2936025919))) {
              n_2936025919 = HEX5BHEX5D_2969567316(n_2936025919, addInt(idx_2936025920, 1));
              idx_2936025920 = -1;
              }
              else {
                var oHEX60gensym71_2936025923 = next_2969567425(n_2936025919);
                if (!isSome_2969569114(oHEX60gensym71_2936025923)) Temporary9 = false; else {                  var ne_2936025924 = get_2969569134(oHEX60gensym71_2936025923);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936025919 == newNode_2936025807));                }              if (Temporary8) {
              n_2936025919 = ne_2936025924;
              idx_2936025920 = -1;
              }
              else {
              if (((!((n_2936025919.parent == null)) && !((n_2936025919 == newNode_2936025807))) && !((n_2936025919.parent == newNode_2936025807)))) {
              idx_2936025920 = index_2969567340(n_2936025919);
              n_2936025919 = n_2936025919.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936025921 = addInt(i_2936025921, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936025848 = [mnewString(0)];
      fmtRes_2936025848[0].push.apply(fmtRes_2936025848[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936025848, 0, newNode_2936025807, []);
      fmtRes_2936025848[0].push.apply(fmtRes_2936025848[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936025848, 0, node_2936015481(self_2936025778).parent, []);
      fmtRes_2936025848[0].push.apply(fmtRes_2936025848[0], [32,97,116,32]);;
      formatValue_2516582756(fmtRes_2936025848, 0, index_2936025780, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936025848[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2936025773(self_2936025892, nodeTemplate_2936025893) {
    insertBefore_2936025777(self_2936025892, nodeTemplate_2936025893);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2936025773(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2936025931(self_2936025932, nodeTemplate_2936025933) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936025988(n_2936025991) {
        var result_2936025994 = false;

          result_2936025994 = shouldEditNode_2936023500(self_2936025932.document, n_2936025991);

        return result_2936025994;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936020308(self_2936025932)) {
    break BeforeRet;
    }
    
      var oHEX60gensym706_2936025936 = createNodeFromAction_2936021621(self_2936025932, nodeTemplate_2936025933, node_2936015481(self_2936025932), errorType_3070230904());
      if (!isSome_2936025280(oHEX60gensym706_2936025936)) Temporary1 = false; else {        var newNodeIndex_2936025959 = nimCopy(null, get_2936025297(oHEX60gensym706_2936025936), NTI2936017889);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936025960 = newNodeIndex_2936025959["Field0"];
    var __2936025961 = newNodeIndex_2936025959["Field1"];
      var oHEX60gensym707_2936025964 = insertNode_2936019029(self_2936025932.document, node_2936015481(self_2936025932), len_2969567320(node_2936015481(self_2936025932)), newNode_2936025960);
      if (!isSome_2969569114(oHEX60gensym707_2936025964)) Temporary2 = false; else {        var node_2936025987 = get_2969569134(oHEX60gensym707_2936025964);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936016604(self_2936025932, node_2936025987);
    Label3: {
      var __2936025995 = 0;
      var emptyNode_2936025996 = null;
      var colontmp__2936026067 = null;
      colontmp__2936026067 = HEX3Aanonymous_2936025988;
      var i_2936026068 = 0;
      Label4: {
        var __2936026070 = 0;
        var child_2936026071 = null;
        var n_2936026072 = newNode_2936025960;
        var idx_2936026073 = -1;
        var i_2936026074 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936026073 == -1)) {
              __2936026070 = i_2936026074;
              child_2936026071 = n_2936026072;
              if (colontmp__2936026067(child_2936026071)) {
              __2936025995 = i_2936026068;
              emptyNode_2936025996 = child_2936026071;
              nodeHEX3D_2936016604(self_2936025932, emptyNode_2936025996);
              var _ = tryEdit_2936020465(self_2936025932, node_2936015481(self_2936025932));
              break Label3;
              i_2936026068 = addInt(i_2936026068, 1);
              }
              
              }
              
              if ((addInt(idx_2936026073, 1) < len_2969567320(n_2936026072))) {
              n_2936026072 = HEX5BHEX5D_2969567316(n_2936026072, addInt(idx_2936026073, 1));
              idx_2936026073 = -1;
              }
              else {
                var oHEX60gensym71_2936026076 = next_2969567425(n_2936026072);
                if (!isSome_2969569114(oHEX60gensym71_2936026076)) Temporary9 = false; else {                  var ne_2936026077 = get_2969569134(oHEX60gensym71_2936026076);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936026072 == newNode_2936025960));                }              if (Temporary8) {
              n_2936026072 = ne_2936026077;
              idx_2936026073 = -1;
              }
              else {
              if (((!((n_2936026072.parent == null)) && !((n_2936026072 == newNode_2936025960))) && !((n_2936026072.parent == newNode_2936025960)))) {
              idx_2936026073 = index_2969567340(n_2936026072);
              n_2936026072 = n_2936026072.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936026074 = addInt(i_2936026074, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936026001 = [mnewString(0)];
      fmtRes_2936026001[0].push.apply(fmtRes_2936026001[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936026001, 0, newNode_2936025960, []);
      fmtRes_2936026001[0].push.apply(fmtRes_2936026001[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936026001, 0, node_2936015481(self_2936025932), []);
      fmtRes_2936026001[0].push.apply(fmtRes_2936026001[0], [32,97,116,32]);;
      formatValue_2516582756(fmtRes_2936026001, 0, len_2969567320(node_2936015481(self_2936025932)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936026001[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2936025927(self_2936026045, nodeTemplate_2936026046) {
    insertChild_2936025931(self_2936026045, nodeTemplate_2936026046);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2936025927(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2936026084(self_2936026085, nodeTemplate_2936026086) {
      var Temporary1;
      
function HEX3Aanonymous_2936026115(n_2936026118) {
        var result_2936026121 = false;

          result_2936026121 = shouldEditNode_2936023500(self_2936026085.document, n_2936026118);

        return result_2936026121;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2936020308(self_2936026085)) {
    break BeforeRet;
    }
    
      var oHEX60gensym718_2936026089 = createNodeFromAction_2936021621(self_2936026085, nodeTemplate_2936026086, node_2936015481(self_2936026085), errorType_3070230904());
      if (!isSome_2936025280(oHEX60gensym718_2936026089)) Temporary1 = false; else {        var newNodeIndex_2936026112 = nimCopy(null, get_2936025297(oHEX60gensym718_2936026089), NTI2936017889);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026113 = newNodeIndex_2936026112["Field0"];
    var __2936026114 = newNodeIndex_2936026112["Field1"];
    nodeHEX3D_2936016604(self_2936026085, replaceNode_2936021302(self_2936026085.document, node_2936015481(self_2936026085), newNode_2936026113));
    Label2: {
      var __2936026122 = 0;
      var emptyNode_2936026123 = null;
      var colontmp__2936026174 = null;
      colontmp__2936026174 = HEX3Aanonymous_2936026115;
      var i_2936026175 = 0;
      Label3: {
        var __2936026177 = 0;
        var child_2936026178 = null;
        var n_2936026179 = newNode_2936026113;
        var idx_2936026180 = -1;
        var i_2936026181 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2936026180 == -1)) {
              __2936026177 = i_2936026181;
              child_2936026178 = n_2936026179;
              if (colontmp__2936026174(child_2936026178)) {
              __2936026122 = i_2936026175;
              emptyNode_2936026123 = child_2936026178;
              nodeHEX3D_2936016604(self_2936026085, emptyNode_2936026123);
              var _ = tryEdit_2936020465(self_2936026085, node_2936015481(self_2936026085));
              break Label2;
              i_2936026175 = addInt(i_2936026175, 1);
              }
              
              }
              
              if ((addInt(idx_2936026180, 1) < len_2969567320(n_2936026179))) {
              n_2936026179 = HEX5BHEX5D_2969567316(n_2936026179, addInt(idx_2936026180, 1));
              idx_2936026180 = -1;
              }
              else {
                var oHEX60gensym71_2936026183 = next_2969567425(n_2936026179);
                if (!isSome_2969569114(oHEX60gensym71_2936026183)) Temporary8 = false; else {                  var ne_2936026184 = get_2969569134(oHEX60gensym71_2936026183);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2936026179 == newNode_2936026113));                }              if (Temporary7) {
              n_2936026179 = ne_2936026184;
              idx_2936026180 = -1;
              }
              else {
              if (((!((n_2936026179.parent == null)) && !((n_2936026179 == newNode_2936026113))) && !((n_2936026179.parent == newNode_2936026113)))) {
              idx_2936026180 = index_2969567340(n_2936026179);
              n_2936026179 = n_2936026179.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2936026181 = addInt(i_2936026181, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2936026080(self_2936026152, nodeTemplate_2936026153) {
    replace_2936026084(self_2936026152, nodeTemplate_2936026153);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2936026080(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2936026191(self_2936026192, nodeTemplate_2936026193) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2936026226(n_2936026229) {
        var result_2936026232 = false;

          result_2936026232 = shouldEditNode_2936023500(self_2936026192.document, n_2936026229);

        return result_2936026232;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936020308(self_2936026192)) {
    break BeforeRet;
    }
    
      if (!(node_2936015481(self_2936026192).kind == 0)) Temporary1 = false; else {        var oHEX60gensym728_2936026200 = createNodeFromAction_2936021621(self_2936026192, nodeTemplate_2936026193, node_2936015481(self_2936026192), errorType_3070230904());
        if (!isSome_2936025280(oHEX60gensym728_2936026200)) Temporary2 = false; else {          var newNodeIndex_2936026223 = nimCopy(null, get_2936025297(oHEX60gensym728_2936026200), NTI2936017889);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2936026224 = newNodeIndex_2936026223["Field0"];
    var __2936026225 = newNodeIndex_2936026223["Field1"];
    nodeHEX3D_2936016604(self_2936026192, replaceNode_2936021302(self_2936026192.document, node_2936015481(self_2936026192), newNode_2936026224));
    Label3: {
      var __2936026233 = 0;
      var emptyNode_2936026234 = null;
      var colontmp__2936026285 = null;
      colontmp__2936026285 = HEX3Aanonymous_2936026226;
      var i_2936026286 = 0;
      Label4: {
        var __2936026288 = 0;
        var child_2936026289 = null;
        var n_2936026290 = newNode_2936026224;
        var idx_2936026291 = -1;
        var i_2936026292 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936026291 == -1)) {
              __2936026288 = i_2936026292;
              child_2936026289 = n_2936026290;
              if (colontmp__2936026285(child_2936026289)) {
              __2936026233 = i_2936026286;
              emptyNode_2936026234 = child_2936026289;
              nodeHEX3D_2936016604(self_2936026192, emptyNode_2936026234);
              var _ = tryEdit_2936020465(self_2936026192, node_2936015481(self_2936026192));
              break Label3;
              i_2936026286 = addInt(i_2936026286, 1);
              }
              
              }
              
              if ((addInt(idx_2936026291, 1) < len_2969567320(n_2936026290))) {
              n_2936026290 = HEX5BHEX5D_2969567316(n_2936026290, addInt(idx_2936026291, 1));
              idx_2936026291 = -1;
              }
              else {
                var oHEX60gensym71_2936026294 = next_2969567425(n_2936026290);
                if (!isSome_2969569114(oHEX60gensym71_2936026294)) Temporary9 = false; else {                  var ne_2936026295 = get_2969569134(oHEX60gensym71_2936026294);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936026290 == newNode_2936026224));                }              if (Temporary8) {
              n_2936026290 = ne_2936026295;
              idx_2936026291 = -1;
              }
              else {
              if (((!((n_2936026290.parent == null)) && !((n_2936026290 == newNode_2936026224))) && !((n_2936026290.parent == newNode_2936026224)))) {
              idx_2936026291 = index_2969567340(n_2936026290);
              n_2936026290 = n_2936026290.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936026292 = addInt(i_2936026292, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2936026187(self_2936026263, nodeTemplate_2936026264) {
    replaceEmpty_2936026191(self_2936026263, nodeTemplate_2936026264);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2936026187(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2936026302(self_2936026303) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936026303)) {
    break BeforeRet;
    }
    
    var node_2936026304 = node_2936015481(self_2936026303);
    if (((node_2936026304.parent == null) || (node_2936026304.parent == self_2936026303.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2936026313 = node_2936026304.parent;
    var _ = deleteNode_2936021366(self_2936026303.document, node_2936015481(self_2936026303));
    nodeHEX3D_2936016604(self_2936026303, replaceNode_2936021302(self_2936026303.document, parent_2936026313, node_2936026304));
  };

  
}

function replaceParentJsWrapper_2936026298(self_2936026341) {
    replaceParent_2936026302(self_2936026341);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2936026298(this));};

function wrap_2936026362(self_2936026363, nodeTemplate_2936026364) {
      var Temporary1;
      
function HEX3Aanonymous_2936026395(n_2936026398) {
        var result_2936026401 = false;

          result_2936026401 = (n_2936026398.kind == 0);

        return result_2936026401;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2936026408(n_2936026411) {
        var result_2936026414 = false;

          result_2936026414 = shouldEditNode_2936023500(self_2936026363.document, n_2936026411);

        return result_2936026414;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2936020308(self_2936026363)) {
    break BeforeRet;
    }
    
    var typ_2936026365 = computeType_2986418034(ctx_2936012855, node_2936015481(self_2936026363), true);
      var oHEX60gensym746_2936026368 = createNodeFromAction_2936021621(self_2936026363, nodeTemplate_2936026364, node_2936015481(self_2936026363), typ_2936026365);
      if (!isSome_2936025280(oHEX60gensym746_2936026368)) Temporary1 = false; else {        var newNodeIndex_2936026391 = nimCopy(null, get_2936025297(oHEX60gensym746_2936026368), NTI2936017889);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026392 = newNodeIndex_2936026391["Field0"];
    var index_2936026393 = newNodeIndex_2936026391["Field1"];
    var oldNode_2936026394 = node_2936015481(self_2936026363);
    nodeHEX3D_2936016604(self_2936026363, replaceNode_2936021302(self_2936026363.document, node_2936015481(self_2936026363), newNode_2936026392));
    Label2: {
      var i_2936026406 = 0;
      var emptyNode_2936026407 = null;
      var colontmp__2936026476 = null;
      colontmp__2936026476 = HEX3Aanonymous_2936026395;
      var i_2936026477 = 0;
      Label3: {
        var __2936026479 = 0;
        var child_2936026480 = null;
        var n_2936026481 = newNode_2936026392;
        var idx_2936026482 = -1;
        var i_2936026483 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2936026482 == -1)) {
              __2936026479 = i_2936026483;
              child_2936026480 = n_2936026481;
              if (colontmp__2936026476(child_2936026480)) {
              i_2936026406 = i_2936026477;
              emptyNode_2936026407 = child_2936026480;
              if ((i_2936026406 == index_2936026393)) {
              nodeHEX3D_2936016604(self_2936026363, replaceNode_2936021302(self_2936026363.document, emptyNode_2936026407, oldNode_2936026394));
              break Label2;
              }
              
              i_2936026477 = addInt(i_2936026477, 1);
              }
              
              }
              
              if ((addInt(idx_2936026482, 1) < len_2969567320(n_2936026481))) {
              n_2936026481 = HEX5BHEX5D_2969567316(n_2936026481, addInt(idx_2936026482, 1));
              idx_2936026482 = -1;
              }
              else {
                var oHEX60gensym71_2936026485 = next_2969567425(n_2936026481);
                if (!isSome_2969569114(oHEX60gensym71_2936026485)) Temporary8 = false; else {                  var ne_2936026486 = get_2969569134(oHEX60gensym71_2936026485);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2936026481 == newNode_2936026392));                }              if (Temporary7) {
              n_2936026481 = ne_2936026486;
              idx_2936026482 = -1;
              }
              else {
              if (((!((n_2936026481.parent == null)) && !((n_2936026481 == newNode_2936026392))) && !((n_2936026481.parent == newNode_2936026392)))) {
              idx_2936026482 = index_2969567340(n_2936026481);
              n_2936026481 = n_2936026481.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2936026483 = addInt(i_2936026483, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2936026415 = 0;
      var emptyNode_2936026416 = null;
      var colontmp__2936026488 = null;
      colontmp__2936026488 = HEX3Aanonymous_2936026408;
      var i_2936026489 = 0;
      Label10: {
        var __2936026491 = 0;
        var child_2936026492 = null;
        var n_2936026493 = newNode_2936026392;
        var idx_2936026494 = -1;
        var i_2936026495 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2936026494 == -1)) {
              __2936026491 = i_2936026495;
              child_2936026492 = n_2936026493;
              if (colontmp__2936026488(child_2936026492)) {
              __2936026415 = i_2936026489;
              emptyNode_2936026416 = child_2936026492;
              nodeHEX3D_2936016604(self_2936026363, emptyNode_2936026416);
              var _ = tryEdit_2936020465(self_2936026363, node_2936015481(self_2936026363));
              break Label9;
              i_2936026489 = addInt(i_2936026489, 1);
              }
              
              }
              
              if ((addInt(idx_2936026494, 1) < len_2969567320(n_2936026493))) {
              n_2936026493 = HEX5BHEX5D_2969567316(n_2936026493, addInt(idx_2936026494, 1));
              idx_2936026494 = -1;
              }
              else {
                var oHEX60gensym71_2936026497 = next_2969567425(n_2936026493);
                if (!isSome_2969569114(oHEX60gensym71_2936026497)) Temporary15 = false; else {                  var ne_2936026498 = get_2969569134(oHEX60gensym71_2936026497);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2936026493 == newNode_2936026392));                }              if (Temporary14) {
              n_2936026493 = ne_2936026498;
              idx_2936026494 = -1;
              }
              else {
              if (((!((n_2936026493.parent == null)) && !((n_2936026493 == newNode_2936026392))) && !((n_2936026493.parent == newNode_2936026392)))) {
              idx_2936026494 = index_2969567340(n_2936026493);
              n_2936026493 = n_2936026493.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2936026495 = addInt(i_2936026495, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2936026358(self_2936026454, nodeTemplate_2936026455) {
    wrap_2936026362(self_2936026454, nodeTemplate_2936026455);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2936026358(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2936026505(self_2936026506) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2936020308(self_2936026506)) {
    break BeforeRet;
    }
    
    var current_2936026507 = node_2936015481(self_2936026506);
    Label1: {
      var emptyNode_2936026508 = null;
      var colontmp__2936026556 = null;
      colontmp__2936026556 = node_2936015481(self_2936026506);
      var idx_2936026557 = 0;
      var n_2936026558 = colontmp__2936026556;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936026558 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936026558), 1)), subInt(idx_2936026557, 1))) {
            n_2936026558 = HEX5BHEX5D_2969567316(n_2936026558, subInt(idx_2936026557, 1));
            idx_2936026557 = len_2969567320(n_2936026558);
            }
            else {
              var oHEX60gensym90_2936026560 = prev_2969567471(n_2936026558);
              if (!isSome_2969569114(oHEX60gensym90_2936026560)) Temporary4 = false; else {                var ne_2936026561 = get_2969569134(oHEX60gensym90_2936026560);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2936026508 = n_2936026558;
            if ((!((emptyNode_2936026508 == current_2936026507)) && shouldEditNode_2936023500(self_2936026506.document, emptyNode_2936026508))) {
            nodeHEX3D_2936016604(self_2936026506, emptyNode_2936026508);
            var _ = tryEdit_2936020465(self_2936026506, node_2936015481(self_2936026506));
            break Label1;
            }
            
            n_2936026558 = ne_2936026561;
            idx_2936026557 = len_2969567320(n_2936026558);
            }
            else {
              emptyNode_2936026508 = n_2936026558;
              if ((!((emptyNode_2936026508 == current_2936026507)) && shouldEditNode_2936023500(self_2936026506.document, emptyNode_2936026508))) {
              nodeHEX3D_2936016604(self_2936026506, emptyNode_2936026508);
              var _ = tryEdit_2936020465(self_2936026506, node_2936015481(self_2936026506));
              break Label1;
              }
              
              idx_2936026557 = index_2969567340(n_2936026558);
              n_2936026558 = n_2936026558.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2936026501(self_2936026540) {
    editPrevEmpty_2936026505(self_2936026540);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2936026501(this));};

function editNextEmpty_2936026568(self_2936026569) {
      
function HEX3Aanonymous_2936026571(n_2936026574) {
        var result_2936026577 = false;

          result_2936026577 = (!((n_2936026574 == current_2936026570)) && shouldEditNode_2936023500(self_2936026569.document, n_2936026574));

        return result_2936026577;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2936020308(self_2936026569)) {
    break BeforeRet;
    }
    
    var current_2936026570 = node_2936015481(self_2936026569);
    Label1: {
      var __2936026582 = 0;
      var emptyNode_2936026583 = null;
      var colontmp__2936026627 = null;
      var colontmp__2936026628 = null;
      colontmp__2936026627 = node_2936015481(self_2936026569);
      colontmp__2936026628 = HEX3Aanonymous_2936026571;
      var i_2936026629 = 0;
      Label2: {
        var __2936026631 = 0;
        var child_2936026632 = null;
        var n_2936026633 = colontmp__2936026627;
        var idx_2936026634 = -1;
        var i_2936026635 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2936026634 == -1)) {
              __2936026631 = i_2936026635;
              child_2936026632 = n_2936026633;
              if (colontmp__2936026628(child_2936026632)) {
              __2936026582 = i_2936026629;
              emptyNode_2936026583 = child_2936026632;
              nodeHEX3D_2936016604(self_2936026569, emptyNode_2936026583);
              var _ = tryEdit_2936020465(self_2936026569, node_2936015481(self_2936026569));
              break Label1;
              i_2936026629 = addInt(i_2936026629, 1);
              }
              
              }
              
              if ((addInt(idx_2936026634, 1) < len_2969567320(n_2936026633))) {
              n_2936026633 = HEX5BHEX5D_2969567316(n_2936026633, addInt(idx_2936026634, 1));
              idx_2936026634 = -1;
              }
              else {
                var oHEX60gensym71_2936026637 = next_2969567425(n_2936026633);
                if (!isSome_2969569114(oHEX60gensym71_2936026637)) Temporary7 = false; else {                  var ne_2936026638 = get_2969569134(oHEX60gensym71_2936026637);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2936026633 == null));                }              if (Temporary6) {
              n_2936026633 = ne_2936026638;
              idx_2936026634 = -1;
              }
              else {
              if (((!((n_2936026633.parent == null)) && !((n_2936026633 == null))) && !((n_2936026633.parent == null)))) {
              idx_2936026634 = index_2969567340(n_2936026633);
              n_2936026633 = n_2936026633.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2936026635 = addInt(i_2936026635, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2936026564(self_2936026611) {
    editNextEmpty_2936026568(self_2936026611);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2936026564(this));};

function rename_2936026645(self_2936026646) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936026646)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2936020465(self_2936026646, node_2936015481(self_2936026646));
  };

  
}

function renameJsWrapper_2936026641(self_2936026674) {
    rename_2936026645(self_2936026674);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2936026641(this));};

function selectPrevCompletion_2936026695(self_2936026696) {
    if ((0 < (self_2936026696.completions).length)) {
    self_2936026696.selectedCompletion = clamp_1660945119(subInt(self_2936026696.selectedCompletion, 1), 0, subInt((self_2936026696.completions).length, 1));
    }
    else {
      self_2936026696.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2936026691(self_2936026735) {
    selectPrevCompletion_2936026695(self_2936026735);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2936026691(this));};

function selectNextCompletion_2936026756(editor_2936026757) {
    if ((0 < (editor_2936026757.completions).length)) {
    editor_2936026757.selectedCompletion = clamp_1660945119(addInt(editor_2936026757.selectedCompletion, 1), 0, subInt((editor_2936026757.completions).length, 1));
    }
    else {
      editor_2936026757.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2936026752(editor_2936026796) {
    selectNextCompletion_2936026756(editor_2936026796);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2936026752(editor_));};

function createDefaultNode_2936023156(editor_2936023157, kind_2936023158) {
  var result_2936023160 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2936023158) {
    case 0:
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: {kind: 0, id: newId_2046820569(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 1:
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 2:
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 3:
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym449_2936023177 = null;
        Label2: {
          var res_2936023183 = null;
          res_2936023183 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023183.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023183.id = nimCopy(res_2936023183.id, newId_2046820569(), NTI2046820355);
          Label4: {
            Label5: {
              var res_2936023186 = null;
              res_2936023186 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023186.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936023183, res_2936023186);
        };
      };
      var node_2936023205 = res_2936023183;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023205, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym456_2936023213 = null;
        Label8: {
          var res_2936023219 = null;
          res_2936023219 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023219.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023219.id = nimCopy(res_2936023219.id, newId_2046820569(), NTI2046820355);
          Label10: {
            Label11: {
              var res_2936023222 = null;
              res_2936023222 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023222.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023219, res_2936023222);
            Label13: {
              var res_2936023224 = null;
              res_2936023224 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023224.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023219, res_2936023224);
          };
        };
      };
      var node_2936023252 = res_2936023219;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023252, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym466_2936023260 = null;
        Label16: {
          var res_2936023266 = null;
          res_2936023266 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023266.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023266.id = nimCopy(res_2936023266.id, newId_2046820569(), NTI2046820355);
          Label18: {
            Label19: {
              var res_2936023269 = null;
              res_2936023269 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023269.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023266, res_2936023269);
            Label21: {
              var res_2936023271 = null;
              res_2936023271 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023271.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023266, res_2936023271);
          };
        };
      };
      var node_2936023299 = res_2936023266;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023299, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym476_2936023307 = null;
        Label24: {
          var res_2936023313 = null;
          res_2936023313 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023313.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2936023315 = null;
              res_2936023315 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023315.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023313, res_2936023315);
            Label29: {
              var res_2936023317 = null;
              res_2936023317 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023317.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023313, res_2936023317);
            Label31: {
              var res_2936023319 = null;
              res_2936023319 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023319.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2936023321 = null;
                  res_2936023321 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2936023321.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2969567270(res_2936023319, res_2936023321);
            };
            add_2969567270(res_2936023313, res_2936023319);
          };
        };
      };
      var node_2936023367 = res_2936023313;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023367, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym492_2936023375 = null;
        Label37: {
          var res_2936023381 = null;
          res_2936023381 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023381.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2936023383 = null;
              res_2936023383 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023383.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023381, res_2936023383);
            Label42: {
              var res_2936023385 = null;
              res_2936023385 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023385.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023381, res_2936023385);
          };
        };
      };
      var node_2936023413 = res_2936023381;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023413, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym502_2936023421 = null;
        Label45: {
          var res_2936023427 = null;
          res_2936023427 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023427.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2936023429 = null;
              res_2936023429 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023429.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023427, res_2936023429);
            Label50: {
              var res_2936023431 = null;
              res_2936023431 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023431.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023427, res_2936023431);
          };
        };
      };
      var node_2936023459 = res_2936023427;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023459, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym512_2936023467 = null;
        Label53: {
          var res_2936023473 = null;
          res_2936023473 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023473.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2936023475 = null;
              res_2936023475 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023475.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936023473, res_2936023475);
        };
      };
      var node_2936023494 = res_2936023473;
      result_2936023160 = nimCopy(result_2936023160, some_2936021661({Field0: node_2936023494, Field1: 0}), NTI2936017894);
      break BeforeRet;
      break;
    default: 
      result_2936023160 = nimCopy(result_2936023160, none_2936022162(), NTI2936017894);
      break BeforeRet;
      break;
    }
  };

  return result_2936023160;

}

function applySelectedCompletion_2936026817(editor_2936026818) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2936026923(n_2936026926) {
          var result_2936026929 = false;

            result_2936026929 = shouldEditNode_2936023500(editor_2936026818.document, n_2936026926);

          return result_2936026929;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2936026818.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2936026818.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2936026826 = nimCopy(null, editor_2936026818.completions[chckIndx(editor_2936026818.selectedCompletion, 0, (editor_2936026818.completions).length - 1)], NTI2936014308);
    var completionText_2936026827 = nimCopy(null, editor_2936026818.completionText, NTI33554449);
    var fmtRes_2936026832 = [mnewString(0)];
    fmtRes_2936026832[0].push.apply(fmtRes_2936026832[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2516582756(fmtRes_2936026832, 0, editor_2936026818.selectedCompletion, []);
    fmtRes_2936026832[0].push.apply(fmtRes_2936026832[0], [32,40]);;
    formatValue_721420459(fmtRes_2936026832, 0, completionText_2936026827, []);
    fmtRes_2936026832[0].push.apply(fmtRes_2936026832[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936026832[0], NTI33554449)]);
    finishEdit_2936020734(editor_2936026818, false);
    switch (com_2936026826.kind) {
    case 0:
        var Temporary2 = com_2936026826;
        if (ConstSet188[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2936014307)); }
        var oHEX60gensym800_2936026840 = getSymbol_2986407811(ctx_2936012855, Temporary2.id);
        if (!isSome_3070232129(oHEX60gensym800_2936026840)) Temporary1 = false; else {          var symbol_2936026863 = get_3070232149(oHEX60gensym800_2936026840);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2936016604(editor_2936026818, replaceNode_2936021302(editor_2936026818.document, node_2936015481(editor_2936026818), {kind: 1, reff: nimCopy(null, symbol_2936026863.id, NTI2046820355), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2936026826;
        if (ConstSet189[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2936014307)); }
        var oHEX60gensym801_2936026866 = createDefaultNode_2936023156(editor_2936026818, Temporary4.nodeKind);
        if (!isSome_2936025280(oHEX60gensym801_2936026866)) Temporary3 = false; else {          var nodeIndex_2936026889 = nimCopy(null, get_2936025297(oHEX60gensym801_2936026866), NTI2936017889);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2936026890 = nodeIndex_2936026889["Field0"];
      var __2936026891 = nodeIndex_2936026889["Field1"];
      var _ = replaceNode_2936021302(editor_2936026818.document, node_2936015481(editor_2936026818), newNode_2936026890);
      if ((newNode_2936026890.kind == 2)) {
      newNode_2936026890.text = nimCopy(null, completionText_2936026827, NTI33554449);
      updateNode_2986457136(ctx_2936012855, newNode_2936026890);
      }
      else {
      if ((newNode_2936026890.kind == 3)) {
      if (!((completionText_2936026827[chckIndx(0, 0, (completionText_2936026827).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,54,48,56,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2936026890.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2936026827, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_2986457136(ctx_2936012855, newNode_2936026890);
      }
      }
      nodeHEX3D_2936016604(editor_2936026818, newNode_2936026890);
      Label5: {
        var __2936026930 = 0;
        var emptyNode_2936026931 = null;
        var colontmp__2936026975 = null;
        colontmp__2936026975 = HEX3Aanonymous_2936026923;
        var i_2936026976 = 0;
        Label6: {
          var __2936026978 = 0;
          var child_2936026979 = null;
          var n_2936026980 = newNode_2936026890;
          var idx_2936026981 = -1;
          var i_2936026982 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2936026981 == -1)) {
                __2936026978 = i_2936026982;
                child_2936026979 = n_2936026980;
                if (colontmp__2936026975(child_2936026979)) {
                __2936026930 = i_2936026976;
                emptyNode_2936026931 = child_2936026979;
                nodeHEX3D_2936016604(editor_2936026818, emptyNode_2936026931);
                var _ = tryEdit_2936020465(editor_2936026818, node_2936015481(editor_2936026818));
                break Label5;
                i_2936026976 = addInt(i_2936026976, 1);
                }
                
                }
                
                if ((addInt(idx_2936026981, 1) < len_2969567320(n_2936026980))) {
                n_2936026980 = HEX5BHEX5D_2969567316(n_2936026980, addInt(idx_2936026981, 1));
                idx_2936026981 = -1;
                }
                else {
                  var oHEX60gensym71_2936026984 = next_2969567425(n_2936026980);
                  if (!isSome_2969569114(oHEX60gensym71_2936026984)) Temporary11 = false; else {                    var ne_2936026985 = get_2969569134(oHEX60gensym71_2936026984);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2936026980 == newNode_2936026890));                  }                if (Temporary10) {
                n_2936026980 = ne_2936026985;
                idx_2936026981 = -1;
                }
                else {
                if (((!((n_2936026980.parent == null)) && !((n_2936026980 == newNode_2936026890))) && !((n_2936026980.parent == newNode_2936026890)))) {
                idx_2936026981 = index_2969567340(n_2936026980);
                n_2936026980 = n_2936026980.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2936026982 = addInt(i_2936026982, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2936026813(editor_2936026959) {
    applySelectedCompletion_2936026817(editor_2936026959);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2936026813(editor_));};

function cancelAndNextCompletion_2936027028(self_2936027029) {
    finishEdit_2936020734(self_2936027029, false);
    editNextEmpty_2936026568(self_2936027029);

  
}

function cancelAndNextCompletionJsWrapper_2936027024(self_2936027057) {
    cancelAndNextCompletion_2936027028(self_2936027057);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2936027024(this));};

function cancelAndPrevCompletion_2936027078(self_2936027079) {
    finishEdit_2936020734(self_2936027079, false);
    editPrevEmpty_2936026505(self_2936027079);

  
}

function cancelAndPrevCompletionJsWrapper_2936027074(self_2936027107) {
    cancelAndPrevCompletion_2936027078(self_2936027107);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2936027074(this));};

function cancelAndDelete_2936027128(self_2936027129) {
    finishEdit_2936020734(self_2936027129, false);
    self_2936027129.deletedNode = nimCopy(self_2936027129.deletedNode, some_2969567458(node_2936015481(self_2936027129)), NTI2969567351);
    nodeHEX3D_2936016604(self_2936027129, deleteNode_2936021366(self_2936027129.document, node_2936015481(self_2936027129)));

  
}

function cancelAndDeleteJsWrapper_2936027124(self_2936027160) {
    cancelAndDelete_2936027128(self_2936027160);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2936027124(this));};

function none_2969567410() {
  var result_2969567417 = ({val: 0, has: false});

  return result_2969567417;

}

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function index_2969567402(node_2969567403, parent_2969567404) {
  var result_2969567406 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2969567403.parent == null)) {
    result_2969567406 = nimCopy(result_2969567406, none_2969567410(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_2969567403.parent == parent_2969567404)) {
    result_2969567406 = nimCopy(result_2969567406, some_1191184367(index_2969567340(node_2969567403)), NTI1191183280);
    break BeforeRet;
    }
    
    result_2969567406 = nimCopy(result_2969567406, index_2969567402(node_2969567403.parent, parent_2969567404), NTI1191183280);
    break BeforeRet;
  };

  return result_2969567406;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2936027181(self_2936027182) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2936027183 = isEditing_2936020308(self_2936027182);
    finishEdit_2936020734(self_2936027182, false);
    var targetNode_2936027190 = none_2969567439();
    Label1: {
      var next_2936027191 = null;
      var colontmp__2936027331 = null;
      colontmp__2936027331 = node_2936015481(self_2936027182);
      var idx_2936027332 = 0;
      var n_2936027333 = colontmp__2936027331;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936027333 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936027333), 1)), subInt(idx_2936027332, 1))) {
            n_2936027333 = HEX5BHEX5D_2969567316(n_2936027333, subInt(idx_2936027332, 1));
            idx_2936027332 = len_2969567320(n_2936027333);
            }
            else {
              var oHEX60gensym90_2936027335 = prev_2969567471(n_2936027333);
              if (!isSome_2969569114(oHEX60gensym90_2936027335)) Temporary4 = false; else {                var ne_2936027336 = get_2969569134(oHEX60gensym90_2936027335);
                Temporary4 = true;              }            if (Temporary4) {
            next_2936027191 = n_2936027333;
            Label5: {
              if ((next_2936027191 == node_2936015481(self_2936027182))) {
              break Label5;
              }
              
              if ((canInsertInto_2936023848(self_2936027182, next_2936027191) && (!((next_2936027191 == node_2936015481(self_2936027182).parent)) || (0 < index_2969567340(node_2936015481(self_2936027182)))))) {
              targetNode_2936027190 = nimCopy(targetNode_2936027190, some_2969567458(next_2936027191), NTI2969567372);
              break Label1;
              }
              
            };
            n_2936027333 = ne_2936027336;
            idx_2936027332 = len_2969567320(n_2936027333);
            }
            else {
              next_2936027191 = n_2936027333;
              Label6: {
                if ((next_2936027191 == node_2936015481(self_2936027182))) {
                break Label6;
                }
                
                if ((canInsertInto_2936023848(self_2936027182, next_2936027191) && (!((next_2936027191 == node_2936015481(self_2936027182).parent)) || (0 < index_2969567340(node_2936015481(self_2936027182)))))) {
                targetNode_2936027190 = nimCopy(targetNode_2936027190, some_2969567458(next_2936027191), NTI2969567372);
                break Label1;
                }
                
              };
              idx_2936027332 = index_2969567340(n_2936027333);
              n_2936027333 = n_2936027333.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym840_2936027205 = nimCopy(null, targetNode_2936027190, NTI2969567372);
      if (!isSome_2969569114(oHEX60gensym840_2936027205)) Temporary7 = false; else {        var newParent_2936027228 = get_2969569134(oHEX60gensym840_2936027205);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2936027229 = node_2936015481(self_2936027182);
    if ((nodeToMove_2936027229.parent == newParent_2936027228)) {
    Temporary8 = subInt(index_2969567340(nodeToMove_2936027229), 1);
    }
    else {
      var oHEX60gensym841_2936027236 = index_2969567402(nodeToMove_2936027229, newParent_2936027228);
      if (!isSome_1191185117(oHEX60gensym841_2936027236)) Temporary9 = false; else {        var index_2936027259 = get_1191185211(oHEX60gensym841_2936027236);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2936027259;
    }
    else {
    Temporary8 = len_2969567320(newParent_2936027228);
    }
    }
    var index_2936027260 = Temporary8;
    nodeHEX3D_2936016604(self_2936027182, deleteNode_2936021366(self_2936027182.document, nodeToMove_2936027229));
      var oHEX60gensym842_2936027263 = insertNode_2936019029(self_2936027182.document, newParent_2936027228, index_2936027260, nodeToMove_2936027229);
      if (!isSome_2969569114(oHEX60gensym842_2936027263)) Temporary10 = false; else {        var newNode_2936027286 = get_2969569134(oHEX60gensym842_2936027263);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2936016604(self_2936027182, newNode_2936027286);
    if (wasEditing_2936027183) {
    var _ = tryEdit_2936020465(self_2936027182, node_2936015481(self_2936027182));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2936027177(self_2936027314) {
    moveNodeToPrevSpace_2936027181(self_2936027314);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2936027177(this));};

function moveNodeToNextSpace_2936027343(self_2936027344) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2936027345 = isEditing_2936020308(self_2936027344);
    finishEdit_2936020734(self_2936027344, false);
    var targetNode_2936027352 = none_2969567439();
    Label1: {
      var __2936027353 = 0;
      var next_2936027354 = null;
      var colontmp__2936027494 = null;
      var colontmp__2936027495 = 0;
      colontmp__2936027494 = node_2936015481(self_2936027344).parent;
      colontmp__2936027495 = index_2969567340(node_2936015481(self_2936027344));
      var n_2936027497 = colontmp__2936027494;
      var idx_2936027498 = colontmp__2936027495;
      var i_2936027499 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936027498 == subInt(len_2969567320(n_2936027497), 1))) {
            var colontmp__2936027502 = nimCopy(null, {Field0: i_2936027499, Field1: n_2936027497}, NTI2936015294);
            __2936027353 = colontmp__2936027502["Field0"];
            next_2936027354 = colontmp__2936027502["Field1"];
            Label5: {
              if ((next_2936027354 == node_2936015481(self_2936027344))) {
              break Label5;
              }
              
              if ((canInsertInto_2936023848(self_2936027344, next_2936027354) && (!((next_2936027354 == node_2936015481(self_2936027344).parent)) || (addInt(index_2969567340(node_2936015481(self_2936027344)), 1) < len_2969567320(node_2936015481(self_2936027344).parent))))) {
              targetNode_2936027352 = nimCopy(targetNode_2936027352, some_2969567458(next_2936027354), NTI2969567372);
              break Label1;
              }
              
            };
            if (((!((n_2936027497.parent == null)) && !((n_2936027497 == null))) && !((n_2936027497.parent == null)))) {
            idx_2936027498 = index_2969567340(n_2936027497);
            n_2936027497 = n_2936027497.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2936027498, 1) < len_2969567320(colontmp__2936027494))) {
            n_2936027497 = HEX5BHEX5D_2969567316(n_2936027497, addInt(idx_2936027498, 1));
            idx_2936027498 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2936027499 = addInt(i_2936027499, 1);
            }
          }
      };
    };
      var oHEX60gensym852_2936027368 = nimCopy(null, targetNode_2936027352, NTI2969567372);
      if (!isSome_2969569114(oHEX60gensym852_2936027368)) Temporary6 = false; else {        var newParent_2936027391 = get_2969569134(oHEX60gensym852_2936027368);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2936027392 = node_2936015481(self_2936027344);
    if ((nodeToMove_2936027392.parent == newParent_2936027391)) {
    Temporary7 = addInt(index_2969567340(nodeToMove_2936027392), 1);
    }
    else {
      var oHEX60gensym853_2936027399 = index_2969567402(nodeToMove_2936027392, newParent_2936027391);
      if (!isSome_1191185117(oHEX60gensym853_2936027399)) Temporary8 = false; else {        var index_2936027422 = get_1191185211(oHEX60gensym853_2936027399);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2936027422, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2936027423 = Temporary7;
    nodeHEX3D_2936016604(self_2936027344, deleteNode_2936021366(self_2936027344.document, nodeToMove_2936027392));
      var oHEX60gensym854_2936027426 = insertNode_2936019029(self_2936027344.document, newParent_2936027391, index_2936027423, nodeToMove_2936027392);
      if (!isSome_2969569114(oHEX60gensym854_2936027426)) Temporary9 = false; else {        var newNode_2936027449 = get_2969569134(oHEX60gensym854_2936027426);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2936016604(self_2936027344, newNode_2936027449);
    if (wasEditing_2936027345) {
    var _ = tryEdit_2936020465(self_2936027344, node_2936015481(self_2936027344));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2936027339(self_2936027477) {
    moveNodeToNextSpace_2936027343(self_2936027477);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2936027339(this));};

function popLast_2936016861(deq_2936016863) {
    var Temporary1;

  var result_2936016864 = null;

    if ((deq_2936016863.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2936016863.count = subInt(deq_2936016863.count, 1);
    deq_2936016863.tail = (subInt(deq_2936016863.tail, 1) & deq_2936016863.mask);
    Temporary1 = deq_2936016863.data[chckIndx(deq_2936016863.tail, 0, (deq_2936016863.data).length - 1)];
    deq_2936016863.data[chckIndx(deq_2936016863.tail, 0, (deq_2936016863.data).length - 1)] = genericReset(deq_2936016863.data[chckIndx(deq_2936016863.tail, 0, (deq_2936016863.data).length - 1)], NTI2969567236);
    result_2936016864 = Temporary1;

  return result_2936016864;

}

function addFirst_2936016892(deq_2936016894, item_2936016895) {
    expandIfNeeded_2936016637(deq_2936016894);
    deq_2936016894.count = addInt(deq_2936016894.count, 1);
    deq_2936016894.head = (subInt(deq_2936016894.head, 1) & deq_2936016894.mask);
    deq_2936016894.data[chckIndx(deq_2936016894.head, 0, (deq_2936016894.data).length - 1)] = item_2936016895;

  
}

function selectPrevNode_2936016791(editor_2936016792) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2936016769(editor_2936016792.selectionHistory))) break Label2;
          var node_2936016874 = popLast_2936016861(editor_2936016792.selectionHistory);
          if (((!((node_2936016874 == null)) && !((node_2936016874.parent == null))) && (base_2969567326(node_2936016874) == editor_2936016792.document.rootNode))) {
          addFirst_2936016892(editor_2936016792.selectionHistory, editor_2936016792.selectedNode);
          editor_2936016792.selectedNode = node_2936016874;
          handleSelectedNodeChanged_2936015484(editor_2936016792);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2936027509(self_2936027510) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936027510)) {
    break BeforeRet;
    }
    
    selectPrevNode_2936016791(self_2936027510);
  };

  
}

function selectPrevJsWrapper2_2936027505(self_2936027538) {
    selectPrev_2936027509(self_2936027538);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2936027505(this));};

function selectNextNode_2936016909(editor_2936016910) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2936016769(editor_2936016910.selectionHistory))) break Label2;
          var node_2936016982 = popFirst_2936016778(editor_2936016910.selectionHistory);
          if (((!((node_2936016982 == null)) && !((node_2936016982.parent == null))) && (base_2969567326(node_2936016982) == editor_2936016910.document.rootNode))) {
          addLast_2936016628(editor_2936016910.selectionHistory, editor_2936016910.selectedNode);
          editor_2936016910.selectedNode = node_2936016982;
          handleSelectedNodeChanged_2936015484(editor_2936016910);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2936027560(self_2936027561) {
  BeforeRet: {
    if (isEditing_2936020308(self_2936027561)) {
    break BeforeRet;
    }
    
    selectNextNode_2936016909(self_2936027561);
  };

  
}

function selectNextJsWrapper2_2936027556(self_2936027589) {
    selectNext_2936027560(self_2936027589);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2936027556(this));};

function len_2936027933(t_2936027936) {
  var result_2936027937 = 0;

    result_2936027937 = t_2936027936.counter;

  return result_2936027937;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2701132414 = 0;
      colontmp__2701132414 = (a_1979711593).length - 1;
      var res_2701132415 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2701132415 <= colontmp__2701132414)) break Label3;
            i_1979711612 = res_2701132415;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2701132415 = addInt(res_2701132415, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2936028544 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936028544 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2936028544;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2936028544 = addInt(res_2936028544, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3154116644(self_3154116645, text_3154116646) {
    
function HEX3Aanonymous_3154116668(a_3154116687, b_3154116688) {
      var result_3154116693 = 0;

        result_3154116693 = cmp_3154116680(a_3154116687.score, b_3154116688.score);

      return result_3154116693;

    }

  var result_3154116647 = [];

  BeforeRet: {
    result_3154116647 = nimCopy(null, [], NTI3154116626);
    var symbols_3154116652 = computeSymbols_2986428140(ctx_2936012855, self_3154116645.document.rootNode, true);
    Label1: {
      var key_3154116657 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3154116658 = null;
      var L_2936028535 = len_3070231838(symbols_3154116652);
      Label2: {
        var h_2936028537 = 0;
        var colontmp__2936028538 = 0;
        colontmp__2936028538 = (symbols_3154116652.data).length - 1;
        var res_2936028539 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936028539 <= colontmp__2936028538)) break Label4;
              h_2936028537 = res_2936028539;
              if (isFilled_1308622880(symbols_3154116652.data[chckIndx(h_2936028537, 0, (symbols_3154116652.data).length - 1)].Field0)) {
              var colontmp__2936028542 = nimCopy(null, {Field0: nimCopy(null, symbols_3154116652.data[chckIndx(h_2936028537, 0, (symbols_3154116652.data).length - 1)].Field1, NTI2046820355), Field1: symbols_3154116652.data[chckIndx(h_2936028537, 0, (symbols_3154116652.data).length - 1)].Field2}, NTI3070231514);
              key_3154116657 = nimCopy(key_3154116657, colontmp__2936028542["Field0"], NTI2046820355);
              symbol_3154116658 = colontmp__2936028542["Field1"];
              Label5: {
                if (!((symbol_3154116658.kind == 0))) {
                break Label5;
                }
                
                var score_3154116663 = fuzzyMatchSmart_1979711572(text_3154116646, symbol_3154116658.name, true);
                result_3154116647.push({kind: 0, score: score_3154116663, id: nimCopy(null, symbol_3154116658.id, NTI2046820355), nodeKind: 0, name: []});;
              };
              if (!((len_3070231838(symbols_3154116652) == L_2936028535))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936028539 = addInt(res_2936028539, 1);
            }
        };
      };
    };
    sort_3154116700(result_3154116647, HEX3Aanonymous_3154116668, 0);
    break BeforeRet;
  };

  return result_3154116647;

}

function updateCompletions_3154116856(self_3154116857) {
    var text_3154116858 = nsuJoinSep(content_2801796767(self_3154116857.textEditor.document), []);
    self_3154116857.completions = nimCopy(null, getCompletions_3154116644(self_3154116857, text_3154116858), NTI3154116618);
    if ((0 < (self_3154116857.completions).length)) {
    self_3154116857.selected = clamp_1660945119(self_3154116857.selected, 0, subInt((self_3154116857.completions).length, 1));
    }
    else {
      self_3154116857.selected = 0;
    }
    

  
}

function handleTextChanged_3154117050(self_3154117051) {
    updateCompletions_3154116856(self_3154117051);
    self_3154117051.selected = 0;

  
}

function pop_1291849139(s_1291849141, s_1291849141_Idx) {
  var result_1291849142 = null;

    var L_1291849146 = subInt((s_1291849141[s_1291849141_Idx]).length, 1);
    result_1291849142 = s_1291849141[s_1291849141_Idx][chckIndx(L_1291849146, 0, (s_1291849141[s_1291849141_Idx]).length - 1)];
    if (s_1291849141[s_1291849141_Idx].length < chckRange(L_1291849146, 0, 2147483647)) { for (var i = s_1291849141[s_1291849141_Idx].length ; i < chckRange(L_1291849146, 0, 2147483647) ; ++i) s_1291849141[s_1291849141_Idx].push(null); }
               else { s_1291849141[s_1291849141_Idx].length = chckRange(L_1291849146, 0, 2147483647); };

  return result_1291849142;

}

function popPopup_1291849122(self_1291849123, popup_1291849124) {
    if (((0 < (self_1291849123.popups).length) && (self_1291849123.popups[chckIndx((self_1291849123.popups).length - 1, 0, (self_1291849123.popups).length - 1)] == popup_1291849124))) {
    var _ = pop_1291849139(self_1291849123, "popups");
    }
    
    requestRender_2499805290(self_1291849123.platform, false);

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function handleUnknownPopupAction_1291848840(self_1291848841, popup_1291848842, action_1291848843, arg_1291848844) {
  var result_1291848845 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848845 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848855 = [mnewString(0)];
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848855, 0, action_1291848843, []);
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [32]);;
    formatValue_721420459(fmtRes_1291848855, 0, arg_1291848844, []);
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848855, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848855[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848845 = 0;
    break BeforeRet;
  };

  return result_1291848845;

}

function handleAction_3154117016(self_3154117017, action_3154117018, arg_3154117019) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3154117020 = 0;

  BeforeRet: {
    switch (toJSStr(action_3154117018)) {
    case "accept":
      if ((self_3154117017.selected < (self_3154117017.completions).length)) {
      var Temporary1 = self_3154117017.completions[chckIndx(self_3154117017.selected, 0, (self_3154117017.completions).length - 1)];
      if (ConstSet191[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2936014307)); }
      self_3154117017.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849122(self_3154117017.editor, self_3154117017);
      break;
    case "cancel":
      popPopup_1291849122(self_3154117017.editor, self_3154117017);
      break;
    case "prev":
      if (((self_3154117017.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3154117017.selected, (self_3154117017.completions).length), 1), (self_3154117017.completions).length);
      }
      
      self_3154117017.selected = Temporary2;
      break;
    case "next":
      if (((self_3154117017.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3154117017.selected, 1), (self_3154117017.completions).length);
      }
      
      self_3154117017.selected = Temporary3;
      break;
    default: 
      result_3154117020 = handleUnknownPopupAction_1291848840(self_3154117017.editor, self_3154117017, action_3154117018, arg_3154117019);
      break BeforeRet;
      break;
    }
    result_3154117020 = 3;
    break BeforeRet;
  };

  return result_3154117020;

}

function newGotoPopup_3154117132(editor_3154117133, document_3154117134) {
    
function HEX3Aanonymous_3154117167(doc_3154117168) {
        handleTextChanged_3154117050(popup_3154117136);

      
    }
      
function HEX3Aanonymous_3154117216(actionHEX60gensym9HEX60gensym10_3154117217, argHEX60gensym9HEX60gensym10_3154117218) {
        var result_3154117219 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3154117204.config.handleActions) {
          var action_3154117220 = nimCopy(null, actionHEX60gensym9HEX60gensym10_3154117217, NTI33554449);
          var arg_3154117221 = nimCopy(null, argHEX60gensym9HEX60gensym10_3154117218, NTI33554449);
          var responseHEX60gensym9HEX60gensym10_3154117222 = handleAction_3154117016(popup_3154117136, action_3154117220, arg_3154117221);
          if (handlerHEX60gensym9_3154117204.config.consumeAllActions) {
          result_3154117219 = 3;
          break BeforeRet;
          }
          
          result_3154117219 = responseHEX60gensym9HEX60gensym10_3154117222;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym9_3154117204.config.consumeAllActions) {
          result_3154117219 = 3;
          break BeforeRet;
          }
          else {
            result_3154117219 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3154117219;

      }
      
function HEX3Aanonymous_3154117224(inputHEX60gensym9HEX60gensym11_3154117225) {
        var result_3154117226 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3154117204.config.handleInputs) {
          var input_3154117227 = nimCopy(null, inputHEX60gensym9HEX60gensym11_3154117225, NTI33554449);
          result_3154117226 = 1;
          break BeforeRet;
          }
          else {
            result_3154117226 = 1;
            break BeforeRet;
          }
          
        };

        return result_3154117226;

      }

  var result_3154117135 = null;

  BeforeRet: {
    var popup_3154117136 = {editor: editor_3154117133, document: document_3154117134, m_type: NTI3154116612, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3154117136.textEditor = newTextEditor_2801813760(newTextDocument_2801801429([], [], false), editor_3154117133);
    setMode_2801806301(popup_3154117136.textEditor, [105,110,115,101,114,116]);
    popup_3154117136.textEditor.renderHeader = false;
    popup_3154117136.textEditor.lineNumbers = nimCopy(popup_3154117136.textEditor.lineNumbers, some_3154117142(0), NTI2801795338);
    popup_3154117136.textEditor.document.singleLine = true;
    var _ = subscribe_2801813808(popup_3154117136.textEditor.document.textChanged, HEX3Aanonymous_3154117167);
    Label1: {
      var handlerHEX60gensym9_3154117204 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym9_3154117204.config = getEventHandlerConfig_1291849169(editor_3154117133, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym9_3154117204.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(editor_3154117133, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym9_3154117204.handleAction = HEX3Aanonymous_3154117216;
      handlerHEX60gensym9_3154117204.handleInput = HEX3Aanonymous_3154117224;
    };
    popup_3154117136.eventHandler = handlerHEX60gensym9_3154117204;
    updateCompletions_3154116856(popup_3154117136);
    result_3154117135 = popup_3154117136;
    break BeforeRet;
  };

  return result_3154117135;

}

function init_2449473586(self_2449473587) {
    self_2449473587.id = newEditorId_2415919419();

  
}

function subscribe_1291849004(event_1291849006, callback_1291849007) {
  var result_1291849008 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291849008 = nimCopy(result_1291849008, newId_2046820569(), NTI2046820355);
    event_1291849006.handlers.push({Field0: nimCopy(null, result_1291849008, NTI2046820355), Field1: callback_1291849007});;

  return result_1291849008;

}

function pushPopup_1291849067(self_1291849068, popup_1291849069) {
    
function HEX3Aanonymous_1291849085() {
        requestRender_2499805290(self_1291849068.platform, false);

      
    }

    init_2449473586(popup_1291849069);
    self_1291849068.popups.push(popup_1291849069);;
    var _ = subscribe_1291849004(popup_1291849069.onMarkedDirty, HEX3Aanonymous_1291849085);
    requestRender_2499805290(self_1291849068.platform, false);

  
}

function goto_2936027611(self_2936027612, where_2936027613) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2936027657(n_2936027660) {
          var result_2936027663 = false;

            result_2936027663 = (!((n_2936027660 == node_2936015481(self_2936027612))) && (HEX3DHEX3D_2046820592(n_2936027660.id, id_2936027656) || HEX3DHEX3D_2046820592(n_2936027660.reff, id_2936027656)));

          return result_2936027663;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2936027684(n_2936027687) {
          var result_2936027690 = false;

            result_2936027690 = (!((n_2936027687 == node_2936015481(self_2936027612))) && (computeType_2986418034(ctx_2936012855, n_2936027687, true).kind == 0));

          return result_2936027690;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2936027710(n_2936027713) {
          var result_2936027716 = false;

            result_2936027716 = !((n_2936027713 == node_2936015481(self_2936027612)));

          return result_2936027716;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2936028334(id_2936028335) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym897_2936028338 = getAstNode_2986398560(ctx_2936012855, id_2936028335);
            if (!isSome_2969569114(oHEX60gensym897_2936028338)) Temporary2 = false; else {              var node_2936028361 = get_2969569134(oHEX60gensym897_2936028338);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2969567326(node_2936028361) == self_2936027612.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2936016604(self_2936027612, node_2936028361);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2936020308(self_2936027612)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2936027613)) {
    case "definition":
        var oHEX60gensym880_2936027616 = computeSymbol_2986424640(ctx_2936012855, node_2936015481(self_2936027612), true);
        if (!isSome_3070232129(oHEX60gensym880_2936027616)) Temporary1 = false; else {          var sym_2936027639 = get_3070232149(oHEX60gensym880_2936027616);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2936027639.kind == 0) && !((sym_2936027639.node == self_2936027612.document.rootNode)))) {
      var Temporary2 = sym_2936027639;
      if (ConstSet190[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      nodeHEX3D_2936016604(self_2936027612, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2936027648 = node_2936015481(self_2936027612);
        var pos_2936027649 = 0;
        var _ = pos_2936027649;
        if ((expr_2936027648.kind == 1)) {
        Temporary4 = node_2936015481(self_2936027612).reff;
        }
        else {
        Temporary4 = node_2936015481(self_2936027612).id;
        }
        
      };
      var id_2936027656 = nimCopy(null, Temporary4, NTI2046820355);
      Label5: {
        var __2936027668 = 0;
        var n_2936027669 = null;
        var colontmp__2936028444 = null;
        var colontmp__2936028445 = null;
        colontmp__2936028444 = node_2936015481(self_2936027612);
        colontmp__2936028445 = HEX3Aanonymous_2936027657;
        var i_2936028446 = 0;
        Label6: {
          var __2936028448 = 0;
          var child_2936028449 = null;
          var n_2936028450 = colontmp__2936028444;
          var idx_2936028451 = -1;
          var i_2936028452 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2936028451 == -1)) {
                __2936028448 = i_2936028452;
                child_2936028449 = n_2936028450;
                if (colontmp__2936028445(child_2936028449)) {
                __2936027668 = i_2936028446;
                n_2936027669 = child_2936028449;
                nodeHEX3D_2936016604(self_2936027612, n_2936027669);
                break Label5;
                i_2936028446 = addInt(i_2936028446, 1);
                }
                
                }
                
                if ((addInt(idx_2936028451, 1) < len_2969567320(n_2936028450))) {
                n_2936028450 = HEX5BHEX5D_2969567316(n_2936028450, addInt(idx_2936028451, 1));
                idx_2936028451 = -1;
                }
                else {
                  var oHEX60gensym71_2936028454 = next_2969567425(n_2936028450);
                  if (!isSome_2969569114(oHEX60gensym71_2936028454)) Temporary11 = false; else {                    var ne_2936028455 = get_2969569134(oHEX60gensym71_2936028454);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2936028450 == null));                  }                if (Temporary10) {
                n_2936028450 = ne_2936028455;
                idx_2936028451 = -1;
                }
                else {
                if (((!((n_2936028450.parent == null)) && !((n_2936028450 == null))) && !((n_2936028450.parent == null)))) {
                idx_2936028451 = index_2969567340(n_2936028450);
                n_2936028450 = n_2936028450.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2936028452 = addInt(i_2936028452, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2936027670 = node_2936015481(self_2936027612);
        var pos_2936027671 = 0;
        var _ = pos_2936027671;
        if ((expr_2936027670.kind == 1)) {
        Temporary13 = node_2936015481(self_2936027612).reff;
        }
        else {
        Temporary13 = node_2936015481(self_2936027612).id;
        }
        
      };
      var id_2936027678 = nimCopy(null, Temporary13, NTI2046820355);
      Label14: {
        var n_2936027679 = null;
        var colontmp__2936028458 = null;
        colontmp__2936028458 = node_2936015481(self_2936027612);
        var idx_2936028459 = 0;
        var n_2936028460 = colontmp__2936028458;
        Label15: {
            Label16: while (true) {
            if (!!((n_2936028460 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936028460), 1)), subInt(idx_2936028459, 1))) {
              n_2936028460 = HEX5BHEX5D_2969567316(n_2936028460, subInt(idx_2936028459, 1));
              idx_2936028459 = len_2969567320(n_2936028460);
              }
              else {
                var oHEX60gensym90_2936028462 = prev_2969567471(n_2936028460);
                if (!isSome_2969569114(oHEX60gensym90_2936028462)) Temporary17 = false; else {                  var ne_2936028463 = get_2969569134(oHEX60gensym90_2936028462);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2936027679 = n_2936028460;
              if ((!((n_2936027679 == node_2936015481(self_2936027612))) && (HEX3DHEX3D_2046820592(n_2936027679.id, id_2936027678) || HEX3DHEX3D_2046820592(n_2936027679.reff, id_2936027678)))) {
              nodeHEX3D_2936016604(self_2936027612, n_2936027679);
              break Label14;
              }
              
              n_2936028460 = ne_2936028463;
              idx_2936028459 = len_2969567320(n_2936028460);
              }
              else {
                n_2936027679 = n_2936028460;
                if ((!((n_2936027679 == node_2936015481(self_2936027612))) && (HEX3DHEX3D_2046820592(n_2936027679.id, id_2936027678) || HEX3DHEX3D_2046820592(n_2936027679.reff, id_2936027678)))) {
                nodeHEX3D_2936016604(self_2936027612, n_2936027679);
                break Label14;
                }
                
                idx_2936028459 = index_2969567340(n_2936028460);
                n_2936028460 = n_2936028460.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2936027699 = 0;
        var n_2936027700 = null;
        var colontmp__2936028465 = null;
        var colontmp__2936028466 = null;
        colontmp__2936028465 = node_2936015481(self_2936027612);
        colontmp__2936028466 = HEX3Aanonymous_2936027684;
        var i_2936028467 = 0;
        Label19: {
          var __2936028469 = 0;
          var child_2936028470 = null;
          var n_2936028471 = colontmp__2936028465;
          var idx_2936028472 = -1;
          var i_2936028473 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2936028472 == -1)) {
                __2936028469 = i_2936028473;
                child_2936028470 = n_2936028471;
                if (colontmp__2936028466(child_2936028470)) {
                __2936027699 = i_2936028467;
                n_2936027700 = child_2936028470;
                nodeHEX3D_2936016604(self_2936027612, n_2936027700);
                break Label18;
                i_2936028467 = addInt(i_2936028467, 1);
                }
                
                }
                
                if ((addInt(idx_2936028472, 1) < len_2969567320(n_2936028471))) {
                n_2936028471 = HEX5BHEX5D_2969567316(n_2936028471, addInt(idx_2936028472, 1));
                idx_2936028472 = -1;
                }
                else {
                  var oHEX60gensym71_2936028475 = next_2969567425(n_2936028471);
                  if (!isSome_2969569114(oHEX60gensym71_2936028475)) Temporary24 = false; else {                    var ne_2936028476 = get_2969569134(oHEX60gensym71_2936028475);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2936028471 == null));                  }                if (Temporary23) {
                n_2936028471 = ne_2936028476;
                idx_2936028472 = -1;
                }
                else {
                if (((!((n_2936028471.parent == null)) && !((n_2936028471 == null))) && !((n_2936028471.parent == null)))) {
                idx_2936028472 = index_2969567340(n_2936028471);
                n_2936028471 = n_2936028471.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2936028473 = addInt(i_2936028473, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2936027701 = null;
        var colontmp__2936028478 = null;
        colontmp__2936028478 = node_2936015481(self_2936027612);
        var idx_2936028479 = 0;
        var n_2936028480 = colontmp__2936028478;
        Label26: {
            Label27: while (true) {
            if (!!((n_2936028480 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936028480), 1)), subInt(idx_2936028479, 1))) {
              n_2936028480 = HEX5BHEX5D_2969567316(n_2936028480, subInt(idx_2936028479, 1));
              idx_2936028479 = len_2969567320(n_2936028480);
              }
              else {
                var oHEX60gensym90_2936028482 = prev_2969567471(n_2936028480);
                if (!isSome_2969569114(oHEX60gensym90_2936028482)) Temporary28 = false; else {                  var ne_2936028483 = get_2969569134(oHEX60gensym90_2936028482);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2936027701 = n_2936028480;
              if ((!((n_2936027701 == node_2936015481(self_2936027612))) && (computeType_2986418034(ctx_2936012855, n_2936027701, true).kind == 0))) {
              nodeHEX3D_2936016604(self_2936027612, n_2936027701);
              break Label25;
              }
              
              n_2936028480 = ne_2936028483;
              idx_2936028479 = len_2969567320(n_2936028480);
              }
              else {
                n_2936027701 = n_2936028480;
                if ((!((n_2936027701 == node_2936015481(self_2936027612))) && (computeType_2986418034(ctx_2936012855, n_2936027701, true).kind == 0))) {
                nodeHEX3D_2936016604(self_2936027612, n_2936027701);
                break Label25;
                }
                
                idx_2936028479 = index_2969567340(n_2936028480);
                n_2936028480 = n_2936028480.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2936027721 = 0;
        var n_2936027722 = null;
        var colontmp__2936028497 = null;
        var colontmp__2936028498 = null;
        colontmp__2936028497 = node_2936015481(self_2936027612);
        colontmp__2936028498 = HEX3Aanonymous_2936027710;
        var i_2936028499 = 0;
        Label30: {
          var __2936028501 = 0;
          var child_2936028502 = null;
          var n_2936028503 = colontmp__2936028497;
          var idx_2936028504 = -1;
          var i_2936028505 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2936028504 == -1)) {
                __2936028501 = i_2936028505;
                child_2936028502 = n_2936028503;
                if (colontmp__2936028498(child_2936028502)) {
                __2936027721 = i_2936028499;
                n_2936027722 = child_2936028502;
                if (contains_2986448403(ctx_2936012855.diagnosticsPerNode, n_2936027722.id)) {
                var found_2936027786 = false;
                Label34: {
                  var diags_2936028170 = [];
                  var colontmp__2936028486 = ({data: [], counter: 0});
                  colontmp__2936028486 = nimCopy(colontmp__2936028486, HEX5BHEX5D_2986445045(ctx_2936012855.diagnosticsPerNode, n_2936027722.id).queries, NTI2986344462);
                  var L_2936028491 = len_2936027933(colontmp__2936028486);
                  Label35: {
                    var h_2936028493 = 0;
                    var colontmp__2936028494 = 0;
                    colontmp__2936028494 = (colontmp__2936028486.data).length - 1;
                    var res_2936028495 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2936028495 <= colontmp__2936028494)) break Label37;
                          h_2936028493 = res_2936028495;
                          if (isFilled_1308622880(colontmp__2936028486.data[chckIndx(h_2936028493, 0, (colontmp__2936028486.data).length - 1)].Field0)) {
                          diags_2936028170 = colontmp__2936028486.data[chckIndx(h_2936028493, 0, (colontmp__2936028486.data).length - 1)]["Field2"];
                          if ((0 < (diags_2936028170).length)) {
                          found_2936027786 = true;
                          }
                          
                          if (!((len_2936027933(colontmp__2936028486) == L_2936028491))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2936028495 = addInt(res_2936028495, 1);
                        }
                    };
                  };
                };
                if (found_2936027786) {
                nodeHEX3D_2936016604(self_2936027612, n_2936027722);
                }
                
                break Label29;
                }
                
                i_2936028499 = addInt(i_2936028499, 1);
                }
                
                }
                
                if ((addInt(idx_2936028504, 1) < len_2969567320(n_2936028503))) {
                n_2936028503 = HEX5BHEX5D_2969567316(n_2936028503, addInt(idx_2936028504, 1));
                idx_2936028504 = -1;
                }
                else {
                  var oHEX60gensym71_2936028507 = next_2969567425(n_2936028503);
                  if (!isSome_2969569114(oHEX60gensym71_2936028507)) Temporary39 = false; else {                    var ne_2936028508 = get_2969569134(oHEX60gensym71_2936028507);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2936028503 == null));                  }                if (Temporary38) {
                n_2936028503 = ne_2936028508;
                idx_2936028504 = -1;
                }
                else {
                if (((!((n_2936028503.parent == null)) && !((n_2936028503 == null))) && !((n_2936028503.parent == null)))) {
                idx_2936028504 = index_2969567340(n_2936028503);
                n_2936028503 = n_2936028503.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2936028505 = addInt(i_2936028505, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2936028174 = null;
        var colontmp__2936028519 = null;
        colontmp__2936028519 = node_2936015481(self_2936027612);
        var idx_2936028520 = 0;
        var n_2936028521 = colontmp__2936028519;
        Label41: {
            Label42: while (true) {
            if (!!((n_2936028521 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936028521), 1)), subInt(idx_2936028520, 1))) {
              n_2936028521 = HEX5BHEX5D_2969567316(n_2936028521, subInt(idx_2936028520, 1));
              idx_2936028520 = len_2969567320(n_2936028521);
              }
              else {
                var oHEX60gensym90_2936028523 = prev_2969567471(n_2936028521);
                if (!isSome_2969569114(oHEX60gensym90_2936028523)) Temporary43 = false; else {                  var ne_2936028524 = get_2969569134(oHEX60gensym90_2936028523);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2936028174 = n_2936028521;
              Label44: {
                if ((n_2936028174 == node_2936015481(self_2936027612))) {
                break Label44;
                }
                
                if (contains_2986448403(ctx_2936012855.diagnosticsPerNode, n_2936028174.id)) {
                var found_2936028242 = false;
                Label45: {
                  var diags_2936028329 = [];
                  var colontmp__2936028512 = ({data: [], counter: 0});
                  colontmp__2936028512 = nimCopy(colontmp__2936028512, HEX5BHEX5D_2986445045(ctx_2936012855.diagnosticsPerNode, n_2936028174.id).queries, NTI2986344462);
                  var L_2936028513 = len_2936027933(colontmp__2936028512);
                  Label46: {
                    var h_2936028515 = 0;
                    var colontmp__2936028516 = 0;
                    colontmp__2936028516 = (colontmp__2936028512.data).length - 1;
                    var res_2936028517 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2936028517 <= colontmp__2936028516)) break Label48;
                          h_2936028515 = res_2936028517;
                          if (isFilled_1308622880(colontmp__2936028512.data[chckIndx(h_2936028515, 0, (colontmp__2936028512.data).length - 1)].Field0)) {
                          diags_2936028329 = colontmp__2936028512.data[chckIndx(h_2936028515, 0, (colontmp__2936028512.data).length - 1)]["Field2"];
                          if ((0 < (diags_2936028329).length)) {
                          found_2936028242 = true;
                          }
                          
                          if (!((len_2936027933(colontmp__2936028512) == L_2936028513))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2936028517 = addInt(res_2936028517, 1);
                        }
                    };
                  };
                };
                if (found_2936028242) {
                nodeHEX3D_2936016604(self_2936027612, n_2936028174);
                break Label40;
                }
                
                }
                
              };
              n_2936028521 = ne_2936028524;
              idx_2936028520 = len_2969567320(n_2936028521);
              }
              else {
                n_2936028174 = n_2936028521;
                Label49: {
                  if ((n_2936028174 == node_2936015481(self_2936027612))) {
                  break Label49;
                  }
                  
                  if (contains_2986448403(ctx_2936012855.diagnosticsPerNode, n_2936028174.id)) {
                  var found_2936028525 = false;
                  Label50: {
                    var diags_2936028526 = [];
                    var colontmp__2936028527 = ({data: [], counter: 0});
                    colontmp__2936028527 = nimCopy(colontmp__2936028527, HEX5BHEX5D_2986445045(ctx_2936012855.diagnosticsPerNode, n_2936028174.id).queries, NTI2986344462);
                    var L_2936028528 = len_2936027933(colontmp__2936028527);
                    Label51: {
                      var h_2936028529 = 0;
                      var colontmp__2936028530 = 0;
                      colontmp__2936028530 = (colontmp__2936028527.data).length - 1;
                      var res_2936028531 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2936028531 <= colontmp__2936028530)) break Label53;
                            h_2936028529 = res_2936028531;
                            if (isFilled_1308622880(colontmp__2936028527.data[chckIndx(h_2936028529, 0, (colontmp__2936028527.data).length - 1)].Field0)) {
                            diags_2936028526 = colontmp__2936028527.data[chckIndx(h_2936028529, 0, (colontmp__2936028527.data).length - 1)]["Field2"];
                            if ((0 < (diags_2936028526).length)) {
                            found_2936028525 = true;
                            }
                            
                            if (!((len_2936027933(colontmp__2936028527) == L_2936028528))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2936028531 = addInt(res_2936028531, 1);
                          }
                      };
                    };
                  };
                  if (found_2936028525) {
                  nodeHEX3D_2936016604(self_2936027612, n_2936028174);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2936028520 = index_2969567340(n_2936028521);
                n_2936028521 = n_2936028521.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2936028333 = newGotoPopup_3154117132(self_2936027612.editor, self_2936027612.document);
      popup_2936028333.handleSymbolSelected = HEX3Aanonymous_2936028334;
      pushPopup_1291849067(self_2936027612.editor, popup_2936028333);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2936027607(self_2936028421, where_2936028422) {
    goto_2936027611(self_2936028421, where_2936028422);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2936027607(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2634022945(c_2634022946) {
  var result_2634022947 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022947.r = (c_2634022946.r / 255.0);
    result_2634022947.g = (c_2634022946.g / 255.0);
    result_2634022947.b = (c_2634022946.b / 255.0);
    result_2634022947.a = 1.0;

  return result_2634022947;

}

function addOutput_2936028588(self_2936028590, line_2936028591, color_2936028592) {
    if ((1500 <= (self_2936028590.lines).length)) {
    delete_2936013615(self_2936028590, "lines", HEX2EHEX2E_805306418(0, subInt((self_2936028590.lines).length, 1000)));
    }
    
    if ((0 < self_2936028590.scroll)) {
    self_2936028590.scroll = addInt(self_2936028590.scroll, 1);
    }
    
    self_2936028590.lines.push({Field0: nimCopy(null, line_2936028591, NTI33554449), Field1: color_2634022945(color_2936028592)});;

  
}

function rgb_2550136919(r_2550136920, g_2550136921, b_2550136922) {
  var result_2550136923 = ({r: 0, g: 0, b: 0});

    result_2550136923 = nimCopy(result_2550136923, {r: r_2550136920, g: g_2550136921, b: b_2550136922}, NTI2550136836);

  return result_2550136923;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2936028818 = 0;
      colontmp__2936028818 = (result_855640118).length;
      var i_2936028819 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936028819 < colontmp__2936028818)) break Label3;
            i_855640125 = i_2936028819;
            if ((ConstSet192[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2936028819 = addInt(i_2936028819, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet194[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2936028822 = 0;
      colontmp__2936028822 = subInt((s_855638126).length, 1);
      var res_2936028823 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936028823 <= colontmp__2936028822)) break Label3;
            iHEX60gensym11_855638133 = res_2936028823;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2936028823 = addInt(res_2936028823, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2516582876(result_2516582878, result_2516582878_Idx, value_2516582879, specifier_2516582880) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2516582880).length == 0)) {
    result_2516582878[result_2516582878_Idx].push.apply(result_2516582878[result_2516582878_Idx], HEX24_33557336(value_2516582879));;
    break BeforeRet;
    }
    
    var spec_2516582884 = parseStandardFormatSpecifier_721420346(specifier_2516582880, 0, false);
    var fmode_2516582885 = 0;
    switch (spec_2516582884.typ) {
    case 101:
    case 69:
      fmode_2516582885 = 2;
      break;
    case 102:
    case 70:
      fmode_2516582885 = 1;
      break;
    case 103:
    case 71:
      fmode_2516582885 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2516582884.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2516582887 = [nsuformatBiggestFloat(value_2516582879, fmode_2516582885, chckRange(spec_2516582884.precision, -1, 32), 46)];
    var sign_2516582888 = false;
    if ((0.0 <= value_2516582879)) {
    if (!((spec_2516582884.sign == 45))) {
    sign_2516582888 = true;
    if ((value_2516582879 == 0.0)) {
    if (((1.0 / value_2516582879) == Infinity)) {
    insert_33557745(f_2516582887, 0, nimCharToStr(spec_2516582884.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2516582887, 0, nimCharToStr(spec_2516582884.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2516582888 = true;
    }
    
    if (spec_2516582884.padWithZero) {
    var signStr_2516582889 = [];
    if (sign_2516582888) {
    signStr_2516582889 = nimCopy(null, nimCharToStr(f_2516582887[0][chckIndx(0, 0, (f_2516582887[0]).length - 1)]), NTI33554449);
    f_2516582887[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2516582887[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2516582911 = subInt(subInt(spec_2516582884.minimumWidth, (f_2516582887[0]).length), (sign_2516582888 ? 1 : 0));
    if ((0 < toFill_2516582911)) {
    f_2516582887[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2516582911, 0, 2147483647)) || []).concat(f_2516582887[0] || []), NTI33554449);
    }
    
    if (sign_2516582888) {
    f_2516582887[0] = nimCopy(null, (signStr_2516582889 || []).concat(f_2516582887[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2516582884.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2516582884.align;
    }
    
    var align_2516582912 = Temporary1;
    var res_2516582913 = alignString_721420308(f_2516582887[0], spec_2516582884.minimumWidth, align_2516582912, spec_2516582884.fill);
    if ((ConstSet193[spec_2516582884.typ] != undefined)) {
    result_2516582878[result_2516582878_Idx].push.apply(result_2516582878[result_2516582878_Idx], nsuToUpperAsciiStr(res_2516582913));;
    }
    else {
    result_2516582878[result_2516582878_Idx].push.apply(result_2516582878[result_2516582878_Idx], res_2516582913);;
    }
    
  };

  
}

function ms_2466250801(nanos_2466250802) {
  var result_2466250803 = 0.0;

    result_2466250803 = (nanos_2466250802 / 1000000.0);

  return result_2466250803;

}

function runSelectedFunction_2936028553(self_2936028554) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2936020308(self_2936028554)) {
    break BeforeRet;
    }
    
    var node_2936028555 = node_2936015481(self_2936028554);
    Label1: {
        Label2: while (true) {
        if (!!((node_2936028555.parent == null))) break Label2;
          if (((node_2936028555.parent == self_2936028554.document.rootNode) && (node_2936028555.kind == 8))) {
          var timer_2936028568 = startTimer_2466250804();
          var fmtRes_2936028573 = [mnewString(0)];
          fmtRes_2936028573[0].push.apply(fmtRes_2936028573[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3070231363(fmtRes_2936028573, 0, node_2936028555, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936028573[0], NTI33554449)]);
          updateNode_2986457136(ctx_2936012855, node_2936028555);
          var result_2936028579 = computeValue_2986421510(ctx_2936012855, node_2936028555, true);
          if (!((result_2936028579.kind == 1))) {
          if ((result_2936028579.kind == 0)) {
          Temporary3 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2936028588(executionOutput_2936012854[0], HEX24_3070231271(result_2936028579), Temporary3);
          }
          
          var fmtRes_2936028620 = [mnewString(0)];
          fmtRes_2936028620[0].push.apply(fmtRes_2936028620[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3070231363(fmtRes_2936028620, 0, node_2936028555, []);
          fmtRes_2936028620[0].push.apply(fmtRes_2936028620[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3120563615(fmtRes_2936028620, 0, result_2936028579, []);
          fmtRes_2936028620[0].push.apply(fmtRes_2936028620[0], [32,40,84,111,111,107,32]);;
          formatValue_2516582876(fmtRes_2936028620, 0, ms_2466250801(elapsed_2466250815(timer_2936028568)), []);
          fmtRes_2936028620[0].push.apply(fmtRes_2936028620[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936028620[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2936028555.kind == 4) && (0 < len_2969567320(node_2936028555))) && (HEX5BHEX5D_2969567316(node_2936028555, 0).kind == 11))) {
          var functionType_2936028644 = computeType_2986418034(ctx_2936012855, node_2936028555, true);
          if ((functionType_2936028644.kind == 0)) {
          var fmtRes_2936028653 = [mnewString(0)];
          fmtRes_2936028653[0].push.apply(fmtRes_2936028653[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3070231363(fmtRes_2936028653, 0, node_2936028555, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936028653[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2936028644.kind == 4))) {
          var fmtRes_2936028667 = [mnewString(0)];
          fmtRes_2936028667[0].push.apply(fmtRes_2936028667[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3070231363(fmtRes_2936028667, 0, node_2936028555, []);
          fmtRes_2936028667[0].push.apply(fmtRes_2936028667[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2986453108(fmtRes_2936028667, 0, functionType_2936028644, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936028667[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2936028644;
            if (ConstSet195[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2936028685 = [mnewString(0)];
          fmtRes_2936028685[0].push.apply(fmtRes_2936028685[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3070231363(fmtRes_2936028685, 0, node_2936028555, []);
          fmtRes_2936028685[0].push.apply(fmtRes_2936028685[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2986453108(fmtRes_2936028685, 0, functionType_2936028644, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936028685[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2936028700 = [mnewString(0)];
          fmtRes_2936028700[0].push.apply(fmtRes_2936028700[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3070231363(fmtRes_2936028700, 0, node_2936028555, []);
          fmtRes_2936028700[0].push.apply(fmtRes_2936028700[0], [32,40]);;
          formatValue_2986453108(fmtRes_2936028700, 0, functionType_2936028644, []);
          fmtRes_2936028700[0].push.apply(fmtRes_2936028700[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936028700[0], NTI33554449)]);
          var timer_2936028711 = startTimer_2466250804();
          var maxLoopIterations_2936028721 = getOption_2801811596(self_2936028554.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2936028729 = newFunctionExecutionContext_2986414751(ctx_2936012855, {node: HEX5BHEX5D_2969567316(node_2936028555, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2936028721), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2936028730 = computeFunctionExecution_2986437819(ctx_2936012855, fec_2936028729);
          if (!((result_2936028730.kind == 1))) {
          if ((result_2936028730.kind == 0)) {
          Temporary5 = rgb_2550136919(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2550136919(50, 255, 50);
          }
          
          addOutput_2936028588(executionOutput_2936012854[0], HEX24_3070231271(result_2936028730), Temporary5);
          }
          
          var fmtRes_2936028748 = [mnewString(0)];
          fmtRes_2936028748[0].push.apply(fmtRes_2936028748[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3070231363(fmtRes_2936028748, 0, node_2936028555, []);
          fmtRes_2936028748[0].push.apply(fmtRes_2936028748[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3120563615(fmtRes_2936028748, 0, result_2936028730, []);
          fmtRes_2936028748[0].push.apply(fmtRes_2936028748[0], [32,40,84,111,111,107,32]);;
          formatValue_2516582876(fmtRes_2936028748, 0, ms_2466250801(elapsed_2466250815(timer_2936028711)), []);
          fmtRes_2936028748[0].push.apply(fmtRes_2936028748[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936028748[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2936028555 = node_2936028555.parent;
        }
    };
    var fmtRes_2936028768 = [mnewString(0)];
    fmtRes_2936028768[0].push.apply(fmtRes_2936028768[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3070231363(fmtRes_2936028768, 0, node_2936015481(self_2936028554), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936028768[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2936028549(self_2936028801) {
    runSelectedFunction_2936028553(self_2936028801);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2936028549(this));};

function toggleOption_2936028831(self_2936028832, name_2936028833) {
    switch (toJSStr(name_2936028833)) {
    case "logging":
      ctx_2936012855.enableLogging = !(ctx_2936012855.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2936028827(self_2936028862, name_2936028863) {
    toggleOption_2936028831(self_2936028862, name_2936028863);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2936028827(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2936028893(self_2936028894, which_2936028895) {
    switch (toJSStr(which_2936028895)) {
    case "":
      var _ = handleAction_2936028883(self_2936028894, self_2936028894.lastCommand["Field0"], self_2936028894.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2936028883(self_2936028894, self_2936028894.lastMoveCommand["Field0"], self_2936028894.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2936028883(self_2936028894, self_2936028894.lastEditCommand["Field0"], self_2936028894.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2936028883(self_2936028894, self_2936028894.lastOtherCommand["Field0"], self_2936028894.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2936028889(self_2936028924, which_2936028925) {
    runLastCommand_2936028893(self_2936028924, which_2936028925);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2936028889(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3070230740(node_3070230741, index_3070230742) {
  var result_3070230743 = null;

  BeforeRet: {
    result_3070230743 = node_3070230741.children[chckIndx(index_3070230742, 0, (node_3070230741.children).length - 1)];
    break BeforeRet;
  };

  return result_3070230743;

}

function none_3070230773() {
  var result_3070230779 = ({val: null});

  return result_3070230779;

}

function none_3070230770() {
  var result_3070230772 = ({val: null});

    result_3070230772 = nimCopy(result_3070230772, none_3070230773(), NTI3070230680);

  return result_3070230772;

}

function index_3070230687(node_3070230688) {
  var result_3070230689 = 0;

  BeforeRet: {
    if ((node_3070230688.parent == null)) {
    result_3070230689 = -1;
    break BeforeRet;
    }
    
    result_3070230689 = 0;
    Label1: {
      var i_3070230716 = null;
      var i_2936029273 = 0;
      var L_2936029274 = (node_3070230688.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936029273 < L_2936029274)) break Label3;
            i_3070230716 = node_3070230688.parent.children[chckIndx(i_2936029273, 0, (node_3070230688.parent.children).length - 1)];
            if (HEX3DHEX3D_2046820592(i_3070230716.id, node_3070230688.id)) {
            break BeforeRet;
            }
            
            result_3070230689 = addInt(result_3070230689, 1);
            i_2936029273 = addInt(i_2936029273, 1);
            if (!(((node_3070230688.parent.children).length == L_2936029274))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3070230689;

}

function some_3070230792(val_3070230794) {
  var result_3070230795 = ({val: null});

    if (!(!((val_3070230794 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3070230795.val = val_3070230794;

  return result_3070230795;

}

function next_3070230759(node_3070230760) {
  var result_3070230765 = ({val: null});

  BeforeRet: {
    if ((node_3070230760.parent == null)) {
    result_3070230765 = nimCopy(result_3070230765, none_3070230770(), NTI3070230680);
    break BeforeRet;
    }
    
    var i_3070230789 = index_3070230687(node_3070230760);
    if ((subInt(len_3070230753(node_3070230760.parent), 1) <= i_3070230789)) {
    result_3070230765 = nimCopy(result_3070230765, none_3070230770(), NTI3070230680);
    break BeforeRet;
    }
    
    result_3070230765 = nimCopy(result_3070230765, some_3070230792(HEX5BHEX5D_3070230740(node_3070230760.parent, addInt(i_3070230789, 1))), NTI3070230680);
    break BeforeRet;
  };

  return result_3070230765;

}

function isSome_3070230841(self_3070230843) {
  var result_3070230844 = false;

    result_3070230844 = !((self_3070230843.val == null));

  return result_3070230844;

}

function isNone_3070230869(self_3070230871) {
  var result_3070230872 = false;

    result_3070230872 = (self_3070230871.val == null);

  return result_3070230872;

}

function get_3070230861(self_3070230863) {
  var result_3070230864 = null;

    if (isNone_3070230869(self_3070230863)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3070230864 = self_3070230863["val"];

  return result_3070230864;

}

function newSeq_2936029028(len_2936029030) {
  var result_2936029031 = [];

    result_2936029031 = new Array(len_2936029030); for (var i = 0 ; i < len_2936029030 ; ++i) { result_2936029031[i] = {Field0: 0.0, Field1: null}; }
  return result_2936029031;

}

function mergeAlt_2936029057(a_2936029059, b_2936029060, lo_2936029061, m_2936029062, hi_2936029063, cmp_2936029066, order_2936029067) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2936029066(a_2936029059[chckIndx(m_2936029062, 0, (a_2936029059).length - 1)], a_2936029059[chckIndx(addInt(m_2936029062, 1), 0, (a_2936029059).length - 1)]), order_2936029067) <= 0)) {
    break BeforeRet;
    }
    
    var j_2936029068 = lo_2936029061;
    if (!((j_2936029068 <= m_2936029062))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2936029074 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2936029068 <= m_2936029062)) break Label2;
          b_2936029060[chckIndx(bb_2936029074, 0, (b_2936029060).length - 1)] = nimCopy(b_2936029060[chckIndx(bb_2936029074, 0, (b_2936029060).length - 1)], a_2936029059[chckIndx(j_2936029068, 0, (a_2936029059).length - 1)], NTI2936023571);
          bb_2936029074 = addInt(bb_2936029074, 1);
          j_2936029068 = addInt(j_2936029068, 1);
        }
    };
    var i_2936029085 = 0;
    var k_2936029086 = lo_2936029061;
    Label3: {
        Label4: while (true) {
        if (!((k_2936029086 < j_2936029068) && (j_2936029068 <= hi_2936029063))) break Label4;
          if ((HEX2A_1023410184(cmp_2936029066(b_2936029060[chckIndx(i_2936029085, 0, (b_2936029060).length - 1)], a_2936029059[chckIndx(j_2936029068, 0, (a_2936029059).length - 1)]), order_2936029067) <= 0)) {
          a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)] = nimCopy(a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)], b_2936029060[chckIndx(i_2936029085, 0, (b_2936029060).length - 1)], NTI2936023571);
          i_2936029085 = addInt(i_2936029085, 1);
          }
          else {
            a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)] = nimCopy(a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)], a_2936029059[chckIndx(j_2936029068, 0, (a_2936029059).length - 1)], NTI2936023571);
            j_2936029068 = addInt(j_2936029068, 1);
          }
          
          k_2936029086 = addInt(k_2936029086, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2936029086 < j_2936029068)) break Label6;
          a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)] = nimCopy(a_2936029059[chckIndx(k_2936029086, 0, (a_2936029059).length - 1)], b_2936029060[chckIndx(i_2936029085, 0, (b_2936029060).length - 1)], NTI2936023571);
          k_2936029086 = addInt(k_2936029086, 1);
          i_2936029085 = addInt(i_2936029085, 1);
        }
    };
  };

  
}

function sort_2936029016(a_2936029018, cmp_2936029021, order_2936029022) {
    var n_2936029027 = (a_2936029018).length;
    var b_2936029054 = newSeq_2936029028(chckRange(divInt(n_2936029027, 2), 0, 2147483647));
    var s_2936029055 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2936029055 < n_2936029027)) break Label2;
          var m_2936029056 = subInt(subInt(n_2936029027, 1), s_2936029055);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2936029056)) break Label4;
                mergeAlt_2936029057(a_2936029018, b_2936029054, nimMax(addInt(subInt(m_2936029056, s_2936029055), 1), 0), m_2936029056, addInt(m_2936029056, s_2936029055), cmp_2936029021, order_2936029022);
                m_2936029056 = subInt(m_2936029056, mulInt(s_2936029055, 2));
              }
          };
          s_2936029055 = mulInt(s_2936029055, 2);
        }
    };

  
}

function cmp_2936028996(x_2936028998, y_2936028999) {
  var result_2936029000 = 0;

  BeforeRet: {
    if ((x_2936028998 == y_2936028999)) {
    result_2936029000 = 0;
    break BeforeRet;
    }
    
    if ((x_2936028998 < y_2936028999)) {
    result_2936029000 = -1;
    break BeforeRet;
    }
    
    result_2936029000 = 1;
    break BeforeRet;
  };

  return result_2936029000;

}

function selectCenterNode_2936028951(self_2936028952) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2936028984(a_2936029003, b_2936029004) {
      var result_2936029009 = 0;

        result_2936029009 = cmp_2936028996(a_2936029003.Field0, b_2936029004.Field0);

      return result_2936029009;

    }

    var nodes_2936028959 = [];
    Label1: {
      var layout_2936028963 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2936028964 = ({x: 0.0, y: 0.0});
      var i_2936029264 = 0;
      var L_2936029265 = (self_2936028952.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936029264 < L_2936029265)) break Label3;
            layout_2936028963 = self_2936028952.lastLayouts[chckIndx(i_2936029264, 0, (self_2936028952.lastLayouts).length - 1)]["Field0"];
            offset_2936028964 = self_2936028952.lastLayouts[chckIndx(i_2936029264, 0, (self_2936028952.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2936028965 = 0;
              var node_2936028966 = null;
              var n_2936029255 = layout_2936028963.root;
              var idx_2936029256 = -1;
              var i_2936029257 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2936029256 == -1)) {
                    var colontmp__2936029260 = nimCopy(null, {Field0: i_2936029257, Field1: n_2936029255}, NTI3070230751);
                    i_2936028965 = colontmp__2936029260["Field0"];
                    node_2936028966 = colontmp__2936029260["Field1"];
                    if ((!((node_2936028966.node == null)) && (0 < len_3070230753(node_2936028966)))) {
                    var bounds_2936028970 = absoluteBounds_3070232318(node_2936028966);
                    if (intersects_2097152177(rect_2113929234(0.0, 0.0, self_2936028952.lastBounds.w, self_2936028952.lastBounds.h), HEX2B_2097152155(bounds_2936028970, vec2_2130707293(0.0, offset_2936028964.y)))) {
                    nodes_2936028959.push({Field0: (bounds_2936028970.y + offset_2936028964.y), Field1: node_2936028966});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2936029256, 1) < len_3070230753(n_2936029255))) {
                    n_2936029255 = HEX5BHEX5D_3070230740(n_2936029255, addInt(idx_2936029256, 1));
                    idx_2936029256 = -1;
                    }
                    else {
                      var oHEX60gensym5_2936029261 = next_3070230759(n_2936029255);
                      if (!isSome_3070230841(oHEX60gensym5_2936029261)) Temporary9 = false; else {                        var ne_2936029262 = get_3070230861(oHEX60gensym5_2936029261);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2936029255 == null));                      }                    if (Temporary8) {
                    n_2936029255 = ne_2936029262;
                    idx_2936029256 = -1;
                    }
                    else {
                    if (((!((n_2936029255.parent == null)) && !((n_2936029255 == null))) && !((n_2936029255.parent == null)))) {
                    idx_2936029256 = index_3070230687(n_2936029255);
                    n_2936029255 = n_2936029255.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2936029257 = addInt(i_2936029257, 1);
                    }
                  }
              };
            };
            i_2936029264 = addInt(i_2936029264, 1);
            if (!(((self_2936028952.lastLayouts).length == L_2936029265))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2936029016(nodes_2936028959, HEX3Aanonymous_2936028984, 1);
    if ((0 < (nodes_2936028959).length)) {
    var firstY_2936029130 = nodes_2936028959[chckIndx(0, 0, (nodes_2936028959).length - 1)].Field0;
    var lastY_2936029134 = nodes_2936028959[chckIndx((nodes_2936028959).length - 1, 0, (nodes_2936028959).length - 1)].Field0;
    var middleY_2936029135 = ((firstY_2936029130 + lastY_2936029134) * 0.5);
    Label10: {
      var i_2936029168 = 0;
      var y_2936029169 = 0.0;
      var node_2936029170 = null;
      var i_2936029269 = 0;
      var L_2936029270 = (nodes_2936028959).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2936029269 < L_2936029270)) break Label12;
            i_2936029168 = i_2936029269;
            y_2936029169 = nodes_2936028959[chckIndx(i_2936029269, 0, (nodes_2936028959).length - 1)]["Field0"];
            node_2936029170 = nodes_2936028959[chckIndx(i_2936029269, 0, (nodes_2936028959).length - 1)]["Field1"];
            if (((i_2936029168 == (nodes_2936028959).length - 1) || (middleY_2936029135 < nodes_2936028959[chckIndx(addInt(i_2936029168, 1), 0, (nodes_2936028959).length - 1)].Field0))) {
            nodeHEX3D_2936016604(self_2936028952, node_2936029170.node);
            break Label10;
            }
            
            i_2936029269 = addInt(i_2936029269, 1);
            if (!(((nodes_2936028959).length == L_2936029270))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2936028947(self_2936029237) {
    selectCenterNode_2936028951(self_2936029237);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2936028947(this));};

function scroll_2936029287(self_2936029288, amount_2936029289) {
    HEX2BHEX3D_855640304(self_2936029288, "scrollOffset", amount_2936029289);

  
}

function scrollJsWrapper_2936029283(self_2936029322, amount_2936029323) {
    scroll_2936029287(self_2936029322, amount_2936029323);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2936029283(this, amount_));};

function scrollOutput_2936029349(self_2936029350, arg_2936029351) {
    switch (toJSStr(arg_2936029351)) {
    case "home":
      executionOutput_2936012854[0].scroll = (executionOutput_2936012854[0].lines).length;
      break;
    case "end":
      executionOutput_2936012854[0].scroll = 0;
      break;
    default: 
      executionOutput_2936012854[0].scroll = clamp_1660945119(addInt(executionOutput_2936012854[0].scroll, nsuParseInt(arg_2936029351)), 0, (executionOutput_2936012854[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2936029345(self_2936029391, arg_2936029392) {
    scrollOutput_2936029349(self_2936029391, arg_2936029392);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2936029345(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2936029597 = 0;
      var last_2936029598 = 0;
      var eolpos_2936029599 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2936029598 < (s_855639240).length) && !((ConstSet196[s_855639240[chckIndx(last_2936029598, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2936029598 = addInt(last_2936029598, 1);
                }
            };
            eolpos_2936029599 = last_2936029598;
            if ((last_2936029598 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2936029598, 0, (s_855639240).length - 1)] == 10)) {
            last_2936029598 = addInt(last_2936029598, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2936029598, 0, (s_855639240).length - 1)] == 13)) {
            last_2936029598 = addInt(last_2936029598, 1);
            if (((last_2936029598 < (s_855639240).length) && (s_855639240[chckIndx(last_2936029598, 0, (s_855639240).length - 1)] == 10))) {
            last_2936029598 = addInt(last_2936029598, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2936029598, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2936029599, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2936029597, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2936029594 = 0;
              colontmp__2936029594 = count_855639241;
              var res_2936029595 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2936029595 <= colontmp__2936029594)) break Label9;
                    j_855639250 = res_2936029595;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2936029595 = addInt(res_2936029595, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2936029599 == last_2936029598)) {
            break Label2;
            }
            
            first_2936029597 = last_2936029598;
          }
      };
    };

  return result_855639243;

}

function HEX24_3003139756(graph_3003139757) {
  var result_3003139758 = [];

    result_3003139758 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3003139758.push.apply(result_3003139758, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3003139757.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3003139758;

}

function toString_2986397164(HEX3Atmp_2986344661) {
  var result_2986397165 = [];

  BeforeRet: {
    var HEX3Atmp_2986344662 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_2986397261 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_2986397262 = null;
      Label2: {
        var node_2936029468 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936029469 = HEX3Atmp_2986344661.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936029469 == null))) break Label4;
              node_2936029468 = nimCopy(node_2936029468, it_2936029469.value, NTI2986344510);
              var colontmp__2936029472 = nimCopy(null, {Field0: nimCopy(null, node_2936029468.key, NTI3003121689), Field1: node_2936029468.val}, NTI2986375446);
              keyHEX60gensym50_2986397261 = nimCopy(keyHEX60gensym50_2986397261, colontmp__2936029472["Field0"], NTI3003121689);
              valueHEX60gensym50_2986397262 = colontmp__2936029472["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym50_2986397261) || [],[32,45,62,32] || [],HEX24_2969569239(valueHEX60gensym50_2986397262) || [],[10] || []));;
              it_2936029469 = it_2936029469.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym51_2986397358 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_2986397359 = null;
      Label6: {
        var node_2936029478 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936029479 = HEX3Atmp_2986344661.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_2936029479 == null))) break Label8;
              node_2936029478 = nimCopy(node_2936029478, it_2936029479.value, NTI2986344583);
              var colontmp__2936029482 = nimCopy(null, {Field0: nimCopy(null, node_2936029478.key, NTI3003121689), Field1: node_2936029478.val}, NTI2986375499);
              keyHEX60gensym51_2986397358 = nimCopy(keyHEX60gensym51_2986397358, colontmp__2936029482["Field0"], NTI3003121689);
              valueHEX60gensym51_2986397359 = colontmp__2936029482["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym51_2986397358) || [],[32,45,62,32] || [],HEX24_3070232746(valueHEX60gensym51_2986397359) || [],[10] || []));;
              it_2936029479 = it_2936029479.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label9: {
      var keyHEX60gensym52_2986397455 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_2986397456 = null;
      Label10: {
        var node_2936029489 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936029490 = HEX3Atmp_2986344661.itemsSymbol.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_2936029490 == null))) break Label12;
              node_2936029489 = nimCopy(node_2936029489, it_2936029490.value, NTI2986344647);
              var colontmp__2936029493 = nimCopy(null, {Field0: nimCopy(null, node_2936029489.key, NTI3003121689), Field1: node_2936029489.val}, NTI2986375552);
              keyHEX60gensym52_2986397455 = nimCopy(keyHEX60gensym52_2986397455, colontmp__2936029493["Field0"], NTI3003121689);
              valueHEX60gensym52_2986397456 = colontmp__2936029493["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym52_2986397455) || [],[32,45,62,32] || [],HEX24_3070231688(valueHEX60gensym52_2986397456) || [],[10] || []));;
              it_2936029490 = it_2936029490.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label13: {
      var keyHEX60gensym53_2986397552 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_2986397553 = null;
      Label14: {
        var node_2936029499 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936029500 = HEX3Atmp_2986344661.itemsFunctionExecutionContext.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_2936029500 == null))) break Label16;
              node_2936029499 = nimCopy(node_2936029499, it_2936029500.value, NTI2986344711);
              var colontmp__2936029503 = nimCopy(null, {Field0: nimCopy(null, node_2936029499.key, NTI3003121689), Field1: node_2936029499.val}, NTI2986375605);
              keyHEX60gensym53_2986397552 = nimCopy(keyHEX60gensym53_2986397552, colontmp__2936029503["Field0"], NTI3003121689);
              valueHEX60gensym53_2986397553 = colontmp__2936029503["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym53_2986397552) || [],[32,45,62,32] || [],HEX24_3070231355(valueHEX60gensym53_2986397553) || [],[10] || []));;
              it_2936029500 = it_2936029500.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label17: {
      var keyHEX60gensym54_2986397640 = null;
      var valueHEX60gensym54_2986397641 = null;
      Label18: {
        var node_2936029510 = ({key: null, val: null});
        var it_2936029511 = HEX3Atmp_2986344661.queryCacheType.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_2936029511 == null))) break Label20;
              node_2936029510 = nimCopy(node_2936029510, it_2936029511.value, NTI2986344813);
              var colontmp__2936029514 = nimCopy(null, {Field0: node_2936029510.key, Field1: node_2936029510.val}, NTI2986375658);
              keyHEX60gensym54_2986397640 = colontmp__2936029514["Field0"];
              valueHEX60gensym54_2986397641 = colontmp__2936029514["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym54_2986397640) || [],[32,45,62,32] || [],HEX24_3070230964(valueHEX60gensym54_2986397641) || [],[10] || []));;
              it_2936029511 = it_2936029511.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label21: {
      var keyHEX60gensym55_2986397737 = null;
      var valueHEX60gensym55_2986397738 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label22: {
        var node_2936029521 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936029522 = HEX3Atmp_2986344661.queryCacheValue.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_2936029522 == null))) break Label24;
              node_2936029521 = nimCopy(node_2936029521, it_2936029522.value, NTI2986344888);
              var colontmp__2936029525 = nimCopy(null, {Field0: node_2936029521.key, Field1: nimCopy(null, node_2936029521.val, NTI3070230535)}, NTI2986375705);
              keyHEX60gensym55_2986397737 = colontmp__2936029525["Field0"];
              valueHEX60gensym55_2986397738 = nimCopy(valueHEX60gensym55_2986397738, colontmp__2936029525["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym55_2986397737) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym55_2986397738) || [],[10] || []));;
              it_2936029522 = it_2936029522.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label25: {
      var keyHEX60gensym56_2986397825 = null;
      var valueHEX60gensym56_2986397826 = ({val: null});
      Label26: {
        var node_2936029532 = ({key: null, val: ({val: null})});
        var it_2936029533 = HEX3Atmp_2986344661.queryCacheSymbol.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_2936029533 == null))) break Label28;
              node_2936029532 = nimCopy(node_2936029532, it_2936029533.value, NTI2986344959);
              var colontmp__2936029536 = nimCopy(null, {Field0: node_2936029532.key, Field1: nimCopy(null, node_2936029532.val, NTI3070231688)}, NTI2986375752);
              keyHEX60gensym56_2986397825 = colontmp__2936029536["Field0"];
              valueHEX60gensym56_2986397826 = nimCopy(valueHEX60gensym56_2986397826, colontmp__2936029536["Field1"], NTI3070231688);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym56_2986397825) || [],[32,45,62,32] || [],HEX24_2986397884(valueHEX60gensym56_2986397826) || [],[10] || []));;
              it_2936029533 = it_2936029533.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label29: {
      var keyHEX60gensym57_2986397991 = null;
      var valueHEX60gensym57_2986397992 = null;
      Label30: {
        var node_2936029543 = ({key: null, val: null});
        var it_2936029544 = HEX3Atmp_2986344661.queryCacheSymbols.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_2936029544 == null))) break Label32;
              node_2936029543 = nimCopy(node_2936029543, it_2936029544.value, NTI2986345032);
              var colontmp__2936029547 = nimCopy(null, {Field0: node_2936029543.key, Field1: node_2936029543.val}, NTI2986375846);
              keyHEX60gensym57_2986397991 = colontmp__2936029547["Field0"];
              valueHEX60gensym57_2986397992 = colontmp__2936029547["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym57_2986397991) || [],[32,45,62,32] || [],HEX24_2986398050(valueHEX60gensym57_2986397992) || [],[10] || []));;
              it_2936029544 = it_2936029544.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label33: {
      var keyHEX60gensym58_2986398239 = null;
      var valueHEX60gensym58_2986398240 = null;
      Label34: {
        var node_2936029554 = ({key: null, val: null});
        var it_2936029555 = HEX3Atmp_2986344661.queryCacheSymbolType.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_2936029555 == null))) break Label36;
              node_2936029554 = nimCopy(node_2936029554, it_2936029555.value, NTI2986345098);
              var colontmp__2936029558 = nimCopy(null, {Field0: node_2936029554.key, Field1: node_2936029554.val}, NTI2986375979);
              keyHEX60gensym58_2986398239 = colontmp__2936029558["Field0"];
              valueHEX60gensym58_2986398240 = colontmp__2936029558["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231688(keyHEX60gensym58_2986398239) || [],[32,45,62,32] || [],HEX24_3070230964(valueHEX60gensym58_2986398240) || [],[10] || []));;
              it_2936029555 = it_2936029555.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label37: {
      var keyHEX60gensym59_2986398336 = null;
      var valueHEX60gensym59_2986398337 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label38: {
        var node_2936029565 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936029566 = HEX3Atmp_2986344661.queryCacheSymbolValue.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_2936029566 == null))) break Label40;
              node_2936029565 = nimCopy(node_2936029565, it_2936029566.value, NTI2986345173);
              var colontmp__2936029569 = nimCopy(null, {Field0: node_2936029565.key, Field1: nimCopy(null, node_2936029565.val, NTI3070230535)}, NTI2986376026);
              keyHEX60gensym59_2986398336 = colontmp__2936029569["Field0"];
              valueHEX60gensym59_2986398337 = nimCopy(valueHEX60gensym59_2986398337, colontmp__2936029569["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231688(keyHEX60gensym59_2986398336) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym59_2986398337) || [],[10] || []));;
              it_2936029566 = it_2936029566.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label41: {
      var keyHEX60gensym60_2986398433 = null;
      var valueHEX60gensym60_2986398434 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_2936029576 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936029577 = HEX3Atmp_2986344661.queryCacheFunctionExecution.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_2936029577 == null))) break Label44;
              node_2936029576 = nimCopy(node_2936029576, it_2936029577.value, NTI2986345239);
              var colontmp__2936029580 = nimCopy(null, {Field0: node_2936029576.key, Field1: nimCopy(null, node_2936029576.val, NTI3070230535)}, NTI2986376073);
              keyHEX60gensym60_2986398433 = colontmp__2936029580["Field0"];
              valueHEX60gensym60_2986398434 = nimCopy(valueHEX60gensym60_2986398434, colontmp__2936029580["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231355(keyHEX60gensym60_2986398433) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym60_2986398434) || [],[10] || []));;
              it_2936029577 = it_2936029577.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label45: {
      var keyHEX60gensym61_2986398521 = null;
      var valueHEX60gensym61_2986398522 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label46: {
        var node_2936029587 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_2936029588 = HEX3Atmp_2986344661.queryCacheNodeLayout.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_2936029588 == null))) break Label48;
              node_2936029587 = nimCopy(node_2936029587, it_2936029588.value, NTI2986345314);
              var colontmp__2936029591 = nimCopy(null, {Field0: node_2936029587.key, Field1: nimCopy(null, node_2936029587.val, NTI3070230559)}, NTI2986376120);
              keyHEX60gensym61_2986398521 = colontmp__2936029591["Field0"];
              valueHEX60gensym61_2986398522 = nimCopy(valueHEX60gensym61_2986398522, colontmp__2936029591["Field1"], NTI3070230559);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070232746(keyHEX60gensym61_2986398521) || [],[32,45,62,32] || [],HEX24_3070232709(valueHEX60gensym61_2986398522) || [],[10] || []));;
              it_2936029588 = it_2936029588.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, nsuIndent(HEX24_3003139756(HEX3Atmp_2986344661.depGraph), 1, [124,32]));;
    result_2986397165 = nimCopy(null, HEX3Atmp_2986344662, NTI33554449);
    break BeforeRet;
  };

  return result_2986397165;

}

function dumpContext_2936029418(self_2936029419) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_2986397164(ctx_2936012855)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2936029414(self_2936029447) {
    dumpContext_2936029418(self_2936029447);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2936029414(this));};

function getModeConfig_2936029602(self_2936029603, mode_2936029604) {
  var result_2936029605 = null;

  BeforeRet: {
    result_2936029605 = getEventHandlerConfig_1291849169(self_2936029603.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2936029604 || []));
    break BeforeRet;
  };

  return result_2936029605;

}

function setMode_2936029612(self_2936029613, mode_2936029614) {
        
function HEX3Aanonymous_2936029635(actionHEX60gensym989HEX60gensym990_2936029636, argHEX60gensym989HEX60gensym990_2936029637) {
          var result_2936029638 = 0;

          BeforeRet: {
            if (handlerHEX60gensym989_2936029623.config.handleActions) {
            var action_2936029639 = nimCopy(null, actionHEX60gensym989HEX60gensym990_2936029636, NTI33554449);
            var arg_2936029640 = nimCopy(null, argHEX60gensym989HEX60gensym990_2936029637, NTI33554449);
            var responseHEX60gensym989HEX60gensym990_2936029641 = handleAction_2936028883(self_2936029613, action_2936029639, arg_2936029640);
            if (handlerHEX60gensym989_2936029623.config.consumeAllActions) {
            result_2936029638 = 3;
            break BeforeRet;
            }
            
            result_2936029638 = responseHEX60gensym989HEX60gensym990_2936029641;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym989_2936029623.config.consumeAllActions) {
            result_2936029638 = 3;
            break BeforeRet;
            }
            else {
              result_2936029638 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2936029638;

        }
        
function HEX3Aanonymous_2936029643(inputHEX60gensym989HEX60gensym991_2936029644) {
          var result_2936029645 = 0;

          BeforeRet: {
            if (handlerHEX60gensym989_2936029623.config.handleInputs) {
            var input_2936029646 = nimCopy(null, inputHEX60gensym989HEX60gensym991_2936029644, NTI33554449);
            result_2936029645 = 1;
            break BeforeRet;
            }
            else {
              result_2936029645 = 1;
              break BeforeRet;
            }
            
          };

          return result_2936029645;

        }

    if (((mode_2936029614).length == 0)) {
    self_2936029613.modeEventHandler = null;
    }
    else {
      var config_2936029615 = getModeConfig_2936029602(self_2936029613, mode_2936029614);
      Label1: {
        var handlerHEX60gensym989_2936029623 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym989_2936029623.config = config_2936029615;
        handlerHEX60gensym989_2936029623.dfaInternal = buildDFA_2080374847(config_2936029615);
        handlerHEX60gensym989_2936029623.handleAction = HEX3Aanonymous_2936029635;
        handlerHEX60gensym989_2936029623.handleInput = HEX3Aanonymous_2936029643;
      };
      self_2936029613.modeEventHandler = handlerHEX60gensym989_2936029623;
    }
    
    self_2936029613.currentMode = nimCopy(null, mode_2936029614, NTI33554449);

  
}

function setModeJsWrapper2_2936029608(self_2936029675, mode_2936029676) {
    setMode_2936029612(self_2936029675, mode_2936029676);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2936029608(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2936029703(self_2936029704) {
  var result_2936029705 = [];

  BeforeRet: {
    result_2936029705 = nimCopy(null, self_2936029704.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2936029705;

}

function modeJsWrapper2_2936029699(self_2936029734) {
  var result_2936029735 = [];

    result_2936029735 = nimCopy(null, mode_2936029703(self_2936029734), NTI33554449);

  return result_2936029735;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2936029699(this));};

function getContextWithMode_2936029760(self_2936029761, context_2936029762) {
  var result_2936029763 = [];

  BeforeRet: {
    result_2936029763 = nimCopy(null, (context_2936029762 || []).concat([46] || [],self_2936029761.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2936029763;

}

function getContextWithModeJsWrapper2_2936029756(self_2936029793, context_2936029794) {
  var result_2936029795 = [];

    result_2936029795 = nimCopy(null, getContextWithMode_2936029760(self_2936029793, context_2936029794), NTI33554449);

  return result_2936029795;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2936029756(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function markDirty_2449473557(self_2449473558) {
    if (!(self_2449473558.mDirty)) {
    invoke_2382364734(self_2449473558.onMarkedDirty);
    }
    
    self_2449473558.mDirty = true;

  
}

function accept_3204448640(self_3204448641) {
    if ((self_3204448641.selected < (self_3204448641.completions).length)) {
    self_3204448641.handleItemConfirmed(self_3204448641.completions[chckIndx(self_3204448641.selected, 0, (self_3204448641.completions).length - 1)]);
    }
    
    popPopup_1291849122(self_3204448641.editor, self_3204448641);
    markDirty_2449473557(self_3204448641);

  
}

function acceptJsWrapper_3204448636(self_3204448697) {
    accept_3204448640(self_3204448697);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3204448636(this));};

function cancel_3204448739(self_3204448740) {
    if (!((self_3204448740.handleCanceled == null))) {
    self_3204448740.handleCanceled();
    }
    
    popPopup_1291849122(self_3204448740.editor, self_3204448740);
    markDirty_2449473557(self_3204448740);

  
}

function cancelJsWrapper_3204448735(self_3204448774) {
    cancel_3204448739(self_3204448774);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3204448735(this));};

function prev_3204448795(self_3204448796) {
    var Temporary1;

    if (((self_3204448796.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3204448796.selected, (self_3204448796.completions).length), 1), (self_3204448796.completions).length);
    }
    
    self_3204448796.selected = Temporary1;
    if (((0 < (self_3204448796.completions).length) && !((self_3204448796.handleItemSelected == null)))) {
    self_3204448796.handleItemSelected(self_3204448796.completions[chckIndx(self_3204448796.selected, 0, (self_3204448796.completions).length - 1)]);
    }
    
    markDirty_2449473557(self_3204448796);

  
}

function prevJsWrapper_3204448791(self_3204448842) {
    prev_3204448795(self_3204448842);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3204448791(this));};

function next_3204448863(self_3204448864) {
    var Temporary1;

    if (((self_3204448864.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3204448864.selected, 1), (self_3204448864.completions).length);
    }
    
    self_3204448864.selected = Temporary1;
    if (((0 < (self_3204448864.completions).length) && !((self_3204448864.handleItemSelected == null)))) {
    self_3204448864.handleItemSelected(self_3204448864.completions[chckIndx(self_3204448864.selected, 0, (self_3204448864.completions).length - 1)]);
    }
    
    markDirty_2449473557(self_3204448864);

  
}

function nextJsWrapper_3204448859(self_3204448907) {
    next_3204448863(self_3204448907);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3204448859(this));};

function getBackend_1291854152(self_1291854153) {
  var result_1291854154 = 0;

  BeforeRet: {
    result_1291854154 = self_1291854153.backend;
    break BeforeRet;
  };

  return result_1291854154;

}

function getBackendJsWrapper_1291854148(self_1291854205) {
  var result_1291854206 = 0;

    result_1291854206 = getBackend_1291854152(self_1291854205);

  return result_1291854206;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291854148(this));};

function get_2315255863(self_2315255865, otherwise_2315255866) {
    var Temporary1;

  var result_2315255867 = [];

    if (isSome_2315255872(self_2315255865)) {
    Temporary1 = self_2315255865.val;
    }
    else {
    Temporary1 = otherwise_2315255866;
    }
    
    result_2315255867 = nimCopy(null, Temporary1, NTI33554449);

  return result_2315255867;

}

function isSome_2801801582(self_2801801584) {
  var result_2801801585 = false;

    result_2801801585 = !((self_2801801584.val == null));

  return result_2801801585;

}

function map_1291854425(self_1291854428, callback_1291854430) {
    var Temporary1;

  var result_1291854431 = ({val: [], has: false});

    if (isSome_2801801582(self_1291854428)) {
    Temporary1 = some_2248146978(callback_1291854430(self_1291854428.val));
    }
    else {
    Temporary1 = none_2315255831();
    }
    
    result_1291854431 = nimCopy(result_1291854431, Temporary1, NTI2315255829);

  return result_1291854431;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854539(a_1291854541, opt_1291854542) {
  var result_1291854543 = null;

    result_1291854543 = HEX25_1627391792(a_1291854541);

  return result_1291854543;

}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet197[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291854606(a_1291854608) {
  var result_1291854609 = [];

    result_1291854609 = nimCopy(null, names_1291854611[chckIndx(subInt(a_1291854608, 0), 0, (names_1291854611).length - 1)], NTI33554449);

  return result_1291854609;

}

function toJson_1291854591(a_1291854593, opt_1291854594) {
    var Temporary1;

  var result_1291854595 = null;

    switch (opt_1291854594.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854593);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854606(a_1291854593), opt_1291854594);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854593, NTI1291845663), opt_1291854594);
      break;
    }
    result_1291854595 = Temporary1;

  return result_1291854595;

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function copy_1627394272(p_1627394273) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
        var Temporary6;
              var Temporary9;
        var Temporary11;
              var Temporary14;

  var result_1627394274 = null;

    switch (p_1627394273.kind) {
    case 4:
      var Temporary1 = p_1627394273;
      if (ConstSet198[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627394274 = newJString_1627389994(Temporary1.str);
      result_1627394274.isUnquoted = p_1627394273.isUnquoted;
      break;
    case 2:
      var Temporary2 = p_1627394273;
      if (ConstSet199[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627394274 = newJInt_1627390040(Temporary2.num);
      break;
    case 3:
      var Temporary3 = p_1627394273;
      if (ConstSet200[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      result_1627394274 = newJFloat_1627390043(Temporary3.fnum);
      break;
    case 1:
      var Temporary4 = p_1627394273;
      if (ConstSet201[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      result_1627394274 = newJBool_1627390046(Temporary4.bval);
      break;
    case 0:
      result_1627394274 = newJNull_1627390049();
      break;
    case 5:
      result_1627394274 = newJObject_1627390051();
      Label5: {
        var key_1627394279 = [];
        var val_1627394280 = null;
        var colontmp__1291855123 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = p_1627394273;
        if (ConstSet202[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855123 = nimCopy(colontmp__1291855123, Temporary6.fields, NTI1627389966);
        var L_1291855125 = len_1627392114(colontmp__1291855123);
        if ((0 < colontmp__1291855123.counter)) {
        var h_1291855126 = colontmp__1291855123.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855126)) break Label8;
              var nxt_1291855128 = colontmp__1291855123.data[chckIndx(h_1291855126, 0, (colontmp__1291855123.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855123.data[chckIndx(h_1291855126, 0, (colontmp__1291855123.data).length - 1)].Field0)) {
              key_1627394279 = colontmp__1291855123.data[chckIndx(h_1291855126, 0, (colontmp__1291855123.data).length - 1)].Field2;
              val_1627394280 = colontmp__1291855123.data[chckIndx(h_1291855126, 0, (colontmp__1291855123.data).length - 1)].Field3;
              var Temporary9 = result_1627394274;
              if (ConstSet203[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
              HEX5BHEX5DHEX3D_1627390259(Temporary9.fields, key_1627394279, copy_1627394272(val_1627394280));
              if (!((len_1627392114(colontmp__1291855123) == L_1291855125))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855126 = nxt_1291855128;
            }
        };
        }
        
      };
      break;
    case 6:
      result_1627394274 = newJArray_1627390082();
      Label10: {
        var i_1627394330 = null;
        var colontmp__1291855130 = [];
        var Temporary11 = p_1627394273;
        if (ConstSet204[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
        colontmp__1291855130 = Temporary11.elems;
        var i_1291855132 = 0;
        var L_1291855133 = (colontmp__1291855130).length;
        Label12: {
            Label13: while (true) {
            if (!(i_1291855132 < L_1291855133)) break Label13;
              i_1627394330 = colontmp__1291855130[chckIndx(i_1291855132, 0, (colontmp__1291855130).length - 1)];
              var Temporary14 = result_1627394274;
              if (ConstSet205[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
              Temporary14.elems.push(copy_1627394272(i_1627394330));;
              i_1291855132 = addInt(i_1291855132, 1);
              if (!(((colontmp__1291855130).length == L_1291855133))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    }

  return result_1627394274;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2801811058(a_2801811060, opt_2801811061) {
  var result_2801811062 = null;

    result_2801811062 = HEX25_1627391795(a_2801811060);

  return result_2801811062;

}

function symbolName_1291854740(a_1291854742) {
  var result_1291854743 = [];

    result_1291854743 = nimCopy(null, names_1291854745[chckIndx(subInt(a_1291854742, 0), 0, (names_1291854745).length - 1)], NTI33554449);

  return result_1291854743;

}

function toJson_1291854724(a_1291854726, opt_1291854727) {
    var Temporary1;

  var result_1291854728 = null;

    switch (opt_1291854727.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854726);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854740(a_1291854726), opt_1291854727);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854726, NTI1627389955), opt_1291854727);
      break;
    }
    result_1291854728 = Temporary1;

  return result_1291854728;

}

function HEX25_1627391789(n_1627391790) {
  var result_1627391791 = null;

    result_1627391791 = {kind: 2, num: n_1627391790, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391791;

}

function toJson_1291854834(a_1291854836, opt_1291854837) {
  var result_1291854838 = null;

    result_1291854838 = HEX25_1627391789(a_1291854836);

  return result_1291854838;

}

function toJson_1291854844(a_1291854846, opt_1291854847) {
  var result_1291854848 = null;

    result_1291854848 = HEX25_1627391792(a_1291854846);

  return result_1291854848;

}

function toJsonHook_1291854937(t_1291854941, opt_1291854942) {
  var result_1291854943 = null;

    result_1291854943 = newJObject_1627390051();
    Label1: {
      var k_1291854948 = [];
      var v_1291854949 = null;
      var L_1291855136 = len_1627392114(t_1291854941);
      if ((0 < t_1291854941.counter)) {
      var h_1291855137 = t_1291854941.first;
      Label2: {
          Label3: while (true) {
          if (!(0 <= h_1291855137)) break Label3;
            var nxt_1291855139 = t_1291854941.data[chckIndx(h_1291855137, 0, (t_1291854941.data).length - 1)].Field1;
            if (isFilled_1308622880(t_1291854941.data[chckIndx(h_1291855137, 0, (t_1291854941.data).length - 1)].Field0)) {
            k_1291854948 = t_1291854941.data[chckIndx(h_1291855137, 0, (t_1291854941.data).length - 1)].Field2;
            v_1291854949 = t_1291854941.data[chckIndx(h_1291855137, 0, (t_1291854941.data).length - 1)].Field3;
            HEX5BHEX5DHEX3D_1627391903(result_1291854943, k_1291854948, toJson_1291854695(v_1291854949, opt_1291854942));
            if (!((len_1627392114(t_1291854941) == L_1291855136))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_1291855137 = nxt_1291855139;
          }
      };
      }
      
    };

  return result_1291854943;

}

function toJson_1291854859(a_1291854861, opt_1291854862) {
  var result_1291854863 = null;

    result_1291854863 = toJsonHook_1291854937(a_1291854861, opt_1291854862);

  return result_1291854863;

}

function toJson_1291854954(a_1291854956, opt_1291854957) {
  var result_1291854958 = null;

    result_1291854958 = newJArray_1627390082();
    Label1: {
      var ai_1291854965 = null;
      var i_1291855141 = 0;
      var L_1291855142 = (a_1291854956).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855141 < L_1291855142)) break Label3;
            ai_1291854965 = a_1291854956[chckIndx(i_1291855141, 0, (a_1291854956).length - 1)];
            add_1627390190(result_1291854958, toJson_1291854695(ai_1291854965, opt_1291854957));
            i_1291855141 = addInt(i_1291855141, 1);
            if (!(((a_1291854956).length == L_1291855142))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854958;

}

function toJson_1291854707(a_1291854709, opt_1291854710) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var result_1291854711 = null;

    result_1291854711 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854711, [105,115,85,110,113,117,111,116,101,100], toJson_2801811058(a_1291854709.isUnquoted, opt_1291854710));
    HEX5BHEX5DHEX3D_1627391903(result_1291854711, [107,105,110,100], toJson_1291854724(a_1291854709.kind, opt_1291854710));
    switch (a_1291854709.kind) {
    case 4:
      var Temporary1 = a_1291854709;
      if (ConstSet206[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [115,116,114], toJson_1811939932(Temporary1.str, opt_1291854710));
      break;
    case 2:
      var Temporary2 = a_1291854709;
      if (ConstSet207[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [110,117,109], toJson_1291854834(Temporary2.num, opt_1291854710));
      break;
    case 3:
      var Temporary3 = a_1291854709;
      if (ConstSet208[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [102,110,117,109], toJson_1291854844(Temporary3.fnum, opt_1291854710));
      break;
    case 1:
      var Temporary4 = a_1291854709;
      if (ConstSet209[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [98,118,97,108], toJson_2801811058(Temporary4.bval, opt_1291854710));
      break;
    case 0:
      break;
    case 5:
      var Temporary5 = a_1291854709;
      if (ConstSet210[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [102,105,101,108,100,115], toJson_1291854859(Temporary5.fields, opt_1291854710));
      break;
    case 6:
      var Temporary6 = a_1291854709;
      if (ConstSet211[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      HEX5BHEX5DHEX3D_1627391903(result_1291854711, [101,108,101,109,115], toJson_1291854954(Temporary6.elems, opt_1291854710));
      break;
    }

  return result_1291854711;

}

function toJson_1291854695(a_1291854697, opt_1291854698) {
  var result_1291854699 = null;

    switch (opt_1291854698.jsonNodeMode) {
    case 0:
      result_1291854699 = a_1291854697;
      break;
    case 1:
      result_1291854699 = copy_1627394272(a_1291854697);
      break;
    case 2:
      if ((a_1291854697 == null)) {
      result_1291854699 = newJNull_1627390049();
      }
      else {
        result_1291854699 = toJson_1291854707(a_1291854697, opt_1291854698);
      }
      
      break;
    }

  return result_1291854699;

}

function toJson_1291854578(a_1291854580, opt_1291854581) {
  var result_1291854582 = null;

    result_1291854582 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854582, [107,105,110,100], toJson_1291854591(a_1291854580.kind, opt_1291854581));
    HEX5BHEX5DHEX3D_1627391903(result_1291854582, [105,100], toJson_1811939932(a_1291854580.id, opt_1291854581));
    HEX5BHEX5DHEX3D_1627391903(result_1291854582, [110,97,109,101], toJson_1811939932(a_1291854580.name, opt_1291854581));
    HEX5BHEX5DHEX3D_1627391903(result_1291854582, [115,101,116,116,105,110,103,115], toJson_1291854695(a_1291854580.settings, opt_1291854581));

  return result_1291854582;

}

function toJson_1291854566(a_1291854568, opt_1291854569) {
  var result_1291854570 = null;

    result_1291854570 = newJArray_1627390082();
    Label1: {
      var ai_1291854577 = ({kind: 0, id: [], name: [], settings: null});
      var i_1291855119 = 0;
      var L_1291855120 = (a_1291854568).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855119 < L_1291855120)) break Label3;
            ai_1291854577 = a_1291854568[chckIndx(i_1291855119, 0, (a_1291854568).length - 1)];
            add_1627390190(result_1291854570, toJson_1291854578(ai_1291854577, opt_1291854569));
            i_1291855119 = addInt(i_1291855119, 1);
            if (!(((a_1291854568).length == L_1291855120))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854570;

}

function toJson_1291854982(a_1291854984, opt_1291854985) {
  var result_1291854986 = null;

    result_1291854986 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854986, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291854984.filename, opt_1291854985));
    HEX5BHEX5DHEX3D_1627391903(result_1291854986, [97,115,116], toJson_2801811058(a_1291854984.ast, opt_1291854985));
    HEX5BHEX5DHEX3D_1627391903(result_1291854986, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291854984.languageID, opt_1291854985));
    HEX5BHEX5DHEX3D_1627391903(result_1291854986, [97,112,112,70,105,108,101], toJson_2801811058(a_1291854984.appFile, opt_1291854985));
    HEX5BHEX5DHEX3D_1627391903(result_1291854986, [119,111,114,107,115,112,97,99,101,73,100], toJson_1811939932(a_1291854984.workspaceId, opt_1291854985));

  return result_1291854986;

}

function toJson_1291854970(a_1291854972, opt_1291854973) {
  var result_1291854974 = null;

    result_1291854974 = newJArray_1627390082();
    Label1: {
      var ai_1291854981 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_1291855146 = 0;
      var L_1291855147 = (a_1291854972).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855146 < L_1291855147)) break Label3;
            ai_1291854981 = a_1291854972[chckIndx(i_1291855146, 0, (a_1291854972).length - 1)];
            add_1627390190(result_1291854974, toJson_1291854982(ai_1291854981, opt_1291854973));
            i_1291855146 = addInt(i_1291855146, 1);
            if (!(((a_1291854972).length == L_1291855147))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854974;

}

function toJson_1291854522(a_1291854524, opt_1291854525) {
  var result_1291854526 = null;

    result_1291854526 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [116,104,101,109,101], toJson_1811939932(a_1291854524.theme, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [102,111,110,116,83,105,122,101], toJson_1291854539(a_1291854524.fontSize, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854524.fontRegular, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854524.fontBold, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854524.fontItalic, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854524.fontBoldItalic, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], toJson_1291854566(a_1291854524.workspaceFolders, opt_1291854525));
    HEX5BHEX5DHEX3D_1627391903(result_1291854526, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291854970(a_1291854524.openEditors, opt_1291854525));

  return result_1291854526;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291855164 = 0;
      colontmp__1291855164 = subInt(len_855638790, 1);
      var res_1291855165 = colontmp__1291855164;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291855165)) break Label3;
            j_855638800 = res_1291855165;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291855165 = subInt(res_1291855165, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291855160 = 0;
      var L_1291855161 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855160 < L_1291855161)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291855160, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291855160 = addInt(i_1291855160, 1);
            if (!(((s_1627394347).length == L_1291855161))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291855168 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet214[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291855168 = Temporary2.elems;
        var i_1291855169 = 0;
        var L_1291855170 = (colontmp__1291855168).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855169 < L_1291855170)) break Label4;
              child_1627394384 = colontmp__1291855168[chckIndx(i_1291855169, 0, (colontmp__1291855168).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291855169 = addInt(i_1291855169, 1);
              if (!(((colontmp__1291855168).length == L_1291855170))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291855173 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet215[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291855173 = nimCopy(colontmp__1291855173, Temporary6.fields, NTI1627389966);
        var L_1291855174 = len_1627392114(colontmp__1291855173);
        if ((0 < colontmp__1291855173.counter)) {
        var h_1291855175 = colontmp__1291855173.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291855175)) break Label8;
              var nxt_1291855177 = colontmp__1291855173.data[chckIndx(h_1291855175, 0, (colontmp__1291855173.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855173.data[chckIndx(h_1291855175, 0, (colontmp__1291855173.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291855173.data[chckIndx(h_1291855175, 0, (colontmp__1291855173.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291855173.data[chckIndx(h_1291855175, 0, (colontmp__1291855173.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291855173) == L_1291855174))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855175 = nxt_1291855177;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet216[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet217[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet218[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet219[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet220[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet212[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291855150 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet213[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291855150 = nimCopy(colontmp__1291855150, Temporary3.fields, NTI1627389966);
        var L_1291855151 = len_1627392114(colontmp__1291855150);
        if ((0 < colontmp__1291855150.counter)) {
        var h_1291855152 = colontmp__1291855150.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291855152)) break Label5;
              var nxt_1291855154 = colontmp__1291855150.data[chckIndx(h_1291855152, 0, (colontmp__1291855150.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291855150.data[chckIndx(h_1291855152, 0, (colontmp__1291855150.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291855150.data[chckIndx(h_1291855152, 0, (colontmp__1291855150.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291855150.data[chckIndx(h_1291855152, 0, (colontmp__1291855150.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291855150) == L_1291855151))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291855152 = nxt_1291855154;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet221[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet222[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet223[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet224[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291855156 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet225[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291855156 = subInt((Temporary12.elems).length, 1);
        var res_1291855157 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291855157 <= colontmp__1291855156)) break Label14;
              i_1627394476 = res_1291855157;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet226[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291855157 = addInt(res_1291855157, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853873(self_1291853874) {
              var Temporary5;
            
function HEX3Aanonymous_1291854409(wf_1291854420) {
              var result_1291854423 = [];

                result_1291854423 = nimCopy(null, HEX24_2046820589(wf_1291854420.id), NTI33554449);

              return result_1291854423;

            }
            
function HEX3Aanonymous_1291854480(wf_1291854491) {
              var result_1291854494 = [];

                result_1291854494 = nimCopy(null, HEX24_2046820589(wf_1291854491.id), NTI33554449);

              return result_1291854494;

            }

    var state_1291854321 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
    state_1291854321.theme = nimCopy(null, self_1291853874.theme.path, NTI33554449);
    if ((self_1291853874.backend == 1)) {
    state_1291854321.fontSize = self_1291853874.loadedFontSize;
    }
    else {
      state_1291854321.fontSize = fontSize_2499805328(self_1291853874.platform);
    }
    
    state_1291854321.fontRegular = nimCopy(null, self_1291853874.fontRegular, NTI33554449);
    state_1291854321.fontBold = nimCopy(null, self_1291853874.fontBold, NTI33554449);
    state_1291854321.fontItalic = nimCopy(null, self_1291853874.fontItalic, NTI33554449);
    state_1291854321.fontBoldItalic = nimCopy(null, self_1291853874.fontBoldItalic, NTI33554449);
    Label1: {
      var workspaceFolder_1291854349 = null;
      var i_1291855109 = 0;
      var L_1291855110 = (self_1291853874.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855109 < L_1291855110)) break Label3;
            workspaceFolder_1291854349 = self_1291853874.workspace.folders[chckIndx(i_1291855109, 0, (self_1291853874.workspace.folders).length - 1)];
            Label4: {
              if (isObj(workspaceFolder_1291854349.m_type, NTI2231369732)) {
              Temporary5 = 0;
              }
              else {
              if (isObj(workspaceFolder_1291854349.m_type, NTI2365587460)) {
              Temporary5 = 1;
              }
              else {
              if (isObj(workspaceFolder_1291854349.m_type, NTI2248146948)) {
              Temporary5 = 2;
              }
              else {
                break Label4;
              }
              }}
              var kind_1291854371 = Temporary5;
              state_1291854321.workspaceFolders.push({kind: kind_1291854371, id: HEX24_2046820589(workspaceFolder_1291854349.id), name: nimCopy(null, workspaceFolder_1291854349.name, NTI33554449), settings: settings_2181038102(workspaceFolder_1291854349)});;
            };
            i_1291855109 = addInt(i_1291855109, 1);
            if (!(((self_1291853874.workspace.folders).length == L_1291855110))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label6: {
      var view_1291854397 = null;
      var i_1291855114 = 0;
      var L_1291855115 = (self_1291853874.views).length;
      Label7: {
          Label8: while (true) {
          if (!(i_1291855114 < L_1291855115)) break Label8;
            view_1291854397 = self_1291853874.views[chckIndx(i_1291855114, 0, (self_1291853874.views).length - 1)];
            if (isObj(view_1291854397.document.m_type, NTI2801795211)) {
            var textDocument_1291854404 = view_1291854397.document;
            state_1291854321.openEditors.push({filename: nimCopy(null, textDocument_1291854404.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854404.languageId, NTI33554449), appFile: textDocument_1291854404.appFile, workspaceId: get_2315255863(map_1291854425(textDocument_1291854404.workspace, HEX3Aanonymous_1291854409), [])});;
            }
            else {
            if (isObj(view_1291854397.document.m_type, NTI2936014282)) {
            var astDocument_1291854475 = view_1291854397.document;
            state_1291854321.openEditors.push({filename: nimCopy(null, astDocument_1291854475.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854475.appFile, workspaceId: get_2315255863(map_1291854425(astDocument_1291854475.workspace, HEX3Aanonymous_1291854480), [])});;
            }
            }
            i_1291855114 = addInt(i_1291855114, 1);
            if (!(((self_1291853874.views).length == L_1291855115))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291855015 = toJson_1291854522(state_1291854321, initToJsonOptions_1811939362());
    saveApplicationFile_2332033048(fs_2332033077, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291855015, 2));
    saveApplicationFile_2332033048(fs_2332033077, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853874.options, 2));

  
}

function saveAppStateJsWrapper_1291854315(self_1291855096) {
    saveAppState_1291853873(self_1291855096);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291854315(this));};

function requestRender_1291855184(self_1291855185, redrawEverything_1291855186) {
    requestRender_2499805290(self_1291855185.platform, redrawEverything_1291855186);

  
}

function requestRenderJsWrapper_1291855180(self_1291855214, redrawEverything_1291855215) {
    requestRender_1291855184(self_1291855214, redrawEverything_1291855215);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291855180(this, redrawEverything_));};

function setHandleInputs_2080375138(config_2080375139, value_2080375140) {
    config_2080375139.handleInputs = value_2080375140;
    config_2080375139.revision = addInt(config_2080375139.revision, 1);

  
}

function setHandleInputs_1291855236(self_1291855237, context_1291855238, value_1291855239) {
    setHandleInputs_2080375138(getEventHandlerConfig_1291849169(self_1291855237, context_1291855238), value_1291855239);

  
}

function setHandleInputsJsWrapper_1291855232(self_1291855268, context_1291855269, value_1291855270) {
    setHandleInputs_1291855236(self_1291855268, context_1291855269, value_1291855270);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291855232(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2080375145(config_2080375146, value_2080375147) {
    config_2080375146.handleActions = value_2080375147;
    config_2080375146.revision = addInt(config_2080375146.revision, 1);

  
}

function setHandleActions_1291855296(self_1291855297, context_1291855298, value_1291855299) {
    setHandleActions_2080375145(getEventHandlerConfig_1291849169(self_1291855297, context_1291855298), value_1291855299);

  
}

function setHandleActionsJsWrapper_1291855292(self_1291855328, context_1291855329, value_1291855330) {
    setHandleActions_1291855296(self_1291855328, context_1291855329, value_1291855330);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291855292(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2080375152(config_2080375153, value_2080375154) {
    config_2080375153.consumeAllActions = value_2080375154;
    config_2080375153.revision = addInt(config_2080375153.revision, 1);

  
}

function setConsumeAllActions_1291855356(self_1291855357, context_1291855358, value_1291855359) {
    setConsumeAllActions_2080375152(getEventHandlerConfig_1291849169(self_1291855357, context_1291855358), value_1291855359);

  
}

function setConsumeAllActionsJsWrapper_1291855352(self_1291855388, context_1291855389, value_1291855390) {
    setConsumeAllActions_1291855356(self_1291855388, context_1291855389, value_1291855390);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291855352(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2080375159(config_2080375160, value_2080375161) {
    config_2080375160.consumeAllInput = value_2080375161;
    config_2080375160.revision = addInt(config_2080375160.revision, 1);

  
}

function setConsumeAllInput_1291855416(self_1291855417, context_1291855418, value_1291855419) {
    setConsumeAllInput_2080375159(getEventHandlerConfig_1291849169(self_1291855417, context_1291855418), value_1291855419);

  
}

function setConsumeAllInputJsWrapper_1291855412(self_1291855448, context_1291855449, value_1291855450) {
    setConsumeAllInput_1291855416(self_1291855448, context_1291855449, value_1291855450);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291855412(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function clearWorkspaceCaches_1291855553(self_1291855554) {
    Label1: {
      var wf_1291855558 = null;
      var i_1291855596 = 0;
      var L_1291855597 = (self_1291855554.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855596 < L_1291855597)) break Label3;
            wf_1291855558 = self_1291855554.workspace.folders[chckIndx(i_1291855596, 0, (self_1291855554.workspace.folders).length - 1)];
            clearDirectoryCache_2181038106(wf_1291855558);
            i_1291855596 = addInt(i_1291855596, 1);
            if (!(((self_1291855554.workspace.folders).length == L_1291855597))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clearWorkspaceCachesJsWrapper_1291855549(self_1291855585) {
    clearWorkspaceCaches_1291855553(self_1291855585);

  
}
editor_prototype.clearWorkspaceCaches = function() { return (clearWorkspaceCachesJsWrapper_1291855549(this));};

function openWorkspaceKind_1291851107(workspaceFolder_1291851108) {
  var result_1291855472 = 0;

  BeforeRet: {
    if (isObj(workspaceFolder_1291851108.m_type, NTI2231369732)) {
    result_1291855472 = 0;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851108.m_type, NTI2365587460)) {
    result_1291855472 = 1;
    break BeforeRet;
    }
    
    if (isObj(workspaceFolder_1291851108.m_type, NTI2248146948)) {
    result_1291855472 = 2;
    break BeforeRet;
    }
    
    if (true) {
    failedAssertImpl_268435515([101,100,105,116,111,114,46,110,105,109,40,53,56,56,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
  };

  return result_1291855472;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291855678 = 0;
      colontmp__1291855678 = subInt((x_1627392045).length, 1);
      var res_1291855679 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291855679 <= colontmp__1291855678)) break Label3;
            i_1627392069 = res_1291855679;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291855679 = addInt(res_1291855679, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet227[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet228[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet229[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet230[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet231[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet232[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet233[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet234[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet235[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet236[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet237[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet238[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291855672 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet239[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291855672 = nimCopy(colontmp__1291855672, Temporary14.fields, NTI1627389966);
          var L_1291855673 = len_1627392114(colontmp__1291855672);
          if ((0 < colontmp__1291855672.counter)) {
          var h_1291855674 = colontmp__1291855672.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291855674)) break Label16;
                var nxt_1291855676 = colontmp__1291855672.data[chckIndx(h_1291855674, 0, (colontmp__1291855672.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291855672.data[chckIndx(h_1291855674, 0, (colontmp__1291855672.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291855672.data[chckIndx(h_1291855674, 0, (colontmp__1291855672.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291855672.data[chckIndx(h_1291855674, 0, (colontmp__1291855672.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet240[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet241[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291855672) == L_1291855673))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291855674 = nxt_1291855676;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function addWorkspaceFolder_1291851109(self_1291851110, workspaceFolder_1291851111) {
  var result_1291855499 = false;

  BeforeRet: {
    Label1: {
      var wf_1291855503 = null;
      var i_1291855668 = 0;
      var L_1291855669 = (self_1291851110.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855668 < L_1291855669)) break Label3;
            wf_1291855503 = self_1291851110.workspace.folders[chckIndx(i_1291855668, 0, (self_1291851110.workspace.folders).length - 1)];
            if (((openWorkspaceKind_1291851107(wf_1291855503) == openWorkspaceKind_1291851107(workspaceFolder_1291851111)) && HEX3DHEX3D_1627392026(settings_2181038102(wf_1291855503), settings_2181038102(workspaceFolder_1291851111)))) {
            result_1291855499 = false;
            break BeforeRet;
            }
            
            i_1291855668 = addInt(i_1291855668, 1);
            if (!(((self_1291851110.workspace.folders).length == L_1291855669))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (HEX3DHEX3D_2046820592(workspaceFolder_1291851111.id, idNone_2046820599())) {
    workspaceFolder_1291851111.id = nimCopy(workspaceFolder_1291851111.id, newId_2046820569(), NTI2046820355);
    }
    
    var fmtRes_1291855513 = [mnewString(0)];
    fmtRes_1291855513[0].push.apply(fmtRes_1291855513[0], [79,112,101,110,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
    formatValue_721420459(fmtRes_1291855513, 0, workspaceFolder_1291851111.name, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291855513[0], NTI33554449)]);
    self_1291851110.workspace.folders.push(workspaceFolder_1291851111);;
    result_1291855499 = true;
    break BeforeRet;
  };

  return result_1291855499;

}

function initTable_2248149261(initialSize_2248149264) {
  var result_2248149265 = ({data: [], counter: 0});

    var correctSizeHEX60gensym35_2248149267 = slotsNeeded_1308622891(chckRange(initialSize_2248149264, 0, 2147483647));
    result_2248149265.counter = 0;
    result_2248149265.data = new Array(chckRange(correctSizeHEX60gensym35_2248149267, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2248149267, 0, 2147483647) ; ++i) { result_2248149265.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2248149265;

}

function newWorkspaceFolderGithub_2248149248(user_2248149249, repository_2248149250, branchOrHash_2248149251) {
  var result_2248149252 = null;

    result_2248149252 = ({m_type: NTI2248146948, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    var fmtRes_2248149260 = [mnewString(0)];
    fmtRes_2248149260[0].push.apply(fmtRes_2248149260[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2248149260, 0, user_2248149249, []);
    fmtRes_2248149260[0].push.apply(fmtRes_2248149260[0], [47]);;
    formatValue_721420459(fmtRes_2248149260, 0, repository_2248149250, []);
    result_2248149252.baseUrl = nimCopy(null, fmtRes_2248149260[0], NTI33554449);
    result_2248149252.user = nimCopy(null, user_2248149249, NTI33554449);
    result_2248149252.repository = nimCopy(null, repository_2248149250, NTI33554449);
    result_2248149252.branchOrHash = nimCopy(null, branchOrHash_2248149251, NTI33554449);
    result_2248149252.cachedDirectoryListings = nimCopy(result_2248149252.cachedDirectoryListings, initTable_2248149261(32), NTI2248146956);
    result_2248149252.pathToSha = nimCopy(result_2248149252.pathToSha, initTable_1795162117(32), NTI1795162120);
    var fmtRes_2248149280 = [mnewString(0)];
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [71,105,116,72,117,98,58]);;
    formatValue_721420459(fmtRes_2248149280, 0, user_2248149249, []);
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [47]);;
    formatValue_721420459(fmtRes_2248149280, 0, repository_2248149250, []);
    fmtRes_2248149280[0].push.apply(fmtRes_2248149280[0], [47]);;
    formatValue_721420459(fmtRes_2248149280, 0, branchOrHash_2248149251, []);
    result_2248149252.name = nimCopy(null, fmtRes_2248149280[0], NTI33554449);

  return result_2248149252;

}

function openGithubWorkspace_1291855605(self_1291855606, user_1291855607, repository_1291855608, branchOrHash_1291855609) {
    var _ = addWorkspaceFolder_1291851109(self_1291855606, newWorkspaceFolderGithub_2248149248(user_1291855607, repository_1291855608, branchOrHash_1291855609));

  
}

function openGithubWorkspaceJsWrapper_1291855601(self_1291855639, user_1291855640, repository_1291855641, branchOrHash_1291855642) {
    openGithubWorkspace_1291855605(self_1291855639, user_1291855640, repository_1291855641, branchOrHash_1291855642);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291855601(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2365587855(url_2365587856) {
  var result_2365587857 = null;

    result_2365587857 = ({m_type: NTI2365587460, baseUrl: [], cachedDirectoryListings: ({data: [], counter: 0}), name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2365587857.baseUrl = nimCopy(null, url_2365587856, NTI33554449);
    var _ = updateWorkspaceName_2365587548(result_2365587857);

  return result_2365587857;

}

function openAbsytreeServerWorkspace_1291855687(self_1291855688, url_1291855689) {
    var _ = addWorkspaceFolder_1291851109(self_1291855688, newWorkspaceFolderAbsytreeServer_2365587855(url_1291855689));

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291855683(self_1291855717, url_1291855718) {
    openAbsytreeServerWorkspace_1291855687(self_1291855717, url_1291855718);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291855683(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet242[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2801805746(editor_2801805748, path_2801805749, default_2801805750) {
  var result_2801805755 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2801805748 == null)) {
      result_2801805755 = default_2801805750;
      break BeforeRet;
      }
      
      var nodeHEX60gensym165_2801805766 = HEX7BHEX7D_1627393316(editor_2801805748.options, nsuSplitString(path_2801805749, [46], -1));
      if ((nodeHEX60gensym165_2801805766 == null)) {
      result_2801805755 = default_2801805750;
      break BeforeRet;
      }
      
    };
    result_2801805755 = getBool_1627390147(nodeHEX60gensym165_2801805766, default_2801805750);
    break BeforeRet;
  };

  return result_2801805755;

}

function getFlag_1291848881(self_1291848882, flag_1291848883, default_1291848884) {
  var result_1291855743 = false;

  BeforeRet: {
    result_1291855743 = getOption_2801805746(self_1291848882, flag_1291848883, default_1291848884);
    break BeforeRet;
  };

  return result_1291855743;

}

function getFlagJsWrapper2_1291855735(self_1291855782, flag_1291855783, default_1291855784) {
  var result_1291855785 = false;

    result_1291855785 = getFlag_1291848881(self_1291855782, flag_1291855783, default_1291855784);

  return result_1291855785;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291855735(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function setOption_1291855820(editor_1291855822, path_1291855823, value_1291855824) {
  BeforeRet: {
    Label1: {
      if ((editor_1291855822 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym275_1291855839 = nsuSplitString(path_1291855823, [46], -1);
      var nodeHEX60gensym275_1291855840 = editor_1291855822.options;
      Label2: {
        var keyHEX60gensym275_1291855859 = [];
        var colontmp__1291855927 = [];
        colontmp__1291855927 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym275_1291855839, HEX2EHEX2E_1040187488(0, 2));
        var i_1291855928 = 0;
        var L_1291855929 = (colontmp__1291855927).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291855928 < L_1291855929)) break Label4;
              keyHEX60gensym275_1291855859 = colontmp__1291855927[chckIndx(i_1291855928, 0, (colontmp__1291855927).length - 1)];
              if (!((nodeHEX60gensym275_1291855840.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym275_1291855840, keyHEX60gensym275_1291855859))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym275_1291855840, keyHEX60gensym275_1291855859, newJObject_1627390051());
              }
              
              nodeHEX60gensym275_1291855840 = HEX5BHEX5D_1627393037(nodeHEX60gensym275_1291855840, keyHEX60gensym275_1291855859);
              i_1291855928 = addInt(i_1291855928, 1);
              if (!(((colontmp__1291855927).length == L_1291855929))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym275_1291855840 == null) || !((nodeHEX60gensym275_1291855840.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym275_1291855840, HEX5BHEX5D_2717909760(pathItemsHEX60gensym275_1291855839, 1), newJBool_1627390046(value_1291855824));
    };
  };

  
}

function setFlag_1291848958(self_1291848959, flag_1291848960, value_1291848961) {
    setOption_1291855820(self_1291848959, flag_1291848960, value_1291848961);

  
}

function setFlagJsWrapper2_1291855812(self_1291855903, flag_1291855904, value_1291855905) {
    setFlag_1291848958(self_1291855903, flag_1291855904, value_1291855905);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291855812(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848962(self_1291848963, flag_1291848964) {
    setFlag_1291848958(self_1291848963, flag_1291848964, !(getFlag_1291848881(self_1291848963, flag_1291848964, false)));

  
}

function toggleFlagJsWrapper_1291855933(self_1291855967, flag_1291855968) {
    toggleFlag_1291848962(self_1291855967, flag_1291855968);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291855933(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291855989(self_1291855990, option_1291855991, value_1291855992) {
  BeforeRet: {
    if ((self_1291855990 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1291855996 = nsuSplitString(option_1291855991, [46], -1);
    var node_1291855997 = self_1291855990.options;
    Label1: {
      var key_1291856016 = [];
      var colontmp__1291856078 = [];
      colontmp__1291856078 = HEX5BHEX5D_2801811528(pathItems_1291855996, HEX2EHEX2E_1040187488(0, 2));
      var i_1291856079 = 0;
      var L_1291856080 = (colontmp__1291856078).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856079 < L_1291856080)) break Label3;
            key_1291856016 = colontmp__1291856078[chckIndx(i_1291856079, 0, (colontmp__1291856078).length - 1)];
            if (!((node_1291855997.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291855997, key_1291856016))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291855997, key_1291856016, newJObject_1627390051());
            }
            
            node_1291855997 = HEX5BHEX5D_1627393037(node_1291855997, key_1291856016);
            i_1291856079 = addInt(i_1291856079, 1);
            if (!(((colontmp__1291856078).length == L_1291856080))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291855997 == null) || !((node_1291855997.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291855997, HEX5BHEX5D_2717909760(pathItems_1291855996, 1), value_1291855992);
  };

  
}

function setOptionJsWrapper_1291855985(self_1291856060, option_1291856061, value_1291856062) {
    setOption_1291855989(self_1291856060, option_1291856061, value_1291856062);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291855985(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291856088(self_1291856089) {
    self_1291856089.closeRequested = true;

  
}

function quitJsWrapper_1291856084(self_1291856116) {
    quit_1291856088(self_1291856116);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291856084(this));};

function changeFontSize_1291856132(self_1291856133, amount_1291856134) {
    fontSizeHEX3D_2499805320(self_1291856133.platform, (fontSize_2499805328(self_1291856133.platform) + amount_1291856134));
    requestRender_2499805290(self_1291856133.platform, true);

  
}

function changeFontSizeJsWrapper_1291856128(self_1291856162, amount_1291856163) {
    changeFontSize_1291856132(self_1291856162, amount_1291856163);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291856128(this, amount_));};

function rawGet_1291848319(t_1291848322, key_1291848323, hc_1291848324, hc_1291848324_Idx) {
  var result_1291848325 = 0;

  BeforeRet: {
    hc_1291848324[hc_1291848324_Idx] = hash_1325400491(key_1291848323);
    if ((hc_1291848324[hc_1291848324_Idx] == 0)) {
    hc_1291848324[hc_1291848324_Idx] = 314159265;
    }
    
    if (((t_1291848322.data).length == 0)) {
    result_1291848325 = -1;
    break BeforeRet;
    }
    
    var h_1291848377 = (hc_1291848324[hc_1291848324_Idx] & (t_1291848322.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848322.data[chckIndx(h_1291848377, 0, (t_1291848322.data).length - 1)].Field0)) break Label2;
          if (((t_1291848322.data[chckIndx(h_1291848377, 0, (t_1291848322.data).length - 1)].Field0 == hc_1291848324[hc_1291848324_Idx]) && eqStrings(t_1291848322.data[chckIndx(h_1291848377, 0, (t_1291848322.data).length - 1)].Field1, key_1291848323))) {
          result_1291848325 = h_1291848377;
          break BeforeRet;
          }
          
          h_1291848377 = nextTry_1308622883(h_1291848377, (t_1291848322.data).length - 1);
        }
    };
    result_1291848325 = subInt(-1, h_1291848377);
  };

  return result_1291848325;

}

function mustRehash_1291851929(t_1291851931) {
  var result_1291851932 = false;

    if (!((t_1291851931.counter < (t_1291851931.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851932 = ((mulInt((t_1291851931.data).length, 2) < mulInt(t_1291851931.counter, 3)) || (subInt((t_1291851931.data).length, t_1291851931.counter) < 4));

  return result_1291851932;

}

function rawInsert_1291852378(t_1291852382, data_1291852383, data_1291852383_Idx, key_1291852384, val_1291852385, hc_1291852386, h_1291852387) {
    data_1291852383[data_1291852383_Idx][chckIndx(h_1291852387, 0, (data_1291852383[data_1291852383_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852384, NTI33554449);
    data_1291852383[data_1291852383_Idx][chckIndx(h_1291852387, 0, (data_1291852383[data_1291852383_Idx]).length - 1)].Field2 = val_1291852385;
    data_1291852383[data_1291852383_Idx][chckIndx(h_1291852387, 0, (data_1291852383[data_1291852383_Idx]).length - 1)].Field0 = hc_1291852386;

  
}

function enlarge_1291852084(t_1291852087) {
    var n_1291852090 = [];
    n_1291852090 = new Array(chckRange(mulInt((t_1291852087.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852087.data).length, 2), 0, 2147483647) ; ++i) { n_1291852090[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852087.data; t_1291852087.data = n_1291852090; n_1291852090 = Temporary1;    Label2: {
      var i_1291852154 = 0;
      var colontmp__1291856490 = 0;
      colontmp__1291856490 = (n_1291852090).length - 1;
      var res_1291856491 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856491 <= colontmp__1291856490)) break Label4;
            i_1291852154 = res_1291856491;
            var eh_1291852208 = n_1291852090[chckIndx(i_1291852154, 0, (n_1291852090).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852208)) {
            var j_1291852212 = (eh_1291852208 & (t_1291852087.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852087.data[chckIndx(j_1291852212, 0, (t_1291852087.data).length - 1)].Field0)) break Label6;
                  j_1291852212 = nextTry_1308622883(j_1291852212, (t_1291852087.data).length - 1);
                }
            };
            rawInsert_1291852378(t_1291852087, t_1291852087, "data", n_1291852090[chckIndx(i_1291852154, 0, (n_1291852090).length - 1)].Field1, n_1291852090[chckIndx(i_1291852154, 0, (n_1291852090).length - 1)].Field2, eh_1291852208, j_1291852212);
            }
            
            res_1291856491 = addInt(res_1291856491, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852556(t_1291852559, key_1291852560, hc_1291852561) {
  var result_1291852562 = 0;

  BeforeRet: {
    if (((t_1291852559.data).length == 0)) {
    result_1291852562 = -1;
    break BeforeRet;
    }
    
    var h_1291852613 = (hc_1291852561 & (t_1291852559.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852559.data[chckIndx(h_1291852613, 0, (t_1291852559.data).length - 1)].Field0)) break Label2;
          if (((t_1291852559.data[chckIndx(h_1291852613, 0, (t_1291852559.data).length - 1)].Field0 == hc_1291852561) && eqStrings(t_1291852559.data[chckIndx(h_1291852613, 0, (t_1291852559.data).length - 1)].Field1, key_1291852560))) {
          result_1291852562 = h_1291852613;
          break BeforeRet;
          }
          
          h_1291852613 = nextTry_1308622883(h_1291852613, (t_1291852559.data).length - 1);
        }
    };
    result_1291852562 = subInt(-1, h_1291852613);
  };

  return result_1291852562;

}

function mgetOrPut_1291856214(t_1291856217, key_1291856218, val_1291856219) {
  var result_1291856220 = null;
  var result_1291856220_Idx = 0;

    if (((t_1291856217.data).length == 0)) {
    var correctSizeHEX60gensym332_1291856269 = slotsNeeded_1308622891(32);
    t_1291856217.counter = 0;
    t_1291856217.data = new Array(chckRange(correctSizeHEX60gensym332_1291856269, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym332_1291856269, 0, 2147483647) ; ++i) { t_1291856217.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291856274 = [0];
    var index_1291856281 = rawGet_1291848319(t_1291856217, key_1291856218, hc_1291856274, 0);
    if ((index_1291856281 < 0)) {
    if (((t_1291856217.data).length == 0)) {
    var correctSizeHEX60gensym335_1291856330 = slotsNeeded_1308622891(32);
    t_1291856217.counter = 0;
    t_1291856217.data = new Array(chckRange(correctSizeHEX60gensym335_1291856330, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym335_1291856330, 0, 2147483647) ; ++i) { t_1291856217.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851929(t_1291856217)) {
    enlarge_1291852084(t_1291856217);
    index_1291856281 = rawGetKnownHC_1291852556(t_1291856217, key_1291856218, hc_1291856274[0]);
    }
    
    index_1291856281 = subInt(-1, index_1291856281);
    rawInsert_1291852378(t_1291856217, t_1291856217, "data", key_1291856218, val_1291856219, hc_1291856274[0], index_1291856281);
    t_1291856217.counter = addInt(t_1291856217.counter, 1);
    }
    
    result_1291856220 = t_1291856217.data[chckIndx(index_1291856281, 0, (t_1291856217.data).length - 1)]; result_1291856220_Idx = "Field2";

  return [result_1291856220, result_1291856220_Idx];

}

function changeLayoutProp_1291856184(self_1291856185, prop_1291856186, change_1291856187) {
    var Temporary1;

    HEX2BHEX3D_2113929329((Temporary1 = mgetOrPut_1291856214(self_1291856185.layout_props.props, prop_1291856186, 0.0), Temporary1)[0], Temporary1[1], change_1291856187);
    requestRender_2499805290(self_1291856185.platform, true);

  
}

function changeLayoutPropJsWrapper_1291856180(self_1291856465, prop_1291856466, change_1291856467) {
    changeLayoutProp_1291856184(self_1291856465, prop_1291856466, change_1291856467);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291856180(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291856500(self_1291856501) {
    self_1291856501.statusBarOnTop = !(self_1291856501.statusBarOnTop);
    requestRender_2499805290(self_1291856501.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291856496(self_1291856528) {
    toggleStatusBarLocation_1291856500(self_1291856528);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291856496(this));};

function createEditorForDocument_1291848885(self_1291848886, document_1291848887) {
  var result_1291848888 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848911 = null;
      var i_1291856589 = 0;
      var L_1291856590 = (self_1291848886.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856589 < L_1291856590)) break Label3;
            editor_1291848911 = self_1291848886.editor_defaults[chckIndx(i_1291856589, 0, (self_1291848886.editor_defaults).length - 1)];
            if (canEdit_2382364795(editor_1291848911, document_1291848887)) {
            result_1291848888 = createWithDocument_2382364810(editor_1291848911, document_1291848887);
            break BeforeRet;
            }
            
            i_1291856589 = addInt(i_1291856589, 1);
            if (!(((self_1291848886.editor_defaults).length == L_1291856590))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2164260878(document_1291848887) || [])]);
    result_1291848888 = null;
    break BeforeRet;
  };

  return result_1291848888;

}

function createView_1291848965(self_1291848966, document_1291848967) {
    
function HEX3Aanonymous_1291848980() {
        requestRender_2499805290(self_1291848966.platform, false);

      
    }

    var editor_1291848968 = createEditorForDocument_1291848885(self_1291848966, document_1291848967);
    injectDependencies_1291847760(editor_1291848968, self_1291848966);
    var _ = subscribe_1291849004(editor_1291848968.onMarkedDirty, HEX3Aanonymous_1291848980);
    var view_1291849031 = {document: document_1291848967, editor: editor_1291848968};
    self_1291848966.views.push(view_1291849031);;
    self_1291848966.currentView = subInt((self_1291848966.views).length, 1);
    requestRender_2499805290(self_1291848966.platform, false);

  
}

function createView_1291856544(self_1291856545) {
    createView_1291848965(self_1291856545, newTextDocument_2801801429([], [], false));

  
}

function createViewJsWrapper_1291856540(self_1291856577) {
    createView_1291856544(self_1291856577);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291856540(this));};

function delete_1291856600(x_1291856602, x_1291856602_Idx, i_1291856603) {
    x_1291856602[x_1291856602_Idx].splice(i_1291856603, 1);

  
}

function closeCurrentView_1291856598(self_1291856599) {
    unregister_2382364835(self_1291856599.views[chckIndx(self_1291856599.currentView, 0, (self_1291856599.views).length - 1)].editor);
    delete_1291856600(self_1291856599, "views", chckRange(self_1291856599.currentView, 0, 2147483647));
    self_1291856599.currentView = clamp_1660945119(self_1291856599.currentView, 0, subInt((self_1291856599.views).length, 1));
    requestRender_2499805290(self_1291856599.platform, false);

  
}

function closeCurrentViewJsWrapper_1291856594(self_1291856656) {
    closeCurrentView_1291856598(self_1291856656);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291856594(this));};

function insert_1291856690(x_1291856692, x_1291856692_Idx, item_1291856693, i_1291856694) {
    var it_1291856714 = null;
    x_1291856692[x_1291856692_Idx] = x_1291856692[x_1291856692_Idx] || []; x_1291856692[x_1291856692_Idx].splice(i_1291856694, 0, it_1291856714);
    x_1291856692[x_1291856692_Idx][chckIndx(i_1291856694, 0, (x_1291856692[x_1291856692_Idx]).length - 1)] = item_1291856693;

  
}

function moveCurrentViewToTop_1291856677(self_1291856678) {
    if ((0 < (self_1291856678.views).length)) {
    var view_1291856685 = self_1291856678.views[chckIndx(self_1291856678.currentView, 0, (self_1291856678.views).length - 1)];
    delete_1291856600(self_1291856678, "views", chckRange(self_1291856678.currentView, 0, 2147483647));
    insert_1291856690(self_1291856678, "views", view_1291856685, 0);
    }
    
    self_1291856678.currentView = 0;
    requestRender_2499805290(self_1291856678.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291856673(self_1291856741) {
    moveCurrentViewToTop_1291856677(self_1291856741);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291856673(this));};

function nextView_1291856758(self_1291856759) {
    var Temporary1;

    if (((self_1291856759.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291856759.currentView, 1), (self_1291856759.views).length);
    }
    
    self_1291856759.currentView = Temporary1;
    requestRender_2499805290(self_1291856759.platform, false);

  
}

function nextViewJsWrapper_1291856754(self_1291856792) {
    nextView_1291856758(self_1291856792);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291856754(this));};

function prevView_1291856808(self_1291856809) {
    var Temporary1;

    if (((self_1291856809.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291856809.currentView, (self_1291856809.views).length), 1), (self_1291856809.views).length);
    }
    
    self_1291856809.currentView = Temporary1;
    requestRender_2499805290(self_1291856809.platform, false);

  
}

function prevViewJsWrapper_1291856804(self_1291856845) {
    prevView_1291856808(self_1291856845);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291856804(this));};

function moveCurrentViewPrev_1291856861(self_1291856862) {
    if ((0 < (self_1291856862.views).length)) {
    var view_1291856869 = self_1291856862.views[chckIndx(self_1291856862.currentView, 0, (self_1291856862.views).length - 1)];
    var index_1291856876 = modInt(subInt(addInt(self_1291856862.currentView, (self_1291856862.views).length), 1), (self_1291856862.views).length);
    delete_1291856600(self_1291856862, "views", chckRange(self_1291856862.currentView, 0, 2147483647));
    insert_1291856690(self_1291856862, "views", view_1291856869, chckRange(index_1291856876, 0, 2147483647));
    self_1291856862.currentView = index_1291856876;
    }
    
    requestRender_2499805290(self_1291856862.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291856857(self_1291856912) {
    moveCurrentViewPrev_1291856861(self_1291856912);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291856857(this));};

function moveCurrentViewNext_1291856928(self_1291856929) {
    if ((0 < (self_1291856929.views).length)) {
    var view_1291856936 = self_1291856929.views[chckIndx(self_1291856929.currentView, 0, (self_1291856929.views).length - 1)];
    var index_1291856940 = modInt(addInt(self_1291856929.currentView, 1), (self_1291856929.views).length);
    delete_1291856600(self_1291856929, "views", chckRange(self_1291856929.currentView, 0, 2147483647));
    insert_1291856690(self_1291856929, "views", view_1291856936, chckRange(index_1291856940, 0, 2147483647));
    self_1291856929.currentView = index_1291856940;
    }
    
    requestRender_2499805290(self_1291856929.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291856924(self_1291856976) {
    moveCurrentViewNext_1291856928(self_1291856976);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291856924(this));};

function setLayout_1291856992(self_1291856993, layout_1291856994) {
    var Temporary1;

    switch (toJSStr(layout_1291856994)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291856993.layout = Temporary1;
    requestRender_2499805290(self_1291856993.platform, false);

  
}

function setLayoutJsWrapper_1291856988(self_1291857058, layout_1291857059) {
    setLayout_1291856992(self_1291857058, layout_1291857059);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291856988(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851067(self_1291851068) {
  var result_1291851069 = null;

    result_1291851069 = self_1291851068.commandLineTextEditor;

  return result_1291851069;

}

function commandLine_1291857080(self_1291857081, initialValue_1291857082) {
    contentHEX3D_2801796671(getCommandLineTextEditor_1291851067(self_1291857081).document, [nimCopy(null, initialValue_1291857082, NTI33554449)]);
    self_1291857081.commandLineMode = true;
    requestRender_2499805290(self_1291857081.platform, false);

  
}

function commandLineJsWrapper_1291857076(self_1291857114, initialValue_1291857115) {
    commandLine_1291857080(self_1291857114, initialValue_1291857115);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291857076(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291857136(self_1291857137) {
    contentHEX3D_2801796671(getCommandLineTextEditor_1291851067(self_1291857137).document, [[]]);
    self_1291857137.commandLineMode = false;
    requestRender_2499805290(self_1291857137.platform, false);

  
}

function exitCommandLineJsWrapper_1291857132(self_1291857168) {
    exitCommandLine_1291857136(self_1291857168);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291857132(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291857241 = 0;
      var L_1291857242 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857241 < L_1291857242)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291857241, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291857241 = addInt(i_1291857241, 1);
            if (!(((a_1593835606).length == L_1291857242))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2080376218(action_2080376219) {
  var result_2080376222 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2080376228 = find_1593835603(action_2080376219, 32);
    if ((spaceIndex_2080376228 == -1)) {
    var colontmp__1291857236 = nimCopy(null, action_2080376219, NTI33554449);
    var colontmp__1291857237 = [];
    result_2080376222 = nimCopy(result_2080376222, {Field0: nimCopy(null, colontmp__1291857236, NTI33554449), Field1: nimCopy(null, colontmp__1291857237, NTI33554449)}, NTI2080375506);
    break BeforeRet;
    }
    else {
      var colontmp__1291857238 = HEX5BHEX5D_855639291(action_2080376219, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2080376228, 1)));
      var colontmp__1291857239 = HEX5BHEX5D_855639319(action_2080376219, HEX2EHEX2E_1040187488(addInt(spaceIndex_2080376228, 1), 1));
      result_2080376222 = nimCopy(result_2080376222, {Field0: nimCopy(null, colontmp__1291857238, NTI33554449), Field1: nimCopy(null, colontmp__1291857239, NTI33554449)}, NTI2080375506);
      break BeforeRet;
    }
    
  };

  return result_2080376222;

}

function executeCommandLine_1291857184(self_1291857185) {
  var result_1291857186 = false;

  BeforeRet: {
    try {
    self_1291857185.commandLineMode = false;
    var colontmp__1291857235 = parseAction_2080376218(nsuJoinSep(content_2801796767(getCommandLineTextEditor_1291851067(self_1291857185).document), []));
    var action_1291857187 = nimCopy(null, colontmp__1291857235["Field0"], NTI33554449);
    var arg_1291857188 = nimCopy(null, colontmp__1291857235["Field1"], NTI33554449);
    contentHEX3D_2801796671(getCommandLineTextEditor_1291851067(self_1291857185).document, [[]]);
    result_1291857186 = handleAction_1291848877(self_1291857185, action_1291857187, arg_1291857188);
    break BeforeRet;
    } finally {
    requestRender_2499805290(self_1291857185.platform, false);
    }
  };

  return result_1291857186;

}

function executeCommandLineJsWrapper_1291857180(self_1291857220) {
  var result_1291857221 = false;

    result_1291857221 = executeCommandLine_1291857184(self_1291857220);

  return result_1291857221;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291857180(this));};

function writeFile_1291857274(self_1291857275, path_1291857276, app_1291857277) {
    try {
    if ((((0 <= self_1291857275.currentView) && (self_1291857275.currentView < (self_1291857275.views).length)) && !((self_1291857275.views[chckIndx(self_1291857275.currentView, 0, (self_1291857275.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2164260884(self_1291857275.views[chckIndx(self_1291857275.currentView, 0, (self_1291857275.views).length - 1)].document, path_1291857276, app_1291857277);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857289 = [mnewString(0)];
    fmtRes_1291857289[0].push.apply(fmtRes_1291857289[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857289, 0, path_1291857276, []);
    fmtRes_1291857289[0].push.apply(fmtRes_1291857289[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857289, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857289[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2499805290(self_1291857275.platform, false);
    }

  
}

function writeFileJsWrapper_1291857270(self_1291857318, path_1291857319, app_1291857320) {
    writeFile_1291857274(self_1291857318, path_1291857319, app_1291857320);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291857270(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291857346(self_1291857347, path_1291857348) {
    try {
    if ((((0 <= self_1291857347.currentView) && (self_1291857347.currentView < (self_1291857347.views).length)) && !((self_1291857347.views[chckIndx(self_1291857347.currentView, 0, (self_1291857347.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2164260888(self_1291857347.views[chckIndx(self_1291857347.currentView, 0, (self_1291857347.views).length - 1)].document, path_1291857348);
    handleDocumentChanged_2382364832(self_1291857347.views[chckIndx(self_1291857347.currentView, 0, (self_1291857347.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857360 = [mnewString(0)];
    fmtRes_1291857360[0].push.apply(fmtRes_1291857360[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857360, 0, path_1291857348, []);
    fmtRes_1291857360[0].push.apply(fmtRes_1291857360[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857360, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857360[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2499805290(self_1291857347.platform, false);
    }

  
}

function loadFileJsWrapper_1291857342(self_1291857388, path_1291857389) {
    loadFile_1291857346(self_1291857388, path_1291857389);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291857342(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function newAstDocument_2936017007(filename_2936017008, app_2936017009, workspaceFolder_2936017011) {
  var result_2936017012 = null;

    result_2936017012 = ({m_type: NTI2936014282, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false, workspace: ({val: null})});
    result_2936017012.filename = nimCopy(null, filename_2936017008, NTI33554449);
    result_2936017012.rootNode = {kind: 7, parent: null, id: newId_2046820569(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2936017012.symbols = nimCopy(result_2936017012.symbols, initTable_2986397032(32), NTI3070231496);
    result_2936017012.appFile = app_2936017009;
    result_2936017012.workspace = nimCopy(result_2936017012.workspace, workspaceFolder_2936017011, NTI2164260874);
    if ((0 < (filename_2936017008).length)) {
    load_2164260888(result_2936017012, []);
    }
    

  return result_2936017012;

}

function none_1291855540() {
  var result_1291855546 = ({val: null});

  return result_1291855546;

}

function newTextDocument_1291857440(filename_1291857442, content_1291857443, app_1291857444) {
  var result_1291857445 = null;

    result_1291857445 = ({m_type: NTI2801795211, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857449 = result_1291857445;
    self_1291857449.filename = nimCopy(null, filename_1291857442, NTI33554449);
    self_1291857449.currentTree = null;
    self_1291857449.appFile = app_1291857444;
    var _ = initTreesitter_2801801211(self_1291857449);
    var language_1291857450 = getLanguageForFile_2885681156(filename_1291857442);
    if (isSome_2315255872(language_1291857450)) {
    self_1291857449.languageId = nimCopy(null, get_2801801248(language_1291857450), NTI33554449);
    }
    
    contentHEX3D_2801796671(self_1291857449, content_1291857443);

  return result_1291857445;

}

function openFile_1291857429(self_1291857430, path_1291857431, app_1291857432) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857431, [46,97,115,116])) {
    createView_1291848965(self_1291857430, newAstDocument_2936017007(path_1291857431, app_1291857432, none_1291855540()));
    }
    else {
      if (app_1291857432) {
      Temporary3 = loadApplicationFile_2332033042(fs_2332033077, path_1291857431);
      }
      else {
      Temporary3 = loadFile_2332033031(fs_2332033077, path_1291857431);
      }
      
      var file_1291857439 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848965(self_1291857430, newTextDocument_1291857440(path_1291857431, nsuSplitLines(file_1291857439, false), app_1291857432));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857477 = [mnewString(0)];
    fmtRes_1291857477[0].push.apply(fmtRes_1291857477[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857477, 0, path_1291857431, []);
    fmtRes_1291857477[0].push.apply(fmtRes_1291857477[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857477, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857477[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2499805290(self_1291857430.platform, false);
    }

  
}

function openFileJsWrapper_1291857425(self_1291857506, path_1291857507, app_1291857508) {
    openFile_1291857429(self_1291857506, path_1291857507, app_1291857508);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291857425(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function removeFromLocalStorage_1291857588(self_1291857589) {
    var Temporary1;

    if ((((0 <= self_1291857589.currentView) && (self_1291857589.currentView < (self_1291857589.views).length)) && !((self_1291857589.views[chckIndx(self_1291857589.currentView, 0, (self_1291857589.views).length - 1)].document == null)))) {
    if (isObj(self_1291857589.views[chckIndx(self_1291857589.currentView, 0, (self_1291857589.views).length - 1)].document.m_type, NTI2801795211)) {
    Temporary1 = self_1291857589.views[chckIndx(self_1291857589.currentView, 0, (self_1291857589.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291857589.views[chckIndx(self_1291857589.currentView, 0, (self_1291857589.views).length - 1)].document.filename;
    }
    
    var filename_1291857605 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291857605));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291857584(self_1291857632) {
    removeFromLocalStorage_1291857588(self_1291857632);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291857584(this));};

function loadFromFile_2667581003(path_2667581004) {
  var result_2667581006 = ({val: null});

  return result_2667581006;

}

function isSome_1291851020(self_1291851022) {
  var result_1291851023 = false;

    result_1291851023 = !((self_1291851022.val == null));

  return result_1291851023;

}

function isNone_1291851048(self_1291851050) {
  var result_1291851051 = false;

    result_1291851051 = (self_1291851050.val == null);

  return result_1291851051;

}

function get_1291851040(self_1291851042) {
  var result_1291851043 = null;

    if (isNone_1291851048(self_1291851042)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851043 = self_1291851042["val"];

  return result_1291851043;

}

function loadTheme_1291857648(self_1291857649, name_1291857650) {
      var Temporary2;

    try {
      var fmtRes_1291857655 = [mnewString(0)];
      fmtRes_1291857655[0].push.apply(fmtRes_1291857655[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291857655, 0, name_1291857650, []);
      fmtRes_1291857655[0].push.apply(fmtRes_1291857655[0], [46,106,115,111,110]);;
      var oHEX60gensym513_1291857658 = loadFromFile_2667581003(fmtRes_1291857655[0]);
      if (!isSome_1291851020(oHEX60gensym513_1291857658)) Temporary2 = false; else {        var theme_1291857681 = get_1291851040(oHEX60gensym513_1291857658);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291857649.theme = theme_1291857681;
    }
    else {
      var fmtRes_1291857686 = [mnewString(0)];
      fmtRes_1291857686[0].push.apply(fmtRes_1291857686[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291857686, 0, name_1291857650, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857686[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2499805290(self_1291857649.platform, false);
    }

  
}

function loadThemeJsWrapper_1291857644(self_1291857714, name_1291857715) {
    loadTheme_1291857648(self_1291857714, name_1291857715);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291857644(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function setCompletions_3204448328(self_3204448329, newCompletions_3204448330) {
    if (!(((newCompletions_3204448330).length == (self_3204448329.completions).length))) {
    markDirty_2449473557(self_3204448329);
    }
    else {
      Label1: {
        var i_3204448348 = 0;
        var colontmp__1291858054 = 0;
        colontmp__1291858054 = (newCompletions_3204448330).length - 1;
        var res_1291858055 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_1291858055 <= colontmp__1291858054)) break Label3;
              i_3204448348 = res_1291858055;
              if (changed_3204448326(self_3204448329.completions[chckIndx(i_3204448348, 0, (self_3204448329.completions).length - 1)], newCompletions_3204448330[chckIndx(i_3204448348, 0, (newCompletions_3204448330).length - 1)])) {
              markDirty_2449473557(self_3204448329);
              break Label1;
              }
              
              res_1291858055 = addInt(res_1291858055, 1);
            }
        };
      };
    }
    
    self_3204448329.completions = nimCopy(null, newCompletions_3204448330, NTI3204448296);
    if ((0 < (self_3204448329.completions).length)) {
    self_3204448329.selected = clamp_1660945119(self_3204448329.selected, 0, subInt((self_3204448329.completions).length, 1));
    }
    else {
      self_3204448329.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3204448388(self_3204448389) {
  var result_3204448391 = null;

  BeforeRet: {
    var text_3204448397 = nsuJoinSep(content_2801796767(self_3204448389.textEditor.document), []);
    var newCompletions_3204448402 = (await self_3204448389.getCompletionsAsync(self_3204448389, text_3204448397));
    setCompletions_3204448328(self_3204448389, newCompletions_3204448402);
    result_3204448391 = undefined;
    break BeforeRet;
  };

  return result_3204448391;

}
async function updateCompletionsAsyncIter_3204448415(self_3204448416) {
  var result_3204448418 = null;

  BeforeRet: {
    var text_3204448424 = nsuJoinSep(content_2801796767(self_3204448416.textEditor.document), []);
    setCompletions_3204448328(self_3204448416, []);
    (await self_3204448416.getCompletionsAsyncIter(self_3204448416, text_3204448424));
    result_3204448418 = undefined;
    break BeforeRet;
  };

  return result_3204448418;

}

function updateCompletions_3204448435(self_3204448436) {
    var text_3204448437 = nsuJoinSep(content_2801796767(self_3204448436.textEditor.document), []);
    if (!((self_3204448436.getCompletions == null))) {
    var newCompletions_3204448441 = self_3204448436.getCompletions(self_3204448436, text_3204448437);
    setCompletions_3204448328(self_3204448436, newCompletions_3204448441);
    }
    else {
    if (!((self_3204448436.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3204448388(self_3204448436);
    }
    else {
    if (!((self_3204448436.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3204448415(self_3204448436);
    }
    else {
      var fmtRes_3204448452 = [mnewString(0)];
      fmtRes_3204448452[0].push.apply(fmtRes_3204448452[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2516582756(fmtRes_3204448452, 0, self_3204448436.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3204448452[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3204448964(self_3204448965) {
    updateCompletions_3204448435(self_3204448965);
    self_3204448965.selected = 0;

  
}

function toJson_3204448622(self_3204448623, opt_3204448624) {
  var result_3204448625 = null;

    result_3204448625 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3204448625, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3204448625, [105,100], newJInt_1627390040(self_3204448623.id));

  return result_3204448625;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_1291858065 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858065 < L_855639192)) break Label3;
            i_855639197 = i_1291858065;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_1291858065 = addInt(i_1291858065, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__1291858068 = 0;
        var colontmp__1291858069 = 0;
        colontmp__1291858068 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__1291858069 = addInt(a_855639190, (b_855639188).length);
        var res_1291858070 = colontmp__1291858068;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__1291858069 <= res_1291858070)) break Label6;
              iHEX60gensym109_855639210 = res_1291858070;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_1291858070 = subInt(res_1291858070, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__1291858073 = 0;
          var colontmp__1291858074 = 0;
          colontmp__1291858073 = addInt(a_855639190, (b_855639188).length);
          colontmp__1291858074 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_1291858075 = colontmp__1291858073;
          Label8: {
              Label9: while (true) {
              if (!(res_1291858075 <= colontmp__1291858074)) break Label9;
                iHEX60gensym109_855639216 = res_1291858075;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_1291858075 = addInt(res_1291858075, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__1291858078 = 0;
        colontmp__1291858078 = (b_855639188).length;
        var i_1291858079 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_1291858079 < colontmp__1291858078)) break Label12;
              iHEX60gensym109_855639221 = i_1291858079;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_1291858079 = addInt(i_1291858079, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_1291858082 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858082 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_1291858082;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_1291858082 = addInt(i_1291858082, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet243);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet244[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet245[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet246[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet247[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet248[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__1291858093 = 0;
      colontmp__1291858093 = start_855639721;
      var res_1291858094 = colontmp__1291858093;
      Label3: {
          Label4: while (true) {
          if (!(res_1291858094 <= last_855639724)) break Label4;
            i_855639729 = res_1291858094;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_1291858094 = addInt(res_1291858094, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_1291858101 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291858101 <= 3)) break Label3;
            __1694499043 = res_1291858101;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_1291858101 = addInt(res_1291858101, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_1291858098 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_1291858098 <= length_1694499110)) break Label5;
                      i_1694499115 = res_1291858098;
                      if ((ConstSet250[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_1291858098 = addInt(res_1291858098, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet251[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet252[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet249)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet257[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet254[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet255[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet256[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet258[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet253[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function isSome_2801813630(self_2801813632) {
  var result_2801813633 = false;

    result_2801813633 = !((self_2801813632.val == null));

  return result_2801813633;

}

function some_2801813366(val_2801813368) {
  var result_2801813369 = ({val: null});

    if (!(!((val_2801813368 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801813369.val = val_2801813368;

  return result_2801813369;

}

function none_3204448535() {
  var result_3204448541 = ({val: null});

  return result_3204448541;

}

function some_1291850932(val_1291850934) {
  var result_1291850935 = ({val: null});

    if (!(!((val_1291850934 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850935.val = val_1291850934;

  return result_1291850935;

}

function none_1291850945() {
  var result_1291850951 = ({val: null});

  return result_1291850951;

}

function getPopupForId_1291850902(self_1291850903, id_1291850904) {
  var result_1291850909 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850931 = null;
      var i_1291858118 = 0;
      var L_1291858119 = (self_1291850903.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858118 < L_1291858119)) break Label3;
            popup_1291850931 = self_1291850903.popups[chckIndx(i_1291858118, 0, (self_1291850903.popups).length - 1)];
            if ((popup_1291850931.id == id_1291850904)) {
            result_1291850909 = nimCopy(result_1291850909, some_1291850932(popup_1291850931), NTI1291848459);
            break BeforeRet;
            }
            
            i_1291858118 = addInt(i_1291858118, 1);
            if (!(((self_1291850903.popups).length == L_1291858119))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850909 = nimCopy(result_1291850909, none_1291850945(), NTI1291848459);
    break BeforeRet;
  };

  return result_1291850909;

}

function isSome_3204448549(self_3204448551) {
  var result_3204448552 = false;

    result_3204448552 = !((self_3204448551.val == null));

  return result_3204448552;

}

function isNone_3204448577(self_3204448579) {
  var result_3204448580 = false;

    result_3204448580 = (self_3204448579.val == null);

  return result_3204448580;

}

function get_3204448569(self_3204448571) {
  var result_3204448572 = null;

    if (isNone_3204448577(self_3204448571)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448572 = self_3204448571["val"];

  return result_3204448572;

}

function some_3204448594(val_3204448596) {
  var result_3204448597 = ({val: null});

    if (!(!((val_3204448596 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3204448597.val = val_3204448596;

  return result_3204448597;

}

function getSelectorPopup_3204448525(wrapper_3204448526) {
      var Temporary1;

  var result_3204448531 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3204448531 = nimCopy(result_3204448531, none_3204448535(), NTI3204448470);
    break BeforeRet;
    }
    
      var oHEX60gensym16_3204448544 = getPopupForId_1291850902(gEditor, wrapper_3204448526.id);
      if (!isSome_3204448549(oHEX60gensym16_3204448544)) Temporary1 = false; else {        var editor_3204448586 = get_3204448569(oHEX60gensym16_3204448544);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3204448586.m_type, NTI3204448278)) {
    result_3204448531 = nimCopy(result_3204448531, some_3204448594(editor_3204448586), NTI3204448470);
    break BeforeRet;
    }
    
    }
    
    result_3204448531 = nimCopy(result_3204448531, none_3204448535(), NTI3204448470);
    break BeforeRet;
  };

  return result_3204448531;

}

function isNone_3204448654(self_3204448656) {
  var result_3204448657 = false;

    result_3204448657 = (self_3204448656.val == null);

  return result_3204448657;

}

function get_3204448674(self_3204448676) {
  var result_3204448677 = null;

    if (isNone_3204448654(self_3204448676)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448677 = self_3204448676["val"];

  return result_3204448677;

}

function acceptScript_3204448635_3204448647(self_3204448648) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym21_3204448649 = getSelectorPopup_3204448525(self_3204448648);
      if (isNone_3204448654(rHEX60gensym21_3204448649)) {
      break BeforeRet;
      }
      
    };
    accept_3204448640(get_3204448674(rHEX60gensym21_3204448649));
  };

  
}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet259[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet260[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291858123 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858123 <= 6)) break Label3;
            if ((x_1627395424[i_1291858123] != undefined)) {
            value_1627395451 = i_1291858123;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291858123 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_2801806156(dst_2801806158, dst_2801806158_Idx, jsonNode_2801806159, jsonPath_2801806160, jsonPath_2801806160_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2801806159, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2801806160[jsonPath_2801806160_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet261[jsonNode_2801806159.kind] != undefined))) {
    var msgHEX60gensym174_2801806177 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet262), nimCopy(null, jsonPath_2801806160[jsonPath_2801806160_Idx], NTI33554449), reprEnum(jsonNode_2801806159.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym174_2801806177, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2801806159;
    if (ConstSet263[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2801806158[dst_2801806158_Idx] = Temporary1.num;

  
}

function to_2801806145(node_2801806148) {
  var result_2801806150 = [0];

    var jsonPath_2801806151 = [[]];
    result_2801806150[0] = 0;
    initFromJson_2801806156(result_2801806150, 0, node_2801806148, jsonPath_2801806151, 0);

  return result_2801806150[0];

}

function fromJson_2801806132(a_2801806134, a_2801806134_Idx, b_2801806135, opt_2801806136) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801806135, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2801806135}));
    }
    
    a_2801806134[a_2801806134_Idx] = to_2801806145(b_2801806135);

  
}

function jsonTo_2801806126(b_2801806128, opt_2801806130) {
  var result_2801806131 = [0];

    fromJson_2801806132(result_2801806131, 0, b_2801806128, opt_2801806130);

  return result_2801806131[0];

}

function fromJsonHook_3204448626(t_3204448627, jsonNode_3204448628) {
    t_3204448627.id = jsonTo_2801806126(HEX5BHEX5D_1627393037(jsonNode_3204448628, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3204448706(a_3204448708, b_3204448709, opt_3204448710) {
    if (!(!(HEX3DHEX3D_1627392026(b_3204448709, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3204448709}));
    }
    
    fromJsonHook_3204448626(a_3204448708, b_3204448709);

  
}

function jsonTo_3204448700(b_3204448702, opt_3204448704) {
  var result_3204448705 = [({id: 0})];

    fromJson_3204448706(result_3204448705[0], b_3204448702, opt_3204448704);

  return result_3204448705[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet264[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3204448698(HEX3Atmp_3204448637) {
  var result_3204448699 = null;

    result_3204448699 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3204448635_3204448647(jsonTo_3204448700(HEX5BHEX5D_1627393116(HEX3Atmp_3204448637, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym26_3204448717 = [97,99,99,101,112,116];
    var fmtRes_3204448722 = [mnewString(0)];
    fmtRes_3204448722[0].push.apply(fmtRes_3204448722[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448722, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym26_3204448717 || [],fmtRes_3204448722[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448699;

}

function cancelScript_3204448734_3204448747(self_3204448748) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym31_3204448749 = getSelectorPopup_3204448525(self_3204448748);
      if (isNone_3204448654(rHEX60gensym31_3204448749)) {
      break BeforeRet;
      }
      
    };
    cancel_3204448739(get_3204448674(rHEX60gensym31_3204448749));
  };

  
}

function cancelApi_3204448775(HEX3Atmp_3204448736) {
  var result_3204448776 = null;

    result_3204448776 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3204448734_3204448747(jsonTo_3204448700(HEX5BHEX5D_1627393116(HEX3Atmp_3204448736, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym36_3204448782 = [99,97,110,99,101,108];
    var fmtRes_3204448787 = [mnewString(0)];
    fmtRes_3204448787[0].push.apply(fmtRes_3204448787[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448787, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym36_3204448782 || [],fmtRes_3204448787[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448776;

}

function prevScript_3204448790_3204448815(self_3204448816) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym40_3204448817 = getSelectorPopup_3204448525(self_3204448816);
      if (isNone_3204448654(rHEX60gensym40_3204448817)) {
      break BeforeRet;
      }
      
    };
    prev_3204448795(get_3204448674(rHEX60gensym40_3204448817));
  };

  
}

function prevApi_3204448843(HEX3Atmp_3204448792) {
  var result_3204448844 = null;

    result_3204448844 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3204448790_3204448815(jsonTo_3204448700(HEX5BHEX5D_1627393116(HEX3Atmp_3204448792, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym45_3204448850 = [112,114,101,118];
    var fmtRes_3204448855 = [mnewString(0)];
    fmtRes_3204448855[0].push.apply(fmtRes_3204448855[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448855, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym45_3204448850 || [],fmtRes_3204448855[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448844;

}

function nextScript_3204448858_3204448880(self_3204448881) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym50_3204448882 = getSelectorPopup_3204448525(self_3204448881);
      if (isNone_3204448654(rHEX60gensym50_3204448882)) {
      break BeforeRet;
      }
      
    };
    next_3204448863(get_3204448674(rHEX60gensym50_3204448882));
  };

  
}

function nextApi_3204448908(HEX3Atmp_3204448860) {
  var result_3204448909 = null;

    result_3204448909 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3204448858_3204448880(jsonTo_3204448700(HEX5BHEX5D_1627393116(HEX3Atmp_3204448860, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym55_3204448915 = [110,101,120,116];
    var fmtRes_3204448920 = [mnewString(0)];
    fmtRes_3204448920[0].push.apply(fmtRes_3204448920[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448920, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym55_3204448915 || [],fmtRes_3204448920[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448909;

}

function none_2801813562() {
  var result_2801813568 = ({val: null});

  return result_2801813568;

}

function dispatch_3204448925(command_3204448924, arg_3204448923) {
    var Temporary1;

  var result_3204448927 = ({val: null});

    switch (toJSStr(command_3204448924)) {
    case "accept":
      Temporary1 = some_2801813366(acceptApi_3204448698(arg_3204448923));
      break;
    case "cancel":
      Temporary1 = some_2801813366(cancelApi_3204448775(arg_3204448923));
      break;
    case "prev":
      Temporary1 = some_2801813366(prevApi_3204448843(arg_3204448923));
      break;
    case "next":
      Temporary1 = some_2801813366(nextApi_3204448908(arg_3204448923));
      break;
    default: 
      Temporary1 = none_2801813562();
      break;
    }
    result_3204448927 = nimCopy(result_3204448927, Temporary1, NTI2801806961);

  return result_3204448927;

}

function handleAction_3204448946(self_3204448947, action_3204448948, arg_3204448949) {
  var result_3204448950 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848840(self_3204448947.editor, self_3204448947, action_3204448948, arg_3204448949) == 3)) {
    result_3204448950 = 3;
    break BeforeRet;
    }
    
    var args_3204448955 = newJArray_1627390082();
    add_1627390190(args_3204448955, toJson_3204448622({id: self_3204448947.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3204448956 = null;
      var colontmp__1291858058 = null;
      colontmp__1291858058 = newStringStream_1660945417(arg_3204448949);
      var p_1291858060 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291858060[0], colontmp__1291858058, [], false);
      try {
      var _ = getTok_1694499270(p_1291858060[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291858060[0].tok == 1))) break Label4;
            a_3204448956 = parseJson_1627395211(p_1291858060[0], false, false, 0);
            add_1627390190(args_3204448955, a_3204448956);
          }
      };
      } finally {
      close_1694498967(p_1291858060[0]);
      }
    };
    if (isSome_2801813630(dispatch_3204448925(action_3204448948, args_3204448955))) {
    result_3204448950 = 3;
    break BeforeRet;
    }
    
    result_3204448950 = 1;
    break BeforeRet;
  };

  return result_3204448950;

}

function newSelectorPopup_3204449052(editor_3204449053) {
    
function HEX3Aanonymous_3204449075(doc_3204449076) {
        handleTextChanged_3204448964(popup_3204449055);

      
    }
      
function HEX3Aanonymous_3204449124(actionHEX60gensym67HEX60gensym68_3204449125, argHEX60gensym67HEX60gensym68_3204449126) {
        var result_3204449127 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3204449112.config.handleActions) {
          var action_3204449128 = nimCopy(null, actionHEX60gensym67HEX60gensym68_3204449125, NTI33554449);
          var arg_3204449129 = nimCopy(null, argHEX60gensym67HEX60gensym68_3204449126, NTI33554449);
          var responseHEX60gensym67HEX60gensym68_3204449130 = handleAction_3204448946(popup_3204449055, action_3204449128, arg_3204449129);
          if (handlerHEX60gensym67_3204449112.config.consumeAllActions) {
          result_3204449127 = 3;
          break BeforeRet;
          }
          
          result_3204449127 = responseHEX60gensym67HEX60gensym68_3204449130;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym67_3204449112.config.consumeAllActions) {
          result_3204449127 = 3;
          break BeforeRet;
          }
          else {
            result_3204449127 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3204449127;

      }
      
function HEX3Aanonymous_3204449132(inputHEX60gensym67HEX60gensym69_3204449133) {
        var result_3204449134 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3204449112.config.handleInputs) {
          var input_3204449135 = nimCopy(null, inputHEX60gensym67HEX60gensym69_3204449133, NTI33554449);
          result_3204449134 = 1;
          break BeforeRet;
          }
          else {
            result_3204449134 = 1;
            break BeforeRet;
          }
          
        };

        return result_3204449134;

      }

  var result_3204449054 = null;

  BeforeRet: {
    var popup_3204449055 = {editor: editor_3204449053, m_type: NTI3204448278, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3204449055.textEditor = newTextEditor_2801813760(newTextDocument_2801801429([], [], false), editor_3204449053);
    setMode_2801806301(popup_3204449055.textEditor, [105,110,115,101,114,116]);
    popup_3204449055.textEditor.renderHeader = false;
    popup_3204449055.textEditor.lineNumbers = nimCopy(popup_3204449055.textEditor.lineNumbers, some_3154117142(0), NTI2801795338);
    popup_3204449055.textEditor.document.singleLine = true;
    var _ = subscribe_2801813808(popup_3204449055.textEditor.document.textChanged, HEX3Aanonymous_3204449075);
    Label1: {
      var handlerHEX60gensym67_3204449112 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym67_3204449112.config = getEventHandlerConfig_1291849169(editor_3204449053, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym67_3204449112.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(editor_3204449053, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym67_3204449112.handleAction = HEX3Aanonymous_3204449124;
      handlerHEX60gensym67_3204449112.handleInput = HEX3Aanonymous_3204449132;
    };
    popup_3204449055.eventHandler = handlerHEX60gensym67_3204449112;
    result_3204449054 = popup_3204449055;
    break BeforeRet;
  };

  return result_3204449054;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet267[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet268[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet270[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet271[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291858193 = it_1442840587.prev;
    var colontmp__1291858194 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291858193, Field1: colontmp__1291858194}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet272[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet273[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet269[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet274[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet275[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet276[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet277[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet265[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet266[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291857799(len_1291857801) {
  var result_1291857802 = [];

    result_1291857802 = new Array(len_1291857801); for (var i = 0 ; i < len_1291857801 ; ++i) { result_1291857802[i] = null; }
  return result_1291857802;

}

function mergeAlt_1291857810(a_1291857812, b_1291857813, lo_1291857814, m_1291857815, hi_1291857816, cmp_1291857819, order_1291857820) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291857819(a_1291857812[chckIndx(m_1291857815, 0, (a_1291857812).length - 1)], a_1291857812[chckIndx(addInt(m_1291857815, 1), 0, (a_1291857812).length - 1)]), order_1291857820) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291857821 = lo_1291857814;
    if (!((j_1291857821 <= m_1291857815))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291857827 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291857821 <= m_1291857815)) break Label2;
          b_1291857813[chckIndx(bb_1291857827, 0, (b_1291857813).length - 1)] = a_1291857812[chckIndx(j_1291857821, 0, (a_1291857812).length - 1)];
          bb_1291857827 = addInt(bb_1291857827, 1);
          j_1291857821 = addInt(j_1291857821, 1);
        }
    };
    var i_1291857838 = 0;
    var k_1291857839 = lo_1291857814;
    Label3: {
        Label4: while (true) {
        if (!((k_1291857839 < j_1291857821) && (j_1291857821 <= hi_1291857816))) break Label4;
          if ((HEX2A_1023410184(cmp_1291857819(b_1291857813[chckIndx(i_1291857838, 0, (b_1291857813).length - 1)], a_1291857812[chckIndx(j_1291857821, 0, (a_1291857812).length - 1)]), order_1291857820) <= 0)) {
          a_1291857812[chckIndx(k_1291857839, 0, (a_1291857812).length - 1)] = b_1291857813[chckIndx(i_1291857838, 0, (b_1291857813).length - 1)];
          i_1291857838 = addInt(i_1291857838, 1);
          }
          else {
            a_1291857812[chckIndx(k_1291857839, 0, (a_1291857812).length - 1)] = a_1291857812[chckIndx(j_1291857821, 0, (a_1291857812).length - 1)];
            j_1291857821 = addInt(j_1291857821, 1);
          }
          
          k_1291857839 = addInt(k_1291857839, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291857839 < j_1291857821)) break Label6;
          a_1291857812[chckIndx(k_1291857839, 0, (a_1291857812).length - 1)] = b_1291857813[chckIndx(i_1291857838, 0, (b_1291857813).length - 1)];
          k_1291857839 = addInt(k_1291857839, 1);
          i_1291857838 = addInt(i_1291857838, 1);
        }
    };
  };

  
}

function sort_1291857787(a_1291857789, cmp_1291857792, order_1291857793) {
    var n_1291857798 = (a_1291857789).length;
    var b_1291857807 = newSeq_1291857799(chckRange(divInt(n_1291857798, 2), 0, 2147483647));
    var s_1291857808 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291857808 < n_1291857798)) break Label2;
          var m_1291857809 = subInt(subInt(n_1291857798, 1), s_1291857808);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291857809)) break Label4;
                mergeAlt_1291857810(a_1291857789, b_1291857807, nimMax(addInt(subInt(m_1291857809, s_1291857808), 1), 0), m_1291857809, addInt(m_1291857809, s_1291857808), cmp_1291857792, order_1291857793);
                m_1291857809 = subInt(m_1291857809, mulInt(s_1291857808, 2));
              }
          };
          s_1291857808 = mulInt(s_1291857808, 2);
        }
    };

  
}

function chooseTheme_1291857736(self_1291857737) {
    
function HEX3Aanonymous_1291857740(popup_1291857741, text_1291857742) {
                          var Temporary9;
        
function HEX3Aanonymous_1291857756(a_1291857774, b_1291857775) {
          var result_1291857780 = 0;

            result_1291857780 = cmp_2936028996(a_1291857774.score, b_1291857775.score);

          return result_1291857780;

        }

      var result_1291857743 = [];

        Label1: {
          var file_1291857744 = [];
          var stack_1291858161 = [[[]]];
          var checkDir_1291858162 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291858161[0]).length)) break Label3;
                var d_1291858164 = pop_1560281227(stack_1291858161, 0);
                Label4: {
                  var k_1291858166 = 0;
                  var p_1291858167 = [];
                  var colontmp__1291858168 = [];
                  colontmp__1291858168 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291858164);
                  Label5: {
                    var k_1291858178 = 0;
                    var v_1291858179 = [];
                    var colontmp__1291858180 = [];
                    colontmp__1291858180 = staticWalkDir_1560281124(colontmp__1291858168, true);
                    var i_1291858181 = 0;
                    var L_1291858182 = (colontmp__1291858180).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291858181 < L_1291858182)) break Label7;
                          k_1291858178 = colontmp__1291858180[chckIndx(i_1291858181, 0, (colontmp__1291858180).length - 1)]["Field0"];
                          v_1291858179 = colontmp__1291858180[chckIndx(i_1291858181, 0, (colontmp__1291858180).length - 1)]["Field1"];
                          k_1291858166 = k_1291858178;
                          p_1291858167 = v_1291858179;
                          var rel_1291858184 = HEX2F_1426063446(d_1291858164, p_1291858167);
                          if (((ConstSet278[k_1291858166] != undefined) && (ConstSet279[k_1291858166] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291858184, NTI33554449);
                          stack_1291858161[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet280[k_1291858166] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291858184;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291858184);
                          }
                          
                          file_1291857744 = Temporary9;
                          if (nsuEndsWith(file_1291857744, [46,106,115,111,110])) {
                          var name_1291858185 = nimCopy(null, nossplitFile(file_1291857744).Field1, NTI33554449);
                          var score_1291858186 = fuzzyMatchSmart_1979711572(text_1291857742, name_1291858185, true);
                          var fmtRes_1291858187 = [mnewString(0)];
                          fmtRes_1291858187[0].push.apply(fmtRes_1291858187[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291858187, 0, file_1291857744, []);
                          result_1291857743.push({name: nimCopy(null, name_1291858185, NTI33554449), path: nimCopy(null, fmtRes_1291858187[0], NTI33554449), score: score_1291858186, m_type: NTI1291848514});;
                          }
                          
                          }
                          
                          i_1291858181 = addInt(i_1291858181, 1);
                          if (!(((colontmp__1291858180).length == L_1291858182))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291858162 = false;
              }
          };
        };
        sort_1291857787(result_1291857743, HEX3Aanonymous_1291857756, 0);

      return result_1291857743;

    }
    
function HEX3Aanonymous_1291857906(item_1291857907) {
          var Temporary1;

          var oHEX60gensym526_1291857910 = loadFromFile_2667581003(item_1291857907.path);
          if (!isSome_1291851020(oHEX60gensym526_1291857910)) Temporary1 = false; else {            var theme_1291857933 = get_1291851040(oHEX60gensym526_1291857910);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857737.theme = theme_1291857933;
        }
        

      
    }
    
function HEX3Aanonymous_1291857934(item_1291857935) {
          var Temporary1;

          var oHEX60gensym527_1291857938 = loadFromFile_2667581003(item_1291857935.path);
          if (!isSome_1291851020(oHEX60gensym527_1291857938)) Temporary1 = false; else {            var theme_1291857961 = get_1291851040(oHEX60gensym527_1291857938);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857737.theme = theme_1291857961;
        }
        

      
    }
    
function HEX3Aanonymous_1291857962() {
          var Temporary1;

          var oHEX60gensym528_1291857965 = loadFromFile_2667581003(originalTheme_1291857738);
          if (!isSome_1291851020(oHEX60gensym528_1291857965)) Temporary1 = false; else {            var theme_1291857988 = get_1291851040(oHEX60gensym528_1291857965);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291857737.theme = theme_1291857988;
        }
        

      
    }

    try {
    var originalTheme_1291857738 = nimCopy(null, self_1291857737.theme.path, NTI33554449);
    var popup_1291857739 = newSelectorPopup_3204449052(self_1291857737);
    popup_1291857739.getCompletions = HEX3Aanonymous_1291857740;
    popup_1291857739.handleItemSelected = HEX3Aanonymous_1291857906;
    popup_1291857739.handleItemConfirmed = HEX3Aanonymous_1291857934;
    popup_1291857739.handleCanceled = HEX3Aanonymous_1291857962;
    updateCompletions_3204448435(popup_1291857739);
    pushPopup_1291849067(self_1291857737, popup_1291857739);
    } finally {
    requestRender_2499805290(self_1291857737.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291857732(self_1291858042) {
    chooseTheme_1291857736(self_1291858042);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291857732(this));};
async function iterateDirectoryRec_1291858307(self_1291858308, folder_1291858309, path_1291858310, callback_1291858313) {
  var result_1291858315 = null;

  BeforeRet: {
    var path_1291858321 = nimCopy(null, path_1291858310, NTI33554449);
    var resultItems_1291858322 = [];
    var folders_1291858323 = [];
    var items_1291858328 = (await getDirectoryListing_2181038129(folder_1291858309, path_1291858321));
    Label1: {
      var file_1291858332 = [];
      var i_1291858629 = 0;
      var L_1291858630 = (items_1291858328.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858629 < L_1291858630)) break Label3;
            file_1291858332 = items_1291858328.files[chckIndx(i_1291858629, 0, (items_1291858328.files).length - 1)];
            resultItems_1291858322.push(HEX2F_1426063446(path_1291858321, file_1291858332));;
            i_1291858629 = addInt(i_1291858629, 1);
            if (!(((items_1291858328.files).length == L_1291858630))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291858340 = [];
      var i_1291858633 = 0;
      var L_1291858634 = (items_1291858328.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291858633 < L_1291858634)) break Label6;
            dir_1291858340 = items_1291858328.folders[chckIndx(i_1291858633, 0, (items_1291858328.folders).length - 1)];
            folders_1291858323.push(HEX2F_1426063446(path_1291858321, dir_1291858340));;
            i_1291858633 = addInt(i_1291858633, 1);
            if (!(((items_1291858328.folders).length == L_1291858634))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291858313(resultItems_1291858322);
    var futs_1291858346 = [];
    Label7: {
      var dir_1291858350 = [];
      var i_1291858637 = 0;
      var L_1291858638 = (folders_1291858323).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291858637 < L_1291858638)) break Label9;
            dir_1291858350 = folders_1291858323[chckIndx(i_1291858637, 0, (folders_1291858323).length - 1)];
            futs_1291858346.push(iterateDirectoryRec_1291858307(self_1291858308, folder_1291858309, dir_1291858350, callback_1291858313));;
            i_1291858637 = addInt(i_1291858637, 1);
            if (!(((folders_1291858323).length == L_1291858638))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291858377 = null;
      var i_1291858642 = 0;
      var L_1291858643 = (futs_1291858346).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291858642 < L_1291858643)) break Label12;
            fut_1291858377 = futs_1291858346[chckIndx(i_1291858642, 0, (futs_1291858346).length - 1)];
            (await fut_1291858377);
            i_1291858642 = addInt(i_1291858642, 1);
            if (!(((futs_1291858346).length == L_1291858643))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291858315 = undefined;
    break BeforeRet;
  };

  return result_1291858315;

}

function some_1291855527(val_1291855529) {
  var result_1291855530 = ({val: null});

    if (!(!((val_1291855529 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291855530.val = val_1291855529;

  return result_1291855530;

}

function loadWorkspaceFile_1291857404(self_1291857405, path_1291857406, folder_1291857407) {
    try {
    if ((((0 <= self_1291857405.currentView) && (self_1291857405.currentView < (self_1291857405.views).length)) && !((self_1291857405.views[chckIndx(self_1291857405.currentView, 0, (self_1291857405.views).length - 1)].document == null)))) {
++excHandler;
    try {
    self_1291857405.views[chckIndx(self_1291857405.currentView, 0, (self_1291857405.views).length - 1)].document.workspace = nimCopy(self_1291857405.views[chckIndx(self_1291857405.currentView, 0, (self_1291857405.views).length - 1)].document.workspace, some_1291855527(folder_1291857407), NTI2164260874);
    load_2164260888(self_1291857405.views[chckIndx(self_1291857405.currentView, 0, (self_1291857405.views).length - 1)].document, path_1291857406);
    handleDocumentChanged_2382364832(self_1291857405.views[chckIndx(self_1291857405.currentView, 0, (self_1291857405.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857422 = [mnewString(0)];
    fmtRes_1291857422[0].push.apply(fmtRes_1291857422[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857422, 0, path_1291857406, []);
    fmtRes_1291857422[0].push.apply(fmtRes_1291857422[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857422, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857422[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2499805290(self_1291857405.platform, false);
    }

  
}

function isNone_2801801610(self_2801801612) {
  var result_2801801613 = false;

    result_2801801613 = (self_2801801612.val == null);

  return result_2801801613;

}

function get_1291858520(self_1291858522) {
  var result_1291858523 = null;
  var result_1291858523_Idx = 0;

  BeforeRet: {
    if (isNone_2801801610(self_1291858522)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291858523 = self_1291858522; result_1291858523_Idx = "val";
    break BeforeRet;
  };

  return [result_1291858523, result_1291858523_Idx];

}

function newTextDocument_1291857540(filename_1291857542, content_1291857543, app_1291857544) {
  var result_1291857545 = null;

    result_1291857545 = ({m_type: NTI2801795211, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false, workspace: ({val: null})});
    var self_1291857549 = result_1291857545;
    self_1291857549.filename = nimCopy(null, filename_1291857542, NTI33554449);
    self_1291857549.currentTree = null;
    self_1291857549.appFile = app_1291857544;
    var _ = initTreesitter_2801801211(self_1291857549);
    var language_1291857550 = getLanguageForFile_2885681156(filename_1291857542);
    if (isSome_2315255872(language_1291857550)) {
    self_1291857549.languageId = nimCopy(null, get_2801801248(language_1291857550), NTI33554449);
    }
    
    contentHEX3D_2801796671(self_1291857549, content_1291857543);

  return result_1291857545;

}
async function updateDocumentContent_1291857245(self_1291857246, document_1291857247, path_1291857248, folder_1291857249) {
  var result_1291857251 = null;

  BeforeRet: {
    var content_1291857261 = (await loadFile_2181038113(folder_1291857249, path_1291857248));
    if (isObj(document_1291857247.m_type, NTI2801795211)) {
    contentHEX3D_2801796630(document_1291857247, content_1291857261);
    }
    
    result_1291857251 = undefined;
    break BeforeRet;
  };

  return result_1291857251;

}

function openWorkspaceFile_1291857529(self_1291857530, path_1291857531, folder_1291857532) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291857531, [46,97,115,116])) {
    createView_1291848965(self_1291857530, newAstDocument_2936017007(path_1291857531, false, some_1291855527(folder_1291857532)));
    }
    else {
      var document_1291857573 = newTextDocument_1291857540(path_1291857531, [], false);
      document_1291857573.workspace = nimCopy(document_1291857573.workspace, some_1291855527(folder_1291857532), NTI2164260874);
      var _ = updateDocumentContent_1291857245(self_1291857530, document_1291857573, path_1291857531, folder_1291857532);
      createView_1291848965(self_1291857530, document_1291857573);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857581 = [mnewString(0)];
    fmtRes_1291857581[0].push.apply(fmtRes_1291857581[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291857581, 0, path_1291857531, []);
    fmtRes_1291857581[0].push.apply(fmtRes_1291857581[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291857581, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857581[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2499805290(self_1291857530.platform, false);
    }

  
}

function chooseFile_1291858406(self_1291858407, view_1291858408) {
    async function HEX3Aanonymous_1291858411(popup_1291858412, text_1291858413) {
                text_1291858413 = nimCopy(null, text_1291858413, NTI33554449);
                
function HEX3Aanonymous_1291858427(files_1291858428) {
                    
function HEX3Aanonymous_1291858448(a_1291858466, b_1291858467) {
                      var result_1291858472 = 0;

                        result_1291858472 = cmp_2936028996(a_1291858466.score, b_1291858467.score);

                      return result_1291858472;

                    }

                    var folder_1291858429 = folder_1291858426;
                    Label1: {
                      var file_1291858433 = [];
                      var i_1291858622 = 0;
                      var L_1291858623 = (files_1291858428).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291858622 < L_1291858623)) break Label3;
                            file_1291858433 = files_1291858428[chckIndx(i_1291858622, 0, (files_1291858428).length - 1)];
                            var name_1291858434 = nimCopy(null, nossplitFile(file_1291858433).Field1, NTI33554449);
                            var score_1291858435 = fuzzyMatchSmart_1979711572(text_1291858413, name_1291858434, true);
                            var fmtRes_1291858440 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291858440, 0, file_1291858433, []);
                            popup_1291858412.completions.push({path: nimCopy(null, fmtRes_1291858440[0], NTI33554449), score: score_1291858435, workspaceFolder: some_1291855527(folder_1291858429), m_type: NTI1291848516});;
                            i_1291858622 = addInt(i_1291858622, 1);
                            if (!(((files_1291858428).length == L_1291858623))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_1291857787(popup_1291858412.completions, HEX3Aanonymous_1291858448, 0);
                    markDirty_2449473557(popup_1291858412);

                  
                }

      var result_1291858415 = null;

      BeforeRet: {
        var resultItems_1291858421 = [];
        Label1: {
          var folder_1291858425 = null;
          var i_1291858625 = 0;
          var L_1291858626 = (self_1291858407.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291858625 < L_1291858626)) break Label3;
                folder_1291858425 = self_1291858407.workspace.folders[chckIndx(i_1291858625, 0, (self_1291858407.workspace.folders).length - 1)];
                var folder_1291858426 = folder_1291858425;
                (await iterateDirectoryRec_1291858307(self_1291858407, folder_1291858426, [], HEX3Aanonymous_1291858427));
                i_1291858625 = addInt(i_1291858625, 1);
                if (!(((self_1291858407.workspace.folders).length == L_1291858626))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291858415 = undefined;
        break BeforeRet;
      };

      return result_1291858415;

    }
    view_1291858408 = nimCopy(null, view_1291858408, NTI33554449);
    
function HEX3Aanonymous_1291858499(item_1291858500) {
          var Temporary1;
          var Temporary2;

        switch (toJSStr(view_1291858408)) {
        case "current":
          if (isSome_2801801582(item_1291858500.workspaceFolder)) {
          loadWorkspaceFile_1291857404(self_1291858407, item_1291858500.path, (Temporary1 = get_1291858520(item_1291858500.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          loadFile_1291857346(self_1291858407, item_1291858500.path);
          }
          
          break;
        case "new":
          if (isSome_2801801582(item_1291858500.workspaceFolder)) {
          openWorkspaceFile_1291857529(self_1291858407, item_1291858500.path, (Temporary2 = get_1291858520(item_1291858500.workspaceFolder), Temporary2)[0][Temporary2[1]]);
          }
          else {
          openFile_1291857429(self_1291858407, item_1291858500.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291858567 = [mnewString(0)];
          fmtRes_1291858567[0].push.apply(fmtRes_1291858567[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291858567, 0, view_1291858408, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858567[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291858409 = newSelectorPopup_3204449052(self_1291858407);
    popup_1291858409.getCompletionsAsyncIter = HEX3Aanonymous_1291858411;
    popup_1291858409.handleItemConfirmed = HEX3Aanonymous_1291858499;
    updateCompletions_3204448435(popup_1291858409);
    pushPopup_1291849067(self_1291858407, popup_1291858409);
    } finally {
    requestRender_2499805290(self_1291858407.platform, false);
    }

  
}

function chooseFileJsWrapper_1291858402(self_1291858604, view_1291858605) {
    chooseFile_1291858406(self_1291858604, view_1291858605);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291858402(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291858651(self_1291858652, token_1291858653) {
    saveApplicationFile_2332033048(fs_2332033077, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291858653);

  
}

function setGithubAccessTokenJsWrapper_1291858647(self_1291858681, token_1291858682) {
    setGithubAccessToken_1291858651(self_1291858681, token_1291858682);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291858647(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291858703(self_1291858704) {
    try {
    if (!((self_1291858704.scriptContext == null))) {
++excHandler;
    try {
    reload_2768240655(self_1291858704.scriptContext);
    if (!(self_1291858704.initializeCalled)) {
    var _ = false;
    self_1291858704.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291858717 = mnewString(0);
    fmtRes_1291858717.push.apply(fmtRes_1291858717, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291858717, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2499805290(self_1291858704.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291858699(self_1291858744) {
    reloadConfig_1291858703(self_1291858744);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291858699(this));};

function logOptions_1291858760(self_1291858761) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291858761.options, 2)]);

  
}

function logOptionsJsWrapper_1291858756(self_1291858788) {
    logOptions_1291858760(self_1291858788);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291858756(this));};

function clear_2080375815(t_2080375818) {
    Label1: {
      var i_2080375870 = 0;
      var colontmp__1291858851 = 0;
      colontmp__1291858851 = (t_2080375818.data).length;
      var i_1291858852 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291858852 < colontmp__1291858851)) break Label3;
            i_2080375870 = i_1291858852;
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field0 = 0;
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2080375818.data[chckIndx(i_2080375870, 0, (t_2080375818.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291858852 = addInt(i_1291858852, 1);
          }
      };
    };
    t_2080375818.counter = 0;

  
}

function clearCommands_2080375773(config_2080375774) {
    clear_2080375815(config_2080375774.commands);
    config_2080375774.revision = addInt(config_2080375774.revision, 1);

  
}

function clearCommands_1291858804(self_1291858805, context_1291858806) {
    clearCommands_2080375773(getEventHandlerConfig_1291849169(self_1291858805, context_1291858806));

  
}

function clearCommandsJsWrapper_1291858800(self_1291858834, context_1291858835) {
    clearCommands_1291858804(self_1291858834, context_1291858835);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291858800(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853925(t_1291853928) {
  var result_1291853929 = 0;

    result_1291853929 = t_1291853928.counter;

  return result_1291853929;

}

function getAllEditors_1291858860(self_1291858861) {
  var result_1291858862 = [];

    Label1: {
      var id_1291859083 = 0;
      var L_1291859147 = len_1291853925(self_1291858861.editors);
      Label2: {
        var h_1291859149 = 0;
        var colontmp__1291859150 = 0;
        colontmp__1291859150 = (self_1291858861.editors.data).length - 1;
        var res_1291859151 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291859151 <= colontmp__1291859150)) break Label4;
              h_1291859149 = res_1291859151;
              if (isFilled_1308622880(self_1291858861.editors.data[chckIndx(h_1291859149, 0, (self_1291858861.editors.data).length - 1)].Field0)) {
              id_1291859083 = self_1291858861.editors.data[chckIndx(h_1291859149, 0, (self_1291858861.editors.data).length - 1)]["Field1"];
              result_1291858862.push(id_1291859083);;
              if (!((len_1291853925(self_1291858861.editors) == L_1291859147))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291859151 = addInt(res_1291859151, 1);
            }
        };
      };
    };

  return result_1291858862;

}

function getAllEditorsJsWrapper_1291858856(self_1291859115) {
  var result_1291859116 = [];

    result_1291859116 = nimCopy(null, getAllEditors_1291858860(self_1291859115), NTI1291854679);

  return result_1291859116;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291858856(this));};

function getModeConfig_1291859153(self_1291859154, mode_1291859155) {
  var result_1291859156 = null;

  BeforeRet: {
    result_1291859156 = getEventHandlerConfig_1291849169(self_1291859154, ([101,100,105,116,111,114,46] || []).concat(mode_1291859155 || []));
    break BeforeRet;
  };

  return result_1291859156;

}

function setMode_1291859163(self_1291859164, mode_1291859165) {
        
function HEX3Aanonymous_1291859186(actionHEX60gensym613HEX60gensym614_1291859187, argHEX60gensym613HEX60gensym614_1291859188) {
            var Temporary1;

          var result_1291859189 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859174.config.handleActions) {
            var action_1291859190 = nimCopy(null, actionHEX60gensym613HEX60gensym614_1291859187, NTI33554449);
            var arg_1291859191 = nimCopy(null, argHEX60gensym613HEX60gensym614_1291859188, NTI33554449);
            if (handleAction_1291848877(self_1291859164, action_1291859190, arg_1291859191)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym613HEX60gensym614_1291859192 = Temporary1;
            if (handlerHEX60gensym613_1291859174.config.consumeAllActions) {
            result_1291859189 = 3;
            break BeforeRet;
            }
            
            result_1291859189 = responseHEX60gensym613HEX60gensym614_1291859192;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym613_1291859174.config.consumeAllActions) {
            result_1291859189 = 3;
            break BeforeRet;
            }
            else {
              result_1291859189 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291859189;

        }
        
function HEX3Aanonymous_1291859194(inputHEX60gensym613HEX60gensym615_1291859195) {
          var result_1291859196 = 0;

          BeforeRet: {
            if (handlerHEX60gensym613_1291859174.config.handleInputs) {
            var input_1291859197 = nimCopy(null, inputHEX60gensym613HEX60gensym615_1291859195, NTI33554449);
            result_1291859196 = 1;
            break BeforeRet;
            }
            else {
              result_1291859196 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291859196;

        }

    try {
    if (((mode_1291859165).length == 0)) {
    self_1291859164.modeEventHandler = null;
    }
    else {
      var config_1291859166 = getModeConfig_1291859153(self_1291859164, mode_1291859165);
      Label2: {
        var handlerHEX60gensym613_1291859174 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym613_1291859174.config = config_1291859166;
        handlerHEX60gensym613_1291859174.dfaInternal = buildDFA_2080374847(config_1291859166);
        handlerHEX60gensym613_1291859174.handleAction = HEX3Aanonymous_1291859186;
        handlerHEX60gensym613_1291859174.handleInput = HEX3Aanonymous_1291859194;
      };
      self_1291859164.modeEventHandler = handlerHEX60gensym613_1291859174;
    }
    
    self_1291859164.currentMode = nimCopy(null, mode_1291859165, NTI33554449);
    } finally {
    requestRender_2499805290(self_1291859164.platform, false);
    }

  
}

function setModeJsWrapper22_1291859159(self_1291859225, mode_1291859226) {
    setMode_1291859163(self_1291859225, mode_1291859226);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291859159(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291859248(self_1291859249) {
  var result_1291859250 = [];

  BeforeRet: {
    result_1291859250 = nimCopy(null, self_1291859249.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291859250;

}

function modeJsWrapper22_1291859244(self_1291859278) {
  var result_1291859279 = [];

    result_1291859279 = nimCopy(null, mode_1291859248(self_1291859278), NTI33554449);

  return result_1291859279;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291859244(this));};

function getContextWithMode_1291859299(self_1291859300, context_1291859301) {
  var result_1291859302 = [];

  BeforeRet: {
    result_1291859302 = nimCopy(null, (context_1291859301 || []).concat([46] || [],self_1291859300.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291859302;

}

function getContextWithModeJsWrapper22_1291859295(self_1291859331, context_1291859332) {
  var result_1291859333 = [];

    result_1291859333 = nimCopy(null, getContextWithMode_1291859299(self_1291859331, context_1291859332), NTI33554449);

  return result_1291859333;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291859295(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291859584(action_1291859585, arg_1291859586) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848877(gEditor, action_1291859585, arg_1291859586);
  };

  
}

function scriptRunActionJsWrapper_1291859581(action_1291859595, arg_1291859596) {
    scriptRunAction_1291859584(action_1291859595, arg_1291859596);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291859581(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291859621(message_1291859622) {
    var fmtRes_1291859627 = [mnewString(0)];
    fmtRes_1291859627[0].push.apply(fmtRes_1291859627[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291859627, 0, message_1291859622, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291859627[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291859618(message_1291859632) {
    scriptLog_1291859621(message_1291859632);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291859618(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291859726 = 0;
      colontmp__1291859726 = (n_1795163066).length - 1;
      var res_1291859727 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859727 <= colontmp__1291859726)) break Label4;
            i_1795163130 = res_1291859727;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291859727 = addInt(res_1291859727, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2080375166(config_2080375167, keys_2080375168, action_2080375169) {
    HEX5BHEX5DHEX3D_1795162732(config_2080375167.commands, keys_2080375168, action_2080375169);
    config_2080375167.revision = addInt(config_2080375167.revision, 1);

  
}

function addCommandScript_1291859653(self_1291859654, context_1291859655, keys_1291859656, action_1291859657, arg_1291859658) {
    var Temporary1;

    if (((arg_1291859658).length == 0)) {
    Temporary1 = action_1291859657;
    }
    else {
    Temporary1 = (action_1291859657 || []).concat([32] || [],arg_1291859658 || []);
    }
    
    var command_1291859659 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2080375166(getEventHandlerConfig_1291849169(self_1291859654, context_1291859655), keys_1291859656, command_1291859659);

  
}

function addCommandScriptJsWrapper_1291859649(self_1291859690, context_1291859691, keys_1291859692, action_1291859693, arg_1291859694) {
    addCommandScript_1291859653(self_1291859690, context_1291859691, keys_1291859692, action_1291859693, arg_1291859694);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291859649(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2080375263(t_2080375266, key_2080375267) {
    var hc_2080375268 = [0];
    var i_2080375275 = rawGet_1795162457(t_2080375266, key_2080375267, hc_2080375268, 0);
    var mskHEX60gensym36_2080375279 = (t_2080375266.data).length - 1;
    if ((0 <= i_2080375275)) {
    t_2080375266.counter = subInt(t_2080375266.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2080375286 = i_2080375275;
            var rHEX60gensym36_2080375287 = jHEX60gensym36_2080375286;
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0 = 0;
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2080375275 = (addInt(i_2080375275, 1) & mskHEX60gensym36_2080375279);
                  if (isEmpty_1308622877(t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2080375287 = (t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)].Field0 & mskHEX60gensym36_2080375279);
                  if (!(((((rHEX60gensym36_2080375287 <= i_2080375275) && (jHEX60gensym36_2080375286 < rHEX60gensym36_2080375287)) || ((jHEX60gensym36_2080375286 < rHEX60gensym36_2080375287) && (i_2080375275 < jHEX60gensym36_2080375286))) || ((i_2080375275 < jHEX60gensym36_2080375286) && (rHEX60gensym36_2080375287 <= i_2080375275))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2080375266.data[chckIndx(jHEX60gensym36_2080375286, 0, (t_2080375266.data).length - 1)] = nimCopy(t_2080375266.data[chckIndx(jHEX60gensym36_2080375286, 0, (t_2080375266.data).length - 1)], t_2080375266.data[chckIndx(i_2080375275, 0, (t_2080375266.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2080375220(config_2080375221, keys_2080375222) {
    del_2080375263(config_2080375221.commands, keys_2080375222);
    config_2080375221.revision = addInt(config_2080375221.revision, 1);

  
}

function removeCommand_1291859736(self_1291859737, context_1291859738, keys_1291859739) {
    removeCommand_2080375220(getEventHandlerConfig_1291849169(self_1291859737, context_1291859738), keys_1291859739);

  
}

function removeCommandJsWrapper_1291859732(self_1291859768, context_1291859769, keys_1291859770) {
    removeCommand_1291859736(self_1291859768, context_1291859769, keys_1291859770);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291859732(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291859797() {
  var result_1291859798 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859798 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291859798 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291859798 = -1;
    break BeforeRet;
  };

  return result_1291859798;

}

function getActivePopupJsWrapper_1291859794() {
  var result_1291859815 = 0;

    result_1291859815 = getActivePopup_1291859797();

  return result_1291859815;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291859794());};

function getActiveEditor_1291859834() {
  var result_1291859835 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859835 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859835 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859835 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291859835 = -1;
    break BeforeRet;
  };

  return result_1291859835;

}

function getActiveEditorJsWrapper_1291859831() {
  var result_1291859846 = 0;

    result_1291859846 = getActiveEditor_1291859834();

  return result_1291859846;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291859831());};

function getActiveEditor2_1291859865(self_1291859866) {
  var result_1291859867 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859867 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291859867 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291859867 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291859867 = null;
    break BeforeRet;
  };

  return result_1291859867;

}

function getActiveEditor2JsWrapper_1291859862(self_1291859901) {
  var result_1291859902 = null;

    result_1291859902 = getActiveEditor2_1291859865(self_1291859901);

  return result_1291859902;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291859862(this));};

function loadCurrentConfig_1291859909(self_1291859910) {
    createView_1291848965(self_1291859910, newTextDocument_2801801429([99,111,110,102,105,103,46,106,115], loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115]), true));

  
}

function loadCurrentConfigJsWrapper_1291859905(self_1291859942) {
    loadCurrentConfig_1291859909(self_1291859942);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291859905(this));};

function sourceCurrentDocument_1291859958(self_1291859959) {
    var editor_1291859964 = getActiveEditor2_1291859865(self_1291859959);
    if (isObj(editor_1291859964.m_type, NTI2801795294)) {
    var document_1291859971 = editor_1291859964.document;
    var contentStrict_1291859972 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2801796770(document_1291859971) || []);
    rawEcho(contentStrict_1291859972);
      var fmtRes_1291859977 = [mnewString(0)];
      fmtRes_1291859977[0].push.apply(fmtRes_1291859977[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291859977, 0, document_1291859971.filename, []);
      fmtRes_1291859977[0].push.apply(fmtRes_1291859977[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291859977[0]))) {
    eval(toJSStr(contentStrict_1291859972));
    }
    else {
      var fmtRes_1291859982 = mnewString(0);
      fmtRes_1291859982.push.apply(fmtRes_1291859982, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291859982, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291859954(self_1291860009) {
    sourceCurrentDocument_1291859958(self_1291860009);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291859954(this));};

function getEditor_1291860024(index_1291860025) {
  var result_1291860026 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860026 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291860025) && (index_1291860025 < (gEditor.views).length))) {
    result_1291860026 = gEditor.views[chckIndx(index_1291860025, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291860026 = -1;
    break BeforeRet;
  };

  return result_1291860026;

}

function getEditorJsWrapper_1291860021(index_1291860038) {
  var result_1291860039 = 0;

    result_1291860039 = getEditor_1291860024(index_1291860038);

  return result_1291860039;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291860021(index_));};

function rawGet_1291845907(t_1291845910, key_1291845911, hc_1291845912, hc_1291845912_Idx) {
  var result_1291845913 = 0;

  BeforeRet: {
    hc_1291845912[hc_1291845912_Idx] = hash_1325400236(key_1291845911);
    if ((hc_1291845912[hc_1291845912_Idx] == 0)) {
    hc_1291845912[hc_1291845912_Idx] = 314159265;
    }
    
    if (((t_1291845910.data).length == 0)) {
    result_1291845913 = -1;
    break BeforeRet;
    }
    
    var h_1291845967 = (hc_1291845912[hc_1291845912_Idx] & (t_1291845910.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845910.data[chckIndx(h_1291845967, 0, (t_1291845910.data).length - 1)].Field0)) break Label2;
          if (((t_1291845910.data[chckIndx(h_1291845967, 0, (t_1291845910.data).length - 1)].Field0 == hc_1291845912[hc_1291845912_Idx]) && (t_1291845910.data[chckIndx(h_1291845967, 0, (t_1291845910.data).length - 1)].Field1 == key_1291845911))) {
          result_1291845913 = h_1291845967;
          break BeforeRet;
          }
          
          h_1291845967 = nextTry_1308622883(h_1291845967, (t_1291845910.data).length - 1);
        }
    };
    result_1291845913 = subInt(-1, h_1291845967);
  };

  return result_1291845913;

}

function hasKey_1291850724(t_1291850727, key_1291850728) {
  var result_1291850729 = false;

    var hc_1291850730 = [0];
    result_1291850729 = (0 <= rawGet_1291845907(t_1291850727, key_1291850728, hc_1291850730, 0));

  return result_1291850729;

}

function contains_1291850718(t_1291850721, key_1291850722) {
  var result_1291850723 = false;

  BeforeRet: {
    result_1291850723 = hasKey_1291850724(t_1291850721, key_1291850722);
    break BeforeRet;
  };

  return result_1291850723;

}

function some_1291850870(val_1291850872) {
  var result_1291850873 = ({val: null});

    if (!(!((val_1291850872 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850873.val = val_1291850872;

  return result_1291850873;

}

function HEX5BHEX5D_1291850790(t_1291850793, key_1291850794) {
  var result_1291850795 = null;
  var result_1291850795_Idx = 0;

    var hcHEX60gensym22_1291850796 = [0];
    var indexHEX60gensym22_1291850803 = rawGet_1291845907(t_1291850793, key_1291850794, hcHEX60gensym22_1291850796, 0);
    if ((0 <= indexHEX60gensym22_1291850803)) {
    result_1291850795 = t_1291850793.data[chckIndx(indexHEX60gensym22_1291850803, 0, (t_1291850793.data).length - 1)]; result_1291850795_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_1291850794);
    }
    

  return [result_1291850795, result_1291850795_Idx];

}

function none_1291850886() {
  var result_1291850892 = ({val: null});

  return result_1291850892;

}

function getEditorForId_1291850668(self_1291850669, id_1291850670) {
    var Temporary1;

  var result_1291850675 = ({val: null});

  BeforeRet: {
    if (contains_1291850718(self_1291850669.editors, id_1291850670)) {
    result_1291850675 = nimCopy(result_1291850675, some_1291850870((Temporary1 = HEX5BHEX5D_1291850790(self_1291850669.editors, id_1291850670), Temporary1)[0][Temporary1[1]]), NTI1291848327);
    break BeforeRet;
    }
    
    if ((self_1291850669.commandLineTextEditor.id == id_1291850670)) {
    result_1291850675 = nimCopy(result_1291850675, some_1291850870(self_1291850669.commandLineTextEditor), NTI1291848327);
    break BeforeRet;
    }
    
    result_1291850675 = nimCopy(result_1291850675, none_1291850886(), NTI1291848327);
    break BeforeRet;
  };

  return result_1291850675;

}

function isSome_2801806039(self_2801806041) {
  var result_2801806042 = false;

    result_2801806042 = !((self_2801806041.val == null));

  return result_2801806042;

}

function isNone_2801806067(self_2801806069) {
  var result_2801806070 = false;

    result_2801806070 = (self_2801806069.val == null);

  return result_2801806070;

}

function get_2801806059(self_2801806061) {
  var result_2801806062 = null;

    if (isNone_2801806067(self_2801806061)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801806062 = self_2801806061["val"];

  return result_2801806062;

}

function scriptIsTextEditor_1291860063(editorId_1291860064) {
      var Temporary1;

  var result_1291860065 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860065 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym740_1291860071 = getEditorForId_1291850668(gEditor, editorId_1291860064);
      if (!isSome_2801806039(oHEX60gensym740_1291860071)) Temporary1 = false; else {        var editor_1291860094 = get_2801806059(oHEX60gensym740_1291860071);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860065 = isObj(editor_1291860094.m_type, NTI2801795294);
    break BeforeRet;
    }
    
    result_1291860065 = false;
    break BeforeRet;
  };

  return result_1291860065;

}

function scriptIsTextEditorJsWrapper_1291860060(editorId_1291860106) {
  var result_1291860107 = false;

    result_1291860107 = scriptIsTextEditor_1291860063(editorId_1291860106);

  return result_1291860107;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291860060(editorId_));};

function scriptIsAstEditor_1291860132(editorId_1291860133) {
      var Temporary1;

  var result_1291860134 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860134 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym749_1291860140 = getEditorForId_1291850668(gEditor, editorId_1291860133);
      if (!isSome_2801806039(oHEX60gensym749_1291860140)) Temporary1 = false; else {        var editor_1291860163 = get_2801806059(oHEX60gensym749_1291860140);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291860134 = isObj(editor_1291860163.m_type, NTI2936014311);
    break BeforeRet;
    }
    
    result_1291860134 = false;
    break BeforeRet;
  };

  return result_1291860134;

}

function scriptIsAstEditorJsWrapper_1291860129(editorId_1291860175) {
  var result_1291860176 = false;

    result_1291860176 = scriptIsAstEditor_1291860132(editorId_1291860175);

  return result_1291860176;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291860129(editorId_));};

function scriptRunActionFor_1291860200(editorId_1291860201, action_1291860202, arg_1291860203) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym759_1291860209 = getEditorForId_1291850668(gEditor, editorId_1291860201);
      if (!isSome_2801806039(oHEX60gensym759_1291860209)) Temporary2 = false; else {        var editor_1291860232 = get_2801806059(oHEX60gensym759_1291860209);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860232.eventHandler.handleAction(action_1291860202, arg_1291860203);
    }
    else {
      var oHEX60gensym760_1291860235 = getPopupForId_1291850902(gEditor, editorId_1291860201);
      if (!isSome_3204448549(oHEX60gensym760_1291860235)) Temporary3 = false; else {        var popup_1291860258 = get_3204448569(oHEX60gensym760_1291860235);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291860258.eventHandler.handleAction(action_1291860202, arg_1291860203);
    }
    }
    } finally {
    requestRender_2499805290(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291860197(editorId_1291860269, action_1291860270, arg_1291860271) {
    scriptRunActionFor_1291860200(editorId_1291860269, action_1291860270, arg_1291860271);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291860197(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291860301(editorId_1291860302, text_1291860303) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym769_1291860309 = getEditorForId_1291850668(gEditor, editorId_1291860302);
      if (!isSome_2801806039(oHEX60gensym769_1291860309)) Temporary2 = false; else {        var editor_1291860332 = get_2801806059(oHEX60gensym769_1291860309);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291860332.eventHandler.handleInput(text_1291860303);
    }
    
    } finally {
    requestRender_2499805290(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291860298(editorId_1291860340, text_1291860341) {
    scriptInsertTextInto_1291860301(editorId_1291860340, text_1291860341);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291860298(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291860366(editorId_1291860367) {
      var Temporary2;

  var result_1291860368 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291860430 = {Field0: 0, Field1: 0};
    var colontmp__1291860431 = {Field0: 0, Field1: 0};
    result_1291860368 = nimCopy(result_1291860368, {Field0: nimCopy(null, colontmp__1291860430, NTI2415919113), Field1: nimCopy(null, colontmp__1291860431, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym778_1291860374 = getEditorForId_1291850668(gEditor, editorId_1291860367);
      if (!isSome_2801806039(oHEX60gensym778_1291860374)) Temporary2 = false; else {        var editor_1291860397 = get_2801806059(oHEX60gensym778_1291860374);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860397.m_type, NTI2801795294)) {
    var editor_1291860404 = editor_1291860397;
    result_1291860368 = nimCopy(result_1291860368, selection_2801795577(editor_1291860404), NTI2415919115);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291860432 = {Field0: 0, Field1: 0};
    var colontmp__1291860433 = {Field0: 0, Field1: 0};
    result_1291860368 = nimCopy(result_1291860368, {Field0: nimCopy(null, colontmp__1291860432, NTI2415919113), Field1: nimCopy(null, colontmp__1291860433, NTI2415919113)}, NTI2415919115);
    break BeforeRet;
    } finally {
    requestRender_2499805290(gEditor.platform, false);
    }
  };

  return result_1291860368;

}

function scriptTextEditorSelectionJsWrapper_1291860363(editorId_1291860410) {
  var result_1291860411 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860411 = nimCopy(result_1291860411, scriptTextEditorSelection_1291860366(editorId_1291860410), NTI2415919115);

  return result_1291860411;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291860363(editorId_));};

function scriptSetTextEditorSelection_1291860439(editorId_1291860440, selection_1291860441) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym787_1291860447 = getEditorForId_1291850668(gEditor, editorId_1291860440);
      if (!isSome_2801806039(oHEX60gensym787_1291860447)) Temporary2 = false; else {        var editor_1291860470 = get_2801806059(oHEX60gensym787_1291860447);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860470.m_type, NTI2801795294)) {
    selectionHEX3D_2801795583(editor_1291860470, selection_1291860441);
    }
    
    }
    
    } finally {
    requestRender_2499805290(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291860436(editorId_1291860482, selection_1291860483) {
    scriptSetTextEditorSelection_1291860439(editorId_1291860482, selection_1291860483);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291860436(editorId_, selection_));};

function scriptTextEditorSelections_1291860508(editorId_1291860509) {
      var Temporary1;

  var result_1291860510 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860510 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856009);
    break BeforeRet;
    }
    
      var oHEX60gensym796_1291860520 = getEditorForId_1291850668(gEditor, editorId_1291860509);
      if (!isSome_2801806039(oHEX60gensym796_1291860520)) Temporary1 = false; else {        var editor_1291860543 = get_2801806059(oHEX60gensym796_1291860520);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860543.m_type, NTI2801795294)) {
    var editor_1291860550 = editor_1291860543;
    result_1291860510 = nimCopy(null, selections_2801795574(editor_1291860550), NTI2415919123);
    break BeforeRet;
    }
    
    }
    
    result_1291860510 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291856009);
    break BeforeRet;
  };

  return result_1291860510;

}

function scriptTextEditorSelectionsJsWrapper_1291860505(editorId_1291860560) {
  var result_1291860561 = [];

    result_1291860561 = nimCopy(null, scriptTextEditorSelections_1291860508(editorId_1291860560), NTI1291855996);

  return result_1291860561;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291860505(editorId_));};

function scriptSetTextEditorSelections_1291860585(editorId_1291860586, selections_1291860587) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym805_1291860593 = getEditorForId_1291850668(gEditor, editorId_1291860586);
      if (!isSome_2801806039(oHEX60gensym805_1291860593)) Temporary2 = false; else {        var editor_1291860616 = get_2801806059(oHEX60gensym805_1291860593);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291860616.m_type, NTI2801795294)) {
    selectionsHEX3D_2801795833(editor_1291860616, selections_1291860587);
    }
    
    }
    
    } finally {
    requestRender_2499805290(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291860582(editorId_1291860628, selections_1291860629) {
    scriptSetTextEditorSelections_1291860585(editorId_1291860628, selections_1291860629);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291860582(editorId_, selections_));};

function scriptGetTextEditorLine_1291860654(editorId_1291860655, line_1291860656) {
      var Temporary1;
    var Temporary2;

  var result_1291860657 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860657 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym815_1291860663 = getEditorForId_1291850668(gEditor, editorId_1291860655);
      if (!isSome_2801806039(oHEX60gensym815_1291860663)) Temporary1 = false; else {        var editor_1291860686 = get_2801806059(oHEX60gensym815_1291860663);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860686.m_type, NTI2801795294)) {
    var editor_1291860693 = editor_1291860686;
    if (((0 <= line_1291860656) && (line_1291860656 < (content_2801796767(editor_1291860693.document)).length))) {
    result_1291860657 = nimCopy(null, (Temporary2 = content_2801796767(editor_1291860693.document), Temporary2)[chckIndx(line_1291860656, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291860657 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291860657;

}

function scriptGetTextEditorLineJsWrapper_1291860651(editorId_1291860703, line_1291860704) {
  var result_1291860705 = [];

    result_1291860705 = nimCopy(null, scriptGetTextEditorLine_1291860654(editorId_1291860703, line_1291860704), NTI33554449);

  return result_1291860705;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291860651(editorId_, line_));};

function scriptGetTextEditorLineCount_1291860734(editorId_1291860735) {
      var Temporary1;

  var result_1291860736 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291860736 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym825_1291860742 = getEditorForId_1291850668(gEditor, editorId_1291860735);
      if (!isSome_2801806039(oHEX60gensym825_1291860742)) Temporary1 = false; else {        var editor_1291860765 = get_2801806059(oHEX60gensym825_1291860742);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291860765.m_type, NTI2801795294)) {
    var editor_1291860772 = editor_1291860765;
    result_1291860736 = (content_2801796767(editor_1291860772.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291860736 = 0;
    break BeforeRet;
  };

  return result_1291860736;

}

function scriptGetTextEditorLineCountJsWrapper_1291860731(editorId_1291860781) {
  var result_1291860782 = 0;

    result_1291860782 = scriptGetTextEditorLineCount_1291860734(editorId_1291860781);

  return result_1291860782;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291860731(editorId_));};

function scriptGetOptionInt_1291860817(path_1291860818, default_1291860819) {
  var result_1291860820 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860820 = default_1291860819;
      break BeforeRet;
      }
      
      var nodeHEX60gensym835_1291860825 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860818, [46], -1));
      if ((nodeHEX60gensym835_1291860825 == null)) {
      result_1291860820 = default_1291860819;
      break BeforeRet;
      }
      
    };
    result_1291860820 = getInt_1627390118(nodeHEX60gensym835_1291860825, default_1291860819);
  };

  return result_1291860820;

}

function scriptGetOptionIntJsWrapper_1291860814(path_1291860835, default_1291860836) {
  var result_1291860837 = 0;

    result_1291860837 = scriptGetOptionInt_1291860817(path_1291860835, default_1291860836);

  return result_1291860837;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291860814(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291860867(path_1291860868, default_1291860869) {
  var result_1291860870 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860870 = default_1291860869;
      break BeforeRet;
      }
      
      var nodeHEX60gensym845_1291860875 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860868, [46], -1));
      if ((nodeHEX60gensym845_1291860875 == null)) {
      result_1291860870 = default_1291860869;
      break BeforeRet;
      }
      
    };
    result_1291860870 = getFloat_1627390140(nodeHEX60gensym845_1291860875, default_1291860869);
  };

  return result_1291860870;

}

function scriptGetOptionFloatJsWrapper_1291860864(path_1291860885, default_1291860886) {
  var result_1291860887 = 0.0;

    result_1291860887 = scriptGetOptionFloat_1291860867(path_1291860885, default_1291860886);

  return result_1291860887;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291860864(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291860975(path_1291860976, default_1291860977) {
  var result_1291860978 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291860978 = default_1291860977;
      break BeforeRet;
      }
      
      var nodeHEX60gensym861_1291860983 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291860976, [46], -1));
      if ((nodeHEX60gensym861_1291860983 == null)) {
      result_1291860978 = default_1291860977;
      break BeforeRet;
      }
      
    };
    result_1291860978 = getBool_1627390147(nodeHEX60gensym861_1291860983, default_1291860977);
  };

  return result_1291860978;

}

function scriptGetOptionBoolJsWrapper_1291860972(path_1291860993, default_1291860994) {
  var result_1291860995 = false;

    result_1291860995 = scriptGetOptionBool_1291860975(path_1291860993, default_1291860994);

  return result_1291860995;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291860972(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291861025(path_1291861026, default_1291861027) {
  var result_1291861028 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291861028 = nimCopy(null, default_1291861027, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym871_1291861033 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291861026, [46], -1));
      if ((nodeHEX60gensym871_1291861033 == null)) {
      result_1291861028 = nimCopy(null, default_1291861027, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291861028 = nimCopy(null, getStr_1627390106(nodeHEX60gensym871_1291861033, default_1291861027), NTI33554449);
  };

  return result_1291861028;

}

function scriptGetOptionStringJsWrapper_1291861022(path_1291861043, default_1291861044) {
  var result_1291861045 = [];

    result_1291861045 = nimCopy(null, scriptGetOptionString_1291861025(path_1291861043, default_1291861044), NTI33554449);

  return result_1291861045;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291861022(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291861075(path_1291861076, value_1291861077) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym880_1291861084 = nsuSplitString(path_1291861076, [46], -1);
      var nodeHEX60gensym880_1291861085 = gEditor.options;
      Label3: {
        var keyHEX60gensym880_1291861104 = [];
        var colontmp__1291861148 = [];
        colontmp__1291861148 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym880_1291861084, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861149 = 0;
        var L_1291861150 = (colontmp__1291861148).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861149 < L_1291861150)) break Label5;
              keyHEX60gensym880_1291861104 = colontmp__1291861148[chckIndx(i_1291861149, 0, (colontmp__1291861148).length - 1)];
              if (!((nodeHEX60gensym880_1291861085.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym880_1291861085, keyHEX60gensym880_1291861104))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291861085, keyHEX60gensym880_1291861104, newJObject_1627390051());
              }
              
              nodeHEX60gensym880_1291861085 = HEX5BHEX5D_1627393037(nodeHEX60gensym880_1291861085, keyHEX60gensym880_1291861104);
              i_1291861149 = addInt(i_1291861149, 1);
              if (!(((colontmp__1291861148).length == L_1291861150))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym880_1291861085 == null) || !((nodeHEX60gensym880_1291861085.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291861085, HEX5BHEX5D_2717909760(pathItemsHEX60gensym880_1291861084, 1), newJInt_1627390040(value_1291861077));
      } finally {
      requestRender_2499805290(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291861072(path_1291861125, value_1291861126) {
    scriptSetOptionInt_1291861075(path_1291861125, value_1291861126);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291861072(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291861157(path_1291861158, value_1291861159) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym894_1291861166 = nsuSplitString(path_1291861158, [46], -1);
      var nodeHEX60gensym894_1291861167 = gEditor.options;
      Label3: {
        var keyHEX60gensym894_1291861186 = [];
        var colontmp__1291861230 = [];
        colontmp__1291861230 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym894_1291861166, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861231 = 0;
        var L_1291861232 = (colontmp__1291861230).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861231 < L_1291861232)) break Label5;
              keyHEX60gensym894_1291861186 = colontmp__1291861230[chckIndx(i_1291861231, 0, (colontmp__1291861230).length - 1)];
              if (!((nodeHEX60gensym894_1291861167.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym894_1291861167, keyHEX60gensym894_1291861186))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym894_1291861167, keyHEX60gensym894_1291861186, newJObject_1627390051());
              }
              
              nodeHEX60gensym894_1291861167 = HEX5BHEX5D_1627393037(nodeHEX60gensym894_1291861167, keyHEX60gensym894_1291861186);
              i_1291861231 = addInt(i_1291861231, 1);
              if (!(((colontmp__1291861230).length == L_1291861232))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym894_1291861167 == null) || !((nodeHEX60gensym894_1291861167.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym894_1291861167, HEX5BHEX5D_2717909760(pathItemsHEX60gensym894_1291861166, 1), newJFloat_1627390043(value_1291861159));
      } finally {
      requestRender_2499805290(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291861154(path_1291861207, value_1291861208) {
    scriptSetOptionFloat_1291861157(path_1291861207, value_1291861208);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291861154(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291861239(path_1291861240, value_1291861241) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym908_1291861248 = nsuSplitString(path_1291861240, [46], -1);
      var nodeHEX60gensym908_1291861249 = gEditor.options;
      Label3: {
        var keyHEX60gensym908_1291861268 = [];
        var colontmp__1291861312 = [];
        colontmp__1291861312 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym908_1291861248, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861313 = 0;
        var L_1291861314 = (colontmp__1291861312).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861313 < L_1291861314)) break Label5;
              keyHEX60gensym908_1291861268 = colontmp__1291861312[chckIndx(i_1291861313, 0, (colontmp__1291861312).length - 1)];
              if (!((nodeHEX60gensym908_1291861249.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym908_1291861249, keyHEX60gensym908_1291861268))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym908_1291861249, keyHEX60gensym908_1291861268, newJObject_1627390051());
              }
              
              nodeHEX60gensym908_1291861249 = HEX5BHEX5D_1627393037(nodeHEX60gensym908_1291861249, keyHEX60gensym908_1291861268);
              i_1291861313 = addInt(i_1291861313, 1);
              if (!(((colontmp__1291861312).length == L_1291861314))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym908_1291861249 == null) || !((nodeHEX60gensym908_1291861249.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym908_1291861249, HEX5BHEX5D_2717909760(pathItemsHEX60gensym908_1291861248, 1), newJBool_1627390046(value_1291861241));
      } finally {
      requestRender_2499805290(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291861236(path_1291861289, value_1291861290) {
    scriptSetOptionBool_1291861239(path_1291861289, value_1291861290);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291861236(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291861321(path_1291861322, value_1291861323) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym922_1291861330 = nsuSplitString(path_1291861322, [46], -1);
      var nodeHEX60gensym922_1291861331 = gEditor.options;
      Label3: {
        var keyHEX60gensym922_1291861350 = [];
        var colontmp__1291861394 = [];
        colontmp__1291861394 = HEX5BHEX5D_2801811528(pathItemsHEX60gensym922_1291861330, HEX2EHEX2E_1040187488(0, 2));
        var i_1291861395 = 0;
        var L_1291861396 = (colontmp__1291861394).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291861395 < L_1291861396)) break Label5;
              keyHEX60gensym922_1291861350 = colontmp__1291861394[chckIndx(i_1291861395, 0, (colontmp__1291861394).length - 1)];
              if (!((nodeHEX60gensym922_1291861331.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym922_1291861331, keyHEX60gensym922_1291861350))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym922_1291861331, keyHEX60gensym922_1291861350, newJObject_1627390051());
              }
              
              nodeHEX60gensym922_1291861331 = HEX5BHEX5D_1627393037(nodeHEX60gensym922_1291861331, keyHEX60gensym922_1291861350);
              i_1291861395 = addInt(i_1291861395, 1);
              if (!(((colontmp__1291861394).length == L_1291861396))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym922_1291861331 == null) || !((nodeHEX60gensym922_1291861331.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym922_1291861331, HEX5BHEX5D_2717909760(pathItemsHEX60gensym922_1291861330, 1), newJString_1627389994(value_1291861323));
      } finally {
      requestRender_2499805290(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291861318(path_1291861371, value_1291861372) {
    scriptSetOptionString_1291861321(path_1291861371, value_1291861372);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291861318(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847821(t_1291847824, key_1291847825, hc_1291847826, hc_1291847826_Idx) {
  var result_1291847827 = 0;

  BeforeRet: {
    hc_1291847826[hc_1291847826_Idx] = hash_1325400491(key_1291847825);
    if ((hc_1291847826[hc_1291847826_Idx] == 0)) {
    hc_1291847826[hc_1291847826_Idx] = 314159265;
    }
    
    if (((t_1291847824.data).length == 0)) {
    result_1291847827 = -1;
    break BeforeRet;
    }
    
    var h_1291847879 = (hc_1291847826[hc_1291847826_Idx] & (t_1291847824.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847824.data[chckIndx(h_1291847879, 0, (t_1291847824.data).length - 1)].Field0)) break Label2;
          if (((t_1291847824.data[chckIndx(h_1291847879, 0, (t_1291847824.data).length - 1)].Field0 == hc_1291847826[hc_1291847826_Idx]) && eqStrings(t_1291847824.data[chckIndx(h_1291847879, 0, (t_1291847824.data).length - 1)].Field1, key_1291847825))) {
          result_1291847827 = h_1291847879;
          break BeforeRet;
          }
          
          h_1291847879 = nextTry_1308622883(h_1291847879, (t_1291847824.data).length - 1);
        }
    };
    result_1291847827 = subInt(-1, h_1291847879);
  };

  return result_1291847827;

}

function mustRehash_3003140405(t_3003140407) {
  var result_3003140408 = false;

    if (!((t_3003140407.counter < (t_3003140407.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003140408 = ((mulInt((t_3003140407.data).length, 2) < mulInt(t_3003140407.counter, 3)) || (subInt((t_3003140407.data).length, t_3003140407.counter) < 4));

  return result_3003140408;

}

function rawInsert_3003141098(t_3003141102, data_3003141103, data_3003141103_Idx, key_3003141104, val_3003141105, hc_3003141106, h_3003141107) {
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field1 = nimCopy(null, key_3003141104, NTI33554449);
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field2 = val_3003141105;
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field0 = hc_3003141106;

  
}

function enlarge_3003140662(t_3003140665) {
    var n_3003140668 = [];
    n_3003140668 = new Array(chckRange(mulInt((t_3003140665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003140665.data).length, 2), 0, 2147483647) ; ++i) { n_3003140668[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3003140665.data; t_3003140665.data = n_3003140668; n_3003140668 = Temporary1;    Label2: {
      var i_3003140766 = 0;
      var colontmp__1291861483 = 0;
      colontmp__1291861483 = (n_3003140668).length - 1;
      var res_1291861484 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291861484 <= colontmp__1291861483)) break Label4;
            i_3003140766 = res_1291861484;
            var eh_3003140847 = n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003140847)) {
            var j_3003140851 = (eh_3003140847 & (t_3003140665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003140665.data[chckIndx(j_3003140851, 0, (t_3003140665.data).length - 1)].Field0)) break Label6;
                  j_3003140851 = nextTry_1308622883(j_3003140851, (t_3003140665.data).length - 1);
                }
            };
            rawInsert_3003141098(t_3003140665, t_3003140665, "data", n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field1, n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field2, eh_3003140847, j_3003140851);
            }
            
            res_1291861484 = addInt(res_1291861484, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003141348(t_3003141351, key_3003141352, hc_3003141353) {
  var result_3003141354 = 0;

  BeforeRet: {
    if (((t_3003141351.data).length == 0)) {
    result_3003141354 = -1;
    break BeforeRet;
    }
    
    var h_3003141439 = (hc_3003141353 & (t_3003141351.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field0)) break Label2;
          if (((t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field0 == hc_3003141353) && eqStrings(t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field1, key_3003141352))) {
          result_3003141354 = h_3003141439;
          break BeforeRet;
          }
          
          h_3003141439 = nextTry_1308622883(h_3003141439, (t_3003141351.data).length - 1);
        }
    };
    result_3003141354 = subInt(-1, h_3003141439);
  };

  return result_3003141354;

}

function HEX5BHEX5DHEX3D_3003140137(t_3003140140, key_3003140141, val_3003140142) {
    if (((t_3003140140.data).length == 0)) {
    var correctSizeHEX60gensym115_3003140225 = slotsNeeded_1308622891(32);
    t_3003140140.counter = 0;
    t_3003140140.data = new Array(chckRange(correctSizeHEX60gensym115_3003140225, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_3003140225, 0, 2147483647) ; ++i) { t_3003140140.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3003140230 = [0];
    var index_3003140237 = rawGet_1291847821(t_3003140140, key_3003140141, hc_3003140230, 0);
    if ((0 <= index_3003140237)) {
    t_3003140140.data[chckIndx(index_3003140237, 0, (t_3003140140.data).length - 1)].Field2 = val_3003140142;
    }
    else {
      if (((t_3003140140.data).length == 0)) {
      var correctSizeHEX60gensym118_3003140400 = slotsNeeded_1308622891(32);
      t_3003140140.counter = 0;
      t_3003140140.data = new Array(chckRange(correctSizeHEX60gensym118_3003140400, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_3003140400, 0, 2147483647) ; ++i) { t_3003140140.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3003140405(t_3003140140)) {
      enlarge_3003140662(t_3003140140);
      index_3003140237 = rawGetKnownHC_3003141348(t_3003140140, key_3003140141, hc_3003140230[0]);
      }
      
      index_3003140237 = subInt(-1, index_3003140237);
      rawInsert_3003141098(t_3003140140, t_3003140140, "data", key_3003140141, val_3003140142, hc_3003140230[0], index_3003140237);
      t_3003140140.counter = addInt(t_3003140140.counter, 1);
    }
    

  
}

function scriptSetCallback_1291861403(path_1291861404, id_1291861405) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3003140137(gEditor.callbacks, path_1291861404, id_1291861405);
  };

  
}

function scriptSetCallbackJsWrapper_1291861400(path_1291861460, id_1291861461) {
    scriptSetCallback_1291861403(path_1291861460, id_1291861461);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291861400(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3238002731(initialSize_3238002734) {
  var result_3238002740 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3238002742 = slotsNeeded_1308622891(chckRange(initialSize_3238002734, 0, 2147483647));
    result_3238002740.counter = 0;
    result_3238002740.data = new Array(chckRange(correctSizeHEX60gensym0_3238002742, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3238002742, 0, 2147483647) ; ++i) { result_3238002740.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3238002740;

}
var commandLineWidget_3238002727 = [null];
var mainStack_3238002728 = [null];
var viewPanel_3238002729 = [null];
var mainPanel_3238002730 = [null];
var widgetsPerEditor_3238002756 = [initTable_3238002731(32)];

function new_536870928() {
  var result_536870931 = null;

  BeforeRet: {
    var r_536870933 = null;
    r_536870933 = ({m_type: NTI3305111563, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870931 = r_536870933;
    break BeforeRet;
  };

  return result_536870931;

}

function subscribe_1291851165(event_1291851167, callback_1291851169) {
  var result_1291851170 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851170 = nimCopy(result_1291851170, newId_2046820569(), NTI2046820355);
    event_1291851167.handlers.push({Field0: nimCopy(null, result_1291851170, NTI2046820355), Field1: callback_1291851169});;

  return result_1291851170;

}

function anyInProgress_2080376305(handlers_2080376306) {
  var result_2080376307 = false;

  BeforeRet: {
    Label1: {
      var h_2080376321 = null;
      var i_536871015 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871015 < (handlers_2080376306).length)) break Label3;
            h_2080376321 = handlers_2080376306[chckIndx(i_536871015, 0, (handlers_2080376306).length - 1)];
            if (!((h_2080376321.state.current == 0))) {
            result_2080376307 = true;
            break BeforeRet;
            }
            
            i_536871015 = addInt(i_536871015, 1);
          }
      };
    };
    result_2080376307 = false;
    break BeforeRet;
  };

  return result_2080376307;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2080375135(handler_2080375136) {
  var result_2080375137 = null;

  BeforeRet: {
    if ((handler_2080375136.revision < handler_2080375136.config.revision)) {
    handler_2080375136.dfaInternal = buildDFA_2080374847(handler_2080375136.config);
    handler_2080375136.revision = handler_2080375136.config.revision;
    }
    
    result_2080375137 = handler_2080375136.dfaInternal;
    break BeforeRet;
  };

  return result_2080375137;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet283)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet284))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet285)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2080376271(handler_2080376272, handler_2080376272_Idx, input_2080376273, modifiers_2080376274, handleUnknownAsInput_2080376275) {
  var result_2080376276 = 0;

  BeforeRet: {
    if (!((input_2080376273 == 0))) {
    var prevState_2080376277 = nimCopy(null, handler_2080376272[handler_2080376272_Idx].state, NTI2013265955);
    handler_2080376272[handler_2080376272_Idx].state = nimCopy(handler_2080376272[handler_2080376272_Idx].state, step_2013266020(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state, input_2080376273, modifiers_2080376274), NTI2013265955);
    if ((handler_2080376272[handler_2080376272_Idx].state.current == 0)) {
    if ((prevState_2080376277.current == 0)) {
    if ((((handleUnknownAsInput_2080376275 && (0 < input_2080376273)) && SetEq(SetPlus(modifiers_2080376274, ConstSet281), ConstSet282)) && !((handler_2080376272[handler_2080376272_Idx].handleInput == null)))) {
    result_2080376276 = handler_2080376272[handler_2080376272_Idx].handleInput(inputToString_2013267082(input_2080376273, ConstSet286));
    break BeforeRet;
    }
    
    result_2080376276 = 1;
    break BeforeRet;
    }
    else {
      result_2080376276 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current)) {
    var colontmp__536871017 = parseAction_2080376218(getAction_2013267075(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current));
    var action_2080376290 = nimCopy(null, colontmp__536871017["Field0"], NTI33554449);
    var arg_2080376291 = nimCopy(null, colontmp__536871017["Field1"], NTI33554449);
    handler_2080376272[handler_2080376272_Idx].state.current = getDefaultState_2013267071(dfa_2080375135(handler_2080376272[handler_2080376272_Idx]), handler_2080376272[handler_2080376272_Idx].state.current);
    result_2080376276 = handler_2080376272[handler_2080376272_Idx].handleAction(action_2080376290, arg_2080376291);
    break BeforeRet;
    }
    else {
      result_2080376276 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2080376276 = 0;
      break BeforeRet;
    }
    
  };

  return result_2080376276;

}

function reset_2080376211(handler_2080376212, handler_2080376212_Idx) {
    handler_2080376212[handler_2080376212_Idx].state = nimCopy(handler_2080376212[handler_2080376212_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2080376331(handlers_2080376332, input_2080376333, modifiers_2080376334) {
            var Temporary4;

    var anyInProgress_2080376335 = anyInProgress_2080376305(handlers_2080376332);
    var allowHandlingUnknownAsInput_2080376336 = true;
    Label1: {
      var i_2080376345 = 0;
      var colontmp__536871010 = 0;
      colontmp__536871010 = (handlers_2080376332).length;
      var i_536871011 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871011 < colontmp__536871010)) break Label3;
            i_2080376345 = i_536871011;
            var handlerIndex_2080376349 = subInt(subInt((handlers_2080376332).length, i_2080376345), 1);
            var handler_2080376350 = [handlers_2080376332[chckIndx(handlerIndex_2080376349, 0, (handlers_2080376332).length - 1)]];
            if (((anyInProgress_2080376335 && !((handler_2080376350[0].state.current == 0))) || (!(anyInProgress_2080376335) && (handler_2080376350[0].state.current == 0)))) {
            Temporary4 = handleEvent_2080376271(handler_2080376350, 0, input_2080376333, modifiers_2080376334, allowHandlingUnknownAsInput_2080376336);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2080376351 = Temporary4;
            switch (response_2080376351) {
            case 3:
              allowHandlingUnknownAsInput_2080376336 = false;
              Label5: {
                var k_2080376393 = 0;
                var h_2080376394 = null;
                var i_536871007 = 0;
                var L_536871008 = (handlers_2080376332).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871007 < L_536871008)) break Label7;
                      k_2080376393 = i_536871007;
                      h_2080376394 = handlers_2080376332[chckIndx(i_536871007, 0, (handlers_2080376332).length - 1)];
                      if (!((k_2080376393 == handlerIndex_2080376349))) {
                      var h_2080376395 = [h_2080376394];
                      reset_2080376211(h_2080376395, 0);
                      }
                      
                      i_536871007 = addInt(i_536871007, 1);
                      if (!(((handlers_2080376332).length == L_536871008))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2080376336 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2080376350[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871011 = addInt(i_536871011, 1);
          }
      };
    };

  
}

function add_2936020771(x_2936020773, x_2936020773_Idx, y_2936020774) {
    var Temporary1;

    var xl_2936020778 = (x_2936020773[x_2936020773_Idx]).length;
    if (x_2936020773[x_2936020773_Idx].length < (Temporary1 = chckRange(addInt(xl_2936020778, (y_2936020774).length), 0, 2147483647), Temporary1)) { for (var i = x_2936020773[x_2936020773_Idx].length ; i < Temporary1 ; ++i) x_2936020773[x_2936020773_Idx].push(null); }
               else { x_2936020773[x_2936020773_Idx].length = Temporary1; };
    Label2: {
      var i_2936020793 = 0;
      var colontmp__536871019 = 0;
      colontmp__536871019 = (y_2936020774).length - 1;
      var res_536871020 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871020 <= colontmp__536871019)) break Label4;
            i_2936020793 = res_536871020;
            x_2936020773[x_2936020773_Idx][chckIndx(addInt(xl_2936020778, i_2936020793), 0, (x_2936020773[x_2936020773_Idx]).length - 1)] = y_2936020774[chckIndx(i_2936020793, 0, (y_2936020774).length - 1)];
            res_536871020 = addInt(res_536871020, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291859352(self_1291859353) {
  var result_1291859354 = [[]];

    result_1291859354[0] = nimCopy(null, [self_1291859353.eventHandler], NTI2432696334);
    var modeOnTop_1291859368 = getOption_2801805746(self_1291859353, getContextWithMode_1291859299(self_1291859353, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291859353.modeEventHandler == null)) && !(modeOnTop_1291859368))) {
    result_1291859354[0].push(self_1291859353.modeEventHandler);;
    }
    
    if (self_1291859353.commandLineMode) {
    add_2936020771(result_1291859354, 0, getEventHandlers_2382364828(getCommandLineTextEditor_1291851067(self_1291859353)));
    result_1291859354[0].push(self_1291859353.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291859353.popups).length)) {
    add_2936020771(result_1291859354, 0, getEventHandlers_2449473595(self_1291859353.popups[chckIndx((self_1291859353.popups).length - 1, 0, (self_1291859353.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291859353.currentView) && (self_1291859353.currentView < (self_1291859353.views).length))) {
    add_2936020771(result_1291859354, 0, getEventHandlers_2382364828(self_1291859353.views[chckIndx(self_1291859353.currentView, 0, (self_1291859353.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291859353.modeEventHandler == null)) && modeOnTop_1291859368)) {
    result_1291859354[0].push(self_1291859353.modeEventHandler);;
    }
    

  return result_1291859354[0];

}

function handleKeyPress_1291851070(self_1291851071, input_1291851072, modifiers_1291851073) {
    handleEvent_2080376331(currentEventHandlers_1291859352(self_1291851071), input_1291851072, modifiers_1291851073);

  
}

function handleKeyRelease_1291851074(self_1291851075, input_1291851076, modifiers_1291851077) {
  
}

function handleRune_1291851078(self_1291851079, input_1291851080, modifiers_1291851081) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851080)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851080, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851081;
    }
    else {
    Temporary1 = ConstSet287;
    }
    
    var modifiers_1291859569 = nimCopy(null, Temporary1, NTI2013265950);
    handleEvent_2080376331(currentEventHandlers_1291859352(self_1291851079), input_1291851080, modifiers_1291859569);

  
}

function subscribe_1291851335(event_1291851337, callback_1291851339) {
  var result_1291851340 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851340 = nimCopy(result_1291851340, newId_2046820569(), NTI2046820355);
    event_1291851337.handlers.push({Field0: nimCopy(null, result_1291851340, NTI2046820355), Field1: callback_1291851339});;

  return result_1291851340;

}

function contains_2097152182(a_2097152183, b_2097152184) {
  var result_2097152185 = false;

  BeforeRet: {
    result_2097152185 = ((((a_2097152183.x <= b_2097152184.x) && (b_2097152184.x <= (a_2097152183.x + a_2097152183.w))) && (a_2097152183.y <= b_2097152184.y)) && (b_2097152184.y <= (a_2097152183.y + a_2097152183.h)));
    break BeforeRet;
  };

  return result_2097152185;

}

function handleMousePress_1291851082(self_1291851083, button_1291851084, modifiers_1291851085, mousePosWindow_1291851086) {
  BeforeRet: {
    Label1: {
      var i_1291859423 = 0;
      var colontmp__536871023 = 0;
      colontmp__536871023 = (self_1291851083.popups).length - 1;
      var res_536871024 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871024 <= colontmp__536871023)) break Label3;
            i_1291859423 = res_536871024;
            var popup_1291859427 = self_1291851083.popups[chckIndx(subInt((self_1291851083.popups).length - 1, i_1291859423), 0, (self_1291851083.popups).length - 1)];
            if (contains_2097152182(popup_1291859427.lastBounds, mousePosWindow_1291851086)) {
            handleMousePress_2449473606(popup_1291859427, button_1291851084, mousePosWindow_1291851086);
            break BeforeRet;
            }
            
            res_536871024 = addInt(res_536871024, 1);
          }
      };
    };
    var rects_1291859431 = layoutViews_1291848235(self_1291851083.layout, self_1291851083.layout_props, self_1291851083.lastBounds, (self_1291851083.views).length);
    Label4: {
      var i_1291859464 = 0;
      var view_1291859465 = null;
      var i_536871028 = 0;
      var L_536871029 = (self_1291851083.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871028 < L_536871029)) break Label6;
            i_1291859464 = i_536871028;
            view_1291859465 = self_1291851083.views[chckIndx(i_536871028, 0, (self_1291851083.views).length - 1)];
            if (((rects_1291859431).length <= i_1291859464)) {
            break BeforeRet;
            }
            
            if (contains_2097152182(rects_1291859431[chckIndx(i_1291859464, 0, (rects_1291859431).length - 1)], mousePosWindow_1291851086)) {
            self_1291851083.currentView = i_1291859464;
            handleMousePress_2382364845(view_1291859465.editor, button_1291851084, mousePosWindow_1291851086);
            break BeforeRet;
            }
            
            i_536871028 = addInt(i_536871028, 1);
            if (!(((self_1291851083.views).length == L_536871029))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851087(self_1291851088, button_1291851089, modifiers_1291851090, mousePosWindow_1291851091) {
  BeforeRet: {
    Label1: {
      var i_1291859482 = 0;
      var colontmp__536871032 = 0;
      colontmp__536871032 = (self_1291851088.popups).length - 1;
      var res_536871033 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871033 <= colontmp__536871032)) break Label3;
            i_1291859482 = res_536871033;
            var popup_1291859486 = self_1291851088.popups[chckIndx(subInt((self_1291851088.popups).length - 1, i_1291859482), 0, (self_1291851088.popups).length - 1)];
            if (contains_2097152182(popup_1291859486.lastBounds, mousePosWindow_1291851091)) {
            handleMouseRelease_2449473611(popup_1291859486, button_1291851089, mousePosWindow_1291851091);
            break BeforeRet;
            }
            
            res_536871033 = addInt(res_536871033, 1);
          }
      };
    };
    var rects_1291859490 = layoutViews_1291848235(self_1291851088.layout, self_1291851088.layout_props, self_1291851088.lastBounds, (self_1291851088.views).length);
    Label4: {
      var i_1291859496 = 0;
      var view_1291859497 = null;
      var i_536871036 = 0;
      var L_536871037 = (self_1291851088.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871036 < L_536871037)) break Label6;
            i_1291859496 = i_536871036;
            view_1291859497 = self_1291851088.views[chckIndx(i_536871036, 0, (self_1291851088.views).length - 1)];
            if (((rects_1291859490).length <= i_1291859496)) {
            break BeforeRet;
            }
            
            if (((self_1291851088.currentView == i_1291859496) && contains_2097152182(rects_1291859490[chckIndx(i_1291859496, 0, (rects_1291859490).length - 1)], mousePosWindow_1291851091))) {
            handleMouseRelease_2382364850(view_1291859497.editor, button_1291851089, mousePosWindow_1291851091);
            break BeforeRet;
            }
            
            i_536871036 = addInt(i_536871036, 1);
            if (!(((self_1291851088.views).length == L_536871037))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851456(event_1291851458, callback_1291851460) {
  var result_1291851461 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851461 = nimCopy(result_1291851461, newId_2046820569(), NTI2046820355);
    event_1291851458.handlers.push({Field0: nimCopy(null, result_1291851461, NTI2046820355), Field1: callback_1291851460});;

  return result_1291851461;

}

function handleMouseMove_1291851092(self_1291851093, mousePosWindow_1291851094, mousePosDelta_1291851095, modifiers_1291851096, buttons_1291851097) {
  BeforeRet: {
    Label1: {
      var i_1291859514 = 0;
      var colontmp__536871040 = 0;
      colontmp__536871040 = (self_1291851093.popups).length - 1;
      var res_536871041 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871041 <= colontmp__536871040)) break Label3;
            i_1291859514 = res_536871041;
            var popup_1291859518 = self_1291851093.popups[chckIndx(subInt((self_1291851093.popups).length - 1, i_1291859514), 0, (self_1291851093.popups).length - 1)];
            if (contains_2097152182(popup_1291859518.lastBounds, mousePosWindow_1291851094)) {
            handleMouseMove_2449473618(popup_1291859518, mousePosWindow_1291851094, mousePosDelta_1291851095, modifiers_1291851096, buttons_1291851097);
            break BeforeRet;
            }
            
            res_536871041 = addInt(res_536871041, 1);
          }
      };
    };
    var rects_1291859522 = layoutViews_1291848235(self_1291851093.layout, self_1291851093.layout_props, self_1291851093.lastBounds, (self_1291851093.views).length);
    Label4: {
      var i_1291859528 = 0;
      var view_1291859529 = null;
      var i_536871044 = 0;
      var L_536871045 = (self_1291851093.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871044 < L_536871045)) break Label6;
            i_1291859528 = i_536871044;
            view_1291859529 = self_1291851093.views[chckIndx(i_536871044, 0, (self_1291851093.views).length - 1)];
            if (((rects_1291859522).length <= i_1291859528)) {
            break BeforeRet;
            }
            
            if (((self_1291851093.currentView == i_1291859528) && contains_2097152182(rects_1291859522[chckIndx(i_1291859528, 0, (rects_1291859522).length - 1)], mousePosWindow_1291851094))) {
            handleMouseMove_2382364857(view_1291859529.editor, mousePosWindow_1291851094, mousePosDelta_1291851095, modifiers_1291851096, buttons_1291851097);
            break BeforeRet;
            }
            
            i_536871044 = addInt(i_536871044, 1);
            if (!(((self_1291851093.views).length == L_536871045))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851528(event_1291851530, callback_1291851532) {
  var result_1291851533 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851533 = nimCopy(result_1291851533, newId_2046820569(), NTI2046820355);
    event_1291851530.handlers.push({Field0: nimCopy(null, result_1291851533, NTI2046820355), Field1: callback_1291851532});;

  return result_1291851533;

}

function handleScroll_1291851098(self_1291851099, scroll_1291851100, mousePosWindow_1291851101, modifiers_1291851102) {
  BeforeRet: {
    Label1: {
      var i_1291859545 = 0;
      var colontmp__536871048 = 0;
      colontmp__536871048 = (self_1291851099.popups).length - 1;
      var res_536871049 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871049 <= colontmp__536871048)) break Label3;
            i_1291859545 = res_536871049;
            var popup_1291859549 = self_1291851099.popups[chckIndx(subInt((self_1291851099.popups).length - 1, i_1291859545), 0, (self_1291851099.popups).length - 1)];
            if (contains_2097152182(popup_1291859549.lastBounds, mousePosWindow_1291851101)) {
            handleScroll_2449473601(popup_1291859549, scroll_1291851100, mousePosWindow_1291851101);
            break BeforeRet;
            }
            
            res_536871049 = addInt(res_536871049, 1);
          }
      };
    };
    Label4: {
      var i_1291859555 = 0;
      var view_1291859556 = null;
      var i_536871052 = 0;
      var L_536871053 = (self_1291851099.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871052 < L_536871053)) break Label6;
            i_1291859555 = i_536871052;
            view_1291859556 = self_1291851099.views[chckIndx(i_536871052, 0, (self_1291851099.views).length - 1)];
            if (contains_2097152182(view_1291859556.editor.lastContentBounds, mousePosWindow_1291851101)) {
            handleScroll_2382364840(view_1291859556.editor, scroll_1291851100, mousePosWindow_1291851101);
            break BeforeRet;
            }
            
            i_536871052 = addInt(i_536871052, 1);
            if (!(((self_1291851099.views).length == L_536871053))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851600(event_1291851602, callback_1291851604) {
  var result_1291851605 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851605 = nimCopy(result_1291851605, newId_2046820569(), NTI2046820355);
    event_1291851602.handlers.push({Field0: nimCopy(null, result_1291851605, NTI2046820355), Field1: callback_1291851604});;

  return result_1291851605;

}

function handleDropFile_1291851103(self_1291851104, path_1291851105, content_1291851106) {
    createView_1291848965(self_1291851104, newTextDocument_2801801429(path_1291851105, content_1291851106, false));

  
}

function subscribe_1291851672(event_1291851674, callback_1291851676) {
  var result_1291851677 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851677 = nimCopy(result_1291851677, newId_2046820569(), NTI2046820355);
    event_1291851674.handlers.push({Field0: nimCopy(null, result_1291851677, NTI2046820355), Field1: callback_1291851676});;

  return result_1291851677;

}

function initTable_1291851687(initialSize_1291851690) {
  var result_1291851691 = ({data: [], counter: 0});

    var correctSizeHEX60gensym61_1291851693 = slotsNeeded_1308622891(chckRange(initialSize_1291851690, 0, 2147483647));
    result_1291851691.counter = 0;
    result_1291851691.data = new Array(chckRange(correctSizeHEX60gensym61_1291851693, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_1291851693, 0, 2147483647) ; ++i) { result_1291851691.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851691;

}

function HEX5BHEX5DHEX3D_1291851756(t_1291851759, key_1291851760, val_1291851761) {
    if (((t_1291851759.data).length == 0)) {
    var correctSizeHEX60gensym64_1291851810 = slotsNeeded_1308622891(32);
    t_1291851759.counter = 0;
    t_1291851759.data = new Array(chckRange(correctSizeHEX60gensym64_1291851810, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym64_1291851810, 0, 2147483647) ; ++i) { t_1291851759.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851815 = [0];
    var index_1291851822 = rawGet_1291848319(t_1291851759, key_1291851760, hc_1291851815, 0);
    if ((0 <= index_1291851822)) {
    t_1291851759.data[chckIndx(index_1291851822, 0, (t_1291851759.data).length - 1)].Field2 = val_1291851761;
    }
    else {
      if (((t_1291851759.data).length == 0)) {
      var correctSizeHEX60gensym67_1291851924 = slotsNeeded_1308622891(32);
      t_1291851759.counter = 0;
      t_1291851759.data = new Array(chckRange(correctSizeHEX60gensym67_1291851924, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym67_1291851924, 0, 2147483647) ; ++i) { t_1291851759.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851929(t_1291851759)) {
      enlarge_1291852084(t_1291851759);
      index_1291851822 = rawGetKnownHC_1291852556(t_1291851759, key_1291851760, hc_1291851815[0]);
      }
      
      index_1291851822 = subInt(-1, index_1291851822);
      rawInsert_1291852378(t_1291851759, t_1291851759, "data", key_1291851760, val_1291851761, hc_1291851815[0], index_1291851822);
      t_1291851759.counter = addInt(t_1291851759.counter, 1);
    }
    

  
}

function toTable_1291851682(pairs_1291851685) {
  var result_1291851686 = [({data: [], counter: 0})];

    result_1291851686[0] = nimCopy(result_1291851686[0], initTable_1291851687((pairs_1291851685).length), NTI1291845654);
    Label1: {
      var key_1291851714 = [];
      var val_1291851715 = 0.0;
      var i_536871057 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871057 < (pairs_1291851685).length)) break Label3;
            key_1291851714 = pairs_1291851685[chckIndx(i_536871057, 0, (pairs_1291851685).length - 1)]["Field0"];
            val_1291851715 = pairs_1291851685[chckIndx(i_536871057, 0, (pairs_1291851685).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851756(result_1291851686[0], key_1291851714, val_1291851715);
            i_536871057 = addInt(i_536871057, 1);
          }
      };
    };

  return result_1291851686[0];

}

function rawGet_2667578373(t_2667578376, key_2667578377, hc_2667578378, hc_2667578378_Idx) {
  var result_2667578379 = 0;

  BeforeRet: {
    hc_2667578378[hc_2667578378_Idx] = hash_1325400491(key_2667578377);
    if ((hc_2667578378[hc_2667578378_Idx] == 0)) {
    hc_2667578378[hc_2667578378_Idx] = 314159265;
    }
    
    if (((t_2667578376.data).length == 0)) {
    result_2667578379 = -1;
    break BeforeRet;
    }
    
    var h_2667578430 = (hc_2667578378[hc_2667578378_Idx] & (t_2667578376.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2667578376.data[chckIndx(h_2667578430, 0, (t_2667578376.data).length - 1)].Field0)) break Label2;
          if (((t_2667578376.data[chckIndx(h_2667578430, 0, (t_2667578376.data).length - 1)].Field0 == hc_2667578378[hc_2667578378_Idx]) && eqStrings(t_2667578376.data[chckIndx(h_2667578430, 0, (t_2667578376.data).length - 1)].Field1, key_2667578377))) {
          result_2667578379 = h_2667578430;
          break BeforeRet;
          }
          
          h_2667578430 = nextTry_1308622883(h_2667578430, (t_2667578376.data).length - 1);
        }
    };
    result_2667578379 = subInt(-1, h_2667578430);
  };

  return result_2667578379;

}

function mustRehash_2667578718(t_2667578720) {
  var result_2667578721 = false;

    if (!((t_2667578720.counter < (t_2667578720.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2667578721 = ((mulInt((t_2667578720.data).length, 2) < mulInt(t_2667578720.counter, 3)) || (subInt((t_2667578720.data).length, t_2667578720.counter) < 4));

  return result_2667578721;

}

function rawInsert_2667579167(t_2667579171, data_2667579172, data_2667579172_Idx, key_2667579173, val_2667579174, hc_2667579175, h_2667579176) {
    data_2667579172[data_2667579172_Idx][chckIndx(h_2667579176, 0, (data_2667579172[data_2667579172_Idx]).length - 1)].Field1 = nimCopy(null, key_2667579173, NTI33554449);
    data_2667579172[data_2667579172_Idx][chckIndx(h_2667579176, 0, (data_2667579172[data_2667579172_Idx]).length - 1)].Field2 = nimCopy(data_2667579172[data_2667579172_Idx][chckIndx(h_2667579176, 0, (data_2667579172[data_2667579172_Idx]).length - 1)].Field2, val_2667579174, NTI2550136835);
    data_2667579172[data_2667579172_Idx][chckIndx(h_2667579176, 0, (data_2667579172[data_2667579172_Idx]).length - 1)].Field0 = hc_2667579175;

  
}

function enlarge_2667578873(t_2667578876) {
    var n_2667578879 = [];
    n_2667578879 = new Array(chckRange(mulInt((t_2667578876.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2667578876.data).length, 2), 0, 2147483647) ; ++i) { n_2667578879[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2667578876.data; t_2667578876.data = n_2667578879; n_2667578879 = Temporary1;    Label2: {
      var i_2667578943 = 0;
      var colontmp__536871062 = 0;
      colontmp__536871062 = (n_2667578879).length - 1;
      var res_536871063 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871063 <= colontmp__536871062)) break Label4;
            i_2667578943 = res_536871063;
            var eh_2667578997 = n_2667578879[chckIndx(i_2667578943, 0, (n_2667578879).length - 1)].Field0;
            if (isFilled_1308622880(eh_2667578997)) {
            var j_2667579001 = (eh_2667578997 & (t_2667578876.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2667578876.data[chckIndx(j_2667579001, 0, (t_2667578876.data).length - 1)].Field0)) break Label6;
                  j_2667579001 = nextTry_1308622883(j_2667579001, (t_2667578876.data).length - 1);
                }
            };
            rawInsert_2667579167(t_2667578876, t_2667578876, "data", n_2667578879[chckIndx(i_2667578943, 0, (n_2667578879).length - 1)].Field1, n_2667578879[chckIndx(i_2667578943, 0, (n_2667578879).length - 1)].Field2, eh_2667578997, j_2667579001);
            }
            
            res_536871063 = addInt(res_536871063, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2667579336(t_2667579339, key_2667579340, hc_2667579341) {
  var result_2667579342 = 0;

  BeforeRet: {
    if (((t_2667579339.data).length == 0)) {
    result_2667579342 = -1;
    break BeforeRet;
    }
    
    var h_2667579393 = (hc_2667579341 & (t_2667579339.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2667579339.data[chckIndx(h_2667579393, 0, (t_2667579339.data).length - 1)].Field0)) break Label2;
          if (((t_2667579339.data[chckIndx(h_2667579393, 0, (t_2667579339.data).length - 1)].Field0 == hc_2667579341) && eqStrings(t_2667579339.data[chckIndx(h_2667579393, 0, (t_2667579339.data).length - 1)].Field1, key_2667579340))) {
          result_2667579342 = h_2667579393;
          break BeforeRet;
          }
          
          h_2667579393 = nextTry_1308622883(h_2667579393, (t_2667579339.data).length - 1);
        }
    };
    result_2667579342 = subInt(-1, h_2667579393);
  };

  return result_2667579342;

}

function HEX5BHEX5DHEX3D_2667578312(t_2667578315, key_2667578316, val_2667578317) {
    if (((t_2667578315.data).length == 0)) {
    var correctSizeHEX60gensym23_2667578367 = slotsNeeded_1308622891(32);
    t_2667578315.counter = 0;
    t_2667578315.data = new Array(chckRange(correctSizeHEX60gensym23_2667578367, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2667578367, 0, 2147483647) ; ++i) { t_2667578315.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2667578372 = [0];
    var index_2667578611 = rawGet_2667578373(t_2667578315, key_2667578316, hc_2667578372, 0);
    if ((0 <= index_2667578611)) {
    t_2667578315.data[chckIndx(index_2667578611, 0, (t_2667578315.data).length - 1)].Field2 = nimCopy(t_2667578315.data[chckIndx(index_2667578611, 0, (t_2667578315.data).length - 1)].Field2, val_2667578317, NTI2550136835);
    }
    else {
      if (((t_2667578315.data).length == 0)) {
      var correctSizeHEX60gensym28_2667578713 = slotsNeeded_1308622891(32);
      t_2667578315.counter = 0;
      t_2667578315.data = new Array(chckRange(correctSizeHEX60gensym28_2667578713, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2667578713, 0, 2147483647) ; ++i) { t_2667578315.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2667578718(t_2667578315)) {
      enlarge_2667578873(t_2667578315);
      index_2667578611 = rawGetKnownHC_2667579336(t_2667578315, key_2667578316, hc_2667578372[0]);
      }
      
      index_2667578611 = subInt(-1, index_2667578611);
      rawInsert_2667579167(t_2667578315, t_2667578315, "data", key_2667578316, val_2667578317, hc_2667578372[0], index_2667578611);
      t_2667578315.counter = addInt(t_2667578315.counter, 1);
    }
    

  
}

function c2n_2533359804(hex_2533359805, i_2533359806) {
  var result_2533359807 = 0;

  BeforeRet: {
    var c_2533359811 = hex_2533359805[chckIndx(i_2533359806, 0, (hex_2533359805).length - 1)];
    if (    c_2533359811 >= 48 && c_2533359811 <= 57    ){      result_2533359807 = subInt(c_2533359811, 48);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 97 && c_2533359811 <= 102    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 97);
      break BeforeRet;
      }
    else if (    c_2533359811 >= 65 && c_2533359811 <= 70    ){      result_2533359807 = subInt(addInt(10, c_2533359811), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2533359807;

}

function parseHex_2533359858(hex_2533359859) {
  var result_2533359860 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359859).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2533359860.r = (addInt(mulInt(c2n_2533359804(hex_2533359859, 0), 16), c2n_2533359804(hex_2533359859, 1)) / 255.0);
    result_2533359860.g = (addInt(mulInt(c2n_2533359804(hex_2533359859, 2), 16), c2n_2533359804(hex_2533359859, 3)) / 255.0);
    result_2533359860.b = (addInt(mulInt(c2n_2533359804(hex_2533359859, 4), 16), c2n_2533359804(hex_2533359859, 5)) / 255.0);
    result_2533359860.a = 1.0;

  return result_2533359860;

}

function parseHexAlpha_2533359949(hex_2533359950) {
  var result_2533359951 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2533359950).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2533359951.r = (addInt(mulInt(c2n_2533359804(hex_2533359950, 0), 16), c2n_2533359804(hex_2533359950, 1)) / 255.0);
    result_2533359951.g = (addInt(mulInt(c2n_2533359804(hex_2533359950, 2), 16), c2n_2533359804(hex_2533359950, 3)) / 255.0);
    result_2533359951.b = (addInt(mulInt(c2n_2533359804(hex_2533359950, 4), 16), c2n_2533359804(hex_2533359950, 5)) / 255.0);
    result_2533359951.a = (addInt(mulInt(c2n_2533359804(hex_2533359950, 6), 16), c2n_2533359804(hex_2533359950, 7)) / 255.0);

  return result_2533359951;

}

function parseHtmlHexTiny_2533360059(hex_2533360060) {
  var result_2533360061 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2533360060[chckIndx(0, 0, (hex_2533360060).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2550136853, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2533360060).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2533360061.r = (c2n_2533359804(hex_2533360060, 1) / 15.0);
    result_2533360061.g = (c2n_2533359804(hex_2533360060, 2) / 15.0);
    result_2533360061.b = (c2n_2533359804(hex_2533360060, 3) / 15.0);
    result_2533360061.a = 1.0;

  return result_2533360061;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet288[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2533359898(s_2533359901, x_2533359902) {
  var result_2533359903 = [];

    var a_2533359905 = subInt((s_2533359901).length, x_2533359902.a);
    var L_2533359907 = addInt(subInt(subInt((s_2533359901).length, x_2533359902.b), a_2533359905), 1);
    result_2533359903 = nimCopy(null, mnewString(chckRange(L_2533359907, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2533359912 = 0;
      var i_536871068 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871068 < L_2533359907)) break Label3;
            i_2533359912 = i_536871068;
            result_2533359903[chckIndx(i_2533359912, 0, (result_2533359903).length - 1)] = s_2533359901[chckIndx(addInt(i_2533359912, a_2533359905), 0, (s_2533359901).length - 1)];
            i_536871068 = addInt(i_536871068, 1);
          }
      };
    };

  return result_2533359903;

}

function HEX2EHEX2E_2533359871(a_2533359874, b_2533359875) {
  var result_2533359878 = ({a: 0, b: 0});

    result_2533359878 = nimCopy(result_2533359878, {a: a_2533359874, b: b_2533359875}, NTI2533359773);

  return result_2533359878;

}

function parseHexVar_2667577392(text_2667577393) {
    var Temporary1;

  var result_2667577394 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2667577393, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2667577395 = Temporary1;
    if (((text_2667577393).length == addInt(6, offset_2667577395))) {
    result_2667577394 = nimCopy(result_2667577394, parseHex_2533359858(HEX5BHEX5D_855639319(text_2667577393, HEX2EHEX2E_1040187488(offset_2667577395, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2667577393).length == addInt(8, offset_2667577395))) {
    result_2667577394 = nimCopy(result_2667577394, parseHexAlpha_2533359949(HEX5BHEX5D_855639319(text_2667577393, HEX2EHEX2E_1040187488(offset_2667577395, 1))), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2667577393).length == addInt(3, offset_2667577395))) {
    result_2667577394 = nimCopy(result_2667577394, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2667577393, HEX2EHEX2E_1040187488(offset_2667577395, 1)) || [])), NTI2550136835);
    break BeforeRet;
    }
    else {
    if (((text_2667577393).length == addInt(4, offset_2667577395))) {
    result_2667577394 = nimCopy(result_2667577394, parseHtmlHexTiny_2533360059(([35] || []).concat(HEX5BHEX5D_855639319(text_2667577393, HEX2EHEX2E_1040187488(offset_2667577395, 2)) || [])), NTI2550136835);
    result_2667577394.a = (nsuParseHexInt(HEX5BHEX5D_2533359898(text_2667577393, HEX2EHEX2E_2533359871(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2667577393, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2667577394 = nimCopy(result_2667577394, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2550136835);
    break BeforeRet;
  };

  return result_2667577394;

}

function rawGet_2667577609(t_2667577612, key_2667577613, hc_2667577614, hc_2667577614_Idx) {
  var result_2667577615 = 0;

  BeforeRet: {
    hc_2667577614[hc_2667577614_Idx] = hash_1325400491(key_2667577613);
    if ((hc_2667577614[hc_2667577614_Idx] == 0)) {
    hc_2667577614[hc_2667577614_Idx] = 314159265;
    }
    
    if (((t_2667577612.data).length == 0)) {
    result_2667577615 = -1;
    break BeforeRet;
    }
    
    var h_2667577667 = (hc_2667577614[hc_2667577614_Idx] & (t_2667577612.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2667577612.data[chckIndx(h_2667577667, 0, (t_2667577612.data).length - 1)].Field0)) break Label2;
          if (((t_2667577612.data[chckIndx(h_2667577667, 0, (t_2667577612.data).length - 1)].Field0 == hc_2667577614[hc_2667577614_Idx]) && eqStrings(t_2667577612.data[chckIndx(h_2667577667, 0, (t_2667577612.data).length - 1)].Field1, key_2667577613))) {
          result_2667577615 = h_2667577667;
          break BeforeRet;
          }
          
          h_2667577667 = nextTry_1308622883(h_2667577667, (t_2667577612.data).length - 1);
        }
    };
    result_2667577615 = subInt(-1, h_2667577667);
  };

  return result_2667577615;

}

function mustRehash_2667579883(t_2667579885) {
  var result_2667579886 = false;

    if (!((t_2667579885.counter < (t_2667579885.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2667579886 = ((mulInt((t_2667579885.data).length, 2) < mulInt(t_2667579885.counter, 3)) || (subInt((t_2667579885.data).length, t_2667579885.counter) < 4));

  return result_2667579886;

}

function rawInsert_2667580332(t_2667580336, data_2667580337, data_2667580337_Idx, key_2667580338, val_2667580339, hc_2667580340, h_2667580341) {
    data_2667580337[data_2667580337_Idx][chckIndx(h_2667580341, 0, (data_2667580337[data_2667580337_Idx]).length - 1)].Field1 = nimCopy(null, key_2667580338, NTI33554449);
    data_2667580337[data_2667580337_Idx][chckIndx(h_2667580341, 0, (data_2667580337[data_2667580337_Idx]).length - 1)].Field2 = nimCopy(data_2667580337[data_2667580337_Idx][chckIndx(h_2667580341, 0, (data_2667580337[data_2667580337_Idx]).length - 1)].Field2, val_2667580339, NTI2667577348);
    data_2667580337[data_2667580337_Idx][chckIndx(h_2667580341, 0, (data_2667580337[data_2667580337_Idx]).length - 1)].Field0 = hc_2667580340;

  
}

function enlarge_2667580038(t_2667580041) {
    var n_2667580044 = [];
    n_2667580044 = new Array(chckRange(mulInt((t_2667580041.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2667580041.data).length, 2), 0, 2147483647) ; ++i) { n_2667580044[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2667580041.data; t_2667580041.data = n_2667580044; n_2667580044 = Temporary1;    Label2: {
      var i_2667580108 = 0;
      var colontmp__536871073 = 0;
      colontmp__536871073 = (n_2667580044).length - 1;
      var res_536871074 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871074 <= colontmp__536871073)) break Label4;
            i_2667580108 = res_536871074;
            var eh_2667580162 = n_2667580044[chckIndx(i_2667580108, 0, (n_2667580044).length - 1)].Field0;
            if (isFilled_1308622880(eh_2667580162)) {
            var j_2667580166 = (eh_2667580162 & (t_2667580041.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2667580041.data[chckIndx(j_2667580166, 0, (t_2667580041.data).length - 1)].Field0)) break Label6;
                  j_2667580166 = nextTry_1308622883(j_2667580166, (t_2667580041.data).length - 1);
                }
            };
            rawInsert_2667580332(t_2667580041, t_2667580041, "data", n_2667580044[chckIndx(i_2667580108, 0, (n_2667580044).length - 1)].Field1, n_2667580044[chckIndx(i_2667580108, 0, (n_2667580044).length - 1)].Field2, eh_2667580162, j_2667580166);
            }
            
            res_536871074 = addInt(res_536871074, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2667580501(t_2667580504, key_2667580505, hc_2667580506) {
  var result_2667580507 = 0;

  BeforeRet: {
    if (((t_2667580504.data).length == 0)) {
    result_2667580507 = -1;
    break BeforeRet;
    }
    
    var h_2667580558 = (hc_2667580506 & (t_2667580504.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2667580504.data[chckIndx(h_2667580558, 0, (t_2667580504.data).length - 1)].Field0)) break Label2;
          if (((t_2667580504.data[chckIndx(h_2667580558, 0, (t_2667580504.data).length - 1)].Field0 == hc_2667580506) && eqStrings(t_2667580504.data[chckIndx(h_2667580558, 0, (t_2667580504.data).length - 1)].Field1, key_2667580505))) {
          result_2667580507 = h_2667580558;
          break BeforeRet;
          }
          
          h_2667580558 = nextTry_1308622883(h_2667580558, (t_2667580504.data).length - 1);
        }
    };
    result_2667580507 = subInt(-1, h_2667580558);
  };

  return result_2667580507;

}

function HEX5BHEX5DHEX3D_2667579710(t_2667579713, key_2667579714, val_2667579715) {
    if (((t_2667579713.data).length == 0)) {
    var correctSizeHEX60gensym37_2667579764 = slotsNeeded_1308622891(32);
    t_2667579713.counter = 0;
    t_2667579713.data = new Array(chckRange(correctSizeHEX60gensym37_2667579764, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2667579764, 0, 2147483647) ; ++i) { t_2667579713.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2667579769 = [0];
    var index_2667579776 = rawGet_2667577609(t_2667579713, key_2667579714, hc_2667579769, 0);
    if ((0 <= index_2667579776)) {
    t_2667579713.data[chckIndx(index_2667579776, 0, (t_2667579713.data).length - 1)].Field2 = nimCopy(t_2667579713.data[chckIndx(index_2667579776, 0, (t_2667579713.data).length - 1)].Field2, val_2667579715, NTI2667577348);
    }
    else {
      if (((t_2667579713.data).length == 0)) {
      var correctSizeHEX60gensym40_2667579878 = slotsNeeded_1308622891(32);
      t_2667579713.counter = 0;
      t_2667579713.data = new Array(chckRange(correctSizeHEX60gensym40_2667579878, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2667579878, 0, 2147483647) ; ++i) { t_2667579713.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2667579883(t_2667579713)) {
      enlarge_2667580038(t_2667579713);
      index_2667579776 = rawGetKnownHC_2667580501(t_2667579713, key_2667579714, hc_2667579769[0]);
      }
      
      index_2667579776 = subInt(-1, index_2667579776);
      rawInsert_2667580332(t_2667579713, t_2667579713, "data", key_2667579714, val_2667579715, hc_2667579769[0], index_2667579776);
      t_2667579713.counter = addInt(t_2667579713.counter, 1);
    }
    

  
}

function some_2667578195(val_2667578197) {
  var result_2667578198 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2667578198.has = true;
    result_2667578198.val = nimCopy(result_2667578198.val, val_2667578197, NTI2550136835);

  return result_2667578198;

}

function defaultTheme_2667581007() {
  var result_2667581008 = null;

    result_2667581008 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2667581008.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2667581008.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2667577392([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2667577392([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2667577392([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2667577392([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2667577392([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2667577392([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2667577392([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2667577392([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2667577392([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667578312(result_2667581008.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2667577392([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2667579710(result_2667581008.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2667578195(parseHexVar_2667577392([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet289, NTI2667577367), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2667581008;

}

function setTheme_1291851010(self_1291851011, path_1291851012) {
      var Temporary1;

      var oHEX60gensym59_1291851015 = loadFromFile_2667581003(path_1291851012);
      if (!isSome_1291851020(oHEX60gensym59_1291851015)) Temporary1 = false; else {        var theme_1291851066 = get_1291851040(oHEX60gensym59_1291851015);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291851011.theme = theme_1291851066;
    }
    
    requestRender_2499805290(self_1291851011.platform, false);

  
}

function symbolName_1291854225(a_1291854227) {
  var result_1291854228 = [];

    result_1291854228 = nimCopy(null, names_1291854230[chckIndx(subInt(a_1291854227, 0), 0, (names_1291854230).length - 1)], NTI33554449);

  return result_1291854228;

}

function toJson_1291854209(a_1291854211, opt_1291854212) {
    var Temporary1;

  var result_1291854213 = null;

    switch (opt_1291854212.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291854211);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291854225(a_1291854211), opt_1291854212);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291854211, NTI2415919121), opt_1291854212);
      break;
    }
    result_1291854213 = Temporary1;

  return result_1291854213;

}

function none_1291854117() {
  var result_1291854123 = ({val: null});

  return result_1291854123;

}

function some_1291854124(val_1291854126) {
  var result_1291854127 = ({val: null});

    if (!(!((val_1291854126 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291854127.val = val_1291854126;

  return result_1291854127;

}

function getEditor_1291854108() {
  var result_1291854113 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291854113 = nimCopy(result_1291854113, none_1291854117(), NTI1291850599);
    break BeforeRet;
    }
    
    result_1291854113 = nimCopy(result_1291854113, some_1291854124(gEditor), NTI1291850599);
    break BeforeRet;
  };

  return result_1291854113;

}

function isNone_1291854162(self_1291854164) {
  var result_1291854165 = false;

    result_1291854165 = (self_1291854164.val == null);

  return result_1291854165;

}

function get_1291854182(self_1291854184) {
  var result_1291854185 = null;

    if (isNone_1291854162(self_1291854184)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291854185 = self_1291854184["val"];

  return result_1291854185;

}

function getBackendScript_1291854147_1291854155() {
  var result_1291854156 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym146_1291854157 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym146_1291854157)) {
      break BeforeRet;
      }
      
    };
    result_1291854156 = getBackend_1291854152(get_1291854182(rHEX60gensym146_1291854157));
  };

  return result_1291854156;

}

function getBackendApi_1291854207(HEX3Atmp_1291854149) {
  var result_1291854208 = null;

  BeforeRet: {
    result_1291854208 = newJNull_1627390049();
++excHandler;
    try {
    result_1291854208 = toJson_1291854209(getBackendScript_1291854147_1291854155(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym152_1291854306 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854311 = [mnewString(0)];
    fmtRes_1291854311[0].push.apply(fmtRes_1291854311[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854311, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym152_1291854306 || [],fmtRes_1291854311[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854208;

}

function saveAppStateScript_1291854314_1291855070() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym157_1291855071 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym157_1291855071)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853873(get_1291854182(rHEX60gensym157_1291855071));
  };

  
}

function saveAppStateApi_1291855097(HEX3Atmp_1291854316) {
  var result_1291855098 = null;

    result_1291855098 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291854314_1291855070();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym162_1291855099 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291855104 = [mnewString(0)];
    fmtRes_1291855104[0].push.apply(fmtRes_1291855104[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855104, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym162_1291855099 || [],fmtRes_1291855104[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855098;

}

function requestRenderScript_1291855179_1291855187(redrawEverything_1291855188) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym173_1291855189 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym173_1291855189)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291855184(get_1291854182(rHEX60gensym173_1291855189), redrawEverything_1291855188);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet290[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet291), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet292[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2801807185(node_2801807188) {
  var result_2801807190 = [false];

    var jsonPath_2801807191 = [[]];
    result_2801807190[0] = false;
    initFromJson_1627395343(result_2801807190, 0, node_2801807188, jsonPath_2801807191, 0);

  return result_2801807190[0];

}

function fromJson_2801807174(a_2801807176, a_2801807176_Idx, b_2801807177, opt_2801807178) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801807177, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2801807177}));
    }
    
    a_2801807176[a_2801807176_Idx] = to_2801807185(b_2801807177);

  
}

function jsonTo_2801807168(b_2801807170, opt_2801807172) {
  var result_2801807173 = [false];

    fromJson_2801807174(result_2801807173, 0, b_2801807170, opt_2801807172);

  return result_2801807173[0];

}

function requestRenderApi_1291855216(HEX3Atmp_1291855181) {
      var Temporary3;

  var result_1291855217 = null;

    result_1291855217 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855181))) {
      Temporary3 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855181, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291855179_1291855187(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym178_1291855223 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291855228 = [mnewString(0)];
    fmtRes_1291855228[0].push.apply(fmtRes_1291855228[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855228, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym178_1291855223 || [],fmtRes_1291855228[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855217;

}

function setHandleInputsScript_1291855231_1291855240(context_1291855241, value_1291855242) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym184_1291855243 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym184_1291855243)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291855236(get_1291854182(rHEX60gensym184_1291855243), context_1291855241, value_1291855242);
  };

  
}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet293[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet294), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet295[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function setHandleInputsApi_1291855271(HEX3Atmp_1291855233) {
  var result_1291855272 = null;

    result_1291855272 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291855231_1291855240(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855233, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855233, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym189_1291855283 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291855288 = [mnewString(0)];
    fmtRes_1291855288[0].push.apply(fmtRes_1291855288[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855288, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym189_1291855283 || [],fmtRes_1291855288[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855272;

}

function setHandleActionsScript_1291855291_1291855300(context_1291855301, value_1291855302) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym194_1291855303 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym194_1291855303)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291855296(get_1291854182(rHEX60gensym194_1291855303), context_1291855301, value_1291855302);
  };

  
}

function setHandleActionsApi_1291855331(HEX3Atmp_1291855293) {
  var result_1291855332 = null;

    result_1291855332 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291855291_1291855300(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855293, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855293, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym199_1291855343 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291855348 = [mnewString(0)];
    fmtRes_1291855348[0].push.apply(fmtRes_1291855348[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855348, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym199_1291855343 || [],fmtRes_1291855348[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855332;

}

function setConsumeAllActionsScript_1291855351_1291855360(context_1291855361, value_1291855362) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym204_1291855363 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym204_1291855363)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291855356(get_1291854182(rHEX60gensym204_1291855363), context_1291855361, value_1291855362);
  };

  
}

function setConsumeAllActionsApi_1291855391(HEX3Atmp_1291855353) {
  var result_1291855392 = null;

    result_1291855392 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291855351_1291855360(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855353, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855353, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym209_1291855403 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291855408 = [mnewString(0)];
    fmtRes_1291855408[0].push.apply(fmtRes_1291855408[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855408, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym209_1291855403 || [],fmtRes_1291855408[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855392;

}

function setConsumeAllInputScript_1291855411_1291855420(context_1291855421, value_1291855422) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym214_1291855423 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym214_1291855423)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291855416(get_1291854182(rHEX60gensym214_1291855423), context_1291855421, value_1291855422);
  };

  
}

function setConsumeAllInputApi_1291855451(HEX3Atmp_1291855413) {
  var result_1291855452 = null;

    result_1291855452 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291855411_1291855420(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855413, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855413, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym219_1291855463 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291855468 = [mnewString(0)];
    fmtRes_1291855468[0].push.apply(fmtRes_1291855468[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855468, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym219_1291855463 || [],fmtRes_1291855468[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855452;

}

function clearWorkspaceCachesScript_1291855548_1291855559() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym227_1291855560 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym227_1291855560)) {
      break BeforeRet;
      }
      
    };
    clearWorkspaceCaches_1291855553(get_1291854182(rHEX60gensym227_1291855560));
  };

  
}

function clearWorkspaceCachesApi_1291855586(HEX3Atmp_1291855550) {
  var result_1291855587 = null;

    result_1291855587 = newJNull_1627390049();
++excHandler;
    try {
    clearWorkspaceCachesScript_1291855548_1291855559();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym232_1291855588 = [99,108,101,97,114,87,111,114,107,115,112,97,99,101,67,97,99,104,101,115];
    var fmtRes_1291855593 = [mnewString(0)];
    fmtRes_1291855593[0].push.apply(fmtRes_1291855593[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855593, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym232_1291855588 || [],fmtRes_1291855593[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855587;

}

function openGithubWorkspaceScript_1291855600_1291855610(user_1291855611, repository_1291855612, branchOrHash_1291855613) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym238_1291855614 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym238_1291855614)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291855605(get_1291854182(rHEX60gensym238_1291855614), user_1291855611, repository_1291855612, branchOrHash_1291855613);
  };

  
}

function openGithubWorkspaceApi_1291855643(HEX3Atmp_1291855602) {
  var result_1291855644 = null;

    result_1291855644 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291855600_1291855610(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855602, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855602, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855602, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym243_1291855660 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855665 = [mnewString(0)];
    fmtRes_1291855665[0].push.apply(fmtRes_1291855665[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855665, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym243_1291855660 || [],fmtRes_1291855665[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855644;

}

function openAbsytreeServerWorkspaceScript_1291855682_1291855690(url_1291855691) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym247_1291855692 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym247_1291855692)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291855687(get_1291854182(rHEX60gensym247_1291855692), url_1291855691);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291855719(HEX3Atmp_1291855684) {
  var result_1291855720 = null;

    result_1291855720 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291855682_1291855690(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855684, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym252_1291855726 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291855731 = [mnewString(0)];
    fmtRes_1291855731[0].push.apply(fmtRes_1291855731[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855731, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym252_1291855726 || [],fmtRes_1291855731[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855720;

}

function getFlagScript2_1291855734_1291855753(flag_1291855754, default_1291855755) {
  var result_1291855756 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym257_1291855757 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym257_1291855757)) {
      break BeforeRet;
      }
      
    };
    result_1291855756 = getFlag_1291848881(get_1291854182(rHEX60gensym257_1291855757), flag_1291855754, default_1291855755);
  };

  return result_1291855756;

}

function getFlagApi2_1291855786(HEX3Atmp_1291855736) {
      var Temporary4;

  var result_1291855787 = null;

  BeforeRet: {
    result_1291855787 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291855736))) {
      Temporary4 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855736, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291855787 = toJson_2801811058(getFlagScript2_1291855734_1291855753(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855736, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym263_1291855802 = [103,101,116,70,108,97,103];
    var fmtRes_1291855807 = [mnewString(0)];
    fmtRes_1291855807[0].push.apply(fmtRes_1291855807[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855807, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym263_1291855802 || [],fmtRes_1291855807[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855787;

}

function setFlagScript2_1291855811_1291855875(flag_1291855876, value_1291855877) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym269_1291855878 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym269_1291855878)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848958(get_1291854182(rHEX60gensym269_1291855878), flag_1291855876, value_1291855877);
  };

  
}

function setFlagApi2_1291855906(HEX3Atmp_1291855813) {
  var result_1291855907 = null;

    result_1291855907 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291855811_1291855875(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855813, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291855813, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym274_1291855918 = [115,101,116,70,108,97,103];
    var fmtRes_1291855923 = [mnewString(0)];
    fmtRes_1291855923[0].push.apply(fmtRes_1291855923[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855923, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym274_1291855918 || [],fmtRes_1291855923[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855907;

}

function toggleFlagScript_1291855932_1291855940(flag_1291855941) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym283_1291855942 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym283_1291855942)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848962(get_1291854182(rHEX60gensym283_1291855942), flag_1291855941);
  };

  
}

function toggleFlagApi_1291855969(HEX3Atmp_1291855934) {
  var result_1291855970 = null;

    result_1291855970 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291855932_1291855940(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855934, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym288_1291855976 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291855981 = [mnewString(0)];
    fmtRes_1291855981[0].push.apply(fmtRes_1291855981[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855981, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym288_1291855976 || [],fmtRes_1291855981[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855970;

}

function setOptionScript_1291855984_1291856032(option_1291856033, value_1291856034) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym293_1291856035 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym293_1291856035)) {
      break BeforeRet;
      }
      
    };
    setOption_1291855989(get_1291854182(rHEX60gensym293_1291856035), option_1291856033, value_1291856034);
  };

  
}

function setOptionApi_1291856063(HEX3Atmp_1291855986) {
  var result_1291856064 = null;

    result_1291856064 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291855984_1291856032(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855986, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291855986, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym298_1291856070 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291856075 = [mnewString(0)];
    fmtRes_1291856075[0].push.apply(fmtRes_1291856075[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856075, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym298_1291856070 || [],fmtRes_1291856075[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856064;

}

function quitScript_1291856083_1291856090() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym306_1291856091 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym306_1291856091)) {
      break BeforeRet;
      }
      
    };
    quit_1291856088(get_1291854182(rHEX60gensym306_1291856091));
  };

  
}

function quitApi_1291856117(HEX3Atmp_1291856085) {
  var result_1291856118 = null;

    result_1291856118 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291856083_1291856090();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym311_1291856119 = [113,117,105,116];
    var fmtRes_1291856124 = [mnewString(0)];
    fmtRes_1291856124[0].push.apply(fmtRes_1291856124[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856124, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym311_1291856119 || [],fmtRes_1291856124[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856118;

}

function changeFontSizeScript_1291856127_1291856135(amount_1291856136) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_1291856137 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym315_1291856137)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291856132(get_1291854182(rHEX60gensym315_1291856137), amount_1291856136);
  };

  
}

function initFromJson_2801808545(dst_2801808547, dst_2801808547_Idx, jsonNode_2801808548, jsonPath_2801808549, jsonPath_2801808549_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2801808548.kind == 4)) {
    var Temporary1 = jsonNode_2801808548;
    if (ConstSet296[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2801808554 = NaN;
      dst_2801808547[dst_2801808547_Idx] = b_2801808554;
      break;
    case "inf":
      var b_2801808555 = Infinity;
      dst_2801808547[dst_2801808547_Idx] = b_2801808555;
      break;
    case "-inf":
      var b_2801808556 = -Infinity;
      dst_2801808547[dst_2801808547_Idx] = b_2801808556;
      break;
    default: 
      var Temporary2 = jsonNode_2801808548;
      if (ConstSet297[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2801808548, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2801808549[jsonPath_2801808549_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet298[jsonNode_2801808548.kind] != undefined))) {
      var msgHEX60gensym398_2801808570 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet299), nimCopy(null, jsonPath_2801808549[jsonPath_2801808549_Idx], NTI33554449), reprEnum(jsonNode_2801808548.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym398_2801808570, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2801808548.kind == 3)) {
      var Temporary3 = jsonNode_2801808548;
      if (ConstSet300[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2801808547[dst_2801808547_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2801808548;
        if (ConstSet301[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2801808547[dst_2801808547_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2801808534(node_2801808537) {
  var result_2801808539 = [0.0];

    var jsonPath_2801808540 = [[]];
    result_2801808539[0] = 0.0;
    initFromJson_2801808545(result_2801808539, 0, node_2801808537, jsonPath_2801808540, 0);

  return result_2801808539[0];

}

function fromJson_2801808519(a_2801808521, a_2801808521_Idx, b_2801808522, opt_2801808523) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801808522, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2801808522}));
    }
    
    a_2801808521[a_2801808521_Idx] = to_2801808534(b_2801808522);

  
}

function jsonTo_2801808513(b_2801808515, opt_2801808517) {
  var result_2801808518 = [0.0];

    fromJson_2801808519(result_2801808518, 0, b_2801808515, opt_2801808517);

  return result_2801808518[0];

}

function changeFontSizeApi_1291856164(HEX3Atmp_1291856129) {
  var result_1291856165 = null;

    result_1291856165 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291856127_1291856135(jsonTo_2801808513(HEX5BHEX5D_1627393116(HEX3Atmp_1291856129, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym320_1291856171 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291856176 = [mnewString(0)];
    fmtRes_1291856176[0].push.apply(fmtRes_1291856176[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856176, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym320_1291856171 || [],fmtRes_1291856176[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856165;

}

function changeLayoutPropScript_1291856179_1291856437(prop_1291856438, change_1291856439) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym325_1291856440 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym325_1291856440)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291856184(get_1291854182(rHEX60gensym325_1291856440), prop_1291856438, change_1291856439);
  };

  
}

function changeLayoutPropApi_1291856468(HEX3Atmp_1291856181) {
  var result_1291856469 = null;

    result_1291856469 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291856179_1291856437(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856181, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801808513(HEX5BHEX5D_1627393116(HEX3Atmp_1291856181, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym330_1291856480 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291856485 = [mnewString(0)];
    fmtRes_1291856485[0].push.apply(fmtRes_1291856485[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856485, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym330_1291856480 || [],fmtRes_1291856485[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856469;

}

function toggleStatusBarLocationScript_1291856495_1291856502() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym339_1291856503 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym339_1291856503)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291856500(get_1291854182(rHEX60gensym339_1291856503));
  };

  
}

function toggleStatusBarLocationApi_1291856529(HEX3Atmp_1291856497) {
  var result_1291856530 = null;

    result_1291856530 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291856495_1291856502();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym344_1291856531 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291856536 = [mnewString(0)];
    fmtRes_1291856536[0].push.apply(fmtRes_1291856536[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856536, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym344_1291856531 || [],fmtRes_1291856536[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856530;

}

function createViewScript_1291856539_1291856551() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym347_1291856552 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym347_1291856552)) {
      break BeforeRet;
      }
      
    };
    createView_1291856544(get_1291854182(rHEX60gensym347_1291856552));
  };

  
}

function createViewApi_1291856578(HEX3Atmp_1291856541) {
  var result_1291856579 = null;

    result_1291856579 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291856539_1291856551();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym352_1291856580 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291856585 = [mnewString(0)];
    fmtRes_1291856585[0].push.apply(fmtRes_1291856585[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856585, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym352_1291856580 || [],fmtRes_1291856585[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856579;

}

function closeCurrentViewScript_1291856593_1291856630() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym355_1291856631 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym355_1291856631)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291856598(get_1291854182(rHEX60gensym355_1291856631));
  };

  
}

function closeCurrentViewApi_1291856657(HEX3Atmp_1291856595) {
  var result_1291856658 = null;

    result_1291856658 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291856593_1291856630();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym360_1291856659 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291856664 = [mnewString(0)];
    fmtRes_1291856664[0].push.apply(fmtRes_1291856664[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856664, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym360_1291856659 || [],fmtRes_1291856664[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856658;

}

function moveCurrentViewToTopScript_1291856672_1291856715() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym365_1291856716 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym365_1291856716)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291856677(get_1291854182(rHEX60gensym365_1291856716));
  };

  
}

function moveCurrentViewToTopApi_1291856742(HEX3Atmp_1291856674) {
  var result_1291856743 = null;

    result_1291856743 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291856672_1291856715();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym370_1291856744 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291856749 = [mnewString(0)];
    fmtRes_1291856749[0].push.apply(fmtRes_1291856749[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856749, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym370_1291856744 || [],fmtRes_1291856749[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856743;

}

function nextViewScript_1291856753_1291856766() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym376_1291856767 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym376_1291856767)) {
      break BeforeRet;
      }
      
    };
    nextView_1291856758(get_1291854182(rHEX60gensym376_1291856767));
  };

  
}

function nextViewApi_1291856793(HEX3Atmp_1291856755) {
  var result_1291856794 = null;

    result_1291856794 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291856753_1291856766();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym381_1291856795 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291856800 = [mnewString(0)];
    fmtRes_1291856800[0].push.apply(fmtRes_1291856800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym381_1291856795 || [],fmtRes_1291856800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856794;

}

function prevViewScript_1291856803_1291856819() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym384_1291856820 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym384_1291856820)) {
      break BeforeRet;
      }
      
    };
    prevView_1291856808(get_1291854182(rHEX60gensym384_1291856820));
  };

  
}

function prevViewApi_1291856846(HEX3Atmp_1291856805) {
  var result_1291856847 = null;

    result_1291856847 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291856803_1291856819();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym389_1291856848 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291856853 = [mnewString(0)];
    fmtRes_1291856853[0].push.apply(fmtRes_1291856853[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856853, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym389_1291856848 || [],fmtRes_1291856853[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856847;

}

function moveCurrentViewPrevScript_1291856856_1291856886() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym392_1291856887 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym392_1291856887)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291856861(get_1291854182(rHEX60gensym392_1291856887));
  };

  
}

function moveCurrentViewPrevApi_1291856913(HEX3Atmp_1291856858) {
  var result_1291856914 = null;

    result_1291856914 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291856856_1291856886();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym397_1291856915 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291856920 = [mnewString(0)];
    fmtRes_1291856920[0].push.apply(fmtRes_1291856920[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856920, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym397_1291856915 || [],fmtRes_1291856920[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856914;

}

function moveCurrentViewNextScript_1291856923_1291856950() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym401_1291856951 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym401_1291856951)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291856928(get_1291854182(rHEX60gensym401_1291856951));
  };

  
}

function moveCurrentViewNextApi_1291856977(HEX3Atmp_1291856925) {
  var result_1291856978 = null;

    result_1291856978 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291856923_1291856950();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym406_1291856979 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291856984 = [mnewString(0)];
    fmtRes_1291856984[0].push.apply(fmtRes_1291856984[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856984, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym406_1291856979 || [],fmtRes_1291856984[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856978;

}

function setLayoutScript_1291856987_1291857031(layout_1291857032) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym411_1291857033 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym411_1291857033)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291856992(get_1291854182(rHEX60gensym411_1291857033), layout_1291857032);
  };

  
}

function setLayoutApi_1291857060(HEX3Atmp_1291856989) {
  var result_1291857061 = null;

    result_1291857061 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291856987_1291857031(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856989, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym416_1291857067 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291857072 = [mnewString(0)];
    fmtRes_1291857072[0].push.apply(fmtRes_1291857072[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857072, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym416_1291857067 || [],fmtRes_1291857072[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857061;

}

function commandLineScript_1291857075_1291857087(initialValue_1291857088) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym420_1291857089 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym420_1291857089)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291857080(get_1291854182(rHEX60gensym420_1291857089), initialValue_1291857088);
  };

  
}

function commandLineApi_1291857116(HEX3Atmp_1291857077) {
      var Temporary3;

  var result_1291857117 = null;

    result_1291857117 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857077))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857077, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291857075_1291857087(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym425_1291857123 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857128 = [mnewString(0)];
    fmtRes_1291857128[0].push.apply(fmtRes_1291857128[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857128, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym425_1291857123 || [],fmtRes_1291857128[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857117;

}

function exitCommandLineScript_1291857131_1291857142() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym429_1291857143 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym429_1291857143)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291857136(get_1291854182(rHEX60gensym429_1291857143));
  };

  
}

function exitCommandLineApi_1291857169(HEX3Atmp_1291857133) {
  var result_1291857170 = null;

    result_1291857170 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291857131_1291857142();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym434_1291857171 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857176 = [mnewString(0)];
    fmtRes_1291857176[0].push.apply(fmtRes_1291857176[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857176, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym434_1291857171 || [],fmtRes_1291857176[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857170;

}

function executeCommandLineScript_1291857179_1291857193() {
  var result_1291857194 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym437_1291857195 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym437_1291857195)) {
      break BeforeRet;
      }
      
    };
    result_1291857194 = executeCommandLine_1291857184(get_1291854182(rHEX60gensym437_1291857195));
  };

  return result_1291857194;

}

function executeCommandLineApi_1291857222(HEX3Atmp_1291857181) {
  var result_1291857223 = null;

  BeforeRet: {
    result_1291857223 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857223 = toJson_2801811058(executeCommandLineScript_1291857179_1291857193(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym443_1291857228 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291857233 = [mnewString(0)];
    fmtRes_1291857233[0].push.apply(fmtRes_1291857233[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857233, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym443_1291857228 || [],fmtRes_1291857233[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857223;

}

function writeFileScript_1291857269_1291857290(path_1291857291, app_1291857292) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_1291857293 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym452_1291857293)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291857274(get_1291854182(rHEX60gensym452_1291857293), path_1291857291, app_1291857292);
  };

  
}

function writeFileApi_1291857321(HEX3Atmp_1291857271) {
      var Temporary3;
      var Temporary5;

  var result_1291857322 = null;

    result_1291857322 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857271))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857271, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291857271))) {
      Temporary5 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291857271, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291857269_1291857290(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_1291857333 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291857338 = [mnewString(0)];
    fmtRes_1291857338[0].push.apply(fmtRes_1291857338[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857338, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_1291857333 || [],fmtRes_1291857338[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857322;

}

function loadFileScript_1291857341_1291857361(path_1291857362) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym466_1291857363 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym466_1291857363)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291857346(get_1291854182(rHEX60gensym466_1291857363), path_1291857362);
  };

  
}

function loadFileApi_1291857390(HEX3Atmp_1291857343) {
      var Temporary3;

  var result_1291857391 = null;

    result_1291857391 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857343))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857343, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291857341_1291857361(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym471_1291857397 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291857402 = [mnewString(0)];
    fmtRes_1291857402[0].push.apply(fmtRes_1291857402[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857402, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym471_1291857397 || [],fmtRes_1291857402[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857391;

}

function openFileScript_1291857424_1291857478(path_1291857479, app_1291857480) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_1291857481 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym483_1291857481)) {
      break BeforeRet;
      }
      
    };
    openFile_1291857429(get_1291854182(rHEX60gensym483_1291857481), path_1291857479, app_1291857480);
  };

  
}

function openFileApi_1291857509(HEX3Atmp_1291857426) {
      var Temporary4;

  var result_1291857510 = null;

    result_1291857510 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291857426))) {
      Temporary4 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291857426, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291857424_1291857478(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857426, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_1291857521 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291857526 = [mnewString(0)];
    fmtRes_1291857526[0].push.apply(fmtRes_1291857526[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857526, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_1291857521 || [],fmtRes_1291857526[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857510;

}

function removeFromLocalStorageScript_1291857583_1291857606() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857607 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym495_1291857607)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291857588(get_1291854182(rHEX60gensym495_1291857607));
  };

  
}

function removeFromLocalStorageApi_1291857633(HEX3Atmp_1291857585) {
  var result_1291857634 = null;

    result_1291857634 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291857583_1291857606();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_1291857635 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291857640 = [mnewString(0)];
    fmtRes_1291857640[0].push.apply(fmtRes_1291857640[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857640, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_1291857635 || [],fmtRes_1291857640[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857634;

}

function loadThemeScript_1291857643_1291857687(name_1291857688) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym506_1291857689 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym506_1291857689)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291857648(get_1291854182(rHEX60gensym506_1291857689), name_1291857688);
  };

  
}

function loadThemeApi_1291857716(HEX3Atmp_1291857645) {
  var result_1291857717 = null;

    result_1291857717 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291857643_1291857687(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857645, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_1291857723 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291857728 = [mnewString(0)];
    fmtRes_1291857728[0].push.apply(fmtRes_1291857728[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857728, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_1291857723 || [],fmtRes_1291857728[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857717;

}

function chooseThemeScript_1291857731_1291858016() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym517_1291858017 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym517_1291858017)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291857736(get_1291854182(rHEX60gensym517_1291858017));
  };

  
}

function chooseThemeApi_1291858043(HEX3Atmp_1291857733) {
  var result_1291858044 = null;

    result_1291858044 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291857731_1291858016();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym522_1291858045 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291858050 = [mnewString(0)];
    fmtRes_1291858050[0].push.apply(fmtRes_1291858050[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858050, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym522_1291858045 || [],fmtRes_1291858050[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858044;

}

function chooseFileScript_1291858401_1291858577(view_1291858578) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym543_1291858579 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym543_1291858579)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291858406(get_1291854182(rHEX60gensym543_1291858579), view_1291858578);
  };

  
}

function chooseFileApi_1291858606(HEX3Atmp_1291858403) {
      var Temporary3;

  var result_1291858607 = null;

    result_1291858607 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291858403))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858403, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291858401_1291858577(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym548_1291858613 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291858618 = [mnewString(0)];
    fmtRes_1291858618[0].push.apply(fmtRes_1291858618[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858618, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym548_1291858613 || [],fmtRes_1291858618[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858607;

}

function setGithubAccessTokenScript_1291858646_1291858654(token_1291858655) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym560_1291858656 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym560_1291858656)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291858651(get_1291854182(rHEX60gensym560_1291858656), token_1291858655);
  };

  
}

function setGithubAccessTokenApi_1291858683(HEX3Atmp_1291858648) {
  var result_1291858684 = null;

    result_1291858684 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291858646_1291858654(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858648, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_1291858690 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291858695 = [mnewString(0)];
    fmtRes_1291858695[0].push.apply(fmtRes_1291858695[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858695, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_1291858690 || [],fmtRes_1291858695[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858684;

}

function reloadConfigScript_1291858698_1291858718() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym568_1291858719 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym568_1291858719)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291858703(get_1291854182(rHEX60gensym568_1291858719));
  };

  
}

function reloadConfigApi_1291858745(HEX3Atmp_1291858700) {
  var result_1291858746 = null;

    result_1291858746 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291858698_1291858718();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_1291858747 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291858752 = [mnewString(0)];
    fmtRes_1291858752[0].push.apply(fmtRes_1291858752[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858752, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_1291858747 || [],fmtRes_1291858752[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858746;

}

function logOptionsScript_1291858755_1291858762() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym578_1291858763 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym578_1291858763)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291858760(get_1291854182(rHEX60gensym578_1291858763));
  };

  
}

function logOptionsApi_1291858789(HEX3Atmp_1291858757) {
  var result_1291858790 = null;

    result_1291858790 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291858755_1291858762();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_1291858791 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291858796 = [mnewString(0)];
    fmtRes_1291858796[0].push.apply(fmtRes_1291858796[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858796, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_1291858791 || [],fmtRes_1291858796[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858790;

}

function clearCommandsScript_1291858799_1291858807(context_1291858808) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym587_1291858809 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym587_1291858809)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291858804(get_1291854182(rHEX60gensym587_1291858809), context_1291858808);
  };

  
}

function clearCommandsApi_1291858836(HEX3Atmp_1291858801) {
  var result_1291858837 = null;

    result_1291858837 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291858799_1291858807(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858801, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_1291858843 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291858848 = [mnewString(0)];
    fmtRes_1291858848[0].push.apply(fmtRes_1291858848[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858848, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_1291858843 || [],fmtRes_1291858848[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858837;

}

function toJson_2801807244(a_2801807246, opt_2801807247) {
  var result_2801807248 = null;

    result_2801807248 = HEX25_1627391779(a_2801807246);

  return result_2801807248;

}

function toJson_1291859119(a_1291859121, opt_1291859122) {
  var result_1291859123 = null;

    result_1291859123 = newJArray_1627390082();
    Label1: {
      var ai_1291859130 = 0;
      var i_536871156 = 0;
      var L_536871157 = (a_1291859121).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871156 < L_536871157)) break Label3;
            ai_1291859130 = a_1291859121[chckIndx(i_536871156, 0, (a_1291859121).length - 1)];
            add_1627390190(result_1291859123, toJson_2801807244(ai_1291859130, opt_1291859122));
            i_536871156 = addInt(i_536871156, 1);
            if (!(((a_1291859121).length == L_536871157))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291859123;

}

function getAllEditorsScript_1291858855_1291859088() {
  var result_1291859089 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym595_1291859090 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym595_1291859090)) {
      break BeforeRet;
      }
      
    };
    result_1291859089 = nimCopy(null, getAllEditors_1291858860(get_1291854182(rHEX60gensym595_1291859090)), NTI1291854679);
  };

  return result_1291859089;

}

function getAllEditorsApi_1291859117(HEX3Atmp_1291858857) {
  var result_1291859118 = null;

  BeforeRet: {
    result_1291859118 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859118 = toJson_1291859119(getAllEditorsScript_1291858855_1291859088(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym601_1291859135 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291859140 = [mnewString(0)];
    fmtRes_1291859140[0].push.apply(fmtRes_1291859140[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859140, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym601_1291859135 || [],fmtRes_1291859140[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859118;

}

function setModeScript22_1291859158_1291859198(mode_1291859199) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym607_1291859200 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym607_1291859200)) {
      break BeforeRet;
      }
      
    };
    setMode_1291859163(get_1291854182(rHEX60gensym607_1291859200), mode_1291859199);
  };

  
}

function setModeApi22_1291859227(HEX3Atmp_1291859160) {
  var result_1291859228 = null;

    result_1291859228 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291859158_1291859198(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859160, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_1291859234 = [115,101,116,77,111,100,101];
    var fmtRes_1291859239 = [mnewString(0)];
    fmtRes_1291859239[0].push.apply(fmtRes_1291859239[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859239, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_1291859234 || [],fmtRes_1291859239[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859228;

}

function modeScript22_1291859243_1291859251() {
  var result_1291859252 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym618_1291859253 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym618_1291859253)) {
      break BeforeRet;
      }
      
    };
    result_1291859252 = nimCopy(null, mode_1291859248(get_1291854182(rHEX60gensym618_1291859253)), NTI33554449);
  };

  return result_1291859252;

}

function modeApi22_1291859280(HEX3Atmp_1291859245) {
  var result_1291859281 = null;

  BeforeRet: {
    result_1291859281 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859281 = toJson_1811939932(modeScript22_1291859243_1291859251(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym624_1291859286 = [109,111,100,101];
    var fmtRes_1291859291 = [mnewString(0)];
    fmtRes_1291859291[0].push.apply(fmtRes_1291859291[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859291, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym624_1291859286 || [],fmtRes_1291859291[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859281;

}

function getContextWithModeScript22_1291859294_1291859303(context_1291859304) {
  var result_1291859305 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym628_1291859306 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym628_1291859306)) {
      break BeforeRet;
      }
      
    };
    result_1291859305 = nimCopy(null, getContextWithMode_1291859299(get_1291854182(rHEX60gensym628_1291859306), context_1291859304), NTI33554449);
  };

  return result_1291859305;

}

function getContextWithModeApi22_1291859334(HEX3Atmp_1291859296) {
  var result_1291859335 = null;

  BeforeRet: {
    result_1291859335 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859335 = toJson_1811939932(getContextWithModeScript22_1291859294_1291859303(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859296, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym634_1291859345 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291859350 = [mnewString(0)];
    fmtRes_1291859350[0].push.apply(fmtRes_1291859350[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859350, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym634_1291859345 || [],fmtRes_1291859350[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859335;

}

function scriptRunActionScript_1291859580_1291859590(action_1291859591, arg_1291859592) {
    scriptRunAction_1291859584(action_1291859591, arg_1291859592);

  
}

function scriptRunActionApi_1291859597(HEX3Atmp_1291859582) {
  var result_1291859598 = null;

    result_1291859598 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291859580_1291859590(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859582, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859582, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym649_1291859609 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291859614 = [mnewString(0)];
    fmtRes_1291859614[0].push.apply(fmtRes_1291859614[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859614, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym649_1291859609 || [],fmtRes_1291859614[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859598;

}

function scriptLogScript_1291859617_1291859628(message_1291859629) {
    scriptLog_1291859621(message_1291859629);

  
}

function scriptLogApi_1291859633(HEX3Atmp_1291859619) {
  var result_1291859634 = null;

    result_1291859634 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291859617_1291859628(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859619, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym656_1291859640 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291859645 = [mnewString(0)];
    fmtRes_1291859645[0].push.apply(fmtRes_1291859645[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859645, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym656_1291859640 || [],fmtRes_1291859645[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859634;

}

function addCommandScriptScript_1291859648_1291859660(context_1291859661, keys_1291859662, action_1291859663, arg_1291859664) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym664_1291859665 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym664_1291859665)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291859653(get_1291854182(rHEX60gensym664_1291859665), context_1291859661, keys_1291859662, action_1291859663, arg_1291859664);
  };

  
}

function addCommandScriptApi_1291859695(HEX3Atmp_1291859650) {
      var Temporary6;

  var result_1291859696 = null;

    result_1291859696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291859650))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859650, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291859648_1291859660(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859650, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859650, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859650, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym669_1291859717 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291859722 = [mnewString(0)];
    fmtRes_1291859722[0].push.apply(fmtRes_1291859722[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859722, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym669_1291859717 || [],fmtRes_1291859722[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859696;

}

function removeCommandScript_1291859731_1291859740(context_1291859741, keys_1291859742) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym675_1291859743 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym675_1291859743)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291859736(get_1291854182(rHEX60gensym675_1291859743), context_1291859741, keys_1291859742);
  };

  
}

function removeCommandApi_1291859771(HEX3Atmp_1291859733) {
  var result_1291859772 = null;

    result_1291859772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291859731_1291859740(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859733, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859733, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym680_1291859783 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291859788 = [mnewString(0)];
    fmtRes_1291859788[0].push.apply(fmtRes_1291859788[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859788, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym680_1291859783 || [],fmtRes_1291859788[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859772;

}

function getActivePopupScript_1291859793_1291859811() {
  var result_1291859812 = 0;

    result_1291859812 = getActivePopup_1291859797();

  return result_1291859812;

}

function getActivePopupApi_1291859816(HEX3Atmp_1291859795) {
  var result_1291859817 = null;

  BeforeRet: {
    result_1291859817 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859817 = toJson_2801807244(getActivePopupScript_1291859793_1291859811(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym687_1291859822 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291859827 = [mnewString(0)];
    fmtRes_1291859827[0].push.apply(fmtRes_1291859827[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859827, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym687_1291859822 || [],fmtRes_1291859827[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859817;

}

function getActiveEditorScript_1291859830_1291859842() {
  var result_1291859843 = 0;

    result_1291859843 = getActiveEditor_1291859834();

  return result_1291859843;

}

function getActiveEditorApi_1291859847(HEX3Atmp_1291859832) {
  var result_1291859848 = null;

  BeforeRet: {
    result_1291859848 = newJNull_1627390049();
++excHandler;
    try {
    result_1291859848 = toJson_2801807244(getActiveEditorScript_1291859830_1291859842(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym695_1291859853 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291859858 = [mnewString(0)];
    fmtRes_1291859858[0].push.apply(fmtRes_1291859858[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859858, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym695_1291859853 || [],fmtRes_1291859858[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859848;

}

function loadCurrentConfigScript_1291859904_1291859916() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym707_1291859917 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym707_1291859917)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291859909(get_1291854182(rHEX60gensym707_1291859917));
  };

  
}

function loadCurrentConfigApi_1291859943(HEX3Atmp_1291859906) {
  var result_1291859944 = null;

    result_1291859944 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291859904_1291859916();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym712_1291859945 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291859950 = [mnewString(0)];
    fmtRes_1291859950[0].push.apply(fmtRes_1291859950[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859950, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym712_1291859945 || [],fmtRes_1291859950[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859944;

}

function sourceCurrentDocumentScript_1291859953_1291859983() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_1291859984 = getEditor_1291854108();
      if (isNone_1291854162(rHEX60gensym715_1291859984)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291859958(get_1291854182(rHEX60gensym715_1291859984));
  };

  
}

function sourceCurrentDocumentApi_1291860010(HEX3Atmp_1291859955) {
  var result_1291860011 = null;

    result_1291860011 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291859953_1291859983();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_1291860012 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291860017 = [mnewString(0)];
    fmtRes_1291860017[0].push.apply(fmtRes_1291860017[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860017, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_1291860012 || [],fmtRes_1291860017[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860011;

}

function getEditorScript_1291860020_1291860033(index_1291860034) {
  var result_1291860035 = 0;

    result_1291860035 = getEditor_1291860024(index_1291860034);

  return result_1291860035;

}

function getEditorApi_1291860040(HEX3Atmp_1291860022) {
  var result_1291860041 = null;

  BeforeRet: {
    result_1291860041 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860041 = toJson_2801807244(getEditorScript_1291860020_1291860033(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860022, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_1291860051 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291860056 = [mnewString(0)];
    fmtRes_1291860056[0].push.apply(fmtRes_1291860056[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860056, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_1291860051 || [],fmtRes_1291860056[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860041;

}

function scriptIsTextEditorScript_1291860059_1291860101(editorId_1291860102) {
  var result_1291860103 = false;

    result_1291860103 = scriptIsTextEditor_1291860063(editorId_1291860102);

  return result_1291860103;

}

function scriptIsTextEditorApi_1291860108(HEX3Atmp_1291860061) {
  var result_1291860109 = null;

  BeforeRet: {
    result_1291860109 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860109 = toJson_2801811058(scriptIsTextEditorScript_1291860059_1291860101(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860061, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_1291860119 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291860124 = [mnewString(0)];
    fmtRes_1291860124[0].push.apply(fmtRes_1291860124[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860124, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_1291860119 || [],fmtRes_1291860124[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860109;

}

function scriptIsAstEditorScript_1291860128_1291860170(editorId_1291860171) {
  var result_1291860172 = false;

    result_1291860172 = scriptIsAstEditor_1291860132(editorId_1291860171);

  return result_1291860172;

}

function scriptIsAstEditorApi_1291860177(HEX3Atmp_1291860130) {
  var result_1291860178 = null;

  BeforeRet: {
    result_1291860178 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860178 = toJson_2801811058(scriptIsAstEditorScript_1291860128_1291860170(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860130, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym748_1291860188 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291860193 = [mnewString(0)];
    fmtRes_1291860193[0].push.apply(fmtRes_1291860193[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860193, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym748_1291860188 || [],fmtRes_1291860193[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860178;

}

function scriptRunActionForScript_1291860196_1291860263(editorId_1291860264, action_1291860265, arg_1291860266) {
    scriptRunActionFor_1291860200(editorId_1291860264, action_1291860265, arg_1291860266);

  
}

function scriptRunActionForApi_1291860272(HEX3Atmp_1291860198) {
  var result_1291860273 = null;

    result_1291860273 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291860196_1291860263(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860198, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860198, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860198, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym758_1291860289 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291860294 = [mnewString(0)];
    fmtRes_1291860294[0].push.apply(fmtRes_1291860294[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860294, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym758_1291860289 || [],fmtRes_1291860294[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860273;

}

function scriptInsertTextIntoScript_1291860297_1291860335(editorId_1291860336, text_1291860337) {
    scriptInsertTextInto_1291860301(editorId_1291860336, text_1291860337);

  
}

function scriptInsertTextIntoApi_1291860342(HEX3Atmp_1291860299) {
  var result_1291860343 = null;

    result_1291860343 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291860297_1291860335(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860299, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860299, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym768_1291860354 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291860359 = [mnewString(0)];
    fmtRes_1291860359[0].push.apply(fmtRes_1291860359[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860359, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym768_1291860354 || [],fmtRes_1291860359[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860343;

}

function toJson_2801807231(a_2801807233, opt_2801807234) {
  var result_2801807235 = null;

    result_2801807235 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801807235, [108,105,110,101], toJson_2801807244(a_2801807233["Field0"], opt_2801807234));
    HEX5BHEX5DHEX3D_1627391903(result_2801807235, [99,111,108,117,109,110], toJson_2801807244(a_2801807233["Field1"], opt_2801807234));

  return result_2801807235;

}

function toJson_2801807218(a_2801807220, opt_2801807221) {
  var result_2801807222 = null;

    result_2801807222 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801807222, [102,105,114,115,116], toJson_2801807231(a_2801807220["Field0"], opt_2801807221));
    HEX5BHEX5DHEX3D_1627391903(result_2801807222, [108,97,115,116], toJson_2801807231(a_2801807220["Field1"], opt_2801807221));

  return result_2801807222;

}

function scriptTextEditorSelectionScript_1291860362_1291860405(editorId_1291860406) {
  var result_1291860407 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291860407 = nimCopy(result_1291860407, scriptTextEditorSelection_1291860366(editorId_1291860406), NTI2415919115);

  return result_1291860407;

}

function scriptTextEditorSelectionApi_1291860412(HEX3Atmp_1291860364) {
  var result_1291860413 = null;

  BeforeRet: {
    result_1291860413 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860413 = toJson_2801807218(scriptTextEditorSelectionScript_1291860362_1291860405(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860364, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym777_1291860423 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860428 = [mnewString(0)];
    fmtRes_1291860428[0].push.apply(fmtRes_1291860428[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860428, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym777_1291860423 || [],fmtRes_1291860428[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860413;

}

function scriptSetTextEditorSelectionScript_1291860435_1291860477(editorId_1291860478, selection_1291860479) {
    scriptSetTextEditorSelection_1291860439(editorId_1291860478, selection_1291860479);

  
}

function fromJson_2801807029(a_2801807031, b_2801807032, opt_2801807033) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801807032, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2801807032}));
    }
    
    if (!((b_2801807032.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2801807032.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2801807059 = 0;
    var numMatchedHEX60gensym25_2801807060 = 0;
    numHEX60gensym25_2801807059 = addInt(numHEX60gensym25_2801807059, 1);
    if (hasKey_1627393154(b_2801807032, [108,105,110,101])) {
    numMatchedHEX60gensym25_2801807060 = addInt(numMatchedHEX60gensym25_2801807060, 1);
    fromJson_2801806132(a_2801807031, "Field0", HEX5BHEX5D_1627393037(b_2801807032, [108,105,110,101]), opt_2801807033);
    }
    else {
    if (opt_2801807033.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2801807032, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2801807059 = addInt(numHEX60gensym25_2801807059, 1);
    if (hasKey_1627393154(b_2801807032, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2801807060 = addInt(numMatchedHEX60gensym25_2801807060, 1);
    fromJson_2801806132(a_2801807031, "Field1", HEX5BHEX5D_1627393037(b_2801807032, [99,111,108,117,109,110]), opt_2801807033);
    }
    else {
    if (opt_2801807033.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2801807032, 2)]));
      }
      
    }
    }
    if ((opt_2801807033.allowExtraKeys && opt_2801807033.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2801807033.allowExtraKeys) {
    if (!((numHEX60gensym25_2801807059 == numMatchedHEX60gensym25_2801807060))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2801807059 == numMatchedHEX60gensym25_2801807060);
    }
    else {
    if (opt_2801807033.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2801807032) == numMatchedHEX60gensym25_2801807060);
    }
    else {
    Temporary1 = ((len_1627392983(b_2801807032) == numHEX60gensym25_2801807059) && (numHEX60gensym25_2801807059 == numMatchedHEX60gensym25_2801807060));
    }
    }}
    var okHEX60gensym25_2801807121 = Temporary1;
    if (!(okHEX60gensym25_2801807121)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2801807032)), HEX24_369098760(numHEX60gensym25_2801807059), [67,117,114,115,111,114], pretty_1627394477(b_2801807032, 2)]));
    }
    

  
}

function fromJson_2801806975(a_2801806977, b_2801806978, opt_2801806979) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801806978, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2801806978}));
    }
    
    if (!((b_2801806978.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2801806978.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2801807005 = 0;
    var numMatchedHEX60gensym25_2801807006 = 0;
    numHEX60gensym25_2801807005 = addInt(numHEX60gensym25_2801807005, 1);
    if (hasKey_1627393154(b_2801806978, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2801807006 = addInt(numMatchedHEX60gensym25_2801807006, 1);
    fromJson_2801807029(a_2801806977["Field0"], HEX5BHEX5D_1627393037(b_2801806978, [102,105,114,115,116]), opt_2801806979);
    }
    else {
    if (opt_2801806979.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801806978, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2801807005 = addInt(numHEX60gensym25_2801807005, 1);
    if (hasKey_1627393154(b_2801806978, [108,97,115,116])) {
    numMatchedHEX60gensym25_2801807006 = addInt(numMatchedHEX60gensym25_2801807006, 1);
    fromJson_2801807029(a_2801806977["Field1"], HEX5BHEX5D_1627393037(b_2801806978, [108,97,115,116]), opt_2801806979);
    }
    else {
    if (opt_2801806979.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801806978, 2)]));
      }
      
    }
    }
    if ((opt_2801806979.allowExtraKeys && opt_2801806979.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2801806979.allowExtraKeys) {
    if (!((numHEX60gensym25_2801807005 == numMatchedHEX60gensym25_2801807006))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2801807005 == numMatchedHEX60gensym25_2801807006);
    }
    else {
    if (opt_2801806979.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2801806978) == numMatchedHEX60gensym25_2801807006);
    }
    else {
    Temporary1 = ((len_1627392983(b_2801806978) == numHEX60gensym25_2801807005) && (numHEX60gensym25_2801807005 == numMatchedHEX60gensym25_2801807006));
    }
    }}
    var okHEX60gensym25_2801807159 = Temporary1;
    if (!(okHEX60gensym25_2801807159)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2801806978)), HEX24_369098760(numHEX60gensym25_2801807005), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801806978, 2)]));
    }
    

  
}

function jsonTo_2801808131(b_2801808133, opt_2801808135) {
  var result_2801808136 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2801806975(result_2801808136[0], b_2801808133, opt_2801808135);

  return result_2801808136[0];

}

function scriptSetTextEditorSelectionApi_1291860484(HEX3Atmp_1291860437) {
  var result_1291860485 = null;

    result_1291860485 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291860435_1291860477(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860437, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801808131(HEX5BHEX5D_1627393116(HEX3Atmp_1291860437, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym786_1291860496 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291860501 = [mnewString(0)];
    fmtRes_1291860501[0].push.apply(fmtRes_1291860501[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860501, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym786_1291860496 || [],fmtRes_1291860501[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860485;

}

function toJson_2801807206(a_2801807208, opt_2801807209) {
  var result_2801807210 = null;

    result_2801807210 = newJArray_1627390082();
    Label1: {
      var ai_2801807217 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871191 = 0;
      var L_536871192 = (a_2801807208).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871191 < L_536871192)) break Label3;
            ai_2801807217 = a_2801807208[chckIndx(i_536871191, 0, (a_2801807208).length - 1)];
            add_1627390190(result_2801807210, toJson_2801807218(ai_2801807217, opt_2801807209));
            i_536871191 = addInt(i_536871191, 1);
            if (!(((a_2801807208).length == L_536871192))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2801807210;

}

function scriptTextEditorSelectionsScript_1291860504_1291860555(editorId_1291860556) {
  var result_1291860557 = [];

    result_1291860557 = nimCopy(null, scriptTextEditorSelections_1291860508(editorId_1291860556), NTI1291855996);

  return result_1291860557;

}

function scriptTextEditorSelectionsApi_1291860562(HEX3Atmp_1291860506) {
  var result_1291860563 = null;

  BeforeRet: {
    result_1291860563 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860563 = toJson_2801807206(scriptTextEditorSelectionsScript_1291860504_1291860555(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860506, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym795_1291860573 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860578 = [mnewString(0)];
    fmtRes_1291860578[0].push.apply(fmtRes_1291860578[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860578, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym795_1291860573 || [],fmtRes_1291860578[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860563;

}

function scriptSetTextEditorSelectionsScript_1291860581_1291860623(editorId_1291860624, selections_1291860625) {
    scriptSetTextEditorSelections_1291860585(editorId_1291860624, selections_1291860625);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet302[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2801806920(a_2801806922, a_2801806922_Idx, b_2801806923, opt_2801806924) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801806923, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2801806923}));
    }
    
    if (a_2801806922[a_2801806922_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2801806923), 0, 2147483647), Temporary1)) { for (var i = a_2801806922[a_2801806922_Idx].length ; i < Temporary1 ; ++i) a_2801806922[a_2801806922_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2801806922[a_2801806922_Idx].length = Temporary1; };
    Label2: {
      var i_2801806973 = 0;
      var val_2801806974 = null;
      var colontmp__536871197 = [];
      colontmp__536871197 = getElems_1627390175(b_2801806923, []);
      var i_536871199 = 0;
      var L_536871200 = (colontmp__536871197).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871199 < L_536871200)) break Label4;
            i_2801806973 = i_536871199;
            val_2801806974 = colontmp__536871197[chckIndx(i_536871199, 0, (colontmp__536871197).length - 1)];
            fromJson_2801806975(a_2801806922[a_2801806922_Idx][chckIndx(i_2801806973, 0, (a_2801806922[a_2801806922_Idx]).length - 1)], val_2801806974, opt_2801806924);
            i_536871199 = addInt(i_536871199, 1);
            if (!(((colontmp__536871197).length == L_536871200))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2801806914(b_2801806916, opt_2801806918) {
  var result_2801806919 = [[]];

    fromJson_2801806920(result_2801806919, 0, b_2801806916, opt_2801806918);

  return result_2801806919[0];

}

function scriptSetTextEditorSelectionsApi_1291860630(HEX3Atmp_1291860583) {
  var result_1291860631 = null;

    result_1291860631 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291860581_1291860623(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860583, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806914(HEX5BHEX5D_1627393116(HEX3Atmp_1291860583, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym804_1291860642 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291860647 = [mnewString(0)];
    fmtRes_1291860647[0].push.apply(fmtRes_1291860647[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860647, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym804_1291860642 || [],fmtRes_1291860647[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860631;

}

function scriptGetTextEditorLineScript_1291860650_1291860697(editorId_1291860698, line_1291860699) {
  var result_1291860700 = [];

    result_1291860700 = nimCopy(null, scriptGetTextEditorLine_1291860654(editorId_1291860698, line_1291860699), NTI33554449);

  return result_1291860700;

}

function scriptGetTextEditorLineApi_1291860706(HEX3Atmp_1291860652) {
  var result_1291860707 = null;

  BeforeRet: {
    result_1291860707 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860707 = toJson_1811939932(scriptGetTextEditorLineScript_1291860650_1291860697(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860652, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860652, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym814_1291860722 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291860727 = [mnewString(0)];
    fmtRes_1291860727[0].push.apply(fmtRes_1291860727[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860727, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym814_1291860722 || [],fmtRes_1291860727[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860707;

}

function scriptGetTextEditorLineCountScript_1291860730_1291860776(editorId_1291860777) {
  var result_1291860778 = 0;

    result_1291860778 = scriptGetTextEditorLineCount_1291860734(editorId_1291860777);

  return result_1291860778;

}

function scriptGetTextEditorLineCountApi_1291860783(HEX3Atmp_1291860732) {
  var result_1291860784 = null;

  BeforeRet: {
    result_1291860784 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291860784 = toJson_2801807244(scriptGetTextEditorLineCountScript_1291860730_1291860776(jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860732, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym824_1291860794 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291860799 = [mnewString(0)];
    fmtRes_1291860799[0].push.apply(fmtRes_1291860799[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860799, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym824_1291860794 || [],fmtRes_1291860799[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860784;

}

function scriptGetOptionIntScript_1291860813_1291860829(path_1291860830, default_1291860831) {
  var result_1291860832 = 0;

    result_1291860832 = scriptGetOptionInt_1291860817(path_1291860830, default_1291860831);

  return result_1291860832;

}

function scriptGetOptionIntApi_1291860838(HEX3Atmp_1291860815) {
  var result_1291860839 = null;

  BeforeRet: {
    result_1291860839 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860839 = toJson_2801807244(scriptGetOptionIntScript_1291860813_1291860829(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860815, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291860815, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym834_1291860854 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860859 = [mnewString(0)];
    fmtRes_1291860859[0].push.apply(fmtRes_1291860859[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860859, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym834_1291860854 || [],fmtRes_1291860859[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860839;

}

function scriptGetOptionFloatScript_1291860863_1291860879(path_1291860880, default_1291860881) {
  var result_1291860882 = 0.0;

    result_1291860882 = scriptGetOptionFloat_1291860867(path_1291860880, default_1291860881);

  return result_1291860882;

}

function initFromJson_1291860927(dst_1291860929, dst_1291860929_Idx, jsonNode_1291860930, jsonPath_1291860931, jsonPath_1291860931_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291860930.kind == 4)) {
    var Temporary1 = jsonNode_1291860930;
    if (ConstSet303[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291860936 = NaN;
      dst_1291860929[dst_1291860929_Idx] = b_1291860936;
      break;
    case "inf":
      var b_1291860937 = Infinity;
      dst_1291860929[dst_1291860929_Idx] = b_1291860937;
      break;
    case "-inf":
      var b_1291860938 = -Infinity;
      dst_1291860929[dst_1291860929_Idx] = b_1291860938;
      break;
    default: 
      var Temporary2 = jsonNode_1291860930;
      if (ConstSet304[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291860930, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291860931[jsonPath_1291860931_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet305[jsonNode_1291860930.kind] != undefined))) {
      var msgHEX60gensym848_1291860952 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet306), nimCopy(null, jsonPath_1291860931[jsonPath_1291860931_Idx], NTI33554449), reprEnum(jsonNode_1291860930.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym848_1291860952, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291860930.kind == 3)) {
      var Temporary3 = jsonNode_1291860930;
      if (ConstSet307[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291860929[dst_1291860929_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291860930;
        if (ConstSet308[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291860929[dst_1291860929_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291860916(node_1291860919) {
  var result_1291860921 = [0.0];

    var jsonPath_1291860922 = [[]];
    result_1291860921[0] = 0.0;
    initFromJson_1291860927(result_1291860921, 0, node_1291860919, jsonPath_1291860922, 0);

  return result_1291860921[0];

}

function fromJson_1291860901(a_1291860903, a_1291860903_Idx, b_1291860904, opt_1291860905) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291860904, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291860904}));
    }
    
    a_1291860903[a_1291860903_Idx] = to_1291860916(b_1291860904);

  
}

function jsonTo_1291860895(b_1291860897, opt_1291860899) {
  var result_1291860900 = [0.0];

    fromJson_1291860901(result_1291860900, 0, b_1291860897, opt_1291860899);

  return result_1291860900[0];

}

function scriptGetOptionFloatApi_1291860888(HEX3Atmp_1291860865) {
  var result_1291860889 = null;

  BeforeRet: {
    result_1291860889 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860889 = toJson_1291854844(scriptGetOptionFloatScript_1291860863_1291860879(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860865, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860895(HEX5BHEX5D_1627393116(HEX3Atmp_1291860865, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym844_1291860962 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860967 = [mnewString(0)];
    fmtRes_1291860967[0].push.apply(fmtRes_1291860967[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860967, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym844_1291860962 || [],fmtRes_1291860967[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860889;

}

function scriptGetOptionBoolScript_1291860971_1291860987(path_1291860988, default_1291860989) {
  var result_1291860990 = false;

    result_1291860990 = scriptGetOptionBool_1291860975(path_1291860988, default_1291860989);

  return result_1291860990;

}

function scriptGetOptionBoolApi_1291860996(HEX3Atmp_1291860973) {
  var result_1291860997 = null;

  BeforeRet: {
    result_1291860997 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860997 = toJson_2801811058(scriptGetOptionBoolScript_1291860971_1291860987(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860973, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291860973, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym860_1291861012 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861017 = [mnewString(0)];
    fmtRes_1291861017[0].push.apply(fmtRes_1291861017[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861017, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym860_1291861012 || [],fmtRes_1291861017[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860997;

}

function scriptGetOptionStringScript_1291861021_1291861037(path_1291861038, default_1291861039) {
  var result_1291861040 = [];

    result_1291861040 = nimCopy(null, scriptGetOptionString_1291861025(path_1291861038, default_1291861039), NTI33554449);

  return result_1291861040;

}

function scriptGetOptionStringApi_1291861046(HEX3Atmp_1291861023) {
  var result_1291861047 = null;

  BeforeRet: {
    result_1291861047 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291861047 = toJson_1811939932(scriptGetOptionStringScript_1291861021_1291861037(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861023, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861023, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_1291861062 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861067 = [mnewString(0)];
    fmtRes_1291861067[0].push.apply(fmtRes_1291861067[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861067, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_1291861062 || [],fmtRes_1291861067[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291861047;

}

function scriptSetOptionIntScript_1291861071_1291861120(path_1291861121, value_1291861122) {
    scriptSetOptionInt_1291861075(path_1291861121, value_1291861122);

  
}

function scriptSetOptionIntApi_1291861127(HEX3Atmp_1291861073) {
  var result_1291861128 = null;

    result_1291861128 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291861071_1291861120(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861073, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291861073, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_1291861139 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291861144 = [mnewString(0)];
    fmtRes_1291861144[0].push.apply(fmtRes_1291861144[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861144, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_1291861139 || [],fmtRes_1291861144[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861128;

}

function scriptSetOptionFloatScript_1291861153_1291861202(path_1291861203, value_1291861204) {
    scriptSetOptionFloat_1291861157(path_1291861203, value_1291861204);

  
}

function scriptSetOptionFloatApi_1291861209(HEX3Atmp_1291861155) {
  var result_1291861210 = null;

    result_1291861210 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291861153_1291861202(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861155, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291860895(HEX5BHEX5D_1627393116(HEX3Atmp_1291861155, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_1291861221 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291861226 = [mnewString(0)];
    fmtRes_1291861226[0].push.apply(fmtRes_1291861226[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861226, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_1291861221 || [],fmtRes_1291861226[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861210;

}

function scriptSetOptionBoolScript_1291861235_1291861284(path_1291861285, value_1291861286) {
    scriptSetOptionBool_1291861239(path_1291861285, value_1291861286);

  
}

function scriptSetOptionBoolApi_1291861291(HEX3Atmp_1291861237) {
  var result_1291861292 = null;

    result_1291861292 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291861235_1291861284(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861237, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_1291861237, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym907_1291861303 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291861308 = [mnewString(0)];
    fmtRes_1291861308[0].push.apply(fmtRes_1291861308[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861308, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym907_1291861303 || [],fmtRes_1291861308[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861292;

}

function scriptSetOptionStringScript_1291861317_1291861366(path_1291861367, value_1291861368) {
    scriptSetOptionString_1291861321(path_1291861367, value_1291861368);

  
}

function scriptSetOptionStringApi_1291861373(HEX3Atmp_1291861319) {
  var result_1291861374 = null;

    result_1291861374 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291861317_1291861366(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861319, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861319, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym921_1291861385 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291861390 = [mnewString(0)];
    fmtRes_1291861390[0].push.apply(fmtRes_1291861390[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861390, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym921_1291861385 || [],fmtRes_1291861390[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861374;

}

function scriptSetCallbackScript_1291861399_1291861455(path_1291861456, id_1291861457) {
    scriptSetCallback_1291861403(path_1291861456, id_1291861457);

  
}

function scriptSetCallbackApi_1291861462(HEX3Atmp_1291861401) {
  var result_1291861463 = null;

    result_1291861463 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291861399_1291861455(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291861401, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_1291861401, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym935_1291861474 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291861479 = [mnewString(0)];
    fmtRes_1291861479[0].push.apply(fmtRes_1291861479[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291861479, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym935_1291861474 || [],fmtRes_1291861479[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291861463;

}

function dispatch_1291861490(command_1291861489, arg_1291861488) {
    var Temporary1;

  var result_1291861492 = ({val: null});

    switch (toJSStr(command_1291861489)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2801813366(getBackendApi_1291854207(arg_1291861488));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2801813366(saveAppStateApi_1291855097(arg_1291861488));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2801813366(requestRenderApi_1291855216(arg_1291861488));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2801813366(setHandleInputsApi_1291855271(arg_1291861488));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2801813366(setHandleActionsApi_1291855331(arg_1291861488));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2801813366(setConsumeAllActionsApi_1291855391(arg_1291861488));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2801813366(setConsumeAllInputApi_1291855451(arg_1291861488));
      break;
    case "clearWorkspaceCaches":
    case "clear-workspace-caches":
      Temporary1 = some_2801813366(clearWorkspaceCachesApi_1291855586(arg_1291861488));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2801813366(openGithubWorkspaceApi_1291855643(arg_1291861488));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2801813366(openAbsytreeServerWorkspaceApi_1291855719(arg_1291861488));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2801813366(getFlagApi2_1291855786(arg_1291861488));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2801813366(setFlagApi2_1291855906(arg_1291861488));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2801813366(toggleFlagApi_1291855969(arg_1291861488));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2801813366(setOptionApi_1291856063(arg_1291861488));
      break;
    case "quit":
      Temporary1 = some_2801813366(quitApi_1291856117(arg_1291861488));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2801813366(changeFontSizeApi_1291856164(arg_1291861488));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2801813366(changeLayoutPropApi_1291856468(arg_1291861488));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2801813366(toggleStatusBarLocationApi_1291856529(arg_1291861488));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2801813366(createViewApi_1291856578(arg_1291861488));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2801813366(closeCurrentViewApi_1291856657(arg_1291861488));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2801813366(moveCurrentViewToTopApi_1291856742(arg_1291861488));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2801813366(nextViewApi_1291856793(arg_1291861488));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2801813366(prevViewApi_1291856846(arg_1291861488));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2801813366(moveCurrentViewPrevApi_1291856913(arg_1291861488));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2801813366(moveCurrentViewNextApi_1291856977(arg_1291861488));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2801813366(setLayoutApi_1291857060(arg_1291861488));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2801813366(commandLineApi_1291857116(arg_1291861488));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2801813366(exitCommandLineApi_1291857169(arg_1291861488));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2801813366(executeCommandLineApi_1291857222(arg_1291861488));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2801813366(writeFileApi_1291857321(arg_1291861488));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2801813366(loadFileApi_1291857390(arg_1291861488));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2801813366(openFileApi_1291857509(arg_1291861488));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2801813366(removeFromLocalStorageApi_1291857633(arg_1291861488));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2801813366(loadThemeApi_1291857716(arg_1291861488));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2801813366(chooseThemeApi_1291858043(arg_1291861488));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2801813366(chooseFileApi_1291858606(arg_1291861488));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2801813366(setGithubAccessTokenApi_1291858683(arg_1291861488));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2801813366(reloadConfigApi_1291858745(arg_1291861488));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2801813366(logOptionsApi_1291858789(arg_1291861488));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2801813366(clearCommandsApi_1291858836(arg_1291861488));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2801813366(getAllEditorsApi_1291859117(arg_1291861488));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801813366(setModeApi22_1291859227(arg_1291861488));
      break;
    case "mode":
      Temporary1 = some_2801813366(modeApi22_1291859280(arg_1291861488));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801813366(getContextWithModeApi22_1291859334(arg_1291861488));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2801813366(scriptRunActionApi_1291859597(arg_1291861488));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2801813366(scriptLogApi_1291859633(arg_1291861488));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2801813366(addCommandScriptApi_1291859695(arg_1291861488));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2801813366(removeCommandApi_1291859771(arg_1291861488));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2801813366(getActivePopupApi_1291859816(arg_1291861488));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2801813366(getActiveEditorApi_1291859847(arg_1291861488));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2801813366(loadCurrentConfigApi_1291859943(arg_1291861488));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2801813366(sourceCurrentDocumentApi_1291860010(arg_1291861488));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2801813366(getEditorApi_1291860040(arg_1291861488));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2801813366(scriptIsTextEditorApi_1291860108(arg_1291861488));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2801813366(scriptIsAstEditorApi_1291860177(arg_1291861488));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2801813366(scriptRunActionForApi_1291860272(arg_1291861488));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2801813366(scriptInsertTextIntoApi_1291860342(arg_1291861488));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2801813366(scriptTextEditorSelectionApi_1291860412(arg_1291861488));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2801813366(scriptSetTextEditorSelectionApi_1291860484(arg_1291861488));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2801813366(scriptTextEditorSelectionsApi_1291860562(arg_1291861488));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2801813366(scriptSetTextEditorSelectionsApi_1291860630(arg_1291861488));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2801813366(scriptGetTextEditorLineApi_1291860706(arg_1291861488));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2801813366(scriptGetTextEditorLineCountApi_1291860783(arg_1291861488));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2801813366(scriptGetOptionIntApi_1291860838(arg_1291861488));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2801813366(scriptGetOptionFloatApi_1291860888(arg_1291861488));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2801813366(scriptGetOptionBoolApi_1291860996(arg_1291861488));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2801813366(scriptGetOptionStringApi_1291861046(arg_1291861488));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2801813366(scriptSetOptionIntApi_1291861127(arg_1291861488));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2801813366(scriptSetOptionFloatApi_1291861209(arg_1291861488));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2801813366(scriptSetOptionBoolApi_1291861291(arg_1291861488));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2801813366(scriptSetOptionStringApi_1291861373(arg_1291861488));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2801813366(scriptSetCallbackApi_1291861462(arg_1291861488));
      break;
    default: 
      Temporary1 = none_2801813562();
      break;
    }
    result_1291861492 = nimCopy(result_1291861492, Temporary1, NTI2801806961);

  return result_1291861492;

}

function handleAction_1291848877(self_1291848878, action_1291848879, arg_1291848880) {
  var result_1291861719 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848879, NTI33554449), nimCopy(null, arg_1291848880, NTI33554449)])]);
++excHandler;
    try {
    if (false) {
    result_1291861719 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291861729 = [mnewString(0)];
    fmtRes_1291861729[0].push.apply(fmtRes_1291861729[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291861729, 0, action_1291848879, []);
    fmtRes_1291861729[0].push.apply(fmtRes_1291861729[0], [32]);;
    formatValue_721420459(fmtRes_1291861729, 0, arg_1291848880, []);
    fmtRes_1291861729[0].push.apply(fmtRes_1291861729[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291861729, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291861729[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291861719 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var args_1291861730 = newJArray_1627390082();
    Label2: {
      var a_1291861731 = null;
      var colontmp__536871078 = null;
      colontmp__536871078 = newStringStream_1660945417(arg_1291848880);
      var p_536871079 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871079[0], colontmp__536871078, [], false);
      try {
      var _ = getTok_1694499270(p_536871079[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871079[0].tok == 1))) break Label5;
            a_1291861731 = parseJson_1627395211(p_536871079[0], false, false, 0);
            add_1627390190(args_1291861730, a_1291861731);
          }
      };
      } finally {
      close_1694498967(p_536871079[0]);
      }
    };
    result_1291861719 = isSome_2801813630(dispatch_1291861490(action_1291848879, args_1291861730));
    break BeforeRet;
  };

  return result_1291861719;

}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet309[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_1291853201(s_1291853203) {
    var Temporary1;

  var result_1291853204 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_1291853203))) {
    case "Local":
      Temporary1 = 0;
      break;
    case "Absytreeserver":
      Temporary1 = 1;
      break;
    case "Github":
      Temporary1 = 2;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_1291853203 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1291853204 = Temporary1;

  return result_1291853204;

}

function fromJson_1291853189(a_1291853191, a_1291853191_Idx, b_1291853192, opt_1291853193) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853192, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], Field1: b_1291853192}));
    }
    
    switch (b_1291853192.kind) {
    case 2:
      a_1291853191[a_1291853191_Idx] = chckRange(getBiggestInt_1627390129(b_1291853192, 0), 0, 2);
      break;
    case 4:
      a_1291853191[a_1291853191_Idx] = parseEnum_1291853201(getStr_1627390106(b_1291853192, []));
      break;
    default: 
      if (true) {
      var fmtRes_1291853239 = [mnewString(0)];
      fmtRes_1291853239[0].push.apply(fmtRes_1291853239[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_1291853239, 0, [79,112,101,110,87,111,114,107,115,112,97,99,101,75,105,110,100], []);
      fmtRes_1291853239[0].push.apply(fmtRes_1291853239[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_1291853239, 0, pretty_1627394477(b_1291853192, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_1291853239[0]);
      }
      
      break;
    }

  
}

function fromJson_1291853304(a_1291853306, a_1291853306_Idx, b_1291853307, opt_1291853308) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291853307, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [74,115,111,110,78,111,100,101], Field1: b_1291853307}));
    }
    
    a_1291853306[a_1291853306_Idx] = b_1291853307;

  
}

function fromJson_1291853131(a_1291853133, b_1291853134, opt_1291853135) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853134, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,87,111,114,107,115,112,97,99,101], Field1: b_1291853134}));
    }
    
    if (!((b_1291853134.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853134.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853170 = 0;
    var numMatchedHEX60gensym16_1291853171 = 0;
    numHEX60gensym16_1291853170 = addInt(numHEX60gensym16_1291853170, 1);
    if (hasKey_1627393154(b_1291853134, [107,105,110,100])) {
    numMatchedHEX60gensym16_1291853171 = addInt(numMatchedHEX60gensym16_1291853171, 1);
    fromJson_1291853189(a_1291853133, "kind", HEX5BHEX5D_1627393037(b_1291853134, [107,105,110,100]), opt_1291853135);
    }
    else {
    if (opt_1291853135.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[107,105,110,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853134, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853170 = addInt(numHEX60gensym16_1291853170, 1);
    if (hasKey_1627393154(b_1291853134, [105,100])) {
    numMatchedHEX60gensym16_1291853171 = addInt(numMatchedHEX60gensym16_1291853171, 1);
    fromJson_1811939890(a_1291853133, "id", HEX5BHEX5D_1627393037(b_1291853134, [105,100]), opt_1291853135);
    }
    else {
    if (opt_1291853135.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[105,100], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853134, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853170 = addInt(numHEX60gensym16_1291853170, 1);
    if (hasKey_1627393154(b_1291853134, [110,97,109,101])) {
    numMatchedHEX60gensym16_1291853171 = addInt(numMatchedHEX60gensym16_1291853171, 1);
    fromJson_1811939890(a_1291853133, "name", HEX5BHEX5D_1627393037(b_1291853134, [110,97,109,101]), opt_1291853135);
    }
    else {
    if (opt_1291853135.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[110,97,109,101], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853134, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853170 = addInt(numHEX60gensym16_1291853170, 1);
    if (hasKey_1627393154(b_1291853134, [115,101,116,116,105,110,103,115])) {
    numMatchedHEX60gensym16_1291853171 = addInt(numMatchedHEX60gensym16_1291853171, 1);
    fromJson_1291853304(a_1291853133, "settings", HEX5BHEX5D_1627393037(b_1291853134, [115,101,116,116,105,110,103,115]), opt_1291853135);
    }
    else {
    if (opt_1291853135.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[115,101,116,116,105,110,103,115], [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853134, 2)]));
      }
      
    }
    }
    if ((opt_1291853135.allowExtraKeys && opt_1291853135.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853135.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853170 == numMatchedHEX60gensym16_1291853171))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853170 == numMatchedHEX60gensym16_1291853171);
    }
    else {
    if (opt_1291853135.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853134) == numMatchedHEX60gensym16_1291853171);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853134) == numHEX60gensym16_1291853170) && (numHEX60gensym16_1291853170 == numMatchedHEX60gensym16_1291853171));
    }
    }}
    var okHEX60gensym16_1291853327 = Temporary1;
    if (!(okHEX60gensym16_1291853327)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853134)), HEX24_369098760(numHEX60gensym16_1291853170), [79,112,101,110,87,111,114,107,115,112,97,99,101], pretty_1627394477(b_1291853134, 2)]));
    }
    

  
}

function fromJson_1291853103(a_1291853105, a_1291853105_Idx, b_1291853106, opt_1291853107) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853106, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,87,111,114,107,115,112,97,99,101,93], Field1: b_1291853106}));
    }
    
    if (a_1291853105[a_1291853105_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853106), 0, 2147483647), Temporary1)) { for (var i = a_1291853105[a_1291853105_Idx].length ; i < Temporary1 ; ++i) a_1291853105[a_1291853105_Idx].push(({kind: 0, id: [], name: [], settings: null})); }
               else { a_1291853105[a_1291853105_Idx].length = Temporary1; };
    Label2: {
      var i_1291853129 = 0;
      var val_1291853130 = null;
      var colontmp__536871224 = [];
      colontmp__536871224 = getElems_1627390175(b_1291853106, []);
      var i_536871225 = 0;
      var L_536871226 = (colontmp__536871224).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871225 < L_536871226)) break Label4;
            i_1291853129 = i_536871225;
            val_1291853130 = colontmp__536871224[chckIndx(i_536871225, 0, (colontmp__536871224).length - 1)];
            fromJson_1291853131(a_1291853105[a_1291853105_Idx][chckIndx(i_1291853129, 0, (a_1291853105[a_1291853105_Idx]).length - 1)], val_1291853130, opt_1291853107);
            i_536871225 = addInt(i_536871225, 1);
            if (!(((colontmp__536871224).length == L_536871226))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291853376(a_1291853378, b_1291853379, opt_1291853380) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853379, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853379}));
    }
    
    if (!((b_1291853379.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853379.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853415 = 0;
    var numMatchedHEX60gensym16_1291853416 = 0;
    numHEX60gensym16_1291853415 = addInt(numHEX60gensym16_1291853415, 1);
    if (hasKey_1627393154(b_1291853379, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853416 = addInt(numMatchedHEX60gensym16_1291853416, 1);
    fromJson_1811939890(a_1291853378, "filename", HEX5BHEX5D_1627393037(b_1291853379, [102,105,108,101,110,97,109,101]), opt_1291853380);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853415 = addInt(numHEX60gensym16_1291853415, 1);
    if (hasKey_1627393154(b_1291853379, [97,115,116])) {
    numMatchedHEX60gensym16_1291853416 = addInt(numMatchedHEX60gensym16_1291853416, 1);
    fromJson_2801807174(a_1291853378, "ast", HEX5BHEX5D_1627393037(b_1291853379, [97,115,116]), opt_1291853380);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853415 = addInt(numHEX60gensym16_1291853415, 1);
    if (hasKey_1627393154(b_1291853379, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853416 = addInt(numMatchedHEX60gensym16_1291853416, 1);
    fromJson_1811939890(a_1291853378, "languageID", HEX5BHEX5D_1627393037(b_1291853379, [108,97,110,103,117,97,103,101,73,68]), opt_1291853380);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853415 = addInt(numHEX60gensym16_1291853415, 1);
    if (hasKey_1627393154(b_1291853379, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853416 = addInt(numMatchedHEX60gensym16_1291853416, 1);
    fromJson_2801807174(a_1291853378, "appFile", HEX5BHEX5D_1627393037(b_1291853379, [97,112,112,70,105,108,101]), opt_1291853380);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853415 = addInt(numHEX60gensym16_1291853415, 1);
    if (hasKey_1627393154(b_1291853379, [119,111,114,107,115,112,97,99,101,73,100])) {
    numMatchedHEX60gensym16_1291853416 = addInt(numMatchedHEX60gensym16_1291853416, 1);
    fromJson_1811939890(a_1291853378, "workspaceId", HEX5BHEX5D_1627393037(b_1291853379, [119,111,114,107,115,112,97,99,101,73,100]), opt_1291853380);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,73,100], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
      }
      
    }
    }
    if ((opt_1291853380.allowExtraKeys && opt_1291853380.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853380.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853415 == numMatchedHEX60gensym16_1291853416))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853415 == numMatchedHEX60gensym16_1291853416);
    }
    else {
    if (opt_1291853380.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853379) == numMatchedHEX60gensym16_1291853416);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853379) == numHEX60gensym16_1291853415) && (numHEX60gensym16_1291853415 == numMatchedHEX60gensym16_1291853416));
    }
    }}
    var okHEX60gensym16_1291853535 = Temporary1;
    if (!(okHEX60gensym16_1291853535)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853379)), HEX24_369098760(numHEX60gensym16_1291853415), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853379, 2)]));
    }
    

  
}

function fromJson_1291853348(a_1291853350, a_1291853350_Idx, b_1291853351, opt_1291853352) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853351, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853351}));
    }
    
    if (a_1291853350[a_1291853350_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853351), 0, 2147483647), Temporary1)) { for (var i = a_1291853350[a_1291853350_Idx].length ; i < Temporary1 ; ++i) a_1291853350[a_1291853350_Idx].push(({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []})); }
               else { a_1291853350[a_1291853350_Idx].length = Temporary1; };
    Label2: {
      var i_1291853374 = 0;
      var val_1291853375 = null;
      var colontmp__536871229 = [];
      colontmp__536871229 = getElems_1627390175(b_1291853351, []);
      var i_536871230 = 0;
      var L_536871231 = (colontmp__536871229).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871230 < L_536871231)) break Label4;
            i_1291853374 = i_536871230;
            val_1291853375 = colontmp__536871229[chckIndx(i_536871230, 0, (colontmp__536871229).length - 1)];
            fromJson_1291853376(a_1291853350[a_1291853350_Idx][chckIndx(i_1291853374, 0, (a_1291853350[a_1291853350_Idx]).length - 1)], val_1291853375, opt_1291853352);
            i_536871230 = addInt(i_536871230, 1);
            if (!(((colontmp__536871229).length == L_536871231))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852905(a_1291852907, b_1291852908, opt_1291852909) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852908, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852908}));
    }
    
    if (!((b_1291852908.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852908.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852952 = 0;
    var numMatchedHEX60gensym16_1291852953 = 0;
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1811939890(a_1291852907, "theme", HEX5BHEX5D_1627393037(b_1291852908, [116,104,101,109,101]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_2801808519(a_1291852907, "fontSize", HEX5BHEX5D_1627393037(b_1291852908, [102,111,110,116,83,105,122,101]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1811939890(a_1291852907, "fontRegular", HEX5BHEX5D_1627393037(b_1291852908, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1811939890(a_1291852907, "fontBold", HEX5BHEX5D_1627393037(b_1291852908, [102,111,110,116,66,111,108,100]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1811939890(a_1291852907, "fontItalic", HEX5BHEX5D_1627393037(b_1291852908, [102,111,110,116,73,116,97,108,105,99]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1811939890(a_1291852907, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852908, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1291853103(a_1291852907, "workspaceFolders", HEX5BHEX5D_1627393037(b_1291852908, [119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[119,111,114,107,115,112,97,99,101,70,111,108,100,101,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852952 = addInt(numHEX60gensym16_1291852952, 1);
    if (hasKey_1627393154(b_1291852908, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852953 = addInt(numMatchedHEX60gensym16_1291852953, 1);
    fromJson_1291853348(a_1291852907, "openEditors", HEX5BHEX5D_1627393037(b_1291852908, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852909);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
      }
      
    }
    }
    if ((opt_1291852909.allowExtraKeys && opt_1291852909.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852909.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852952 == numMatchedHEX60gensym16_1291852953))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852952 == numMatchedHEX60gensym16_1291852953);
    }
    else {
    if (opt_1291852909.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852908) == numMatchedHEX60gensym16_1291852953);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852908) == numHEX60gensym16_1291852952) && (numHEX60gensym16_1291852952 == numMatchedHEX60gensym16_1291852953));
    }
    }}
    var okHEX60gensym16_1291853547 = Temporary1;
    if (!(okHEX60gensym16_1291853547)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852908)), HEX24_369098760(numHEX60gensym16_1291852952), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852908, 2)]));
    }
    

  
}

function jsonTo_1291852899(b_1291852901, opt_1291852903) {
  var result_1291852904 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []})];

    fromJson_1291852905(result_1291852904[0], b_1291852901, opt_1291852903);

  return result_1291852904[0];

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__536871234 = 0;
        colontmp__536871234 = len_1627395282(x_1627395286);
        var i_536871235 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536871235 < colontmp__536871234)) break Label3;
              i_1627395293 = i_536871235;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_536871235 = addInt(i_536871235, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function nosisAbsolute(path_1426063472) {
  var result_1426063473 = false;

  BeforeRet: {
    if (((path_1426063472).length == 0)) {
    result_1426063473 = false;
    break BeforeRet;
    }
    
    result_1426063473 = (path_1426063472[chckIndx(0, 0, (path_1426063472).length - 1)] == 47);
  };

  return result_1426063473;

}

function absolutePath_1426063704(path_1426063705, root_1426063706) {
    var Temporary1;

  var result_1426063707 = [];

    if (nosisAbsolute(path_1426063705)) {
    Temporary1 = path_1426063705;
    }
    else {
      if (!(nosisAbsolute(root_1426063706))) {
      raiseException({message: ([84,104,101,32,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,105,115,32,110,111,116,32,97,98,115,111,108,117,116,101,58,32] || []).concat(root_1426063706 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
    Temporary1 = nosjoinPath(root_1426063706, path_1426063705);
    }
    
    result_1426063707 = nimCopy(null, Temporary1, NTI33554449);

  return result_1426063707;

}

function nosgetCurrentDir() {
  var result_1426063698 = [];

    if (true) {
    failedAssertImpl_268435515(makeNimstrLit("ospaths2.nim(849, 7) `false` use -d:nodejs to have `getCurrentDir` defined"));
    }
    

  return result_1426063698;

}

function newWorkspaceFolderLocal_2231369832(path_2231369833) {
  var result_2231369834 = null;

    result_2231369834 = ({m_type: NTI2231369732, path: [], name: [], id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
    result_2231369834.path = nimCopy(null, path_2231369833, NTI33554449);
    var fmtRes_2231369842 = [mnewString(0)];
    fmtRes_2231369842[0].push.apply(fmtRes_2231369842[0], [76,111,99,97,108,58]);;
    formatValue_721420459(fmtRes_2231369842, 0, absolutePath_1426063704(path_2231369833, nosgetCurrentDir()), []);
    result_2231369834.name = nimCopy(null, fmtRes_2231369842[0], NTI33554449);

  return result_2231369834;

}

function newWorkspaceFolderLocal_2231369861(settings_2231369862) {
  var result_2231369863 = null;

  BeforeRet: {
    var path_2231369864 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2231369862, [112,97,116,104]), []);
    result_2231369863 = newWorkspaceFolderLocal_2231369832(path_2231369864);
    break BeforeRet;
  };

  return result_2231369863;

}

function newWorkspaceFolderAbsytreeServer_2365587879(settings_2365587880) {
  var result_2365587881 = null;

  BeforeRet: {
    var url_2365587882 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2365587880, [98,97,115,101,85,114,108]), []);
    result_2365587881 = newWorkspaceFolderAbsytreeServer_2365587855(url_2365587882);
    break BeforeRet;
  };

  return result_2365587881;

}

function newWorkspaceFolderGithub_2248149308(settings_2248149309) {
  var result_2248149310 = null;

  BeforeRet: {
    var user_2248149311 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [117,115,101,114]), []);
    var repository_2248149312 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [114,101,112,111,115,105,116,111,114,121]), []);
    var branchOrHash_2248149313 = getStr_1627390106(HEX5BHEX5D_1627393037(settings_2248149309, [98,114,97,110,99,104,79,114,72,97,115,104]), []);
    result_2248149310 = newWorkspaceFolderGithub_2248149248(user_2248149311, repository_2248149312, branchOrHash_2248149313);
    break BeforeRet;
  };

  return result_2248149310;

}

function formatValue_1291853589(result_1291853591, result_1291853591_Idx, value_1291853592, specifier_1291853593) {
    formatValue_721420459(result_1291853591, result_1291853591_Idx, reprEnum(value_1291853592, NTI1291845663), specifier_1291853593);

  
}

function new_1291853626() {
  var result_1291853629 = null;

  BeforeRet: {
    var r_1291853631 = null;
    r_1291853631 = ({m_type: NTI2785017860});
    result_1291853629 = r_1291853631;
    break BeforeRet;
  };

  return result_1291853629;

}

function getWorkspaceFolder_1291851112(self_1291851113, id_1291851114) {
  var result_1291855522 = ({val: null});

  BeforeRet: {
    Label1: {
      var wf_1291855526 = null;
      var i_536871238 = 0;
      var L_536871239 = (self_1291851113.workspace.folders).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871238 < L_536871239)) break Label3;
            wf_1291855526 = self_1291851113.workspace.folders[chckIndx(i_536871238, 0, (self_1291851113.workspace.folders).length - 1)];
            if (HEX3DHEX3D_2046820592(wf_1291855526.id, id_1291851114)) {
            result_1291855522 = nimCopy(result_1291855522, some_1291855527(wf_1291855526), NTI2164260874);
            break BeforeRet;
            }
            
            i_536871238 = addInt(i_536871238, 1);
            if (!(((self_1291851113.workspace.folders).length == L_536871239))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291855522 = nimCopy(result_1291855522, none_1291855540(), NTI2164260874);
    break BeforeRet;
  };

  return result_1291855522;

}

function newTextDocument_2801801423(filename_2801801424, app_2801801425, workspaceFolder_2801801427) {
  var result_2801801428 = null;

    result_2801801428 = newTextDocument_2801801429(filename_2801801424, [], app_2801801425);
    result_2801801428.workspace = nimCopy(result_2801801428.workspace, workspaceFolder_2801801427, NTI2164260874);
    load_2164260888(result_2801801428, []);

  return result_2801801428;

}

function newEditor_1291851116(backend_1291851117, platform_1291851118) {
    
function HEX3Aanonymous_1291851132(event_1291851150) {
        handleKeyPress_1291851070(self_1291851120, event_1291851150.Field0, event_1291851150.Field1);

      
    }
    
function HEX3Aanonymous_1291851204(event_1291851222) {
        handleKeyRelease_1291851074(self_1291851120, event_1291851222.Field0, event_1291851222.Field1);

      
    }
    
function HEX3Aanonymous_1291851253(event_1291851271) {
        handleRune_1291851078(self_1291851120, event_1291851271.Field0, event_1291851271.Field1);

      
    }
    
function HEX3Aanonymous_1291851302(event_1291851320) {
        handleMousePress_1291851082(self_1291851120, event_1291851320.Field0, event_1291851320.Field1, event_1291851320.Field2);

      
    }
    
function HEX3Aanonymous_1291851374(event_1291851392) {
        handleMouseRelease_1291851087(self_1291851120, event_1291851392.Field0, event_1291851392.Field1, event_1291851392.Field2);

      
    }
    
function HEX3Aanonymous_1291851423(event_1291851441) {
        handleMouseMove_1291851092(self_1291851120, event_1291851441.Field0, event_1291851441.Field1, event_1291851441.Field2, event_1291851441.Field3);

      
    }
    
function HEX3Aanonymous_1291851495(event_1291851513) {
        handleScroll_1291851098(self_1291851120, event_1291851513.Field1, event_1291851513.Field0, event_1291851513.Field2);

      
    }
    
function HEX3Aanonymous_1291851567(event_1291851585) {
        handleDropFile_1291851103(self_1291851120, event_1291851585.Field0, event_1291851585.Field1);

      
    }
    
function HEX3Aanonymous_1291851639() {
        self_1291851120.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852847(actionHEX60gensym75HEX60gensym76_1291852848, argHEX60gensym75HEX60gensym76_1291852849) {
          var Temporary1;

        var result_1291852850 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852835.config.handleActions) {
          var action_1291852851 = nimCopy(null, actionHEX60gensym75HEX60gensym76_1291852848, NTI33554449);
          var arg_1291852852 = nimCopy(null, argHEX60gensym75HEX60gensym76_1291852849, NTI33554449);
          if (handleAction_1291848877(self_1291851120, action_1291852851, arg_1291852852)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym75HEX60gensym76_1291852853 = Temporary1;
          if (handlerHEX60gensym75_1291852835.config.consumeAllActions) {
          result_1291852850 = 3;
          break BeforeRet;
          }
          
          result_1291852850 = responseHEX60gensym75HEX60gensym76_1291852853;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym75_1291852835.config.consumeAllActions) {
          result_1291852850 = 3;
          break BeforeRet;
          }
          else {
            result_1291852850 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852850;

      }
      
function HEX3Aanonymous_1291852855(inputHEX60gensym75HEX60gensym77_1291852856) {
        var result_1291852857 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852835.config.handleInputs) {
          var input_1291852858 = nimCopy(null, inputHEX60gensym75HEX60gensym77_1291852856, NTI33554449);
          result_1291852857 = 1;
          break BeforeRet;
          }
          else {
            result_1291852857 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852857;

      }
      
function HEX3Aanonymous_1291852878(actionHEX60gensym78HEX60gensym79_1291852879, argHEX60gensym78HEX60gensym79_1291852880) {
          var Temporary1;

        var result_1291852881 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852866.config.handleActions) {
          var action_1291852882 = nimCopy(null, actionHEX60gensym78HEX60gensym79_1291852879, NTI33554449);
          var arg_1291852883 = nimCopy(null, argHEX60gensym78HEX60gensym79_1291852880, NTI33554449);
          if (handleAction_1291848877(self_1291851120, action_1291852882, arg_1291852883)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym78HEX60gensym79_1291852884 = Temporary1;
          if (handlerHEX60gensym78_1291852866.config.consumeAllActions) {
          result_1291852881 = 3;
          break BeforeRet;
          }
          
          result_1291852881 = responseHEX60gensym78HEX60gensym79_1291852884;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym78_1291852866.config.consumeAllActions) {
          result_1291852881 = 3;
          break BeforeRet;
          }
          else {
            result_1291852881 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852881;

      }
      
function HEX3Aanonymous_1291852886(inputHEX60gensym78HEX60gensym80_1291852887) {
        var result_1291852888 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852866.config.handleInputs) {
          var input_1291852889 = nimCopy(null, inputHEX60gensym78HEX60gensym80_1291852887, NTI33554449);
          result_1291852888 = 1;
          break BeforeRet;
          }
          else {
            result_1291852888 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852888;

      }
              var Temporary8;
        var Temporary12;
              var Temporary19;
                var Temporary20;

  var result_1291851119 = null;

  BeforeRet: {
    var self_1291851120 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851120 = createWithPrototype(editor_prototype, self_1291851120);
    gEditor = self_1291851120;
    self_1291851120.platform = platform_1291851118;
    self_1291851120.backend = backend_1291851117;
    self_1291851120.statusBarOnTop = false;
    var _ = subscribe_1291851165(platform_1291851118.onKeyPress, HEX3Aanonymous_1291851132);
    var _ = subscribe_1291851165(platform_1291851118.onKeyRelease, HEX3Aanonymous_1291851204);
    var _ = subscribe_1291851165(platform_1291851118.onRune, HEX3Aanonymous_1291851253);
    var _ = subscribe_1291851335(platform_1291851118.onMousePress, HEX3Aanonymous_1291851302);
    var _ = subscribe_1291851335(platform_1291851118.onMouseRelease, HEX3Aanonymous_1291851374);
    var _ = subscribe_1291851456(platform_1291851118.onMouseMove, HEX3Aanonymous_1291851423);
    var _ = subscribe_1291851528(platform_1291851118.onScroll, HEX3Aanonymous_1291851495);
    var _ = subscribe_1291851600(platform_1291851118.onDropFile, HEX3Aanonymous_1291851567);
    var _ = subscribe_1291851672(platform_1291851118.onCloseRequested, HEX3Aanonymous_1291851639);
    self_1291851120.timer = nimCopy(self_1291851120.timer, startTimer_2466250804(), NTI2466250783);
    self_1291851120.frameTimer = nimCopy(self_1291851120.frameTimer, startTimer_2466250804(), NTI2466250783);
    self_1291851120.layout = {m_type: NTI1291845643};
    self_1291851120.layout_props = {props: toTable_1291851682([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2499805320(self_1291851120.platform, 20.0);
    self_1291851120.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851120.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851120.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851120.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851120.editor_defaults = nimCopy(null, [{m_type: NTI2801795294, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2936014311, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849434);
    self_1291851120.workspace = ({folders: []});
    self_1291851120.theme = defaultTheme_2667581007();
    setTheme_1291851010(self_1291851120, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851120.currentView = 0;
    addCommand_2080375166(getEventHandlerConfig_1291849169(self_1291851120, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2080375166(getEventHandlerConfig_1291849169(self_1291851120, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851120.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym75_1291852835 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym75_1291852835.config = getEventHandlerConfig_1291849169(self_1291851120, [101,100,105,116,111,114]);
      handlerHEX60gensym75_1291852835.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(self_1291851120, [101,100,105,116,111,114]));
      handlerHEX60gensym75_1291852835.handleAction = HEX3Aanonymous_1291852847;
      handlerHEX60gensym75_1291852835.handleInput = HEX3Aanonymous_1291852855;
    };
    self_1291851120.eventHandler = handlerHEX60gensym75_1291852835;
    Label2: {
      var handlerHEX60gensym78_1291852866 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym78_1291852866.config = getEventHandlerConfig_1291849169(self_1291851120, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym78_1291852866.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(self_1291851120, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym78_1291852866.handleAction = HEX3Aanonymous_1291852878;
      handlerHEX60gensym78_1291852866.handleInput = HEX3Aanonymous_1291852886;
    };
    self_1291851120.commandLineEventHandler = handlerHEX60gensym78_1291852866;
    self_1291851120.commandLineMode = false;
    self_1291851120.commandLineTextEditor = newTextEditor_2801813760(newTextDocument_2801801429([], [], false), self_1291851120);
    self_1291851120.commandLineTextEditor.renderHeader = false;
    self_1291851120.commandLineTextEditor.lineNumbers = nimCopy(self_1291851120.commandLineTextEditor.lineNumbers, some_3154117142(0), NTI2801795338);
    getCommandLineTextEditor_1291851067(self_1291851120).hideCursorWhenInactive = true;
    var state_1291852898 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], workspaceFolders: [], openEditors: []};
++excHandler;
    try {
    state_1291852898 = nimCopy(state_1291852898, jsonTo_1291852899(parseJson_1627395313(loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845666);
    setTheme_1291851010(self_1291851120, state_1291852898.theme);
    self_1291851120.loadedFontSize = state_1291852898.fontSize;
    fontSizeHEX3D_2499805320(self_1291851120.platform, state_1291852898.fontSize);
    if ((0 < (state_1291852898.fontRegular).length)) {
    self_1291851120.fontRegular = nimCopy(null, state_1291852898.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852898.fontBold).length)) {
    self_1291851120.fontBold = nimCopy(null, state_1291852898.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852898.fontItalic).length)) {
    self_1291851120.fontItalic = nimCopy(null, state_1291852898.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852898.fontBoldItalic).length)) {
    self_1291851120.fontBoldItalic = nimCopy(null, state_1291852898.fontBoldItalic, NTI33554449);
    }
    
    self_1291851120.options = parseJson_1627395313(loadApplicationFile_2332033042(fs_2332033077, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853555 = [mnewString(0)];
    fmtRes_1291853555[0].push.apply(fmtRes_1291853555[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853555, 0, pretty_1627394477(self_1291851120.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853555[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853560 = [mnewString(0)];
    fmtRes_1291853560[0].push.apply(fmtRes_1291853560[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853560, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853560[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848881(self_1291851120, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,119,111,114,107,115,112,97,99,101,115], false)) {
    Label4: {
      var wf_1291853583 = ({kind: 0, id: [], name: [], settings: null});
      var i_536870984 = 0;
      var L_536870985 = (state_1291852898.workspaceFolders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536870984 < L_536870985)) break Label6;
            wf_1291853583 = state_1291852898.workspaceFolders[chckIndx(i_536870984, 0, (state_1291852898.workspaceFolders).length - 1)];
            Label7: {
              switch (wf_1291853583.kind) {
              case 0:
                Temporary8 = newWorkspaceFolderLocal_2231369861(wf_1291853583.settings);
                break;
              case 1:
                Temporary8 = newWorkspaceFolderAbsytreeServer_2365587879(wf_1291853583.settings);
                break;
              case 2:
                Temporary8 = newWorkspaceFolderGithub_2248149308(wf_1291853583.settings);
                break;
              default: 
                var fmtRes_1291853588 = [mnewString(0)];
                fmtRes_1291853588[0].push.apply(fmtRes_1291853588[0], makeNimstrLit("[editor][restore-open-workspaces] Unhandled or unknown workspace folder kind "));;
                formatValue_1291853589(fmtRes_1291853588, 0, wf_1291853583.kind, []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853588[0], NTI33554449)]);
                break Label7;
                break;
              }
              var folder_1291853597 = Temporary8;
              folder_1291853597.id = nimCopy(folder_1291853597.id, parseId_2046820606(wf_1291853583.id), NTI2046820355);
              folder_1291853597.name = nimCopy(null, wf_1291853583.name, NTI33554449);
              if (addWorkspaceFolder_1291851109(self_1291851120, folder_1291853597)) {
              var fmtRes_1291853602 = [mnewString(0)];
              fmtRes_1291853602[0].push.apply(fmtRes_1291853602[0], [82,101,115,116,111,114,105,110,103,32,119,111,114,107,115,112,97,99,101,32]);;
              formatValue_721420459(fmtRes_1291853602, 0, folder_1291853597.name, []);
              fmtRes_1291853602[0].push.apply(fmtRes_1291853602[0], [32,40]);;
              formatValue_3003121884(fmtRes_1291853602, 0, folder_1291853597.id, []);
              fmtRes_1291853602[0].push.apply(fmtRes_1291853602[0], [41]);;
              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853602[0], NTI33554449)]);
              }
              
            };
            i_536870984 = addInt(i_536870984, 1);
            if (!(((state_1291852898.workspaceFolders).length == L_536870985))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
++excHandler;
    try {
    var searchPaths_1291853612 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853617 = HEX7BHEX7D_1627393316(self_1291851120.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853617 == null))) {
    Label10: {
      var sp_1291853621 = null;
      if (!((searchPathsJson_1291853617.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853617.kind, NTI1627389955) || []));
      }
      
      Label11: {
        var i_536870994 = null;
        var colontmp__536870995 = [];
        var Temporary12 = searchPathsJson_1291853617;
        if (ConstSet310[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__536870995 = Temporary12.elems;
        var i_536870996 = 0;
        var L_536870997 = (colontmp__536870995).length;
        Label13: {
            Label14: while (true) {
            if (!(i_536870996 < L_536870997)) break Label14;
              i_536870994 = colontmp__536870995[chckIndx(i_536870996, 0, (colontmp__536870995).length - 1)];
              sp_1291853621 = i_536870994;
              searchPaths_1291853612.push(getStr_1627390106(sp_1291853621, []));;
              i_536870996 = addInt(i_536870996, 1);
              if (!(((colontmp__536870995).length == L_536870997))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851120.scriptContext = new_1291853626();
    init_2768240652(self_1291851120.scriptContext, []);
    var _ = false;
    self_1291851120.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853662 = [mnewString(0)];
    fmtRes_1291853662[0].push.apply(fmtRes_1291853662[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103,58,32]);;
    formatValue_721420459(fmtRes_1291853662, 0, getCurrentExceptionMsg_33556469(), []);
    addChar(fmtRes_1291853662[0], 10);;
    formatValue_721420459(fmtRes_1291853662, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853662[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848881(self_1291851120, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label15: {
      var editorState_1291853685 = ({filename: [], ast: false, languageID: [], appFile: false, workspaceId: []});
      var i_536871001 = 0;
      var L_536871002 = (state_1291852898.openEditors).length;
      Label16: {
          Label17: while (true) {
          if (!(i_536871001 < L_536871002)) break Label17;
            editorState_1291853685 = state_1291852898.openEditors[chckIndx(i_536871001, 0, (state_1291852898.openEditors).length - 1)];
            Label18: {
              var workspaceFolder_1291853686 = getWorkspaceFolder_1291851112(self_1291851120, parseId_2046820606(editorState_1291853685.workspaceId));
              if (editorState_1291853685.ast) {
              Temporary19 = newAstDocument_2936017007(editorState_1291853685.filename, editorState_1291853685.appFile, workspaceFolder_1291853686);
              }
              else {
++excHandler;
                try {
                Temporary20 = newTextDocument_2801801423(editorState_1291853685.filename, editorState_1291853685.appFile, workspaceFolder_1291853686);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853691 = [mnewString(0)];
                fmtRes_1291853691[0].push.apply(fmtRes_1291853691[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853691, 0, editorState_1291853685.filename, []);
                fmtRes_1291853691[0].push.apply(fmtRes_1291853691[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853691, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853691[0], NTI33554449)]);
                break Label18;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary19 = Temporary20;
              }
              
              var document_1291853692 = Temporary19;
              createView_1291848965(self_1291851120, document_1291853692);
            };
            i_536871001 = addInt(i_536871001, 1);
            if (!(((state_1291852898.openEditors).length == L_536871002))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851119 = self_1291851120;
    break BeforeRet;
  };

  return result_1291851119;

}

function fromJsonHook_2667578152(color_2667578153, jsonNode_2667578154) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2667578154.kind == 0)) {
    color_2667578153 = nimCopy(color_2667578153, parseHex_2533359858([48,48,48,48,48,48]), NTI2550136835);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2667578154;
    if (ConstSet312[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2667578153 = nimCopy(color_2667578153, parseHexVar_2667577392(Temporary1.str), NTI2550136835);
  };

  
}

function fromJson_2667578184(a_2667578186, b_2667578187, opt_2667578188) {
    if (!(!(HEX3DHEX3D_1627392026(b_2667578187, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2667578187}));
    }
    
    fromJsonHook_2667578152(a_2667578186, b_2667578187);

  
}

function jsonTo_2667578178(b_2667578180, opt_2667578182) {
  var result_2667578183 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2667578184(result_2667578183[0], b_2667578180, opt_2667578182);

  return result_2667578183[0];

}

function hasKey_2667577602(t_2667577605, key_2667577606) {
  var result_2667577607 = false;

    var hc_2667577608 = [0];
    result_2667577607 = (0 <= rawGet_2667577609(t_2667577605, key_2667577606, hc_2667577608, 0));

  return result_2667577607;

}

function contains_2667577596(t_2667577599, key_2667577600) {
  var result_2667577601 = false;

  BeforeRet: {
    result_2667577601 = hasKey_2667577602(t_2667577599, key_2667577600);
    break BeforeRet;
  };

  return result_2667577601;

}

function none_2667578208() {
  var result_2667578215 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2667578215;

}

function HEX5BHEX5D_2667577901(t_2667577904, key_2667577905) {
  var result_2667577906 = null;

    var hcHEX60gensym22_2667577907 = [0];
    var indexHEX60gensym22_2667577914 = rawGet_2667577609(t_2667577904, key_2667577905, hcHEX60gensym22_2667577907, 0);
    if ((0 <= indexHEX60gensym22_2667577914)) {
    result_2667577906 = t_2667577904.data[chckIndx(indexHEX60gensym22_2667577914, 0, (t_2667577904.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2667577905);
    }
    

  return result_2667577906;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2667578159(style_2667578160, jsonNode_2667578161) {
    var Temporary1;

    style_2667578160 = nimCopy(style_2667578160, ConstSet317, NTI2667577859);
    var Temporary1 = jsonNode_2667578161;
    if (ConstSet318[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2667578162 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2667578162, [105,116,97,108,105,99])) {
    style_2667578160[0] = true;
    }
    
    if (contains_855639877(text_2667578162, [98,111,108,100])) {
    style_2667578160[2] = true;
    }
    
    if (contains_855639877(text_2667578162, [117,110,100,101,114,108,105,110,101])) {
    style_2667578160[1] = true;
    }
    

  
}

function fromJson_2667578222(a_2667578224, b_2667578225, opt_2667578226) {
    if (!(!(HEX3DHEX3D_1627392026(b_2667578225, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2667578225}));
    }
    
    fromJsonHook_2667578159(a_2667578224, b_2667578225);

  
}

function jsonTo_2667578216(b_2667578218, opt_2667578220) {
  var result_2667578221 = [{}];

    fromJson_2667578222(result_2667578221[0], b_2667578218, opt_2667578220);

  return result_2667578221[0];

}

function jsonToTheme_2667578242(json_2667578243, opt_2667578244) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2667578245 = null;

    result_2667578245 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2667578245.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2667578243, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2667578243, [116,121,112,101])) {
    result_2667578245.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2667578243, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2667578243, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2667578245.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2667578243, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2667578243, [99,111,108,111,114,115])) {
    Label1: {
      var key_2667578265 = [];
      var value_2667578266 = null;
      var colontmp__536871242 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2667578243, [99,111,108,111,114,115]);
      if (ConstSet311[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871242 = nimCopy(colontmp__536871242, Temporary2.fields, NTI1627389966);
      var L_536871243 = len_1627392114(colontmp__536871242);
      if ((0 < colontmp__536871242.counter)) {
      var h_536871244 = colontmp__536871242.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871244)) break Label4;
            var nxt_536871246 = colontmp__536871242.data[chckIndx(h_536871244, 0, (colontmp__536871242.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871242.data[chckIndx(h_536871244, 0, (colontmp__536871242.data).length - 1)].Field0)) {
            var colontmp__536871248 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871242.data[chckIndx(h_536871244, 0, (colontmp__536871242.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871242.data[chckIndx(h_536871244, 0, (colontmp__536871242.data).length - 1)].Field3}, NTI1627391161);
            key_2667578265 = colontmp__536871248["Field0"];
            value_2667578266 = colontmp__536871248["Field1"];
            HEX5BHEX5DHEX3D_2667578312(result_2667578245.colors, key_2667578265, jsonTo_2667578178(value_2667578266, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871242) == L_536871243))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871244 = nxt_536871246;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2667578243, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2667579577 = null;
      var colontmp__536871259 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2667578243, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet313[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871259 = Temporary6.elems;
      var i_536871260 = 0;
      var L_536871261 = (colontmp__536871259).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871260 < L_536871261)) break Label8;
            item_2667579577 = colontmp__536871259[chckIndx(i_536871260, 0, (colontmp__536871259).length - 1)];
            var scopes_2667579582 = [];
            if (hasKey_1627393154(item_2667579577, [115,99,111,112,101])) {
            var scope_2667579583 = HEX5BHEX5D_1627393037(item_2667579577, [115,99,111,112,101]);
            if ((scope_2667579583.kind == 4)) {
            var Temporary9 = scope_2667579583;
            if (ConstSet314[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2667579582.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2667579595 = null;
                var colontmp__536871251 = [];
                var Temporary12 = scope_2667579583;
                if (ConstSet315[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871251 = Temporary12.elems;
                var i_536871252 = 0;
                var L_536871253 = (colontmp__536871251).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871252 < L_536871253)) break Label14;
                      scopeName_2667579595 = colontmp__536871251[chckIndx(i_536871252, 0, (colontmp__536871251).length - 1)];
                      var Temporary15 = scopeName_2667579595;
                      if (ConstSet316[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2667579582.push(Temporary16);;
                      i_536871252 = addInt(i_536871252, 1);
                      if (!(((colontmp__536871251).length == L_536871253))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2667579582.push([46]);;
            }
            
            var settings_2667579604 = HEX5BHEX5D_1627393037(item_2667579577, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2667579608 = [];
              var i_536871256 = 0;
              var L_536871257 = (scopes_2667579582).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871256 < L_536871257)) break Label19;
                    scope_2667579608 = scopes_2667579582[chckIndx(i_536871256, 0, (scopes_2667579582).length - 1)];
                    if (!(contains_2667577596(result_2667578245.tokenColors, scope_2667579608))) {
                    HEX5BHEX5DHEX3D_2667579710(result_2667578245.tokenColors, scope_2667579608, {foreground: none_2667578208(), background: none_2667578208(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2667579604, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).foreground = nimCopy(HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).foreground, some_2667578195(jsonTo_2667578178(HEX5BHEX5D_1627393037(settings_2667579604, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2667577356);
                    }
                    
                    if (hasKey_1627393154(settings_2667579604, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).background = nimCopy(HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).background, some_2667578195(jsonTo_2667578178(HEX5BHEX5D_1627393037(settings_2667579604, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2667577356);
                    }
                    
                    if (hasKey_1627393154(settings_2667579604, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).fontStyle = nimCopy(HEX5BHEX5D_2667577901(result_2667578245.tokenColors, scope_2667579608).fontStyle, jsonTo_2667578216(HEX5BHEX5D_1627393037(settings_2667579604, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2667577367);
                    }
                    
                    i_536871256 = addInt(i_536871256, 1);
                    if (!(((scopes_2667579582).length == L_536871257))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871260 = addInt(i_536871260, 1);
            if (!(((colontmp__536871259).length == L_536871261))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2667578245;

}

function some_2667580962(val_2667580964) {
  var result_2667580965 = ({val: null});

    if (!(!((val_2667580964 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2667580965.val = val_2667580964;

  return result_2667580965;

}

function none_2667580987() {
  var result_2667580993 = ({val: null});

  return result_2667580993;

}

function loadFromString_2667580952(input_2667580953, path_2667580954) {
  var result_2667580959 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2667580960 = parseJson_1627395313(input_2667580953);
    var newTheme_2667580961 = jsonToTheme_2667578242(json_2667580960, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2667580961.path = nimCopy(null, path_2667580954, NTI33554449);
    result_2667580959 = nimCopy(result_2667580959, some_2667580962(newTheme_2667580961), NTI2667579332);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2667580980 = [mnewString(0)];
    fmtRes_2667580980[0].push.apply(fmtRes_2667580980[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2667580980, 0, path_2667580954, []);
    fmtRes_2667580980[0].push.apply(fmtRes_2667580980[0], [58,32]);;
    formatValue_721420459(fmtRes_2667580980, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2667580980[0], NTI33554449)]);
    var fmtRes_2667580986 = [mnewString(0)];
    formatValue_721420459(fmtRes_2667580986, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2667580986[0], NTI33554449)]);
    result_2667580959 = nimCopy(result_2667580959, none_2667580987(), NTI2667579332);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2667580959;

}
  var Temporary281;
var rend_536870946 = [new_536870928()];
init_2499805308(rend_536870946[0]);
var initializedEditor_536870947 = [false];
var ed_536870948 = [newEditor_1291851116(2, rend_536870946[0])];
  var oHEX60gensym0_536870952 = loadFromString_2667580952(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851020(oHEX60gensym0_536870952)) Temporary281 = false; else {    var theme_536870975 = get_1291851040(oHEX60gensym0_536870952);
    Temporary281 = true;  }if (Temporary281) {
ed_536870948[0].theme = theme_536870975;
}

setLayout_1291856992(ed_536870948[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870976 = [0.0];
var frameIndex_536870977 = [0];
var hasRequestedRerender_536870978 = [false];
var isRenderInProgress_536870979 = [false];

function color_2550136904(r_2550136905, g_2550136906, b_2550136907, a_2550136908) {
  var result_2550136909 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2550136909 = nimCopy(result_2550136909, {r: r_2550136905, g: g_2550136906, b: b_2550136907, a: a_2550136908}, NTI2550136835);

  return result_2550136909;

}

function rawGet_3238002855(t_3238002858, key_3238002859, hc_3238002860, hc_3238002860_Idx) {
  var result_3238002861 = 0;

  BeforeRet: {
    hc_3238002860[hc_3238002860_Idx] = hash_1325400236(key_3238002859);
    if ((hc_3238002860[hc_3238002860_Idx] == 0)) {
    hc_3238002860[hc_3238002860_Idx] = 314159265;
    }
    
    if (((t_3238002858.data).length == 0)) {
    result_3238002861 = -1;
    break BeforeRet;
    }
    
    var h_3238002916 = (hc_3238002860[hc_3238002860_Idx] & (t_3238002858.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field0)) break Label2;
          if (((t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field0 == hc_3238002860[hc_3238002860_Idx]) && (t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field1 == key_3238002859))) {
          result_3238002861 = h_3238002916;
          break BeforeRet;
          }
          
          h_3238002916 = nextTry_1308622883(h_3238002916, (t_3238002858.data).length - 1);
        }
    };
    result_3238002861 = subInt(-1, h_3238002916);
  };

  return result_3238002861;

}

function hasKey_3238002848(t_3238002851, key_3238002852) {
  var result_3238002853 = false;

    var hc_3238002854 = [0];
    result_3238002853 = (0 <= rawGet_3238002855(t_3238002851, key_3238002852, hc_3238002854, 0));

  return result_3238002853;

}

function contains_3238002842(t_3238002845, key_3238002846) {
  var result_3238002847 = false;

  BeforeRet: {
    result_3238002847 = hasKey_3238002848(t_3238002845, key_3238002846);
    break BeforeRet;
  };

  return result_3238002847;

}

function HEX5BHEX5D_3238003141(t_3238003144, key_3238003145) {
  var result_3238003146 = null;
  var result_3238003146_Idx = 0;

    var hcHEX60gensym22_3238003147 = [0];
    var indexHEX60gensym22_3238003154 = rawGet_3238002855(t_3238003144, key_3238003145, hcHEX60gensym22_3238003147, 0);
    if ((0 <= indexHEX60gensym22_3238003154)) {
    result_3238003146 = t_3238003144.data[chckIndx(indexHEX60gensym22_3238003154, 0, (t_3238003144.data).length - 1)]; result_3238003146_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_3238003145);
    }
    

  return [result_3238003146, result_3238003146_Idx];

}

function mustRehash_3238003433(t_3238003435) {
  var result_3238003436 = false;

    if (!((t_3238003435.counter < (t_3238003435.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3238003436 = ((mulInt((t_3238003435.data).length, 2) < mulInt(t_3238003435.counter, 3)) || (subInt((t_3238003435.data).length, t_3238003435.counter) < 4));

  return result_3238003436;

}

function rawInsert_3238003882(t_3238003886, data_3238003887, data_3238003887_Idx, key_3238003888, val_3238003889, hc_3238003890, h_3238003891) {
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field1 = key_3238003888;
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field2 = val_3238003889;
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field0 = hc_3238003890;

  
}

function enlarge_3238003588(t_3238003591) {
    var n_3238003594 = [];
    n_3238003594 = new Array(chckRange(mulInt((t_3238003591.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3238003591.data).length, 2), 0, 2147483647) ; ++i) { n_3238003594[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3238003591.data; t_3238003591.data = n_3238003594; n_3238003594 = Temporary1;    Label2: {
      var i_3238003658 = 0;
      var colontmp__536871860 = 0;
      colontmp__536871860 = (n_3238003594).length - 1;
      var res_536871861 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871861 <= colontmp__536871860)) break Label4;
            i_3238003658 = res_536871861;
            var eh_3238003712 = n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field0;
            if (isFilled_1308622880(eh_3238003712)) {
            var j_3238003716 = (eh_3238003712 & (t_3238003591.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3238003591.data[chckIndx(j_3238003716, 0, (t_3238003591.data).length - 1)].Field0)) break Label6;
                  j_3238003716 = nextTry_1308622883(j_3238003716, (t_3238003591.data).length - 1);
                }
            };
            rawInsert_3238003882(t_3238003591, t_3238003591, "data", n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field1, n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field2, eh_3238003712, j_3238003716);
            }
            
            res_536871861 = addInt(res_536871861, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3238004051(t_3238004054, key_3238004055, hc_3238004056) {
  var result_3238004057 = 0;

  BeforeRet: {
    if (((t_3238004054.data).length == 0)) {
    result_3238004057 = -1;
    break BeforeRet;
    }
    
    var h_3238004108 = (hc_3238004056 & (t_3238004054.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field0)) break Label2;
          if (((t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field0 == hc_3238004056) && (t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field1 == key_3238004055))) {
          result_3238004057 = h_3238004108;
          break BeforeRet;
          }
          
          h_3238004108 = nextTry_1308622883(h_3238004108, (t_3238004054.data).length - 1);
        }
    };
    result_3238004057 = subInt(-1, h_3238004108);
  };

  return result_3238004057;

}

function HEX5BHEX5DHEX3D_3238003260(t_3238003263, key_3238003264, val_3238003265) {
    if (((t_3238003263.data).length == 0)) {
    var correctSizeHEX60gensym5_3238003314 = slotsNeeded_1308622891(32);
    t_3238003263.counter = 0;
    t_3238003263.data = new Array(chckRange(correctSizeHEX60gensym5_3238003314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3238003314, 0, 2147483647) ; ++i) { t_3238003263.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3238003319 = [0];
    var index_3238003326 = rawGet_3238002855(t_3238003263, key_3238003264, hc_3238003319, 0);
    if ((0 <= index_3238003326)) {
    t_3238003263.data[chckIndx(index_3238003326, 0, (t_3238003263.data).length - 1)].Field2 = val_3238003265;
    }
    else {
      if (((t_3238003263.data).length == 0)) {
      var correctSizeHEX60gensym8_3238003428 = slotsNeeded_1308622891(32);
      t_3238003263.counter = 0;
      t_3238003263.data = new Array(chckRange(correctSizeHEX60gensym8_3238003428, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3238003428, 0, 2147483647) ; ++i) { t_3238003263.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3238003433(t_3238003263)) {
      enlarge_3238003588(t_3238003263);
      index_3238003326 = rawGetKnownHC_3238004051(t_3238003263, key_3238003264, hc_3238003319[0]);
      }
      
      index_3238003326 = subInt(-1, index_3238003326);
      rawInsert_3238003882(t_3238003263, t_3238003263, "data", key_3238003264, val_3238003265, hc_3238003319[0], index_3238003326);
      t_3238003263.counter = addInt(t_3238003263.counter, 1);
    }
    

  
}

function activeHEX3D_2382364782(self_2382364783, newActive_2382364784) {
    if (!((newActive_2382364784 == self_2382364783.active))) {
    markDirty_2382364710(self_2382364783);
    }
    
    self_2382364783.active = newActive_2382364784;

  
}

function HEX5BHEX5D_3238004305(s_3238004309, x_3238004310) {
  var result_3238004311 = [];

    var a_3238004313 = x_3238004310.a;
    var L_3238004319 = addInt(subInt(subInt((s_3238004309).length, x_3238004310.b), a_3238004313), 1);
    result_3238004311 = new Array(chckRange(L_3238004319, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3238004319, 0, 2147483647) ; ++i) { result_3238004311[i] = null; }    Label1: {
      var i_3238004328 = 0;
      var i_536871865 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871865 < L_3238004319)) break Label3;
            i_3238004328 = i_536871865;
            result_3238004311[chckIndx(i_3238004328, 0, (result_3238004311).length - 1)] = s_3238004309[chckIndx(addInt(i_3238004328, a_3238004313), 0, (s_3238004309).length - 1)];
            i_536871865 = addInt(i_536871865, 1);
          }
      };
    };

  return result_3238004311;

}

function find_3238004533(a_3238004536, item_3238004537) {
  var result_3238004538 = 0;

  BeforeRet: {
    result_3238004538 = 0;
    Label1: {
      var i_3238004551 = null;
      var i_536871869 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871869 < (a_3238004536).length)) break Label3;
            i_3238004551 = a_3238004536[chckIndx(i_536871869, 0, (a_3238004536).length - 1)];
            if ((i_3238004551 == item_3238004537)) {
            break BeforeRet;
            }
            
            result_3238004538 = addInt(result_3238004538, 1);
            i_536871869 = addInt(i_536871869, 1);
          }
      };
    };
    result_3238004538 = -1;
  };

  return result_3238004538;

}

function contains_3238004528(a_3238004530, item_3238004531) {
  var result_3238004532 = false;

  BeforeRet: {
    result_3238004532 = (0 <= find_3238004533(a_3238004530, item_3238004531));
    break BeforeRet;
  };

  return result_3238004532;

}

function contains_2097152186(a_2097152187, b_2097152188) {
  var result_2097152189 = false;

  BeforeRet: {
    result_2097152189 = ((((a_2097152187.x <= b_2097152188.x) && ((b_2097152188.x + b_2097152188.w) <= (a_2097152187.x + a_2097152187.w))) && (a_2097152187.y <= b_2097152188.y)) && ((b_2097152188.y + b_2097152188.h) <= (a_2097152187.y + a_2097152187.h)));
    break BeforeRet;
  };

  return result_2097152189;

}

function invalidate_2516582631(self_2516582632, currentIndex_2516582633, rect_2516582634) {
  BeforeRet: {
    if ((!(intersects_2097152177(self_2516582632.lastBounds, rect_2516582634)) || ((currentIndex_2516582633 <= self_2516582632.lastInvalidation) && contains_2097152186(self_2516582632.lastInvalidationRect, rect_2516582634)))) {
    break BeforeRet;
    }
    
    self_2516582632.lastInvalidationRect = nimCopy(self_2516582632.lastInvalidationRect, and_2113929300(rect_2516582634, self_2516582632.lastBounds), NTI2113929221);
    self_2516582632.lastInvalidation = currentIndex_2516582633;
    if (isObj(self_2516582632.m_type, NTI2516582412)) {
    Label1: {
      var c_2516582644 = null;
      var colontmp__536871872 = [];
      colontmp__536871872 = self_2516582632.children;
      var i_536871873 = 0;
      var L_536871874 = (colontmp__536871872).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871873 < L_536871874)) break Label3;
            c_2516582644 = colontmp__536871872[chckIndx(i_536871873, 0, (colontmp__536871872).length - 1)];
            invalidate_2516582631(c_2516582644, currentIndex_2516582633, self_2516582632.lastInvalidationRect);
            i_536871873 = addInt(i_536871873, 1);
            if (!(((colontmp__536871872).length == L_536871874))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582632.m_type, NTI2516582414)) {
    Label4: {
      var c_2516582654 = null;
      var colontmp__536871877 = [];
      colontmp__536871877 = self_2516582632.children;
      var i_536871878 = 0;
      var L_536871879 = (colontmp__536871877).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871878 < L_536871879)) break Label6;
            c_2516582654 = colontmp__536871877[chckIndx(i_536871878, 0, (colontmp__536871877).length - 1)];
            invalidate_2516582631(c_2516582654, currentIndex_2516582633, self_2516582632.lastInvalidationRect);
            i_536871878 = addInt(i_536871878, 1);
            if (!(((colontmp__536871877).length == L_536871879))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582632.m_type, NTI2516582416)) {
    Label7: {
      var c_2516582664 = null;
      var colontmp__536871882 = [];
      colontmp__536871882 = self_2516582632.children;
      var i_536871883 = 0;
      var L_536871884 = (colontmp__536871882).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871883 < L_536871884)) break Label9;
            c_2516582664 = colontmp__536871882[chckIndx(i_536871883, 0, (colontmp__536871882).length - 1)];
            invalidate_2516582631(c_2516582664, currentIndex_2516582633, self_2516582632.lastInvalidationRect);
            i_536871883 = addInt(i_536871883, 1);
            if (!(((colontmp__536871882).length == L_536871884))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582632.m_type, NTI2516582418)) {
    Label10: {
      var c_2516582674 = null;
      var colontmp__536871887 = [];
      colontmp__536871887 = self_2516582632.children;
      var i_536871888 = 0;
      var L_536871889 = (colontmp__536871887).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871888 < L_536871889)) break Label12;
            c_2516582674 = colontmp__536871887[chckIndx(i_536871888, 0, (colontmp__536871887).length - 1)];
            invalidate_2516582631(c_2516582674, currentIndex_2516582633, self_2516582632.lastInvalidationRect);
            i_536871888 = addInt(i_536871888, 1);
            if (!(((colontmp__536871887).length == L_536871889))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3170894409(t_3170894412, key_3170894413) {
  var result_3170894414 = false;

    var hc_3170894415 = [0];
    result_3170894414 = (0 <= rawGet_2667578373(t_3170894412, key_3170894413, hc_3170894415, 0));

  return result_3170894414;

}

function contains_3170894403(t_3170894406, key_3170894407) {
  var result_3170894408 = false;

  BeforeRet: {
    result_3170894408 = hasKey_3170894409(t_3170894406, key_3170894407);
    break BeforeRet;
  };

  return result_3170894408;

}

function HEX5BHEX5D_3170894493(t_3170894496, key_3170894497) {
  var result_3170894498 = null;

    var hcHEX60gensym22_3170894499 = [0];
    var indexHEX60gensym22_3170894506 = rawGet_2667578373(t_3170894496, key_3170894497, hcHEX60gensym22_3170894499, 0);
    if ((0 <= indexHEX60gensym22_3170894506)) {
    result_3170894498 = t_3170894496.data[chckIndx(indexHEX60gensym22_3170894506, 0, (t_3170894496.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3170894497);
    }
    

  return result_3170894498;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871896 = 0;
      var colontmp__536871897 = 0;
      colontmp__536871896 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871897 = start_855639774;
      var res_536871898 = colontmp__536871896;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871897 <= res_536871898)) break Label5;
            i_855639789 = res_536871898;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871893 = 0;
              colontmp__536871893 = subInt((sub_855639773).length, 1);
              var res_536871894 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871894 <= colontmp__536871893)) break Label8;
                    j_855639794 = res_536871894;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871894 = addInt(res_536871894, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871898 = subInt(res_536871898, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3271557240(table_3271557242, key_3271557243, default_3271557244) {
  var result_3271557245 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3170894403(table_3271557242, key_3271557243)) {
    result_3271557245 = nimCopy(result_3271557245, HEX5BHEX5D_3170894493(table_3271557242, key_3271557243), NTI2550136835);
    break BeforeRet;
    }
    
    var index_3271557351 = nsuRFindStr(key_3271557243, [46], 0, -1);
    if (!((index_3271557351 == -1))) {
    result_3271557245 = nimCopy(result_3271557245, getCascading_3271557240(table_3271557242, HEX5BHEX5D_855639291(key_3271557243, HEX2EHEX2E_805306418(0, subInt(index_3271557351, 1))), default_3271557244), NTI2550136835);
    break BeforeRet;
    }
    
    result_3271557245 = nimCopy(result_3271557245, default_3271557244, NTI2550136835);
    break BeforeRet;
  };

  return result_3271557245;

}

function color_3271557229(theme_3271557231, name_3271557232, default_3271557233) {
  var result_3271557234 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3271557234 = nimCopy(result_3271557234, getCascading_3271557240(theme_3271557231.colors, name_3271557232, color_2634022945(default_3271557233)), NTI2550136835);
    break BeforeRet;
  };

  return result_3271557234;

}

function HEX3DHEX3D_2516582468(x_2516582470, y_2516582471) {
  var result_2516582472 = false;

  BeforeRet: {
    if (!((x_2516582470.r == y_2516582471.r))) {
    result_2516582472 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582470.g == y_2516582471.g))) {
    result_2516582472 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582470.b == y_2516582471.b))) {
    result_2516582472 = false;
    break BeforeRet;
    }
    
    if (!((x_2516582470.a == y_2516582471.a))) {
    result_2516582472 = false;
    break BeforeRet;
    }
    
    result_2516582472 = true;
    break BeforeRet;
  };

  return result_2516582472;

}

function updateForegroundColor_2516582464(self_2516582465, color_2516582466, frameIndex_2516582467) {
    if (!(HEX3DHEX3D_2516582468(self_2516582465.foregroundColor, color_2516582466))) {
    self_2516582465.lastHierarchyChange = nimMax(self_2516582465.lastHierarchyChange, frameIndex_2516582467);
    }
    
    self_2516582465.foregroundColor = nimCopy(self_2516582465.foregroundColor, color_2516582466, NTI2550136835);

  
}

function updateLastHierarchyChangeFromChildren_2516582486(self_2516582487, currentIndex_2516582488) {
    if (isObj(self_2516582487.m_type, NTI2516582412)) {
    Label1: {
      var c_2516582518 = null;
      var colontmp__536871901 = [];
      colontmp__536871901 = self_2516582487.children;
      var i_536871902 = 0;
      var L_536871903 = (colontmp__536871901).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871902 < L_536871903)) break Label3;
            c_2516582518 = colontmp__536871901[chckIndx(i_536871902, 0, (colontmp__536871901).length - 1)];
            updateLastHierarchyChangeFromChildren_2516582486(c_2516582518, currentIndex_2516582488);
            self_2516582487.lastHierarchyChange = nimMax(nimMax(self_2516582487.lastHierarchyChange, c_2516582518.lastHierarchyChange), c_2516582518.lastBoundsChange);
            i_536871902 = addInt(i_536871902, 1);
            if (!(((colontmp__536871901).length == L_536871903))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582487.m_type, NTI2516582414)) {
    Label4: {
      var c_2516582529 = null;
      var colontmp__536871906 = [];
      colontmp__536871906 = self_2516582487.children;
      var i_536871907 = 0;
      var L_536871908 = (colontmp__536871906).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871907 < L_536871908)) break Label6;
            c_2516582529 = colontmp__536871906[chckIndx(i_536871907, 0, (colontmp__536871906).length - 1)];
            updateLastHierarchyChangeFromChildren_2516582486(c_2516582529, currentIndex_2516582488);
            self_2516582487.lastHierarchyChange = nimMax(nimMax(self_2516582487.lastHierarchyChange, c_2516582529.lastHierarchyChange), c_2516582529.lastBoundsChange);
            i_536871907 = addInt(i_536871907, 1);
            if (!(((colontmp__536871906).length == L_536871908))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582487.m_type, NTI2516582416)) {
    Label7: {
      var c_2516582540 = null;
      var colontmp__536871911 = [];
      colontmp__536871911 = self_2516582487.children;
      var i_536871912 = 0;
      var L_536871913 = (colontmp__536871911).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871912 < L_536871913)) break Label9;
            c_2516582540 = colontmp__536871911[chckIndx(i_536871912, 0, (colontmp__536871911).length - 1)];
            updateLastHierarchyChangeFromChildren_2516582486(c_2516582540, currentIndex_2516582488);
            self_2516582487.lastHierarchyChange = nimMax(nimMax(self_2516582487.lastHierarchyChange, c_2516582540.lastHierarchyChange), c_2516582540.lastBoundsChange);
            i_536871912 = addInt(i_536871912, 1);
            if (!(((colontmp__536871911).length == L_536871913))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582487.m_type, NTI2516582418)) {
    Label10: {
      var c_2516582551 = null;
      var colontmp__536871916 = [];
      colontmp__536871916 = self_2516582487.children;
      var i_536871917 = 0;
      var L_536871918 = (colontmp__536871916).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871917 < L_536871918)) break Label12;
            c_2516582551 = colontmp__536871916[chckIndx(i_536871917, 0, (colontmp__536871916).length - 1)];
            updateLastHierarchyChangeFromChildren_2516582486(c_2516582551, currentIndex_2516582488);
            self_2516582487.lastHierarchyChange = nimMax(nimMax(self_2516582487.lastHierarchyChange, c_2516582551.lastHierarchyChange), c_2516582551.lastBoundsChange);
            i_536871917 = addInt(i_536871917, 1);
            if (!(((colontmp__536871916).length == L_536871918))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582487.m_type, NTI2516582420)) {
    if (!(eqStrings(self_2516582487.text, self_2516582487.lastRenderedText))) {
    self_2516582487.lastHierarchyChange = nimMax(self_2516582487.lastHierarchyChange, currentIndex_2516582488);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3238002704(self_3238002705, frameIndex_3238002706, statusBarWidget_3238002707) {
    var Temporary1;

    var statusWidget_3238002708 = null;
    var commandLineWidget_3238002709 = null;
    if (((statusBarWidget_3238002707.children).length == 0)) {
    statusWidget_3238002708 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.5)}, NTI2516582411), lastHierarchyChange: frameIndex_3238002706, m_type: NTI2516582420, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3238002707.children.push(statusWidget_3238002708);;
    commandLineWidget_3238002709 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.5), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), lastHierarchyChange: frameIndex_3238002706, m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3238002707.children.push(commandLineWidget_3238002709);;
    layoutWidget_2516582724(statusWidget_3238002708, statusBarWidget_3238002707.lastBounds, frameIndex_3238002706, self_3238002705.platform.layoutOptions);
    layoutWidget_2516582724(commandLineWidget_3238002709, statusBarWidget_3238002707.lastBounds, frameIndex_3238002706, self_3238002705.platform.layoutOptions);
    }
    else {
      statusWidget_3238002708 = statusBarWidget_3238002707.children[chckIndx(0, 0, (statusBarWidget_3238002707.children).length - 1)];
      commandLineWidget_3238002709 = statusBarWidget_3238002707.children[chckIndx(1, 0, (statusBarWidget_3238002707.children).length - 1)];
    }
    
    var textColor_3238002726 = color_3271557229(self_3238002705.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((self_3238002705.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3238002705.currentMode;
    }
    
    statusWidget_3238002708.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2516582464(statusWidget_3238002708, textColor_3238002726, frameIndex_3238002706);
    updateLastHierarchyChangeFromChildren_2516582486(statusWidget_3238002708, frameIndex_3238002706);
    statusBarWidget_3238002707.lastHierarchyChange = nimMax(statusBarWidget_3238002707.lastHierarchyChange, statusWidget_3238002708.lastHierarchyChange);
    activeHEX3D_2382364782(getCommandLineTextEditor_1291851067(self_3238002705), self_3238002705.commandLineMode);
    updateWidget_3254779914(getCommandLineTextEditor_1291851067(self_3238002705), self_3238002705, commandLineWidget_3238002709, frameIndex_3238002706);
    statusBarWidget_3238002707.lastHierarchyChange = nimMax(statusBarWidget_3238002707.lastHierarchyChange, commandLineWidget_3238002709.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2516582675(self_2516582676, currentIndex_2516582677, recurse_2516582678) {
    if (isObj(self_2516582676.m_type, NTI2516582412)) {
    Label1: {
      var c_2516582688 = null;
      var colontmp__536871921 = [];
      colontmp__536871921 = self_2516582676.children;
      var i_536871922 = 0;
      var L_536871923 = (colontmp__536871921).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871922 < L_536871923)) break Label3;
            c_2516582688 = colontmp__536871921[chckIndx(i_536871922, 0, (colontmp__536871921).length - 1)];
            if (recurse_2516582678) {
            updateInvalidationFromChildren_2516582675(c_2516582688, currentIndex_2516582677, recurse_2516582678);
            }
            
            self_2516582676.lastInvalidation = nimMax(nimMax(self_2516582676.lastInvalidation, c_2516582688.lastInvalidation), currentIndex_2516582677);
            i_536871922 = addInt(i_536871922, 1);
            if (!(((colontmp__536871921).length == L_536871923))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582676.m_type, NTI2516582414)) {
    Label4: {
      var c_2516582698 = null;
      var colontmp__536871926 = [];
      colontmp__536871926 = self_2516582676.children;
      var i_536871927 = 0;
      var L_536871928 = (colontmp__536871926).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871927 < L_536871928)) break Label6;
            c_2516582698 = colontmp__536871926[chckIndx(i_536871927, 0, (colontmp__536871926).length - 1)];
            if (recurse_2516582678) {
            updateInvalidationFromChildren_2516582675(c_2516582698, currentIndex_2516582677, recurse_2516582678);
            }
            
            self_2516582676.lastInvalidation = nimMax(nimMax(self_2516582676.lastInvalidation, c_2516582698.lastInvalidation), currentIndex_2516582677);
            i_536871927 = addInt(i_536871927, 1);
            if (!(((colontmp__536871926).length == L_536871928))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582676.m_type, NTI2516582416)) {
    Label7: {
      var c_2516582708 = null;
      var colontmp__536871931 = [];
      colontmp__536871931 = self_2516582676.children;
      var i_536871932 = 0;
      var L_536871933 = (colontmp__536871931).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871932 < L_536871933)) break Label9;
            c_2516582708 = colontmp__536871931[chckIndx(i_536871932, 0, (colontmp__536871931).length - 1)];
            if (recurse_2516582678) {
            updateInvalidationFromChildren_2516582675(c_2516582708, currentIndex_2516582677, recurse_2516582678);
            }
            
            self_2516582676.lastInvalidation = nimMax(nimMax(self_2516582676.lastInvalidation, c_2516582708.lastInvalidation), currentIndex_2516582677);
            i_536871932 = addInt(i_536871932, 1);
            if (!(((colontmp__536871931).length == L_536871933))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2516582676.m_type, NTI2516582418)) {
    Label10: {
      var c_2516582718 = null;
      var colontmp__536871936 = [];
      colontmp__536871936 = self_2516582676.children;
      var i_536871937 = 0;
      var L_536871938 = (colontmp__536871936).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871937 < L_536871938)) break Label12;
            c_2516582718 = colontmp__536871936[chckIndx(i_536871937, 0, (colontmp__536871936).length - 1)];
            if (recurse_2516582678) {
            updateInvalidationFromChildren_2516582675(c_2516582718, currentIndex_2516582677, recurse_2516582678);
            }
            
            self_2516582676.lastInvalidation = nimMax(nimMax(self_2516582676.lastInvalidation, c_2516582718.lastInvalidation), currentIndex_2516582677);
            i_536871937 = addInt(i_536871937, 1);
            if (!(((colontmp__536871936).length == L_536871938))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3238002766(self_3238002767, frameIndex_3238002768) {
            var Temporary4;
            var Temporary8;

    if ((self_3238002767.widget == null)) {
    mainStack_3238002728[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), right: -1.0, logLayout: false, m_type: NTI2516582414, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3238002767.widget = mainStack_3238002728[0];
    mainPanel_3238002730[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3238002728[0].children.push(mainPanel_3238002730[0]);;
    viewPanel_3238002729[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), bottom: (-2.0 * totalLineHeight_2499805351(self_3238002767.platform)), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3238002730[0].children.push(viewPanel_3238002729[0]);;
    commandLineWidget_3238002727[0] = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 1.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), top: (-2.0 * totalLineHeight_2499805351(self_3238002767.platform)), fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3238002730[0].children.push(commandLineWidget_3238002727[0]);;
    layoutWidget_2516582724(self_3238002767.widget, rect_2113929240(vec2_2130707293(0.0, 0.0), size_2499805304(self_3238002767.platform)), frameIndex_3238002768, self_3238002767.platform.layoutOptions);
    }
    
    if (viewPanel_3238002729[0].children.length < 0) { for (var i = viewPanel_3238002729[0].children.length ; i < 0 ; ++i) viewPanel_3238002729[0].children.push(null); }
               else { viewPanel_3238002729[0].children.length = 0; };
    var rects_3238002791 = layoutViews_1291848235(self_3238002767.layout, self_3238002767.layout_props, rect_2113929234(0.0, 0.0, 1.0, 1.0), (self_3238002767.views).length);
    Label1: {
      var i_3238002797 = 0;
      var view_3238002798 = null;
      var i_536871837 = 0;
      var L_536871838 = (self_3238002767.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871837 < L_536871838)) break Label3;
            i_3238002797 = i_536871837;
            view_3238002798 = self_3238002767.views[chckIndx(i_536871837, 0, (self_3238002767.views).length - 1)];
            var widget_3238002799 = null;
            if (contains_3238002842(widgetsPerEditor_3238002756[0], view_3238002798.editor.id)) {
            widget_3238002799 = (Temporary4 = HEX5BHEX5D_3238003141(widgetsPerEditor_3238002756[0], view_3238002798.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3238002799 = {lastHierarchyChange: frameIndex_3238002768, logLayout: false, m_type: NTI2516582412, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3238003260(widgetsPerEditor_3238002756[0], view_3238002798.editor.id, widget_3238002799);
            }
            
            if ((i_3238002797 < (rects_3238002791).length)) {
            var colontmp__536871835 = xy_2113929248(rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)]);
            var colontmp__536871836 = vec2_2130707293((rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].x + rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].w), (rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].y + rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].h));
            widget_3238002799.anchor = nimCopy(widget_3238002799.anchor, {Field0: nimCopy(null, colontmp__536871835, NTI2130706720), Field1: nimCopy(null, colontmp__536871836, NTI2130706720)}, NTI2516582411);
            layoutWidget_2516582724(widget_3238002799, viewPanel_3238002729[0].lastBounds, frameIndex_3238002768, self_3238002767.platform.layoutOptions);
            viewPanel_3238002729[0].children.push(widget_3238002799);;
            activeHEX3D_2382364782(view_3238002798.editor, (self_3238002767.currentView == i_3238002797));
            updateWidget_3254779914(view_3238002798.editor, self_3238002767, widget_3238002799, frameIndex_3238002768);
            viewPanel_3238002729[0].lastHierarchyChange = nimMax(viewPanel_3238002729[0].lastHierarchyChange, widget_3238002799.lastHierarchyChange);
            }
            
            i_536871837 = addInt(i_536871837, 1);
            if (!(((self_3238002767.views).length == L_536871838))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3238002730[0].lastHierarchyChange = nimMax(mainPanel_3238002730[0].lastHierarchyChange, viewPanel_3238002729[0].lastHierarchyChange);
    var lastPopups_3238004329 = HEX5BHEX5D_3238004305(mainStack_3238002728[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3238002728[0].children.length < 1) { for (var i = mainStack_3238002728[0].children.length ; i < 1 ; ++i) mainStack_3238002728[0].children.push(null); }
               else { mainStack_3238002728[0].children.length = 1; };
    Label5: {
      var i_3238004366 = 0;
      var popup_3238004367 = null;
      var i_536871844 = 0;
      var L_536871845 = (self_3238002767.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871844 < L_536871845)) break Label7;
            i_3238004366 = i_536871844;
            popup_3238004367 = self_3238002767.popups[chckIndx(i_536871844, 0, (self_3238002767.popups).length - 1)];
            var widget_3238004368 = null;
            if (contains_3238002842(widgetsPerEditor_3238002756[0], popup_3238004367.id)) {
            widget_3238004368 = (Temporary8 = HEX5BHEX5D_3238003141(widgetsPerEditor_3238002756[0], popup_3238004367.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3238004368 = {backgroundColor: color_2550136904(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3238002768, logLayout: false, m_type: NTI2516582412, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3238003260(widgetsPerEditor_3238002756[0], popup_3238004367.id, widget_3238004368);
            }
            
            var colontmp__536871841 = vec2_2130707293(0.25, 0.25);
            var colontmp__536871842 = vec2_2130707293(0.75, 0.75);
            widget_3238004368.anchor = nimCopy(widget_3238004368.anchor, {Field0: nimCopy(null, colontmp__536871841, NTI2130706720), Field1: nimCopy(null, colontmp__536871842, NTI2130706720)}, NTI2516582411);
            layoutWidget_2516582724(widget_3238004368, mainStack_3238002728[0].lastBounds, frameIndex_3238002768, self_3238002767.platform.layoutOptions);
            mainStack_3238002728[0].children.push(widget_3238004368);;
            updateWidget_3254779920(popup_3238004367, self_3238002767, widget_3238004368, frameIndex_3238002768);
            mainStack_3238002728[0].lastHierarchyChange = nimMax(mainStack_3238002728[0].lastHierarchyChange, widget_3238004368.lastHierarchyChange);
            i_536871844 = addInt(i_536871844, 1);
            if (!(((self_3238002767.popups).length == L_536871845))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3238004527 = null;
      var i_536871854 = 0;
      var L_536871855 = (lastPopups_3238004329).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871854 < L_536871855)) break Label11;
            p_3238004527 = lastPopups_3238004329[chckIndx(i_536871854, 0, (lastPopups_3238004329).length - 1)];
            Label12: {
              if (contains_3238004528(mainStack_3238002728[0].children, p_3238004527)) {
              break Label12;
              }
              
              Label13: {
                var c_3238004564 = null;
                var i_536871851 = 0;
                var L_536871852 = (mainStack_3238002728[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871851 < L_536871852)) break Label15;
                      c_3238004564 = mainStack_3238002728[0].children[chckIndx(i_536871851, 0, (mainStack_3238002728[0].children).length - 1)];
                      invalidate_2516582631(c_3238004564, frameIndex_3238002768, p_3238004527.lastBounds);
                      i_536871851 = addInt(i_536871851, 1);
                      if (!(((mainStack_3238002728[0].children).length == L_536871852))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871854 = addInt(i_536871854, 1);
            if (!(((lastPopups_3238004329).length == L_536871855))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3238002704(self_3238002767, frameIndex_3238002768, commandLineWidget_3238002727[0]);
    mainPanel_3238002730[0].lastHierarchyChange = nimMax(mainPanel_3238002730[0].lastHierarchyChange, commandLineWidget_3238002727[0].lastHierarchyChange);
    mainStack_3238002728[0].lastHierarchyChange = nimMax(mainStack_3238002728[0].lastHierarchyChange, mainPanel_3238002730[0].lastHierarchyChange);
    updateInvalidationFromChildren_2516582675(mainStack_3238002728[0], -1, false);
    self_3238002767.widget.lastHierarchyChange = nimMax(self_3238002767.widget.lastHierarchyChange, commandLineWidget_3238002727[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3238004583(self_3238004584, size_3238004585, frameIndex_3238004586) {
  BeforeRet: {
    self_3238004584.lastBounds = nimCopy(self_3238004584.lastBounds, rect_2113929240(vec2_2130707293(0.0, 0.0), size_3238004585), NTI2113929221);
    if ((self_3238004584.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2516582724(self_3238004584.widget, self_3238004584.lastBounds, frameIndex_3238004586, self_3238004584.platform.layoutOptions);
  };

  
}

function requestRender_536871263(redrawEverything_536871264) {
    
function HEX3Aanonymous_536871265(time_536871266) {
        hasRequestedRerender_536870978[0] = false;
        isRenderInProgress_536870979[0] = true;
        try {
        try {
        var layoutTime_536871272 = 0.0;
        var updateTime_536871273 = 0.0;
        var renderTime_536871274 = 0.0;
        Label3: {
          ed_536870948[0].frameTimer = nimCopy(ed_536870948[0].frameTimer, startTimer_2466250804(), NTI2466250783);
          var updateTimer_536871275 = startTimer_2466250804();
          updateWidgetTree_3238002766(ed_536870948[0], frameIndex_536870977[0]);
          updateTime_536871273 = ms_2466250801(elapsed_2466250815(updateTimer_536871275));
          var layoutTimer_536871276 = startTimer_2466250804();
          layoutWidgetTree_3238004583(ed_536870948[0], size_2499805304(rend_536870946[0]), frameIndex_536870977[0]);
          layoutTime_536871272 = ms_2466250801(elapsed_2466250815(layoutTimer_536871276));
          var renderTimer_536871277 = startTimer_2466250804();
          render_2499805295(rend_536870946[0], ed_536870948[0].widget, frameIndex_536870977[0]);
          renderTime_536871274 = ms_2466250801(elapsed_2466250815(renderTimer_536871277));
          frameTime_536870976[0] = ms_2466250801(elapsed_2466250815(ed_536870948[0].frameTimer));
        };
        if ((10.0 < frameTime_536870976[0])) {
        var fmtRes_536871282 = [mnewString(0)];
        fmtRes_536871282[0].push.apply(fmtRes_536871282[0], [70,114,97,109,101,58,32]);;
        formatValue_2516582876(fmtRes_536871282, 0, frameTime_536870976[0], [62,53,46,50]);
        fmtRes_536871282[0].push.apply(fmtRes_536871282[0], [109,115,32,40,117,58,32]);;
        formatValue_2516582876(fmtRes_536871282, 0, updateTime_536871273, [62,53,46,50]);
        fmtRes_536871282[0].push.apply(fmtRes_536871282[0], [109,115,44,32,108,58,32]);;
        formatValue_2516582876(fmtRes_536871282, 0, layoutTime_536871272, [62,53,46,50]);
        fmtRes_536871282[0].push.apply(fmtRes_536871282[0], [109,115,44,32,114,58,32]);;
        formatValue_2516582876(fmtRes_536871282, 0, renderTime_536871274, [62,53,46,50]);
        fmtRes_536871282[0].push.apply(fmtRes_536871282[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871282[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870977[0] = addInt(frameIndex_536870977[0], 1);
        }
        } finally {
        isRenderInProgress_536870979[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870947[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870978[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870979[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871265);
  };

  
}

function subscribe_536871750(event_536871752, callback_536871754) {
  var result_536871755 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871755 = nimCopy(result_536871755, newId_2046820569(), NTI2046820355);
    event_536871752.handlers.push({Field0: nimCopy(null, result_536871755, NTI2046820355), Field1: callback_536871754});;

  return result_536871755;

}

function HEX3Aanonymous_536871332(event_536871350) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871381(event_536871399) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871430(event_536871448) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871479(event_536871497) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871528(event_536871546) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871577(event_536871595) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871626(event_536871644) {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871675() {
    requestRender_536871263(false);

  
}

function HEX3Aanonymous_536871724(redrawEverything_536871725) {
    requestRender_536871263(redrawEverything_536871725);

  
}
var _ = subscribe_1291851165(rend_536870946[0].onKeyPress, HEX3Aanonymous_536871332);
var _ = subscribe_1291851165(rend_536870946[0].onKeyRelease, HEX3Aanonymous_536871381);
var _ = subscribe_1291851165(rend_536870946[0].onRune, HEX3Aanonymous_536871430);
var _ = subscribe_1291851335(rend_536870946[0].onMousePress, HEX3Aanonymous_536871479);
var _ = subscribe_1291851335(rend_536870946[0].onMouseRelease, HEX3Aanonymous_536871528);
var _ = subscribe_1291851456(rend_536870946[0].onMouseMove, HEX3Aanonymous_536871577);
var _ = subscribe_1291851528(rend_536870946[0].onScroll, HEX3Aanonymous_536871626);
var _ = subscribe_1291851672(rend_536870946[0].onCloseRequested, HEX3Aanonymous_536871675);
var _ = subscribe_536871750(rend_536870946[0].onResized, HEX3Aanonymous_536871724);
Label319: {
  setHandleInputs_1291855236(ed_536870948[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291861321([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291861239([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291859653(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291859653(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870947[0] = true;
requestRender_536871263(false);

function formatValue_1291848872(result_1291848874, result_1291848874_Idx, value_1291848875, specifier_1291848876) {
    formatValue_721420459(result_1291848874, result_1291848874_Idx, HEX24_1627394481(value_1291848875), specifier_1291848876);

  
}

function handleUnknownDocumentEditorAction_1291848856(self_1291848857, editor_1291848858, action_1291848859, args_1291848860) {
  var result_1291848861 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848861 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848871 = [mnewString(0)];
    fmtRes_1291848871[0].push.apply(fmtRes_1291848871[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848871, 0, action_1291848859, []);
    fmtRes_1291848871[0].push.apply(fmtRes_1291848871[0], [32]);;
    formatValue_1291848872(fmtRes_1291848871, 0, args_1291848860, []);
    fmtRes_1291848871[0].push.apply(fmtRes_1291848871[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848871, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848871[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848861 = 0;
    break BeforeRet;
  };

  return result_1291848861;

}

function insert_2801813601(x_2801813603, x_2801813603_Idx, item_2801813604, i_2801813605) {
    var it_2801813625 = null;
    x_2801813603[x_2801813603_Idx] = x_2801813603[x_2801813603_Idx] || []; x_2801813603[x_2801813603_Idx].splice(i_2801813605, 0, it_2801813625);
    x_2801813603[x_2801813603_Idx][chckIndx(i_2801813605, 0, (x_2801813603[x_2801813603_Idx]).length - 1)] = item_2801813604;

  
}

function toJson_2801806119(self_2801806120, opt_2801806121) {
  var result_2801806122 = null;

    result_2801806122 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801806122, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2801806122, [105,100], newJInt_1627390040(self_2801806120.id));

  return result_2801806122;

}

function none_2801806025() {
  var result_2801806031 = ({val: null});

  return result_2801806031;

}

function some_2801806084(val_2801806086) {
  var result_2801806087 = ({val: null});

    if (!(!((val_2801806086 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801806087.val = val_2801806086;

  return result_2801806087;

}

function getTextDocumentEditor_2801806015(wrapper_2801806016) {
      var Temporary1;

  var result_2801806021 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2801806021 = nimCopy(result_2801806021, none_2801806025(), NTI2801800978);
    break BeforeRet;
    }
    
      var oHEX60gensym169_2801806034 = getEditorForId_1291850668(gEditor, wrapper_2801806016.id);
      if (!isSome_2801806039(oHEX60gensym169_2801806034)) Temporary1 = false; else {        var editor_2801806076 = get_2801806059(oHEX60gensym169_2801806034);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2801806076.m_type, NTI2801795294)) {
    result_2801806021 = nimCopy(result_2801806021, some_2801806084(editor_2801806076), NTI2801800978);
    break BeforeRet;
    }
    
    }
    
    result_2801806021 = nimCopy(result_2801806021, none_2801806025(), NTI2801800978);
    break BeforeRet;
  };

  return result_2801806021;

}

function isNone_2801806376(self_2801806378) {
  var result_2801806379 = false;

    result_2801806379 = (self_2801806378.val == null);

  return result_2801806379;

}

function get_2801806396(self_2801806398) {
  var result_2801806399 = null;

    if (isNone_2801806376(self_2801806398)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801806399 = self_2801806398["val"];

  return result_2801806399;

}

function setModeScript_2801806261_2801806368(self_2801806369, mode_2801806370) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym180_2801806371 = getTextDocumentEditor_2801806015(self_2801806369);
      if (isNone_2801806376(rHEX60gensym180_2801806371)) {
      break BeforeRet;
      }
      
    };
    setMode_2801806301(get_2801806396(rHEX60gensym180_2801806371), mode_2801806370);
  };

  
}

function fromJsonHook_2801806123(t_2801806124, jsonNode_2801806125) {
    t_2801806124.id = jsonTo_2801806126(HEX5BHEX5D_1627393037(jsonNode_2801806125, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2801806436(a_2801806438, b_2801806439, opt_2801806440) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801806439, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2801806439}));
    }
    
    fromJsonHook_2801806123(a_2801806438, b_2801806439);

  
}

function jsonTo_2801806430(b_2801806432, opt_2801806434) {
  var result_2801806435 = [({id: 0})];

    fromJson_2801806436(result_2801806435[0], b_2801806432, opt_2801806434);

  return result_2801806435[0];

}

function setModeApi_2801806428(HEX3Atmp_2801806264) {
  var result_2801806429 = null;

    result_2801806429 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2801806261_2801806368(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806264, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801806264, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym185_2801806452 = [115,101,116,77,111,100,101];
    var fmtRes_2801806457 = [mnewString(0)];
    fmtRes_2801806457[0].push.apply(fmtRes_2801806457[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806457, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym185_2801806452 || [],fmtRes_2801806457[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806429;

}

function modeScript_2801806552_2801806560(self_2801806561) {
  var result_2801806562 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym194_2801806563 = getTextDocumentEditor_2801806015(self_2801806561);
      if (isNone_2801806376(rHEX60gensym194_2801806563)) {
      break BeforeRet;
      }
      
    };
    result_2801806562 = nimCopy(null, mode_2801806557(get_2801806396(rHEX60gensym194_2801806563)), NTI33554449);
  };

  return result_2801806562;

}

function modeApi_2801806590(HEX3Atmp_2801806554) {
  var result_2801806591 = null;

  BeforeRet: {
    result_2801806591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2801806591 = toJson_1811939932(modeScript_2801806552_2801806560(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806554, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym200_2801806601 = [109,111,100,101];
    var fmtRes_2801806606 = [mnewString(0)];
    fmtRes_2801806606[0].push.apply(fmtRes_2801806606[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806606, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym200_2801806601 || [],fmtRes_2801806606[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801806591;

}

function getContextWithModeScript_2801806609_2801806618(self_2801806619, context_2801806620) {
  var result_2801806621 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym204_2801806622 = getTextDocumentEditor_2801806015(self_2801806619);
      if (isNone_2801806376(rHEX60gensym204_2801806622)) {
      break BeforeRet;
      }
      
    };
    result_2801806621 = nimCopy(null, getContextWithMode_2801805740(get_2801806396(rHEX60gensym204_2801806622), context_2801806620), NTI33554449);
  };

  return result_2801806621;

}

function getContextWithModeApi_2801806650(HEX3Atmp_2801806611) {
  var result_2801806651 = null;

  BeforeRet: {
    result_2801806651 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801806651 = toJson_1811939932(getContextWithModeScript_2801806609_2801806618(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806611, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801806611, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym210_2801806666 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2801806671 = [mnewString(0)];
    fmtRes_2801806671[0].push.apply(fmtRes_2801806671[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806671, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym210_2801806666 || [],fmtRes_2801806671[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801806651;

}

function updateTargetColumnScript_2801806674_2801806682(self_2801806683, cursor_2801806684) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym214_2801806685 = getTextDocumentEditor_2801806015(self_2801806683);
      if (isNone_2801806376(rHEX60gensym214_2801806685)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2801806679(get_2801806396(rHEX60gensym214_2801806685), cursor_2801806684);
  };

  
}

function parseEnum_2801806737(s_2801806739) {
    var Temporary1;

  var result_2801806740 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2801806739))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2801806739 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2801806740 = Temporary1;

  return result_2801806740;

}

function fromJson_2801806725(a_2801806727, a_2801806727_Idx, b_2801806728, opt_2801806729) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801806728, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2801806728}));
    }
    
    switch (b_2801806728.kind) {
    case 2:
      a_2801806727[a_2801806727_Idx] = chckRange(getBiggestInt_1627390129(b_2801806728, 0), 0, 4);
      break;
    case 4:
      a_2801806727[a_2801806727_Idx] = parseEnum_2801806737(getStr_1627390106(b_2801806728, []));
      break;
    default: 
      if (true) {
      var fmtRes_2801806765 = [mnewString(0)];
      fmtRes_2801806765[0].push.apply(fmtRes_2801806765[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2801806765, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2801806765[0].push.apply(fmtRes_2801806765[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2801806765, 0, pretty_1627394477(b_2801806728, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2801806765[0]);
      }
      
      break;
    }

  
}

function jsonTo_2801806719(b_2801806721, opt_2801806723) {
  var result_2801806724 = [0];

    fromJson_2801806725(result_2801806724, 0, b_2801806721, opt_2801806723);

  return result_2801806724[0];

}

function updateTargetColumnApi_2801806712(HEX3Atmp_2801806676) {
  var result_2801806713 = null;

    result_2801806713 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2801806674_2801806682(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806676, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801806676, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym219_2801806769 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2801806774 = [mnewString(0)];
    fmtRes_2801806774[0].push.apply(fmtRes_2801806774[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806774, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym219_2801806769 || [],fmtRes_2801806774[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806713;

}

function invertSelectionScript_2801806791_2801806798(self_2801806799) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym228_2801806800 = getTextDocumentEditor_2801806015(self_2801806799);
      if (isNone_2801806376(rHEX60gensym228_2801806800)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2801806796(get_2801806396(rHEX60gensym228_2801806800));
  };

  
}

function invertSelectionApi_2801806826(HEX3Atmp_2801806793) {
  var result_2801806827 = null;

    result_2801806827 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2801806791_2801806798(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806793, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym233_2801806833 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801806838 = [mnewString(0)];
    fmtRes_2801806838[0].push.apply(fmtRes_2801806838[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806838, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym233_2801806833 || [],fmtRes_2801806838[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806827;

}

function insertScript_2801806854_2801806867(self_2801806868, selections_2801806869, text_2801806870, notify_2801806871, record_2801806872, autoIndent_2801806873) {
  var result_2801806874 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym241_2801806875 = getTextDocumentEditor_2801806015(self_2801806868);
      if (isNone_2801806376(rHEX60gensym241_2801806875)) {
      break BeforeRet;
      }
      
    };
    result_2801806874 = nimCopy(null, insert_2801806859(get_2801806396(rHEX60gensym241_2801806875), selections_2801806869, text_2801806870, notify_2801806871, record_2801806872, autoIndent_2801806873), NTI2801801661);
  };

  return result_2801806874;

}

function insertApi_2801806907(HEX3Atmp_2801806856) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2801806908 = null;

  BeforeRet: {
    result_2801806908 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2801806856))) {
      Temporary6 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2801806856))) {
      Temporary8 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2801806856))) {
      Temporary10 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2801806908 = toJson_2801807206(insertScript_2801806854_2801806867(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806914(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801806856, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym247_2801807262 = [105,110,115,101,114,116];
    var fmtRes_2801807267 = [mnewString(0)];
    fmtRes_2801807267[0].push.apply(fmtRes_2801807267[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807267, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym247_2801807262 || [],fmtRes_2801807267[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801806908;

}

function deleteScript_2801807355_2801807366(self_2801807367, selections_2801807368, notify_2801807369, record_2801807370) {
  var result_2801807371 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym274_2801807372 = getTextDocumentEditor_2801806015(self_2801807367);
      if (isNone_2801806376(rHEX60gensym274_2801807372)) {
      break BeforeRet;
      }
      
    };
    result_2801807371 = nimCopy(null, delete_2801807360(get_2801806396(rHEX60gensym274_2801807372), selections_2801807368, notify_2801807369, record_2801807370), NTI2801802177);
  };

  return result_2801807371;

}

function deleteApi_2801807402(HEX3Atmp_2801807357) {
      var Temporary5;
      var Temporary7;

  var result_2801807403 = null;

  BeforeRet: {
    result_2801807403 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801807357))) {
      Temporary5 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801807357, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801807357))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801807357, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2801807403 = toJson_2801807206(deleteScript_2801807355_2801807366(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807357, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806914(HEX5BHEX5D_1627393116(HEX3Atmp_2801807357, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym280_2801807428 = [100,101,108,101,116,101];
    var fmtRes_2801807433 = [mnewString(0)];
    fmtRes_2801807433[0].push.apply(fmtRes_2801807433[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807433, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym280_2801807428 || [],fmtRes_2801807433[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801807403;

}

function selectPrevScript_2801807471_2801807623(self_2801807624) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym285_2801807625 = getTextDocumentEditor_2801806015(self_2801807624);
      if (isNone_2801806376(rHEX60gensym285_2801807625)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2801807476(get_2801806396(rHEX60gensym285_2801807625));
  };

  
}

function selectPrevApi_2801807651(HEX3Atmp_2801807473) {
  var result_2801807652 = null;

    result_2801807652 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2801807471_2801807623(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807473, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym290_2801807658 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2801807663 = [mnewString(0)];
    fmtRes_2801807663[0].push.apply(fmtRes_2801807663[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807663, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym290_2801807658 || [],fmtRes_2801807663[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807652;

}

function selectNextScript_2801807667_2801807796(self_2801807797) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym296_2801807798 = getTextDocumentEditor_2801806015(self_2801807797);
      if (isNone_2801806376(rHEX60gensym296_2801807798)) {
      break BeforeRet;
      }
      
    };
    selectNext_2801807672(get_2801806396(rHEX60gensym296_2801807798));
  };

  
}

function selectNextApi_2801807824(HEX3Atmp_2801807669) {
  var result_2801807825 = null;

    result_2801807825 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2801807667_2801807796(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807669, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym301_2801807831 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2801807836 = [mnewString(0)];
    fmtRes_2801807836[0].push.apply(fmtRes_2801807836[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807836, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym301_2801807831 || [],fmtRes_2801807836[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807825;

}

function selectInsideScript_2801807839_2801807858(self_2801807859, cursor_2801807860) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym306_2801807861 = getTextDocumentEditor_2801806015(self_2801807859);
      if (isNone_2801806376(rHEX60gensym306_2801807861)) {
      break BeforeRet;
      }
      
    };
    selectInside_2801807844(get_2801806396(rHEX60gensym306_2801807861), cursor_2801807860);
  };

  
}

function jsonTo_2801807895(b_2801807897, opt_2801807899) {
  var result_2801807900 = [{Field0: 0, Field1: 0}];

    fromJson_2801807029(result_2801807900[0], b_2801807897, opt_2801807899);

  return result_2801807900[0];

}

function selectInsideApi_2801807888(HEX3Atmp_2801807841) {
  var result_2801807889 = null;

    result_2801807889 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2801807839_2801807858(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807841, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807895(HEX5BHEX5D_1627393116(HEX3Atmp_2801807841, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym311_2801807906 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2801807911 = [mnewString(0)];
    fmtRes_2801807911[0].push.apply(fmtRes_2801807911[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807911, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym311_2801807906 || [],fmtRes_2801807911[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807889;

}

function selectInsideCurrentScript_2801807916_2801807923(self_2801807924) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_2801807925 = getTextDocumentEditor_2801806015(self_2801807924);
      if (isNone_2801806376(rHEX60gensym315_2801807925)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2801807921(get_2801806396(rHEX60gensym315_2801807925));
  };

  
}

function selectInsideCurrentApi_2801807951(HEX3Atmp_2801807918) {
  var result_2801807952 = null;

    result_2801807952 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2801807916_2801807923(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807918, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym320_2801807958 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2801807963 = [mnewString(0)];
    fmtRes_2801807963[0].push.apply(fmtRes_2801807963[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807963, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym320_2801807958 || [],fmtRes_2801807963[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807952;

}

function selectLineScript_2801807966_2801807974(self_2801807975, line_2801807976) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym324_2801807977 = getTextDocumentEditor_2801806015(self_2801807975);
      if (isNone_2801806376(rHEX60gensym324_2801807977)) {
      break BeforeRet;
      }
      
    };
    selectLine_2801807971(get_2801806396(rHEX60gensym324_2801807977), line_2801807976);
  };

  
}

function selectLineApi_2801808004(HEX3Atmp_2801807968) {
  var result_2801808005 = null;

    result_2801808005 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2801807966_2801807974(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801807968, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801807968, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym329_2801808016 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2801808021 = [mnewString(0)];
    fmtRes_2801808021[0].push.apply(fmtRes_2801808021[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808021, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym329_2801808016 || [],fmtRes_2801808021[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808005;

}

function selectLineCurrentScript_2801808024_2801808031(self_2801808032) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym332_2801808033 = getTextDocumentEditor_2801806015(self_2801808032);
      if (isNone_2801806376(rHEX60gensym332_2801808033)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2801808029(get_2801806396(rHEX60gensym332_2801808033));
  };

  
}

function selectLineCurrentApi_2801808059(HEX3Atmp_2801808026) {
  var result_2801808060 = null;

    result_2801808060 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2801808024_2801808031(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808026, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym337_2801808066 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2801808071 = [mnewString(0)];
    fmtRes_2801808071[0].push.apply(fmtRes_2801808071[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808071, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym337_2801808066 || [],fmtRes_2801808071[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808060;

}

function selectParentTsScript_2801808074_2801808094(self_2801808095, selection_2801808096) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym341_2801808097 = getTextDocumentEditor_2801806015(self_2801808095);
      if (isNone_2801806376(rHEX60gensym341_2801808097)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2801808079(get_2801806396(rHEX60gensym341_2801808097), selection_2801808096);
  };

  
}

function selectParentTsApi_2801808124(HEX3Atmp_2801808076) {
  var result_2801808125 = null;

    result_2801808125 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2801808074_2801808094(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808076, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801808131(HEX5BHEX5D_1627393116(HEX3Atmp_2801808076, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym346_2801808142 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2801808147 = [mnewString(0)];
    fmtRes_2801808147[0].push.apply(fmtRes_2801808147[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808147, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym346_2801808142 || [],fmtRes_2801808147[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808125;

}

function selectParentCurrentTsScript_2801808157_2801808164(self_2801808165) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym350_2801808166 = getTextDocumentEditor_2801806015(self_2801808165);
      if (isNone_2801806376(rHEX60gensym350_2801808166)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2801808162(get_2801806396(rHEX60gensym350_2801808166));
  };

  
}

function selectParentCurrentTsApi_2801808192(HEX3Atmp_2801808159) {
  var result_2801808193 = null;

    result_2801808193 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2801808157_2801808164(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808159, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym355_2801808199 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2801808204 = [mnewString(0)];
    fmtRes_2801808204[0].push.apply(fmtRes_2801808204[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808204, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym355_2801808199 || [],fmtRes_2801808204[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808193;

}

function insertTextScript_2801808210_2801808219(self_2801808220, text_2801808221) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym360_2801808222 = getTextDocumentEditor_2801806015(self_2801808220);
      if (isNone_2801806376(rHEX60gensym360_2801808222)) {
      break BeforeRet;
      }
      
    };
    insertText_2801808215(get_2801806396(rHEX60gensym360_2801808222), text_2801808221);
  };

  
}

function insertTextApi_2801808249(HEX3Atmp_2801808212) {
  var result_2801808250 = null;

    result_2801808250 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2801808210_2801808219(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808212, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801808212, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym365_2801808261 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2801808266 = [mnewString(0)];
    fmtRes_2801808266[0].push.apply(fmtRes_2801808266[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808266, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym365_2801808261 || [],fmtRes_2801808266[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808250;

}

function undoScript_2801808282_2801808337(self_2801808338) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym370_2801808339 = getTextDocumentEditor_2801806015(self_2801808338);
      if (isNone_2801806376(rHEX60gensym370_2801808339)) {
      break BeforeRet;
      }
      
    };
    undo_2801808287(get_2801806396(rHEX60gensym370_2801808339));
  };

  
}

function undoApi_2801808365(HEX3Atmp_2801808284) {
  var result_2801808366 = null;

    result_2801808366 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2801808282_2801808337(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808284, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym375_2801808372 = [117,110,100,111];
    var fmtRes_2801808377 = [mnewString(0)];
    fmtRes_2801808377[0].push.apply(fmtRes_2801808377[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808377, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym375_2801808372 || [],fmtRes_2801808377[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808366;

}

function redoScript_2801808384_2801808417(self_2801808418) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym380_2801808419 = getTextDocumentEditor_2801806015(self_2801808418);
      if (isNone_2801806376(rHEX60gensym380_2801808419)) {
      break BeforeRet;
      }
      
    };
    redo_2801808389(get_2801806396(rHEX60gensym380_2801808419));
  };

  
}

function redoApi_2801808445(HEX3Atmp_2801808386) {
  var result_2801808446 = null;

    result_2801808446 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2801808384_2801808417(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808386, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym385_2801808452 = [114,101,100,111];
    var fmtRes_2801808457 = [mnewString(0)];
    fmtRes_2801808457[0].push.apply(fmtRes_2801808457[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808457, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym385_2801808452 || [],fmtRes_2801808457[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808446;

}

function scrollTextScript_2801808464_2801808476(self_2801808477, amount_2801808478) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym390_2801808479 = getTextDocumentEditor_2801806015(self_2801808477);
      if (isNone_2801806376(rHEX60gensym390_2801808479)) {
      break BeforeRet;
      }
      
    };
    scrollText_2801808469(get_2801806396(rHEX60gensym390_2801808479), amount_2801808478);
  };

  
}

function scrollTextApi_2801808506(HEX3Atmp_2801808466) {
  var result_2801808507 = null;

    result_2801808507 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2801808464_2801808476(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808466, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801808513(HEX5BHEX5D_1627393116(HEX3Atmp_2801808466, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym395_2801808576 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2801808581 = [mnewString(0)];
    fmtRes_2801808581[0].push.apply(fmtRes_2801808581[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808581, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym395_2801808576 || [],fmtRes_2801808581[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808507;

}

function duplicateLastSelectionScript_2801808584_2801808633(self_2801808634) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym404_2801808635 = getTextDocumentEditor_2801806015(self_2801808634);
      if (isNone_2801806376(rHEX60gensym404_2801808635)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2801808589(get_2801806396(rHEX60gensym404_2801808635));
  };

  
}

function duplicateLastSelectionApi_2801808661(HEX3Atmp_2801808586) {
  var result_2801808662 = null;

    result_2801808662 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2801808584_2801808633(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808586, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym409_2801808668 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801808673 = [mnewString(0)];
    fmtRes_2801808673[0].push.apply(fmtRes_2801808673[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808673, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym409_2801808668 || [],fmtRes_2801808673[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808662;

}

function addCursorBelowScript_2801808684_2801808703(self_2801808704) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym412_2801808705 = getTextDocumentEditor_2801806015(self_2801808704);
      if (isNone_2801806376(rHEX60gensym412_2801808705)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2801808689(get_2801806396(rHEX60gensym412_2801808705));
  };

  
}

function addCursorBelowApi_2801808731(HEX3Atmp_2801808686) {
  var result_2801808732 = null;

    result_2801808732 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2801808684_2801808703(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808686, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym417_2801808738 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2801808743 = [mnewString(0)];
    fmtRes_2801808743[0].push.apply(fmtRes_2801808743[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808743, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym417_2801808738 || [],fmtRes_2801808743[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808732;

}

function addCursorAboveScript_2801808750_2801808769(self_2801808770) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym420_2801808771 = getTextDocumentEditor_2801806015(self_2801808770);
      if (isNone_2801806376(rHEX60gensym420_2801808771)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2801808755(get_2801806396(rHEX60gensym420_2801808771));
  };

  
}

function addCursorAboveApi_2801808797(HEX3Atmp_2801808752) {
  var result_2801808798 = null;

    result_2801808798 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2801808750_2801808769(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808752, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym425_2801808804 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2801808809 = [mnewString(0)];
    fmtRes_2801808809[0].push.apply(fmtRes_2801808809[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808809, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym425_2801808804 || [],fmtRes_2801808809[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808798;

}

function getPrevFindResultScript_2801808812_2801809073(self_2801809074, cursor_2801809075, offset_2801809076) {
  var result_2801809077 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym430_2801809078 = getTextDocumentEditor_2801806015(self_2801809074);
      if (isNone_2801806376(rHEX60gensym430_2801809078)) {
      break BeforeRet;
      }
      
    };
    result_2801809077 = nimCopy(result_2801809077, getPrevFindResult_2801805669(get_2801806396(rHEX60gensym430_2801809078), cursor_2801809075, offset_2801809076), NTI2415919115);
  };

  return result_2801809077;

}

function getPrevFindResultApi_2801809107(HEX3Atmp_2801808814) {
      var Temporary5;

  var result_2801809108 = null;

  BeforeRet: {
    result_2801809108 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801808814))) {
      Temporary5 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801808814, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2801809108 = toJson_2801807218(getPrevFindResultScript_2801808812_2801809073(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801808814, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807895(HEX5BHEX5D_1627393116(HEX3Atmp_2801808814, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym436_2801809128 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801809133 = [mnewString(0)];
    fmtRes_2801809133[0].push.apply(fmtRes_2801809133[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809133, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym436_2801809128 || [],fmtRes_2801809133[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801809108;

}

function getNextFindResultScript_2801809144_2801809302(self_2801809303, cursor_2801809304, offset_2801809305) {
  var result_2801809306 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym442_2801809307 = getTextDocumentEditor_2801806015(self_2801809303);
      if (isNone_2801806376(rHEX60gensym442_2801809307)) {
      break BeforeRet;
      }
      
    };
    result_2801809306 = nimCopy(result_2801809306, getNextFindResult_2801805673(get_2801806396(rHEX60gensym442_2801809307), cursor_2801809304, offset_2801809305), NTI2415919115);
  };

  return result_2801809306;

}

function getNextFindResultApi_2801809336(HEX3Atmp_2801809146) {
      var Temporary5;

  var result_2801809337 = null;

  BeforeRet: {
    result_2801809337 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809146))) {
      Temporary5 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801809146, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2801809337 = toJson_2801807218(getNextFindResultScript_2801809144_2801809302(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809146, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807895(HEX5BHEX5D_1627393116(HEX3Atmp_2801809146, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym448_2801809357 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801809362 = [mnewString(0)];
    fmtRes_2801809362[0].push.apply(fmtRes_2801809362[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809362, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym448_2801809357 || [],fmtRes_2801809362[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801809337;

}

function addNextFindResultToSelectionScript_2801809375_2801809390(self_2801809391) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym452_2801809392 = getTextDocumentEditor_2801806015(self_2801809391);
      if (isNone_2801806376(rHEX60gensym452_2801809392)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2801809380(get_2801806396(rHEX60gensym452_2801809392));
  };

  
}

function addNextFindResultToSelectionApi_2801809418(HEX3Atmp_2801809377) {
  var result_2801809419 = null;

    result_2801809419 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2801809375_2801809390(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809377, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_2801809425 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801809430 = [mnewString(0)];
    fmtRes_2801809430[0].push.apply(fmtRes_2801809430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_2801809425 || [],fmtRes_2801809430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809419;

}

function addPrevFindResultToSelectionScript_2801809433_2801809448(self_2801809449) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym460_2801809450 = getTextDocumentEditor_2801806015(self_2801809449);
      if (isNone_2801806376(rHEX60gensym460_2801809450)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2801809438(get_2801806396(rHEX60gensym460_2801809450));
  };

  
}

function addPrevFindResultToSelectionApi_2801809476(HEX3Atmp_2801809435) {
  var result_2801809477 = null;

    result_2801809477 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2801809433_2801809448(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809435, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym465_2801809483 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801809488 = [mnewString(0)];
    fmtRes_2801809488[0].push.apply(fmtRes_2801809488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym465_2801809483 || [],fmtRes_2801809488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809477;

}

function setAllFindResultToSelectionScript_2801809491_2801809792(self_2801809793) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym468_2801809794 = getTextDocumentEditor_2801806015(self_2801809793);
      if (isNone_2801806376(rHEX60gensym468_2801809794)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2801809496(get_2801806396(rHEX60gensym468_2801809794));
  };

  
}

function setAllFindResultToSelectionApi_2801809820(HEX3Atmp_2801809493) {
  var result_2801809821 = null;

    result_2801809821 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2801809491_2801809792(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809493, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym473_2801809827 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801809832 = [mnewString(0)];
    fmtRes_2801809832[0].push.apply(fmtRes_2801809832[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809832, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym473_2801809827 || [],fmtRes_2801809832[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809821;

}

function moveCursorColumnScript_2801809850_2801809878(self_2801809879, distance_2801809880, cursor_2801809881, all_2801809882) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym481_2801809883 = getTextDocumentEditor_2801806015(self_2801809879);
      if (isNone_2801806376(rHEX60gensym481_2801809883)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2801809855(get_2801806396(rHEX60gensym481_2801809883), distance_2801809880, cursor_2801809881, all_2801809882);
  };

  
}

function moveCursorColumnApi_2801809912(HEX3Atmp_2801809852) {
      var Temporary5;
      var Temporary7;

  var result_2801809913 = null;

    result_2801809913 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809852))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801809852, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809852))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801809852, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2801809850_2801809878(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809852, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801809852, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym486_2801809934 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2801809939 = [mnewString(0)];
    fmtRes_2801809939[0].push.apply(fmtRes_2801809939[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809939, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym486_2801809934 || [],fmtRes_2801809939[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809913;

}

function moveCursorLineScript_2801809958_2801809968(self_2801809969, distance_2801809970, cursor_2801809971, all_2801809972) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym494_2801809973 = getTextDocumentEditor_2801806015(self_2801809969);
      if (isNone_2801806376(rHEX60gensym494_2801809973)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2801809963(get_2801806396(rHEX60gensym494_2801809973), distance_2801809970, cursor_2801809971, all_2801809972);
  };

  
}

function moveCursorLineApi_2801810002(HEX3Atmp_2801809960) {
      var Temporary5;
      var Temporary7;

  var result_2801810003 = null;

    result_2801810003 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809960))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801809960, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809960))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801809960, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2801809958_2801809968(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801809960, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801809960, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym499_2801810024 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2801810029 = [mnewString(0)];
    fmtRes_2801810029[0].push.apply(fmtRes_2801810029[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810029, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym499_2801810024 || [],fmtRes_2801810029[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810003;

}

function moveCursorHomeScript_2801810032_2801810041(self_2801810042, cursor_2801810043, all_2801810044) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym506_2801810045 = getTextDocumentEditor_2801806015(self_2801810042);
      if (isNone_2801806376(rHEX60gensym506_2801810045)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2801810037(get_2801806396(rHEX60gensym506_2801810045), cursor_2801810043, all_2801810044);
  };

  
}

function moveCursorHomeApi_2801810073(HEX3Atmp_2801810034) {
      var Temporary4;
      var Temporary6;

  var result_2801810074 = null;

    result_2801810074 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801810034))) {
      Temporary4 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810034, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801810034))) {
      Temporary6 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810034, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2801810032_2801810041(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810034, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym511_2801810090 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2801810095 = [mnewString(0)];
    fmtRes_2801810095[0].push.apply(fmtRes_2801810095[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810095, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym511_2801810090 || [],fmtRes_2801810095[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810074;

}

function moveCursorEndScript_2801810100_2801810109(self_2801810110, cursor_2801810111, all_2801810112) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym518_2801810113 = getTextDocumentEditor_2801806015(self_2801810110);
      if (isNone_2801806376(rHEX60gensym518_2801810113)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2801810105(get_2801806396(rHEX60gensym518_2801810113), cursor_2801810111, all_2801810112);
  };

  
}

function moveCursorEndApi_2801810141(HEX3Atmp_2801810102) {
      var Temporary4;
      var Temporary6;

  var result_2801810142 = null;

    result_2801810142 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801810102))) {
      Temporary4 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810102, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801810102))) {
      Temporary6 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810102, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2801810100_2801810109(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810102, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym523_2801810158 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2801810163 = [mnewString(0)];
    fmtRes_2801810163[0].push.apply(fmtRes_2801810163[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810163, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym523_2801810158 || [],fmtRes_2801810163[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810142;

}

function moveCursorToScript_2801810168_2801810185(self_2801810186, str_2801810187, cursor_2801810188, all_2801810189) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym531_2801810190 = getTextDocumentEditor_2801806015(self_2801810186);
      if (isNone_2801806376(rHEX60gensym531_2801810190)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2801810173(get_2801806396(rHEX60gensym531_2801810190), str_2801810187, cursor_2801810188, all_2801810189);
  };

  
}

function moveCursorToApi_2801810219(HEX3Atmp_2801810170) {
      var Temporary5;
      var Temporary7;

  var result_2801810220 = null;

    result_2801810220 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801810170))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810170, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801810170))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810170, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2801810168_2801810185(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810170, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801810170, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym536_2801810241 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2801810246 = [mnewString(0)];
    fmtRes_2801810246[0].push.apply(fmtRes_2801810246[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810246, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym536_2801810241 || [],fmtRes_2801810246[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810220;

}

function moveCursorBeforeScript_2801810251_2801810268(self_2801810269, str_2801810270, cursor_2801810271, all_2801810272) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym545_2801810273 = getTextDocumentEditor_2801806015(self_2801810269);
      if (isNone_2801806376(rHEX60gensym545_2801810273)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2801810256(get_2801806396(rHEX60gensym545_2801810273), str_2801810270, cursor_2801810271, all_2801810272);
  };

  
}

function moveCursorBeforeApi_2801810302(HEX3Atmp_2801810253) {
      var Temporary5;
      var Temporary7;

  var result_2801810303 = null;

    result_2801810303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801810253))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810253, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801810253))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810253, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2801810251_2801810268(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810253, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801810253, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym550_2801810324 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2801810329 = [mnewString(0)];
    fmtRes_2801810329[0].push.apply(fmtRes_2801810329[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810329, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym550_2801810324 || [],fmtRes_2801810329[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810303;

}

function moveCursorNextFindResultScript_2801810334_2801810343(self_2801810344, cursor_2801810345, all_2801810346) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym558_2801810347 = getTextDocumentEditor_2801806015(self_2801810344);
      if (isNone_2801806376(rHEX60gensym558_2801810347)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2801810339(get_2801806396(rHEX60gensym558_2801810347), cursor_2801810345, all_2801810346);
  };

  
}

function moveCursorNextFindResultApi_2801810375(HEX3Atmp_2801810336) {
      var Temporary4;
      var Temporary6;

  var result_2801810376 = null;

    result_2801810376 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801810336))) {
      Temporary4 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810336, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801810336))) {
      Temporary6 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810336, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2801810334_2801810343(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810336, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym563_2801810392 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801810397 = [mnewString(0)];
    fmtRes_2801810397[0].push.apply(fmtRes_2801810397[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810397, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym563_2801810392 || [],fmtRes_2801810397[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810376;

}

function moveCursorPrevFindResultScript_2801810400_2801810409(self_2801810410, cursor_2801810411, all_2801810412) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym570_2801810413 = getTextDocumentEditor_2801806015(self_2801810410);
      if (isNone_2801806376(rHEX60gensym570_2801810413)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2801810405(get_2801806396(rHEX60gensym570_2801810413), cursor_2801810411, all_2801810412);
  };

  
}

function moveCursorPrevFindResultApi_2801810441(HEX3Atmp_2801810402) {
      var Temporary4;
      var Temporary6;

  var result_2801810442 = null;

    result_2801810442 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801810402))) {
      Temporary4 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810402, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801810402))) {
      Temporary6 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810402, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2801810400_2801810409(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810402, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym575_2801810458 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801810463 = [mnewString(0)];
    fmtRes_2801810463[0].push.apply(fmtRes_2801810463[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810463, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym575_2801810458 || [],fmtRes_2801810463[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810442;

}

function scrollToCursorScript_2801810466_2801810474(self_2801810475, cursor_2801810476) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2801810477 = getTextDocumentEditor_2801806015(self_2801810475);
      if (isNone_2801806376(rHEX60gensym581_2801810477)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2801806116(get_2801806396(rHEX60gensym581_2801810477), cursor_2801810476);
  };

  
}

function scrollToCursorApi_2801810504(HEX3Atmp_2801810468) {
      var Temporary4;

  var result_2801810505 = null;

    result_2801810505 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801810468))) {
      Temporary4 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801810468, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2801810466_2801810474(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810468, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_2801810516 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2801810521 = [mnewString(0)];
    fmtRes_2801810521[0].push.apply(fmtRes_2801810521[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810521, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_2801810516 || [],fmtRes_2801810521[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810505;

}

function reloadTreesitterScript_2801810524_2801810531(self_2801810532) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym590_2801810533 = getTextDocumentEditor_2801806015(self_2801810532);
      if (isNone_2801806376(rHEX60gensym590_2801810533)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2801810529(get_2801806396(rHEX60gensym590_2801810533));
  };

  
}

function reloadTreesitterApi_2801810559(HEX3Atmp_2801810526) {
  var result_2801810560 = null;

    result_2801810560 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2801810524_2801810531(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810526, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym595_2801810566 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2801810571 = [mnewString(0)];
    fmtRes_2801810571[0].push.apply(fmtRes_2801810571[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810571, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym595_2801810566 || [],fmtRes_2801810571[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810560;

}

function deleteLeftScript_2801810580_2801810595(self_2801810596) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym599_2801810597 = getTextDocumentEditor_2801806015(self_2801810596);
      if (isNone_2801806376(rHEX60gensym599_2801810597)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2801810585(get_2801806396(rHEX60gensym599_2801810597));
  };

  
}

function deleteLeftApi_2801810623(HEX3Atmp_2801810582) {
  var result_2801810624 = null;

    result_2801810624 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2801810580_2801810595(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810582, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym604_2801810630 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2801810635 = [mnewString(0)];
    fmtRes_2801810635[0].push.apply(fmtRes_2801810635[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810635, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym604_2801810630 || [],fmtRes_2801810635[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810624;

}

function deleteRightScript_2801810644_2801810659(self_2801810660) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym607_2801810661 = getTextDocumentEditor_2801806015(self_2801810660);
      if (isNone_2801806376(rHEX60gensym607_2801810661)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2801810649(get_2801806396(rHEX60gensym607_2801810661));
  };

  
}

function deleteRightApi_2801810687(HEX3Atmp_2801810646) {
  var result_2801810688 = null;

    result_2801810688 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2801810644_2801810659(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810646, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_2801810694 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2801810699 = [mnewString(0)];
    fmtRes_2801810699[0].push.apply(fmtRes_2801810699[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810699, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_2801810694 || [],fmtRes_2801810699[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810688;

}

function getCommandCountScript_2801810708_2801810716(self_2801810717) {
  var result_2801810718 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym615_2801810719 = getTextDocumentEditor_2801806015(self_2801810717);
      if (isNone_2801806376(rHEX60gensym615_2801810719)) {
      break BeforeRet;
      }
      
    };
    result_2801810718 = getCommandCount_2801810713(get_2801806396(rHEX60gensym615_2801810719));
  };

  return result_2801810718;

}

function getCommandCountApi_2801810746(HEX3Atmp_2801810710) {
  var result_2801810747 = null;

  BeforeRet: {
    result_2801810747 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2801810747 = toJson_2801807244(getCommandCountScript_2801810708_2801810716(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810710, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2801810757 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801810762 = [mnewString(0)];
    fmtRes_2801810762[0].push.apply(fmtRes_2801810762[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810762, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2801810757 || [],fmtRes_2801810762[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801810747;

}

function setCommandCountScript_2801810765_2801810773(self_2801810774, count_2801810775) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym625_2801810776 = getTextDocumentEditor_2801806015(self_2801810774);
      if (isNone_2801806376(rHEX60gensym625_2801810776)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2801810770(get_2801806396(rHEX60gensym625_2801810776), count_2801810775);
  };

  
}

function setCommandCountApi_2801810803(HEX3Atmp_2801810767) {
  var result_2801810804 = null;

    result_2801810804 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2801810765_2801810773(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810767, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801810767, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym630_2801810815 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801810820 = [mnewString(0)];
    fmtRes_2801810820[0].push.apply(fmtRes_2801810820[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810820, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym630_2801810815 || [],fmtRes_2801810820[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810804;

}

function setCommandCountRestoreScript_2801810823_2801810831(self_2801810832, count_2801810833) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym634_2801810834 = getTextDocumentEditor_2801806015(self_2801810832);
      if (isNone_2801806376(rHEX60gensym634_2801810834)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2801810828(get_2801806396(rHEX60gensym634_2801810834), count_2801810833);
  };

  
}

function setCommandCountRestoreApi_2801810861(HEX3Atmp_2801810825) {
  var result_2801810862 = null;

    result_2801810862 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2801810823_2801810831(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810825, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801810825, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym639_2801810873 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2801810878 = [mnewString(0)];
    fmtRes_2801810878[0].push.apply(fmtRes_2801810878[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810878, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym639_2801810873 || [],fmtRes_2801810878[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810862;

}

function updateCommandCountScript_2801810881_2801810889(self_2801810890, digit_2801810891) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym643_2801810892 = getTextDocumentEditor_2801806015(self_2801810890);
      if (isNone_2801806376(rHEX60gensym643_2801810892)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2801810886(get_2801806396(rHEX60gensym643_2801810892), digit_2801810891);
  };

  
}

function updateCommandCountApi_2801810919(HEX3Atmp_2801810883) {
  var result_2801810920 = null;

    result_2801810920 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2801810881_2801810889(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810883, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801810883, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym648_2801810931 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801810936 = [mnewString(0)];
    fmtRes_2801810936[0].push.apply(fmtRes_2801810936[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810936, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym648_2801810931 || [],fmtRes_2801810936[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810920;

}

function setFlagScript_2801810939_2801810948(self_2801810949, name_2801810950, value_2801810951) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2801810952 = getTextDocumentEditor_2801806015(self_2801810949);
      if (isNone_2801806376(rHEX60gensym653_2801810952)) {
      break BeforeRet;
      }
      
    };
    setFlag_2801810944(get_2801806396(rHEX60gensym653_2801810952), name_2801810950, value_2801810951);
  };

  
}

function setFlagApi_2801810980(HEX3Atmp_2801810941) {
  var result_2801810981 = null;

    result_2801810981 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2801810939_2801810948(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801810941, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801810941, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801810941, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym658_2801810997 = [115,101,116,70,108,97,103];
    var fmtRes_2801811002 = [mnewString(0)];
    fmtRes_2801811002[0].push.apply(fmtRes_2801811002[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811002, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym658_2801810997 || [],fmtRes_2801811002[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810981;

}

function getFlagScript_2801811005_2801811014(self_2801811015, name_2801811016) {
  var result_2801811017 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym662_2801811018 = getTextDocumentEditor_2801806015(self_2801811015);
      if (isNone_2801806376(rHEX60gensym662_2801811018)) {
      break BeforeRet;
      }
      
    };
    result_2801811017 = getFlag_2801811010(get_2801806396(rHEX60gensym662_2801811018), name_2801811016);
  };

  return result_2801811017;

}

function getFlagApi_2801811046(HEX3Atmp_2801811007) {
  var result_2801811047 = null;

  BeforeRet: {
    result_2801811047 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801811047 = toJson_2801811058(getFlagScript_2801811005_2801811014(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811007, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801811007, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym668_2801811067 = [103,101,116,70,108,97,103];
    var fmtRes_2801811072 = [mnewString(0)];
    fmtRes_2801811072[0].push.apply(fmtRes_2801811072[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811072, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym668_2801811067 || [],fmtRes_2801811072[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801811047;

}

function runActionScript_2801811075_2801811090(self_2801811091, action_2801811092, args_2801811093) {
  var result_2801811094 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym673_2801811095 = getTextDocumentEditor_2801806015(self_2801811091);
      if (isNone_2801806376(rHEX60gensym673_2801811095)) {
      break BeforeRet;
      }
      
    };
    result_2801811094 = runAction_2801811080(get_2801806396(rHEX60gensym673_2801811095), action_2801811092, args_2801811093);
  };

  return result_2801811094;

}

function runActionApi_2801811124(HEX3Atmp_2801811077) {
  var result_2801811125 = null;

  BeforeRet: {
    result_2801811125 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2801811125 = toJson_2801811058(runActionScript_2801811075_2801811090(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811077, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801811077, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2801811077, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym679_2801811140 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2801811145 = [mnewString(0)];
    fmtRes_2801811145[0].push.apply(fmtRes_2801811145[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811145, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym679_2801811140 || [],fmtRes_2801811145[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801811125;

}

function findWordBoundaryScript_2801811151_2801811187(self_2801811188, cursor_2801811189) {
  var result_2801811190 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym683_2801811191 = getTextDocumentEditor_2801806015(self_2801811188);
      if (isNone_2801806376(rHEX60gensym683_2801811191)) {
      break BeforeRet;
      }
      
    };
    result_2801811190 = nimCopy(result_2801811190, findWordBoundary_2801811156(get_2801806396(rHEX60gensym683_2801811191), cursor_2801811189), NTI2415919115);
  };

  return result_2801811190;

}

function findWordBoundaryApi_2801811219(HEX3Atmp_2801811153) {
  var result_2801811220 = null;

  BeforeRet: {
    result_2801811220 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801811220 = toJson_2801807218(findWordBoundaryScript_2801811151_2801811187(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811153, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807895(HEX5BHEX5D_1627393116(HEX3Atmp_2801811153, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym689_2801811235 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2801811240 = [mnewString(0)];
    fmtRes_2801811240[0].push.apply(fmtRes_2801811240[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811240, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym689_2801811235 || [],fmtRes_2801811240[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801811220;

}

function getSelectionForMoveScript_2801811245_2801811348(self_2801811349, cursor_2801811350, move_2801811351, count_2801811352) {
  var result_2801811353 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym699_2801811354 = getTextDocumentEditor_2801806015(self_2801811349);
      if (isNone_2801806376(rHEX60gensym699_2801811354)) {
      break BeforeRet;
      }
      
    };
    result_2801811353 = nimCopy(result_2801811353, getSelectionForMove_2801811250(get_2801806396(rHEX60gensym699_2801811354), cursor_2801811350, move_2801811351, count_2801811352), NTI2415919115);
  };

  return result_2801811353;

}

function getSelectionForMoveApi_2801811384(HEX3Atmp_2801811247) {
      var Temporary6;

  var result_2801811385 = null;

  BeforeRet: {
    result_2801811385 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2801811247))) {
      Temporary6 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801811247, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2801811385 = toJson_2801807218(getSelectionForMoveScript_2801811245_2801811348(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811247, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807895(HEX5BHEX5D_1627393116(HEX3Atmp_2801811247, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801811247, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym705_2801811410 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2801811415 = [mnewString(0)];
    fmtRes_2801811415[0].push.apply(fmtRes_2801811415[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811415, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym705_2801811410 || [],fmtRes_2801811415[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801811385;

}

function setMoveScript_2801811490_2801811686(self_2801811687, args_2801811688) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym721_2801811689 = getTextDocumentEditor_2801806015(self_2801811687);
      if (isNone_2801806376(rHEX60gensym721_2801811689)) {
      break BeforeRet;
      }
      
    };
    setMove_2801811495(get_2801806396(rHEX60gensym721_2801811689), args_2801811688);
  };

  
}

function HEX5BHEX5D_2801811730(a_2801811733, x_2801811734) {
  var result_2801811735 = null;

    if (!((a_2801811733.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2801811735 = newJArray_1627390082();
    var xa_2801811746 = x_2801811734.a;
    var L_2801811748 = addInt(subInt(subInt(len_1627392983(a_2801811733), x_2801811734.b), xa_2801811746), 1);
    Label1: {
      var i_2801811753 = 0;
      var i_536872100 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872100 < L_2801811748)) break Label3;
            i_2801811753 = i_536872100;
            add_1627390190(result_2801811735, HEX5BHEX5D_1627393116(a_2801811733, addInt(i_2801811753, xa_2801811746)));
            i_536872100 = addInt(i_536872100, 1);
          }
      };
    };

  return result_2801811735;

}

function setMoveApi_2801811716(HEX3Atmp_2801811492) {
  var result_2801811717 = null;

    result_2801811717 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2801811490_2801811686(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811492, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2801811730(HEX3Atmp_2801811492, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym726_2801811754 = [115,101,116,77,111,118,101];
    var fmtRes_2801811759 = [mnewString(0)];
    fmtRes_2801811759[0].push.apply(fmtRes_2801811759[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811759, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym726_2801811754 || [],fmtRes_2801811759[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801811717;

}

function deleteMoveScript_2801811782_2801811822(self_2801811823, move_2801811824, which_2801811825, all_2801811826) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym748_2801811827 = getTextDocumentEditor_2801806015(self_2801811823);
      if (isNone_2801806376(rHEX60gensym748_2801811827)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2801811787(get_2801806396(rHEX60gensym748_2801811827), move_2801811824, which_2801811825, all_2801811826);
  };

  
}

function deleteMoveApi_2801811856(HEX3Atmp_2801811784) {
      var Temporary5;
      var Temporary7;

  var result_2801811857 = null;

    result_2801811857 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801811784))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801811784, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801811784))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801811784, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2801811782_2801811822(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811784, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801811784, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym753_2801811878 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2801811883 = [mnewString(0)];
    fmtRes_2801811883[0].push.apply(fmtRes_2801811883[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801811883, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym753_2801811878 || [],fmtRes_2801811883[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801811857;

}

function selectMoveScript_2801811886_2801811951(self_2801811952, move_2801811953, which_2801811954, all_2801811955) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym761_2801811956 = getTextDocumentEditor_2801806015(self_2801811952);
      if (isNone_2801806376(rHEX60gensym761_2801811956)) {
      break BeforeRet;
      }
      
    };
    selectMove_2801811891(get_2801806396(rHEX60gensym761_2801811956), move_2801811953, which_2801811954, all_2801811955);
  };

  
}

function selectMoveApi_2801811985(HEX3Atmp_2801811888) {
      var Temporary5;
      var Temporary7;

  var result_2801811986 = null;

    result_2801811986 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801811888))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801811888, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801811888))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801811888, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2801811886_2801811951(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801811888, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801811888, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym766_2801812007 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2801812012 = [mnewString(0)];
    fmtRes_2801812012[0].push.apply(fmtRes_2801812012[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812012, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym766_2801812007 || [],fmtRes_2801812012[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801811986;

}

function changeMoveScript_2801812015_2801812055(self_2801812056, move_2801812057, which_2801812058, all_2801812059) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym775_2801812060 = getTextDocumentEditor_2801806015(self_2801812056);
      if (isNone_2801806376(rHEX60gensym775_2801812060)) {
      break BeforeRet;
      }
      
    };
    changeMove_2801812020(get_2801806396(rHEX60gensym775_2801812060), move_2801812057, which_2801812058, all_2801812059);
  };

  
}

function changeMoveApi_2801812089(HEX3Atmp_2801812017) {
      var Temporary5;
      var Temporary7;

  var result_2801812090 = null;

    result_2801812090 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801812017))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801812017, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801812017))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801812017, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2801812015_2801812055(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812017, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801812017, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym780_2801812111 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2801812116 = [mnewString(0)];
    fmtRes_2801812116[0].push.apply(fmtRes_2801812116[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812116, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym780_2801812111 || [],fmtRes_2801812116[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812090;

}

function moveLastScript_2801812119_2801812167(self_2801812168, move_2801812169, which_2801812170, all_2801812171, count_2801812172) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym789_2801812173 = getTextDocumentEditor_2801806015(self_2801812168);
      if (isNone_2801806376(rHEX60gensym789_2801812173)) {
      break BeforeRet;
      }
      
    };
    moveLast_2801812124(get_2801806396(rHEX60gensym789_2801812173), move_2801812169, which_2801812170, all_2801812171, count_2801812172);
  };

  
}

function moveLastApi_2801812203(HEX3Atmp_2801812121) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2801812204 = null;

    result_2801812204 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801812121))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801812121, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801812121))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801812121, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2801812121))) {
      Temporary9 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801812121, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2801812119_2801812167(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812121, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801812121, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym794_2801812230 = [109,111,118,101,76,97,115,116];
    var fmtRes_2801812235 = [mnewString(0)];
    fmtRes_2801812235[0].push.apply(fmtRes_2801812235[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812235, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym794_2801812230 || [],fmtRes_2801812235[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812204;

}

function moveFirstScript_2801812246_2801812294(self_2801812295, move_2801812296, which_2801812297, all_2801812298, count_2801812299) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym804_2801812300 = getTextDocumentEditor_2801806015(self_2801812295);
      if (isNone_2801806376(rHEX60gensym804_2801812300)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2801812251(get_2801806396(rHEX60gensym804_2801812300), move_2801812296, which_2801812297, all_2801812298, count_2801812299);
  };

  
}

function moveFirstApi_2801812330(HEX3Atmp_2801812248) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2801812331 = null;

    result_2801812331 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801812248))) {
      Temporary5 = jsonTo_2801806719(HEX5BHEX5D_1627393116(HEX3Atmp_2801812248, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801812248))) {
      Temporary7 = jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2801812248, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2801812248))) {
      Temporary9 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801812248, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2801812246_2801812294(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812248, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801812248, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym809_2801812357 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2801812362 = [mnewString(0)];
    fmtRes_2801812362[0].push.apply(fmtRes_2801812362[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812362, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym809_2801812357 || [],fmtRes_2801812362[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812331;

}

function setSearchQueryScript_2801812365_2801812387(self_2801812388, query_2801812389) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym816_2801812390 = getTextDocumentEditor_2801806015(self_2801812388);
      if (isNone_2801806376(rHEX60gensym816_2801812390)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2801812370(get_2801806396(rHEX60gensym816_2801812390), query_2801812389);
  };

  
}

function setSearchQueryApi_2801812417(HEX3Atmp_2801812367) {
  var result_2801812418 = null;

    result_2801812418 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2801812365_2801812387(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812367, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801812367, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym821_2801812429 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2801812434 = [mnewString(0)];
    fmtRes_2801812434[0].push.apply(fmtRes_2801812434[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812434, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym821_2801812429 || [],fmtRes_2801812434[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812418;

}

function setSearchQueryFromMoveScript_2801812457_2801812467(self_2801812468, move_2801812469, count_2801812470) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym826_2801812471 = getTextDocumentEditor_2801806015(self_2801812468);
      if (isNone_2801806376(rHEX60gensym826_2801812471)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2801812462(get_2801806396(rHEX60gensym826_2801812471), move_2801812469, count_2801812470);
  };

  
}

function setSearchQueryFromMoveApi_2801812499(HEX3Atmp_2801812459) {
      var Temporary5;

  var result_2801812500 = null;

    result_2801812500 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801812459))) {
      Temporary5 = jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2801812459, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2801812457_2801812467(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812459, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801812459, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym831_2801812516 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2801812521 = [mnewString(0)];
    fmtRes_2801812521[0].push.apply(fmtRes_2801812521[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812521, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym831_2801812516 || [],fmtRes_2801812521[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812500;

}

function gotoDefinitionScript_2801812852_2801812859(self_2801812860) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym853_2801812861 = getTextDocumentEditor_2801806015(self_2801812860);
      if (isNone_2801806376(rHEX60gensym853_2801812861)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2801812857(get_2801806396(rHEX60gensym853_2801812861));
  };

  
}

function gotoDefinitionApi_2801812887(HEX3Atmp_2801812854) {
  var result_2801812888 = null;

    result_2801812888 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2801812852_2801812859(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812854, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym858_2801812894 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2801812899 = [mnewString(0)];
    fmtRes_2801812899[0].push.apply(fmtRes_2801812899[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812899, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym858_2801812894 || [],fmtRes_2801812899[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812888;

}

function getCompletionsScript_2801812916_2801812923(self_2801812924) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym862_2801812925 = getTextDocumentEditor_2801806015(self_2801812924);
      if (isNone_2801806376(rHEX60gensym862_2801812925)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2801812921(get_2801806396(rHEX60gensym862_2801812925));
  };

  
}

function getCompletionsApi_2801812951(HEX3Atmp_2801812918) {
  var result_2801812952 = null;

    result_2801812952 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2801812916_2801812923(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812918, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym867_2801812958 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2801812963 = [mnewString(0)];
    fmtRes_2801812963[0].push.apply(fmtRes_2801812963[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801812963, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym867_2801812958 || [],fmtRes_2801812963[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801812952;

}

function hideCompletionsScript_2801812966_2801812973(self_2801812974) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym871_2801812975 = getTextDocumentEditor_2801806015(self_2801812974);
      if (isNone_2801806376(rHEX60gensym871_2801812975)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2801812971(get_2801806396(rHEX60gensym871_2801812975));
  };

  
}

function hideCompletionsApi_2801813001(HEX3Atmp_2801812968) {
  var result_2801813002 = null;

    result_2801813002 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2801812966_2801812973(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801812968, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym876_2801813008 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2801813013 = [mnewString(0)];
    fmtRes_2801813013[0].push.apply(fmtRes_2801813013[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801813013, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym876_2801813008 || [],fmtRes_2801813013[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801813002;

}

function selectPrevCompletionScript_2801813016_2801813037(self_2801813038) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym879_2801813039 = getTextDocumentEditor_2801806015(self_2801813038);
      if (isNone_2801806376(rHEX60gensym879_2801813039)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2801813021(get_2801806396(rHEX60gensym879_2801813039));
  };

  
}

function selectPrevCompletionApi_2801813065(HEX3Atmp_2801813018) {
  var result_2801813066 = null;

    result_2801813066 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2801813016_2801813037(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801813018, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym884_2801813072 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801813077 = [mnewString(0)];
    fmtRes_2801813077[0].push.apply(fmtRes_2801813077[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801813077, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym884_2801813072 || [],fmtRes_2801813077[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801813066;

}

function selectNextCompletionScript_2801813080_2801813101(self_2801813102) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym888_2801813103 = getTextDocumentEditor_2801806015(self_2801813102);
      if (isNone_2801806376(rHEX60gensym888_2801813103)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2801813085(get_2801806396(rHEX60gensym888_2801813103));
  };

  
}

function selectNextCompletionApi_2801813129(HEX3Atmp_2801813082) {
  var result_2801813130 = null;

    result_2801813130 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2801813080_2801813101(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801813082, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_2801813136 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801813141 = [mnewString(0)];
    fmtRes_2801813141[0].push.apply(fmtRes_2801813141[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801813141, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_2801813136 || [],fmtRes_2801813141[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801813130;

}

function applySelectedCompletionScript_2801813144_2801813293(self_2801813294) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym897_2801813295 = getTextDocumentEditor_2801806015(self_2801813294);
      if (isNone_2801806376(rHEX60gensym897_2801813295)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2801813149(get_2801806396(rHEX60gensym897_2801813295));
  };

  
}

function applySelectedCompletionApi_2801813321(HEX3Atmp_2801813146) {
  var result_2801813322 = null;

    result_2801813322 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2801813144_2801813293(jsonTo_2801806430(HEX5BHEX5D_1627393116(HEX3Atmp_2801813146, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym902_2801813328 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801813333 = [mnewString(0)];
    fmtRes_2801813333[0].push.apply(fmtRes_2801813333[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801813333, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym902_2801813328 || [],fmtRes_2801813333[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801813322;

}

function dispatch_2801813360(command_2801813359, arg_2801813358) {
    var Temporary1;

  var result_2801813365 = ({val: null});

    switch (toJSStr(command_2801813359)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801813366(setModeApi_2801806428(arg_2801813358));
      break;
    case "mode":
      Temporary1 = some_2801813366(modeApi_2801806590(arg_2801813358));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801813366(getContextWithModeApi_2801806650(arg_2801813358));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2801813366(updateTargetColumnApi_2801806712(arg_2801813358));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2801813366(invertSelectionApi_2801806826(arg_2801813358));
      break;
    case "insert":
      Temporary1 = some_2801813366(insertApi_2801806907(arg_2801813358));
      break;
    case "delete":
      Temporary1 = some_2801813366(deleteApi_2801807402(arg_2801813358));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2801813366(selectPrevApi_2801807651(arg_2801813358));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2801813366(selectNextApi_2801807824(arg_2801813358));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2801813366(selectInsideApi_2801807888(arg_2801813358));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2801813366(selectInsideCurrentApi_2801807951(arg_2801813358));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2801813366(selectLineApi_2801808004(arg_2801813358));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2801813366(selectLineCurrentApi_2801808059(arg_2801813358));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2801813366(selectParentTsApi_2801808124(arg_2801813358));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2801813366(selectParentCurrentTsApi_2801808192(arg_2801813358));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2801813366(insertTextApi_2801808249(arg_2801813358));
      break;
    case "undo":
      Temporary1 = some_2801813366(undoApi_2801808365(arg_2801813358));
      break;
    case "redo":
      Temporary1 = some_2801813366(redoApi_2801808445(arg_2801813358));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2801813366(scrollTextApi_2801808506(arg_2801813358));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2801813366(duplicateLastSelectionApi_2801808661(arg_2801813358));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2801813366(addCursorBelowApi_2801808731(arg_2801813358));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2801813366(addCursorAboveApi_2801808797(arg_2801813358));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2801813366(getPrevFindResultApi_2801809107(arg_2801813358));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2801813366(getNextFindResultApi_2801809336(arg_2801813358));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2801813366(addNextFindResultToSelectionApi_2801809418(arg_2801813358));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2801813366(addPrevFindResultToSelectionApi_2801809476(arg_2801813358));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2801813366(setAllFindResultToSelectionApi_2801809820(arg_2801813358));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2801813366(moveCursorColumnApi_2801809912(arg_2801813358));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2801813366(moveCursorLineApi_2801810002(arg_2801813358));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2801813366(moveCursorHomeApi_2801810073(arg_2801813358));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2801813366(moveCursorEndApi_2801810141(arg_2801813358));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2801813366(moveCursorToApi_2801810219(arg_2801813358));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2801813366(moveCursorBeforeApi_2801810302(arg_2801813358));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2801813366(moveCursorNextFindResultApi_2801810375(arg_2801813358));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2801813366(moveCursorPrevFindResultApi_2801810441(arg_2801813358));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2801813366(scrollToCursorApi_2801810504(arg_2801813358));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2801813366(reloadTreesitterApi_2801810559(arg_2801813358));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2801813366(deleteLeftApi_2801810623(arg_2801813358));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2801813366(deleteRightApi_2801810687(arg_2801813358));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2801813366(getCommandCountApi_2801810746(arg_2801813358));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2801813366(setCommandCountApi_2801810803(arg_2801813358));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2801813366(setCommandCountRestoreApi_2801810861(arg_2801813358));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2801813366(updateCommandCountApi_2801810919(arg_2801813358));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2801813366(setFlagApi_2801810980(arg_2801813358));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2801813366(getFlagApi_2801811046(arg_2801813358));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2801813366(runActionApi_2801811124(arg_2801813358));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2801813366(findWordBoundaryApi_2801811219(arg_2801813358));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2801813366(getSelectionForMoveApi_2801811384(arg_2801813358));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2801813366(setMoveApi_2801811716(arg_2801813358));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2801813366(deleteMoveApi_2801811856(arg_2801813358));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2801813366(selectMoveApi_2801811985(arg_2801813358));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2801813366(changeMoveApi_2801812089(arg_2801813358));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2801813366(moveLastApi_2801812203(arg_2801813358));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2801813366(moveFirstApi_2801812330(arg_2801813358));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2801813366(setSearchQueryApi_2801812417(arg_2801813358));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2801813366(setSearchQueryFromMoveApi_2801812499(arg_2801813358));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2801813366(gotoDefinitionApi_2801812887(arg_2801813358));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2801813366(getCompletionsApi_2801812951(arg_2801813358));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2801813366(hideCompletionsApi_2801813001(arg_2801813358));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2801813366(selectPrevCompletionApi_2801813065(arg_2801813358));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2801813366(selectNextCompletionApi_2801813129(arg_2801813358));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2801813366(applySelectedCompletionApi_2801813321(arg_2801813358));
      break;
    default: 
      Temporary1 = none_2801813562();
      break;
    }
    result_2801813365 = nimCopy(result_2801813365, Temporary1, NTI2801806961);

  return result_2801813365;

}

function isNone_2801813647(self_2801813649) {
  var result_2801813650 = false;

    result_2801813650 = (self_2801813649.val == null);

  return result_2801813650;

}

function handleActionInternal_2801795431(self_2801795432, action_2801795433, args_2801795434) {
    var Temporary3;

  var result_2801813582 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848856(self_2801795432.editor, self_2801795432, action_2801795433, args_2801795434) == 3)) {
    self_2801795432.commandCount = subInt(self_2801795432.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2801795432.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848856(self_2801795432.editor, self_2801795432, action_2801795433, args_2801795434) == 3))) {
          break Label1;
          }
          
          self_2801795432.commandCount = subInt(self_2801795432.commandCount, 1);
        }
    };
    self_2801795432.commandCount = self_2801795432.commandCountRestore;
    self_2801795432.commandCountRestore = 0;
    result_2801813582 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2801795434;
    if (ConstSet319[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2801813601(Temporary3, "elems", toJson_2801806119({id: self_2801795432.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2801813630(dispatch_2801813360(action_2801795433, args_2801795434))) {
    self_2801795432.commandCount = subInt(self_2801795432.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2801795432.commandCount)) break Label5;
          if (isNone_2801813647(dispatch_2801813360(action_2801795433, args_2801795434))) {
          break Label4;
          }
          
          self_2801795432.commandCount = subInt(self_2801795432.commandCount, 1);
        }
    };
    self_2801795432.commandCount = self_2801795432.commandCountRestore;
    self_2801795432.commandCountRestore = 0;
    result_2801813582 = 3;
    break BeforeRet;
    }
    
    result_2801813582 = 1;
    break BeforeRet;
  };

  return result_2801813582;

}

function handleAction_2801795427(self_2801795428, action_2801795429, arg_2801795430) {
  var result_2801813664 = 0;

  BeforeRet: {
    var args_2801813665 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2801813666 = null;
      var colontmp__536871941 = null;
      colontmp__536871941 = newStringStream_1660945417(arg_2801795430);
      var p_536871942 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871942[0], colontmp__536871941, [], false);
      try {
      var _ = getTok_1694499270(p_536871942[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871942[0].tok == 1))) break Label5;
            a_2801813666 = parseJson_1627395211(p_536871942[0], false, false, 0);
            add_1627390190(args_2801813665, a_2801813666);
          }
      };
      } finally {
      close_1694498967(p_536871942[0]);
      }
    };
    result_2801813664 = handleActionInternal_2801795431(self_2801795428, action_2801795429, args_2801813665);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2801813671 = [mnewString(0)];
    fmtRes_2801813671[0].push.apply(fmtRes_2801813671[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2801813671, 0, action_2801795429, []);
    fmtRes_2801813671[0].push.apply(fmtRes_2801813671[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2801813671, 0, arg_2801795430, []);
    fmtRes_2801813671[0].push.apply(fmtRes_2801813671[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801813671[0], NTI33554449)]);
    result_2801813664 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801813664;

}

function hasKey_1291847814(t_1291847817, key_1291847818) {
  var result_1291847819 = false;

    var hc_1291847820 = [0];
    result_1291847819 = (0 <= rawGet_1291847821(t_1291847817, key_1291847818, hc_1291847820, 0));

  return result_1291847819;

}

function contains_1291847808(t_1291847811, key_1291847812) {
  var result_1291847813 = false;

  BeforeRet: {
    result_1291847813 = hasKey_1291847814(t_1291847811, key_1291847812);
    break BeforeRet;
  };

  return result_1291847813;

}

function HEX5BHEX5D_1291848113(t_1291848116, key_1291848117) {
  var result_1291848118 = null;
  var result_1291848118_Idx = 0;

    var hcHEX60gensym22_1291848119 = [0];
    var indexHEX60gensym22_1291848126 = rawGet_1291847821(t_1291848116, key_1291848117, hcHEX60gensym22_1291848119, 0);
    if ((0 <= indexHEX60gensym22_1291848126)) {
    result_1291848118 = t_1291848116.data[chckIndx(indexHEX60gensym22_1291848126, 0, (t_1291848116.data).length - 1)]; result_1291848118_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848117);
    }
    

  return [result_1291848118, result_1291848118_Idx];

}

function invokeCallback_1291847761(self_1291847762, context_1291847763, args_1291847764) {
    var Temporary1;

  var result_1291847765 = false;

  BeforeRet: {
    if (!(contains_1291847808(self_1291847762.callbacks, context_1291847763))) {
    result_1291847765 = false;
    break BeforeRet;
    }
    
    var id_1291848183 = (Temporary1 = HEX5BHEX5D_1291848113(self_1291847762.callbacks, context_1291847763), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847765 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848194 = [mnewString(0)];
    fmtRes_1291848194[0].push.apply(fmtRes_1291848194[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2516582756(fmtRes_1291848194, 0, id_1291848183, []);
    fmtRes_1291848194[0].push.apply(fmtRes_1291848194[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848194, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848194[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847765 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847765;

}

function handleInput_2801795435(self_2801795436, input_2801795437) {
  var result_2801813675 = 0;

  BeforeRet: {
    if (invokeCallback_1291847761(self_2801795436.editor, getContextWithMode_2801805740(self_2801795436, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2801795437))) {
    result_2801813675 = 3;
    break BeforeRet;
    }
    
    insertText_2801808215(self_2801795436, input_2801795437);
    result_2801813675 = 3;
    break BeforeRet;
  };

  return result_2801813675;

}

function toJson_2936023983(self_2936023984, opt_2936023985) {
  var result_2936023986 = null;

    result_2936023986 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2936023986, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2936023986, [105,100], newJInt_1627390040(self_2936023984.id));

  return result_2936023986;

}

function none_2936023906() {
  var result_2936023912 = ({val: null});

  return result_2936023912;

}

function some_2936023946(val_2936023948) {
  var result_2936023949 = ({val: null});

    if (!(!((val_2936023948 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2936023949.val = val_2936023948;

  return result_2936023949;

}

function getAstDocumentEditor_2936023896(wrapper_2936023897) {
      var Temporary1;

  var result_2936023902 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2936023902 = nimCopy(result_2936023902, none_2936023906(), NTI2936019784);
    break BeforeRet;
    }
    
      var oHEX60gensym528_2936023915 = getEditorForId_1291850668(gEditor, wrapper_2936023897.id);
      if (!isSome_2801806039(oHEX60gensym528_2936023915)) Temporary1 = false; else {        var editor_2936023938 = get_2801806059(oHEX60gensym528_2936023915);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2936023938.m_type, NTI2936014311)) {
    result_2936023902 = nimCopy(result_2936023902, some_2936023946(editor_2936023938), NTI2936019784);
    break BeforeRet;
    }
    
    }
    
    result_2936023902 = nimCopy(result_2936023902, none_2936023906(), NTI2936019784);
    break BeforeRet;
  };

  return result_2936023902;

}

function isNone_2936024014(self_2936024016) {
  var result_2936024017 = false;

    result_2936024017 = (self_2936024016.val == null);

  return result_2936024017;

}

function get_2936024034(self_2936024036) {
  var result_2936024037 = null;

    if (isNone_2936024014(self_2936024036)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2936024037 = self_2936024036["val"];

  return result_2936024037;

}

function moveCursorScript_2936023996_2936024006(self_2936024007, direction_2936024008) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym533_2936024009 = getAstDocumentEditor_2936023896(self_2936024007);
      if (isNone_2936024014(rHEX60gensym533_2936024009)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2936024001(get_2936024034(rHEX60gensym533_2936024009), direction_2936024008);
  };

  
}

function fromJsonHook_2936023987(t_2936023988, jsonNode_2936023989) {
    t_2936023988.id = jsonTo_2801806126(HEX5BHEX5D_1627393037(jsonNode_2936023989, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2936024067(a_2936024069, b_2936024070, opt_2936024071) {
    if (!(!(HEX3DHEX3D_1627392026(b_2936024070, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2936024070}));
    }
    
    fromJsonHook_2936023987(a_2936024069, b_2936024070);

  
}

function jsonTo_2936024061(b_2936024063, opt_2936024065) {
  var result_2936024066 = [({id: 0})];

    fromJson_2936024067(result_2936024066[0], b_2936024063, opt_2936024065);

  return result_2936024066[0];

}

function moveCursorApi_2936024059(HEX3Atmp_2936023998) {
  var result_2936024060 = null;

    result_2936024060 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2936023996_2936024006(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936023998, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806126(HEX5BHEX5D_1627393116(HEX3Atmp_2936023998, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym538_2936024083 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2936024088 = [mnewString(0)];
    fmtRes_2936024088[0].push.apply(fmtRes_2936024088[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024088, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym538_2936024083 || [],fmtRes_2936024088[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024060;

}

function moveCursorUpScript_2936024154_2936024173(self_2936024174) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym545_2936024175 = getAstDocumentEditor_2936023896(self_2936024174);
      if (isNone_2936024014(rHEX60gensym545_2936024175)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2936024159(get_2936024034(rHEX60gensym545_2936024175));
  };

  
}

function moveCursorUpApi_2936024201(HEX3Atmp_2936024156) {
  var result_2936024202 = null;

    result_2936024202 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2936024154_2936024173(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024156, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym550_2936024208 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2936024213 = [mnewString(0)];
    fmtRes_2936024213[0].push.apply(fmtRes_2936024213[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024213, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym550_2936024208 || [],fmtRes_2936024213[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024202;

}

function moveCursorDownScript_2936024216_2936024223(self_2936024224) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym556_2936024225 = getAstDocumentEditor_2936023896(self_2936024224);
      if (isNone_2936024014(rHEX60gensym556_2936024225)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2936024221(get_2936024034(rHEX60gensym556_2936024225));
  };

  
}

function moveCursorDownApi_2936024251(HEX3Atmp_2936024218) {
  var result_2936024252 = null;

    result_2936024252 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2936024216_2936024223(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024218, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym561_2936024258 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2936024263 = [mnewString(0)];
    fmtRes_2936024263[0].push.apply(fmtRes_2936024263[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024263, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym561_2936024258 || [],fmtRes_2936024263[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024252;

}

function moveCursorNextScript_2936024266_2936024280(self_2936024281) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym565_2936024282 = getAstDocumentEditor_2936023896(self_2936024281);
      if (isNone_2936024014(rHEX60gensym565_2936024282)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2936024271(get_2936024034(rHEX60gensym565_2936024282));
  };

  
}

function moveCursorNextApi_2936024308(HEX3Atmp_2936024268) {
  var result_2936024309 = null;

    result_2936024309 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2936024266_2936024280(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024268, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym570_2936024315 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2936024320 = [mnewString(0)];
    fmtRes_2936024320[0].push.apply(fmtRes_2936024320[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024320, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym570_2936024315 || [],fmtRes_2936024320[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024309;

}

function moveCursorPrevScript_2936024334_2936024347(self_2936024348) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym574_2936024349 = getAstDocumentEditor_2936023896(self_2936024348);
      if (isNone_2936024014(rHEX60gensym574_2936024349)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2936024339(get_2936024034(rHEX60gensym574_2936024349));
  };

  
}

function moveCursorPrevApi_2936024375(HEX3Atmp_2936024336) {
  var result_2936024376 = null;

    result_2936024376 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2936024334_2936024347(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024336, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym579_2936024382 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2936024387 = [mnewString(0)];
    fmtRes_2936024387[0].push.apply(fmtRes_2936024387[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024387, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym579_2936024382 || [],fmtRes_2936024387[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024376;

}

function moveCursorNextLineScript_2936024400_2936024433(self_2936024434) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym583_2936024435 = getAstDocumentEditor_2936023896(self_2936024434);
      if (isNone_2936024014(rHEX60gensym583_2936024435)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2936024405(get_2936024034(rHEX60gensym583_2936024435));
  };

  
}

function moveCursorNextLineApi_2936024461(HEX3Atmp_2936024402) {
  var result_2936024462 = null;

    result_2936024462 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2936024400_2936024433(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024402, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym588_2936024468 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2936024473 = [mnewString(0)];
    fmtRes_2936024473[0].push.apply(fmtRes_2936024473[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024473, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym588_2936024468 || [],fmtRes_2936024473[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024462;

}

function moveCursorPrevLineScript_2936024485_2936024518(self_2936024519) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2936024520 = getAstDocumentEditor_2936023896(self_2936024519);
      if (isNone_2936024014(rHEX60gensym592_2936024520)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2936024490(get_2936024034(rHEX60gensym592_2936024520));
  };

  
}

function moveCursorPrevLineApi_2936024546(HEX3Atmp_2936024487) {
  var result_2936024547 = null;

    result_2936024547 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2936024485_2936024518(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024487, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_2936024553 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2936024558 = [mnewString(0)];
    fmtRes_2936024558[0].push.apply(fmtRes_2936024558[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024558, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_2936024553 || [],fmtRes_2936024558[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024547;

}

function selectContainingScript_2936024571_2936024735(self_2936024736, container_2936024737) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym602_2936024738 = getAstDocumentEditor_2936023896(self_2936024736);
      if (isNone_2936024014(rHEX60gensym602_2936024738)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2936024576(get_2936024034(rHEX60gensym602_2936024738), container_2936024737);
  };

  
}

function selectContainingApi_2936024765(HEX3Atmp_2936024573) {
  var result_2936024766 = null;

    result_2936024766 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2936024571_2936024735(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024573, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936024573, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym607_2936024777 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2936024782 = [mnewString(0)];
    fmtRes_2936024782[0].push.apply(fmtRes_2936024782[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024782, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym607_2936024777 || [],fmtRes_2936024782[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024766;

}

function deleteSelectedScript_2936024785_2936024795(self_2936024796) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym616_2936024797 = getAstDocumentEditor_2936023896(self_2936024796);
      if (isNone_2936024014(rHEX60gensym616_2936024797)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2936024790(get_2936024034(rHEX60gensym616_2936024797));
  };

  
}

function deleteSelectedApi_2936024823(HEX3Atmp_2936024787) {
  var result_2936024824 = null;

    result_2936024824 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2936024785_2936024795(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024787, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2936024830 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2936024835 = [mnewString(0)];
    fmtRes_2936024835[0].push.apply(fmtRes_2936024835[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024835, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2936024830 || [],fmtRes_2936024835[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024824;

}

function copySelectedScript_2936024901_2936024911(self_2936024912) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym624_2936024913 = getAstDocumentEditor_2936023896(self_2936024912);
      if (isNone_2936024014(rHEX60gensym624_2936024913)) {
      break BeforeRet;
      }
      
    };
    copySelected_2936024906(get_2936024034(rHEX60gensym624_2936024913));
  };

  
}

function copySelectedApi_2936024939(HEX3Atmp_2936024903) {
  var result_2936024940 = null;

    result_2936024940 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2936024901_2936024911(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024903, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym629_2936024946 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2936024951 = [mnewString(0)];
    fmtRes_2936024951[0].push.apply(fmtRes_2936024951[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024951, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym629_2936024946 || [],fmtRes_2936024951[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024940;

}

function finishEditScript_2936024969_2936025019(self_2936025020, apply_2936025021) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym633_2936025022 = getAstDocumentEditor_2936023896(self_2936025020);
      if (isNone_2936024014(rHEX60gensym633_2936025022)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2936020734(get_2936024034(rHEX60gensym633_2936025022), apply_2936025021);
  };

  
}

function finishEditApi_2936025049(HEX3Atmp_2936024971) {
  var result_2936025050 = null;

    result_2936025050 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2936024969_2936025019(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936024971, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801807168(HEX5BHEX5D_1627393116(HEX3Atmp_2936024971, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym638_2936025061 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2936025066 = [mnewString(0)];
    fmtRes_2936025066[0].push.apply(fmtRes_2936025066[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025066, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym638_2936025061 || [],fmtRes_2936025066[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025050;

}

function undoScript2_2936025109_2936025142(self_2936025143) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym644_2936025144 = getAstDocumentEditor_2936023896(self_2936025143);
      if (isNone_2936024014(rHEX60gensym644_2936025144)) {
      break BeforeRet;
      }
      
    };
    undo_2936025114(get_2936024034(rHEX60gensym644_2936025144));
  };

  
}

function undoApi2_2936025170(HEX3Atmp_2936025111) {
  var result_2936025171 = null;

    result_2936025171 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2936025109_2936025142(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025111, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym649_2936025177 = [117,110,100,111];
    var fmtRes_2936025182 = [mnewString(0)];
    fmtRes_2936025182[0].push.apply(fmtRes_2936025182[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025182, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym649_2936025177 || [],fmtRes_2936025182[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025171;

}

function redoScript2_2936025186_2936025219(self_2936025220) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2936025221 = getAstDocumentEditor_2936023896(self_2936025220);
      if (isNone_2936024014(rHEX60gensym653_2936025221)) {
      break BeforeRet;
      }
      
    };
    redo_2936025191(get_2936024034(rHEX60gensym653_2936025221));
  };

  
}

function redoApi2_2936025247(HEX3Atmp_2936025188) {
  var result_2936025248 = null;

    result_2936025248 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2936025186_2936025219(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025188, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym658_2936025254 = [114,101,100,111];
    var fmtRes_2936025259 = [mnewString(0)];
    fmtRes_2936025259[0].push.apply(fmtRes_2936025259[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025259, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym658_2936025254 || [],fmtRes_2936025259[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025248;

}

function insertAfterSmartScript_2936025262_2936025387(self_2936025388, nodeTemplate_2936025389) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym663_2936025390 = getAstDocumentEditor_2936023896(self_2936025388);
      if (isNone_2936024014(rHEX60gensym663_2936025390)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2936025267(get_2936024034(rHEX60gensym663_2936025390), nodeTemplate_2936025389);
  };

  
}

function insertAfterSmartApi_2936025417(HEX3Atmp_2936025264) {
  var result_2936025418 = null;

    result_2936025418 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2936025262_2936025387(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025264, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936025264, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym668_2936025429 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2936025434 = [mnewString(0)];
    fmtRes_2936025434[0].push.apply(fmtRes_2936025434[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025434, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym668_2936025429 || [],fmtRes_2936025434[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025418;

}

function insertAfterScript_2936025617_2936025710(self_2936025711, nodeTemplate_2936025712) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym676_2936025713 = getAstDocumentEditor_2936023896(self_2936025711);
      if (isNone_2936024014(rHEX60gensym676_2936025713)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2936025622(get_2936024034(rHEX60gensym676_2936025713), nodeTemplate_2936025712);
  };

  
}

function insertAfterApi_2936025740(HEX3Atmp_2936025619) {
  var result_2936025741 = null;

    result_2936025741 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2936025617_2936025710(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025619, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936025619, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym681_2936025752 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2936025757 = [mnewString(0)];
    fmtRes_2936025757[0].push.apply(fmtRes_2936025757[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025757, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym681_2936025752 || [],fmtRes_2936025757[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025741;

}

function insertBeforeScript_2936025772_2936025864(self_2936025865, nodeTemplate_2936025866) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym688_2936025867 = getAstDocumentEditor_2936023896(self_2936025865);
      if (isNone_2936024014(rHEX60gensym688_2936025867)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2936025777(get_2936024034(rHEX60gensym688_2936025867), nodeTemplate_2936025866);
  };

  
}

function insertBeforeApi_2936025894(HEX3Atmp_2936025774) {
  var result_2936025895 = null;

    result_2936025895 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2936025772_2936025864(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025774, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936025774, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym693_2936025906 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2936025911 = [mnewString(0)];
    fmtRes_2936025911[0].push.apply(fmtRes_2936025911[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025911, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym693_2936025906 || [],fmtRes_2936025911[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025895;

}

function insertChildScript_2936025926_2936026017(self_2936026018, nodeTemplate_2936026019) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym700_2936026020 = getAstDocumentEditor_2936023896(self_2936026018);
      if (isNone_2936024014(rHEX60gensym700_2936026020)) {
      break BeforeRet;
      }
      
    };
    insertChild_2936025931(get_2936024034(rHEX60gensym700_2936026020), nodeTemplate_2936026019);
  };

  
}

function insertChildApi_2936026047(HEX3Atmp_2936025928) {
  var result_2936026048 = null;

    result_2936026048 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2936025926_2936026017(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936025928, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936025928, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym705_2936026059 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2936026064 = [mnewString(0)];
    fmtRes_2936026064[0].push.apply(fmtRes_2936026064[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026064, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym705_2936026059 || [],fmtRes_2936026064[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026048;

}

function replaceScript_2936026079_2936026124(self_2936026125, nodeTemplate_2936026126) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym712_2936026127 = getAstDocumentEditor_2936023896(self_2936026125);
      if (isNone_2936024014(rHEX60gensym712_2936026127)) {
      break BeforeRet;
      }
      
    };
    replace_2936026084(get_2936024034(rHEX60gensym712_2936026127), nodeTemplate_2936026126);
  };

  
}

function replaceApi_2936026154(HEX3Atmp_2936026081) {
  var result_2936026155 = null;

    result_2936026155 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2936026079_2936026124(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026081, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026081, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym717_2936026166 = [114,101,112,108,97,99,101];
    var fmtRes_2936026171 = [mnewString(0)];
    fmtRes_2936026171[0].push.apply(fmtRes_2936026171[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026171, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym717_2936026166 || [],fmtRes_2936026171[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026155;

}

function replaceEmptyScript_2936026186_2936026235(self_2936026236, nodeTemplate_2936026237) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym722_2936026238 = getAstDocumentEditor_2936023896(self_2936026236);
      if (isNone_2936024014(rHEX60gensym722_2936026238)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2936026191(get_2936024034(rHEX60gensym722_2936026238), nodeTemplate_2936026237);
  };

  
}

function replaceEmptyApi_2936026265(HEX3Atmp_2936026188) {
  var result_2936026266 = null;

    result_2936026266 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2936026186_2936026235(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026188, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026188, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym727_2936026277 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2936026282 = [mnewString(0)];
    fmtRes_2936026282[0].push.apply(fmtRes_2936026282[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026282, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym727_2936026277 || [],fmtRes_2936026282[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026266;

}

function replaceParentScript_2936026297_2936026314(self_2936026315) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym731_2936026316 = getAstDocumentEditor_2936023896(self_2936026315);
      if (isNone_2936024014(rHEX60gensym731_2936026316)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2936026302(get_2936024034(rHEX60gensym731_2936026316));
  };

  
}

function replaceParentApi_2936026342(HEX3Atmp_2936026299) {
  var result_2936026343 = null;

    result_2936026343 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2936026297_2936026314(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026299, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym736_2936026349 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2936026354 = [mnewString(0)];
    fmtRes_2936026354[0].push.apply(fmtRes_2936026354[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026354, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym736_2936026349 || [],fmtRes_2936026354[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026343;

}

function wrapScript_2936026357_2936026426(self_2936026427, nodeTemplate_2936026428) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym740_2936026429 = getAstDocumentEditor_2936023896(self_2936026427);
      if (isNone_2936024014(rHEX60gensym740_2936026429)) {
      break BeforeRet;
      }
      
    };
    wrap_2936026362(get_2936024034(rHEX60gensym740_2936026429), nodeTemplate_2936026428);
  };

  
}

function wrapApi_2936026456(HEX3Atmp_2936026359) {
  var result_2936026457 = null;

    result_2936026457 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2936026357_2936026426(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026359, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026359, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym745_2936026468 = [119,114,97,112];
    var fmtRes_2936026473 = [mnewString(0)];
    fmtRes_2936026473[0].push.apply(fmtRes_2936026473[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026473, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym745_2936026468 || [],fmtRes_2936026473[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026457;

}

function editPrevEmptyScript_2936026500_2936026513(self_2936026514) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym749_2936026515 = getAstDocumentEditor_2936023896(self_2936026514);
      if (isNone_2936024014(rHEX60gensym749_2936026515)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2936026505(get_2936024034(rHEX60gensym749_2936026515));
  };

  
}

function editPrevEmptyApi_2936026541(HEX3Atmp_2936026502) {
  var result_2936026542 = null;

    result_2936026542 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2936026500_2936026513(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026502, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym754_2936026548 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2936026553 = [mnewString(0)];
    fmtRes_2936026553[0].push.apply(fmtRes_2936026553[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026553, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym754_2936026548 || [],fmtRes_2936026553[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026542;

}

function editNextEmptyScript_2936026563_2936026584(self_2936026585) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym758_2936026586 = getAstDocumentEditor_2936023896(self_2936026585);
      if (isNone_2936024014(rHEX60gensym758_2936026586)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2936026568(get_2936024034(rHEX60gensym758_2936026586));
  };

  
}

function editNextEmptyApi_2936026612(HEX3Atmp_2936026565) {
  var result_2936026613 = null;

    result_2936026613 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2936026563_2936026584(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026565, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym763_2936026619 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2936026624 = [mnewString(0)];
    fmtRes_2936026624[0].push.apply(fmtRes_2936026624[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026624, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym763_2936026619 || [],fmtRes_2936026624[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026613;

}

function renameScript_2936026640_2936026647(self_2936026648) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym767_2936026649 = getAstDocumentEditor_2936023896(self_2936026648);
      if (isNone_2936024014(rHEX60gensym767_2936026649)) {
      break BeforeRet;
      }
      
    };
    rename_2936026645(get_2936024034(rHEX60gensym767_2936026649));
  };

  
}

function renameApi_2936026675(HEX3Atmp_2936026642) {
  var result_2936026676 = null;

    result_2936026676 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2936026640_2936026647(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026642, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym772_2936026682 = [114,101,110,97,109,101];
    var fmtRes_2936026687 = [mnewString(0)];
    fmtRes_2936026687[0].push.apply(fmtRes_2936026687[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026687, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym772_2936026682 || [],fmtRes_2936026687[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026676;

}

function selectPrevCompletionScript2_2936026690_2936026708(self_2936026709) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym775_2936026710 = getAstDocumentEditor_2936023896(self_2936026709);
      if (isNone_2936024014(rHEX60gensym775_2936026710)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2936026695(get_2936024034(rHEX60gensym775_2936026710));
  };

  
}

function selectPrevCompletionApi2_2936026736(HEX3Atmp_2936026692) {
  var result_2936026737 = null;

    result_2936026737 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2936026690_2936026708(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026692, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym780_2936026743 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936026748 = [mnewString(0)];
    fmtRes_2936026748[0].push.apply(fmtRes_2936026748[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026748, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym780_2936026743 || [],fmtRes_2936026748[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026737;

}

function selectNextCompletionScript2_2936026751_2936026769(editor_2936026770) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym784_2936026771 = getAstDocumentEditor_2936023896(editor_2936026770);
      if (isNone_2936024014(rHEX60gensym784_2936026771)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2936026756(get_2936024034(rHEX60gensym784_2936026771));
  };

  
}

function selectNextCompletionApi2_2936026797(HEX3Atmp_2936026753) {
  var result_2936026798 = null;

    result_2936026798 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2936026751_2936026769(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026753, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym789_2936026804 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936026809 = [mnewString(0)];
    fmtRes_2936026809[0].push.apply(fmtRes_2936026809[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026809, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym789_2936026804 || [],fmtRes_2936026809[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026798;

}

function applySelectedCompletionScript2_2936026812_2936026932(editor_2936026933) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym793_2936026934 = getAstDocumentEditor_2936023896(editor_2936026933);
      if (isNone_2936024014(rHEX60gensym793_2936026934)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2936026817(get_2936024034(rHEX60gensym793_2936026934));
  };

  
}

function applySelectedCompletionApi2_2936026960(HEX3Atmp_2936026814) {
  var result_2936026961 = null;

    result_2936026961 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2936026812_2936026932(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936026814, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym798_2936026967 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936026972 = [mnewString(0)];
    fmtRes_2936026972[0].push.apply(fmtRes_2936026972[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026972, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym798_2936026967 || [],fmtRes_2936026972[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026961;

}

function cancelAndNextCompletionScript_2936027023_2936027030(self_2936027031) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym808_2936027032 = getAstDocumentEditor_2936023896(self_2936027031);
      if (isNone_2936024014(rHEX60gensym808_2936027032)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2936027028(get_2936024034(rHEX60gensym808_2936027032));
  };

  
}

function cancelAndNextCompletionApi_2936027058(HEX3Atmp_2936027025) {
  var result_2936027059 = null;

    result_2936027059 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2936027023_2936027030(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027025, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym813_2936027065 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027070 = [mnewString(0)];
    fmtRes_2936027070[0].push.apply(fmtRes_2936027070[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027070, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym813_2936027065 || [],fmtRes_2936027070[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027059;

}

function cancelAndPrevCompletionScript_2936027073_2936027080(self_2936027081) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym816_2936027082 = getAstDocumentEditor_2936023896(self_2936027081);
      if (isNone_2936024014(rHEX60gensym816_2936027082)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2936027078(get_2936024034(rHEX60gensym816_2936027082));
  };

  
}

function cancelAndPrevCompletionApi_2936027108(HEX3Atmp_2936027075) {
  var result_2936027109 = null;

    result_2936027109 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2936027073_2936027080(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027075, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym821_2936027115 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027120 = [mnewString(0)];
    fmtRes_2936027120[0].push.apply(fmtRes_2936027120[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027120, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym821_2936027115 || [],fmtRes_2936027120[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027109;

}

function cancelAndDeleteScript_2936027123_2936027133(self_2936027134) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym824_2936027135 = getAstDocumentEditor_2936023896(self_2936027134);
      if (isNone_2936024014(rHEX60gensym824_2936027135)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2936027128(get_2936024034(rHEX60gensym824_2936027135));
  };

  
}

function cancelAndDeleteApi_2936027161(HEX3Atmp_2936027125) {
  var result_2936027162 = null;

    result_2936027162 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2936027123_2936027133(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027125, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym829_2936027168 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2936027173 = [mnewString(0)];
    fmtRes_2936027173[0].push.apply(fmtRes_2936027173[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027173, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym829_2936027168 || [],fmtRes_2936027173[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027162;

}

function moveNodeToPrevSpaceScript_2936027176_2936027287(self_2936027288) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym832_2936027289 = getAstDocumentEditor_2936023896(self_2936027288);
      if (isNone_2936024014(rHEX60gensym832_2936027289)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2936027181(get_2936024034(rHEX60gensym832_2936027289));
  };

  
}

function moveNodeToPrevSpaceApi_2936027315(HEX3Atmp_2936027178) {
  var result_2936027316 = null;

    result_2936027316 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2936027176_2936027287(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027178, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym837_2936027322 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2936027327 = [mnewString(0)];
    fmtRes_2936027327[0].push.apply(fmtRes_2936027327[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027327, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym837_2936027322 || [],fmtRes_2936027327[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027316;

}

function moveNodeToNextSpaceScript_2936027338_2936027450(self_2936027451) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym845_2936027452 = getAstDocumentEditor_2936023896(self_2936027451);
      if (isNone_2936024014(rHEX60gensym845_2936027452)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2936027343(get_2936024034(rHEX60gensym845_2936027452));
  };

  
}

function moveNodeToNextSpaceApi_2936027478(HEX3Atmp_2936027340) {
  var result_2936027479 = null;

    result_2936027479 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2936027338_2936027450(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027340, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym850_2936027485 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2936027490 = [mnewString(0)];
    fmtRes_2936027490[0].push.apply(fmtRes_2936027490[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027490, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym850_2936027485 || [],fmtRes_2936027490[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027479;

}

function selectPrevScript2_2936027504_2936027511(self_2936027512) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym857_2936027513 = getAstDocumentEditor_2936023896(self_2936027512);
      if (isNone_2936024014(rHEX60gensym857_2936027513)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2936027509(get_2936024034(rHEX60gensym857_2936027513));
  };

  
}

function selectPrevApi2_2936027539(HEX3Atmp_2936027506) {
  var result_2936027540 = null;

    result_2936027540 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2936027504_2936027511(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027506, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym862_2936027546 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2936027551 = [mnewString(0)];
    fmtRes_2936027551[0].push.apply(fmtRes_2936027551[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027551, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym862_2936027546 || [],fmtRes_2936027551[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027540;

}

function selectNextScript2_2936027555_2936027562(self_2936027563) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym865_2936027564 = getAstDocumentEditor_2936023896(self_2936027563);
      if (isNone_2936024014(rHEX60gensym865_2936027564)) {
      break BeforeRet;
      }
      
    };
    selectNext_2936027560(get_2936024034(rHEX60gensym865_2936027564));
  };

  
}

function selectNextApi2_2936027590(HEX3Atmp_2936027557) {
  var result_2936027591 = null;

    result_2936027591 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2936027555_2936027562(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027557, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_2936027597 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2936027602 = [mnewString(0)];
    fmtRes_2936027602[0].push.apply(fmtRes_2936027602[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027602, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_2936027597 || [],fmtRes_2936027602[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027591;

}

function gotoScript_2936027606_2936028393(self_2936028394, where_2936028395) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym874_2936028396 = getAstDocumentEditor_2936023896(self_2936028394);
      if (isNone_2936024014(rHEX60gensym874_2936028396)) {
      break BeforeRet;
      }
      
    };
    goto_2936027611(get_2936024034(rHEX60gensym874_2936028396), where_2936028395);
  };

  
}

function gotoApi_2936028423(HEX3Atmp_2936027608) {
  var result_2936028424 = null;

    result_2936028424 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2936027606_2936028393(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936027608, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936027608, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_2936028435 = [103,111,116,111];
    var fmtRes_2936028440 = [mnewString(0)];
    fmtRes_2936028440[0].push.apply(fmtRes_2936028440[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028440, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_2936028435 || [],fmtRes_2936028440[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028424;

}

function runSelectedFunctionScript_2936028548_2936028774(self_2936028775) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym900_2936028776 = getAstDocumentEditor_2936023896(self_2936028775);
      if (isNone_2936024014(rHEX60gensym900_2936028776)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2936028553(get_2936024034(rHEX60gensym900_2936028776));
  };

  
}

function runSelectedFunctionApi_2936028802(HEX3Atmp_2936028550) {
  var result_2936028803 = null;

    result_2936028803 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2936028548_2936028774(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936028550, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym905_2936028809 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2936028814 = [mnewString(0)];
    fmtRes_2936028814[0].push.apply(fmtRes_2936028814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym905_2936028809 || [],fmtRes_2936028814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028803;

}

function toggleOptionScript_2936028826_2936028834(self_2936028835, name_2936028836) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym923_2936028837 = getAstDocumentEditor_2936023896(self_2936028835);
      if (isNone_2936024014(rHEX60gensym923_2936028837)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2936028831(get_2936024034(rHEX60gensym923_2936028837), name_2936028836);
  };

  
}

function toggleOptionApi_2936028864(HEX3Atmp_2936028828) {
  var result_2936028865 = null;

    result_2936028865 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2936028826_2936028834(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936028828, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936028828, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym928_2936028876 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2936028881 = [mnewString(0)];
    fmtRes_2936028881[0].push.apply(fmtRes_2936028881[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028881, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym928_2936028876 || [],fmtRes_2936028881[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028865;

}

function runLastCommandScript_2936028888_2936028896(self_2936028897, which_2936028898) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym932_2936028899 = getAstDocumentEditor_2936023896(self_2936028897);
      if (isNone_2936024014(rHEX60gensym932_2936028899)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2936028893(get_2936024034(rHEX60gensym932_2936028899), which_2936028898);
  };

  
}

function runLastCommandApi_2936028926(HEX3Atmp_2936028890) {
  var result_2936028927 = null;

    result_2936028927 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2936028888_2936028896(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936028890, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936028890, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym937_2936028938 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2936028943 = [mnewString(0)];
    fmtRes_2936028943[0].push.apply(fmtRes_2936028943[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028943, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym937_2936028938 || [],fmtRes_2936028943[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028927;

}

function selectCenterNodeScript_2936028946_2936029210(self_2936029211) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym940_2936029212 = getAstDocumentEditor_2936023896(self_2936029211);
      if (isNone_2936024014(rHEX60gensym940_2936029212)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2936028951(get_2936024034(rHEX60gensym940_2936029212));
  };

  
}

function selectCenterNodeApi_2936029238(HEX3Atmp_2936028948) {
  var result_2936029239 = null;

    result_2936029239 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2936028946_2936029210(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936028948, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym945_2936029245 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2936029250 = [mnewString(0)];
    fmtRes_2936029250[0].push.apply(fmtRes_2936029250[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029250, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym945_2936029245 || [],fmtRes_2936029250[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029239;

}

function scrollScript_2936029282_2936029294(self_2936029295, amount_2936029296) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym957_2936029297 = getAstDocumentEditor_2936023896(self_2936029295);
      if (isNone_2936024014(rHEX60gensym957_2936029297)) {
      break BeforeRet;
      }
      
    };
    scroll_2936029287(get_2936024034(rHEX60gensym957_2936029297), amount_2936029296);
  };

  
}

function scrollApi_2936029324(HEX3Atmp_2936029284) {
  var result_2936029325 = null;

    result_2936029325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2936029282_2936029294(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029284, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801808513(HEX5BHEX5D_1627393116(HEX3Atmp_2936029284, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym962_2936029336 = [115,99,114,111,108,108];
    var fmtRes_2936029341 = [mnewString(0)];
    fmtRes_2936029341[0].push.apply(fmtRes_2936029341[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029341, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym962_2936029336 || [],fmtRes_2936029341[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029325;

}

function scrollOutputScript_2936029344_2936029363(self_2936029364, arg_2936029365) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym966_2936029366 = getAstDocumentEditor_2936023896(self_2936029364);
      if (isNone_2936024014(rHEX60gensym966_2936029366)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2936029349(get_2936024034(rHEX60gensym966_2936029366), arg_2936029365);
  };

  
}

function scrollOutputApi_2936029393(HEX3Atmp_2936029346) {
  var result_2936029394 = null;

    result_2936029394 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2936029344_2936029363(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029346, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936029346, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym971_2936029405 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2936029410 = [mnewString(0)];
    fmtRes_2936029410[0].push.apply(fmtRes_2936029410[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029410, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym971_2936029405 || [],fmtRes_2936029410[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029394;

}

function dumpContextScript_2936029413_2936029420(self_2936029421) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym974_2936029422 = getAstDocumentEditor_2936023896(self_2936029421);
      if (isNone_2936024014(rHEX60gensym974_2936029422)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2936029418(get_2936024034(rHEX60gensym974_2936029422));
  };

  
}

function dumpContextApi_2936029448(HEX3Atmp_2936029415) {
  var result_2936029449 = null;

    result_2936029449 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2936029413_2936029420(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029415, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym979_2936029455 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2936029460 = [mnewString(0)];
    fmtRes_2936029460[0].push.apply(fmtRes_2936029460[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029460, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym979_2936029455 || [],fmtRes_2936029460[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029449;

}

function setModeScript2_2936029607_2936029647(self_2936029648, mode_2936029649) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym983_2936029650 = getAstDocumentEditor_2936023896(self_2936029648);
      if (isNone_2936024014(rHEX60gensym983_2936029650)) {
      break BeforeRet;
      }
      
    };
    setMode_2936029612(get_2936024034(rHEX60gensym983_2936029650), mode_2936029649);
  };

  
}

function setModeApi2_2936029677(HEX3Atmp_2936029609) {
  var result_2936029678 = null;

    result_2936029678 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2936029607_2936029647(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029609, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936029609, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym988_2936029689 = [115,101,116,77,111,100,101];
    var fmtRes_2936029694 = [mnewString(0)];
    fmtRes_2936029694[0].push.apply(fmtRes_2936029694[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029694, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym988_2936029689 || [],fmtRes_2936029694[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029678;

}

function modeScript2_2936029698_2936029706(self_2936029707) {
  var result_2936029708 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym994_2936029709 = getAstDocumentEditor_2936023896(self_2936029707);
      if (isNone_2936024014(rHEX60gensym994_2936029709)) {
      break BeforeRet;
      }
      
    };
    result_2936029708 = nimCopy(null, mode_2936029703(get_2936024034(rHEX60gensym994_2936029709)), NTI33554449);
  };

  return result_2936029708;

}

function modeApi2_2936029736(HEX3Atmp_2936029700) {
  var result_2936029737 = null;

  BeforeRet: {
    result_2936029737 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2936029737 = toJson_1811939932(modeScript2_2936029698_2936029706(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029700, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1000_2936029747 = [109,111,100,101];
    var fmtRes_2936029752 = [mnewString(0)];
    fmtRes_2936029752[0].push.apply(fmtRes_2936029752[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029752, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1000_2936029747 || [],fmtRes_2936029752[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2936029737;

}

function getContextWithModeScript2_2936029755_2936029764(self_2936029765, context_2936029766) {
  var result_2936029767 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1004_2936029768 = getAstDocumentEditor_2936023896(self_2936029765);
      if (isNone_2936024014(rHEX60gensym1004_2936029768)) {
      break BeforeRet;
      }
      
    };
    result_2936029767 = nimCopy(null, getContextWithMode_2936029760(get_2936024034(rHEX60gensym1004_2936029768), context_2936029766), NTI33554449);
  };

  return result_2936029767;

}

function getContextWithModeApi2_2936029796(HEX3Atmp_2936029757) {
  var result_2936029797 = null;

  BeforeRet: {
    result_2936029797 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2936029797 = toJson_1811939932(getContextWithModeScript2_2936029755_2936029764(jsonTo_2936024061(HEX5BHEX5D_1627393116(HEX3Atmp_2936029757, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936029757, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1010_2936029812 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2936029817 = [mnewString(0)];
    fmtRes_2936029817[0].push.apply(fmtRes_2936029817[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029817, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1010_2936029812 || [],fmtRes_2936029817[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2936029797;

}

function dispatch_2936029822(command_2936029821, arg_2936029820) {
    var Temporary1;

  var result_2936029824 = ({val: null});

    switch (toJSStr(command_2936029821)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2801813366(moveCursorApi_2936024059(arg_2936029820));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2801813366(moveCursorUpApi_2936024201(arg_2936029820));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2801813366(moveCursorDownApi_2936024251(arg_2936029820));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2801813366(moveCursorNextApi_2936024308(arg_2936029820));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2801813366(moveCursorPrevApi_2936024375(arg_2936029820));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2801813366(moveCursorNextLineApi_2936024461(arg_2936029820));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2801813366(moveCursorPrevLineApi_2936024546(arg_2936029820));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2801813366(selectContainingApi_2936024765(arg_2936029820));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2801813366(deleteSelectedApi_2936024823(arg_2936029820));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2801813366(copySelectedApi_2936024939(arg_2936029820));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2801813366(finishEditApi_2936025049(arg_2936029820));
      break;
    case "undo":
      Temporary1 = some_2801813366(undoApi2_2936025170(arg_2936029820));
      break;
    case "redo":
      Temporary1 = some_2801813366(redoApi2_2936025247(arg_2936029820));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2801813366(insertAfterSmartApi_2936025417(arg_2936029820));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2801813366(insertAfterApi_2936025740(arg_2936029820));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2801813366(insertBeforeApi_2936025894(arg_2936029820));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2801813366(insertChildApi_2936026047(arg_2936029820));
      break;
    case "replace":
      Temporary1 = some_2801813366(replaceApi_2936026154(arg_2936029820));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2801813366(replaceEmptyApi_2936026265(arg_2936029820));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2801813366(replaceParentApi_2936026342(arg_2936029820));
      break;
    case "wrap":
      Temporary1 = some_2801813366(wrapApi_2936026456(arg_2936029820));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2801813366(editPrevEmptyApi_2936026541(arg_2936029820));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2801813366(editNextEmptyApi_2936026612(arg_2936029820));
      break;
    case "rename":
      Temporary1 = some_2801813366(renameApi_2936026675(arg_2936029820));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2801813366(selectPrevCompletionApi2_2936026736(arg_2936029820));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2801813366(selectNextCompletionApi2_2936026797(arg_2936029820));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2801813366(applySelectedCompletionApi2_2936026960(arg_2936029820));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2801813366(cancelAndNextCompletionApi_2936027058(arg_2936029820));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2801813366(cancelAndPrevCompletionApi_2936027108(arg_2936029820));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2801813366(cancelAndDeleteApi_2936027161(arg_2936029820));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2801813366(moveNodeToPrevSpaceApi_2936027315(arg_2936029820));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2801813366(moveNodeToNextSpaceApi_2936027478(arg_2936029820));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2801813366(selectPrevApi2_2936027539(arg_2936029820));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2801813366(selectNextApi2_2936027590(arg_2936029820));
      break;
    case "goto":
      Temporary1 = some_2801813366(gotoApi_2936028423(arg_2936029820));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2801813366(runSelectedFunctionApi_2936028802(arg_2936029820));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2801813366(toggleOptionApi_2936028864(arg_2936029820));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2801813366(runLastCommandApi_2936028926(arg_2936029820));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2801813366(selectCenterNodeApi_2936029238(arg_2936029820));
      break;
    case "scroll":
      Temporary1 = some_2801813366(scrollApi_2936029324(arg_2936029820));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2801813366(scrollOutputApi_2936029393(arg_2936029820));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2801813366(dumpContextApi_2936029448(arg_2936029820));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801813366(setModeApi2_2936029677(arg_2936029820));
      break;
    case "mode":
      Temporary1 = some_2801813366(modeApi2_2936029736(arg_2936029820));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801813366(getContextWithModeApi2_2936029796(arg_2936029820));
      break;
    default: 
      Temporary1 = none_2801813562();
      break;
    }
    result_2936029824 = nimCopy(result_2936029824, Temporary1, NTI2801806961);

  return result_2936029824;

}

function handleAction_2936028883(self_2936028884, action_2936028885, arg_2936028886) {
  var result_2936029970 = 0;

  BeforeRet: {
    var args_2936029971 = newJArray_1627390082();
    add_1627390190(args_2936029971, toJson_2936023983({id: self_2936028884.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2936029972 = null;
      var colontmp__536872149 = null;
      colontmp__536872149 = newStringStream_1660945417(arg_2936028886);
      var p_536872150 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872150[0], colontmp__536872149, [], false);
      try {
      var _ = getTok_1694499270(p_536872150[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872150[0].tok == 1))) break Label4;
            a_2936029972 = parseJson_1627395211(p_536872150[0], false, false, 0);
            add_1627390190(args_2936029971, a_2936029972);
          }
      };
      } finally {
      close_1694498967(p_536872150[0]);
      }
    };
    var newLastCommand_2936029973 = {Field0: nimCopy(null, action_2936028885, NTI33554449), Field1: nimCopy(null, arg_2936028886, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848856(self_2936028884.editor, self_2936028884, action_2936028885, args_2936029971) == 3)) {
    result_2936029970 = 3;
    break BeforeRet;
    }
    
    if (isSome_2801813630(dispatch_2936029822(action_2936028885, args_2936029971))) {
    result_2936029970 = 3;
    break BeforeRet;
    }
    
    result_2936029970 = 1;
    break BeforeRet;
    } finally {
    self_2936028884.lastCommand = nimCopy(self_2936028884.lastCommand, newLastCommand_2936029973, NTI2936014334);
    }
  };

  return result_2936029970;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet321[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872268 = 0;
      colontmp__536872268 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872269 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872269 <= colontmp__536872268)) break Label3;
            i_855638867 = res_536872269;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872269 = addInt(res_536872269, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872272 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872273 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872274 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872272, NTI1191182360), Field1: colontmp__536872273, Field2: colontmp__536872274}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872275 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872275["Field0"];
    var m_1191182547 = colontmp__536872275["Field1"];
    var d_1191182548 = colontmp__536872275["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872271 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872271["Field0"];
    var m_1191183687 = colontmp__536872271["Field1"];
    var y_1191183688 = colontmp__536872271["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872260 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872260 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872260, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872260 = addInt(i_536872260, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet320[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872265 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872265 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872265, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872265 = addInt(i_536872265, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function isReadOnly_2365587475(self_2365587476) {
  var result_2365587477 = false;

    result_2365587477 = false;

  return result_2365587477;

}

function isReadOnly_2248146999(self_2248147000) {
  var result_2248147001 = false;

    result_2248147001 = true;

  return result_2248147001;

}

function isReadOnly_2231369744(self_2231369745) {
  var result_2231369746 = false;

    result_2231369746 = false;

  return result_2231369746;

}

function isReadOnly_2181038094(self_2181038095) {
  var result_2181038096 = false;

    result_2181038096 = true;

  return result_2181038096;

}

function isReadOnly_2181038097(self_2181038095) {
  var result_2181038098 = false;

  BeforeRet: {
    chckNilDisp(self_2181038095);
    if (isObj(self_2181038095.m_type, NTI2365587460)) {
    result_2181038098 = isReadOnly_2365587475(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2248146948)) {
    result_2181038098 = isReadOnly_2248146999(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2231369732)) {
    result_2181038098 = isReadOnly_2231369744(self_2181038095);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038095.m_type, NTI2181038088)) {
    result_2181038098 = isReadOnly_2181038094(self_2181038095);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038098;

}

function settings_2365587478(self_2365587479) {
  var result_2365587480 = null;

    result_2365587480 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2365587480, [98,97,115,101,85,114,108], newJString_1627389994(self_2365587479.baseUrl));

  return result_2365587480;

}

function settings_2248147002(self_2248147003) {
  var result_2248147004 = null;

    result_2248147004 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [98,97,115,101,85,114,108], newJString_1627389994(self_2248147003.baseUrl));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [117,115,101,114], newJString_1627389994(self_2248147003.user));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [114,101,112,111,115,105,116,111,114,121], newJString_1627389994(self_2248147003.repository));
    HEX5BHEX5DHEX3D_1627391903(result_2248147004, [98,114,97,110,99,104,79,114,72,97,115,104], newJString_1627389994(self_2248147003.branchOrHash));

  return result_2248147004;

}

function settings_2231369737(self_2231369738) {
  var result_2231369739 = null;

    result_2231369739 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2231369739, [112,97,116,104], newJString_1627389994(self_2231369738.path));

  return result_2231369739;

}

function settings_2181038099(self_2181038100) {
  var result_2181038101 = null;

  return result_2181038101;

}

function settings_2181038102(self_2181038100) {
  var result_2181038103 = null;

  BeforeRet: {
    chckNilDisp(self_2181038100);
    if (isObj(self_2181038100.m_type, NTI2365587460)) {
    result_2181038103 = settings_2365587478(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2248146948)) {
    result_2181038103 = settings_2248147002(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2231369732)) {
    result_2181038103 = settings_2231369737(self_2181038100);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038100.m_type, NTI2181038088)) {
    result_2181038103 = settings_2181038099(self_2181038100);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038103;

}

function clear_2248147047(t_2248147050) {
    Label1: {
      var i_2248147103 = 0;
      var colontmp__536872277 = 0;
      colontmp__536872277 = (t_2248147050.data).length;
      var i_536872278 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872278 < colontmp__536872277)) break Label3;
            i_2248147103 = i_536872278;
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field0 = 0;
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field2 = nimCopy(t_2248147050.data[chckIndx(i_2248147103, 0, (t_2248147050.data).length - 1)].Field2, ({files: [], folders: []}), NTI2181038085);
            i_536872278 = addInt(i_536872278, 1);
          }
      };
    };
    t_2248147050.counter = 0;

  
}

function clearDirectoryCache_2365587481(self_2365587482) {
    clear_2248147047(self_2365587482.cachedDirectoryListings);

  
}

function clearDirectoryCache_2248147005(self_2248147006) {
    clear_2248147047(self_2248147006.cachedDirectoryListings);

  
}

function clearDirectoryCache_2181038104(self_2181038105) {
  
}

function clearDirectoryCache_2181038106(self_2181038105) {
    chckNilDisp(self_2181038105);
    if (isObj(self_2181038105.m_type, NTI2365587460)) {
    clearDirectoryCache_2365587481(self_2181038105);
    }
    else {
    if (isObj(self_2181038105.m_type, NTI2248146948)) {
    clearDirectoryCache_2248147005(self_2181038105);
    }
    else {
    if (isObj(self_2181038105.m_type, NTI2181038088)) {
    clearDirectoryCache_2181038104(self_2181038105);
    }
    }}

  
}
async function httpGet_2315255824(url_2315255825, authToken_2315255839) {
  var result_2315255841 = null;

  BeforeRet: {
    var cstr_2315255881 = (await getAsyncJs(toJSStr(url_2315255825), toJSStr(get_2315255863(authToken_2315255839, []))));
    result_2315255841 = cstrToNimstr(cstr_2315255881);
    break BeforeRet;
  };

  return result_2315255841;

}
async function loadFile_2365587553(self_2365587554, relativePath_2365587555) {
    var Temporary1;

  var result_2365587557 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2365587555, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2365587555, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2365587555;
    }
    
    var relativePath_2365587585 = nimCopy(null, Temporary1, NTI33554449);
    var url_2365587586 = (self_2365587554.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2365587585 || []);
    var fmtRes_2365587591 = [mnewString(0)];
    fmtRes_2365587591[0].push.apply(fmtRes_2365587591[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2365587591, 0, url_2365587586, []);
    fmtRes_2365587591[0].push.apply(fmtRes_2365587591[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2365587591[0], NTI33554449)]);
    result_2365587557 = (await httpGet_2315255824(url_2365587586, none_2315255831()));
    break BeforeRet;
  };

  return result_2365587557;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2348810309(t_2348810312, key_2348810313) {
  var result_2348810314 = false;

  BeforeRet: {
    result_2348810314 = hasKey_1795162450(t_2348810312, key_2348810313);
    break BeforeRet;
  };

  return result_2348810314;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2348810263(self_2348810264, name_2348810265) {
    var Temporary1;

  var result_2348810266 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2348810265)) !== null)) {
    result_2348810266 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2348810265))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2348810309(cachedAppFiles_2348810262[0], name_2348810265))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2348810262[0], name_2348810265, cstrToNimstr(loadFileSync(toJSStr(name_2348810265))));
    }
    
    result_2348810266 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2348810262[0], name_2348810265), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2348810266;

}

function loadApplicationFile_2332033038(self_2332033039, name_2332033040) {
  var result_2332033041 = [];

  return result_2332033041;

}

function loadApplicationFile_2332033042(self_2332033039, name_2332033040) {
  var result_2332033043 = [];

  BeforeRet: {
    chckNilDisp(self_2332033039);
    if (isObj(self_2332033039.m_type, NTI2348810244)) {
    result_2332033043 = loadApplicationFile_2348810263(self_2332033039, name_2332033040);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033039.m_type, NTI2332033028)) {
    result_2332033043 = loadApplicationFile_2332033038(self_2332033039, name_2332033040);
    break BeforeRet;
    }
    }
  };

  return result_2332033043;

}

function getAccessToken_2248146974() {
  var result_2248146976 = ({val: [], has: false});

  BeforeRet: {
    var token_2248146977 = loadApplicationFile_2332033042(fs_2332033077, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2248146977).length)) {
    result_2248146976 = nimCopy(result_2248146976, some_2248146978(token_2248146977), NTI2315255829);
    break BeforeRet;
    }
    
    result_2248146976 = nimCopy(result_2248146976, none_2315255831(), NTI2315255829);
    break BeforeRet;
  };

  return result_2248146976;

}

function decode_2281701871(s_2281701872) {
    
function decodeSize_2281701874(size_2281701875) {
      var result_2281701876 = 0;

      BeforeRet: {
        result_2281701876 = addInt(divInt(mulInt(size_2281701875, 3), 4), 6);
        break BeforeRet;
      };

      return result_2281701876;

    }
    var Temporary1;

  var result_2281701873 = [];

  BeforeRet: {
    if (((s_2281701872).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2281701873.length < (Temporary1 = chckRange(decodeSize_2281701874((s_2281701872).length), 0, 2147483647), Temporary1)) { for (var i = result_2281701873.length; i < Temporary1; ++i) result_2281701873.push(0); }
         else {result_2281701873.length = Temporary1; };
    var inputIndex_2281701881 = 0;
    var outputIndex_2281701882 = 0;
    var inputLen_2281701883 = (s_2281701872).length;
    var inputEnds_2281701884 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet322[s_2281701872[chckIndx(subInt(inputLen_2281701883, 1), 0, (s_2281701872).length - 1)]] != undefined)) break Label3;
          inputLen_2281701883 = subInt(inputLen_2281701883, 1);
        }
    };
    inputEnds_2281701884 = subInt(inputLen_2281701883, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2281701881 <= inputEnds_2281701884)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet323[s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]] != undefined)) break Label7;
                inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
              }
          };
          var a_2281701906 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((a_2281701906 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var b_2281701919 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((b_2281701919 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var c_2281701932 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((c_2281701932 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          var d_2281701945 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
          if ((d_2281701945 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281701906 << 2) | (b_2281701919 >> 4)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((b_2281701919 << 4) | (c_2281701932 >> 2)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
          result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((c_2281701932 << 6) | (d_2281701945 >> 0)) & 255), 0, 255);
          outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
        }
    };
    var leftLen_2281701994 = absInt(modInt(subInt(inputIndex_2281701881, inputLen_2281701883), 4));
    if ((leftLen_2281701994 == 2)) {
    var a_2281701998 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((a_2281701998 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var b_2281702011 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((b_2281702011 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281701998 << 2) | (b_2281702011 >> 4)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    }
    else {
    if ((leftLen_2281701994 == 3)) {
    var a_2281702037 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((a_2281702037 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var b_2281702050 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((b_2281702050 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    var c_2281702063 = ((decodeTable_2281701861[chckIndx(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)], 0, (decodeTable_2281701861).length - 1)]) | 0);
    if ((c_2281702063 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2281701872[chckIndx(inputIndex_2281701881, 0, (s_2281701872).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2281701881) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2281701881 = addInt(inputIndex_2281701881, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((a_2281702037 << 2) | (b_2281702050 >> 4)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    result_2281701873[chckIndx(outputIndex_2281701882, 0, (result_2281701873).length - 1)] = chckRange((((b_2281702050 << 4) | (c_2281702063 >> 2)) & 255), 0, 255);
    outputIndex_2281701882 = addInt(outputIndex_2281701882, 1);
    }
    }
    if (result_2281701873.length < chckRange(outputIndex_2281701882, 0, 2147483647)) { for (var i = result_2281701873.length; i < chckRange(outputIndex_2281701882, 0, 2147483647); ++i) result_2281701873.push(0); }
         else {result_2281701873.length = chckRange(outputIndex_2281701882, 0, 2147483647); };
  };

  return result_2281701873;

}
async function loadFile_2248147443(self_2248147444, relativePath_2248147445) {
    var Temporary1;

  var result_2248147447 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2248147445, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2248147445, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2248147445;
    }
    
    var relativePath_2248147475 = nimCopy(null, Temporary1, NTI33554449);
    var url_2248147476 = (self_2248147444.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2248147475 || [],[63,114,101,102,61] || [],self_2248147444.branchOrHash || []);
    var fmtRes_2248147481 = [mnewString(0)];
    fmtRes_2248147481[0].push.apply(fmtRes_2248147481[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2248147481, 0, url_2248147476, []);
    fmtRes_2248147481[0].push.apply(fmtRes_2248147481[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2248147481[0], NTI33554449)]);
    var token_2248147482 = getAccessToken_2248146974();
    var response_2248147487 = (await httpGet_2315255824(url_2248147476, token_2248147482));
++excHandler;
    try {
    var jsn_2248147488 = parseJson_1627395313(response_2248147487);
    if (hasKey_1627393154(jsn_2248147488, [99,111,110,116,101,110,116])) {
    var contentBase64_2248147489 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2248147488, [99,111,110,116,101,110,116]), []);
    var content_2248147490 = decode_2281701871(contentBase64_2248147489);
    result_2248147447 = content_2248147490;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2248147498 = [mnewString(0)];
    fmtRes_2248147498[0].push.apply(fmtRes_2248147498[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2248147498, 0, response_2248147487, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248147498[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2248147447 = [];
    break BeforeRet;
  };

  return result_2248147447;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2231369740(self_2231369741, relativePath_2231369742) {
  var result_2231369743 = [];

    result_2231369743 = nimCopy(null, HEX2F_1426063446(self_2231369741.path, relativePath_2231369742), NTI33554449);

  return result_2231369743;

}
async function loadFile_2231369768(self_2231369769, relativePath_2231369770) {
  var result_2231369772 = null;

  BeforeRet: {
    result_2231369772 = readFile_503316918(getAbsolutePath_2231369740(self_2231369769, relativePath_2231369770));
    break BeforeRet;
  };

  return result_2231369772;

}

function loadFile_2181038107(self_2181038108, relativePath_2181038109) {
  var result_2181038112 = null;

  return result_2181038112;

}

function loadFile_2181038113(self_2181038108, relativePath_2181038109) {
  var result_2181038114 = null;

  BeforeRet: {
    chckNilDisp(self_2181038108);
    if (isObj(self_2181038108.m_type, NTI2365587460)) {
    result_2181038114 = loadFile_2365587553(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2248146948)) {
    result_2181038114 = loadFile_2248147443(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2231369732)) {
    result_2181038114 = loadFile_2231369768(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2181038088)) {
    result_2181038114 = loadFile_2181038107(self_2181038108, relativePath_2181038109);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038114;

}
async function httpPost_2315255895(url_2315255896, content_2315255897, authToken_2315255906) {
  var result_2315255908 = null;

  BeforeRet: {
    (await postAsyncJs(toJSStr(url_2315255896), toJSStr(content_2315255897), toJSStr(get_2315255863(authToken_2315255906, []))));
    result_2315255908 = undefined;
    break BeforeRet;
  };

  return result_2315255908;

}
async function saveFile_2365587600(self_2365587601, relativePath_2365587602, content_2365587603) {
    var Temporary1;

  var result_2365587605 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2365587602, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2365587602, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2365587602;
    }
    
    var relativePath_2365587629 = nimCopy(null, Temporary1, NTI33554449);
    var url_2365587630 = (self_2365587601.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2365587629 || []);
    var fmtRes_2365587635 = [mnewString(0)];
    fmtRes_2365587635[0].push.apply(fmtRes_2365587635[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,115,97,118,101,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2365587635, 0, url_2365587630, []);
    fmtRes_2365587635[0].push.apply(fmtRes_2365587635[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2365587635[0], NTI33554449)]);
    (await httpPost_2315255895(url_2365587630, content_2365587603, none_2315255831()));
    result_2365587605 = undefined;
    break BeforeRet;
  };

  return result_2365587605;

}
async function saveFile_2248147503(self_2248147504, relativePath_2248147505, content_2248147506) {
  var result_2248147508 = null;

  BeforeRet: {
    result_2248147508 = undefined;
    break BeforeRet;
  };

  return result_2248147508;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2231369795(self_2231369796, relativePath_2231369797, content_2231369798) {
  var result_2231369800 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2231369740(self_2231369796, relativePath_2231369797), content_2231369798);
    result_2231369800 = undefined;
    break BeforeRet;
  };

  return result_2231369800;

}

function saveFile_2181038115(self_2181038116, relativePath_2181038117, content_2181038118) {
  var result_2181038120 = null;

  return result_2181038120;

}

function saveFile_2181038121(self_2181038116, relativePath_2181038117, content_2181038118) {
  var result_2181038122 = null;

  BeforeRet: {
    chckNilDisp(self_2181038116);
    if (isObj(self_2181038116.m_type, NTI2365587460)) {
    result_2181038122 = saveFile_2365587600(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2248146948)) {
    result_2181038122 = saveFile_2248147503(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2231369732)) {
    result_2181038122 = saveFile_2231369795(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038116.m_type, NTI2181038088)) {
    result_2181038122 = saveFile_2181038115(self_2181038116, relativePath_2181038117, content_2181038118);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038122;

}

function rawGet_2248147659(t_2248147662, key_2248147663, hc_2248147664, hc_2248147664_Idx) {
  var result_2248147665 = 0;

  BeforeRet: {
    hc_2248147664[hc_2248147664_Idx] = hash_1325400491(key_2248147663);
    if ((hc_2248147664[hc_2248147664_Idx] == 0)) {
    hc_2248147664[hc_2248147664_Idx] = 314159265;
    }
    
    if (((t_2248147662.data).length == 0)) {
    result_2248147665 = -1;
    break BeforeRet;
    }
    
    var h_2248147716 = (hc_2248147664[hc_2248147664_Idx] & (t_2248147662.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field0)) break Label2;
          if (((t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field0 == hc_2248147664[hc_2248147664_Idx]) && eqStrings(t_2248147662.data[chckIndx(h_2248147716, 0, (t_2248147662.data).length - 1)].Field1, key_2248147663))) {
          result_2248147665 = h_2248147716;
          break BeforeRet;
          }
          
          h_2248147716 = nextTry_1308622883(h_2248147716, (t_2248147662.data).length - 1);
        }
    };
    result_2248147665 = subInt(-1, h_2248147716);
  };

  return result_2248147665;

}

function hasKey_2248147652(t_2248147655, key_2248147656) {
  var result_2248147657 = false;

    var hc_2248147658 = [0];
    result_2248147657 = (0 <= rawGet_2248147659(t_2248147655, key_2248147656, hc_2248147658, 0));

  return result_2248147657;

}

function contains_2248147646(t_2248147649, key_2248147650) {
  var result_2248147651 = false;

  BeforeRet: {
    result_2248147651 = hasKey_2248147652(t_2248147649, key_2248147650);
    break BeforeRet;
  };

  return result_2248147651;

}

function HEX5BHEX5D_2248147950(t_2248147953, key_2248147954) {
  var result_2248147955 = null;

    var hcHEX60gensym22_2248147956 = [0];
    var indexHEX60gensym22_2248147963 = rawGet_2248147659(t_2248147953, key_2248147954, hcHEX60gensym22_2248147956, 0);
    if ((0 <= indexHEX60gensym22_2248147963)) {
    result_2248147955 = t_2248147953.data[chckIndx(indexHEX60gensym22_2248147963, 0, (t_2248147953.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2248147954);
    }
    

  return result_2248147955;

}

function parseDirectoryListing_2365587640(self_2365587641, basePath_2365587642, jsn_2365587643) {
        var Temporary3;
        var Temporary8;

  var result_2365587644 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2365587643, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2365587643, [102,105,108,101,115]).kind == 6))) {
    var files_2365587649 = HEX5BHEX5D_1627393037(jsn_2365587643, [102,105,108,101,115]);
    Label1: {
      var item_2365587650 = null;
      if (!((files_2365587649.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2365587649.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872287 = null;
        var colontmp__536872288 = [];
        var Temporary3 = files_2365587649;
        if (ConstSet324[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872288 = Temporary3.elems;
        var i_536872289 = 0;
        var L_536872290 = (colontmp__536872288).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872289 < L_536872290)) break Label5;
              i_536872287 = colontmp__536872288[chckIndx(i_536872289, 0, (colontmp__536872288).length - 1)];
              item_2365587650 = i_536872287;
              result_2365587644.files.push(getStr_1627390106(item_2365587650, []));;
              i_536872289 = addInt(i_536872289, 1);
              if (!(((colontmp__536872288).length == L_536872290))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2365587643, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2365587643, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2365587659 = HEX5BHEX5D_1627393037(jsn_2365587643, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2365587660 = null;
      if (!((folders_2365587659.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2365587659.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872294 = null;
        var colontmp__536872295 = [];
        var Temporary8 = folders_2365587659;
        if (ConstSet325[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872295 = Temporary8.elems;
        var i_536872296 = 0;
        var L_536872297 = (colontmp__536872295).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872296 < L_536872297)) break Label10;
              i_536872294 = colontmp__536872295[chckIndx(i_536872296, 0, (colontmp__536872295).length - 1)];
              item_2365587660 = i_536872294;
              result_2365587644.folders.push(getStr_1627390106(item_2365587660, []));;
              i_536872296 = addInt(i_536872296, 1);
              if (!(((colontmp__536872295).length == L_536872297))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2365587644;

}

function mustRehash_2248148372(t_2248148374) {
  var result_2248148375 = false;

    if (!((t_2248148374.counter < (t_2248148374.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2248148375 = ((mulInt((t_2248148374.data).length, 2) < mulInt(t_2248148374.counter, 3)) || (subInt((t_2248148374.data).length, t_2248148374.counter) < 4));

  return result_2248148375;

}

function rawInsert_2248148821(t_2248148825, data_2248148826, data_2248148826_Idx, key_2248148827, val_2248148828, hc_2248148829, h_2248148830) {
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field1 = nimCopy(null, key_2248148827, NTI33554449);
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field2 = nimCopy(data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field2, val_2248148828, NTI2181038085);
    data_2248148826[data_2248148826_Idx][chckIndx(h_2248148830, 0, (data_2248148826[data_2248148826_Idx]).length - 1)].Field0 = hc_2248148829;

  
}

function enlarge_2248148527(t_2248148530) {
    var n_2248148533 = [];
    n_2248148533 = new Array(chckRange(mulInt((t_2248148530.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2248148530.data).length, 2), 0, 2147483647) ; ++i) { n_2248148533[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2248148530.data; t_2248148530.data = n_2248148533; n_2248148533 = Temporary1;    Label2: {
      var i_2248148597 = 0;
      var colontmp__536872301 = 0;
      colontmp__536872301 = (n_2248148533).length - 1;
      var res_536872302 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872302 <= colontmp__536872301)) break Label4;
            i_2248148597 = res_536872302;
            var eh_2248148651 = n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field0;
            if (isFilled_1308622880(eh_2248148651)) {
            var j_2248148655 = (eh_2248148651 & (t_2248148530.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2248148530.data[chckIndx(j_2248148655, 0, (t_2248148530.data).length - 1)].Field0)) break Label6;
                  j_2248148655 = nextTry_1308622883(j_2248148655, (t_2248148530.data).length - 1);
                }
            };
            rawInsert_2248148821(t_2248148530, t_2248148530, "data", n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field1, n_2248148533[chckIndx(i_2248148597, 0, (n_2248148533).length - 1)].Field2, eh_2248148651, j_2248148655);
            }
            
            res_536872302 = addInt(res_536872302, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2248148990(t_2248148993, key_2248148994, hc_2248148995) {
  var result_2248148996 = 0;

  BeforeRet: {
    if (((t_2248148993.data).length == 0)) {
    result_2248148996 = -1;
    break BeforeRet;
    }
    
    var h_2248149047 = (hc_2248148995 & (t_2248148993.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field0)) break Label2;
          if (((t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field0 == hc_2248148995) && eqStrings(t_2248148993.data[chckIndx(h_2248149047, 0, (t_2248148993.data).length - 1)].Field1, key_2248148994))) {
          result_2248148996 = h_2248149047;
          break BeforeRet;
          }
          
          h_2248149047 = nextTry_1308622883(h_2248149047, (t_2248148993.data).length - 1);
        }
    };
    result_2248148996 = subInt(-1, h_2248149047);
  };

  return result_2248148996;

}

function HEX5BHEX5DHEX3D_2248148199(t_2248148202, key_2248148203, val_2248148204) {
    if (((t_2248148202.data).length == 0)) {
    var correctSizeHEX60gensym22_2248148253 = slotsNeeded_1308622891(32);
    t_2248148202.counter = 0;
    t_2248148202.data = new Array(chckRange(correctSizeHEX60gensym22_2248148253, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym22_2248148253, 0, 2147483647) ; ++i) { t_2248148202.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2248148258 = [0];
    var index_2248148265 = rawGet_2248147659(t_2248148202, key_2248148203, hc_2248148258, 0);
    if ((0 <= index_2248148265)) {
    t_2248148202.data[chckIndx(index_2248148265, 0, (t_2248148202.data).length - 1)].Field2 = nimCopy(t_2248148202.data[chckIndx(index_2248148265, 0, (t_2248148202.data).length - 1)].Field2, val_2248148204, NTI2181038085);
    }
    else {
      if (((t_2248148202.data).length == 0)) {
      var correctSizeHEX60gensym25_2248148367 = slotsNeeded_1308622891(32);
      t_2248148202.counter = 0;
      t_2248148202.data = new Array(chckRange(correctSizeHEX60gensym25_2248148367, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_2248148367, 0, 2147483647) ; ++i) { t_2248148202.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2248148372(t_2248148202)) {
      enlarge_2248148527(t_2248148202);
      index_2248148265 = rawGetKnownHC_2248148990(t_2248148202, key_2248148203, hc_2248148258[0]);
      }
      
      index_2248148265 = subInt(-1, index_2248148265);
      rawInsert_2248148821(t_2248148202, t_2248148202, "data", key_2248148203, val_2248148204, hc_2248148258[0], index_2248148265);
      t_2248148202.counter = addInt(t_2248148202.counter, 1);
    }
    

  
}
async function getDirectoryListing_2365587668(self_2365587669, relativePath_2365587670) {
    var Temporary1;

  var result_2365587672 = null;

  BeforeRet: {
    if (contains_2248147646(self_2365587669.cachedDirectoryListings, relativePath_2365587670)) {
    result_2365587672 = HEX5BHEX5D_2248147950(self_2365587669.cachedDirectoryListings, relativePath_2365587670);
    break BeforeRet;
    }
    
    if ((((relativePath_2365587670).length == 0) || eqStrings(relativePath_2365587670, [46]))) {
    Temporary1 = (self_2365587669.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary1 = (self_2365587669.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2365587670 || []);
    }
    
    var url_2365587790 = nimCopy(null, Temporary1, NTI33554449);
    var response_2365587795 = (await httpGet_2315255824(url_2365587790, none_2315255831()));
++excHandler;
    try {
    var jsn_2365587796 = parseJson_1627395313(response_2365587795);
    var listing_2365587797 = parseDirectoryListing_2365587640(self_2365587669, relativePath_2365587670, jsn_2365587796);
    HEX5BHEX5DHEX3D_2248148199(self_2365587669.cachedDirectoryListings, relativePath_2365587670, listing_2365587797);
    result_2365587672 = listing_2365587797;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2365587851 = [mnewString(0)];
    fmtRes_2365587851[0].push.apply(fmtRes_2365587851[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2365587851, 0, response_2365587795, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2365587851[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2365587672 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2365587672;

}

function parseDirectoryListing_2248147514(self_2248147515, basePath_2248147516, jsn_2248147517) {
        var Temporary3;

  var result_2248147518 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2248147517, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2248147517, [116,114,101,101]).kind == 6))) {
    var tree_2248147523 = HEX5BHEX5D_1627393037(jsn_2248147517, [116,114,101,101]);
    Label1: {
      var item_2248147524 = null;
      if (!((tree_2248147523.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2248147523.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872308 = null;
        var colontmp__536872309 = [];
        var Temporary3 = tree_2248147523;
        if (ConstSet326[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872309 = Temporary3.elems;
        var i_536872310 = 0;
        var L_536872311 = (colontmp__536872309).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872310 < L_536872311)) break Label5;
              i_536872308 = colontmp__536872309[chckIndx(i_536872310, 0, (colontmp__536872309).length - 1)];
              item_2248147524 = i_536872308;
              Label6: {
                if (!((item_2248147524.kind == 5))) {
                break Label6;
                }
                
                var path_2248147529 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [112,97,116,104]), []);
                var typ_2248147530 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [116,121,112,101]), []);
                var url_2248147531 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [117,114,108]), []);
                var sha_2248147532 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2248147524, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2248147515.pathToSha, HEX2F_1426063446(basePath_2248147516, path_2248147529), sha_2248147532);
                switch (toJSStr(typ_2248147530)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2248147529, NTI33554449);
                  result_2248147518.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2248147529, NTI33554449);
                  result_2248147518.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872310 = addInt(i_536872310, 1);
              if (!(((colontmp__536872309).length == L_536872311))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2248147518;

}
async function getDirectoryListing_2248147590(self_2248147591, relativePath_2248147592) {
    var Temporary1;
    var Temporary2;

  var result_2248147594 = null;

  BeforeRet: {
    if (contains_2248147646(self_2248147591.cachedDirectoryListings, relativePath_2248147592)) {
    result_2248147594 = HEX5BHEX5D_2248147950(self_2248147591.cachedDirectoryListings, relativePath_2248147592);
    break BeforeRet;
    }
    
    var fmtRes_2248148036 = [mnewString(0)];
    fmtRes_2248148036[0].push.apply(fmtRes_2248148036[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2248148036, 0, self_2248147591.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2248148036[0], NTI33554449)]);
    var token_2248148037 = getAccessToken_2248146974();
    if ((((relativePath_2248147592).length == 0) || eqStrings(relativePath_2248147592, [46]))) {
    Temporary1 = (self_2248147591.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2248147591.branchOrHash || []);
    }
    else {
    if (contains_2348810309(self_2248147591.pathToSha, relativePath_2248147592)) {
    Temporary1 = (self_2248147591.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2248147591.pathToSha, relativePath_2248147592), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2248148147 = [mnewString(0)];
      fmtRes_2248148147[0].push.apply(fmtRes_2248148147[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2248148147, 0, relativePath_2248147592, []);
      fmtRes_2248148147[0].push.apply(fmtRes_2248148147[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248148147[0], NTI33554449)]);
      result_2248147594 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2248148151 = nimCopy(null, Temporary1, NTI33554449);
    var response_2248148156 = (await httpGet_2315255824(url_2248148151, token_2248148037));
++excHandler;
    try {
    var jsn_2248148157 = parseJson_1627395313(response_2248148156);
    var listing_2248148158 = parseDirectoryListing_2248147514(self_2248147591, relativePath_2248147592, jsn_2248148157);
    HEX5BHEX5DHEX3D_2248148199(self_2248147591.cachedDirectoryListings, relativePath_2248147592, listing_2248148158);
    result_2248147594 = listing_2248148158;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2248149235 = [mnewString(0)];
    fmtRes_2248149235[0].push.apply(fmtRes_2248149235[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2248149235, 0, response_2248148156, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2248149235[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2248147594 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2248147594;

}
async function getDirectoryListing_2231369818(self_2231369819, relativePath_2231369820) {
  var result_2231369822 = null;

  return result_2231369822;

}

function getDirectoryListing_2181038123(self_2181038124, relativePath_2181038125) {
  var result_2181038128 = null;

  return result_2181038128;

}

function getDirectoryListing_2181038129(self_2181038124, relativePath_2181038125) {
  var result_2181038130 = null;

  BeforeRet: {
    chckNilDisp(self_2181038124);
    if (isObj(self_2181038124.m_type, NTI2365587460)) {
    result_2181038130 = getDirectoryListing_2365587668(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2248146948)) {
    result_2181038130 = getDirectoryListing_2248147590(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2231369732)) {
    result_2181038130 = getDirectoryListing_2231369818(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038124.m_type, NTI2181038088)) {
    result_2181038130 = getDirectoryListing_2181038123(self_2181038124, relativePath_2181038125);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038130;

}

function loadFile_2348810248(self_2348810249, path_2348810250) {
  var result_2348810251 = [];

  BeforeRet: {
    result_2348810251 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2348810250))), NTI33554449);
    break BeforeRet;
  };

  return result_2348810251;

}

function loadFile_2332033027(self_2332033028, path_2332033029) {
  var result_2332033030 = [];

  return result_2332033030;

}

function loadFile_2332033031(self_2332033028, path_2332033029) {
  var result_2332033032 = [];

  BeforeRet: {
    chckNilDisp(self_2332033028);
    if (isObj(self_2332033028.m_type, NTI2348810244)) {
    result_2332033032 = loadFile_2348810248(self_2332033028, path_2332033029);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033028.m_type, NTI2332033028)) {
    result_2332033032 = loadFile_2332033027(self_2332033028, path_2332033029);
    break BeforeRet;
    }
    }
  };

  return result_2332033032;

}

function saveFile_2348810252(self_2348810253, path_2348810254, content_2348810255) {
  
}

function saveFile_2332033033(self_2332033034, path_2332033035, content_2332033036) {
  
}

function saveFile_2332033037(self_2332033034, path_2332033035, content_2332033036) {
    chckNilDisp(self_2332033034);
    if (isObj(self_2332033034.m_type, NTI2348810244)) {
    saveFile_2348810252(self_2332033034, path_2332033035, content_2332033036);
    }
    else {
    if (isObj(self_2332033034.m_type, NTI2332033028)) {
    saveFile_2332033033(self_2332033034, path_2332033035, content_2332033036);
    }
    }

  
}

function saveApplicationFile_2348810424(self_2348810425, name_2348810426, content_2348810427) {
    window.localStorage.setItem(toJSStr(name_2348810426), toJSStr(content_2348810427));

  
}

function saveApplicationFile_2332033044(self_2332033045, name_2332033046, content_2332033047) {
  
}

function saveApplicationFile_2332033048(self_2332033045, name_2332033046, content_2332033047) {
    chckNilDisp(self_2332033045);
    if (isObj(self_2332033045.m_type, NTI2348810244)) {
    saveApplicationFile_2348810424(self_2332033045, name_2332033046, content_2332033047);
    }
    else {
    if (isObj(self_2332033045.m_type, NTI2332033028)) {
    saveApplicationFile_2332033044(self_2332033045, name_2332033046, content_2332033047);
    }
    }

  
}
async function updateWorkspaceName_2365587528(self_2365587529) {
  var result_2365587531 = null;

  BeforeRet: {
    var url_2365587537 = (self_2365587529.baseUrl || []).concat([47,105,110,102,111,47,110,97,109,101] || []);
    var localFolder_2365587542 = (await httpGet_2315255824(url_2365587537, none_2315255831()));
    var fmtRes_2365587547 = [mnewString(0)];
    fmtRes_2365587547[0].push.apply(fmtRes_2365587547[0], [65,98,115,121,116,114,101,101,83,101,114,118,101,114,58]);;
    formatValue_721420459(fmtRes_2365587547, 0, self_2365587529.baseUrl, []);
    fmtRes_2365587547[0].push.apply(fmtRes_2365587547[0], [47]);;
    formatValue_721420459(fmtRes_2365587547, 0, localFolder_2365587542, []);
    self_2365587529.name = nimCopy(null, fmtRes_2365587547[0], NTI33554449);
    result_2365587531 = undefined;
    break BeforeRet;
  };

  return result_2365587531;

}
async function updateWorkspaceName_2365587548(self_2365587529) {
  var result_2365587549 = null;

  BeforeRet: {
    result_2365587549 = updateWorkspaceName_2365587528(self_2365587529);
    break BeforeRet;
  };

  return result_2365587549;

}

function HEX24_2936017004(document_2936017005) {
  var result_2936017006 = [];

  BeforeRet: {
    result_2936017006 = nimCopy(null, document_2936017005.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2936017006;

}

function HEX24_2801801567(document_2801801568) {
  var result_2801801569 = [];

  BeforeRet: {
    result_2801801569 = nimCopy(null, document_2801801568.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2801801569;

}

function HEX24_2164260875(document_2164260876) {
  var result_2164260877 = [];

  BeforeRet: {
    result_2164260877 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2164260877;

}

function HEX24_2164260878(document_2164260876) {
  var result_2164260879 = [];

  BeforeRet: {
    chckNilDisp(document_2164260876);
    if (isObj(document_2164260876.m_type, NTI2936014282)) {
    result_2164260879 = HEX24_2936017004(document_2164260876);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260876.m_type, NTI2801795211)) {
    result_2164260879 = HEX24_2801801567(document_2164260876);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260876.m_type, NTI2164260868)) {
    result_2164260879 = HEX24_2164260875(document_2164260876);
    break BeforeRet;
    }
    }}
  };

  return result_2164260879;

}

function toJson_2969569467(kind_2969569468, opt_2969569469) {
  var result_2969569470 = null;

  BeforeRet: {
    result_2969569470 = newJString_1627389994(reprEnum(kind_2969569468, NTI2969567235));
    break BeforeRet;
  };

  return result_2969569470;

}

function toJson_2046820620(id_2046820621, opt_2046820622) {
  var result_2046820623 = null;

  BeforeRet: {
    result_2046820623 = newJString_1627389994(HEX24_2046820589(id_2046820621));
    break BeforeRet;
  };

  return result_2046820623;

}

function join_2969569509(a_2969569511, sep_2969569512) {
  var result_2969569513 = [];

    result_2969569513 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969569528 = 0;
      var x_2969569529 = 0;
      var i_536872319 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872319 < (a_2969569511).length)) break Label3;
            i_2969569528 = i_536872319;
            x_2969569529 = a_2969569511[chckIndx(i_536872319, 0, (a_2969569511).length - 1)];
            if ((0 < i_2969569528)) {
            result_2969569513.push.apply(result_2969569513, sep_2969569512);;
            }
            
            result_2969569513.push.apply(result_2969569513, HEX24_369098760(x_2969569529));;
            i_536872319 = addInt(i_536872319, 1);
          }
      };
    };

  return result_2969569513;

}

function toJson_2969569501(node_2969569502, opt_2969569503) {
  var result_2969569504 = null;

    result_2969569504 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [107,105,110,100], toJson_2969569467(node_2969569502.kind, opt_2969569503));
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [105,100], toJson_2046820620(node_2969569502.id, opt_2969569503));
    if (!(HEX3DHEX3D_2046820592(node_2969569502.reff, null_2046820612))) {
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [114,101,102,102], toJson_2046820620(node_2969569502.reff, opt_2969569503));
    }
    
    if ((0 < (node_2969569502.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [116,101,120,116], toJson_1811939932(node_2969569502.text, opt_2969569503));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [112,97,116,104], newJString_1627389994(join_2969569509(path_2969569187(node_2969569502), [44,32])));
    if ((0 < len_2969567320(node_2969569502))) {
    var children_2969569530 = newJArray_1627390082();
    Label1: {
      var child_2969569534 = null;
      var i_536872314 = 0;
      var L_536872315 = (node_2969569502.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872314 < L_536872315)) break Label3;
            child_2969569534 = node_2969569502.children[chckIndx(i_536872314, 0, (node_2969569502.children).length - 1)];
            add_1627390190(children_2969569530, toJson_2969569501(child_2969569534, opt_2969569503));
            i_536872314 = addInt(i_536872314, 1);
            if (!(((node_2969569502.children).length == L_536872315))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [99,104,105,108,100,114,101,110], children_2969569530);
    }
    

  return result_2969569504;

}

function get_2801801602(self_2801801604) {
  var result_2801801605 = null;

    if (isNone_2801801610(self_2801801604)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801801605 = self_2801801604["val"];

  return result_2801801605;

}

function serializeHtml_3170894940(self_3170894941, theme_3170894942) {
  var result_3170894943 = [];

  BeforeRet: {
    var title_3170894944 = nimCopy(null, nossplitFile(self_3170894941.filename).Field1, NTI33554449);
    var body_3170894945 = [];
    var diagnosticsCss_3170894946 = [];
    var fmtRes_3170894951 = [mnewString(0)];
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3170894951, 0, diagnosticsCss_3170894946, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3170894951, 0, body_3170894945, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3170894943 = nimCopy(null, fmtRes_3170894951[0], NTI33554449);
    break BeforeRet;
  };

  return result_3170894943;

}

function saveHtml_2936017030(self_2936017031) {
    var pathParts_2936017032 = nossplitFile(self_2936017031.filename);
    var htmlPath_2936017033 = HEX2F_1426063446(pathParts_2936017032.Field0, (pathParts_2936017032.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2936017034 = serializeHtml_3170894940(self_2936017031, gEditor.theme);
    saveFile_2332033037(fs_2332033077, htmlPath_2936017033, html_2936017034);

  
}

function save_2936017035(self_2936017036, filename_2936017037, app_2936017038) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2936017037).length)) {
    Temporary1 = filename_2936017037;
    }
    else {
    Temporary1 = self_2936017036.filename;
    }
    
    self_2936017036.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2936017036.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2936017044 = [mnewString(0)];
    fmtRes_2936017044[0].push.apply(fmtRes_2936017044[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017044, 0, self_2936017036.filename, []);
    fmtRes_2936017044[0].push.apply(fmtRes_2936017044[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017044[0], NTI33554449)]);
    var serialized_2936017045 = toJson_2969569501(self_2936017036.rootNode, initToJsonOptions_1811939362());
      var oHEX60gensym59_2936017048 = nimCopy(null, self_2936017036.workspace, NTI2164260874);
      if (!isSome_2801801582(oHEX60gensym59_2936017048)) Temporary2 = false; else {        var ws_2936017071 = get_2801801602(oHEX60gensym59_2936017048);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2181038121(ws_2936017071, self_2936017036.filename, pretty_1627394477(serialized_2936017045, 2));
    }
    else {
    if (self_2936017036.appFile) {
    saveApplicationFile_2332033048(fs_2332033077, self_2936017036.filename, pretty_1627394477(serialized_2936017045, 2));
    }
    else {
    saveFile_2332033037(fs_2332033077, self_2936017036.filename, pretty_1627394477(serialized_2936017045, 2));
    }
    }
    saveHtml_2936017030(self_2936017036);

  
}

function save_2801801570(self_2801801571, filename_2801801572, app_2801801573) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2801801572).length)) {
    Temporary1 = filename_2801801572;
    }
    else {
    Temporary1 = self_2801801571.filename;
    }
    
    self_2801801571.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2801801571.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2801801571.appFile = app_2801801573;
      var oHEX60gensym103_2801801577 = nimCopy(null, self_2801801571.workspace, NTI2164260874);
      if (!isSome_2801801582(oHEX60gensym103_2801801577)) Temporary2 = false; else {        var ws_2801801628 = get_2801801602(oHEX60gensym103_2801801577);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = saveFile_2181038121(ws_2801801628, self_2801801571.filename, contentString_2801796770(self_2801801571));
    }
    else {
    if (self_2801801571.appFile) {
    saveApplicationFile_2332033048(fs_2332033077, self_2801801571.filename, contentString_2801796770(self_2801801571));
    }
    else {
    saveFile_2332033037(fs_2332033077, self_2801801571.filename, contentString_2801796770(self_2801801571));
    }
    }

  
}

function save_2164260880(self_2164260881, filename_2164260882, app_2164260883) {
  
}

function save_2164260884(self_2164260881, filename_2164260882, app_2164260883) {
    chckNilDisp(self_2164260881);
    if (isObj(self_2164260881.m_type, NTI2936014282)) {
    save_2936017035(self_2164260881, filename_2164260882, app_2164260883);
    }
    else {
    if (isObj(self_2164260881.m_type, NTI2801795211)) {
    save_2801801570(self_2164260881, filename_2164260882, app_2164260883);
    }
    else {
    if (isObj(self_2164260881.m_type, NTI2164260868)) {
    save_2164260880(self_2164260881, filename_2164260882, app_2164260883);
    }
    }}

  
}

function parseEnum_2969569477(s_2969569479, default_2969569480) {
    var Temporary1;

  var result_2969569481 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2969569479))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_2969569480;
      break;
    }
    result_2969569481 = Temporary1;

  return result_2969569481;

}

function fromJsonHook_2969569474(t_2969569475, t_2969569475_Idx, jsonNode_2969569476) {
    var Temporary1;

    var Temporary1 = jsonNode_2969569476;
    if (ConstSet327[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_2969569475[t_2969569475_Idx] = parseEnum_2969569477(Temporary1.str, 0);

  
}

function fromJson_2969569545(a_2969569547, a_2969569547_Idx, b_2969569548, opt_2969569549) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969569548, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_2969569548}));
    }
    
    fromJsonHook_2969569474(a_2969569547, a_2969569547_Idx, b_2969569548);

  
}

function jsonTo_2969569539(b_2969569541, opt_2969569543) {
  var result_2969569544 = [0];

    fromJson_2969569545(result_2969569544, 0, b_2969569541, opt_2969569543);

  return result_2969569544[0];

}

function fromJsonHook_2046820613(id_2046820614, json_2046820615) {
    var Temporary1;

    if ((json_2046820615.kind == 4)) {
    var Temporary1 = json_2046820615;
    if (ConstSet328[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2046820614 = nimCopy(id_2046820614, parseId_2046820606(Temporary1.str), NTI2046820355);
    }
    else {
      id_2046820614 = nimCopy(id_2046820614, null_2046820612, NTI2046820355);
    }
    

  
}

function fromJson_2969569562(a_2969569564, b_2969569565, opt_2969569566) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969569565, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_2969569565}));
    }
    
    fromJsonHook_2046820613(a_2969569564, b_2969569565);

  
}

function jsonTo_2969569556(b_2969569558, opt_2969569560) {
  var result_2969569561 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_2969569562(result_2969569561[0], b_2969569558, opt_2969569560);

  return result_2969569561[0];

}

function jsonToAstNode_2969569535(json_2969569536, opt_2969569537) {
        var Temporary3;

  var result_2969569538 = null;

    result_2969569538 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_2969569538.kind = jsonTo_2969569539(HEX5BHEX5D_1627393037(json_2969569536, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_2969569538.id = nimCopy(result_2969569538.id, jsonTo_2969569556(HEX5BHEX5D_1627393037(json_2969569536, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    if (hasKey_1627393154(json_2969569536, [114,101,102,102])) {
    result_2969569538.reff = nimCopy(result_2969569538.reff, jsonTo_2969569556(HEX5BHEX5D_1627393037(json_2969569536, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2046820355);
    }
    
    if (hasKey_1627393154(json_2969569536, [116,101,120,116])) {
    result_2969569538.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2969569536, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2969569536, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_2969569583 = null;
      var colontmp__536872322 = null;
      colontmp__536872322 = HEX5BHEX5D_1627393037(json_2969569536, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__536872322.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__536872322.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872324 = null;
        var colontmp__536872325 = [];
        var Temporary3 = colontmp__536872322;
        if (ConstSet329[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872325 = Temporary3.elems;
        var i_536872326 = 0;
        var L_536872327 = (colontmp__536872325).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872326 < L_536872327)) break Label5;
              i_536872324 = colontmp__536872325[chckIndx(i_536872326, 0, (colontmp__536872325).length - 1)];
              child_2969569583 = i_536872324;
              add_2969567270(result_2969569538, jsonToAstNode_2969569535(child_2969569583, {allowExtraKeys: false, allowMissingKeys: false}));
              i_536872326 = addInt(i_536872326, 1);
              if (!(((colontmp__536872325).length == L_536872327))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2969569538;

}

function clear_2986457964(t_2986457967) {
    Label1: {
      var i_2986458053 = 0;
      var colontmp__536872330 = 0;
      colontmp__536872330 = (t_2986457967.data).length;
      var i_536872331 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872331 < colontmp__536872330)) break Label3;
            i_2986458053 = i_536872331;
            t_2986457967.data[chckIndx(i_2986458053, 0, (t_2986457967.data).length - 1)].Field0 = 0;
            t_2986457967.data[chckIndx(i_2986458053, 0, (t_2986457967.data).length - 1)].Field1 = nimCopy(t_2986457967.data[chckIndx(i_2986458053, 0, (t_2986457967.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986457967.data[chckIndx(i_2986458053, 0, (t_2986457967.data).length - 1)].Field2 = null;
            i_536872331 = addInt(i_536872331, 1);
          }
      };
    };
    t_2986457967.counter = 0;

  
}

function clear_2986457882(cache_2986457885) {
    cache_2986457885.list = nimCopy(cache_2986457885.list, initDoublyLinkedList_3003123938(), NTI3003121734);
    clear_2986457964(cache_2986457885.table);

  
}

function clear_2986458776(t_2986458779) {
    Label1: {
      var i_2986458865 = 0;
      var colontmp__536872334 = 0;
      colontmp__536872334 = (t_2986458779.data).length;
      var i_536872335 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872335 < colontmp__536872334)) break Label3;
            i_2986458865 = i_536872335;
            t_2986458779.data[chckIndx(i_2986458865, 0, (t_2986458779.data).length - 1)].Field0 = 0;
            t_2986458779.data[chckIndx(i_2986458865, 0, (t_2986458779.data).length - 1)].Field1 = nimCopy(t_2986458779.data[chckIndx(i_2986458865, 0, (t_2986458779.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986458779.data[chckIndx(i_2986458865, 0, (t_2986458779.data).length - 1)].Field2 = null;
            i_536872335 = addInt(i_536872335, 1);
          }
      };
    };
    t_2986458779.counter = 0;

  
}

function clear_2986458694(cache_2986458697) {
    cache_2986458697.list = nimCopy(cache_2986458697.list, initDoublyLinkedList_3003124010(), NTI3003121813);
    clear_2986458776(cache_2986458697.table);

  
}

function clear_2986459510(t_2986459513) {
    Label1: {
      var i_2986459599 = 0;
      var colontmp__536872338 = 0;
      colontmp__536872338 = (t_2986459513.data).length;
      var i_536872339 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872339 < colontmp__536872338)) break Label3;
            i_2986459599 = i_536872339;
            t_2986459513.data[chckIndx(i_2986459599, 0, (t_2986459513.data).length - 1)].Field0 = 0;
            t_2986459513.data[chckIndx(i_2986459599, 0, (t_2986459513.data).length - 1)].Field1 = nimCopy(t_2986459513.data[chckIndx(i_2986459599, 0, (t_2986459513.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986459513.data[chckIndx(i_2986459599, 0, (t_2986459513.data).length - 1)].Field2 = null;
            i_536872339 = addInt(i_536872339, 1);
          }
      };
    };
    t_2986459513.counter = 0;

  
}

function clear_2986459428(cache_2986459431) {
    cache_2986459431.list = nimCopy(cache_2986459431.list, initDoublyLinkedList_3003124078(), NTI3003121880);
    clear_2986459510(cache_2986459431.table);

  
}

function clear_2986460244(t_2986460247) {
    Label1: {
      var i_2986460333 = 0;
      var colontmp__536872342 = 0;
      colontmp__536872342 = (t_2986460247.data).length;
      var i_536872343 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872343 < colontmp__536872342)) break Label3;
            i_2986460333 = i_536872343;
            t_2986460247.data[chckIndx(i_2986460333, 0, (t_2986460247.data).length - 1)].Field0 = 0;
            t_2986460247.data[chckIndx(i_2986460333, 0, (t_2986460247.data).length - 1)].Field1 = nimCopy(t_2986460247.data[chckIndx(i_2986460333, 0, (t_2986460247.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986460247.data[chckIndx(i_2986460333, 0, (t_2986460247.data).length - 1)].Field2 = null;
            i_536872343 = addInt(i_536872343, 1);
          }
      };
    };
    t_2986460247.counter = 0;

  
}

function clear_2986460162(cache_2986460165) {
    cache_2986460165.list = nimCopy(cache_2986460165.list, initDoublyLinkedList_2986396694(), NTI2986344528);
    clear_2986460244(cache_2986460165.table);

  
}

function clear_2986460978(t_2986460981) {
    Label1: {
      var i_2986461067 = 0;
      var colontmp__536872346 = 0;
      colontmp__536872346 = (t_2986460981.data).length;
      var i_536872347 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872347 < colontmp__536872346)) break Label3;
            i_2986461067 = i_536872347;
            t_2986460981.data[chckIndx(i_2986461067, 0, (t_2986460981.data).length - 1)].Field0 = 0;
            t_2986460981.data[chckIndx(i_2986461067, 0, (t_2986460981.data).length - 1)].Field1 = nimCopy(t_2986460981.data[chckIndx(i_2986461067, 0, (t_2986460981.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986460981.data[chckIndx(i_2986461067, 0, (t_2986460981.data).length - 1)].Field2 = null;
            i_536872347 = addInt(i_536872347, 1);
          }
      };
    };
    t_2986460981.counter = 0;

  
}

function clear_2986460896(cache_2986460899) {
    cache_2986460899.list = nimCopy(cache_2986460899.list, initDoublyLinkedList_2986396890(), NTI2986344665);
    clear_2986460978(cache_2986460899.table);

  
}

function clear_2986461712(t_2986461715) {
    Label1: {
      var i_2986461801 = 0;
      var colontmp__536872350 = 0;
      colontmp__536872350 = (t_2986461715.data).length;
      var i_536872351 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872351 < colontmp__536872350)) break Label3;
            i_2986461801 = i_536872351;
            t_2986461715.data[chckIndx(i_2986461801, 0, (t_2986461715.data).length - 1)].Field0 = 0;
            t_2986461715.data[chckIndx(i_2986461801, 0, (t_2986461715.data).length - 1)].Field1 = nimCopy(t_2986461715.data[chckIndx(i_2986461801, 0, (t_2986461715.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986461715.data[chckIndx(i_2986461801, 0, (t_2986461715.data).length - 1)].Field2 = null;
            i_536872351 = addInt(i_536872351, 1);
          }
      };
    };
    t_2986461715.counter = 0;

  
}

function clear_2986461630(cache_2986461633) {
    cache_2986461633.list = nimCopy(cache_2986461633.list, initDoublyLinkedList_2986396792(), NTI2986344601);
    clear_2986461712(cache_2986461633.table);

  
}

function clear_2986462446(t_2986462449) {
    Label1: {
      var i_2986462535 = 0;
      var colontmp__536872354 = 0;
      colontmp__536872354 = (t_2986462449.data).length;
      var i_536872355 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872355 < colontmp__536872354)) break Label3;
            i_2986462535 = i_536872355;
            t_2986462449.data[chckIndx(i_2986462535, 0, (t_2986462449.data).length - 1)].Field0 = 0;
            t_2986462449.data[chckIndx(i_2986462535, 0, (t_2986462449.data).length - 1)].Field1 = nimCopy(t_2986462449.data[chckIndx(i_2986462535, 0, (t_2986462449.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986462449.data[chckIndx(i_2986462535, 0, (t_2986462449.data).length - 1)].Field2 = null;
            i_536872355 = addInt(i_536872355, 1);
          }
      };
    };
    t_2986462449.counter = 0;

  
}

function clear_2986462364(cache_2986462367) {
    cache_2986462367.list = nimCopy(cache_2986462367.list, initDoublyLinkedList_2986396988(), NTI2986344729);
    clear_2986462446(cache_2986462367.table);

  
}

function clear_2986463180(t_2986463183) {
    Label1: {
      var i_2986463269 = 0;
      var colontmp__536872358 = 0;
      colontmp__536872358 = (t_2986463183.data).length;
      var i_536872359 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872359 < colontmp__536872358)) break Label3;
            i_2986463269 = i_536872359;
            t_2986463183.data[chckIndx(i_2986463269, 0, (t_2986463183.data).length - 1)].Field0 = 0;
            t_2986463183.data[chckIndx(i_2986463269, 0, (t_2986463183.data).length - 1)].Field1 = null;
            t_2986463183.data[chckIndx(i_2986463269, 0, (t_2986463183.data).length - 1)].Field2 = null;
            i_536872359 = addInt(i_536872359, 1);
          }
      };
    };
    t_2986463183.counter = 0;

  
}

function clear_2986463098(cache_2986463101) {
    cache_2986463101.list = nimCopy(cache_2986463101.list, initDoublyLinkedList_2986353238(), NTI2986344831);
    clear_2986463180(cache_2986463101.table);

  
}

function clear_2986463914(t_2986463917) {
    Label1: {
      var i_2986464003 = 0;
      var colontmp__536872362 = 0;
      colontmp__536872362 = (t_2986463917.data).length;
      var i_536872363 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872363 < colontmp__536872362)) break Label3;
            i_2986464003 = i_536872363;
            t_2986463917.data[chckIndx(i_2986464003, 0, (t_2986463917.data).length - 1)].Field0 = 0;
            t_2986463917.data[chckIndx(i_2986464003, 0, (t_2986463917.data).length - 1)].Field1 = null;
            t_2986463917.data[chckIndx(i_2986464003, 0, (t_2986463917.data).length - 1)].Field2 = null;
            i_536872363 = addInt(i_536872363, 1);
          }
      };
    };
    t_2986463917.counter = 0;

  
}

function clear_2986463832(cache_2986463835) {
    cache_2986463835.list = nimCopy(cache_2986463835.list, initDoublyLinkedList_2986357549(), NTI2986344906);
    clear_2986463914(cache_2986463835.table);

  
}

function clear_2986464648(t_2986464651) {
    Label1: {
      var i_2986464737 = 0;
      var colontmp__536872366 = 0;
      colontmp__536872366 = (t_2986464651.data).length;
      var i_536872367 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872367 < colontmp__536872366)) break Label3;
            i_2986464737 = i_536872367;
            t_2986464651.data[chckIndx(i_2986464737, 0, (t_2986464651.data).length - 1)].Field0 = 0;
            t_2986464651.data[chckIndx(i_2986464737, 0, (t_2986464651.data).length - 1)].Field1 = null;
            t_2986464651.data[chckIndx(i_2986464737, 0, (t_2986464651.data).length - 1)].Field2 = null;
            i_536872367 = addInt(i_536872367, 1);
          }
      };
    };
    t_2986464651.counter = 0;

  
}

function clear_2986464566(cache_2986464569) {
    cache_2986464569.list = nimCopy(cache_2986464569.list, initDoublyLinkedList_2986374113(), NTI2986345116);
    clear_2986464648(cache_2986464569.table);

  
}

function clear_2986465382(t_2986465385) {
    Label1: {
      var i_2986465471 = 0;
      var colontmp__536872370 = 0;
      colontmp__536872370 = (t_2986465385.data).length;
      var i_536872371 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872371 < colontmp__536872370)) break Label3;
            i_2986465471 = i_536872371;
            t_2986465385.data[chckIndx(i_2986465471, 0, (t_2986465385.data).length - 1)].Field0 = 0;
            t_2986465385.data[chckIndx(i_2986465471, 0, (t_2986465385.data).length - 1)].Field1 = null;
            t_2986465385.data[chckIndx(i_2986465471, 0, (t_2986465385.data).length - 1)].Field2 = null;
            i_536872371 = addInt(i_536872371, 1);
          }
      };
    };
    t_2986465385.counter = 0;

  
}

function clear_2986465300(cache_2986465303) {
    cache_2986465303.list = nimCopy(cache_2986465303.list, initDoublyLinkedList_2986378416(), NTI2986345191);
    clear_2986465382(cache_2986465303.table);

  
}

function clear_2986466116(t_2986466119) {
    Label1: {
      var i_2986466205 = 0;
      var colontmp__536872374 = 0;
      colontmp__536872374 = (t_2986466119.data).length;
      var i_536872375 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872375 < colontmp__536872374)) break Label3;
            i_2986466205 = i_536872375;
            t_2986466119.data[chckIndx(i_2986466205, 0, (t_2986466119.data).length - 1)].Field0 = 0;
            t_2986466119.data[chckIndx(i_2986466205, 0, (t_2986466119.data).length - 1)].Field1 = null;
            t_2986466119.data[chckIndx(i_2986466205, 0, (t_2986466119.data).length - 1)].Field2 = null;
            i_536872375 = addInt(i_536872375, 1);
          }
      };
    };
    t_2986466119.counter = 0;

  
}

function clear_2986466034(cache_2986466037) {
    cache_2986466037.list = nimCopy(cache_2986466037.list, initDoublyLinkedList_2986361852(), NTI2986344977);
    clear_2986466116(cache_2986466037.table);

  
}

function clear_2986466850(t_2986466853) {
    Label1: {
      var i_2986466939 = 0;
      var colontmp__536872378 = 0;
      colontmp__536872378 = (t_2986466853.data).length;
      var i_536872379 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872379 < colontmp__536872378)) break Label3;
            i_2986466939 = i_536872379;
            t_2986466853.data[chckIndx(i_2986466939, 0, (t_2986466853.data).length - 1)].Field0 = 0;
            t_2986466853.data[chckIndx(i_2986466939, 0, (t_2986466853.data).length - 1)].Field1 = null;
            t_2986466853.data[chckIndx(i_2986466939, 0, (t_2986466853.data).length - 1)].Field2 = null;
            i_536872379 = addInt(i_536872379, 1);
          }
      };
    };
    t_2986466853.counter = 0;

  
}

function clear_2986466768(cache_2986466771) {
    cache_2986466771.list = nimCopy(cache_2986466771.list, initDoublyLinkedList_2986366156(), NTI2986345050);
    clear_2986466850(cache_2986466771.table);

  
}

function clear_2986467584(t_2986467587) {
    Label1: {
      var i_2986467673 = 0;
      var colontmp__536872382 = 0;
      colontmp__536872382 = (t_2986467587.data).length;
      var i_536872383 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872383 < colontmp__536872382)) break Label3;
            i_2986467673 = i_536872383;
            t_2986467587.data[chckIndx(i_2986467673, 0, (t_2986467587.data).length - 1)].Field0 = 0;
            t_2986467587.data[chckIndx(i_2986467673, 0, (t_2986467587.data).length - 1)].Field1 = null;
            t_2986467587.data[chckIndx(i_2986467673, 0, (t_2986467587.data).length - 1)].Field2 = null;
            i_536872383 = addInt(i_536872383, 1);
          }
      };
    };
    t_2986467587.counter = 0;

  
}

function clear_2986467502(cache_2986467505) {
    cache_2986467505.list = nimCopy(cache_2986467505.list, initDoublyLinkedList_2986386395(), NTI2986345257);
    clear_2986467584(cache_2986467505.table);

  
}

function clear_2986468318(t_2986468321) {
    Label1: {
      var i_2986468407 = 0;
      var colontmp__536872386 = 0;
      colontmp__536872386 = (t_2986468321.data).length;
      var i_536872387 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872387 < colontmp__536872386)) break Label3;
            i_2986468407 = i_536872387;
            t_2986468321.data[chckIndx(i_2986468407, 0, (t_2986468321.data).length - 1)].Field0 = 0;
            t_2986468321.data[chckIndx(i_2986468407, 0, (t_2986468321.data).length - 1)].Field1 = null;
            t_2986468321.data[chckIndx(i_2986468407, 0, (t_2986468321.data).length - 1)].Field2 = null;
            i_536872387 = addInt(i_536872387, 1);
          }
      };
    };
    t_2986468321.counter = 0;

  
}

function clear_2986468236(cache_2986468239) {
    cache_2986468239.list = nimCopy(cache_2986468239.list, initDoublyLinkedList_2986394374(), NTI2986345332);
    clear_2986468318(cache_2986468239.table);

  
}

function deleteAllNodesAndSymbols_2986457802(ctx_2986457803) {
    ctx_2986457803.depGraph.revision = addInt(ctx_2986457803.depGraph.revision, 1);
    clear_2986457882(ctx_2986457803.depGraph.changed);
    clear_2986457882(ctx_2986457803.depGraph.verified);
    clear_2986458694(ctx_2986457803.depGraph.fingerprints);
    clear_2986459428(ctx_2986457803.depGraph.dependencies);
    clear_2986460162(ctx_2986457803.itemsAstNode);
    clear_2986460896(ctx_2986457803.itemsSymbol);
    clear_2986461630(ctx_2986457803.itemsNodeLayoutInput);
    clear_2986462364(ctx_2986457803.itemsFunctionExecutionContext);
    clear_2986463098(ctx_2986457803.queryCacheType);
    clear_2986463832(ctx_2986457803.queryCacheValue);
    clear_2986464566(ctx_2986457803.queryCacheSymbolType);
    clear_2986465300(ctx_2986457803.queryCacheSymbolValue);
    clear_2986466034(ctx_2986457803.queryCacheSymbol);
    clear_2986466768(ctx_2986457803.queryCacheSymbols);
    clear_2986467502(ctx_2986457803.queryCacheFunctionExecution);
    clear_2986468236(ctx_2986457803.queryCacheNodeLayout);

  
}
async function loadAsync_2936017073(self_2936017074) {
      var Temporary2;

  var result_2936017076 = null;

  BeforeRet: {
    var fmtRes_2936017086 = [mnewString(0)];
    fmtRes_2936017086[0].push.apply(fmtRes_2936017086[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017086, 0, self_2936017074.filename, []);
    fmtRes_2936017086[0].push.apply(fmtRes_2936017086[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017086[0], NTI33554449)]);
++excHandler;
    try {
    var jsonText_2936017087 = [];
      var oHEX60gensym66_2936017090 = nimCopy(null, self_2936017074.workspace, NTI2164260874);
      if (!isSome_2801801582(oHEX60gensym66_2936017090)) Temporary2 = false; else {        var ws_2936017113 = get_2801801602(oHEX60gensym66_2936017090);
        Temporary2 = true;      }    if (Temporary2) {
    jsonText_2936017087 = nimCopy(null, (await loadFile_2181038113(ws_2936017113, self_2936017074.filename)), NTI33554449);
    }
    else {
    if (self_2936017074.appFile) {
    jsonText_2936017087 = nimCopy(null, loadApplicationFile_2332033042(fs_2332033077, self_2936017074.filename), NTI33554449);
    }
    else {
      jsonText_2936017087 = nimCopy(null, loadFile_2332033031(fs_2332033077, self_2936017074.filename), NTI33554449);
    }
    }
    var json_2936017118 = parseJson_1627395313(jsonText_2936017087);
    var newAst_2936017119 = jsonToAstNode_2969569535(json_2936017118, {allowExtraKeys: false, allowMissingKeys: false});
    deleteAllNodesAndSymbols_2986457802(ctx_2936012855);
    self_2936017074.rootNode = newAst_2936017119;
    insertNode_2986456654(ctx_2936012855, self_2936017074.rootNode);
    if (self_2936017074.undoOps.length < 0) { for (var i = self_2936017074.undoOps.length ; i < 0 ; ++i) self_2936017074.undoOps.push(null); }
               else { self_2936017074.undoOps.length = 0; };
    if (self_2936017074.redoOps.length < 0) { for (var i = self_2936017074.redoOps.length ; i < 0 ; ++i) self_2936017074.redoOps.push(null); }
               else { self_2936017074.redoOps.length = 0; };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2936017132 = [mnewString(0)];
    fmtRes_2936017132[0].push.apply(fmtRes_2936017132[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017132, 0, self_2936017074.filename, []);
    fmtRes_2936017132[0].push.apply(fmtRes_2936017132[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936017132[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    saveHtml_2936017030(self_2936017074);
    result_2936017076 = undefined;
    break BeforeRet;
  };

  return result_2936017076;

}

function load_2936017133(self_2936017134, filename_2936017135) {
    var Temporary1;

    if ((0 < (filename_2936017135).length)) {
    Temporary1 = filename_2936017135;
    }
    else {
    Temporary1 = self_2936017134.filename;
    }
    
    var filename_2936017136 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2936017136).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2936017134.filename = nimCopy(null, filename_2936017136, NTI33554449);
    var _ = loadAsync_2936017073(self_2936017134);

  
}
async function loadAsync_2801801639(self_2801801640, ws_2801801641) {
  var result_2801801643 = null;

  BeforeRet: {
    contentHEX3D_2801796630(self_2801801640, (await loadFile_2181038113(ws_2801801641, self_2801801640.filename)));
    result_2801801643 = undefined;
    break BeforeRet;
  };

  return result_2801801643;

}

function load_2801801653(self_2801801654, filename_2801801655) {
    var Temporary1;
      var Temporary2;

    if ((0 < (filename_2801801655).length)) {
    Temporary1 = filename_2801801655;
    }
    else {
    Temporary1 = self_2801801654.filename;
    }
    
    var filename_2801801656 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2801801656).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2801801654.filename = nimCopy(null, filename_2801801656, NTI33554449);
      var oHEX60gensym112_2801801660 = nimCopy(null, self_2801801654.workspace, NTI2164260874);
      if (!isSome_2801801582(oHEX60gensym112_2801801660)) Temporary2 = false; else {        var ws_2801801683 = get_2801801602(oHEX60gensym112_2801801660);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = loadAsync_2801801639(self_2801801654, ws_2801801683);
    }
    else {
    if (self_2801801654.appFile) {
    contentHEX3D_2801796630(self_2801801654, loadApplicationFile_2332033042(fs_2332033077, self_2801801654.filename));
    }
    else {
    contentHEX3D_2801796630(self_2801801654, loadFile_2332033031(fs_2332033077, self_2801801654.filename));
    }
    }

  
}

function load_2164260885(self_2164260886, filename_2164260887) {
  
}

function load_2164260888(self_2164260886, filename_2164260887) {
    chckNilDisp(self_2164260886);
    if (isObj(self_2164260886.m_type, NTI2936014282)) {
    load_2936017133(self_2164260886, filename_2164260887);
    }
    else {
    if (isObj(self_2164260886.m_type, NTI2801795211)) {
    load_2801801653(self_2164260886, filename_2164260887);
    }
    else {
    if (isObj(self_2164260886.m_type, NTI2164260868)) {
    load_2164260885(self_2164260886, filename_2164260887);
    }
    }}

  
}

function hasKey_2902461652(t_2902461655, key_2902461656) {
  var result_2902461657 = false;

    var hc_2902461658 = [0];
    result_2902461657 = (0 <= rawGet_2902458969(t_2902461655, key_2902461656, hc_2902461658, 0));

  return result_2902461657;

}

function contains_2902461646(t_2902461649, key_2902461650) {
  var result_2902461651 = false;

  BeforeRet: {
    result_2902461651 = hasKey_2902461652(t_2902461649, key_2902461650);
    break BeforeRet;
  };

  return result_2902461651;

}

function del_2902461705(t_2902461708, key_2902461709) {
    var hc_2902461710 = [0];
    var i_2902461717 = rawGet_2902458969(t_2902461708, key_2902461709, hc_2902461710, 0);
    var mskHEX60gensym36_2902461721 = (t_2902461708.data).length - 1;
    if ((0 <= i_2902461717)) {
    t_2902461708.counter = subInt(t_2902461708.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2902461728 = i_2902461717;
            var rHEX60gensym36_2902461729 = jHEX60gensym36_2902461728;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0 = 0;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field1 = 0;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2902461717 = (addInt(i_2902461717, 1) & mskHEX60gensym36_2902461721);
                  if (isEmpty_1308622877(t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2902461729 = (t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0 & mskHEX60gensym36_2902461721);
                  if (!(((((rHEX60gensym36_2902461729 <= i_2902461717) && (jHEX60gensym36_2902461728 < rHEX60gensym36_2902461729)) || ((jHEX60gensym36_2902461728 < rHEX60gensym36_2902461729) && (i_2902461717 < jHEX60gensym36_2902461728))) || ((i_2902461717 < jHEX60gensym36_2902461728) && (rHEX60gensym36_2902461729 <= i_2902461717))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2902461708.data[chckIndx(jHEX60gensym36_2902461728, 0, (t_2902461708.data).length - 1)] = nimCopy(t_2902461708.data[chckIndx(jHEX60gensym36_2902461728, 0, (t_2902461708.data).length - 1)], t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)], NTI2902458392);
          }
      };
    };
    }
    

  
}

function len_2902462261(t_2902462264) {
  var result_2902462265 = 0;

    result_2902462265 = t_2902462264.counter;

  return result_2902462265;

}

function find_2902462498(a_2902462501, item_2902462502) {
  var result_2902462503 = 0;

  BeforeRet: {
    result_2902462503 = 0;
    Label1: {
      var i_2902462507 = 0;
      var i_536872406 = 0;
      var L_536872407 = (a_2902462501).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872406 < L_536872407)) break Label3;
            i_2902462507 = a_2902462501[chckIndx(i_536872406, 0, (a_2902462501).length - 1)];
            if ((i_2902462507 == item_2902462502)) {
            break BeforeRet;
            }
            
            result_2902462503 = addInt(result_2902462503, 1);
            i_536872406 = addInt(i_536872406, 1);
            if (!(((a_2902462501).length == L_536872407))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2902462503 = -1;
  };

  return result_2902462503;

}

function del_2902462514(x_2902462516, x_2902462516_Idx, i_2902462517) {
    var xl_2902462521 = subInt((x_2902462516[x_2902462516_Idx]).length, 1);
    x_2902462516[x_2902462516_Idx][chckIndx(i_2902462517, 0, (x_2902462516[x_2902462516_Idx]).length - 1)] = x_2902462516[x_2902462516_Idx][chckIndx(xl_2902462521, 0, (x_2902462516[x_2902462516_Idx]).length - 1)];
    if (x_2902462516[x_2902462516_Idx].length < chckRange(xl_2902462521, 0, 2147483647)) { for (var i = x_2902462516[x_2902462516_Idx].length ; i < chckRange(xl_2902462521, 0, 2147483647) ; ++i) x_2902462516[x_2902462516_Idx].push(0); }
               else { x_2902462516[x_2902462516_Idx].length = chckRange(xl_2902462521, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2902461601(self_2902461602, handle_2902461603) {
    if (contains_2902461646(self_2902461602.onRequestSave, handle_2902461603)) {
    del_2902461705(self_2902461602.onRequestSave, handle_2902461603);
    Label1: {
      var __2902462496 = [];
      var list_2902462497 = null;
      var list_2902462497_Idx = 0;
      var L_536872394 = len_2902462261(self_2902461602.onRequestSaveIndex);
      Label2: {
        var h_536872396 = 0;
        var colontmp__536872397 = 0;
        colontmp__536872397 = (self_2902461602.onRequestSaveIndex.data).length - 1;
        var res_536872398 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872398 <= colontmp__536872397)) break Label4;
              h_536872396 = res_536872398;
              if (isFilled_1308622880(self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872396, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872401 = nimCopy(null, {Field0: nimCopy(null, self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872396, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872396, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2902460332);
              __2902462496 = colontmp__536872401["Field0"];
              list_2902462497 = colontmp__536872401["Field1"][0]; list_2902462497_Idx = colontmp__536872401["Field1"][1];
              var index_2902462513 = find_2902462498(list_2902462497[list_2902462497_Idx], handle_2902461603);
              if ((0 <= index_2902462513)) {
              del_2902462514(list_2902462497, list_2902462497_Idx, chckRange(index_2902462513, 0, 2147483647));
              }
              
              if (!((len_2902462261(self_2902461602.onRequestSaveIndex) == L_536872394))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872398 = addInt(res_536872398, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2902458420(self_2902458421) {
  
}

function stop_2902458422(self_2902458421) {
    stop_2902458420(self_2902458421);

  
}

function destroy_2801801489(self_2801801490) {
    var Temporary1;
    var Temporary2;

    if (!((self_2801801490.tsParser == null))) {
    deinit_2868904376(self_2801801490.tsParser);
    self_2801801490.tsParser = null;
    }
    
    if (isSome_2801801498(self_2801801490.languageServer)) {
    removeOnRequestSaveHandler_2902461601((Temporary1 = get_2801801518(self_2801801490.languageServer), Temporary1)[0][Temporary1[1]], self_2801801490.onRequestSaveHandle);
    stop_2902458422((Temporary2 = get_2801801518(self_2801801490.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2801801490.languageServer = nimCopy(self_2801801490.languageServer, none_2919235608(), NTI2801795270);
    }
    

  
}

function shutdown_2801801565(self_2801801566) {
    destroy_2801801489(self_2801801566.document);

  
}

function shutdown_2382364788(self_2382364789) {
  
}

function shutdown_2382364790(self_2382364789) {
    chckNilDisp(self_2382364789);
    if (isObj(self_2382364789.m_type, NTI2801795294)) {
    shutdown_2801801565(self_2382364789);
    }
    else {
    if (isObj(self_2382364789.m_type, NTI2382364676)) {
    shutdown_2382364788(self_2382364789);
    }
    }

  
}

function canEdit_2936020742(self_2936020743, document_2936020744) {
  var result_2936020745 = false;

  BeforeRet: {
    if (isObj(document_2936020744.m_type, NTI2936014282)) {
    result_2936020745 = true;
    break BeforeRet;
    }
    else {
      result_2936020745 = false;
      break BeforeRet;
    }
    
  };

  return result_2936020745;

}

function canEdit_2801802606(self_2801802607, document_2801802608) {
  var result_2801802609 = false;

  BeforeRet: {
    if (isObj(document_2801802608.m_type, NTI2801795211)) {
    result_2801802609 = true;
    break BeforeRet;
    }
    else {
      result_2801802609 = false;
      break BeforeRet;
    }
    
  };

  return result_2801802609;

}

function canEdit_2382364791(self_2382364792, document_2382364793) {
  var result_2382364794 = false;

  BeforeRet: {
    result_2382364794 = false;
    break BeforeRet;
  };

  return result_2382364794;

}

function canEdit_2382364795(self_2382364792, document_2382364793) {
  var result_2382364796 = false;

  BeforeRet: {
    chckNilDisp(self_2382364792);
    if (isObj(self_2382364792.m_type, NTI2936014311)) {
    result_2382364796 = canEdit_2936020742(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364792.m_type, NTI2801795294)) {
    result_2382364796 = canEdit_2801802606(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364792.m_type, NTI2382364676)) {
    result_2382364796 = canEdit_2382364791(self_2382364792, document_2382364793);
    break BeforeRet;
    }
    }}
  };

  return result_2382364796;

}

function addQuoted_2936020258(s_2936020260, s_2936020260_Idx, x_2936020261) {
    s_2936020260[s_2936020260_Idx].push.apply(s_2936020260[s_2936020260_Idx], HEX24_2969569239(x_2936020261));;

  
}

function HEX24_2936020247(self_2936020249) {
  var result_2936020250 = [[]];

    if (isSome_2969569114(self_2936020249)) {
    result_2936020250[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2936020258(result_2936020250, 0, self_2936020249.val);
    result_2936020250[0].push.apply(result_2936020250[0], [41]);;
    }
    else {
      result_2936020250[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2936020250[0];

}

function formatValue_2936020180(result_2936020182, result_2936020182_Idx, value_2936020183, specifier_2936020184) {
    formatValue_721420459(result_2936020182, result_2936020182_Idx, HEX24_2936020247(value_2936020183), specifier_2936020184);

  
}

function handleNodeInserted_2936020166(self_2936020167, doc_2936020168, node_2936020169) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2936020174 = [mnewString(0)];
    fmtRes_2936020174[0].push.apply(fmtRes_2936020174[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936020174, 0, node_2936020169, []);
    fmtRes_2936020174[0].push.apply(fmtRes_2936020174[0], [44,32]);;
    formatValue_2936020180(fmtRes_2936020174, 0, self_2936020167.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020174[0], NTI33554449)]);
      var oHEX60gensym110_2936020270 = nimCopy(null, self_2936020167.deletedNode, NTI2969567351);
      if (!isSome_2969569114(oHEX60gensym110_2936020270)) Temporary2 = false; else {        var deletedNode_2936020293 = get_2969569134(oHEX60gensym110_2936020270);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2936020293 == node_2936020169);      }    if (Temporary1) {
    self_2936020167.deletedNode = nimCopy(self_2936020167.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936020169)), NTI2969567351);
    var fmtRes_2936020305 = mnewString(0);
    fmtRes_2936020305.push.apply(fmtRes_2936020305, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020305, NTI33554449)]);
    }
    

  
}

function createWithDocument_2936030234(self_2936030235, document_2936030236) {
    
function HEX3Aanonymous_2936030239(doc_2936030240, node_2936030241) {
        handleNodeInserted_2936020166(editor_2936030238, doc_2936030240, node_2936030241);

      
    }

  var result_2936030237 = null;

  BeforeRet: {
    var editor_2936030238 = {eventHandler: null, document: document_2936030236, textDocument: null, textEditor: null, m_type: NTI2936014311, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2936030238 = createWithPrototype(editor_ast_prototype, editor_2936030238);
    init_2382364705(editor_2936030238);
    editor_2936030238.document.onNodeInserted.push(HEX3Aanonymous_2936030239);;
    editor_2936030238.selectedCompletion = 0;
    editor_2936030238.completions = nimCopy(null, [], NTI3154116626);
    if ((len_2969567320(editor_2936030238.document.rootNode) == 0)) {
    var paramA_2936030251 = newId_2046820569();
    var paramB_2936030252 = newId_2046820569();
    var resultId_2936030253 = newId_2046820569();
    Label1: {
      var tmpHEX60gensym1064_2936030258 = null;
      Label2: {
        var res_2936030264 = null;
        res_2936030264 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2936030264.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2936030264.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2936030267 = null;
            res_2936030267 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936030267.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2936030269 = null;
                res_2936030269 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030269.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2936030271 = null;
                    res_2936030271 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936030271.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936030271.id = nimCopy(res_2936030271.id, paramA_2936030251, NTI2046820355);
                    res_2936030271.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2936030275 = null;
                        res_2936030275 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030275.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936030275.reff = nimCopy(res_2936030275.reff, IdInt_2952790028, NTI2046820355);
                      };
                      add_2969567270(res_2936030271, res_2936030275);
                      Label16: {
                        var res_2936030278 = null;
                        res_2936030278 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030278.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936030271, res_2936030278);
                    };
                  };
                  add_2969567270(res_2936030269, res_2936030271);
                  Label18: {
                    var res_2936030280 = null;
                    res_2936030280 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936030280.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936030280.id = nimCopy(res_2936030280.id, paramB_2936030252, NTI2046820355);
                    res_2936030280.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2936030284 = null;
                        res_2936030284 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030284.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936030284.reff = nimCopy(res_2936030284.reff, IdInt_2952790028, NTI2046820355);
                      };
                      add_2969567270(res_2936030280, res_2936030284);
                      Label23: {
                        var res_2936030287 = null;
                        res_2936030287 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030287.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936030280, res_2936030287);
                    };
                  };
                  add_2969567270(res_2936030269, res_2936030280);
                };
              };
              add_2969567270(res_2936030267, res_2936030269);
              Label25: {
                var res_2936030289 = null;
                res_2936030289 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030289.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2936030289.reff = nimCopy(res_2936030289.reff, IdInt_2952790028, NTI2046820355);
              };
              add_2969567270(res_2936030267, res_2936030289);
              Label27: {
                var res_2936030292 = null;
                res_2936030292 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030292.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2936030294 = null;
                    res_2936030294 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936030294.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936030294.id = nimCopy(res_2936030294.id, resultId_2936030253, NTI2046820355);
                    res_2936030294.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2936030298 = null;
                        res_2936030298 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030298.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936030294, res_2936030298);
                      Label35: {
                        var res_2936030300 = null;
                        res_2936030300 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030300.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2936030302 = null;
                            res_2936030302 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936030302.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936030302.reff = nimCopy(res_2936030302.reff, IdAdd_2952790019, NTI2046820355);
                          };
                          add_2969567270(res_2936030300, res_2936030302);
                          Label40: {
                            var res_2936030305 = null;
                            res_2936030305 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936030305.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936030305.reff = nimCopy(res_2936030305.reff, paramA_2936030251, NTI2046820355);
                          };
                          add_2969567270(res_2936030300, res_2936030305);
                          Label42: {
                            var res_2936030308 = null;
                            res_2936030308 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936030308.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936030308.reff = nimCopy(res_2936030308.reff, paramB_2936030252, NTI2046820355);
                          };
                          add_2969567270(res_2936030300, res_2936030308);
                        };
                      };
                      add_2969567270(res_2936030294, res_2936030300);
                    };
                  };
                  add_2969567270(res_2936030292, res_2936030294);
                  Label44: {
                    var res_2936030311 = null;
                    res_2936030311 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936030311.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936030311.reff = nimCopy(res_2936030311.reff, resultId_2936030253, NTI2046820355);
                  };
                  add_2969567270(res_2936030292, res_2936030311);
                };
              };
              add_2969567270(res_2936030267, res_2936030292);
            };
          };
        };
        add_2969567270(res_2936030264, res_2936030267);
      };
    };
    add_2969567270(editor_2936030238.document.rootNode, res_2936030264);
    var addId_2936030475 = nimCopy(null, last_2969567490(editor_2936030238.document.rootNode).id, NTI2046820355);
    Label46: {
      var tmpHEX60gensym1119_2936030480 = null;
      Label47: {
        var res_2936030486 = null;
        res_2936030486 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2936030486.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2936030486.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2936030489 = null;
            res_2936030489 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936030489.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2936030491 = null;
                res_2936030491 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030491.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936030489, res_2936030491);
              Label55: {
                var res_2936030493 = null;
                res_2936030493 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030493.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2936030493.reff = nimCopy(res_2936030493.reff, IdVoid_2952790030, NTI2046820355);
              };
              add_2969567270(res_2936030489, res_2936030493);
              Label57: {
                var res_2936030496 = null;
                res_2936030496 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936030496.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2936030498 = null;
                    res_2936030498 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936030498.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2936030500 = null;
                        res_2936030500 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030500.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936030500.reff = nimCopy(res_2936030500.reff, addId_2936030475, NTI2046820355);
                      };
                      add_2969567270(res_2936030498, res_2936030500);
                      Label65: {
                        var res_2936030503 = null;
                        res_2936030503 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030503.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936030503.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2969567270(res_2936030498, res_2936030503);
                      Label67: {
                        var res_2936030506 = null;
                        res_2936030506 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936030506.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936030506.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2969567270(res_2936030498, res_2936030506);
                    };
                  };
                };
                add_2969567270(res_2936030496, res_2936030498);
              };
              add_2969567270(res_2936030489, res_2936030496);
            };
          };
        };
        add_2969567270(res_2936030486, res_2936030489);
      };
    };
    add_2969567270(editor_2936030238.document.rootNode, res_2936030486);
    }
    
    Label69: {
      var c_2936030592 = null;
      var i_536872451 = 0;
      var L_536872452 = (editor_2936030238.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872451 < L_536872452)) break Label71;
            c_2936030592 = editor_2936030238.document.rootNode.children[chckIndx(i_536872451, 0, (editor_2936030238.document.rootNode.children).length - 1)];
            handleNodeInserted_2936017460(editor_2936030238.document, c_2936030592);
            i_536872451 = addInt(i_536872451, 1);
            if (!(((editor_2936030238.document.rootNode.children).length == L_536872452))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_2986456654(ctx_2936012855, editor_2936030238.document.rootNode);
    nodeHEX3D_2936016604(editor_2936030238, HEX5BHEX5D_2969567316(editor_2936030238.document.rootNode, 0));
    result_2936030237 = editor_2936030238;
    break BeforeRet;
  };

  return result_2936030237;

}

function createWithDocument_2801813836(self_2801813837, document_2801813838) {
    
function HEX3Aanonymous_2801813859(__2801813860) {
        handleTextDocumentTextChanged_2801813742(editor_2801813840);

      
    }

  var result_2801813839 = null;

  BeforeRet: {
    var editor_2801813840 = createTextEditorInstance_2801813744();
    editor_2801813840.document = document_2801813838;
    init_2382364705(editor_2801813840);
    if (((editor_2801813840.document.lines).length == 0)) {
    editor_2801813840.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2801813808(editor_2801813840.document.textChanged, HEX3Aanonymous_2801813859);
    result_2801813839 = editor_2801813840;
    break BeforeRet;
  };

  return result_2801813839;

}

function createWithDocument_2382364797(self_2382364798, document_2382364799) {
  var result_2382364800 = null;

  BeforeRet: {
    result_2382364800 = null;
    break BeforeRet;
  };

  return result_2382364800;

}

function createWithDocument_2382364810(self_2382364798, document_2382364799) {
  var result_2382364811 = null;

  BeforeRet: {
    chckNilDisp(self_2382364798);
    if (isObj(self_2382364798.m_type, NTI2936014311)) {
    result_2382364811 = createWithDocument_2936030234(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364798.m_type, NTI2801795294)) {
    result_2382364811 = createWithDocument_2801813836(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364798.m_type, NTI2382364676)) {
    result_2382364811 = createWithDocument_2382364797(self_2382364798, document_2382364799);
    break BeforeRet;
    }
    }}
  };

  return result_2382364811;

}

function getEventHandlers_2936020753(self_2936020754) {
  var result_2936020755 = [[]];

    result_2936020755[0].push(self_2936020754.eventHandler);;
    if (!((self_2936020754.modeEventHandler == null))) {
    result_2936020755[0].push(self_2936020754.modeEventHandler);;
    }
    
    if (!((self_2936020754.textEditor == null))) {
    add_2936020771(result_2936020755, 0, getEventHandlers_2382364828(self_2936020754.textEditor));
    result_2936020755[0].push(self_2936020754.textEditEventHandler);;
    }
    

  return result_2936020755[0];

}

function getEventHandlers_2801802617(self_2801802618) {
  var result_2801802619 = [];

    result_2801802619 = nimCopy(null, [self_2801802618.eventHandler], NTI2432696334);
    if (!((self_2801802618.modeEventHandler == null))) {
    result_2801802619.push(self_2801802618.modeEventHandler);;
    }
    
    if (self_2801802618.showCompletions) {
    result_2801802619.push(self_2801802618.completionEventHandler);;
    }
    

  return result_2801802619;

}

function getEventHandlers_2432696325(self_2432696326) {
  var result_2432696327 = [];

  BeforeRet: {
    result_2432696327 = nimCopy(null, [self_2432696326.eventHandler], NTI2432696334);
    break BeforeRet;
  };

  return result_2432696327;

}

function getEventHandlers_2382364812(self_2382364813) {
  var result_2382364814 = [];

  BeforeRet: {
    result_2382364814 = nimCopy(null, [], NTI2382364755);
    break BeforeRet;
  };

  return result_2382364814;

}

function getEventHandlers_2382364828(self_2382364813) {
  var result_2382364829 = [];

  BeforeRet: {
    chckNilDisp(self_2382364813);
    if (isObj(self_2382364813.m_type, NTI2936014311)) {
    result_2382364829 = getEventHandlers_2936020753(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2801795294)) {
    result_2382364829 = getEventHandlers_2801802617(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2432696324)) {
    result_2382364829 = getEventHandlers_2432696325(self_2382364813);
    break BeforeRet;
    }
    else {
    if (isObj(self_2382364813.m_type, NTI2382364676)) {
    result_2382364829 = getEventHandlers_2382364812(self_2382364813);
    break BeforeRet;
    }
    }}}
  };

  return result_2382364829;

}

function reset_2936020868(obj_2936020870, obj_2936020870_Idx) {
    obj_2936020870[obj_2936020870_Idx] = null;

  
}

function clear_2936020861(deq_2936020863) {
    Label1: {
      var el_2936020867 = null;
      var el_2936020867_Idx = 0;
      var i_536872462 = deq_2936020863.head;
      Label2: {
        var c_536872464 = 0;
        var i_536872465 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872465 < deq_2936020863.count)) break Label4;
              c_536872464 = i_536872465;
              el_2936020867 = deq_2936020863.data; el_2936020867_Idx = chckIndx(i_536872462, 0, (deq_2936020863.data).length - 1);
              reset_2936020868(el_2936020867, el_2936020867_Idx);
              i_536872462 = (addInt(i_536872462, 1) & deq_2936020863.mask);
              i_536872465 = addInt(i_536872465, 1);
            }
        };
      };
    };
    deq_2936020863.count = 0;
    deq_2936020863.tail = deq_2936020863.head;

  
}

function handleDocumentChanged_2936020798(self_2936020799) {
    var fmtRes_2936020804 = mnewString(0);
    fmtRes_2936020804.push.apply(fmtRes_2936020804, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020804, NTI33554449)]);
    clear_2936020861(self_2936020799.selectionHistory);
    clear_2936020861(self_2936020799.selectionFuture);
    finishEdit_2936020734(self_2936020799, false);
    Label1: {
      var symbol_2936020938 = null;
      var L_536872455 = len_2986456156(ctx_2936012855.globalScope);
      Label2: {
        var h_536872457 = 0;
        var colontmp__536872458 = 0;
        colontmp__536872458 = (ctx_2936012855.globalScope.data).length - 1;
        var res_536872459 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872459 <= colontmp__536872458)) break Label4;
              h_536872457 = res_536872459;
              if (isFilled_1308622880(ctx_2936012855.globalScope.data[chckIndx(h_536872457, 0, (ctx_2936012855.globalScope.data).length - 1)].Field0)) {
              symbol_2936020938 = ctx_2936012855.globalScope.data[chckIndx(h_536872457, 0, (ctx_2936012855.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_2986414607(ctx_2936012855, symbol_2936020938);
              if (!((len_2986456156(ctx_2936012855.globalScope) == L_536872455))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872459 = addInt(res_536872459, 1);
            }
        };
      };
    };
    nodeHEX3D_2936016604(self_2936020799, HEX5BHEX5D_2969567316(self_2936020799.document.rootNode, 0));

  
}

function handleDocumentChanged_2801805634(self_2801805635) {
    selectionHEX3D_2801795583(self_2801805635, {Field0: clampCursor_2801795480(self_2801805635, selection_2801795577(self_2801805635).Field0), Field1: clampCursor_2801795480(self_2801805635, selection_2801795577(self_2801805635).Field1)});
    updateSearchResults_2801802635(self_2801805635);

  
}

function handleDocumentChanged_2382364830(self_2382364831) {
  
}

function handleDocumentChanged_2382364832(self_2382364831) {
    chckNilDisp(self_2382364831);
    if (isObj(self_2382364831.m_type, NTI2936014311)) {
    handleDocumentChanged_2936020798(self_2382364831);
    }
    else {
    if (isObj(self_2382364831.m_type, NTI2801795294)) {
    handleDocumentChanged_2801805634(self_2382364831);
    }
    else {
    if (isObj(self_2382364831.m_type, NTI2382364676)) {
    handleDocumentChanged_2382364830(self_2382364831);
    }
    }}

  
}

function del_1291847223(t_1291847226, key_1291847227) {
    var hc_1291847228 = [0];
    var i_1291847235 = rawGet_1291845907(t_1291847226, key_1291847227, hc_1291847228, 0);
    var mskHEX60gensym36_1291847239 = (t_1291847226.data).length - 1;
    if ((0 <= i_1291847235)) {
    t_1291847226.counter = subInt(t_1291847226.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847246 = i_1291847235;
            var rHEX60gensym36_1291847247 = jHEX60gensym36_1291847246;
            t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)].Field0 = 0;
            t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)].Field1 = 0;
            t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847235 = (addInt(i_1291847235, 1) & mskHEX60gensym36_1291847239);
                  if (isEmpty_1308622877(t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847247 = (t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)].Field0 & mskHEX60gensym36_1291847239);
                  if (!(((((rHEX60gensym36_1291847247 <= i_1291847235) && (jHEX60gensym36_1291847246 < rHEX60gensym36_1291847247)) || ((jHEX60gensym36_1291847246 < rHEX60gensym36_1291847247) && (i_1291847235 < jHEX60gensym36_1291847246))) || ((i_1291847235 < jHEX60gensym36_1291847246) && (rHEX60gensym36_1291847247 <= i_1291847235))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847226.data[chckIndx(jHEX60gensym36_1291847246, 0, (t_1291847226.data).length - 1)] = nimCopy(t_1291847226.data[chckIndx(jHEX60gensym36_1291847246, 0, (t_1291847226.data).length - 1)], t_1291847226.data[chckIndx(i_1291847235, 0, (t_1291847226.data).length - 1)], NTI1291845716);
          }
      };
    };
    }
    

  
}

function invoke_1291847133(event_1291847135, arg_1291847136) {
    Label1: {
      var h_1291847159 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872471 = 0;
      var L_536872472 = (event_1291847135.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872471 < L_536872472)) break Label3;
            h_1291847159 = event_1291847135.handlers[chckIndx(i_536872471, 0, (event_1291847135.handlers).length - 1)];
            h_1291847159.Field1(arg_1291847136);
            i_536872471 = addInt(i_536872471, 1);
            if (!(((event_1291847135.handlers).length == L_536872472))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847180(self_1291847181, editor_1291847182) {
    del_1291847223(self_1291847181.editors, editor_1291847182.id);
    invoke_1291847133(self_1291847181.onEditorDeregistered, editor_1291847182);

  
}

function unregister_2936030676(self_2936030677) {
    finishEdit_2936020734(self_2936030677, false);
    unregisterEditor_1291847180(self_2936030677.editor, self_2936030677);

  
}

function unregister_2801814224(self_2801814225) {
    unregisterEditor_1291847180(self_2801814225.editor, self_2801814225);

  
}

function unregister_2382364833(self_2382364834) {
  
}

function unregister_2382364835(self_2382364834) {
    chckNilDisp(self_2382364834);
    if (isObj(self_2382364834.m_type, NTI2936014311)) {
    unregister_2936030676(self_2382364834);
    }
    else {
    if (isObj(self_2382364834.m_type, NTI2801795294)) {
    unregister_2801814224(self_2382364834);
    }
    else {
    if (isObj(self_2382364834.m_type, NTI2382364676)) {
    unregister_2382364833(self_2382364834);
    }
    }}

  
}

function getItemAtPixelPosition_2936029989(self_2936029990, posWindow_2936029991) {
  var result_2936029993 = ({val: 0, has: false});

  BeforeRet: {
    result_2936029993 = nimCopy(result_2936029993, none_2969567410(), NTI1191183280);
    Label1: {
      var index_2936030004 = 0;
      var rect_2936030005 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872476 = 0;
      var L_536872477 = (self_2936029990.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872476 < L_536872477)) break Label3;
            index_2936030004 = self_2936029990.lastItems[chckIndx(i_536872476, 0, (self_2936029990.lastItems).length - 1)]["Field0"];
            rect_2936030005 = self_2936029990.lastItems[chckIndx(i_536872476, 0, (self_2936029990.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_2936030005, posWindow_2936029991) && (0 <= index_2936030004)) && (index_2936030004 <= (self_2936029990.completions).length - 1))) {
            result_2936029993 = nimCopy(result_2936029993, some_1191184367(index_2936030004), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872476 = addInt(i_536872476, 1);
            if (!(((self_2936029990.lastItems).length == L_536872477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2936029993;

}

function getOption_2801805984(editor_2801805986, path_2801805987, default_2801805988) {
  var result_2801805994 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2801805986 == null)) {
      result_2801805994 = default_2801805988;
      break BeforeRet;
      }
      
      var nodeHEX60gensym168_2801806007 = HEX7BHEX7D_1627393316(editor_2801805986.options, nsuSplitString(path_2801805987, [46], -1));
      if ((nodeHEX60gensym168_2801806007 == null)) {
      result_2801805994 = default_2801805988;
      break BeforeRet;
      }
      
    };
    result_2801805994 = getFloat_1627390140(nodeHEX60gensym168_2801806007, default_2801805988);
    break BeforeRet;
  };

  return result_2801805994;

}

function handleScroll_2936030012(self_2936030013, scroll_2936030014, mousePosWindow_2936030015) {
    if (isSome_1191185117(getItemAtPixelPosition_2936029989(self_2936030013, mousePosWindow_2936030015))) {
    self_2936030013.selectedCompletion = clamp_1660945119(subInt(self_2936030013.selectedCompletion, ((scroll_2936030014.y) | 0)), 0, (self_2936030013.completions).length - 1);
    }
    else {
    HEX2BHEX3D_855640304(self_2936030013, "scrollOffset", (scroll_2936030014.y * getOption_2801805984(self_2936030013.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2801805980(self_2801805981, scroll_2801805982, mousePosWindow_2801805983) {
    HEX2BHEX3D_855640304(self_2801805981, "scrollOffset", (scroll_2801805982.y * getOption_2801805984(self_2801805981.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    markDirty_2382364710(self_2801805981);

  
}

function handleScroll_2382364836(self_2382364837, scroll_2382364838, mousePosWindow_2382364839) {
  
}

function handleScroll_2382364840(self_2382364837, scroll_2382364838, mousePosWindow_2382364839) {
    chckNilDisp(self_2382364837);
    if (isObj(self_2382364837.m_type, NTI2936014311)) {
    handleScroll_2936030012(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    else {
    if (isObj(self_2382364837.m_type, NTI2801795294)) {
    handleScroll_2801805980(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    else {
    if (isObj(self_2382364837.m_type, NTI2382364676)) {
    handleScroll_2382364836(self_2382364837, scroll_2382364838, mousePosWindow_2382364839);
    }
    }}

  
}

function HEX2D_2113929748(aHEX60gensym73_2113929750, bHEX60gensym73_2113929751) {
  var result_2113929752 = ({x: 0.0, y: 0.0});

    result_2113929752 = nimCopy(result_2113929752, {x: (aHEX60gensym73_2113929750.x - bHEX60gensym73_2113929751.x), y: (aHEX60gensym73_2113929750.y - bHEX60gensym73_2113929751.y)}, NTI2130706720);

  return result_2113929752;

}

function getNodeAtPixelPosition_2936023602(self_2936023603, posContent_2936023604) {
                      var Temporary8;

  var result_2936023606 = ({val: null});

  BeforeRet: {
    result_2936023606 = nimCopy(result_2936023606, none_2969567439(), NTI2969567351);
    Label1: {
      var layout_2936023634 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2936023635 = ({x: 0.0, y: 0.0});
      var i_536872490 = 0;
      var L_536872491 = (self_2936023603.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872490 < L_536872491)) break Label3;
            layout_2936023634 = self_2936023603.lastLayouts[chckIndx(i_536872490, 0, (self_2936023603.lastLayouts).length - 1)]["Field0"];
            offset_2936023635 = self_2936023603.lastLayouts[chckIndx(i_536872490, 0, (self_2936023603.lastLayouts).length - 1)]["Field1"];
            var bounds_2936023645 = HEX2B_2097152155(bounds_3070232743(layout_2936023634), offset_2936023635);
            var smallestRange_2936023646 = ({parent: null, first: 0, last: 0});
            if (contains_2097152182(bounds_2936023645, posContent_2936023604)) {
            Label4: {
              var __2936023647 = 0;
              var child_2936023648 = null;
              var n_536872482 = layout_2936023634.node;
              var idx_536872483 = -1;
              var i_536872484 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872483 == -1)) {
                    var colontmp__536872487 = nimCopy(null, {Field0: i_536872484, Field1: n_536872482}, NTI2969568569);
                    __2936023647 = colontmp__536872487["Field0"];
                    child_2936023648 = colontmp__536872487["Field1"];
                    if (contains_2936015558(layout_2936023634.nodeToVisualNode, child_2936023648.id)) {
                    var visualNode_2936023794 = HEX5BHEX5D_2936016463(layout_2936023634.nodeToVisualNode, child_2936023648.id);
                    var bounds_2936023804 = HEX2B_2097152155(absoluteBounds_3070232356(visualNode_2936023794), vec2_2130707293(0.0, offset_2936023635.y));
                    if (contains_2097152182(bounds_2936023804, posContent_2936023604)) {
                    if (((((smallestRange_2936023646.parent == null) || (smallestRange_2936023646.parent.depth < visualNode_2936023794.parent.depth)) || ((visualNode_2936023794.parent.depth == smallestRange_2936023646.parent.depth) && (smallestRange_2936023646.parent.indent < visualNode_2936023794.parent.indent))) || ((visualNode_2936023794.parent.depth == smallestRange_2936023646.parent.depth) && (subInt(visualNode_2936023794.last, visualNode_2936023794.first) < subInt(smallestRange_2936023646.last, smallestRange_2936023646.first))))) {
                    smallestRange_2936023646 = nimCopy(smallestRange_2936023646, visualNode_2936023794, NTI3070230558);
                    result_2936023606 = nimCopy(result_2936023606, some_2969567458(child_2936023648), NTI2969567351);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872483, 1) < len_2969567320(n_536872482))) {
                    n_536872482 = HEX5BHEX5D_2969567316(n_536872482, addInt(idx_536872483, 1));
                    idx_536872483 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872488 = next_2969567425(n_536872482);
                      if (!isSome_2969569114(oHEX60gensym74_536872488)) Temporary8 = false; else {                        var ne_536872489 = get_2969569134(oHEX60gensym74_536872488);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872482 = ne_536872489;
                    idx_536872483 = -1;
                    }
                    else {
                    if ((!((n_536872482.parent == null)) && !((n_536872482.parent == layout_2936023634.node)))) {
                    idx_536872483 = index_2969567340(n_536872482);
                    n_536872482 = n_536872482.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872484 = addInt(i_536872484, 1);
                    }
                  }
              };
            };
            if (isNone_2969569142(result_2936023606)) {
            result_2936023606 = nimCopy(result_2936023606, some_2969567458(layout_2936023634.node), NTI2969567351);
            }
            
            break BeforeRet;
            }
            
            i_536872490 = addInt(i_536872490, 1);
            if (!(((self_2936023603.lastLayouts).length == L_536872491))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2936023606;

}

function handleMousePress_2936030044(self_2936030045, button_2936030046, mousePosWindow_2936030047) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2936030092 = HEX2D_2113929748(mousePosWindow_2936030047, xy_2113929248(self_2936030045.lastBounds));
    if ((button_2936030046 == 0)) {
      var oHEX60gensym1060_2936030099 = getItemAtPixelPosition_2936029989(self_2936030045, mousePosWindow_2936030047);
      if (!isSome_1191185117(oHEX60gensym1060_2936030099)) Temporary1 = false; else {        var index_2936030122 = get_1191185211(oHEX60gensym1060_2936030099);
        Temporary1 = true;      }    if (Temporary1) {
    self_2936030045.selectedCompletion = index_2936030122;
    applySelectedCompletion_2936026817(self_2936030045);
    }
    else {
      if (!!(isEditing_2936020308(self_2936030045))) Temporary2 = false; else {        var oHEX60gensym1061_2936030125 = getNodeAtPixelPosition_2936023602(self_2936030045, mousePosContent_2936030092);
        if (!isSome_2969569114(oHEX60gensym1061_2936030125)) Temporary3 = false; else {          var n_2936030148 = get_2969569134(oHEX60gensym1061_2936030125);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2936016604(self_2936030045, n_2936030148);
    }
    }
    }
    

  
}

function updateFontSettings_3305111634(self_3305111635) {
    var newFontSize_3305112716 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3305111635.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3305112716 == self_3305111635.mFontSize))) {
    self_3305111635.mFontSize = newFontSize_3305112716;
    var d_3305112717 = document.createElement("div");
    d_3305112717.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3305112717.innerHTML = "#";
    self_3305111635.content.appendChild(d_3305112717);
    var fmtRes_3305112723 = [mnewString(0)];
    fmtRes_3305112723[0].push.apply(fmtRes_3305112723[0], [99,104,97,114,87,105,100,116,104,58,32]);;
    formatValue_2516582756(fmtRes_3305112723, 0, d_3305112717.clientWidth, []);
    fmtRes_3305112723[0].push.apply(fmtRes_3305112723[0], [44,32,108,105,110,101,72,101,105,103,104,116,58,32]);;
    formatValue_2516582756(fmtRes_3305112723, 0, d_3305112717.clientHeight, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3305112723[0], NTI33554449)]);
    self_3305111635.mLineHeight = d_3305112717.clientHeight;
    self_3305111635.mCharWidth = d_3305112717.clientWidth;
    self_3305111635.content.removeChild(d_3305112717);
    }
    

  
}

function charWidth_3305112761(self_3305112762) {
  var result_3305112763 = 0.0;

    updateFontSettings_3305111634(self_3305112762);
    result_3305112763 = self_3305112762.mCharWidth;

  return result_3305112763;

}

function charWidth_2499805340(self_2499805341) {
  var result_2499805342 = 0.0;

  return result_2499805342;

}

function charWidth_2499805343(self_2499805341) {
  var result_2499805344 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2499805341);
    if (isObj(self_2499805341.m_type, NTI3305111563)) {
    result_2499805344 = charWidth_3305112761(self_2499805341);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805341.m_type, NTI2499805188)) {
    result_2499805344 = charWidth_2499805340(self_2499805341);
    break BeforeRet;
    }
    }
  };

  return result_2499805344;

}

function isThickCursor_2801805743(self_2801805744) {
  var result_2801805745 = false;

  BeforeRet: {
    result_2801805745 = getOption_2801805746(self_2801805744.editor, getContextWithMode_2801805740(self_2801805744, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2801805745;

}

function HEX2DHEX3D_2801814013(x_2801814015, x_2801814015_Idx, y_2801814016) {
    x_2801814015[x_2801814015_Idx] = (x_2801814015[x_2801814015_Idx] - y_2801814016);

  
}

function some_2801814027(val_2801814029) {
  var result_2801814034 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2801814034.has = true;
    result_2801814034.val = nimCopy(result_2801814034.val, val_2801814029, NTI2801807482);

  return result_2801814034;

}

function none_2801814040() {
  var result_2801814047 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2801814047;

}

function getCursorAtPixelPos_2801813889(self_2801813890, mousePosWindow_2801813891) {
  var result_2801813897 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2801813938 = HEX2D_2113929748(mousePosWindow_2801813891, xy_2113929248(self_2801813890.lastContentBounds));
    Label1: {
      var li_2801813972 = 0;
      var line_2801813973 = null;
      var i_536872500 = 0;
      var L_536872501 = (self_2801813890.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872500 < L_536872501)) break Label3;
            li_2801813972 = i_536872500;
            line_2801813973 = self_2801813890.lastRenderedLines[chckIndx(i_536872500, 0, (self_2801813890.lastRenderedLines).length - 1)];
            var startOffset_2801813974 = 0;
            Label4: {
              var i_2801814007 = 0;
              var part_2801814008 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872496 = 0;
              var L_536872497 = (line_2801813973.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872496 < L_536872497)) break Label6;
                    i_2801814007 = i_536872496;
                    part_2801814008 = nimCopy(part_2801814008, line_2801813973.parts[chckIndx(i_536872496, 0, (line_2801813973.parts).length - 1)], NTI2801795206);
                    if ((contains_2097152182(part_2801814008.bounds, mousePosContent_2801813938) || ((((i_2801814007 == (line_2801813973.parts).length - 1) && (part_2801814008.bounds.y <= mousePosContent_2801813938.y)) && (mousePosContent_2801813938.y <= (part_2801814008.bounds.y + part_2801814008.bounds.h))) && (part_2801814008.bounds.x <= mousePosContent_2801813938.x)))) {
                    var offsetFromLeft_2801814012 = [((mousePosContent_2801813938.x - part_2801814008.bounds.x) / charWidth_2499805343(self_2801813890.editor.platform))];
                    if (isThickCursor_2801805743(self_2801813890)) {
                    HEX2DHEX3D_2801814013(offsetFromLeft_2801814012, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2801814012, 0, 0.5);
                    }
                    
                    var index_2801814026 = clamp_1660945119(((offsetFromLeft_2801814012[0]) | 0), 0, (part_2801814008.text).length);
                    result_2801813897 = nimCopy(result_2801813897, some_2801814027({Field0: line_2801813973.index, Field1: addInt(startOffset_2801813974, index_2801814026)}), NTI2801807407);
                    break BeforeRet;
                    }
                    
                    startOffset_2801813974 = addInt(startOffset_2801813974, (part_2801814008.text).length);
                    i_536872496 = addInt(i_536872496, 1);
                    if (!(((line_2801813973.parts).length == L_536872497))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872500 = addInt(i_536872500, 1);
            if (!(((self_2801813890.lastRenderedLines).length == L_536872501))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2801813897 = nimCopy(result_2801813897, none_2801814040(), NTI2801807407);
    break BeforeRet;
  };

  return result_2801813897;

}

function isSome_2801814082(self_2801814084) {
  var result_2801814085 = false;

    result_2801814085 = self_2801814084.has;

  return result_2801814085;

}

function isNone_2801814107(self_2801814109) {
  var result_2801814110 = false;

    result_2801814110 = !(self_2801814109.has);

  return result_2801814110;

}

function get_2801814099(self_2801814101) {
  var result_2801814102 = {Field0: 0, Field1: 0};

    if (isNone_2801814107(self_2801814101)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801814102 = self_2801814101.val;

  return result_2801814102;

}

function handleMousePress_2801814066(self_2801814067, button_2801814068, mousePosWindow_2801814069) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2801814068 == 0)) Temporary1 = false; else {        var oHEX60gensym1014_2801814077 = getCursorAtPixelPos_2801813889(self_2801814067, mousePosWindow_2801814069);
        if (!isSome_2801814082(oHEX60gensym1014_2801814077)) Temporary2 = false; else {          var cursor_2801814122 = nimCopy(null, get_2801814099(oHEX60gensym1014_2801814077), NTI2415919113);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2801795583(self_2801814067, toSelection_2415919597(cursor_2801814122));
    }
    
      if (!(button_2801814068 == 3)) Temporary3 = false; else {        var oHEX60gensym1016_2801814129 = getCursorAtPixelPos_2801813889(self_2801814067, mousePosWindow_2801814069);
        if (!isSome_2801814082(oHEX60gensym1016_2801814129)) Temporary4 = false; else {          var cursor_2801814152 = nimCopy(null, get_2801814099(oHEX60gensym1016_2801814129), NTI2415919113);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2801807844(self_2801814067, cursor_2801814152);
    }
    
      if (!(button_2801814068 == 4)) Temporary5 = false; else {        var oHEX60gensym1017_2801814159 = getCursorAtPixelPos_2801813889(self_2801814067, mousePosWindow_2801814069);
        if (!isSome_2801814082(oHEX60gensym1017_2801814159)) Temporary6 = false; else {          var cursor_2801814182 = nimCopy(null, get_2801814099(oHEX60gensym1017_2801814159), NTI2415919113);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2801807971(self_2801814067, cursor_2801814182.Field0);
    }
    

  
}

function handleMousePress_2382364841(self_2382364842, button_2382364843, mousePosWindow_2382364844) {
  
}

function handleMousePress_2382364845(self_2382364842, button_2382364843, mousePosWindow_2382364844) {
    chckNilDisp(self_2382364842);
    if (isObj(self_2382364842.m_type, NTI2936014311)) {
    handleMousePress_2936030044(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    else {
    if (isObj(self_2382364842.m_type, NTI2801795294)) {
    handleMousePress_2801814066(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    else {
    if (isObj(self_2382364842.m_type, NTI2382364676)) {
    handleMousePress_2382364841(self_2382364842, button_2382364843, mousePosWindow_2382364844);
    }
    }}

  
}

function handleMouseRelease_2936030149(self_2936030150, button_2936030151, mousePosWindow_2936030152) {
  
}

function handleMouseRelease_2801814183(self_2801814184, button_2801814185, mousePosWindow_2801814186) {
  
}

function handleMouseRelease_2382364846(self_2382364847, button_2382364848, mousePosWindow_2382364849) {
  
}

function handleMouseRelease_2382364850(self_2382364847, button_2382364848, mousePosWindow_2382364849) {
    chckNilDisp(self_2382364847);
    if (isObj(self_2382364847.m_type, NTI2936014311)) {
    handleMouseRelease_2936030149(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    else {
    if (isObj(self_2382364847.m_type, NTI2801795294)) {
    handleMouseRelease_2801814183(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    else {
    if (isObj(self_2382364847.m_type, NTI2382364676)) {
    handleMouseRelease_2382364846(self_2382364847, button_2382364848, mousePosWindow_2382364849);
    }
    }}

  
}

function handleMouseMove_2936030153(self_2936030154, mousePosWindow_2936030155, mousePosDelta_2936030156, modifiers_2936030157, buttons_2936030158) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2936030158[0] != undefined)) {
    var mousePosContent_2936030207 = HEX2D_2113929748(mousePosWindow_2936030155, xy_2113929248(self_2936030154.lastBounds));
      if (!!(isEditing_2936020308(self_2936030154))) Temporary1 = false; else {        var oHEX60gensym1063_2936030210 = getNodeAtPixelPosition_2936023602(self_2936030154, mousePosContent_2936030207);
        if (!isSome_2969569114(oHEX60gensym1063_2936030210)) Temporary2 = false; else {          var n_2936030233 = get_2969569134(oHEX60gensym1063_2936030210);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2936016604(self_2936030154, n_2936030233);
    }
    
    }
    

  
}

function handleMouseMove_2801814187(self_2801814188, mousePosWindow_2801814189, mousePosDelta_2801814190, modifiers_2801814191, buttons_2801814192) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2801814192[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1019_2801814200 = getCursorAtPixelPos_2801813889(self_2801814188, mousePosWindow_2801814189);
        if (!isSome_2801814082(oHEX60gensym1019_2801814200)) Temporary2 = false; else {          var cursor_2801814223 = nimCopy(null, get_2801814099(oHEX60gensym1019_2801814200), NTI2415919113);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2801795583(self_2801814188, toSelection_2415919600(cursor_2801814223, selection_2801795577(self_2801814188), 3));
    }
    

  
}

function handleMouseMove_2382364851(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856) {
  
}

function handleMouseMove_2382364857(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856) {
    chckNilDisp(self_2382364852);
    if (isObj(self_2382364852.m_type, NTI2936014311)) {
    handleMouseMove_2936030153(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    else {
    if (isObj(self_2382364852.m_type, NTI2801795294)) {
    handleMouseMove_2801814187(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    else {
    if (isObj(self_2382364852.m_type, NTI2382364676)) {
    handleMouseMove_2382364851(self_2382364852, mousePosWindow_2382364853, mousePosDelta_2382364854, modifiers_2382364855, buttons_2382364856);
    }
    }}

  
}

function HEX26_3154116982(x_3154116984, y_3154116985) {
  var result_3154116986 = [];

    result_3154116986 = new Array(chckRange(addInt((x_3154116984).length, (y_3154116985).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3154116984).length, (y_3154116985).length), 0, 2147483647) ; ++i) { result_3154116986[i] = null; }    Label1: {
      var i_3154117004 = 0;
      var colontmp__536872504 = 0;
      colontmp__536872504 = subInt((x_3154116984).length, 1);
      var res_536872505 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872505 <= colontmp__536872504)) break Label3;
            i_3154117004 = res_536872505;
            result_3154116986[chckIndx(i_3154117004, 0, (result_3154116986).length - 1)] = x_3154116984[chckIndx(i_3154117004, 0, (x_3154116984).length - 1)];
            res_536872505 = addInt(res_536872505, 1);
          }
      };
    };
    Label4: {
      var i_3154117012 = 0;
      var colontmp__536872508 = 0;
      colontmp__536872508 = subInt((y_3154116985).length, 1);
      var res_536872509 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872509 <= colontmp__536872508)) break Label6;
            i_3154117012 = res_536872509;
            result_3154116986[chckIndx(addInt(i_3154117012, (x_3154116984).length), 0, (result_3154116986).length - 1)] = y_3154116985[chckIndx(i_3154117012, 0, (y_3154116985).length - 1)];
            res_536872509 = addInt(res_536872509, 1);
          }
      };
    };

  return result_3154116986;

}

function getEventHandlers_3204448514(self_3204448515) {
  var result_3204448516 = [];

  BeforeRet: {
    result_3204448516 = nimCopy(null, HEX26_3154116982(getEventHandlers_2382364828(self_3204448515.textEditor), [self_3204448515.eventHandler]), NTI3154116841);
    break BeforeRet;
  };

  return result_3204448516;

}

function getEventHandlers_3154116975(self_3154116976) {
  var result_3154116977 = [];

  BeforeRet: {
    result_3154116977 = nimCopy(null, HEX26_3154116982(getEventHandlers_2382364828(self_3154116976.textEditor), [self_3154116976.eventHandler]), NTI3154116841);
    break BeforeRet;
  };

  return result_3154116977;

}

function getEventHandlers_2449473588(self_2449473589) {
  var result_2449473590 = [];

  BeforeRet: {
    result_2449473590 = nimCopy(null, [self_2449473589.eventHandler], NTI2432696334);
    break BeforeRet;
  };

  return result_2449473590;

}

function getEventHandlers_2449473595(self_2449473589) {
  var result_2449473596 = [];

  BeforeRet: {
    chckNilDisp(self_2449473589);
    if (isObj(self_2449473589.m_type, NTI3204448278)) {
    result_2449473596 = getEventHandlers_3204448514(self_2449473589);
    break BeforeRet;
    }
    else {
    if (isObj(self_2449473589.m_type, NTI3154116612)) {
    result_2449473596 = getEventHandlers_3154116975(self_2449473589);
    break BeforeRet;
    }
    else {
    if (isObj(self_2449473589.m_type, NTI2449473540)) {
    result_2449473596 = getEventHandlers_2449473588(self_2449473589);
    break BeforeRet;
    }
    }}
  };

  return result_2449473596;

}

function handleScroll_3204448966(self_3204448967, scroll_3204448968, mousePosWindow_3204448969) {
    self_3204448967.selected = clamp_1660945119(subInt(self_3204448967.selected, ((scroll_3204448968.y) | 0)), 0, subInt((self_3204448967.completions).length, 1));

  
}

function handleScroll_3154117052(self_3154117053, scroll_3154117054, mousePosWindow_3154117055) {
    self_3154117053.selected = clamp_1660945119(subInt(self_3154117053.selected, ((scroll_3154117054.y) | 0)), 0, subInt((self_3154117053.completions).length, 1));

  
}

function handleScroll_2449473597(self_2449473598, scroll_2449473599, mousePosWindow_2449473600) {
  
}

function handleScroll_2449473601(self_2449473598, scroll_2449473599, mousePosWindow_2449473600) {
    chckNilDisp(self_2449473598);
    if (isObj(self_2449473598.m_type, NTI3204448278)) {
    handleScroll_3204448966(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    else {
    if (isObj(self_2449473598.m_type, NTI3154116612)) {
    handleScroll_3154117052(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    else {
    if (isObj(self_2449473598.m_type, NTI2449473540)) {
    handleScroll_2449473597(self_2449473598, scroll_2449473599, mousePosWindow_2449473600);
    }
    }}

  
}

function none_3204448468() {
  var result_3204448474 = ({val: null});

  return result_3204448474;

}

function some_3204448483(val_3204448485) {
  var result_3204448486 = ({val: null});

    if (!(!((val_3204448485 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3204448486.val = val_3204448485;

  return result_3204448486;

}

function getItemAtPixelPosition_3204448460(self_3204448461, posWindow_3204448462) {
  var result_3204448467 = ({val: null});

  BeforeRet: {
    result_3204448467 = nimCopy(result_3204448467, none_3204448468(), NTI3204448401);
    Label1: {
      var index_3204448478 = 0;
      var rect_3204448479 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872512 = 0;
      var L_536872513 = (self_3204448461.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872512 < L_536872513)) break Label3;
            index_3204448478 = self_3204448461.lastItems[chckIndx(i_536872512, 0, (self_3204448461.lastItems).length - 1)]["Field0"];
            rect_3204448479 = self_3204448461.lastItems[chckIndx(i_536872512, 0, (self_3204448461.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_3204448479, posWindow_3204448462) && (0 <= index_3204448478)) && (index_3204448478 <= (self_3204448461.completions).length - 1))) {
            result_3204448467 = nimCopy(result_3204448467, some_3204448483(self_3204448461.completions[chckIndx(index_3204448478, 0, (self_3204448461.completions).length - 1)]), NTI3204448401);
            break BeforeRet;
            }
            
            i_536872512 = addInt(i_536872512, 1);
            if (!(((self_3204448461.lastItems).length == L_536872513))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3204448467;

}

function isSome_3204448993(self_3204448995) {
  var result_3204448996 = false;

    result_3204448996 = !((self_3204448995.val == null));

  return result_3204448996;

}

function isNone_3204449021(self_3204449023) {
  var result_3204449024 = false;

    result_3204449024 = (self_3204449023.val == null);

  return result_3204449024;

}

function get_3204449013(self_3204449015) {
  var result_3204449016 = null;

    if (isNone_3204449021(self_3204449015)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204449016 = self_3204449015["val"];

  return result_3204449016;

}

function handleMousePress_3204448978(self_3204448979, button_3204448980, mousePosWindow_3204448981) {
      var Temporary1;

    if ((button_3204448980 == 0)) {
      var oHEX60gensym65_3204448988 = getItemAtPixelPosition_3204448460(self_3204448979, mousePosWindow_3204448981);
      if (!isSome_3204448993(oHEX60gensym65_3204448988)) Temporary1 = false; else {        var item_3204449039 = get_3204449013(oHEX60gensym65_3204448988);
        Temporary1 = true;      }    if (Temporary1) {
    self_3204448979.handleItemConfirmed(item_3204449039);
    popPopup_1291849122(self_3204448979.editor, self_3204448979);
    }
    
    }
    

  
}

function none_3154116880() {
  var result_3154116887 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3154116887;

}

function some_3154116915(val_3154116917) {
  var result_3154116918 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3154116918.has = true;
    result_3154116918.val = nimCopy(result_3154116918.val, val_3154116917, NTI2936014308);

  return result_3154116918;

}

function getItemAtPixelPosition_3154116871(self_3154116872, posWindow_3154116873) {
  var result_3154116879 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3154116879 = nimCopy(result_3154116879, none_3154116880(), NTI3154116752);
    Label1: {
      var index_3154116910 = 0;
      var rect_3154116911 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872516 = 0;
      var L_536872517 = (self_3154116872.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872516 < L_536872517)) break Label3;
            index_3154116910 = self_3154116872.lastItems[chckIndx(i_536872516, 0, (self_3154116872.lastItems).length - 1)]["Field0"];
            rect_3154116911 = self_3154116872.lastItems[chckIndx(i_536872516, 0, (self_3154116872.lastItems).length - 1)]["Field1"];
            if (((contains_2097152182(rect_3154116911, posWindow_3154116873) && (0 <= index_3154116910)) && (index_3154116910 <= (self_3154116872.completions).length - 1))) {
            result_3154116879 = nimCopy(result_3154116879, some_3154116915(self_3154116872.completions[chckIndx(index_3154116910, 0, (self_3154116872.completions).length - 1)]), NTI3154116752);
            break BeforeRet;
            }
            
            i_536872516 = addInt(i_536872516, 1);
            if (!(((self_3154116872.lastItems).length == L_536872517))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3154116879;

}

function isSome_3154117079(self_3154117081) {
  var result_3154117082 = false;

    result_3154117082 = self_3154117081.has;

  return result_3154117082;

}

function isNone_3154117104(self_3154117106) {
  var result_3154117107 = false;

    result_3154117107 = !(self_3154117106.has);

  return result_3154117107;

}

function get_3154117096(self_3154117098) {
  var result_3154117099 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3154117104(self_3154117098)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3154117099 = self_3154117098.val;

  return result_3154117099;

}

function handleMousePress_3154117064(self_3154117065, button_3154117066, mousePosWindow_3154117067) {
      var Temporary1;
    var Temporary2;

    if ((button_3154117066 == 0)) {
      var oHEX60gensym7_3154117074 = getItemAtPixelPosition_3154116871(self_3154117065, mousePosWindow_3154117067);
      if (!isSome_3154117079(oHEX60gensym7_3154117074)) Temporary1 = false; else {        var item_3154117119 = nimCopy(null, get_3154117096(oHEX60gensym7_3154117074), NTI2936014308);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3154117119;
    if (ConstSet330[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2936014307)); }
    self_3154117065.handleSymbolSelected(Temporary2.id);
    popPopup_1291849122(self_3154117065.editor, self_3154117065);
    }
    
    }
    

  
}

function handleMousePress_2449473602(self_2449473603, button_2449473604, mousePosWindow_2449473605) {
  
}

function handleMousePress_2449473606(self_2449473603, button_2449473604, mousePosWindow_2449473605) {
    chckNilDisp(self_2449473603);
    if (isObj(self_2449473603.m_type, NTI3204448278)) {
    handleMousePress_3204448978(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    else {
    if (isObj(self_2449473603.m_type, NTI3154116612)) {
    handleMousePress_3154117064(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    else {
    if (isObj(self_2449473603.m_type, NTI2449473540)) {
    handleMousePress_2449473602(self_2449473603, button_2449473604, mousePosWindow_2449473605);
    }
    }}

  
}

function handleMouseRelease_3204449042(self_3204449043, button_3204449044, mousePosWindow_3204449045) {
  
}

function handleMouseRelease_3154117122(self_3154117123, button_3154117124, mousePosWindow_3154117125) {
  
}

function handleMouseRelease_2449473607(self_2449473608, button_2449473609, mousePosWindow_2449473610) {
  
}

function handleMouseRelease_2449473611(self_2449473608, button_2449473609, mousePosWindow_2449473610) {
    chckNilDisp(self_2449473608);
    if (isObj(self_2449473608.m_type, NTI3204448278)) {
    handleMouseRelease_3204449042(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    else {
    if (isObj(self_2449473608.m_type, NTI3154116612)) {
    handleMouseRelease_3154117122(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    else {
    if (isObj(self_2449473608.m_type, NTI2449473540)) {
    handleMouseRelease_2449473607(self_2449473608, button_2449473609, mousePosWindow_2449473610);
    }
    }}

  
}

function handleMouseMove_3204449046(self_3204449047, mousePosWindow_3204449048, mousePosDelta_3204449049, modifiers_3204449050, buttons_3204449051) {
  
}

function handleMouseMove_3154117126(self_3154117127, mousePosWindow_3154117128, mousePosDelta_3154117129, modifiers_3154117130, buttons_3154117131) {
  
}

function handleMouseMove_2449473612(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617) {
  
}

function handleMouseMove_2449473618(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617) {
    chckNilDisp(self_2449473613);
    if (isObj(self_2449473613.m_type, NTI3204448278)) {
    handleMouseMove_3204449046(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    else {
    if (isObj(self_2449473613.m_type, NTI3154116612)) {
    handleMouseMove_3154117126(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    else {
    if (isObj(self_2449473613.m_type, NTI2449473540)) {
    handleMouseMove_2449473612(self_2449473613, mousePosWindow_2449473614, mousePosDelta_2449473615, modifiers_2449473616, buttons_2449473617);
    }
    }}

  
}

function calculateBounds_2516582729(self_2516582730, container_2516582731) {
  var result_2516582732 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2516582733 = ((container_2516582731.x + (self_2516582730.anchor.Field0.x * container_2516582731.w)) + self_2516582730.left);
    var top_2516582734 = ((container_2516582731.y + (self_2516582730.anchor.Field0.y * container_2516582731.h)) + self_2516582730.top);
    var right_2516582735 = ((container_2516582731.x + (self_2516582730.anchor.Field1.x * container_2516582731.w)) + self_2516582730.right);
    var bottom_2516582736 = ((container_2516582731.y + (self_2516582730.anchor.Field1.y * container_2516582731.h)) + self_2516582730.bottom);
    var px_2516582737 = (self_2516582730.pivot.x * (right_2516582735 - left_2516582733));
    var py_2516582738 = (self_2516582730.pivot.y * (bottom_2516582736 - top_2516582734));
    result_2516582732.x = (left_2516582733 - px_2516582737);
    result_2516582732.y = (top_2516582734 - py_2516582738);
    result_2516582732.w = (right_2516582735 - left_2516582733);
    result_2516582732.h = (bottom_2516582736 - top_2516582734);

  return result_2516582732;

}

function formatValue_2516582751(result_2516582753, result_2516582753_Idx, value_2516582754, specifier_2516582755) {
    formatValue_721420459(result_2516582753, result_2516582753_Idx, HEX24_2113929281(value_2516582754), specifier_2516582755);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872524 = 0;
      colontmp__536872524 = subInt((s_855638110).length, 1);
      var res_536872525 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872525 <= colontmp__536872524)) break Label3;
            iHEX60gensym7_855638117 = res_536872525;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872525 = addInt(res_536872525, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2130707356(aHEX60gensym45_2130707357) {
  var result_2130707358 = [];

    result_2130707358 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2130707362(aHEX60gensym45_2130707357.x) || [],[44,32] || [],HEX24_2130707362(aHEX60gensym45_2130707357.y) || [],[41] || []), NTI33554449);

  return result_2130707358;

}

function addQuoted_2516582835(s_2516582837, s_2516582837_Idx, x_2516582838) {
    s_2516582837[s_2516582837_Idx].push.apply(s_2516582837[s_2516582837_Idx], HEX24_2130707356(x_2516582838));;

  
}

function HEX24_2516582803(x_2516582805) {
  var result_2516582806 = [[]];

    result_2516582806[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym14_2516582817 = 0;
    if ((0 < countHEX60gensym14_2516582817)) {
    result_2516582806[0].push.apply(result_2516582806[0], [44,32]);;
    }
    
    result_2516582806[0].push.apply(result_2516582806[0], [109,105,110]);;
    result_2516582806[0].push.apply(result_2516582806[0], [58,32]);;
    countHEX60gensym14_2516582817 += 1;
    addQuoted_2516582835(result_2516582806, 0, x_2516582805["Field0"]);
    if ((0 < countHEX60gensym14_2516582817)) {
    result_2516582806[0].push.apply(result_2516582806[0], [44,32]);;
    }
    
    result_2516582806[0].push.apply(result_2516582806[0], [109,97,120]);;
    result_2516582806[0].push.apply(result_2516582806[0], [58,32]);;
    countHEX60gensym14_2516582817 += 1;
    addQuoted_2516582835(result_2516582806, 0, x_2516582805["Field1"]);
    result_2516582806[0].push.apply(result_2516582806[0], [41]);;

  return result_2516582806[0];

}

function formatValue_2516582798(result_2516582800, result_2516582800_Idx, value_2516582801, specifier_2516582802) {
    formatValue_721420459(result_2516582800, result_2516582800_Idx, HEX24_2516582803(value_2516582801), specifier_2516582802);

  
}

function formatValue_2516582865(result_2516582867, result_2516582867_Idx, value_2516582868, specifier_2516582869) {
    formatValue_721420459(result_2516582867, result_2516582867_Idx, HEX24_2130707356(value_2516582868), specifier_2516582869);

  
}

function layoutWidget_2516582739(self_2516582740, container_2516582741, frameIndex_2516582742, options_2516582743) {
    var newBounds_2516582744 = calculateBounds_2516582729(self_2516582740, container_2516582741);
    if (self_2516582740.logLayout) {
    var fmtRes_2516582750 = [mnewString(0)];
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2516582751(fmtRes_2516582750, 0, container_2516582741, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44,32]);;
    formatValue_2516582756(fmtRes_2516582750, 0, frameIndex_2516582742, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2516582798(fmtRes_2516582750, 0, self_2516582740.anchor, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2516582865(fmtRes_2516582750, 0, self_2516582740.pivot, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516582750, 0, self_2516582740.left, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44]);;
    formatValue_2516582876(fmtRes_2516582750, 0, self_2516582740.top, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516582750, 0, self_2516582740.right, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [44]);;
    formatValue_2516582876(fmtRes_2516582750, 0, self_2516582740.bottom, []);
    fmtRes_2516582750[0].push.apply(fmtRes_2516582750[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516582750, 0, newBounds_2516582744, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516582750[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2516582947(newBounds_2516582744, self_2516582740.lastBounds))) {
    var fmtRes_2516582962 = [mnewString(0)];
    fmtRes_2516582962[0].push.apply(fmtRes_2516582962[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2516582751(fmtRes_2516582962, 0, self_2516582740.lastBounds, []);
    fmtRes_2516582962[0].push.apply(fmtRes_2516582962[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516582962, 0, newBounds_2516582744, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516582962[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2516582947(newBounds_2516582744, self_2516582740.lastBounds))) {
    self_2516582740.lastBounds = nimCopy(self_2516582740.lastBounds, newBounds_2516582744, NTI2113929221);
    self_2516582740.lastBoundsChange = frameIndex_2516582742;
    }
    
    if (((frameIndex_2516582742 <= self_2516582740.lastHierarchyChange) || (frameIndex_2516582742 <= self_2516582740.lastBoundsChange))) {
    Label1: {
      var c_2516582980 = null;
      var i_536872520 = 0;
      var L_536872521 = (self_2516582740.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872520 < L_536872521)) break Label3;
            c_2516582980 = self_2516582740.children[chckIndx(i_536872520, 0, (self_2516582740.children).length - 1)];
            layoutWidget_2516582724(c_2516582980, newBounds_2516582744, frameIndex_2516582742, options_2516582743);
            i_536872520 = addInt(i_536872520, 1);
            if (!(((self_2516582740.children).length == L_536872521))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2516582455(self_2516582456) {
  var result_2516582457 = 0.0;

    result_2516582457 = (self_2516582456.bottom - self_2516582456.top);

  return result_2516582457;

}

function layoutWidget_2516583213(self_2516583214, container_2516583215, frameIndex_2516583216, options_2516583217) {
    var newBounds_2516583218 = calculateBounds_2516582729(self_2516583214, container_2516583215);
    if (self_2516583214.logLayout) {
    var fmtRes_2516583224 = [mnewString(0)];
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2516582751(fmtRes_2516583224, 0, container_2516583215, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44,32]);;
    formatValue_2516582756(fmtRes_2516583224, 0, frameIndex_2516583216, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2516582798(fmtRes_2516583224, 0, self_2516583214.anchor, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2516582865(fmtRes_2516583224, 0, self_2516583214.pivot, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583224, 0, self_2516583214.left, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44]);;
    formatValue_2516582876(fmtRes_2516583224, 0, self_2516583214.top, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583224, 0, self_2516583214.right, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [44]);;
    formatValue_2516582876(fmtRes_2516583224, 0, self_2516583214.bottom, []);
    fmtRes_2516583224[0].push.apply(fmtRes_2516583224[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583224, 0, newBounds_2516583218, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583224[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583218, self_2516583214.lastBounds))) {
    var fmtRes_2516583279 = [mnewString(0)];
    fmtRes_2516583279[0].push.apply(fmtRes_2516583279[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2516582751(fmtRes_2516583279, 0, self_2516583214.lastBounds, []);
    fmtRes_2516583279[0].push.apply(fmtRes_2516583279[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583279, 0, newBounds_2516583218, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583279[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583218, self_2516583214.lastBounds))) {
    self_2516583214.lastBounds = nimCopy(self_2516583214.lastBounds, newBounds_2516583218, NTI2113929221);
    self_2516583214.lastBoundsChange = frameIndex_2516583216;
    }
    
    if (((frameIndex_2516583216 <= self_2516583214.lastHierarchyChange) || (frameIndex_2516583216 <= self_2516583214.lastBoundsChange))) {
    var lastY_2516583294 = 0.0;
    Label1: {
      var c_2516583298 = null;
      var i_536872528 = 0;
      var L_536872529 = (self_2516583214.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872528 < L_536872529)) break Label3;
            c_2516583298 = self_2516583214.children[chckIndx(i_536872528, 0, (self_2516583214.children).length - 1)];
            var height_2516583299 = height_2516582455(c_2516583298);
            c_2516583298.top = lastY_2516583294;
            c_2516583298.bottom = (lastY_2516583294 + height_2516583299);
            layoutWidget_2516582724(c_2516583298, newBounds_2516583218, frameIndex_2516583216, options_2516583217);
            lastY_2516583294 = ((c_2516583298.lastBounds.y + c_2516583298.lastBounds.h) - newBounds_2516583218.y);
            i_536872528 = addInt(i_536872528, 1);
            if (!(((self_2516583214.children).length == L_536872529))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2516583114() {
  var result_2516583121 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2516583121;

}

function isSome_2516583134(self_2516583136) {
  var result_2516583137 = false;

    result_2516583137 = self_2516583136.has;

  return result_2516583137;

}

function isNone_2516583159(self_2516583161) {
  var result_2516583162 = false;

    result_2516583162 = !(self_2516583161.has);

  return result_2516583162;

}

function get_2516583151(self_2516583153) {
  var result_2516583154 = null;

  BeforeRet: {
    if (isNone_2516583159(self_2516583153)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2516583154 = self_2516583153.val;
    break BeforeRet;
  };

  return result_2516583154;

}

function some_2516583196(val_2516583198) {
  var result_2516583199 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2516583199.has = true;
    result_2516583199.val = nimCopy(result_2516583199.val, val_2516583198, NTI2113929221);

  return result_2516583199;

}

function layoutWidget_2516582981(self_2516582982, container_2516582983, frameIndex_2516582984, options_2516582985) {
            var Temporary10;

    var newBounds_2516582986 = calculateBounds_2516582729(self_2516582982, container_2516582983);
    if (self_2516582982.logLayout) {
    var fmtRes_2516582992 = [mnewString(0)];
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2516582751(fmtRes_2516582992, 0, container_2516582983, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44,32]);;
    formatValue_2516582756(fmtRes_2516582992, 0, frameIndex_2516582984, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2516582798(fmtRes_2516582992, 0, self_2516582982.anchor, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2516582865(fmtRes_2516582992, 0, self_2516582982.pivot, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516582992, 0, self_2516582982.left, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44]);;
    formatValue_2516582876(fmtRes_2516582992, 0, self_2516582982.top, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516582992, 0, self_2516582982.right, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [44]);;
    formatValue_2516582876(fmtRes_2516582992, 0, self_2516582982.bottom, []);
    fmtRes_2516582992[0].push.apply(fmtRes_2516582992[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516582992, 0, newBounds_2516582986, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516582992[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2516582947(newBounds_2516582986, self_2516582982.lastBounds))) {
    var fmtRes_2516583047 = [mnewString(0)];
    fmtRes_2516583047[0].push.apply(fmtRes_2516583047[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2516582751(fmtRes_2516583047, 0, self_2516582982.lastBounds, []);
    fmtRes_2516583047[0].push.apply(fmtRes_2516583047[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583047, 0, newBounds_2516582986, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583047[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2516582947(newBounds_2516582986, self_2516582982.lastBounds))) {
    self_2516582982.lastBounds = nimCopy(self_2516582982.lastBounds, newBounds_2516582986, NTI2113929221);
    self_2516582982.lastBoundsChange = frameIndex_2516582984;
    }
    
    if (((frameIndex_2516582984 <= self_2516582982.lastHierarchyChange) || (frameIndex_2516582984 <= self_2516582982.lastBoundsChange))) {
    Label1: {
      var i_2516583094 = 0;
      var c_2516583095 = null;
      var i_536872537 = 0;
      var L_536872538 = (self_2516582982.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872537 < L_536872538)) break Label3;
            i_2516583094 = i_536872537;
            c_2516583095 = self_2516582982.children[chckIndx(i_536872537, 0, (self_2516582982.children).length - 1)];
            var oldBounds_2516583096 = nimCopy(null, c_2516583095.lastBounds, NTI2113929221);
            layoutWidget_2516582724(c_2516583095, newBounds_2516582986, frameIndex_2516582984, options_2516582985);
            var newBounds_2516583097 = nimCopy(null, c_2516583095.lastBounds, NTI2113929221);
            if ((!(HEX3DHEX3D_2516582947(oldBounds_2516583096, newBounds_2516583097)) && !(contains_2097152186(newBounds_2516583097, oldBounds_2516583096)))) {
            var invalidationRect_2516583102 = nimCopy(null, oldBounds_2516583096, NTI2113929221);
            Label4: {
              var k_2516583108 = 0;
              var colontmp__536872533 = 0;
              colontmp__536872533 = subInt(i_2516583094, 1);
              var res_536872534 = colontmp__536872533;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872534)) break Label6;
                    k_2516583108 = res_536872534;
                    invalidate_2516582631(self_2516582982.children[chckIndx(k_2516583108, 0, (self_2516582982.children).length - 1)], frameIndex_2516582984, invalidationRect_2516583102);
                    if (contains_2097152186(self_2516582982.children[chckIndx(k_2516583108, 0, (self_2516582982.children).length - 1)].lastBounds, invalidationRect_2516583102)) {
                    break Label4;
                    }
                    
                    res_536872534 = subInt(res_536872534, 1);
                  }
              };
            };
            }
            
            i_536872537 = addInt(i_536872537, 1);
            if (!(((self_2516582982.children).length == L_536872538))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2516583122 = [none_2516583114()];
    Label7: {
      var i_2516583128 = 0;
      var c_2516583129 = null;
      var i_536872541 = 0;
      var L_536872542 = (self_2516582982.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872541 < L_536872542)) break Label9;
            i_2516583128 = i_536872541;
            c_2516583129 = self_2516582982.children[chckIndx(i_536872541, 0, (self_2516582982.children).length - 1)];
            if (isSome_2516583134(invalidationRect_2516583122[0])) {
            invalidate_2516582631(c_2516583129, frameIndex_2516582984, get_2516583151(invalidationRect_2516583122[0]));
            }
            
            if (isSome_2516583134(invalidationRect_2516583122[0])) {
            Temporary10 = some_2516583196(or_2113929296(get_2516583151(invalidationRect_2516583122[0]), c_2516583129.lastBounds));
            }
            else {
            Temporary10 = some_2516583196(c_2516583129.lastBounds);
            }
            
            invalidationRect_2516583122[0] = nimCopy(invalidationRect_2516583122[0], Temporary10, NTI2516582830);
            i_536872541 = addInt(i_536872541, 1);
            if (!(((self_2516582982.children).length == L_536872542))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2634022922(x_2634022924, x_2634022924_Idx, y_2634022925) {
    x_2634022924[x_2634022924_Idx] = (x_2634022924[x_2634022924_Idx] - y_2634022925);

  
}

function layoutWidget_2516583387(self_2516583388, container_2516583389, frameIndex_2516583390, options_2516583391) {
    var newBounds_2516583392 = calculateBounds_2516582729(self_2516583388, container_2516583389);
    if (self_2516583388.sizeToContent) {
    var size_2516583393 = options_2516583391.getTextBounds(self_2516583388.text);
    var incX_2516583394 = max_33555642((size_2516583393.x - newBounds_2516583392.w), 0.0);
    var incY_2516583395 = max_33555642((size_2516583393.y - newBounds_2516583392.h), 0.0);
    newBounds_2516583392.w = size_2516583393.x;
    newBounds_2516583392.h = size_2516583393.y;
    HEX2DHEX3D_2634022922(newBounds_2516583392, "x", (incX_2516583394 * self_2516583388.pivot.x));
    HEX2DHEX3D_2634022922(newBounds_2516583392, "y", (incY_2516583395 * self_2516583388.pivot.y));
    }
    
    if (self_2516583388.logLayout) {
    var fmtRes_2516583409 = [mnewString(0)];
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2516583409, 0, self_2516583388.text, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [39,44,32]);;
    formatValue_2516582751(fmtRes_2516583409, 0, container_2516583389, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44,32]);;
    formatValue_2516582756(fmtRes_2516583409, 0, frameIndex_2516583390, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2516582798(fmtRes_2516583409, 0, self_2516583388.anchor, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2516582865(fmtRes_2516583409, 0, self_2516583388.pivot, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583409, 0, self_2516583388.left, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44]);;
    formatValue_2516582876(fmtRes_2516583409, 0, self_2516583388.top, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583409, 0, self_2516583388.right, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [44]);;
    formatValue_2516582876(fmtRes_2516583409, 0, self_2516583388.bottom, []);
    fmtRes_2516583409[0].push.apply(fmtRes_2516583409[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583409, 0, newBounds_2516583392, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583409[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583392, self_2516583388.lastBounds))) {
    var fmtRes_2516583464 = [mnewString(0)];
    fmtRes_2516583464[0].push.apply(fmtRes_2516583464[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2516582751(fmtRes_2516583464, 0, self_2516583388.lastBounds, []);
    fmtRes_2516583464[0].push.apply(fmtRes_2516583464[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583464, 0, newBounds_2516583392, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583464[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583392, self_2516583388.lastBounds))) {
    self_2516583388.lastBounds = nimCopy(self_2516583388.lastBounds, newBounds_2516583392, NTI2113929221);
    self_2516583388.lastBoundsChange = frameIndex_2516583390;
    }
    

  
}

function width_2516582452(self_2516582453) {
  var result_2516582454 = 0.0;

    result_2516582454 = (self_2516582453.right - self_2516582453.left);

  return result_2516582454;

}

function layoutWidget_2516583300(self_2516583301, container_2516583302, frameIndex_2516583303, options_2516583304) {
    var newBounds_2516583305 = calculateBounds_2516582729(self_2516583301, container_2516583302);
    if (self_2516583301.logLayout) {
    var fmtRes_2516583311 = [mnewString(0)];
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2516582751(fmtRes_2516583311, 0, container_2516583302, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44,32]);;
    formatValue_2516582756(fmtRes_2516583311, 0, frameIndex_2516583303, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2516582798(fmtRes_2516583311, 0, self_2516583301.anchor, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2516582865(fmtRes_2516583311, 0, self_2516583301.pivot, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583311, 0, self_2516583301.left, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44]);;
    formatValue_2516582876(fmtRes_2516583311, 0, self_2516583301.top, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44,32]);;
    formatValue_2516582876(fmtRes_2516583311, 0, self_2516583301.right, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [44]);;
    formatValue_2516582876(fmtRes_2516583311, 0, self_2516583301.bottom, []);
    fmtRes_2516583311[0].push.apply(fmtRes_2516583311[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583311, 0, newBounds_2516583305, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583311[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583305, self_2516583301.lastBounds))) {
    var fmtRes_2516583366 = [mnewString(0)];
    fmtRes_2516583366[0].push.apply(fmtRes_2516583366[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2516582751(fmtRes_2516583366, 0, self_2516583301.lastBounds, []);
    fmtRes_2516583366[0].push.apply(fmtRes_2516583366[0], [32,45,62,32]);;
    formatValue_2516582751(fmtRes_2516583366, 0, newBounds_2516583305, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2516583366[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2516582947(newBounds_2516583305, self_2516583301.lastBounds))) {
    self_2516583301.lastBounds = nimCopy(self_2516583301.lastBounds, newBounds_2516583305, NTI2113929221);
    self_2516583301.lastBoundsChange = frameIndex_2516583303;
    }
    
    if (((frameIndex_2516583303 <= self_2516583301.lastHierarchyChange) || (frameIndex_2516583303 <= self_2516583301.lastBoundsChange))) {
    var lastX_2516583381 = 0.0;
    Label1: {
      var c_2516583385 = null;
      var i_536872545 = 0;
      var L_536872546 = (self_2516583301.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872545 < L_536872546)) break Label3;
            c_2516583385 = self_2516583301.children[chckIndx(i_536872545, 0, (self_2516583301.children).length - 1)];
            var width_2516583386 = width_2516582452(c_2516583385);
            c_2516583385.left = lastX_2516583381;
            c_2516583385.right = (lastX_2516583381 + width_2516583386);
            layoutWidget_2516582724(c_2516583385, newBounds_2516583305, frameIndex_2516583303, options_2516583304);
            lastX_2516583381 = ((c_2516583385.lastBounds.x + c_2516583385.lastBounds.w) - newBounds_2516583305.x);
            i_536872545 = addInt(i_536872545, 1);
            if (!(((self_2516583301.children).length == L_536872546))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2516582719(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723) {
  
}

function layoutWidget_2516582724(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723) {
    chckNilDisp(self_2516582720);
    if (isObj(self_2516582720.m_type, NTI2516582412)) {
    layoutWidget_2516582739(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    else {
    if (isObj(self_2516582720.m_type, NTI2516582416)) {
    layoutWidget_2516583213(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    else {
    if (isObj(self_2516582720.m_type, NTI2516582414)) {
    layoutWidget_2516582981(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    else {
    if (isObj(self_2516582720.m_type, NTI2516582420)) {
    layoutWidget_2516583387(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    else {
    if (isObj(self_2516582720.m_type, NTI2516582418)) {
    layoutWidget_2516583300(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    else {
    if (isObj(self_2516582720.m_type, NTI2516582410)) {
    layoutWidget_2516582719(self_2516582720, bounds_2516582721, frameIndex_2516582722, options_2516582723);
    }
    }}}}}

  
}

function invoke_3305111795(event_3305111797, arg_3305111798) {
    Label1: {
      var h_3305111821 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872550 = 0;
      var L_536872551 = (event_3305111797.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872550 < L_536872551)) break Label3;
            h_3305111821 = event_3305111797.handlers[chckIndx(i_536872550, 0, (event_3305111797.handlers).length - 1)];
            h_3305111821.Field1(arg_3305111798);
            i_536872550 = addInt(i_536872550, 1);
            if (!(((event_3305111797.handlers).length == L_536872551))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3305112662(self_3305112663, redrawEverything_3305112664) {
    invoke_3305111795(self_3305112663.onResized, redrawEverything_3305112664);

  
}

function requestRender_2499805287(self_2499805288, redrawEverything_2499805289) {
  
}

function requestRender_2499805290(self_2499805288, redrawEverything_2499805289) {
    chckNilDisp(self_2499805288);
    if (isObj(self_2499805288.m_type, NTI3305111563)) {
    requestRender_3305112662(self_2499805288, redrawEverything_2499805289);
    }
    else {
    if (isObj(self_2499805288.m_type, NTI2499805188)) {
    requestRender_2499805287(self_2499805288, redrawEverything_2499805289);
    }
    }

  
}

function size_3305112693(self_3305112694) {
  var result_3305112695 = ({x: 0.0, y: 0.0});

    result_3305112695 = nimCopy(result_3305112695, vec2_2130707293(self_3305112694.content.clientWidth, self_3305112694.content.clientHeight), NTI2130706720);

  return result_3305112695;

}

function size_2499805301(self_2499805302) {
  var result_2499805303 = ({x: 0.0, y: 0.0});

  return result_2499805303;

}

function size_2499805304(self_2499805302) {
  var result_2499805305 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2499805302);
    if (isObj(self_2499805302.m_type, NTI3305111563)) {
    result_2499805305 = nimCopy(result_2499805305, size_3305112693(self_2499805302), NTI2130706720);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805302.m_type, NTI2499805188)) {
    result_2499805305 = nimCopy(result_2499805305, size_2499805301(self_2499805302), NTI2130706720);
    break BeforeRet;
    }
    }
  };

  return result_2499805305;

}

function createOrReplaceElement_3305112862(element_3305112863, element_3305112863_Idx, name_3305112864, nameUpper_3305112865) {
    if ((element_3305112863[element_3305112863_Idx] == null)) {
    element_3305112863[element_3305112863_Idx] = document.createElement(name_3305112864);
    element_3305112863[element_3305112863_Idx].className = "widget";
    }
    else {
    if (!((element_3305112863[element_3305112863_Idx].nodeName == nameUpper_3305112865))) {
    var dif_3305112869 = document.createElement(name_3305112864);
    element_3305112863[element_3305112863_Idx].replaceWith(dif_3305112869);
    element_3305112863[element_3305112863_Idx] = dif_3305112869;
    element_3305112863[element_3305112863_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2097152159(a_2097152160, b_2097152161) {
  var result_2097152162 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152162.x = (a_2097152160.x - b_2097152161.x);
    result_2097152162.y = (a_2097152160.y - b_2097152161.y);
    result_2097152162.w = a_2097152160.w;
    result_2097152162.h = a_2097152160.h;

  return result_2097152162;

}

function myToHtmlHex_3305112873(c_3305112874) {
  var result_3305112875 = null;

    const hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];let result = '#';
    var r_3305112876 = (((c_3305112874.r * 255.0)) | 0);
    var g_3305112877 = (((c_3305112874.g * 255.0)) | 0);
    var b_3305112878 = (((c_3305112874.b * 255.0)) | 0);
    var cr1_3305112879 = (r_3305112876 & 15);
    var cr2_3305112884 = ((r_3305112876 >> 4) & 15);
    var cg1_3305112885 = (g_3305112877 & 15);
    var cg2_3305112890 = ((g_3305112877 >> 4) & 15);
    var cb1_3305112891 = (b_3305112878 & 15);
    var cb2_3305112896 = ((b_3305112878 >> 4) & 15);
    result += hexChars[cr2_3305112884];
    result += hexChars[cr1_3305112879];
    result += hexChars[cg2_3305112890];
    result += hexChars[cg1_3305112885];
    result += hexChars[cb2_3305112896];
    result += hexChars[cb1_3305112891];
    result_3305112875 = result;

  return result_3305112875;

}

function getTextStyle_3305113038(x_3305113039, y_3305113040, width_3305113041, height_3305113042, color_3305113043, backgroundColor_3305113044) {
  var result_3305113045 = null;

    result_3305113045 = `left: ${x_3305113039}px; top: ${y_3305113040}px; width: ${width_3305113041}px; height: ${height_3305113042}px; overflow: visible; color: ${color_3305113043}; ${backgroundColor_3305113044}`

  return result_3305113045;

}

function pop_3305112837(s_3305112839, s_3305112839_Idx) {
  var result_3305112840 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3305112844 = subInt((s_3305112839[s_3305112839_Idx]).length, 1);
    result_3305112840 = nimCopy(result_3305112840, s_3305112839[s_3305112839_Idx][chckIndx(L_3305112844, 0, (s_3305112839[s_3305112839_Idx]).length - 1)], NTI2113929221);
    if (s_3305112839[s_3305112839_Idx].length < chckRange(L_3305112844, 0, 2147483647)) { for (var i = s_3305112839[s_3305112839_Idx].length ; i < chckRange(L_3305112844, 0, 2147483647) ; ++i) s_3305112839[s_3305112839_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3305112839[s_3305112839_Idx].length = chckRange(L_3305112844, 0, 2147483647); };

  return result_3305112840;

}

function renderWidget_3305113046(self_3305113047, renderer_3305113048, element_3305113049, element_3305113049_Idx, forceRedraw_3305113050, frameIndex_3305113051, buffer_3305113052, buffer_3305113052_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3305113082() {
        element_3305113049[element_3305113049_Idx].setAttribute("style", getTextStyle_3305113038(((relBounds_3305113065.x) | 0), ((relBounds_3305113065.y) | 0), ((relBounds_3305113065.w) | 0), ((relBounds_3305113065.h) | 0), color_3305113073, backgroundColor_3305113081));
        if (updateText_3305113075) {
        element_3305113049[element_3305113049_Idx].innerText = text_3305113074;
        element_3305113049[element_3305113049_Idx].setAttribute("data-text", text_3305113074);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3305113047.lastHierarchyChange < frameIndex_3305113051) && (self_3305113047.lastBoundsChange < frameIndex_3305113051)) && (self_3305113047.lastInvalidation < frameIndex_3305113051)) && !(forceRedraw_3305113050))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112862(element_3305113049, element_3305113049_Idx, "span", "SPAN");
    var relBounds_3305113065 = HEX2D_2097152159(self_3305113047.lastBounds, xy_2113929248(renderer_3305113048.boundsStack[chckIndx((renderer_3305113048.boundsStack).length - 1, 0, (renderer_3305113048.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3305113047.lastBounds, NTI2113929221);
    renderer_3305113048.boundsStack.push(Temporary1);;
    try {
    var color_3305113073 = myToHtmlHex_3305112873(self_3305113047.foregroundColor);
    var text_3305113074 = toJSStr(self_3305113047.text);
    var updateText_3305113075 = !((element_3305113049[element_3305113049_Idx].getAttribute("data-text") == text_3305113074));
    if (self_3305113047.fillBackground) {
    var fmtRes_3305113080 = [mnewString(0)];
    fmtRes_3305113080[0].push.apply(fmtRes_3305113080[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3305113080, 0, myToHtmlHex_3305112873(self_3305113047.backgroundColor));
    fmtRes_3305113080[0].push.apply(fmtRes_3305113080[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3305113080[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3305113081 = Temporary3;
    renderer_3305113048.domUpdates.push(HEX3Aanonymous_3305113082);;
    self_3305113047.lastRenderedText = nimCopy(null, self_3305113047.text, NTI33554449);
    } finally {
    var _ = pop_3305112837(renderer_3305113048, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3305112870(element_3305112871, element_3305112871_Idx, bounds_3305112872) {
    element_3305112871[element_3305112871_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3305112872.x) | 0)));
    element_3305112871[element_3305112871_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3305112872.y) | 0)));
    element_3305112871[element_3305112871_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3305112872.w) | 0)));
    element_3305112871[element_3305112871_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3305112872.h) | 0)));

  
}

function renderWidget_3305112990(self_3305112991, renderer_3305112992, element_3305112993, element_3305112993_Idx, forceRedraw_3305112994, frameIndex_3305112995, buffer_3305112996, buffer_3305112996_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3305112991.lastHierarchyChange < frameIndex_3305112995) && (self_3305112991.lastBoundsChange < frameIndex_3305112995)) && (self_3305112991.lastInvalidation < frameIndex_3305112995)) && !(forceRedraw_3305112994))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112862(element_3305112993, element_3305112993_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3305112991.children).length < (element_3305112993[element_3305112993_Idx].children).length)) break Label2;
          element_3305112993[element_3305112993_Idx].removeChild(element_3305112993[element_3305112993_Idx].lastChild);
        }
    };
    var relBounds_3305113015 = HEX2D_2097152159(self_3305112991.lastBounds, xy_2113929248(renderer_3305112992.boundsStack[chckIndx((renderer_3305112992.boundsStack).length - 1, 0, (renderer_3305112992.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3305112991.lastBounds, NTI2113929221);
    renderer_3305112992.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3305112870(element_3305112993, element_3305112993_Idx, relBounds_3305113015);
    var existingCount_3305113026 = (element_3305112993[element_3305112993_Idx].children).length;
    Label5: {
      var i_3305113032 = 0;
      var c_3305113033 = null;
      var i_536872555 = 0;
      var L_536872556 = (self_3305112991.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872555 < L_536872556)) break Label7;
            i_3305113032 = i_536872555;
            c_3305113033 = self_3305112991.children[chckIndx(i_536872555, 0, (self_3305112991.children).length - 1)];
            if ((i_3305113032 < existingCount_3305113026)) {
            Temporary8 = element_3305112993[element_3305112993_Idx].children[chckIndx(i_3305113032, 0, (element_3305112993[element_3305112993_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3305113034 = [Temporary8];
            renderWidget_3305112779(c_3305113033, renderer_3305112992, childElement_3305113034, 0, (forceRedraw_3305112994 || self_3305112991.fillBackground), frameIndex_3305112995, buffer_3305112996, buffer_3305112996_Idx);
            if (((existingCount_3305113026 <= i_3305113032) && !((childElement_3305113034[0] == null)))) {
            element_3305112993[element_3305112993_Idx].appendChild(childElement_3305113034[0]);
            }
            
            i_536872555 = addInt(i_536872555, 1);
            if (!(((self_3305112991.children).length == L_536872556))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3305112837(renderer_3305112992, "boundsStack");
    }
  };

  
}

function renderWidget_3305112897(self_3305112898, renderer_3305112899, element_3305112900, element_3305112900_Idx, forceRedraw_3305112901, frameIndex_3305112902, buffer_3305112903, buffer_3305112903_Idx) {
    var Temporary5;
    
function HEX3Aanonymous_3305112936() {
        element_3305112900[element_3305112900_Idx].className = "widget";
        var fmtRes_3305112941 = [mnewString(0)];
        fmtRes_3305112941[0].push.apply(fmtRes_3305112941[0], [108,101,102,116,58,32]);;
        formatValue_2516582756(fmtRes_3305112941, 0, ((relBounds_3305112922.x) | 0), []);
        fmtRes_3305112941[0].push.apply(fmtRes_3305112941[0], [112,120,59,32,116,111,112,58,32]);;
        formatValue_2516582756(fmtRes_3305112941, 0, ((relBounds_3305112922.y) | 0), []);
        fmtRes_3305112941[0].push.apply(fmtRes_3305112941[0], [112,120,59,32,119,105,100,116,104,58,32]);;
        formatValue_2516582756(fmtRes_3305112941, 0, ((relBounds_3305112922.w) | 0), []);
        fmtRes_3305112941[0].push.apply(fmtRes_3305112941[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
        formatValue_2516582756(fmtRes_3305112941, 0, ((relBounds_3305112922.h) | 0), []);
        fmtRes_3305112941[0].push.apply(fmtRes_3305112941[0], [112,120,59,32]);;
        formatValue_721420459(fmtRes_3305112941, 0, backgroundColor_3305112935, []);
        element_3305112900[element_3305112900_Idx].setAttribute("style", toJSStr(fmtRes_3305112941[0]));

      
    }
            var Temporary9;

  BeforeRet: {
    if (((((self_3305112898.lastHierarchyChange < frameIndex_3305112902) && (self_3305112898.lastBoundsChange < frameIndex_3305112902)) && (self_3305112898.lastInvalidation < frameIndex_3305112902)) && !(forceRedraw_3305112901))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112862(element_3305112900, element_3305112900_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3305112898.children).length < (element_3305112900[element_3305112900_Idx].children).length)) break Label2;
          element_3305112900[element_3305112900_Idx].removeChild(element_3305112900[element_3305112900_Idx].lastChild);
        }
    };
    var relBounds_3305112922 = HEX2D_2097152159(self_3305112898.lastBounds, xy_2113929248(renderer_3305112899.boundsStack[chckIndx((renderer_3305112899.boundsStack).length - 1, 0, (renderer_3305112899.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3305112898.lastBounds, NTI2113929221);
    renderer_3305112899.boundsStack.push(Temporary3);;
    try {
    if (self_3305112898.fillBackground) {
    var fmtRes_3305112934 = [mnewString(0)];
    fmtRes_3305112934[0].push.apply(fmtRes_3305112934[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3305112934, 0, myToHtmlHex_3305112873(self_3305112898.backgroundColor));
    fmtRes_3305112934[0].push.apply(fmtRes_3305112934[0], [59]);;
    Temporary5 = fmtRes_3305112934[0];
    }
    else {
    Temporary5 = [];
    }
    
    var backgroundColor_3305112935 = nimCopy(null, Temporary5, NTI33554449);
    renderer_3305112899.domUpdates.push(HEX3Aanonymous_3305112936);;
    var existingCount_3305112969 = (element_3305112900[element_3305112900_Idx].children).length;
    Label6: {
      var i_3305112975 = 0;
      var c_3305112976 = null;
      var i_536872560 = 0;
      var L_536872561 = (self_3305112898.children).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872560 < L_536872561)) break Label8;
            i_3305112975 = i_536872560;
            c_3305112976 = self_3305112898.children[chckIndx(i_536872560, 0, (self_3305112898.children).length - 1)];
            if ((i_3305112975 < existingCount_3305112969)) {
            Temporary9 = element_3305112900[element_3305112900_Idx].children[chckIndx(i_3305112975, 0, (element_3305112900[element_3305112900_Idx].children).length - 1)];
            }
            else {
            Temporary9 = null;
            }
            
            var childElement_3305112977 = [Temporary9];
            renderWidget_3305112779(c_3305112976, renderer_3305112899, childElement_3305112977, 0, (forceRedraw_3305112901 || self_3305112898.fillBackground), frameIndex_3305112902, buffer_3305112903, buffer_3305112903_Idx);
            if (((existingCount_3305112969 <= i_3305112975) && !((childElement_3305112977[0] == null)))) {
            element_3305112900[element_3305112900_Idx].appendChild(childElement_3305112977[0]);
            }
            
            i_536872560 = addInt(i_536872560, 1);
            if (!(((self_3305112898.children).length == L_536872561))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3305112837(renderer_3305112899, "boundsStack");
    }
  };

  
}

function renderWidget_3305112772(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx) {
  
}

function renderWidget_3305112779(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx) {
    chckNilDisp(self_3305112773);
    if (isObj(self_3305112773.m_type, NTI2516582420)) {
    renderWidget_3305113046(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx);
    }
    else {
    if (isObj(self_3305112773.m_type, NTI2516582414)) {
    renderWidget_3305112990(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx);
    }
    else {
    if (isObj(self_3305112773.m_type, NTI2516582412)) {
    renderWidget_3305112897(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx);
    }
    else {
    if (isObj(self_3305112773.m_type, NTI2516582410)) {
    renderWidget_3305112772(self_3305112773, renderer_3305112774, element_3305112775, element_3305112775_Idx, forceRedraw_3305112776, frameIndex_3305112777, buffer_3305112778, buffer_3305112778_Idx);
    }
    }}}

  
}

function applyDomUpdates_3305112780(self_3305112781) {
    Label1: {
      var update_3305112804 = null;
      var i_536872565 = 0;
      var L_536872566 = (self_3305112781.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872565 < L_536872566)) break Label3;
            update_3305112804 = self_3305112781.domUpdates[chckIndx(i_536872565, 0, (self_3305112781.domUpdates).length - 1)];
            update_3305112804();
            i_536872565 = addInt(i_536872565, 1);
            if (!(((self_3305112781.domUpdates).length == L_536872566))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3305112781.domUpdates.length < 0) { for (var i = self_3305112781.domUpdates.length ; i < 0 ; ++i) self_3305112781.domUpdates.push(null); }
               else { self_3305112781.domUpdates.length = 0; };

  
}

function render_3305112829(self_3305112830, widget_3305112831, frameIndex_3305112832) {
    var Temporary2;

    self_3305112830.boundsStack.push(rect_2113929240(vec2_2130707254(), size_2499805304(self_3305112830)));;
    try {
    var buffer_3305112849 = [[]];
    if ((0 < (self_3305112830.content.children).length)) {
    Temporary2 = self_3305112830.content.children[chckIndx(0, 0, (self_3305112830.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3305112854 = [Temporary2];
    var wasNil_3305112858 = (element_3305112854[0] == null);
    renderWidget_3305112779(widget_3305112831, self_3305112830, element_3305112854, 0, self_3305112830.redrawEverything, frameIndex_3305112832, buffer_3305112849, 0);
    applyDomUpdates_3305112780(self_3305112830);
    if ((!((element_3305112854[0] == null)) && wasNil_3305112858)) {
    self_3305112830.content.appendChild(element_3305112854[0]);
    }
    
    self_3305112830.redrawEverything = false;
    } finally {
    var _ = pop_3305112837(self_3305112830, "boundsStack");
    }

  
}

function render_2499805291(self_2499805292, widget_2499805293, frameIndex_2499805294) {
  
}

function render_2499805295(self_2499805292, widget_2499805293, frameIndex_2499805294) {
    chckNilDisp(self_2499805292);
    if (isObj(self_2499805292.m_type, NTI3305111563)) {
    render_3305112829(self_2499805292, widget_2499805293, frameIndex_2499805294);
    }
    else {
    if (isObj(self_2499805292.m_type, NTI2499805188)) {
    render_2499805291(self_2499805292, widget_2499805293, frameIndex_2499805294);
    }
    }

  
}

function sizeChanged_2499805296(self_2499805297) {
  var result_2499805298 = false;

  return result_2499805298;

}

function sizeChanged_2499805299(self_2499805297) {
  var result_2499805300 = false;

  BeforeRet: {
    result_2499805300 = sizeChanged_2499805296(self_2499805297);
    break BeforeRet;
  };

  return result_2499805300;

}

function initDoublyLinkedList_3305111706() {
  var result_3305111708 = ({head: null, tail: null});

  return result_3305111708;

}

function initTable_3305111712(initialSize_3305111715) {
  var result_3305111716 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3305111718 = slotsNeeded_1308622891(chckRange(initialSize_3305111715, 0, 2147483647));
    result_3305111716.counter = 0;
    result_3305111716.data = new Array(chckRange(correctSizeHEX60gensym3_3305111718, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3305111718, 0, 2147483647) ; ++i) { result_3305111716.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3305111716;

}

function newLruCache_3305111696(capacity_3305111699, recordRemovedKeys_3305111700) {
  var result_3305111701 = null;

    result_3305111701 = {capacity: capacity_3305111699, list: initDoublyLinkedList_3305111706(), table: initTable_3305111712(correctSize_3019898901(capacity_3305111699)), recordRemovedKeys: recordRemovedKeys_3305111700, removedKeys: ({data: [], counter: 0})};

  return result_3305111701;

}

function getModifiers_3305111636(self_3305111637) {
  var result_3305111638 = {};

    if (self_3305111637.altKey) {
    result_3305111638[2] = true;
    }
    
    if (self_3305111637.shiftKey) {
    result_3305111638[1] = true;
    }
    
    if (self_3305111637.ctrlKey) {
    result_3305111638[0] = true;
    }
    

  return result_3305111638;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3305111630(key_3305111631, code_3305111632, keyCode_3305111633) {
  var result_3305112768 = 0;

    switch (key_3305111631) {
    case "Enter":
      result_3305112768 = -1;
      break;
    case "Escape":
      result_3305112768 = -2;
      break;
    case "Backspace":
      result_3305112768 = -3;
      break;
    case " ":
      result_3305112768 = -4;
      break;
    case "Delete":
      result_3305112768 = -5;
      break;
    case "Tab":
      result_3305112768 = -6;
      break;
    case "ArrowLeft":
      result_3305112768 = -7;
      break;
    case "ArrowRight":
      result_3305112768 = -8;
      break;
    case "ArrowUp":
      result_3305112768 = -9;
      break;
    case "ArrowDown":
      result_3305112768 = -10;
      break;
    case "Home":
      result_3305112768 = -11;
      break;
    case "End":
      result_3305112768 = -12;
      break;
    case "PageUp":
      result_3305112768 = -13;
      break;
    case "PageDown":
      result_3305112768 = -14;
      break;
    default: 
      if (      keyCode_3305111633 >= 112 && keyCode_3305111633 <= 123      ){        result_3305112768 = addInt(-20, subInt(keyCode_3305111633, 112));
        }
      else{
        if ((((key_3305111631) == null ? 0 : (key_3305111631).length) == 1)) {
        result_3305112768 = runeAt_788536179(cstrToNimstr(key_3305111631), 0);
        }
        
        }
      break;
    }

  return result_3305112768;

}

function invoke_3305111869(event_3305111871, arg_3305111872) {
    Label1: {
      var h_3305111895 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872575 = 0;
      var L_536872576 = (event_3305111871.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872575 < L_536872576)) break Label3;
            h_3305111895 = event_3305111871.handlers[chckIndx(i_536872575, 0, (event_3305111871.handlers).length - 1)];
            h_3305111895.Field1(arg_3305111872);
            i_536872575 = addInt(i_536872575, 1);
            if (!(((event_3305111871.handlers).length == L_536872576))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3305111651(self_3305111652) {
  var result_3305111653 = {};

    if (self_3305111652.altKey) {
    result_3305111653[2] = true;
    }
    
    if (self_3305111652.shiftKey) {
    result_3305111653[1] = true;
    }
    
    if (self_3305111652.ctrlKey) {
    result_3305111653[0] = true;
    }
    

  return result_3305111653;

}

function invoke_3305112220(event_3305112222, arg_3305112223) {
    Label1: {
      var h_3305112246 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872580 = 0;
      var L_536872581 = (event_3305112222.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872580 < L_536872581)) break Label3;
            h_3305112246 = event_3305112222.handlers[chckIndx(i_536872580, 0, (event_3305112222.handlers).length - 1)];
            h_3305112246.Field1(arg_3305112223);
            i_536872580 = addInt(i_536872580, 1);
            if (!(((event_3305112222.handlers).length == L_536872581))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3305112057(aHEX60gensym74_3305112059, bHEX60gensym74_3305112060) {
  var result_3305112061 = ({x: 0.0, y: 0.0});

    result_3305112061 = nimCopy(result_3305112061, {x: (aHEX60gensym74_3305112059.x * bHEX60gensym74_3305112060), y: (aHEX60gensym74_3305112059.y * bHEX60gensym74_3305112060)}, NTI2130706720);

  return result_3305112061;

}

function getMouseButton_3305111682(event_3305111683) {
    var Temporary1;

  var result_3305111684 = 0;

    if (    event_3305111683.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3305111683.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3305111683.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3305111684 = Temporary1;

  return result_3305111684;

}

function invoke_3305112315(event_3305112317, arg_3305112318) {
    Label1: {
      var h_3305112341 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872585 = 0;
      var L_536872586 = (event_3305112317.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872585 < L_536872586)) break Label3;
            h_3305112341 = event_3305112317.handlers[chckIndx(i_536872585, 0, (event_3305112317.handlers).length - 1)];
            h_3305112341.Field1(arg_3305112318);
            i_536872585 = addInt(i_536872585, 1);
            if (!(((event_3305112317.handlers).length == L_536872586))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3305112388(event_3305112390, arg_3305112391) {
    Label1: {
      var h_3305112414 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872590 = 0;
      var L_536872591 = (event_3305112390.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872590 < L_536872591)) break Label3;
            h_3305112414 = event_3305112390.handlers[chckIndx(i_536872590, 0, (event_3305112390.handlers).length - 1)];
            h_3305112414.Field1(arg_3305112391);
            i_536872590 = addInt(i_536872590, 1);
            if (!(((event_3305112390.handlers).length == L_536872591))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3305111666(event_3305111667) {
  var result_3305111668 = {};

    var buttons_3305111669 = event_3305111667.buttons;
    if (!(((buttons_3305111669 & 1) == 0))) {
    result_3305111668[0] = true;
    }
    
    if (!(((buttons_3305111669 & 2) == 0))) {
    result_3305111668[2] = true;
    }
    
    if (!(((buttons_3305111669 & 4) == 0))) {
    result_3305111668[1] = true;
    }
    

  return result_3305111668;

}

function invoke_3305112543(event_3305112545, arg_3305112546) {
    Label1: {
      var h_3305112569 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872595 = 0;
      var L_536872596 = (event_3305112545.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872595 < L_536872596)) break Label3;
            h_3305112569 = event_3305112545.handlers[chckIndx(i_536872595, 0, (event_3305112545.handlers).length - 1)];
            h_3305112569.Field1(arg_3305112546);
            i_536872595 = addInt(i_536872595, 1);
            if (!(((event_3305112545.handlers).length == L_536872596))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function init_3305111694(self_3305111695) {
    
function HEX3Aanonymous_3305111759(text_3305111760) {
      var result_3305111761 = ({x: 0.0, y: 0.0});

        result_3305111761.x = ((text_3305111760).length * self_3305111695.mCharWidth);
        result_3305111761.y = totalLineHeight_2499805351(self_3305111695);

      return result_3305111761;

    }
    
function HEX3Aanonymous_3305111771(e_3305111772) {
        invoke_3305111795(self_3305111695.onResized, true);

      
    }
    
function HEX3Aanonymous_3305111842(e_3305111843) {
        var ke_3305111844 = e_3305111843;
        var modifiers_3305111845 = getModifiers_3305111636(ke_3305111844);
        var input_3305111846 = toInput_3305111630(ke_3305111844.key, ke_3305111844.code, ke_3305111844.keyCode);
        invoke_3305111869(self_3305111695.onKeyPress, {Field0: input_3305111846, Field1: nimCopy(null, modifiers_3305111845, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3305111934(e_3305111935) {
        var we_3305111936 = e_3305111935;
        var modifiers_3305111937 = getModifiers_3305111651(we_3305111936);
        invoke_3305112220(self_3305111695.onScroll, {Field0: vec2_2130707293(we_3305111936.clientX, we_3305111936.clientY), Field1: HEX2A_3305112057(vec2_2130707293(we_3305111936.deltaX, -(we_3305111936.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3305111937, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3305112285(e_3305112286) {
        var me_3305112287 = e_3305112286;
        var modifiers_3305112288 = getModifiers_3305111651(me_3305112287);
        var mouseButton_3305112289 = getMouseButton_3305111682(me_3305112287);
        var currentTargetRect_3305112290 = me_3305112287.currentTarget.getBoundingClientRect();
        var x_3305112291 = (me_3305112287.pageX - currentTargetRect_3305112290.x);
        var y_3305112292 = (me_3305112287.pageY - currentTargetRect_3305112290.y);
        invoke_3305112315(self_3305111695.onMousePress, {Field0: mouseButton_3305112289, Field1: nimCopy(null, modifiers_3305112288, NTI2013265950), Field2: vec2_2130707293(x_3305112291, y_3305112292)});

      
    }
    
function HEX3Aanonymous_3305112362(e_3305112363) {
        var me_3305112364 = e_3305112363;
        var modifiers_3305112365 = getModifiers_3305111651(me_3305112364);
        invoke_3305112388(self_3305111695.onMouseMove, {Field0: vec2_2130707293(me_3305112364.clientX, me_3305112364.clientY), Field1: vec2_2130707293(me_3305112364.movementX, me_3305112364.movementY), Field2: nimCopy(null, modifiers_3305112365, NTI2013265950), Field3: getMouseButtons_3305111666(me_3305112364)});

      
    }
    
function HEX3Aanonymous_3305112447(e_3305112448) {
        var de_3305112449 = e_3305112448;
        de_3305112449.preventDefault();

      
    }
    
function HEX3Aanonymous_3305112459(e_3305112460) {
                
function HEX3Aanonymous_3305112506(f_3305112507) {
                    
function HEX3Aanonymous_3305112519(e_3305112520) {
                        invoke_3305112543(self_3305111695.onDropFile, {Field0: cstrToNimstr(f_3305112507.name), Field1: cstrToNimstr((fileReader_3305112509.result || ''))});

                      
                    }

                    var fileReader_3305112509 = new FileReader();
                    fileReader_3305112509.readAsText(f_3305112507, "UTF-8");
                    fileReader_3305112509.onload = HEX3Aanonymous_3305112519;

                  
                }

        var de_3305112461 = e_3305112460;
        de_3305112461.preventDefault();
        console.log(de_3305112461.dataTransfer);;
        Label1: {
          var f_3305112487 = null;
          var i_536872570 = 0;
          var L_536872571 = (de_3305112461.dataTransfer.files).length;
          Label2: {
              Label3: while (true) {
              if (!(i_536872570 < L_536872571)) break Label3;
                f_3305112487 = de_3305112461.dataTransfer.files[chckIndx(i_536872570, 0, (de_3305112461.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3305112506(f_3305112487);
                i_536872570 = addInt(i_536872570, 1);
                if (!(((de_3305112461.dataTransfer.files).length == L_536872571))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

    self_3305111695.mFontSize = 18.0;
    self_3305111695.mLineHeight = 20.0;
    self_3305111695.mLineDistance = 2.0;
    self_3305111695.mCharWidth = 18.0;
    self_3305111695.escapedText = newLruCache_3305111696(1000, false);
    self_3305111695.layoutOptions.getTextBounds = HEX3Aanonymous_3305111759;
    window.addEventListener("resize", HEX3Aanonymous_3305111771, false);
    self_3305111695.content = document.getElementById("view");
    self_3305111695.content.addEventListener("keydown", HEX3Aanonymous_3305111842, false);
    self_3305111695.content.addEventListener("wheel", HEX3Aanonymous_3305111934, {passive: true, capture: false, once: false});
    self_3305111695.content.addEventListener("mousedown", HEX3Aanonymous_3305112285, false);
    self_3305111695.content.addEventListener("mousemove", HEX3Aanonymous_3305112362, false);
    self_3305111695.content.addEventListener("dragover", HEX3Aanonymous_3305112447, false);
    self_3305111695.content.addEventListener("drop", HEX3Aanonymous_3305112459, false);
    updateFontSettings_3305111634(self_3305111695);
    self_3305111695.content.focus();

  
}

function init_2499805306(self_2499805307) {
  
}

function init_2499805308(self_2499805307) {
    chckNilDisp(self_2499805307);
    if (isObj(self_2499805307.m_type, NTI3305111563)) {
    init_3305111694(self_2499805307);
    }
    else {
    if (isObj(self_2499805307.m_type, NTI2499805188)) {
    init_2499805306(self_2499805307);
    }
    }

  
}

function deinit_3305112691(self_3305112692) {
  
}

function deinit_2499805309(self_2499805310) {
  
}

function deinit_2499805311(self_2499805310) {
    chckNilDisp(self_2499805310);
    if (isObj(self_2499805310.m_type, NTI3305111563)) {
    deinit_3305112691(self_2499805310);
    }
    else {
    if (isObj(self_2499805310.m_type, NTI2499805188)) {
    deinit_2499805309(self_2499805310);
    }
    }

  
}

function processEvents_3305112769(self_3305112770) {
  var result_3305112771 = 0;

    result_3305112771 = 0;

  return result_3305112771;

}

function processEvents_2499805312(self_2499805313) {
  var result_2499805314 = 0;

  return result_2499805314;

}

function processEvents_2499805315(self_2499805313) {
  var result_2499805316 = 0;

  BeforeRet: {
    chckNilDisp(self_2499805313);
    if (isObj(self_2499805313.m_type, NTI3305111563)) {
    result_2499805316 = processEvents_3305112769(self_2499805313);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805313.m_type, NTI2499805188)) {
    result_2499805316 = processEvents_2499805312(self_2499805313);
    break BeforeRet;
    }
    }
  };

  return result_2499805316;

}

function fontSizeHEX3D_2499805317(self_2499805318, fontSize_2499805319) {
  
}

function fontSizeHEX3D_2499805320(self_2499805318, fontSize_2499805319) {
    fontSizeHEX3D_2499805317(self_2499805318, fontSize_2499805319);

  
}

function lineDistanceHEX3D_2499805321(self_2499805322, lineDistance_2499805323) {
  
}

function lineDistanceHEX3D_2499805324(self_2499805322, lineDistance_2499805323) {
    lineDistanceHEX3D_2499805321(self_2499805322, lineDistance_2499805323);

  
}

function fontSize_3305112752(self_3305112753) {
  var result_3305112754 = 0.0;

    updateFontSettings_3305111634(self_3305112753);
    result_3305112754 = self_3305112753.mFontSize;

  return result_3305112754;

}

function fontSize_2499805325(self_2499805326) {
  var result_2499805327 = 0.0;

  return result_2499805327;

}

function fontSize_2499805328(self_2499805326) {
  var result_2499805329 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2499805326);
    if (isObj(self_2499805326.m_type, NTI3305111563)) {
    result_2499805329 = fontSize_3305112752(self_2499805326);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805326.m_type, NTI2499805188)) {
    result_2499805329 = fontSize_2499805325(self_2499805326);
    break BeforeRet;
    }
    }
  };

  return result_2499805329;

}

function lineDistance_3305112755(self_3305112756) {
  var result_3305112757 = 0.0;

    updateFontSettings_3305111634(self_3305112756);
    result_3305112757 = self_3305112756.mLineDistance;

  return result_3305112757;

}

function lineDistance_2499805330(self_2499805331) {
  var result_2499805332 = 0.0;

  return result_2499805332;

}

function lineDistance_2499805333(self_2499805331) {
  var result_2499805334 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2499805331);
    if (isObj(self_2499805331.m_type, NTI3305111563)) {
    result_2499805334 = lineDistance_3305112755(self_2499805331);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805331.m_type, NTI2499805188)) {
    result_2499805334 = lineDistance_2499805330(self_2499805331);
    break BeforeRet;
    }
    }
  };

  return result_2499805334;

}

function lineHeight_3305112758(self_3305112759) {
  var result_3305112760 = 0.0;

    updateFontSettings_3305111634(self_3305112759);
    result_3305112760 = self_3305112759.mLineHeight;

  return result_3305112760;

}

function lineHeight_2499805335(self_2499805336) {
  var result_2499805337 = 0.0;

  return result_2499805337;

}

function lineHeight_2499805338(self_2499805336) {
  var result_2499805339 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2499805336);
    if (isObj(self_2499805336.m_type, NTI3305111563)) {
    result_2499805339 = lineHeight_3305112758(self_2499805336);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805336.m_type, NTI2499805188)) {
    result_2499805339 = lineHeight_2499805335(self_2499805336);
    break BeforeRet;
    }
    }
  };

  return result_2499805339;

}

function measureText_2499805345(self_2499805346, text_2499805347) {
  var result_2499805348 = ({x: 0.0, y: 0.0});

  return result_2499805348;

}

function measureText_2499805349(self_2499805346, text_2499805347) {
  var result_2499805350 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_2499805350 = nimCopy(result_2499805350, measureText_2499805345(self_2499805346, text_2499805347), NTI2130706720);
    break BeforeRet;
  };

  return result_2499805350;

}
async function initAsync_2785017900(self_2785017901) {
  var result_2785017903 = null;

  BeforeRet: {
    var _ = (await loadScript("scripting_runtime.js"));
    if ((window.localStorage.getItem("config.js") !== null)) {
    var config_2785017914 = loadApplicationFile_2332033042(fs_2332033077, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2785017915 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2785017914 || []);
    rawEcho(contentStrict_2785017915);
    var allowEval_2785017916 = confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there.");
    if (allowEval_2785017916) {
    var _ = (await loadScriptContent(toJSStr(config_2785017914)));
    }
    else {
      var fmtRes_2785017925 = mnewString(0);
      fmtRes_2785017925.push.apply(fmtRes_2785017925, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2785017925, NTI33554449)]);
    }
    
    }
    else {
    var _ = (await loadScript("config.js"));
    }
    
    result_2785017903 = undefined;
    break BeforeRet;
  };

  return result_2785017903;

}

function init_2785017948(self_2785017949, path_2785017950) {
    var _ = initAsync_2785017900(self_2785017949);

  
}

function init_2768240649(self_2768240650, path_2768240651) {
  
}

function init_2768240652(self_2768240650, path_2768240651) {
    chckNilDisp(self_2768240650);
    if (isObj(self_2768240650.m_type, NTI2785017860)) {
    init_2785017948(self_2768240650, path_2768240651);
    }
    else {
    if (isObj(self_2768240650.m_type, NTI2768240644)) {
    init_2768240649(self_2768240650, path_2768240651);
    }
    }

  
}

function reload_2785017951(self_2785017952) {
  
}

function reload_2768240653(self_2768240654) {
  
}

function reload_2768240655(self_2768240654) {
    chckNilDisp(self_2768240654);
    if (isObj(self_2768240654.m_type, NTI2785017860)) {
    reload_2785017951(self_2768240654);
    }
    else {
    if (isObj(self_2768240654.m_type, NTI2768240644)) {
    reload_2768240653(self_2768240654);
    }
    }

  
}

function mustRehash_1291846255(t_1291846257) {
  var result_1291846258 = false;

    if (!((t_1291846257.counter < (t_1291846257.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846258 = ((mulInt((t_1291846257.data).length, 2) < mulInt(t_1291846257.counter, 3)) || (subInt((t_1291846257.data).length, t_1291846257.counter) < 4));

  return result_1291846258;

}

function rawInsert_1291846704(t_1291846708, data_1291846709, data_1291846709_Idx, key_1291846710, val_1291846711, hc_1291846712, h_1291846713) {
    data_1291846709[data_1291846709_Idx][chckIndx(h_1291846713, 0, (data_1291846709[data_1291846709_Idx]).length - 1)].Field1 = key_1291846710;
    data_1291846709[data_1291846709_Idx][chckIndx(h_1291846713, 0, (data_1291846709[data_1291846709_Idx]).length - 1)].Field2 = val_1291846711;
    data_1291846709[data_1291846709_Idx][chckIndx(h_1291846713, 0, (data_1291846709[data_1291846709_Idx]).length - 1)].Field0 = hc_1291846712;

  
}

function enlarge_1291846410(t_1291846413) {
    var n_1291846416 = [];
    n_1291846416 = new Array(chckRange(mulInt((t_1291846413.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846413.data).length, 2), 0, 2147483647) ; ++i) { n_1291846416[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846413.data; t_1291846413.data = n_1291846416; n_1291846416 = Temporary1;    Label2: {
      var i_1291846480 = 0;
      var colontmp__536872602 = 0;
      colontmp__536872602 = (n_1291846416).length - 1;
      var res_536872603 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872603 <= colontmp__536872602)) break Label4;
            i_1291846480 = res_536872603;
            var eh_1291846534 = n_1291846416[chckIndx(i_1291846480, 0, (n_1291846416).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846534)) {
            var j_1291846538 = (eh_1291846534 & (t_1291846413.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846413.data[chckIndx(j_1291846538, 0, (t_1291846413.data).length - 1)].Field0)) break Label6;
                  j_1291846538 = nextTry_1308622883(j_1291846538, (t_1291846413.data).length - 1);
                }
            };
            rawInsert_1291846704(t_1291846413, t_1291846413, "data", n_1291846416[chckIndx(i_1291846480, 0, (n_1291846416).length - 1)].Field1, n_1291846416[chckIndx(i_1291846480, 0, (n_1291846416).length - 1)].Field2, eh_1291846534, j_1291846538);
            }
            
            res_536872603 = addInt(res_536872603, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846873(t_1291846876, key_1291846877, hc_1291846878) {
  var result_1291846879 = 0;

  BeforeRet: {
    if (((t_1291846876.data).length == 0)) {
    result_1291846879 = -1;
    break BeforeRet;
    }
    
    var h_1291846930 = (hc_1291846878 & (t_1291846876.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846876.data[chckIndx(h_1291846930, 0, (t_1291846876.data).length - 1)].Field0)) break Label2;
          if (((t_1291846876.data[chckIndx(h_1291846930, 0, (t_1291846876.data).length - 1)].Field0 == hc_1291846878) && (t_1291846876.data[chckIndx(h_1291846930, 0, (t_1291846876.data).length - 1)].Field1 == key_1291846877))) {
          result_1291846879 = h_1291846930;
          break BeforeRet;
          }
          
          h_1291846930 = nextTry_1308622883(h_1291846930, (t_1291846876.data).length - 1);
        }
    };
    result_1291846879 = subInt(-1, h_1291846930);
  };

  return result_1291846879;

}

function HEX5BHEX5DHEX3D_1291845846(t_1291845849, key_1291845850, val_1291845851) {
    if (((t_1291845849.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845901 = slotsNeeded_1308622891(32);
    t_1291845849.counter = 0;
    t_1291845849.data = new Array(chckRange(correctSizeHEX60gensym1_1291845901, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845901, 0, 2147483647) ; ++i) { t_1291845849.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845906 = [0];
    var index_1291846148 = rawGet_1291845907(t_1291845849, key_1291845850, hc_1291845906, 0);
    if ((0 <= index_1291846148)) {
    t_1291845849.data[chckIndx(index_1291846148, 0, (t_1291845849.data).length - 1)].Field2 = val_1291845851;
    }
    else {
      if (((t_1291845849.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846250 = slotsNeeded_1308622891(32);
      t_1291845849.counter = 0;
      t_1291845849.data = new Array(chckRange(correctSizeHEX60gensym6_1291846250, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846250, 0, 2147483647) ; ++i) { t_1291845849.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846255(t_1291845849)) {
      enlarge_1291846410(t_1291845849);
      index_1291846148 = rawGetKnownHC_1291846873(t_1291845849, key_1291845850, hc_1291845906[0]);
      }
      
      index_1291846148 = subInt(-1, index_1291846148);
      rawInsert_1291846704(t_1291845849, t_1291845849, "data", key_1291845850, val_1291845851, hc_1291845906[0], index_1291846148);
      t_1291845849.counter = addInt(t_1291845849.counter, 1);
    }
    

  
}

function registerEditor_1291845803(self_1291845804, editor_1291845805) {
    HEX5BHEX5DHEX3D_1291845846(self_1291845804.editors, editor_1291845805.id, editor_1291845805);
    invoke_1291847133(self_1291845804.onEditorRegistered, editor_1291845805);

  
}

function handleInput_2936029985(self_2936029986, input_2936029987) {
  var result_2936029988 = 0;

  BeforeRet: {
    result_2936029988 = 1;
    break BeforeRet;
  };

  return result_2936029988;

}

function injectDependencies_2936030611(self_2936030612, ed_2936030613) {
      
function HEX3Aanonymous_2936030633(actionHEX60gensym1147HEX60gensym1148_2936030634, argHEX60gensym1147HEX60gensym1148_2936030635) {
        var result_2936030636 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1147_2936030621.config.handleActions) {
          var action_2936030637 = nimCopy(null, actionHEX60gensym1147HEX60gensym1148_2936030634, NTI33554449);
          var arg_2936030638 = nimCopy(null, argHEX60gensym1147HEX60gensym1148_2936030635, NTI33554449);
          var responseHEX60gensym1147HEX60gensym1148_2936030639 = handleAction_2936028883(self_2936030612, action_2936030637, arg_2936030638);
          if (handlerHEX60gensym1147_2936030621.config.consumeAllActions) {
          result_2936030636 = 3;
          break BeforeRet;
          }
          
          result_2936030636 = responseHEX60gensym1147HEX60gensym1148_2936030639;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1147_2936030621.config.consumeAllActions) {
          result_2936030636 = 3;
          break BeforeRet;
          }
          else {
            result_2936030636 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2936030636;

      }
      
function HEX3Aanonymous_2936030641(inputHEX60gensym1147HEX60gensym1149_2936030642) {
        var result_2936030643 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1147_2936030621.config.handleInputs) {
          var input_2936030644 = nimCopy(null, inputHEX60gensym1147HEX60gensym1149_2936030642, NTI33554449);
          result_2936030643 = handleInput_2936029985(self_2936030612, input_2936030644);
          break BeforeRet;
          }
          else {
            result_2936030643 = 1;
            break BeforeRet;
          }
          
        };

        return result_2936030643;

      }
      
function HEX3Aanonymous_2936030664(actionHEX60gensym1150HEX60gensym1151_2936030665, argHEX60gensym1150HEX60gensym1151_2936030666) {
        var result_2936030667 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1150_2936030652.config.handleActions) {
          var action_2936030668 = nimCopy(null, actionHEX60gensym1150HEX60gensym1151_2936030665, NTI33554449);
          var arg_2936030669 = nimCopy(null, argHEX60gensym1150HEX60gensym1151_2936030666, NTI33554449);
          var responseHEX60gensym1150HEX60gensym1151_2936030670 = handleAction_2936028883(self_2936030612, action_2936030668, arg_2936030669);
          if (handlerHEX60gensym1150_2936030652.config.consumeAllActions) {
          result_2936030667 = 3;
          break BeforeRet;
          }
          
          result_2936030667 = responseHEX60gensym1150HEX60gensym1151_2936030670;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1150_2936030652.config.consumeAllActions) {
          result_2936030667 = 3;
          break BeforeRet;
          }
          else {
            result_2936030667 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2936030667;

      }
      
function HEX3Aanonymous_2936030672(inputHEX60gensym1150HEX60gensym1152_2936030673) {
        var result_2936030674 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1150_2936030652.config.handleInputs) {
          var input_2936030675 = nimCopy(null, inputHEX60gensym1150HEX60gensym1152_2936030673, NTI33554449);
          result_2936030674 = 1;
          break BeforeRet;
          }
          else {
            result_2936030674 = 1;
            break BeforeRet;
          }
          
        };

        return result_2936030674;

      }

    self_2936030612.editor = ed_2936030613;
    registerEditor_1291845803(self_2936030612.editor, self_2936030612);
    Label1: {
      var handlerHEX60gensym1147_2936030621 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1147_2936030621.config = getEventHandlerConfig_1291849169(ed_2936030613, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1147_2936030621.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(ed_2936030613, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1147_2936030621.handleAction = HEX3Aanonymous_2936030633;
      handlerHEX60gensym1147_2936030621.handleInput = HEX3Aanonymous_2936030641;
    };
    self_2936030612.eventHandler = handlerHEX60gensym1147_2936030621;
    Label2: {
      var handlerHEX60gensym1150_2936030652 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1150_2936030652.config = getEventHandlerConfig_1291849169(ed_2936030613, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1150_2936030652.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(ed_2936030613, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1150_2936030652.handleAction = HEX3Aanonymous_2936030664;
      handlerHEX60gensym1150_2936030652.handleInput = HEX3Aanonymous_2936030672;
    };
    self_2936030612.textEditEventHandler = handlerHEX60gensym1150_2936030652;

  
}

function injectDependencies_2801813676(self_2801813677, ed_2801813678) {
      
function HEX3Aanonymous_2801813699(actionHEX60gensym1001HEX60gensym1002_2801813700, argHEX60gensym1001HEX60gensym1002_2801813701) {
        var result_2801813702 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1001_2801813687.config.handleActions) {
          var action_2801813703 = nimCopy(null, actionHEX60gensym1001HEX60gensym1002_2801813700, NTI33554449);
          var arg_2801813704 = nimCopy(null, argHEX60gensym1001HEX60gensym1002_2801813701, NTI33554449);
          var responseHEX60gensym1001HEX60gensym1002_2801813705 = handleAction_2801795427(self_2801813677, action_2801813703, arg_2801813704);
          if (handlerHEX60gensym1001_2801813687.config.consumeAllActions) {
          result_2801813702 = 3;
          break BeforeRet;
          }
          
          result_2801813702 = responseHEX60gensym1001HEX60gensym1002_2801813705;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1001_2801813687.config.consumeAllActions) {
          result_2801813702 = 3;
          break BeforeRet;
          }
          else {
            result_2801813702 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2801813702;

      }
      
function HEX3Aanonymous_2801813707(inputHEX60gensym1001HEX60gensym1003_2801813708) {
        var result_2801813709 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1001_2801813687.config.handleInputs) {
          var input_2801813710 = nimCopy(null, inputHEX60gensym1001HEX60gensym1003_2801813708, NTI33554449);
          result_2801813709 = handleInput_2801795435(self_2801813677, input_2801813710);
          break BeforeRet;
          }
          else {
            result_2801813709 = 1;
            break BeforeRet;
          }
          
        };

        return result_2801813709;

      }
      
function HEX3Aanonymous_2801813730(actionHEX60gensym1004HEX60gensym1005_2801813731, argHEX60gensym1004HEX60gensym1005_2801813732) {
        var result_2801813733 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1004_2801813718.config.handleActions) {
          var action_2801813734 = nimCopy(null, actionHEX60gensym1004HEX60gensym1005_2801813731, NTI33554449);
          var arg_2801813735 = nimCopy(null, argHEX60gensym1004HEX60gensym1005_2801813732, NTI33554449);
          var responseHEX60gensym1004HEX60gensym1005_2801813736 = handleAction_2801795427(self_2801813677, action_2801813734, arg_2801813735);
          if (handlerHEX60gensym1004_2801813718.config.consumeAllActions) {
          result_2801813733 = 3;
          break BeforeRet;
          }
          
          result_2801813733 = responseHEX60gensym1004HEX60gensym1005_2801813736;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1004_2801813718.config.consumeAllActions) {
          result_2801813733 = 3;
          break BeforeRet;
          }
          else {
            result_2801813733 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2801813733;

      }
      
function HEX3Aanonymous_2801813738(inputHEX60gensym1004HEX60gensym1006_2801813739) {
        var result_2801813740 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1004_2801813718.config.handleInputs) {
          var input_2801813741 = nimCopy(null, inputHEX60gensym1004HEX60gensym1006_2801813739, NTI33554449);
          result_2801813740 = handleInput_2801795435(self_2801813677, input_2801813741);
          break BeforeRet;
          }
          else {
            result_2801813740 = 1;
            break BeforeRet;
          }
          
        };

        return result_2801813740;

      }

    self_2801813677.editor = ed_2801813678;
    registerEditor_1291845803(self_2801813677.editor, self_2801813677);
    var config_2801813679 = getEventHandlerConfig_1291849169(ed_2801813678, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym1001_2801813687 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1001_2801813687.config = config_2801813679;
      handlerHEX60gensym1001_2801813687.dfaInternal = buildDFA_2080374847(config_2801813679);
      handlerHEX60gensym1001_2801813687.handleAction = HEX3Aanonymous_2801813699;
      handlerHEX60gensym1001_2801813687.handleInput = HEX3Aanonymous_2801813707;
    };
    self_2801813677.eventHandler = handlerHEX60gensym1001_2801813687;
    Label2: {
      var handlerHEX60gensym1004_2801813718 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1004_2801813718.config = getEventHandlerConfig_1291849169(ed_2801813678, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1004_2801813718.dfaInternal = buildDFA_2080374847(getEventHandlerConfig_1291849169(ed_2801813678, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1004_2801813718.handleAction = HEX3Aanonymous_2801813730;
      handlerHEX60gensym1004_2801813718.handleInput = HEX3Aanonymous_2801813738;
    };
    self_2801813677.completionEventHandler = handlerHEX60gensym1004_2801813718;

  
}

function injectDependencies_1291847757(self_1291847758, ed_1291847759) {
  
}

function injectDependencies_1291847760(self_1291847758, ed_1291847759) {
    chckNilDisp(self_1291847758);
    if (isObj(self_1291847758.m_type, NTI2936014311)) {
    injectDependencies_2936030611(self_1291847758, ed_1291847759);
    }
    else {
    if (isObj(self_1291847758.m_type, NTI2801795294)) {
    injectDependencies_2801813676(self_1291847758, ed_1291847759);
    }
    else {
    if (isObj(self_1291847758.m_type, NTI2382364676)) {
    injectDependencies_1291847757(self_1291847758, ed_1291847759);
    }
    }}

  
}

function getOrDefault_1291848309(t_1291848312, key_1291848313, default_1291848314) {
    var Temporary1;

  var result_1291848315 = 0.0;

    var hcHEX60gensym20_1291848318 = [0];
    var indexHEX60gensym20_1291848558 = rawGet_1291848319(t_1291848312, key_1291848313, hcHEX60gensym20_1291848318, 0);
    if ((0 <= indexHEX60gensym20_1291848558)) {
    Temporary1 = t_1291848312.data[chckIndx(indexHEX60gensym20_1291848558, 0, (t_1291848312.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848314;
    }
    
    result_1291848315 = Temporary1;

  return result_1291848315;

}

function value_2097152050(m_2097152051) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2097152052 = 0.0;

  BeforeRet: {
    switch (m_2097152051.kind) {
    case 0:
      var Temporary1 = m_2097152051;
      if (ConstSet331[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2097152003)); }
      result_2097152052 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2097152051;
      if (ConstSet332[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2097152003)); }
      result_2097152052 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2097152051;
      if (ConstSet333[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2097152003)); }
      result_2097152052 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2097152052;

}

function apply_2097152075(m_2097152076, a_2097152077, b_2097152078) {
  var result_2097152079 = 0.0;

  BeforeRet: {
    switch (m_2097152076.kind) {
    case 0:
      var v_2097152090 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + v_2097152090);
      break BeforeRet;
      break;
    case 1:
      var v_2097152091 = value_2097152050(m_2097152076);
      result_2097152079 = v_2097152091;
      break BeforeRet;
      break;
    case 2:
      var v_2097152092 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + (v_2097152092 * (b_2097152078 - a_2097152077)));
      break BeforeRet;
      break;
    }
  };

  return result_2097152079;

}

function splitV_2097152105(r_2097152106, x_2097152107) {
  var result_2097152110 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152110.Field0 = nimCopy(result_2097152110.Field0, r_2097152106, NTI2113929221);
    result_2097152110.Field1 = nimCopy(result_2097152110.Field1, r_2097152106, NTI2113929221);
    result_2097152110.Field0.w = (apply_2097152075(x_2097152107, r_2097152106.x, (r_2097152106.x + r_2097152106.w)) - r_2097152106.x);
    result_2097152110.Field1.x = (result_2097152110.Field0.x + result_2097152110.Field0.w);
    result_2097152110.Field1.w = (result_2097152110.Field1.w - result_2097152110.Field0.w);

  return result_2097152110;

}

function percent_2097152047(value_2097152048) {
  var result_2097152049 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2097152049 = nimCopy(result_2097152049, {kind: 2, per: value_2097152048, rel: 0.0, abs: 0.0}, NTI2097152004);
    break BeforeRet;
  };

  return result_2097152049;

}

function splitH_2097152093(r_2097152094, y_2097152095) {
  var result_2097152098 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152098.Field0 = nimCopy(result_2097152098.Field0, r_2097152094, NTI2113929221);
    result_2097152098.Field1 = nimCopy(result_2097152098.Field1, r_2097152094, NTI2113929221);
    result_2097152098.Field0.h = (apply_2097152075(y_2097152095, r_2097152094.y, (r_2097152094.y + r_2097152094.h)) - r_2097152094.y);
    result_2097152098.Field1.y = (result_2097152098.Field0.y + result_2097152098.Field0.h);
    result_2097152098.Field1.h = (result_2097152098.Field1.h - result_2097152098.Field0.h);

  return result_2097152098;

}

function layoutViews_1291848744(layout_1291848745, props_1291848746, bounds_1291848747, views_1291848748) {
            var Temporary4;
            var Temporary5;

  var result_1291848749 = [];

    var mainSplit_1291848822 = getOrDefault_1291848309(props_1291848746.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848749 = nimCopy(null, [], NTI1291847200);
    var rect_1291848827 = nimCopy(null, bounds_1291848747, NTI2113929221);
    Label1: {
      var i_1291848832 = 0;
      var i_536872609 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872609 < views_1291848748)) break Label3;
            i_1291848832 = i_536872609;
            if (((i_1291848832 == 0) && (1 < views_1291848748))) {
            Temporary4 = mainSplit_1291848822;
            }
            else {
            if ((i_1291848832 == subInt(views_1291848748, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848833 = Temporary4;
            if ((modInt(i_1291848832, 2) == 0)) {
            Temporary5 = splitV_2097152105(rect_1291848827, percent_2097152047(ratio_1291848833));
            }
            else {
            Temporary5 = splitH_2097152093(rect_1291848827, percent_2097152047(ratio_1291848833));
            }
            
            var colontmp__536872611 = nimCopy(null, Temporary5, NTI2097152063);
            var view_rect_1291848834 = nimCopy(null, colontmp__536872611["Field0"], NTI2113929221);
            var remaining_1291848835 = nimCopy(null, colontmp__536872611["Field1"], NTI2113929221);
            rect_1291848827 = nimCopy(rect_1291848827, remaining_1291848835, NTI2113929221);
            var Temporary6 = nimCopy(null, view_rect_1291848834, NTI2113929221);
            result_1291848749.push(Temporary6);;
            i_536872609 = addInt(i_536872609, 1);
          }
      };
    };

  return result_1291848749;

}

function layoutViews_1291848648(layout_1291848649, props_1291848650, bounds_1291848651, views_1291848652) {
            var Temporary4;

  var result_1291848653 = [];

    var mainSplit_1291848726 = getOrDefault_1291848309(props_1291848650.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848653 = nimCopy(null, [], NTI1291847200);
    var rect_1291848731 = nimCopy(null, bounds_1291848651, NTI2113929221);
    Label1: {
      var i_1291848736 = 0;
      var i_536872613 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872613 < views_1291848652)) break Label3;
            i_1291848736 = i_536872613;
            if (((i_1291848736 == 0) && (1 < views_1291848652))) {
            Temporary4 = mainSplit_1291848726;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848652, i_1291848736));
            }
            
            var ratio_1291848737 = Temporary4;
            var colontmp__536872615 = splitH_2097152093(rect_1291848731, percent_2097152047(ratio_1291848737));
            var view_rect_1291848738 = nimCopy(null, colontmp__536872615["Field0"], NTI2113929221);
            var remaining_1291848739 = nimCopy(null, colontmp__536872615["Field1"], NTI2113929221);
            rect_1291848731 = nimCopy(rect_1291848731, remaining_1291848739, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1291848738, NTI2113929221);
            result_1291848653.push(Temporary5);;
            i_536872613 = addInt(i_536872613, 1);
          }
      };
    };

  return result_1291848653;

}

function layoutViews_1291848237(layout_1291848238, props_1291848239, bounds_1291848240, views_1291848241) {
            var Temporary4;

  var result_1291848242 = [];

    var mainSplit_1291848612 = getOrDefault_1291848309(props_1291848239.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848242 = nimCopy(null, [], NTI1291847200);
    var rect_1291848617 = nimCopy(null, bounds_1291848240, NTI2113929221);
    Label1: {
      var i_1291848622 = 0;
      var i_536872617 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872617 < views_1291848241)) break Label3;
            i_1291848622 = i_536872617;
            if (((i_1291848622 == 0) && (1 < views_1291848241))) {
            Temporary4 = mainSplit_1291848612;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848241, i_1291848622));
            }
            
            var ratio_1291848623 = Temporary4;
            var colontmp__536872619 = splitV_2097152105(rect_1291848617, percent_2097152047(ratio_1291848623));
            var view_rect_1291848624 = nimCopy(null, colontmp__536872619["Field0"], NTI2113929221);
            var remaining_1291848625 = nimCopy(null, colontmp__536872619["Field1"], NTI2113929221);
            rect_1291848617 = nimCopy(rect_1291848617, remaining_1291848625, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1291848624, NTI2113929221);
            result_1291848242.push(Temporary5);;
            i_536872617 = addInt(i_536872617, 1);
          }
      };
    };

  return result_1291848242;

}

function layoutViews_1291848207(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211) {
  var result_1291848212 = [];

  BeforeRet: {
    result_1291848212 = nimCopy(null, [nimCopy(null, bounds_1291848210, NTI2113929221)], NTI1291846989);
    break BeforeRet;
  };

  return result_1291848212;

}

function layoutViews_1291848235(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211) {
  var result_1291848236 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848208);
    if (isObj(layout_1291848208.m_type, NTI1291845645)) {
    result_1291848236 = layoutViews_1291848744(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848208.m_type, NTI1291845644)) {
    result_1291848236 = layoutViews_1291848648(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848208.m_type, NTI1291845643)) {
    result_1291848236 = layoutViews_1291848237(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848208.m_type, NTI1291845642)) {
    result_1291848236 = layoutViews_1291848207(layout_1291848208, props_1291848209, bounds_1291848210, views_1291848211);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848236;

}

function start_2902458417(self_2902458418) {
  
}

function start_2902458419(self_2902458418) {
    start_2902458417(self_2902458418);

  
}

function getDefinition_2902458423(self_2902458424, filename_2902458425, location_2902458426) {
  var result_2902458434 = null;

  return result_2902458434;

}

function getDefinition_2902458435(self_2902458424, filename_2902458425, location_2902458426) {
  var result_2902458436 = null;

  BeforeRet: {
    result_2902458436 = getDefinition_2902458423(self_2902458424, filename_2902458425, location_2902458426);
    break BeforeRet;
  };

  return result_2902458436;

}

function getCompletions_2902458437(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441) {
  var result_2902458444 = null;

  return result_2902458444;

}

function getCompletions_2902458445(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441) {
  var result_2902458446 = null;

  BeforeRet: {
    result_2902458446 = getCompletions_2902458437(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441);
    break BeforeRet;
  };

  return result_2902458446;

}

function changed_1291850996(self_1291850997, other_1291850998) {
  var result_1291850999 = false;

  BeforeRet: {
    var other_1291851000 = other_1291850998;
    result_1291850999 = (!(eqStrings(self_1291850997.name, other_1291851000.name)) || !(eqStrings(self_1291850997.path, other_1291851000.path)));
    break BeforeRet;
  };

  return result_1291850999;

}

function changed_1291850982(self_1291850983, other_1291850984) {
  var result_1291850985 = false;

  BeforeRet: {
    var other_1291850986 = other_1291850984;
    result_1291850985 = !(eqStrings(self_1291850983.path, other_1291850986.path));
    break BeforeRet;
  };

  return result_1291850985;

}

function changed_3204448322(self_3204448323, other_3204448324) {
  var result_3204448325 = false;

  return result_3204448325;

}

function changed_3204448326(self_3204448323, other_3204448324) {
  var result_3204448327 = false;

  BeforeRet: {
    chckNilDisp(self_3204448323);
    if (isObj(self_3204448323.m_type, NTI1291848514)) {
    result_3204448327 = changed_1291850996(self_3204448323, other_3204448324);
    break BeforeRet;
    }
    else {
    if (isObj(self_3204448323.m_type, NTI1291848516)) {
    result_3204448327 = changed_1291850982(self_3204448323, other_3204448324);
    break BeforeRet;
    }
    else {
    if (isObj(self_3204448323.m_type, NTI3204448264)) {
    result_3204448327 = changed_3204448322(self_3204448323, other_3204448324);
    break BeforeRet;
    }
    }}
  };

  return result_3204448327;

}

function active_2382364785(self_2382364786) {
  var result_2382364787 = false;

    result_2382364787 = self_2382364786.active;

  return result_2382364787;

}

function updateBackgroundColor_2516582478(self_2516582479, color_2516582480, frameIndex_2516582481) {
    if (!(HEX3DHEX3D_2516582468(self_2516582479.backgroundColor, color_2516582480))) {
    self_2516582479.lastHierarchyChange = nimMax(self_2516582479.lastHierarchyChange, frameIndex_2516582481);
    }
    
    self_2516582479.backgroundColor = nimCopy(self_2516582479.backgroundColor, color_2516582480, NTI2550136835);

  
}

function HEX24_2415919428(selection_2415919429) {
  var result_2415919430 = [];

  BeforeRet: {
    result_2415919430 = nimCopy(null, (HEX24_2415919425(selection_2415919429.Field0) || []).concat([45] || [],HEX24_2415919425(selection_2415919429.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2415919430;

}

function formatValue_2801795197(result_2801795199, result_2801795199_Idx, value_2801795200, specifier_2801795201) {
    formatValue_721420459(result_2801795199, result_2801795199_Idx, HEX24_2415919428(value_2801795200), specifier_2801795201);

  
}

function HEX2A_2566914051(c_2566914052, v_2566914053) {
  var result_2566914054 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2566914054.r = (c_2566914052.r * v_2566914053);
    result_2566914054.g = (c_2566914052.g * v_2566914053);
    result_2566914054.b = (c_2566914052.b * v_2566914053);
    result_2566914054.a = (c_2566914052.a * v_2566914053);

  return result_2566914054;

}

function changed_2516582725(self_2516582726, frameIndex_2516582727) {
  var result_2516582728 = false;

    result_2516582728 = (((frameIndex_2516582727 <= self_2516582726.lastBoundsChange) || (frameIndex_2516582727 <= self_2516582726.lastHierarchyChange)) || (frameIndex_2516582727 <= self_2516582726.lastInvalidation));

  return result_2516582728;

}

function dirty_2382364707(self_2382364708) {
  var result_2382364709 = false;

    result_2382364709 = self_2382364708.mDirty;

  return result_2382364709;

}

function resetDirty_2382364780(self_2382364781) {
    self_2382364781.mDirty = false;

  
}

function clamp_3271557507(val_3271557509, bounds_3271557510) {
  var result_3271557511 = 0;

    if (!((bounds_3271557510.a <= bounds_3271557510.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2415919425({Field0: bounds_3271557510.a, Field1: bounds_3271557510.b}) || []));
    }
    
    result_3271557511 = clamp_1660945119(val_3271557509, bounds_3271557510.a, bounds_3271557510.b);

  return result_3271557511;

}

function initTable_3271557541(initialSize_3271557544) {
  var result_3271557545 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3271557547 = slotsNeeded_1308622891(chckRange(initialSize_3271557544, 0, 2147483647));
    result_3271557545.counter = 0;
    result_3271557545.data = new Array(chckRange(correctSizeHEX60gensym10_3271557547, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3271557547, 0, 2147483647) ; ++i) { result_3271557545.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3271557545;

}

function mgetOrPut_3271557593(t_3271557596, key_3271557597, val_3271557598) {
  var result_3271557599 = null;
  var result_3271557599_Idx = 0;

    if (((t_3271557596.data).length == 0)) {
    var correctSizeHEX60gensym13_3271557648 = slotsNeeded_1308622891(32);
    t_3271557596.counter = 0;
    t_3271557596.data = new Array(chckRange(correctSizeHEX60gensym13_3271557648, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3271557648, 0, 2147483647) ; ++i) { t_3271557596.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3271557653 = [0];
    var index_3271557660 = rawGet_2801803390(t_3271557596, key_3271557597, hc_3271557653, 0);
    if ((index_3271557660 < 0)) {
    if (((t_3271557596.data).length == 0)) {
    var correctSizeHEX60gensym16_3271557709 = slotsNeeded_1308622891(32);
    t_3271557596.counter = 0;
    t_3271557596.data = new Array(chckRange(correctSizeHEX60gensym16_3271557709, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3271557709, 0, 2147483647) ; ++i) { t_3271557596.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2801803828(t_3271557596)) {
    enlarge_2801803998(t_3271557596);
    index_3271557660 = rawGetKnownHC_2801804606(t_3271557596, key_3271557597, hc_3271557653[0]);
    }
    
    index_3271557660 = subInt(-1, index_3271557660);
    rawInsert_2801804377(t_3271557596, t_3271557596, "data", key_3271557597, val_3271557598, hc_3271557653[0], index_3271557660);
    t_3271557596.counter = addInt(t_3271557596.counter, 1);
    }
    
    result_3271557599 = t_3271557596.data[chckIndx(index_3271557660, 0, (t_3271557596.data).length - 1)]; result_3271557599_Idx = "Field2";

  return [result_3271557599, result_3271557599_Idx];

}

function isSome_3271557880(self_3271557882) {
  var result_3271557883 = false;

    result_3271557883 = self_3271557882.has;

  return result_3271557883;

}

function get_3271557871(self_3271557873, otherwise_3271557874) {
    var Temporary1;

  var result_3271557875 = 0;

    if (isSome_3271557880(self_3271557873)) {
    Temporary1 = self_3271557873.val;
    }
    else {
    Temporary1 = otherwise_3271557874;
    }
    
    result_3271557875 = Temporary1;

  return result_3271557875;

}

function parseEnum_3271557846(s_3271557848, default_3271557849) {
    var Temporary1;

  var result_3271557850 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3271557848))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3271557849;
      break;
    }
    result_3271557850 = Temporary1;

  return result_3271557850;

}

function getOption_3271557820(editor_3271557822, path_3271557823, default_3271557824) {
  var result_3271557830 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3271557822 == null)) {
      result_3271557830 = default_3271557824;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3271557842 = HEX7BHEX7D_1627393316(editor_3271557822.options, nsuSplitString(path_3271557823, [46], -1));
      if ((nodeHEX60gensym18_3271557842 == null)) {
      result_3271557830 = default_3271557824;
      break BeforeRet;
      }
      
    };
    result_3271557830 = parseEnum_3271557846(getStr_1627390106(nodeHEX60gensym18_3271557842, []), default_3271557824);
    break BeforeRet;
  };

  return result_3271557830;

}

function color_3271557914(theme_3271557916, names_3271557917, default_3271557918) {
  var result_3271557919 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3271557923 = [];
      var i_536872649 = 0;
      var L_536872650 = (names_3271557917).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872649 < L_536872650)) break Label3;
            name_3271557923 = names_3271557917[chckIndx(i_536872649, 0, (names_3271557917).length - 1)];
            if (contains_3170894403(theme_3271557916.colors, name_3271557923)) {
            result_3271557919 = nimCopy(result_3271557919, HEX5BHEX5D_3170894493(theme_3271557916.colors, name_3271557923), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872649 = addInt(i_536872649, 1);
            if (!(((names_3271557917).length == L_536872650))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271557919 = nimCopy(result_3271557919, color_2634022945(default_3271557918), NTI2550136835);
    break BeforeRet;
  };

  return result_3271557919;

}

function color_2634022963(c_2634022964) {
  var result_2634022965 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2634022965.r = (c_2634022964.r / 255.0);
    result_2634022965.g = (c_2634022964.g / 255.0);
    result_2634022965.b = (c_2634022964.b / 255.0);
    result_2634022965.a = (c_2634022964.a / 255.0);

  return result_2634022965;

}

function color_3271558034(theme_3271558036, names_3271558037, default_3271558038) {
  var result_3271558039 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3271558043 = [];
      var i_536872653 = 0;
      var L_536872654 = (names_3271558037).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872653 < L_536872654)) break Label3;
            name_3271558043 = names_3271558037[chckIndx(i_536872653, 0, (names_3271558037).length - 1)];
            if (contains_3170894403(theme_3271558036.colors, name_3271558043)) {
            result_3271558039 = nimCopy(result_3271558039, HEX5BHEX5D_3170894493(theme_3271558036.colors, name_3271558043), NTI2550136835);
            break BeforeRet;
            }
            
            i_536872653 = addInt(i_536872653, 1);
            if (!(((names_3271558037).length == L_536872654))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271558039 = nimCopy(result_3271558039, color_2634022963(default_3271558038), NTI2550136835);
    break BeforeRet;
  };

  return result_3271558039;

}

function rgba_2550136933(r_2550136934, g_2550136935, b_2550136936, a_2550136937) {
  var result_2550136938 = ({r: 0, g: 0, b: 0, a: 0});

    result_2550136938 = nimCopy(result_2550136938, {r: r_2550136934, g: g_2550136935, b: b_2550136936, a: a_2550136937}, NTI2550136837);

  return result_2550136938;

}

function rawGet_2801797087(t_2801797090, key_2801797091, hc_2801797092, hc_2801797092_Idx) {
  var result_2801797093 = 0;

  BeforeRet: {
    hc_2801797092[hc_2801797092_Idx] = hash_1325400236(key_2801797091);
    if ((hc_2801797092[hc_2801797092_Idx] == 0)) {
    hc_2801797092[hc_2801797092_Idx] = 314159265;
    }
    
    if (((t_2801797090.data).length == 0)) {
    result_2801797093 = -1;
    break BeforeRet;
    }
    
    var h_2801797152 = (hc_2801797092[hc_2801797092_Idx] & (t_2801797090.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801797090.data[chckIndx(h_2801797152, 0, (t_2801797090.data).length - 1)].Field0)) break Label2;
          if (((t_2801797090.data[chckIndx(h_2801797152, 0, (t_2801797090.data).length - 1)].Field0 == hc_2801797092[hc_2801797092_Idx]) && (t_2801797090.data[chckIndx(h_2801797152, 0, (t_2801797090.data).length - 1)].Field1 == key_2801797091))) {
          result_2801797093 = h_2801797152;
          break BeforeRet;
          }
          
          h_2801797152 = nextTry_1308622883(h_2801797152, (t_2801797090.data).length - 1);
        }
    };
    result_2801797093 = subInt(-1, h_2801797152);
  };

  return result_2801797093;

}

function hasKey_2801797080(t_2801797083, key_2801797084) {
  var result_2801797085 = false;

    var hc_2801797086 = [0];
    result_2801797085 = (0 <= rawGet_2801797087(t_2801797083, key_2801797084, hc_2801797086, 0));

  return result_2801797085;

}

function contains_2801797074(t_2801797077, key_2801797078) {
  var result_2801797079 = false;

  BeforeRet: {
    result_2801797079 = hasKey_2801797080(t_2801797077, key_2801797078);
    break BeforeRet;
  };

  return result_2801797079;

}

function HEX5BHEX5D_2801797466(t_2801797469, key_2801797470) {
  var result_2801797471 = null;
  var result_2801797471_Idx = 0;

    var hcHEX60gensym22_2801797472 = [0];
    var indexHEX60gensym22_2801797479 = rawGet_2801797087(t_2801797469, key_2801797470, hcHEX60gensym22_2801797472, 0);
    if ((0 <= indexHEX60gensym22_2801797479)) {
    result_2801797471 = t_2801797469.data[chckIndx(indexHEX60gensym22_2801797479, 0, (t_2801797469.data).length - 1)]; result_2801797471_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850857(key_2801797470);
    }
    

  return [result_2801797471, result_2801797471_Idx];

}

function initTable_2801797570(initialSize_2801797573) {
  var result_2801797579 = ({data: [], counter: 0});

    var correctSizeHEX60gensym42_2801797581 = slotsNeeded_1308622891(chckRange(initialSize_2801797573, 0, 2147483647));
    result_2801797579.counter = 0;
    result_2801797579.data = new Array(chckRange(correctSizeHEX60gensym42_2801797581, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2801797581, 0, 2147483647) ; ++i) { result_2801797579.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2801797579;

}

function matches_2868904056(self_2868904057, node_2868904058, selection_2868904059) {
  var result_2868904060 = [];

  BeforeRet: {
    result_2868904060 = nimCopy(null, self_2868904057.matches(node_2868904058, {row: selection_2868904059.Field0.Field0, column: selection_2868904059.Field0.Field1, m_type: NTI2868903950}, {row: selection_2868904059.Field1.Field0, column: selection_2868904059.Field1.Field1, m_type: NTI2868903950}), NTI2868904033);
    break BeforeRet;
  };

  return result_2868904060;

}

function rawGet_2801797762(t_2801797765, key_2801797766, hc_2801797767, hc_2801797767_Idx) {
  var result_2801797768 = 0;

  BeforeRet: {
    hc_2801797767[hc_2801797767_Idx] = hash_1325400491(key_2801797766);
    if ((hc_2801797767[hc_2801797767_Idx] == 0)) {
    hc_2801797767[hc_2801797767_Idx] = 314159265;
    }
    
    if (((t_2801797765.data).length == 0)) {
    result_2801797768 = -1;
    break BeforeRet;
    }
    
    var h_2801797825 = (hc_2801797767[hc_2801797767_Idx] & (t_2801797765.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801797765.data[chckIndx(h_2801797825, 0, (t_2801797765.data).length - 1)].Field0)) break Label2;
          if (((t_2801797765.data[chckIndx(h_2801797825, 0, (t_2801797765.data).length - 1)].Field0 == hc_2801797767[hc_2801797767_Idx]) && eqStrings(t_2801797765.data[chckIndx(h_2801797825, 0, (t_2801797765.data).length - 1)].Field1, key_2801797766))) {
          result_2801797768 = h_2801797825;
          break BeforeRet;
          }
          
          h_2801797825 = nextTry_1308622883(h_2801797825, (t_2801797765.data).length - 1);
        }
    };
    result_2801797768 = subInt(-1, h_2801797825);
  };

  return result_2801797768;

}

function hasKey_2801797755(t_2801797758, key_2801797759) {
  var result_2801797760 = false;

    var hc_2801797761 = [0];
    result_2801797760 = (0 <= rawGet_2801797762(t_2801797758, key_2801797759, hc_2801797761, 0));

  return result_2801797760;

}

function contains_2801797749(t_2801797752, key_2801797753) {
  var result_2801797754 = false;

  BeforeRet: {
    result_2801797754 = hasKey_2801797755(t_2801797752, key_2801797753);
    break BeforeRet;
  };

  return result_2801797754;

}

function HEX5BHEX5D_2801798130(t_2801798133, key_2801798134) {
  var result_2801798135 = null;

    var hcHEX60gensym22_2801798136 = [0];
    var indexHEX60gensym22_2801798143 = rawGet_2801797762(t_2801798133, key_2801798134, hcHEX60gensym22_2801798136, 0);
    if ((0 <= indexHEX60gensym22_2801798143)) {
    result_2801798135 = t_2801798133.data[chckIndx(indexHEX60gensym22_2801798143, 0, (t_2801798133.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2801798134);
    }
    

  return result_2801798135;

}

function mustRehash_2801798483(t_2801798485) {
  var result_2801798486 = false;

    if (!((t_2801798485.counter < (t_2801798485.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801798486 = ((mulInt((t_2801798485.data).length, 2) < mulInt(t_2801798485.counter, 3)) || (subInt((t_2801798485.data).length, t_2801798485.counter) < 4));

  return result_2801798486;

}

function rawInsert_2801799032(t_2801799036, data_2801799037, data_2801799037_Idx, key_2801799038, val_2801799039, hc_2801799040, h_2801799041) {
    data_2801799037[data_2801799037_Idx][chckIndx(h_2801799041, 0, (data_2801799037[data_2801799037_Idx]).length - 1)].Field1 = nimCopy(null, key_2801799038, NTI33554449);
    data_2801799037[data_2801799037_Idx][chckIndx(h_2801799041, 0, (data_2801799037[data_2801799037_Idx]).length - 1)].Field2 = nimCopy(data_2801799037[data_2801799037_Idx][chckIndx(h_2801799041, 0, (data_2801799037[data_2801799037_Idx]).length - 1)].Field2, val_2801799039, NTI2835349507);
    data_2801799037[data_2801799037_Idx][chckIndx(h_2801799041, 0, (data_2801799037[data_2801799037_Idx]).length - 1)].Field0 = hc_2801799040;

  
}

function enlarge_2801798653(t_2801798656) {
    var n_2801798659 = [];
    n_2801798659 = new Array(chckRange(mulInt((t_2801798656.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801798656.data).length, 2), 0, 2147483647) ; ++i) { n_2801798659[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2801798656.data; t_2801798656.data = n_2801798659; n_2801798659 = Temporary1;    Label2: {
      var i_2801798728 = 0;
      var colontmp__536872684 = 0;
      colontmp__536872684 = (n_2801798659).length - 1;
      var res_536872685 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872685 <= colontmp__536872684)) break Label4;
            i_2801798728 = res_536872685;
            var eh_2801798802 = n_2801798659[chckIndx(i_2801798728, 0, (n_2801798659).length - 1)].Field0;
            if (isFilled_1308622880(eh_2801798802)) {
            var j_2801798806 = (eh_2801798802 & (t_2801798656.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2801798656.data[chckIndx(j_2801798806, 0, (t_2801798656.data).length - 1)].Field0)) break Label6;
                  j_2801798806 = nextTry_1308622883(j_2801798806, (t_2801798656.data).length - 1);
                }
            };
            rawInsert_2801799032(t_2801798656, t_2801798656, "data", n_2801798659[chckIndx(i_2801798728, 0, (n_2801798659).length - 1)].Field1, n_2801798659[chckIndx(i_2801798728, 0, (n_2801798659).length - 1)].Field2, eh_2801798802, j_2801798806);
            }
            
            res_536872685 = addInt(res_536872685, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801799261(t_2801799264, key_2801799265, hc_2801799266) {
  var result_2801799267 = 0;

  BeforeRet: {
    if (((t_2801799264.data).length == 0)) {
    result_2801799267 = -1;
    break BeforeRet;
    }
    
    var h_2801799323 = (hc_2801799266 & (t_2801799264.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801799264.data[chckIndx(h_2801799323, 0, (t_2801799264.data).length - 1)].Field0)) break Label2;
          if (((t_2801799264.data[chckIndx(h_2801799323, 0, (t_2801799264.data).length - 1)].Field0 == hc_2801799266) && eqStrings(t_2801799264.data[chckIndx(h_2801799323, 0, (t_2801799264.data).length - 1)].Field1, key_2801799265))) {
          result_2801799267 = h_2801799323;
          break BeforeRet;
          }
          
          h_2801799323 = nextTry_1308622883(h_2801799323, (t_2801799264.data).length - 1);
        }
    };
    result_2801799267 = subInt(-1, h_2801799323);
  };

  return result_2801799267;

}

function HEX5BHEX5DHEX3D_2801798280(t_2801798283, key_2801798284, val_2801798285) {
    if (((t_2801798283.data).length == 0)) {
    var correctSizeHEX60gensym56_2801798339 = slotsNeeded_1308622891(32);
    t_2801798283.counter = 0;
    t_2801798283.data = new Array(chckRange(correctSizeHEX60gensym56_2801798339, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2801798339, 0, 2147483647) ; ++i) { t_2801798283.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2801798344 = [0];
    var index_2801798351 = rawGet_2801797762(t_2801798283, key_2801798284, hc_2801798344, 0);
    if ((0 <= index_2801798351)) {
    t_2801798283.data[chckIndx(index_2801798351, 0, (t_2801798283.data).length - 1)].Field2 = nimCopy(t_2801798283.data[chckIndx(index_2801798351, 0, (t_2801798283.data).length - 1)].Field2, val_2801798285, NTI2835349507);
    }
    else {
      if (((t_2801798283.data).length == 0)) {
      var correctSizeHEX60gensym59_2801798478 = slotsNeeded_1308622891(32);
      t_2801798283.counter = 0;
      t_2801798283.data = new Array(chckRange(correctSizeHEX60gensym59_2801798478, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_2801798478, 0, 2147483647) ; ++i) { t_2801798283.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2801798483(t_2801798283)) {
      enlarge_2801798653(t_2801798283);
      index_2801798351 = rawGetKnownHC_2801799261(t_2801798283, key_2801798284, hc_2801798344[0]);
      }
      
      index_2801798351 = subInt(-1, index_2801798351);
      rawInsert_2801799032(t_2801798283, t_2801798283, "data", key_2801798284, val_2801798285, hc_2801798344[0], index_2801798351);
      t_2801798283.counter = addInt(t_2801798283.counter, 1);
    }
    

  
}

function HEX24_2868904103(node_2868904104) {
  var result_2868904105 = [];

  BeforeRet: {
    result_2868904105 = nimCopy(null, cstrToNimstr(node_2868904104.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2868904105;

}

function formatValue_2801799773(result_2801799775, result_2801799775_Idx, value_2801799776, specifier_2801799777) {
    formatValue_721420459(result_2801799775, result_2801799775_Idx, HEX24_2868904103(value_2801799776), specifier_2801799777);

  
}

function insert_2801796961(x_2801796963, x_2801796963_Idx, item_2801796964, i_2801796965) {
    var it_2801796985 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2801796963[x_2801796963_Idx] = x_2801796963[x_2801796963_Idx] || []; x_2801796963[x_2801796963_Idx].splice(i_2801796965, 0, it_2801796985);
    x_2801796963[x_2801796963_Idx][chckIndx(i_2801796965, 0, (x_2801796963[x_2801796963_Idx]).length - 1)] = nimCopy(x_2801796963[x_2801796963_Idx][chckIndx(i_2801796965, 0, (x_2801796963[x_2801796963_Idx]).length - 1)], item_2801796964, NTI2801795206);

  
}

function splitAt_2801796899(line_2801796900, line_2801796900_Idx, index_2801796901) {
    var index_2801796902 = index_2801796901;
    var i_2801796903 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2801796903 < (line_2801796900[line_2801796900_Idx].parts).length) && ((line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)].text).length <= index_2801796902))) break Label2;
          index_2801796902 = subInt(index_2801796902, (line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)].text).length);
          i_2801796903 = addInt(i_2801796903, 1);
        }
    };
    if ((((i_2801796903 < (line_2801796900[line_2801796900_Idx].parts).length) && !((index_2801796902 == 0))) && !((index_2801796902 == (line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)].text).length)))) {
    var copy_2801796918 = nimCopy(null, line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)], NTI2801795206);
    line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2801796900[line_2801796900_Idx].parts[chckIndx(i_2801796903, 0, (line_2801796900[line_2801796900_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2801796902, 1))), NTI33554449);
    copy_2801796918.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2801796918.text, HEX2EHEX2E_1040187488(index_2801796902, 1)), NTI33554449);
    insert_2801796961(line_2801796900[line_2801796900_Idx], "parts", copy_2801796918, chckRange(addInt(i_2801796903, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2801796995(line_2801796996, line_2801796996_Idx, first_2801796997, last_2801796998, scope_2801796999, priority_2801797000) {
    var index_2801797001 = 0;
    Label1: {
      var i_2801797009 = 0;
      var colontmp__536872691 = 0;
      colontmp__536872691 = (line_2801796996[line_2801796996_Idx].parts).length - 1;
      var res_536872692 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872692 <= colontmp__536872691)) break Label3;
            i_2801797009 = res_536872692;
            if ((((first_2801796997 <= index_2801797001) && (addInt(index_2801797001, (line_2801796996[line_2801796996_Idx].parts[chckIndx(i_2801797009, 0, (line_2801796996[line_2801796996_Idx].parts).length - 1)].text).length) <= last_2801796998)) && (priority_2801797000 < line_2801796996[line_2801796996_Idx].parts[chckIndx(i_2801797009, 0, (line_2801796996[line_2801796996_Idx].parts).length - 1)].priority))) {
            line_2801796996[line_2801796996_Idx].parts[chckIndx(i_2801797009, 0, (line_2801796996[line_2801796996_Idx].parts).length - 1)].scope = nimCopy(null, scope_2801796999, NTI33554449);
            line_2801796996[line_2801796996_Idx].parts[chckIndx(i_2801797009, 0, (line_2801796996[line_2801796996_Idx].parts).length - 1)].priority = priority_2801797000;
            }
            
            index_2801797001 = addInt(index_2801797001, (line_2801796996[line_2801796996_Idx].parts[chckIndx(i_2801797009, 0, (line_2801796996[line_2801796996_Idx].parts).length - 1)].text).length);
            res_536872692 = addInt(res_536872692, 1);
          }
      };
    };

  
}

function mustRehash_2801800039(t_2801800041) {
  var result_2801800042 = false;

    if (!((t_2801800041.counter < (t_2801800041.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801800042 = ((mulInt((t_2801800041.data).length, 2) < mulInt(t_2801800041.counter, 3)) || (subInt((t_2801800041.data).length, t_2801800041.counter) < 4));

  return result_2801800042;

}

function rawInsert_2801800588(t_2801800592, data_2801800593, data_2801800593_Idx, key_2801800594, val_2801800595, hc_2801800596, h_2801800597) {
    data_2801800593[data_2801800593_Idx][chckIndx(h_2801800597, 0, (data_2801800593[data_2801800593_Idx]).length - 1)].Field1 = key_2801800594;
    data_2801800593[data_2801800593_Idx][chckIndx(h_2801800597, 0, (data_2801800593[data_2801800593_Idx]).length - 1)].Field2 = val_2801800595;
    data_2801800593[data_2801800593_Idx][chckIndx(h_2801800597, 0, (data_2801800593[data_2801800593_Idx]).length - 1)].Field0 = hc_2801800596;

  
}

function enlarge_2801800209(t_2801800212) {
    var n_2801800215 = [];
    n_2801800215 = new Array(chckRange(mulInt((t_2801800212.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801800212.data).length, 2), 0, 2147483647) ; ++i) { n_2801800215[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2801800212.data; t_2801800212.data = n_2801800215; n_2801800215 = Temporary1;    Label2: {
      var i_2801800284 = 0;
      var colontmp__536872696 = 0;
      colontmp__536872696 = (n_2801800215).length - 1;
      var res_536872697 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872697 <= colontmp__536872696)) break Label4;
            i_2801800284 = res_536872697;
            var eh_2801800358 = n_2801800215[chckIndx(i_2801800284, 0, (n_2801800215).length - 1)].Field0;
            if (isFilled_1308622880(eh_2801800358)) {
            var j_2801800362 = (eh_2801800358 & (t_2801800212.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2801800212.data[chckIndx(j_2801800362, 0, (t_2801800212.data).length - 1)].Field0)) break Label6;
                  j_2801800362 = nextTry_1308622883(j_2801800362, (t_2801800212.data).length - 1);
                }
            };
            rawInsert_2801800588(t_2801800212, t_2801800212, "data", n_2801800215[chckIndx(i_2801800284, 0, (n_2801800215).length - 1)].Field1, n_2801800215[chckIndx(i_2801800284, 0, (n_2801800215).length - 1)].Field2, eh_2801800358, j_2801800362);
            }
            
            res_536872697 = addInt(res_536872697, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801800817(t_2801800820, key_2801800821, hc_2801800822) {
  var result_2801800823 = 0;

  BeforeRet: {
    if (((t_2801800820.data).length == 0)) {
    result_2801800823 = -1;
    break BeforeRet;
    }
    
    var h_2801800879 = (hc_2801800822 & (t_2801800820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801800820.data[chckIndx(h_2801800879, 0, (t_2801800820.data).length - 1)].Field0)) break Label2;
          if (((t_2801800820.data[chckIndx(h_2801800879, 0, (t_2801800820.data).length - 1)].Field0 == hc_2801800822) && (t_2801800820.data[chckIndx(h_2801800879, 0, (t_2801800820.data).length - 1)].Field1 == key_2801800821))) {
          result_2801800823 = h_2801800879;
          break BeforeRet;
          }
          
          h_2801800879 = nextTry_1308622883(h_2801800879, (t_2801800820.data).length - 1);
        }
    };
    result_2801800823 = subInt(-1, h_2801800879);
  };

  return result_2801800823;

}

function HEX5BHEX5DHEX3D_2801799836(t_2801799839, key_2801799840, val_2801799841) {
    if (((t_2801799839.data).length == 0)) {
    var correctSizeHEX60gensym73_2801799895 = slotsNeeded_1308622891(32);
    t_2801799839.counter = 0;
    t_2801799839.data = new Array(chckRange(correctSizeHEX60gensym73_2801799895, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym73_2801799895, 0, 2147483647) ; ++i) { t_2801799839.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2801799900 = [0];
    var index_2801799907 = rawGet_2801797087(t_2801799839, key_2801799840, hc_2801799900, 0);
    if ((0 <= index_2801799907)) {
    t_2801799839.data[chckIndx(index_2801799907, 0, (t_2801799839.data).length - 1)].Field2 = val_2801799841;
    }
    else {
      if (((t_2801799839.data).length == 0)) {
      var correctSizeHEX60gensym76_2801800034 = slotsNeeded_1308622891(32);
      t_2801799839.counter = 0;
      t_2801799839.data = new Array(chckRange(correctSizeHEX60gensym76_2801800034, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym76_2801800034, 0, 2147483647) ; ++i) { t_2801799839.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2801800039(t_2801799839)) {
      enlarge_2801800209(t_2801799839);
      index_2801799907 = rawGetKnownHC_2801800817(t_2801799839, key_2801799840, hc_2801799900[0]);
      }
      
      index_2801799907 = subInt(-1, index_2801799907);
      rawInsert_2801800588(t_2801799839, t_2801799839, "data", key_2801799840, val_2801799841, hc_2801799900[0], index_2801799907);
      t_2801799839.counter = addInt(t_2801799839.counter, 1);
    }
    

  
}

function getStyledText_2801797023(self_2801797024, i_2801797025) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2801797026 = [null];

  BeforeRet: {
    if (contains_2801797074(self_2801797024.styledTextCache, i_2801797025)) {
    result_2801797026[0] = (Temporary1 = HEX5BHEX5D_2801797466(self_2801797024.styledTextCache, i_2801797025), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2801797565 = nimCopy(null, self_2801797024.lines[chckIndx(i_2801797025, 0, (self_2801797024.lines).length - 1)], NTI33554449);
      result_2801797026[0] = {index: i_2801797025, parts: [{text: nimCopy(null, line_2801797565, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      var regexes_2801797595 = [initTable_2801797570(32)];
      if ((((self_2801797024.tsParser == null) || (self_2801797024.highlightQuery == null)) || (self_2801797024.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2801797627 = null;
        var colontmp__536872675 = [];
        colontmp__536872675 = matches_2868904056(self_2801797024.highlightQuery, self_2801797024.currentTree.rootNode, {Field0: {Field0: i_2801797025, Field1: 0}, Field1: {Field0: i_2801797025, Field1: (line_2801797565).length}});
        var i_536872677 = 0;
        var L_536872678 = (colontmp__536872675).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872677 < L_536872678)) break Label4;
              match_2801797627 = colontmp__536872675[chckIndx(i_536872677, 0, (colontmp__536872675).length - 1)];
              var predicates_2801797628 = self_2801797024.highlightQuery.predicatesForPattern(match_2801797627.pattern);
              Label5: {
                var capture_2801797651 = null;
                var colontmp__536872670 = [];
                colontmp__536872670 = match_2801797627.captures;
                var i_536872672 = 0;
                var L_536872673 = (colontmp__536872670).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536872672 < L_536872673)) break Label7;
                      capture_2801797651 = colontmp__536872670[chckIndx(i_536872672, 0, (colontmp__536872670).length - 1)];
                      Label8: {
                        var scope_2801797652 = capture_2801797651.name;
                        var node_2801797653 = capture_2801797651.node;
                        var matches_2801797654 = true;
                        Label9: {
                          var predicate_2801797677 = null;
                          var i_536872667 = 0;
                          var L_536872668 = (predicates_2801797628).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536872667 < L_536872668)) break Label11;
                                predicate_2801797677 = predicates_2801797628[chckIndx(i_536872667, 0, (predicates_2801797628).length - 1)];
                                if (!(matches_2801797654)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2801797700 = null;
                                  var colontmp__536872661 = [];
                                  colontmp__536872661 = predicate_2801797677.operands;
                                  var i_536872663 = 0;
                                  var L_536872664 = (colontmp__536872661).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872663 < L_536872664)) break Label14;
                                        operand_2801797700 = colontmp__536872661[chckIndx(i_536872663, 0, (colontmp__536872661).length - 1)];
                                        var value_2801797701 = cstrToNimstr(operand_2801797700.type);
                                        if (!((operand_2801797700.name == scope_2801797652))) {
                                        matches_2801797654 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2801797677.operator))) {
                                        case "match?":
                                          if (contains_2801797749(regexes_2801797595[0], value_2801797701)) {
                                          Temporary15 = HEX5BHEX5D_2801798130(regexes_2801797595[0], value_2801797701);
                                          }
                                          else {
                                            var regex_2801798229 = re_2835349563(value_2801797701);
                                            HEX5BHEX5DHEX3D_2801798280(regexes_2801797595[0], value_2801797701, regex_2801798229);
                                          Temporary15 = regex_2801798229;
                                          }
                                          
                                          var regex_2801799564 = nimCopy(null, Temporary15, NTI2835349507);
                                          var nodeText_2801799565 = contentString_2801796773(self_2801797024, getRange_2868904120(node_2801797653));
                                          if (!((matchLen_2835349540(nodeText_2801799565, regex_2801799564, 0) == (nodeText_2801799565).length))) {
                                          matches_2801797654 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2801797749(regexes_2801797595[0], value_2801797701)) {
                                          Temporary16 = HEX5BHEX5D_2801798130(regexes_2801797595[0], value_2801797701);
                                          }
                                          else {
                                            var regex_2801799696 = re_2835349563(value_2801797701);
                                            HEX5BHEX5DHEX3D_2801798280(regexes_2801797595[0], value_2801797701, regex_2801799696);
                                          Temporary16 = regex_2801799696;
                                          }
                                          
                                          var regex_2801799753 = nimCopy(null, Temporary16, NTI2835349507);
                                          var nodeText_2801799754 = contentString_2801796773(self_2801797024, getRange_2868904120(node_2801797653));
                                          if ((matchLen_2835349540(nodeText_2801799754, regex_2801799753, 0) == (nodeText_2801799754).length)) {
                                          matches_2801797654 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2801799755 = contentString_2801796773(self_2801797024, getRange_2868904120(node_2801797653));
                                          if (!(eqStrings(nodeText_2801799755, value_2801797701))) {
                                          matches_2801797654 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2801799756 = contentString_2801796773(self_2801797024, getRange_2868904120(node_2801797653));
                                          if (eqStrings(nodeText_2801799756, value_2801797701)) {
                                          matches_2801797654 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2801799761 = [mnewString(0)];
                                          fmtRes_2801799761[0].push.apply(fmtRes_2801799761[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2801799761, 0, predicate_2801797677.operator);
                                          fmtRes_2801799761[0].push.apply(fmtRes_2801799761[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801799761[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872663 = addInt(i_536872663, 1);
                                        if (!(((colontmp__536872661).length == L_536872664))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848881(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2801799762 = contentString_2801796773(self_2801797024, getRange_2868904120(node_2801797653));
                                var fmtRes_2801799767 = [mnewString(0)];
                                formatValue_2516582756(fmtRes_2801799767, 0, match_2801797627.pattern, []);
                                fmtRes_2801799767[0].push.apply(fmtRes_2801799767[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2801799767, 0, nodeText_2801799762, []);
                                fmtRes_2801799767[0].push.apply(fmtRes_2801799767[0], [39,32]);;
                                formatValue_2801799773(fmtRes_2801799767, 0, node_2801797653, []);
                                fmtRes_2801799767[0].push.apply(fmtRes_2801799767[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2801799778(fmtRes_2801799767, 0, matches_2801797654, []);
                                fmtRes_2801799767[0].push.apply(fmtRes_2801799767[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2801799767[0], NTI33554449)]);
                                }
                                
                                i_536872667 = addInt(i_536872667, 1);
                                if (!(((predicates_2801797628).length == L_536872668))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2801797654)) {
                        break Label8;
                        }
                        
                        var nodeRange_2801799783 = getRange_2868904120(node_2801797653);
                        if ((nodeRange_2801799783.Field0.Field0 == i_2801797025)) {
                        splitAt_2801796899(result_2801797026, 0, nodeRange_2801799783.Field0.Field1);
                        }
                        
                        if ((nodeRange_2801799783.Field1.Field0 == i_2801797025)) {
                        splitAt_2801796899(result_2801797026, 0, nodeRange_2801799783.Field1.Field1);
                        }
                        
                        if ((nodeRange_2801799783.Field0.Field0 < i_2801797025)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2801799783.Field0.Field0 == i_2801797025)) {
                        Temporary17 = nodeRange_2801799783.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2801797565).length;
                        }
                        }
                        var first_2801799784 = Temporary17;
                        if ((nodeRange_2801799783.Field1.Field0 < i_2801797025)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2801799783.Field1.Field0 == i_2801797025)) {
                        Temporary18 = nodeRange_2801799783.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2801797565).length;
                        }
                        }
                        var last_2801799785 = Temporary18;
                        overrideStyle_2801796995(result_2801797026, 0, first_2801799784, last_2801799785, cstrToNimstr(scope_2801797652), match_2801797627.pattern);
                      };
                      i_536872672 = addInt(i_536872672, 1);
                      if (!(((colontmp__536872670).length == L_536872673))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536872677 = addInt(i_536872677, 1);
              if (!(((colontmp__536872675).length == L_536872678))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      HEX5BHEX5DHEX3D_2801799836(self_2801797024.styledTextCache, i_2801797025, result_2801797026[0]);
    }
    
  };

  return result_2801797026[0];

}

function getOrDefault_3271558226(t_3271558229, key_3271558230, default_3271558231) {
    var Temporary1;

  var result_3271558232 = [];

    var hcHEX60gensym21_3271558235 = [0];
    var indexHEX60gensym21_3271558242 = rawGet_2801803390(t_3271558229, key_3271558230, hcHEX60gensym21_3271558235, 0);
    if ((0 <= indexHEX60gensym21_3271558242)) {
    Temporary1 = t_3271558229.data[chckIndx(indexHEX60gensym21_3271558242, 0, (t_3271558229.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271558231;
    }
    
    result_3271558232 = nimCopy(null, Temporary1, NTI2801795319);

  return result_3271558232;

}

function map_3271558327(s_3271558330, op_3271558332) {
  var result_3271558333 = [];

    result_3271558333 = new Array(chckRange((s_3271558330).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3271558330).length, 0, 2147483647) ; ++i) { result_3271558333[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3271558348 = 0;
      var colontmp__536872701 = 0;
      colontmp__536872701 = (s_3271558330).length;
      var i_536872702 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872702 < colontmp__536872701)) break Label3;
            i_3271558348 = i_536872702;
            result_3271558333[chckIndx(i_3271558348, 0, (result_3271558333).length - 1)] = nimCopy(result_3271558333[chckIndx(i_3271558348, 0, (result_3271558333).length - 1)], op_3271558332(s_3271558330[chckIndx(i_3271558348, 0, (s_3271558330).length - 1)]), NTI3271557124);
            i_536872702 = addInt(i_536872702, 1);
          }
      };
    };

  return result_3271558333;

}

function clampToLine_3271557137(selection_3271557138, line_3271557139, lineLength_3271557140) {
    var Temporary1;
    var Temporary2;

  var result_3271557143 = {Field0: 0, Field1: 0};

    if ((selection_3271557138.Field0.Field0 < line_3271557139)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3271557138.Field0.Field0 == line_3271557139)) {
    Temporary1 = selection_3271557138.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3271557140;
    }
    }
    result_3271557143.Field0 = Temporary1;
    if ((selection_3271557138.Field1.Field0 < line_3271557139)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3271557138.Field1.Field0 == line_3271557139)) {
    Temporary2 = selection_3271557138.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3271557140;
    }
    }
    result_3271557143.Field1 = Temporary2;

  return result_3271557143;

}

function len_2801796851(line_2801796852) {
  var result_2801796853 = 0;

    result_2801796853 = 0;
    Label1: {
      var p_2801796876 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872706 = 0;
      var L_536872707 = (line_2801796852.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872706 < L_536872707)) break Label3;
            p_2801796876 = line_2801796852.parts[chckIndx(i_536872706, 0, (line_2801796852.parts).length - 1)];
            result_2801796853 = addInt(result_2801796853, (p_2801796876.text).length);
            i_536872706 = addInt(i_536872706, 1);
            if (!(((line_2801796852.parts).length == L_536872707))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2801796853;

}

function contains_2415919483(selection_2415919484, cursor_2415919485) {
  var result_2415919486 = false;

    result_2415919486 = (HEX3CHEX3D_2415919447(selection_2415919484.Field0, cursor_2415919485) && HEX3CHEX3D_2415919447(cursor_2415919485, selection_2415919484.Field1));

  return result_2415919486;

}

function renderTextHighlight_3271557144(panel_3271557145, app_3271557146, startOffset_3271557147, endOffset_3271557148, line_3271557149, startIndex_3271557150, selection_3271557151, selectionClamped_3271557154, part_3271557155, color_3271557156) {
  BeforeRet: {
    var left_3271557157 = 0.0;
    var right_3271557158 = 0.0;
    if ((((startIndex_3271557150 < selectionClamped_3271557154.Field1) && (selectionClamped_3271557154.Field0 < addInt(startIndex_3271557150, (part_3271557155.text).length))) && (0 < (part_3271557155.text).length))) {
    left_3271557157 = (startOffset_3271557147 + ((nimMax(0, subInt(selectionClamped_3271557154.Field0, startIndex_3271557150)) / ((part_3271557155.text).length - 0.0)) * (endOffset_3271557148 - startOffset_3271557147)));
    right_3271557158 = (startOffset_3271557147 + ((nimMin((part_3271557155.text).length, subInt(selectionClamped_3271557154.Field1, startIndex_3271557150)) / ((part_3271557155.text).length - 0.0)) * (endOffset_3271557148 - startOffset_3271557147)));
    }
    else {
    if (((((part_3271557155.text).length == 0) && contains_2415919483(selection_3271557151, {Field0: line_3271557149, Field1: startIndex_3271557150})) && !(isEmpty_2415919476(selection_3271557151)))) {
    left_3271557157 = 0.0;
    right_3271557158 = Math.ceil((charWidth_2499805343(app_3271557146.platform) * 0.5));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3271557145.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2516582411), left: left_3271557157, right: right_3271557158, fillBackground: true, backgroundColor: nimCopy(null, color_3271557156, NTI2550136835), lastHierarchyChange: panel_3271557145.lastHierarchyChange, m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3271557181(panel_3271557182, app_3271557183, startOffset_3271557184, endOffset_3271557185, line_3271557186, startIndex_3271557187, selections_3271557188, selectionClamped_3271557191, part_3271557192, color_3271557193) {
    Label1: {
      var i_3271557201 = 0;
      var colontmp__536872710 = 0;
      colontmp__536872710 = (selections_3271557188).length;
      var i_536872711 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872711 < colontmp__536872710)) break Label3;
            i_3271557201 = i_536872711;
            renderTextHighlight_3271557144(panel_3271557182, app_3271557183, startOffset_3271557184, endOffset_3271557185, line_3271557186, startIndex_3271557187, selections_3271557188[chckIndx(i_3271557201, 0, (selections_3271557188).length - 1)], selectionClamped_3271557191[chckIndx(i_3271557201, 0, (selectionClamped_3271557191).length - 1)], part_3271557192, color_3271557193);
            i_536872711 = addInt(i_536872711, 1);
          }
      };
    };

  
}

function isSome_3170894682(self_3170894684) {
  var result_3170894685 = false;

    result_3170894685 = self_3170894684.has;

  return result_3170894685;

}

function get_3271558597(self_3271558599, otherwise_3271558600) {
    var Temporary1;

  var result_3271558601 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3170894682(self_3271558599)) {
    Temporary1 = self_3271558599.val;
    }
    else {
    Temporary1 = otherwise_3271558600;
    }
    
    result_3271558601 = nimCopy(result_3271558601, Temporary1, NTI2550136835);

  return result_3271558601;

}

function getCascading_2667577548(table_2667577550, key_2667577551, default_2667577552) {
  var result_2667577553 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2667577596(table_2667577550, key_2667577551)) {
    result_2667577553 = nimCopy(result_2667577553, HEX5BHEX5D_2667577901(table_2667577550, key_2667577551), NTI2667577348);
    break BeforeRet;
    }
    
    var index_2667577980 = nsuRFindStr(key_2667577551, [46], 0, -1);
    if (!((index_2667577980 == -1))) {
    result_2667577553 = nimCopy(result_2667577553, getCascading_2667577548(table_2667577550, HEX5BHEX5D_855639291(key_2667577551, HEX2EHEX2E_805306418(0, subInt(index_2667577980, 1))), default_2667577552), NTI2667577348);
    break BeforeRet;
    }
    
    result_2667577553 = nimCopy(result_2667577553, default_2667577552, NTI2667577348);
    break BeforeRet;
  };

  return result_2667577553;

}

function tokenColor_3271558569(theme_3271558571, name_3271558572, default_3271558573) {
  var result_3271558574 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3271558574 = nimCopy(result_3271558574, get_3271558597(getCascading_2667577548(theme_3271558571.tokenColors, name_3271558572, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2634022945(default_3271558573)), NTI2550136835);
    break BeforeRet;
  };

  return result_3271558574;

}

function createPartWidget_3271557202(text_3271557203, startOffset_3271557204, width_3271557205, color_3271557206, frameIndex_3271557207) {
  var result_3271557208 = null;

    result_3271557208 = ({m_type: NTI2516582420, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3271557208.text = text_3271557203.slice(0);
    result_3271557208.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 1}};
    result_3271557208.left = startOffset_3271557204;
    result_3271557208.right = startOffset_3271557204 + width_3271557205;
    result_3271557208.frameIndex = frameIndex_3271557207;
    result_3271557208.foregroundColor = color_3271557206;

  return result_3271557208;

}

function updateWidget_3271557221(self_3271557222, app_3271557223, widget_3271557224, frameIndex_3271557225) {
    var Temporary1;
    
function HEX3Aanonymous_3271557425(wf_3271557436) {
      var result_3271557439 = [];

        result_3271557439 = nimCopy(null, ([32,45,32] || []).concat(wf_3271557436.name || []), NTI33554449);

      return result_3271557439;

    }
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary17;
    var Temporary19;
    var Temporary20;
              
function renderLine_3271558150(i_3271558151, down_3271558152) {
                  
function HEX3Aanonymous_3271558296(s_3271558304) {
                    var result_3271558307 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3271558307 = nimCopy(result_3271558307, normalized_2415919470(s_3271558304), NTI2415919115);

                    return result_3271558307;

                  }
                  
function HEX3Aanonymous_3271558316(s_3271558323) {
                    var result_3271558326 = {Field0: 0, Field1: 0};

                      result_3271558326 = nimCopy(result_3271558326, clampToLine_3271557137(s_3271558323, i_3271558151, len_2801796851(styledText_3271558155)), NTI3271557124);

                    return result_3271558326;

                  }
                  
function HEX3Aanonymous_3271558435(s_3271558443) {
                    var result_3271558446 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3271558446 = nimCopy(result_3271558446, normalized_2415919470(s_3271558443), NTI2415919115);

                    return result_3271558446;

                  }
                  
function HEX3Aanonymous_3271558455(s_3271558462) {
                    var result_3271558465 = {Field0: 0, Field1: 0};

                      result_3271558465 = nimCopy(result_3271558465, clampToLine_3271557137(s_3271558462, i_3271558151, len_2801796851(styledText_3271558155)), NTI3271557124);

                    return result_3271558465;

                  }
                                  var Temporary7;
                          var Temporary8;

                var result_3271558153 = false;

                BeforeRet: {
                  var top_3271558154 = ((subInt(i_3271558151, self_3271557222.previousBaseIndex) * totalLineHeight_3271557227) + self_3271557222.scrollOffset);
                  if ((contentPanel_3271557390.lastBounds.h <= top_3271558154)) {
                  result_3271558153 = !(down_3271558152);
                  break BeforeRet;
                  }
                  
                  if (((top_3271558154 + totalLineHeight_3271557227) <= 0.0)) {
                  result_3271558153 = down_3271558152;
                  break BeforeRet;
                  }
                  
                  var styledText_3271558155 = getStyledText_2801797023(self_3271557222.document, i_3271558151);
                  var selectionsNormalizedOnLine_3271558315 = map_2801795507(getOrDefault_3271558226(selectionsPerLine_3271557552[0], i_3271558151, []), HEX3Aanonymous_3271558296);
                  var selectionsClampedOnLine_3271558358 = map_3271558327(selectionsNormalizedOnLine_3271558315, HEX3Aanonymous_3271558316);
                  var highlightsNormalizedOnLine_3271558454 = map_2801795507(getOrDefault_3271558226(highlightsPerLine_3271557807, i_3271558151, []), HEX3Aanonymous_3271558435);
                  var highlightsClampedOnLine_3271558472 = map_3271558327(highlightsNormalizedOnLine_3271558454, HEX3Aanonymous_3271558455);
                  var lineWidget_3271558473 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2516582411), left: 1.0, right: -1.0, top: top_3271558154, bottom: (top_3271558154 + totalLineHeight_3271557227), lastHierarchyChange: frameIndex_3271557225, m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  var startOffset_3271558474 = [0.0];
                  var startIndex_3271558475 = 0;
                  Label1: {
                    var partIndex_3271558481 = 0;
                    var part_3271558482 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536872638 = 0;
                    var L_536872639 = (styledText_3271558155.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536872638 < L_536872639)) break Label3;
                          partIndex_3271558481 = i_536872638;
                          part_3271558482 = nimCopy(part_3271558482, styledText_3271558155.parts[chckIndx(i_536872638, 0, (styledText_3271558155.parts).length - 1)], NTI2801795206);
                          var width_3271558483 = ((part_3271558482.text).length * charWidth_3271557228);
                          renderTextHighlight_3271557181(lineWidget_3271558473, app_3271557223, startOffset_3271558474[0], (startOffset_3271558474[0] + width_3271558483), i_3271558151, startIndex_3271558475, selectionsNormalizedOnLine_3271558315, selectionsClampedOnLine_3271558358, part_3271558482, selectionColor_3271557909);
                          renderTextHighlight_3271557181(lineWidget_3271558473, app_3271557223, startOffset_3271558474[0], (startOffset_3271558474[0] + width_3271558483), i_3271558151, startIndex_3271558475, highlightsNormalizedOnLine_3271558454, highlightsClampedOnLine_3271558472, part_3271558482, highlightColor_3271558029);
                          Label4: {
                            var selection_3271558563 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536872634 = [];
                            colontmp__536872634 = getOrDefault_3271558226(selectionsPerLine_3271557552[0], i_3271558151, []);
                            var i_536872635 = 0;
                            var L_536872636 = (colontmp__536872634).length;
                            Label5: {
                                Label6: while (true) {
                                if (!(i_536872635 < L_536872636)) break Label6;
                                  selection_3271558563 = colontmp__536872634[chckIndx(i_536872635, 0, (colontmp__536872634).length - 1)];
                                  if ((((selection_3271558563.Field1.Field0 == i_3271558151) && (startIndex_3271558475 <= selection_3271558563.Field1.Field1)) && (selection_3271558563.Field1.Field1 <= addInt(startIndex_3271558475, (part_3271558482.text).length)))) {
                                  if (((part_3271558482.text).length == 0)) {
                                  Temporary7 = 0.0;
                                  }
                                  else {
                                  Temporary7 = ((subInt(selection_3271558563.Field1.Field1, startIndex_3271558475) / (part_3271558482.text).length) * width_3271558483);
                                  }
                                  
                                  var offsetFromPartStart_3271558564 = Temporary7;
                                  lineWidget_3271558473.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2516582411), left: (startOffset_3271558474[0] + offsetFromPartStart_3271558564), right: ((startOffset_3271558474[0] + offsetFromPartStart_3271558564) + (cursorWidth_3271557903 * charWidth_3271557228)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3271558149, NTI2550136835), lastHierarchyChange: frameIndex_3271557225, m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536872635 = addInt(i_536872635, 1);
                                  if (!(((colontmp__536872634).length == L_536872636))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3271558482.scope).length == 0)) {
                          Temporary8 = textColor_3271557386;
                          }
                          else {
                          Temporary8 = tokenColor_3271558569(app_3271557223.theme, part_3271558482.scope, rgb_2550136919(255, 200, 200));
                          }
                          
                          var color_3271558609 = nimCopy(null, Temporary8, NTI2550136835);
                          var partWidget_3271558610 = createPartWidget_3271557202(part_3271558482.text, startOffset_3271558474[0], width_3271558483, color_3271558609, frameIndex_3271557225);
                          styledText_3271558155.parts[chckIndx(partIndex_3271558481, 0, (styledText_3271558155.parts).length - 1)].bounds.x = partWidget_3271558610.left;
                          styledText_3271558155.parts[chckIndx(partIndex_3271558481, 0, (styledText_3271558155.parts).length - 1)].bounds.y = lineWidget_3271558473.top;
                          styledText_3271558155.parts[chckIndx(partIndex_3271558481, 0, (styledText_3271558155.parts).length - 1)].bounds.w = (partWidget_3271558610.right - partWidget_3271558610.left);
                          styledText_3271558155.parts[chckIndx(partIndex_3271558481, 0, (styledText_3271558155.parts).length - 1)].bounds.h = (lineWidget_3271558473.bottom - lineWidget_3271558473.top);
                          HEX2BHEX3D_855640304(startOffset_3271558474, 0, width_3271558483);
                          startIndex_3271558475 = addInt(startIndex_3271558475, (part_3271558482.text).length);
                          lineWidget_3271558473.children.push(partWidget_3271558610);;
                          i_536872638 = addInt(i_536872638, 1);
                          if (!(((styledText_3271558155.parts).length == L_536872639))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  self_3271557222.lastRenderedLines.push(styledText_3271558155);;
                  contentPanel_3271557390.children.push(lineWidget_3271558473);;
                  result_3271558153 = true;
                  break BeforeRet;
                };

                return result_3271558153;

              }

  BeforeRet: {
    var lineHeight_3271557226 = lineHeight_2499805338(app_3271557223.platform);
    var totalLineHeight_3271557227 = totalLineHeight_2499805351(app_3271557223.platform);
    var charWidth_3271557228 = charWidth_2499805343(app_3271557223.platform);
    var textColor_3271557386 = color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3271557387 = null;
    var headerPart1Text_3271557388 = null;
    var headerPart2Text_3271557389 = null;
    var contentPanel_3271557390 = null;
    if (((widget_3271557224.children).length == 0)) {
    headerPanel_3271557387 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2516582411), bottom: totalLineHeight_3271557227, lastHierarchyChange: frameIndex_3271557225, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3271557224.children.push(headerPanel_3271557387);;
    headerPart1Text_3271557388 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(0.0, 1.0)}, NTI2516582411), lastHierarchyChange: frameIndex_3271557225, foregroundColor: nimCopy(null, textColor_3271557386, NTI2550136835), m_type: NTI2516582420, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3271557387.children.push(headerPart1Text_3271557388);;
    headerPart2Text_3271557389 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707293(1.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), pivot: vec2_2130707293(1.0, 0.0), lastHierarchyChange: frameIndex_3271557225, foregroundColor: nimCopy(null, textColor_3271557386, NTI2550136835), m_type: NTI2516582420, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3271557387.children.push(headerPart2Text_3271557389);;
    contentPanel_3271557390 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), top: totalLineHeight_3271557227, lastHierarchyChange: frameIndex_3271557225, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3271557390.maskContent = true;
    widget_3271557224.children.push(contentPanel_3271557390);;
    layoutWidget_2516582724(headerPanel_3271557387, widget_3271557224.lastBounds, frameIndex_3271557225, app_3271557223.platform.layoutOptions);
    layoutWidget_2516582724(contentPanel_3271557390, widget_3271557224.lastBounds, frameIndex_3271557225, app_3271557223.platform.layoutOptions);
    }
    else {
      headerPanel_3271557387 = widget_3271557224.children[chckIndx(0, 0, (widget_3271557224.children).length - 1)];
      headerPart1Text_3271557388 = headerPanel_3271557387.children[chckIndx(0, 0, (headerPanel_3271557387.children).length - 1)];
      headerPart2Text_3271557389 = headerPanel_3271557387.children[chckIndx(1, 0, (headerPanel_3271557387.children).length - 1)];
      contentPanel_3271557390 = widget_3271557224.children[chckIndx(1, 0, (widget_3271557224.children).length - 1)];
    }
    
    if (self_3271557222.renderHeader) {
    headerPanel_3271557387.bottom = totalLineHeight_3271557227;
    contentPanel_3271557390.top = totalLineHeight_3271557227;
    if (active_2382364785(self_3271557222)) {
    Temporary1 = color_3271557229(app_3271557223.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 60));
    }
    else {
    Temporary1 = color_3271557229(app_3271557223.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(45, 45, 45));
    }
    
    var color_3271557420 = nimCopy(null, Temporary1, NTI2550136835);
    updateBackgroundColor_2516582478(headerPanel_3271557387, color_3271557420, frameIndex_3271557225);
    var workspaceName_3271557463 = get_2315255863(map_1291854425(self_3271557222.document.workspace, HEX3Aanonymous_3271557425), []);
    if (((self_3271557222.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3271557222.currentMode;
    }
    
    var mode_3271557464 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3271557469 = [mnewString(0)];
    fmtRes_3271557469[0].push.apply(fmtRes_3271557469[0], [32]);;
    formatValue_721420459(fmtRes_3271557469, 0, mode_3271557464, []);
    fmtRes_3271557469[0].push.apply(fmtRes_3271557469[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3271557469, 0, self_3271557222.document.filename, []);
    fmtRes_3271557469[0].push.apply(fmtRes_3271557469[0], [32]);;
    formatValue_721420459(fmtRes_3271557469, 0, workspaceName_3271557463, []);
    fmtRes_3271557469[0].push.apply(fmtRes_3271557469[0], [32]);;
    headerPart1Text_3271557388.text = nimCopy(null, fmtRes_3271557469[0], NTI33554449);
    var fmtRes_3271557474 = [mnewString(0)];
    fmtRes_3271557474[0].push.apply(fmtRes_3271557474[0], [32]);;
    formatValue_2801795197(fmtRes_3271557474, 0, selection_2801795577(self_3271557222), []);
    fmtRes_3271557474[0].push.apply(fmtRes_3271557474[0], [32,45,32]);;
    formatValue_2516582756(fmtRes_3271557474, 0, self_3271557222.id, []);
    fmtRes_3271557474[0].push.apply(fmtRes_3271557474[0], [32]);;
    headerPart2Text_3271557389.text = nimCopy(null, fmtRes_3271557474[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2516582486(headerPanel_3271557387, frameIndex_3271557225);
    }
    else {
      headerPanel_3271557387.bottom = 0.0;
      contentPanel_3271557390.top = 0.0;
    }
    
    self_3271557222.lastContentBounds = nimCopy(self_3271557222.lastContentBounds, contentPanel_3271557390.lastBounds, NTI2113929221);
    widget_3271557224.lastHierarchyChange = nimMax(widget_3271557224.lastHierarchyChange, headerPanel_3271557387.lastHierarchyChange);
    if (active_2382364785(self_3271557222)) {
    Temporary3 = color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2566914051(color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2516582478(contentPanel_3271557390, Temporary3, frameIndex_3271557225);
      if (changed_2516582725(contentPanel_3271557390, frameIndex_3271557225)) Temporary5 = true; else {        Temporary5 = dirty_2382364707(self_3271557222);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3271557223.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2382364780(self_3271557222);
    if (contentPanel_3271557390.children.length < 0) { for (var i = contentPanel_3271557390.children.length ; i < 0 ; ++i) contentPanel_3271557390.children.push(null); }
               else { contentPanel_3271557390.children.length = 0; };
    Label6: {
      self_3271557222.previousBaseIndex = clamp_3271557507(self_3271557222.previousBaseIndex, HEX2EHEX2E_805306418(0, (self_3271557222.document.lines).length));
      Label7: {
          Label8: while (true) {
          if (!((self_3271557222.scrollOffset < 0.0) && (addInt(self_3271557222.previousBaseIndex, 1) < (self_3271557222.document.lines).length))) break Label8;
            if ((contentPanel_3271557390.lastBounds.h <= (self_3271557222.scrollOffset + totalLineHeight_3271557227))) {
            break Label7;
            }
            
            self_3271557222.previousBaseIndex = addInt(self_3271557222.previousBaseIndex, 1);
            HEX2BHEX3D_855640304(self_3271557222, "scrollOffset", totalLineHeight_3271557227);
          }
      };
      Label9: {
          Label10: while (true) {
          if (!((contentPanel_3271557390.lastBounds.h < self_3271557222.scrollOffset) && (0 < self_3271557222.previousBaseIndex))) break Label10;
            if (((self_3271557222.scrollOffset - lineHeight_3271557226) <= 0.0)) {
            break Label9;
            }
            
            self_3271557222.previousBaseIndex = subInt(self_3271557222.previousBaseIndex, 1);
            HEX2DHEX3D_2801814013(self_3271557222, "scrollOffset", totalLineHeight_3271557227);
          }
      };
    };
    var selectionsPerLine_3271557552 = [initTable_3271557541(32)];
    Label11: {
      var s_3271557556 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872627 = [];
      colontmp__536872627 = selections_2801795574(self_3271557222);
      var i_536872628 = 0;
      var L_536872629 = (colontmp__536872627).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872628 < L_536872629)) break Label13;
            s_3271557556 = colontmp__536872627[chckIndx(i_536872628, 0, (colontmp__536872627).length - 1)];
            var sn_3271557557 = normalized_2415919470(s_3271557556);
            Label14: {
              var line_3271557562 = 0;
              var res_536872625 = sn_3271557557.Field0.Field0;
              Label15: {
                  Label16: while (true) {
                  if (!(res_536872625 <= sn_3271557557.Field1.Field0)) break Label16;
                    line_3271557562 = res_536872625;
                    var Temporary18 = nimCopy(null, s_3271557556, NTI2415919115);
                    (Temporary17 = mgetOrPut_3271557593(selectionsPerLine_3271557552[0], line_3271557562, []), Temporary17)[0][Temporary17[1]].push(Temporary18);;
                    res_536872625 = addInt(res_536872625, 1);
                  }
              };
            };
            i_536872628 = addInt(i_536872628, 1);
            if (!(((colontmp__536872627).length == L_536872629))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3271557807 = nimCopy(null, self_3271557222.searchResults, NTI2801795325);
    var lineNumbers_3271557885 = get_3271557871(self_3271557222.lineNumbers, getOption_3271557820(app_3271557223, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3271557885) {
    case 1:
      Temporary19 = addInt(self_3271557222.previousBaseIndex, ((((contentPanel_3271557390.lastBounds.h - self_3271557222.scrollOffset) / totalLineHeight_3271557227)) | 0));
      break;
    case 2:
      Temporary19 = 99;
      break;
    default: 
      Temporary19 = 0;
      break;
    }
    var maxLineNumber_3271557886 = Temporary19;
    var maxLineNumberLen_3271557887 = addInt((HEX24_369098760(maxLineNumber_3271557886)).length, 1);
    var cursorLine_3271557888 = selection_2801795577(self_3271557222).Field1.Field0;
    if (self_3271557222.lastRenderedLines.length < 0) { for (var i = self_3271557222.lastRenderedLines.length ; i < 0 ; ++i) self_3271557222.lastRenderedLines.push(null); }
               else { self_3271557222.lastRenderedLines.length = 0; };
    var isWide_3271557902 = getOption_2801805746(app_3271557223, getContextWithMode_2801805740(self_3271557222, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3271557902) {
    Temporary20 = 1.0;
    }
    else {
    Temporary20 = 0.2;
    }
    
    var cursorWidth_3271557903 = Temporary20;
    var selectionColor_3271557909 = color_3271557229(app_3271557223.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var highlightColor_3271558029 = color_3271557914(app_3271557223.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2550136919(200, 200, 200));
    var cursorColor_3271558149 = color_3271558034(app_3271557223.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2550136933(255, 255, 255, 127));
    Label21: {
      var i_3271558647 = 0;
      var colontmp__536872641 = 0;
      colontmp__536872641 = (self_3271557222.document.lines).length - 1;
      var res_536872642 = self_3271557222.previousBaseIndex;
      Label22: {
          Label23: while (true) {
          if (!(res_536872642 <= colontmp__536872641)) break Label23;
            i_3271558647 = res_536872642;
            if (!(renderLine_3271558150(i_3271558647, true))) {
            break Label21;
            }
            
            res_536872642 = addInt(res_536872642, 1);
          }
      };
    };
    Label24: {
      var k_3271558652 = 0;
      var res_536872645 = 1;
      Label25: {
          Label26: while (true) {
          if (!(res_536872645 <= self_3271557222.previousBaseIndex)) break Label26;
            k_3271558652 = res_536872645;
            var i_3271558653 = subInt(self_3271557222.previousBaseIndex, k_3271558652);
            if (!(renderLine_3271558150(i_3271558653, false))) {
            break Label24;
            }
            
            res_536872645 = addInt(res_536872645, 1);
          }
      };
    };
    contentPanel_3271557390.lastHierarchyChange = frameIndex_3271557225;
    widget_3271557224.lastHierarchyChange = nimMax(widget_3271557224.lastHierarchyChange, contentPanel_3271557390.lastHierarchyChange);
    self_3271557222.lastContentBounds = nimCopy(self_3271557222.lastContentBounds, contentPanel_3271557390.lastBounds, NTI2113929221);
  };

  
}

function updateWidget_3254779909(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913) {
  
}

function updateWidget_3254779914(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913) {
    chckNilDisp(self_3254779910);
    if (isObj(self_3254779910.m_type, NTI2801795294)) {
    updateWidget_3271557221(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913);
    }
    else {
    if (isObj(self_3254779910.m_type, NTI2382364676)) {
    updateWidget_3254779909(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913);
    }
    }

  
}

function dirty_2449473554(self_2449473555) {
  var result_2449473556 = false;

    result_2449473556 = self_2449473555.mDirty;

  return result_2449473556;

}

function resetDirty_2449473584(self_2449473585) {
    self_2449473585.mDirty = false;

  
}

function pop_3288334453(s_3288334455, s_3288334455_Idx) {
  var result_3288334456 = null;

    var L_3288334460 = subInt((s_3288334455[s_3288334455_Idx]).length, 1);
    result_3288334456 = s_3288334455[s_3288334455_Idx][chckIndx(L_3288334460, 0, (s_3288334455[s_3288334455_Idx]).length - 1)];
    if (s_3288334455[s_3288334455_Idx].length < chckRange(L_3288334460, 0, 2147483647)) { for (var i = s_3288334455[s_3288334455_Idx].length ; i < chckRange(L_3288334460, 0, 2147483647) ; ++i) s_3288334455[s_3288334455_Idx].push(null); }
               else { s_3288334455[s_3288334455_Idx].length = chckRange(L_3288334460, 0, 2147483647); };

  return result_3288334456;

}

function updateWidget_3288334379(self_3288334380, app_3288334381, widget_3288334382, frameIndex_3288334383) {
    var Temporary1;

    var textColor_3288334389 = color_3271557229(app_3288334381.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3288334382.children).length == 0)) {
    var text_3288334393 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), lastHierarchyChange: frameIndex_3288334383, m_type: NTI2516582420, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3288334382.children.push(text_3288334393);;
    Temporary1 = text_3288334393;
    }
    else {
    Temporary1 = widget_3288334382.children[chckIndx(0, 0, (widget_3288334382.children).length - 1)];
    }
    
    var text_3288334398 = Temporary1;
    text_3288334398.text = nimCopy(null, self_3288334380.path, NTI33554449);
    updateForegroundColor_2516582464(text_3288334398, textColor_3288334389, frameIndex_3288334383);
    updateLastHierarchyChangeFromChildren_2516582486(text_3288334398, -1);

  
}

function updateWidget_3288334359(self_3288334360, app_3288334361, widget_3288334362, frameIndex_3288334363) {
    var Temporary1;

    var textColor_3288334369 = color_3271557229(app_3288334361.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    if (((widget_3288334362.children).length == 0)) {
    var text_3288334373 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), lastHierarchyChange: frameIndex_3288334363, m_type: NTI2516582420, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3288334362.children.push(text_3288334373);;
    Temporary1 = text_3288334373;
    }
    else {
    Temporary1 = widget_3288334362.children[chckIndx(0, 0, (widget_3288334362.children).length - 1)];
    }
    
    var text_3288334378 = Temporary1;
    text_3288334378.text = nimCopy(null, self_3288334360.path, NTI33554449);
    updateForegroundColor_2516582464(text_3288334378, textColor_3288334369, frameIndex_3288334363);
    updateLastHierarchyChangeFromChildren_2516582486(text_3288334378, -1);

  
}

function updateWidget_3288334353(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357) {
  
}

function updateWidget_3288334358(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357) {
    chckNilDisp(self_3288334354);
    if (isObj(self_3288334354.m_type, NTI1291848514)) {
    updateWidget_3288334379(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    else {
    if (isObj(self_3288334354.m_type, NTI1291848516)) {
    updateWidget_3288334359(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    else {
    if (isObj(self_3288334354.m_type, NTI3204448264)) {
    updateWidget_3288334353(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    }}

  
}

function updateWidget_3288334399(self_3288334400, app_3288334401, widget_3288334402, frameIndex_3288334403) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3288334404 = lineHeight_2499805338(app_3288334401.platform);
    var totalLineHeight_3288334405 = totalLineHeight_2499805351(app_3288334401.platform);
    var charWidth_3288334406 = charWidth_2499805343(app_3288334401.platform);
    var textColor_3288334412 = color_3271557229(app_3288334401.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2550136919(225, 200, 200));
    var headerPanel_3288334413 = null;
    var contentPanel_3288334414 = null;
    if (((widget_3288334402.children).length == 0)) {
    headerPanel_3288334413 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2516582411), bottom: totalLineHeight_3288334405, lastHierarchyChange: frameIndex_3288334403, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3288334402.children.push(headerPanel_3288334413);;
    contentPanel_3288334414 = {anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 1.0)}, NTI2516582411), top: totalLineHeight_3288334405, lastHierarchyChange: frameIndex_3288334403, fillBackground: true, backgroundColor: color_2550136904(0.0, 0.0, 0.0, 1.0), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3288334414.maskContent = true;
    widget_3288334402.children.push(contentPanel_3288334414);;
    layoutWidget_2516582724(headerPanel_3288334413, widget_3288334402.lastBounds, frameIndex_3288334403, app_3288334401.platform.layoutOptions);
    layoutWidget_2516582724(contentPanel_3288334414, widget_3288334402.lastBounds, frameIndex_3288334403, app_3288334401.platform.layoutOptions);
    }
    else {
      headerPanel_3288334413 = widget_3288334402.children[chckIndx(0, 0, (widget_3288334402.children).length - 1)];
      contentPanel_3288334414 = widget_3288334402.children[chckIndx(1, 0, (widget_3288334402.children).length - 1)];
    }
    
    updateWidget_3254779914(self_3288334400.textEditor, app_3288334401, headerPanel_3288334413, frameIndex_3288334403);
    updateLastHierarchyChangeFromChildren_2516582486(headerPanel_3288334413, frameIndex_3288334403);
    widget_3288334402.lastHierarchyChange = nimMax(widget_3288334402.lastHierarchyChange, headerPanel_3288334413.lastHierarchyChange);
    updateBackgroundColor_2516582478(contentPanel_3288334414, color_3271557229(app_3288334401.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2550136919(25, 25, 25)), frameIndex_3288334403);
      if (changed_2516582725(contentPanel_3288334414, frameIndex_3288334403)) Temporary2 = true; else {        Temporary2 = dirty_2449473554(self_3288334400);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3288334401.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2449473584(self_3288334400);
    var maxLineCount_3288334431 = ((Math.floor((widget_3288334402.lastBounds.h / totalLineHeight_3288334405))) | 0);
    var targetNumRenderedItems_3288334435 = nimMin(maxLineCount_3288334431, (self_3288334400.completions).length);
    var lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    if ((self_3288334400.selected < self_3288334400.scrollOffset)) {
    self_3288334400.scrollOffset = self_3288334400.selected;
    lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3288334439 < self_3288334400.selected)) {
    self_3288334400.scrollOffset = nimMax(addInt(subInt(self_3288334400.selected, targetNumRenderedItems_3288334435), 1), 0);
    lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    }
    
    var numRenderedItems_3288334446 = nimMax(addInt(subInt(lastRenderedIndex_3288334439, self_3288334400.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3288334446 < (contentPanel_3288334414.children).length)) break Label4;
          var _ = pop_3288334453(contentPanel_3288334414, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3288334414.children).length < numRenderedItems_3288334446)) break Label6;
          contentPanel_3288334414.children.push({anchor: nimCopy(null, {Field0: vec2_2130707293(0.0, 0.0), Field1: vec2_2130707293(1.0, 0.0)}, NTI2516582411), m_type: NTI2516582412, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3288334477 = color_3271557229(app_3288334401.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2550136919(200, 200, 200));
    var top_3288334478 = 0.0;
    var widgetIndex_3288334479 = 0;
    Label7: {
      var completionIndex_3288334484 = 0;
      var res_536872716 = self_3288334400.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872716 <= lastRenderedIndex_3288334439)) break Label9;
            completionIndex_3288334484 = res_536872716;
            try {
            var lineWidget_3288334490 = contentPanel_3288334414.children[chckIndx(widgetIndex_3288334479, 0, (contentPanel_3288334414.children).length - 1)];
            lineWidget_3288334490.top = top_3288334478;
            lineWidget_3288334490.bottom = (top_3288334478 + totalLineHeight_3288334405);
            lineWidget_3288334490.lastHierarchyChange = frameIndex_3288334403;
            if ((completionIndex_3288334484 == self_3288334400.selected)) {
            lineWidget_3288334490.fillBackground = true;
            updateBackgroundColor_2516582478(lineWidget_3288334490, selectionColor_3288334477, frameIndex_3288334403);
            }
            else {
              lineWidget_3288334490.fillBackground = false;
              updateBackgroundColor_2516582478(lineWidget_3288334490, color_2550136904(0.0, 0.0, 0.0, 1.0), frameIndex_3288334403);
            }
            
            updateWidget_3288334358(self_3288334400.completions[chckIndx(completionIndex_3288334484, 0, (self_3288334400.completions).length - 1)], app_3288334401, lineWidget_3288334490, frameIndex_3288334403);
            top_3288334478 = lineWidget_3288334490.bottom;
            res_536872716 = addInt(res_536872716, 1);
            } finally {
            widgetIndex_3288334479 = addInt(widgetIndex_3288334479, 1);
            }
          }
      };
    };
    contentPanel_3288334414.lastHierarchyChange = frameIndex_3288334403;
    widget_3288334402.lastHierarchyChange = nimMax(widget_3288334402.lastHierarchyChange, contentPanel_3288334414.lastHierarchyChange);
  };

  
}

function updateWidget_3254779915(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919) {
  
}

function updateWidget_3254779920(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919) {
    chckNilDisp(self_3254779916);
    if (isObj(self_3254779916.m_type, NTI3204448278)) {
    updateWidget_3288334399(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919);
    }
    else {
    if (isObj(self_3254779916.m_type, NTI2449473540)) {
    updateWidget_3254779915(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919);
    }
    }

  
}
