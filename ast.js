/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI2382364677 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3053453316 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325401387 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152004 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2097152003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325401598 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785054444 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054303 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054256 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054123 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785054029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053982 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053935 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053882 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053829 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053776 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018055 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785053670 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734696906 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904130 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790026 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734689014 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240780 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687780 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2734693534 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI872416567 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2348810852 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121699 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790024 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790023 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790022 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2952790021 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952790020 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952790245 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634032417 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634032594 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734691610 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734691605 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734691311 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734690703 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2181038111 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734688707 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768241977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017922 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017925 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017946 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017954 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952790034 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969567907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805632 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2785017995 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785017998 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018019 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018027 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959591 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959569 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207959748 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959596 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959576 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959586 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959584 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959627 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1207959626 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1207959625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207959590 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959613 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959580 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959570 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1207959601 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959577 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959605 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959578 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959609 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959579 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959617 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1207959581 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1207959585 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2382364676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810260 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810259 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810257 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810256 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810253 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810255 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2348810254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2499807172 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805699 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660945593 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325406467 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325402822 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2013265963 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265930 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265936 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265996 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1476395015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325402767 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121676 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634031918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634031856 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634031855 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634030781 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023218 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634026258 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634026226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634026184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634024447 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634024517 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634024522 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577384 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2197815426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2197815435 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2197815355 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634027358 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634024009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1660944520 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634026873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634024267 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634024038 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325402635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634026335 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023412 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023232 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023243 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023297 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121678 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121677 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121675 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121674 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121673 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121672 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3003121669 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121671 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121670 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400077 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2214592516 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI872415746 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI872415757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2717909028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1728053256 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1845493767 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1845493766 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1845493768 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325404020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1728053257 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1728053295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1677721605 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1677721604 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1728053254 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1728053262 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1728053253 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1728053251 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1728053252 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1728053255 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498841 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498840 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498839 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498838 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498836 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498831 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498830 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498829 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498828 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498827 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1694498826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694499294 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2365587613 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364693 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325403640 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325403646 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687804 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687802 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687801 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687800 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687799 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687798 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687797 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687777 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2734687778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687796 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023117 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2734687789 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687787 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687775 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687619 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2734687622 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687620 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2734687774 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687776 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2734687773 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687771 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687768 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2734687765 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2734687752 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2734687751 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2734687781 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2634023173 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023172 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577349 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2667577352 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023171 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023116 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023115 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023170 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2197815311 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2634023162 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023155 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023152 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023149 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2684354563 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023132 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023126 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815315 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577348 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577347 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2634023106 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2717909000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2717908999 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2717909002 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2717909001 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2717908998 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2717908997 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2634023100 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634022920 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634022915 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2197815305 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2197815307 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634022919 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634022918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634022916 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2634023099 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2634023095 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023094 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023088 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023079 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2634023078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023077 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023071 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023062 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2634023061 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023060 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023054 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2634023048 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2634023047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2634023046 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400166 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400160 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1325400159 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400158 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369732 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2231369731 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400146 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400144 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400141 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400138 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805207 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2499805196 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805237 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805234 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805222 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805219 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2499805216 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805208 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805189 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400073 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400069 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815299 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2181038084 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2181038083 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2164260868 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2164260867 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400130 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182347 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400125 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400122 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1660944406 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1660944404 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1660944401 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1660944398 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1660944389 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1660944388 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1325400113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400110 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400107 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2348810243 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2332033027 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2197815313 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400097 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2634023118 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400092 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400089 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1325400086 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400074 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400075 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI872415649 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1660944387 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2080374799 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2080374798 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2046820384 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2046820417 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820414 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2046820411 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820385 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820420 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2046820419 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820386 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1828716558 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1828716555 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1828716552 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374790 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374789 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2080374797 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374796 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2214592526 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2080375503 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2080374819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820402 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820399 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2046820396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820383 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805313414 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306384 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI805313422 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2046820382 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2046820381 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2348810261 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2348810249 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033107 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033106 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033105 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033099 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033089 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033082 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033068 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033066 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033060 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033043 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033042 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033041 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3070230608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230580 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230588 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230585 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230597 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230552 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230559 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230556 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230546 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI2332033123 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033122 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033121 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033115 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845725 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845724 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845723 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845722 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845721 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845720 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845719 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845718 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845717 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845716 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845715 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845714 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845713 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845712 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845711 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845710 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845709 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845708 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845707 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845706 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845705 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845704 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845703 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845702 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845701 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845774 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845821 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845818 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845817 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845697 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845698 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845767 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845656 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845756 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845768 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845755 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845754 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845773 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845661 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845753 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845752 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845769 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845658 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845751 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845649 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845647 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845749 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845748 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845648 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845747 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845759 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845770 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845659 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845758 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845772 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845771 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845757 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845650 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI822083608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018265 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018262 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018251 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018248 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018245 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785051770 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018865 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018868 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018889 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018897 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018917 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2382364675 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903969 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785047179 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018790 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018793 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018814 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018822 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018842 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904030 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904027 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904019 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903968 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018786 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458576 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902459997 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902459894 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902459424 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902459522 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2902459458 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1593835635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458549 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868905166 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706821 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI2130706819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904017 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904014 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903991 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903996 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805187 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903976 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2868903981 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903973 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903972 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904035 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2113929221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903963 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903965 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903967 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785042582 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018715 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018739 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018747 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018767 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018711 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919236594 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018649 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018652 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018673 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018645 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018574 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018577 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018598 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018606 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018508 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018532 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018540 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904878 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018504 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785091801 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904899 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240759 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904887 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904884 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904881 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904822 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018435 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018438 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018459 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018467 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018431 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018123 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018147 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018155 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018119 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904552 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2046822965 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018364 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018367 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018388 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018360 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785069724 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785090894 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018190 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018211 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018219 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017974 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1207960496 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903959 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903958 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903957 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018183 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868904362 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795405 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868904368 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018289 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018292 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018313 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2785018321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018341 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018285 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018268 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017873 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785017870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785018256 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903944 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903954 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903946 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868905073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405140 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785067720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903945 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868904223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903949 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2868903948 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903940 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2768240647 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768240643 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2768240646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2768240644 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903955 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2868903943 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903942 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2801795274 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795277 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795298 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795306 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795256 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795270 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795207 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795210 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795231 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795096 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795203 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795128 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795131 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795152 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795160 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795102 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2248146964 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1358954499 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2785017876 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017859 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017864 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2768241729 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1056964686 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795099 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2801795097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795100 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017884 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2785018956 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2298478595 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420292 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI721420291 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420313 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1191182349 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182339 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1191182350 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182348 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI721420300 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI721420294 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1191182339 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182339, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182339, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182339, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182339, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182339, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182339, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182339, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182339, name: "lvlNone", len: 0, sons: null}}};
NTI1191182339.node = NNI1191182339;
var NNI1191182350 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1191182339, name: "flushThreshold", sons: null}]};
NTI1191182350.node = NNI1191182350;
var NNI1191182349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1191182339, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1191182349.node = NNI1191182349;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1191182349.base = NTI33555171;
NTI1191182350.base = NTI1191182349;
NTI1191182348.base = NTI1191182350;
var NNI721420300 = {kind: 1, offset: "val", len: 0, typ: NTI1191182348, name: "val", sons: null};
NTI721420300.node = NNI721420300;
var NNI721420292 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI721420292.node = NNI721420292;
NTI721420292.base = NTI1191182349;
NTI721420291.base = NTI721420292;
var NNI721420313 = {kind: 1, offset: "val", len: 0, typ: NTI721420291, name: "val", sons: null};
NTI721420313.node = NNI721420313;
var NNI721420294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI721420300, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI721420313, name: "fileLogger", sons: null}]};
NTI721420294.node = NNI721420294;
NTI721420294.base = NTI1191182349;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI2298478595 = {kind: 1, offset: "id", len: 0, typ: NTI33554435, name: "id", sons: null};
NTI2298478595.node = NNI2298478595;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217743.base = NTI134217741;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
var NNI2801795097 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2801795097.node = NNI2801795097;
var NNI2801795100 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795099, name: "Field1", sons: null}]};
NTI2801795100.node = NNI2801795100;
NTI2785017884.base = NTI2801795100;
NTI2785018956.base = NTI2785017884;
var NNI1056964692 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1056964686, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1056964692.node = NNI1056964692;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
NTI2768241729.base = NTI33554435;
var NNI2785017859 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI2785017859.node = NNI2785017859;
NTI2785017864.base = NTI2785017859;
var NNI2785017876 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017864, name: "Field2", sons: null}]};
NTI2785017876.node = NNI2785017876;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI2248146964 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2248146964.node = NNI2248146964;
var NNI2801795102 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2801795102, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2801795102, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2801795102, name: "Green", len: 0, sons: null}}};
NTI2801795102.node = NNI2801795102;
var NNI2801795124 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795100, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI2801795124.node = NNI2801795124;
var NNI2801795180 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}]};
NTI2801795180.node = NNI2801795180;
NTI2801795128.base = NTI2801795131;
var NNI2801795131 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2801795128, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2801795128, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2801795124, name: "value", sons: null}]};
NTI2801795131.node = NNI2801795131;
NTI2801795152.base = NTI2801795131;
var NNI2801795160 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795152, name: "Field2", sons: null}]};
NTI2801795160.node = NNI2801795160;
NTI2801795096.base = NTI33554439;
var NNI2801795203 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795100, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2801795096, name: "val", sons: null}]};
NTI2801795203.node = NNI2801795203;
NTI2801795207.base = NTI2801795210;
var NNI2801795210 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2801795207, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2801795207, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2801795203, name: "value", sons: null}]};
NTI2801795210.node = NNI2801795210;
NTI2801795231.base = NTI2801795210;
var NNI2801795239 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795231, name: "Field2", sons: null}]};
NTI2801795239.node = NNI2801795239;
NTI2801795256.base = NTI2801795100;
var NNI2801795270 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795100, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2801795256, name: "val", sons: null}]};
NTI2801795270.node = NNI2801795270;
NTI2801795274.base = NTI2801795277;
var NNI2801795277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2801795274, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2801795274, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2801795270, name: "value", sons: null}]};
NTI2801795277.node = NNI2801795277;
NTI2801795298.base = NTI2801795277;
var NNI2801795306 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795298, name: "Field2", sons: null}]};
NTI2801795306.node = NNI2801795306;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI2868903939 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI2868903939, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2868903939, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2868903939, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2868903939, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2868903939, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2868903939, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2868903939, name: "tType", len: 0, sons: null}}};
NTI2868903939.node = NNI2868903939;
var NNI2868903942 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI2868903942, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2868903942, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2868903942, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2868903942, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2868903942, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2868903942, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2868903942, name: "vkType", len: 0, sons: null}}};
NTI2868903942.node = NNI2868903942;
var NNI2768240643 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2768240643, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2768240643, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2768240643, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2768240643, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2768240643, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2768240643, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2768240643, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2768240643, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2768240643, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2768240643, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2768240643, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2768240643, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2768240643, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2768240643, name: "Assignment", len: 0, sons: null}}};
NTI2768240643.node = NNI2768240643;
NTI2768240647.base = NTI2768240644;
var NNI2768240646 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2768240644, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2298478595, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2768240643, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2768240647, name: "children", sons: null}]};
NTI2768240646.node = NNI2768240646;
NTI2768240644.base = NTI2768240646;
NTI2868903949.base = NTI2868903940;
var NNI2868903948 = {kind: 3, offset: "kind", len: 7, typ: NTI2868903939, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI2868903940, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI2868903949, name: "paramTypes", sons: null}]}]]};
NTI2868903948.node = NNI2868903948;
NTI2868903940.base = NTI2868903948;
var NNI2868903943 = {kind: 3, offset: "kind", len: 7, typ: NTI2868903942, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI2868903955, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI2868903940, name: "typ", sons: null}]]};
NTI2868903943.node = NNI2868903943;
NTI2868904223.base = NTI2868903940;
var NNI2868903945 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2868903945, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2868903945, name: "skBuiltin", len: 0, sons: null}}};
NTI2868903945.node = NNI2868903945;
var NNI2785067720 = {kind: 1, offset: "val", len: 0, typ: NTI2868903940, name: "val", sons: null};
NTI2785067720.node = NNI2785067720;
var NNI1174405140 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1174405140.node = NNI1174405140;
NTI1174405140.base = NTI33555176;
var NNI2868903944 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2868903944, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2868903944, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2868903944, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2868903944, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2868903944, name: "Scope", len: 0, sons: null}}};
NTI2868903944.node = NNI2868903944;
var NNI2868903954 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2868903945, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI2868903940, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2868903943, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI2868903944, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI2868903954.node = NNI2868903954;
NTI2868903946.base = NTI2868903954;
var NNI2868905073 = {kind: 1, offset: "val", len: 0, typ: NTI2868903946, name: "val", sons: null};
NTI2868905073.node = NNI2868905073;
NTI2785018256.base = NTI2298478595;
NTI2785017873.base = NTI2785017876;
var NNI2785017870 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2785017873, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2785017870.node = NNI2785017870;
var NNI2785017860 = {kind: 1, offset: "queries", len: 0, typ: NTI2785017870, name: "queries", sons: null};
NTI2785017860.node = NNI2785017860;
var NNI2785018268 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795100, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018256, name: "Field2", sons: null}]};
NTI2785018268.node = NNI2785018268;
var NNI2785018285 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2768240644, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903940, name: "val", sons: null}]};
NTI2785018285.node = NNI2785018285;
var NNI2785018341 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}]};
NTI2785018341.node = NNI2785018341;
NTI2785018289.base = NTI2785018292;
var NNI2785018292 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018289, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018289, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018285, name: "value", sons: null}]};
NTI2785018292.node = NNI2785018292;
NTI2785018313.base = NTI2785018292;
var NNI2785018321 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018313, name: "Field2", sons: null}]};
NTI2785018321.node = NNI2785018321;
NTI2868904368.base = NTI33554439;
NTI2801795405.base = NTI33554439;
NTI2868904362.base = NTI33554439;
NTI2868903959.base = NTI2868903943;
var NNI1207960496 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1207960496.node = NNI1207960496;
var NNI2868903958 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI2868903959, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1207960496, name: "maxLoopIterations", sons: null}]};
NTI2868903958.node = NNI2868903958;
NTI2868903957.base = NTI2868903958;
var NNI2785018183 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795097, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903957, name: "val", sons: null}]};
NTI2785018183.node = NNI2785018183;
var NNI2785017974 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795097, name: "Field1", sons: null}]};
NTI2785017974.node = NNI2785017974;
NTI2785018187.base = NTI2785018190;
var NNI2785018190 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018187, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018187, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018183, name: "value", sons: null}]};
NTI2785018190.node = NNI2785018190;
NTI2785018211.base = NTI2785018190;
var NNI2785018219 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795097, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018211, name: "Field2", sons: null}]};
NTI2785018219.node = NNI2785018219;
NTI2785090894.base = NTI2868903943;
var NNI2785069724 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2868903943, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2785069724.node = NNI2785069724;
var NNI2785018360 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2768240644, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903943, name: "val", sons: null}]};
NTI2785018360.node = NNI2785018360;
NTI2785018364.base = NTI2785018367;
var NNI2785018367 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018364, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018364, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018360, name: "value", sons: null}]};
NTI2785018367.node = NNI2785018367;
NTI2785018388.base = NTI2785018367;
var NNI2785018396 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018388, name: "Field2", sons: null}]};
NTI2785018396.node = NNI2785018396;
NTI2046822965.base = NTI33554439;
NTI2868904552.base = NTI33554439;
var NNI2785018119 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795097, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903946, name: "val", sons: null}]};
NTI2785018119.node = NNI2785018119;
NTI2785018123.base = NTI2785018126;
var NNI2785018126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018123, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018123, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018119, name: "value", sons: null}]};
NTI2785018126.node = NNI2785018126;
NTI2785018147.base = NTI2785018126;
var NNI2785018155 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795097, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018147, name: "Field2", sons: null}]};
NTI2785018155.node = NNI2785018155;
var NNI2785018431 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2768240644, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868905073, name: "val", sons: null}]};
NTI2785018431.node = NNI2785018431;
NTI2785018435.base = NTI2785018438;
var NNI2785018438 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018435, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018435, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018431, name: "value", sons: null}]};
NTI2785018438.node = NNI2785018438;
NTI2785018459.base = NTI2785018438;
var NNI2785018467 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018459, name: "Field2", sons: null}]};
NTI2785018467.node = NNI2785018467;
NTI2868904822.base = NTI33554439;
var NNI2868904887 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2298478595, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868903946, name: "Field2", sons: null}]};
NTI2868904887.node = NNI2868904887;
NTI2868904884.base = NTI2868904887;
var NNI2868904881 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868904884, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868904881.node = NNI2868904881;
var NNI2768240759 = {kind: 1, offset: "val", len: 0, typ: NTI2768240644, name: "val", sons: null};
NTI2768240759.node = NNI2768240759;
var NNI2868904899 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}]};
NTI2868904899.node = NNI2868904899;
var NNI2785091801 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}]};
NTI2785091801.node = NNI2785091801;
NTI2868904878.base = NTI2868904881;
var NNI2785018504 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2768240644, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868904878, name: "val", sons: null}]};
NTI2785018504.node = NNI2785018504;
NTI2785018508.base = NTI2785018511;
var NNI2785018511 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018508, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018508, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018504, name: "value", sons: null}]};
NTI2785018511.node = NNI2785018511;
NTI2785018532.base = NTI2785018511;
var NNI2785018540 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018532, name: "Field2", sons: null}]};
NTI2785018540.node = NNI2785018540;
var NNI2785018570 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2868903946, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903940, name: "val", sons: null}]};
NTI2785018570.node = NNI2785018570;
var NNI2785018626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}]};
NTI2785018626.node = NNI2785018626;
NTI2785018574.base = NTI2785018577;
var NNI2785018577 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018574, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018574, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018570, name: "value", sons: null}]};
NTI2785018577.node = NNI2785018577;
NTI2785018598.base = NTI2785018577;
var NNI2785018606 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018598, name: "Field2", sons: null}]};
NTI2785018606.node = NNI2785018606;
var NNI2785018645 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2868903946, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903943, name: "val", sons: null}]};
NTI2785018645.node = NNI2785018645;
NTI2785018649.base = NTI2785018652;
var NNI2785018652 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018649, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018649, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018645, name: "value", sons: null}]};
NTI2785018652.node = NNI2785018652;
NTI2785018673.base = NTI2785018652;
var NNI2785018681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018673, name: "Field2", sons: null}]};
NTI2785018681.node = NNI2785018681;
NTI2919236594.base = NTI2868903943;
var NNI2785018711 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2868903957, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903943, name: "val", sons: null}]};
NTI2785018711.node = NNI2785018711;
var NNI2785018767 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903957, name: "Field1", sons: null}]};
NTI2785018767.node = NNI2785018767;
NTI2785018715.base = NTI2785018718;
var NNI2785018718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018715, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018715, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018711, name: "value", sons: null}]};
NTI2785018718.node = NNI2785018718;
NTI2785018739.base = NTI2785018718;
var NNI2785018747 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903957, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018739, name: "Field2", sons: null}]};
NTI2785018747.node = NNI2785018747;
NTI2785042582.base = NTI33554439;
var NNI2868903963 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2868903963, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2868903963, name: "Vertical", len: 0, sons: null}}};
NTI2868903963.node = NNI2868903963;
var NNI2113929221 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2113929221.node = NNI2113929221;
NTI2868903972.base = NTI2868903965;
NTI2868903973.base = NTI33554449;
var NNI2499805187 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2499805187, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2499805187, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2499805187, name: "Bold", len: 0, sons: null}}};
NTI2499805187.node = NNI2499805187;
NTI2868903976.base = NTI2499805187;
var NNI2868903981 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2868903976, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2868903981.node = NNI2868903981;
NTI2868903991.base = NTI33554449;
var NNI2868903996 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2868903991, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2868903996.node = NNI2868903996;
var NNI2868903971 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2868903965, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI2868903963, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI2868904035, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2868903972, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2868903973, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI2868903981, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2868903996, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI2868903971.node = NNI2868903971;
NTI2868903965.base = NTI2868903971;
var NNI2868903966 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2868903965, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI2868903966.node = NNI2868903966;
var NNI2868904017 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2298478595, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868903966, name: "Field2", sons: null}]};
NTI2868904017.node = NNI2868904017;
NTI2868904014.base = NTI2868904017;
var NNI2868904011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868904014, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868904011.node = NNI2868904011;
var NNI2868903967 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI2868903965, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI2868904011, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}]};
NTI2868903967.node = NNI2868903967;
NTI2130706821.base = NTI33554446;
var NNI2130706819 = {kind: 1, offset: "arr", len: 0, typ: NTI2130706821, name: "arr", sons: null};
NTI2130706819.node = NNI2130706819;
NTI2868905166.base = NTI2868903965;
NTI2902458549.base = NTI33554449;
NTI1593835635.base = NTI33554449;
NTI2902459458.base = NTI33554449;
NTI2902459522.base = NTI2499805187;
NTI2902459424.base = NTI33554449;
var NNI2902459894 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2902459424, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903981, name: "Field1", sons: null}]};
NTI2902459894.node = NNI2902459894;
var NNI2902459997 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2902459424, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903981, name: "Field1", sons: null}]};
NTI2902459997.node = NNI2902459997;
NTI2902458576.base = NTI33554449;
var NNI2868904033 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2298478595, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2868903965, name: "Field2", sons: null}]};
NTI2868904033.node = NNI2868904033;
NTI2868904030.base = NTI2868904033;
var NNI2868904027 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2868904030, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2868904027.node = NNI2868904027;
var NNI2868904019 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2298478595, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI2868904027, name: "replacements", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI2868904019.node = NNI2868904019;
NTI2868903968.base = NTI2868904019;
var NNI2785018786 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2868903968, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903967, name: "val", sons: null}]};
NTI2785018786.node = NNI2785018786;
var NNI2785018842 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903968, name: "Field1", sons: null}]};
NTI2785018842.node = NNI2785018842;
NTI2785018790.base = NTI2785018793;
var NNI2785018793 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018790, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018790, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018786, name: "value", sons: null}]};
NTI2785018793.node = NNI2785018793;
NTI2785018814.base = NTI2785018793;
var NNI2785018822 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903968, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018814, name: "Field2", sons: null}]};
NTI2785018822.node = NNI2785018822;
NTI2785047179.base = NTI33554439;
var NNI2382364675 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2382364675.node = NNI2382364675;
var NNI2868903969 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "imageId", len: 0, typ: NTI33554449, name: "imageId", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI2382364675, name: "color", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554446, name: "lineHeight", sons: null}, 
{kind: 1, offset: "charWidth", len: 0, typ: NTI33554446, name: "charWidth", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2130706819, name: "bounds", sons: null}]};
NTI2868903969.node = NNI2868903969;
var NNI2785018861 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2868903969, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI2785018861.node = NNI2785018861;
var NNI2785018917 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903969, name: "Field1", sons: null}]};
NTI2785018917.node = NNI2785018917;
NTI2785018865.base = NTI2785018868;
var NNI2785018868 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785018865, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785018865, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785018861, name: "value", sons: null}]};
NTI2785018868.node = NNI2785018868;
NTI2785018889.base = NTI2785018868;
var NNI2785018897 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903969, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018889, name: "Field2", sons: null}]};
NTI2785018897.node = NNI2785018897;
NTI2785051770.base = NTI33554439;
var NNI2785018251 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2298478595, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017860, name: "Field2", sons: null}]};
NTI2785018251.node = NNI2785018251;
NTI2785018248.base = NTI2785018251;
var NNI2785018245 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2785018248, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2785018245.node = NNI2785018245;
NTI2785018265.base = NTI2785018268;
var NNI2785018262 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2785018265, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2785018262.node = NNI2785018262;
var NNI822083608 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI822083608.node = NNI822083608;
var NNI1291845743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845743.node = NNI1291845743;
NTI1291845743.base = NTI33555171;
NTI1291845646.base = NTI1291845743;
NTI1291845772.base = NTI1291845650;
var NNI1291845771 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1291845772, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1291845771.node = NNI1291845771;
NTI1291845771.base = NTI1291845757;
NTI1291845660.base = NTI1291845771;
var NNI1291845770 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1291845770.node = NNI1291845770;
NTI1291845770.base = NTI1291845757;
NTI1291845659.base = NTI1291845770;
NTI1291845758.base = NTI1291845659;
NTI1291845759.base = NTI1291845659;
var NNI1291845757 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1291845646, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1291845660, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1291845758, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1291845759, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1291845757.node = NNI1291845757;
NTI1291845648.base = NTI1291845746;
NTI1291845747.base = NTI1291845648;
NTI1291845748.base = NTI1291845648;
NTI1291845749.base = NTI1291845648;
var NNI1291845647 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1291845647, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845647, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1291845647, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1291845647, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1291845647, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1291845647, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1291845647, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1291845647, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1291845647, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1291845647, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1291845647, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1291845647, name: "NotationNode", len: 0, sons: null}}};
NTI1291845647.node = NNI1291845647;
var NNI1291845769 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1291845769.node = NNI1291845769;
NTI1291845769.base = NTI1291845757;
NTI1291845658.base = NTI1291845769;
NTI1291845751.base = NTI1291845658;
NTI1291845752.base = NTI1291845660;
var NNI1291845773 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1291845773.node = NNI1291845773;
NTI1291845773.base = NTI1291845757;
NTI1291845661.base = NTI1291845773;
NTI1291845753.base = NTI1291845661;
NTI1291845754.base = NTI1291845650;
var NNI1291845768 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1291845768.node = NNI1291845768;
NTI1291845768.base = NTI1291845757;
NTI1291845657.base = NTI1291845768;
NTI1291845755.base = NTI1291845657;
var NNI1291845767 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1291845767.node = NNI1291845767;
NTI1291845767.base = NTI1291845757;
NTI1291845656.base = NTI1291845767;
NTI1291845756.base = NTI1291845656;
var NNI1291845817 = {kind: 1, offset: "then", len: 0, typ: NTI1291845818, name: "then", sons: null};
NTI1291845817.node = NNI1291845817;
NTI1291845697.base = NTI1291845817;
var NNI1291845820 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1291845697, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1291845821, name: "onloadingdone", sons: null}]};
NTI1291845820.node = NNI1291845820;
NTI1291845698.base = NTI1291845820;
var NNI1291845750 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1291845650, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1291845650, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1291845650, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1291845650, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1291845751, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1291845752, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1291845753, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1291845754, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1291845755, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1291845756, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1291845698, name: "fonts", sons: null}]};
NTI1291845750.node = NNI1291845750;
NTI1291845750.base = NTI1291845746;
NTI1291845649.base = NTI1291845750;
var NNI1291845774 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1291845774.node = NNI1291845774;
NTI1291845774.base = NTI33555171;
NTI1291845662.base = NTI1291845774;
var NNI1291845746 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1291845747, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1291845748, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1291845749, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1291845648, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1291845648, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1291845648, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1291845647, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1291845648, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1291845648, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1291845648, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1291845649, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1291845662, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1291845650, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1291845746.node = NNI1291845746;
var NNI1291845701 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1291845702, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1291845703, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1291845704, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1291845705, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1291845706, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1291845707, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1291845708, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1291845709, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1291845710, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1291845711, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1291845712, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1291845713, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1291845714, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1291845715, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1291845716, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1291845717, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1291845718, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1291845719, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1291845720, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1291845721, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1291845722, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1291845723, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1291845724, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1291845725, name: "onloadend", sons: null}]};
NTI1291845701.node = NNI1291845701;
NTI1291845701.base = NTI33555171;
NTI1291845746.base = NTI1291845701;
NTI1291845757.base = NTI1291845746;
NTI1291845650.base = NTI1291845757;
NTI3070230535.base = NTI2113929221;
var NNI2332033122 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033123, name: "Field1", sons: null}]};
NTI2332033122.node = NNI2332033122;
NTI2332033121.base = NTI2332033122;
var NNI2332033115 = {kind: 1, offset: "handlers", len: 0, typ: NTI2332033121, name: "handlers", sons: null};
NTI2332033115.node = NNI2332033115;
var NNI3070230552 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3070230552.node = NNI3070230552;
var NNI3070230559 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3070230556, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3070230556, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3070230552, name: "value", sons: null}]};
NTI3070230559.node = NNI3070230559;
NTI3070230556.base = NTI3070230559;
var NNI3070230570 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3070230556, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3070230556, name: "tail", sons: null}]};
NTI3070230570.node = NNI3070230570;
NTI3070230580.base = NTI3070230559;
var NNI3070230588 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230580, name: "Field2", sons: null}]};
NTI3070230588.node = NNI3070230588;
NTI3070230585.base = NTI3070230588;
var NNI3070230597 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230585, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230597.node = NNI3070230597;
var NNI3070230608 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3070230608.node = NNI3070230608;
NTI3070230605.base = NTI3070230608;
var NNI3070230602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230602.node = NNI3070230602;
var NNI3070230547 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3070230570, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3070230597, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3070230602, name: "removedKeys", sons: null}]};
NTI3070230547.node = NNI3070230547;
NTI3070230546.base = NTI3070230547;
var NNI3070230534 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1291845650, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3070230535, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI2332033115, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3070230546, name: "escapedText", sons: null}]};
NTI3070230534.node = NNI3070230534;
var NNI2332033042 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033043, name: "Field1", sons: null}]};
NTI2332033042.node = NNI2332033042;
NTI2332033041.base = NTI2332033042;
var NNI2332033035 = {kind: 1, offset: "handlers", len: 0, typ: NTI2332033041, name: "handlers", sons: null};
NTI2332033035.node = NNI2332033035;
var NNI2332033067 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033068, name: "Field1", sons: null}]};
NTI2332033067.node = NNI2332033067;
NTI2332033066.base = NTI2332033067;
var NNI2332033060 = {kind: 1, offset: "handlers", len: 0, typ: NTI2332033066, name: "handlers", sons: null};
NTI2332033060.node = NNI2332033060;
var NNI2332033089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033090, name: "Field1", sons: null}]};
NTI2332033089.node = NNI2332033089;
NTI2332033088.base = NTI2332033089;
var NNI2332033082 = {kind: 1, offset: "handlers", len: 0, typ: NTI2332033088, name: "handlers", sons: null};
NTI2332033082.node = NNI2332033082;
var NNI2332033106 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2332033107, name: "Field1", sons: null}]};
NTI2332033106.node = NNI2332033106;
NTI2332033105.base = NTI2332033106;
var NNI2332033099 = {kind: 1, offset: "handlers", len: 0, typ: NTI2332033105, name: "handlers", sons: null};
NTI2332033099.node = NNI2332033099;
var NNI2348810249 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2348810261, name: "getTextBounds", sons: null};
NTI2348810249.node = NNI2348810249;
var NNI2332033028 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2332033035, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2332033035, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2332033035, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2332033060, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2332033060, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2332033082, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2332033099, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2332033115, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2348810249, name: "layoutOptions", sons: null}]};
NTI2332033028.node = NNI2332033028;
NTI2332033028.base = NTI33555171;
NTI3070230534.base = NTI2332033028;
var NNI2046820381 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2046820381, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2046820381, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2046820381, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2046820381, name: "Super", len: 0, sons: null}}};
NTI2046820381.node = NNI2046820381;
NTI2046820382.base = NTI2046820381;
NTI805313422.base = NTI805306384;
NTI805313414.base = NTI805306384;
var NNI2046820402 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820382, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2046820402.node = NNI2046820402;
NTI2046820399.base = NTI2046820402;
var NNI2046820396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2046820399, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2046820396.node = NNI2046820396;
var NNI2046820383 = {kind: 1, offset: "next", len: 0, typ: NTI2046820396, name: "next", sons: null};
NTI2046820383.node = NNI2046820383;
var NNI2080374819 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080374819.node = NNI2080374819;
var NNI2080375503 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2080375503.node = NNI2080375503;
var NNI1828716558 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1828716558.node = NNI1828716558;
NTI1828716555.base = NTI1828716558;
var NNI1828716552 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1828716555, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1828716552.node = NNI1828716552;
var NNI2080374790 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1828716552, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2080374790.node = NNI2080374790;
NTI2080374789.base = NTI2080374790;
var NNI2046820417 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2046820384, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820383, name: "Field2", sons: null}]};
NTI2046820417.node = NNI2046820417;
NTI2046820414.base = NTI2046820417;
var NNI2046820411 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2046820414, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2046820411.node = NNI2046820411;
var NNI2046820385 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2046820411, name: "inputs", sons: null}]};
NTI2046820385.node = NNI2046820385;
NTI2046820420.base = NTI2046820385;
var NNI2046820419 = {kind: 1, offset: "states", len: 0, typ: NTI2046820420, name: "states", sons: null};
NTI2046820419.node = NNI2046820419;
NTI2046820386.base = NTI2046820419;
var NNI2080374797 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI33554435, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2080374789, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2046820386, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2080374798, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2080374799, name: "handleInput", sons: null}]};
NTI2080374797.node = NNI2080374797;
NTI2080374796.base = NTI2080374797;
NTI2214592526.base = NTI2080374796;
var NNI1660944387 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1660944387, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1660944387, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1660944387, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1660944387, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1660944387, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1660944387, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1660944387, name: "JArray", len: 0, sons: null}}};
NTI1660944387.node = NNI1660944387;
NTI872415649.base = NTI33554449;
var NNI1325400075 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325400075.node = NNI1325400075;
var NNI1325400074 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325400074.node = NNI1325400074;
NTI1325400074.base = NTI33555171;
NTI1325400075.base = NTI1325400074;
var NNI1325400092 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1325400092.node = NNI1325400092;
NTI1325400089.base = NTI1325400092;
var NNI1325400086 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325400089, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325400086.node = NNI1325400086;
var NNI2197815313 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2197815313, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2197815313, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2197815313, name: "browser", len: 0, sons: null}}};
NTI2197815313.node = NNI2197815313;
NTI2332033027.base = NTI2332033028;
var NNI2348810251 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2130706819, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706819, name: "Field1", sons: null}]};
NTI2348810251.node = NNI2348810251;
var NNI2348810250 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2348810251, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2130706819, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2382364675, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2382364675, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2113929221, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2348810250.node = NNI2348810250;
NTI2348810250.base = NTI33555171;
NTI2348810243.base = NTI2348810250;
var NNI1325400113 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2080374789, name: "Field2", sons: null}]};
NTI1325400113.node = NNI1325400113;
NTI1325400110.base = NTI1325400113;
var NNI1325400107 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325400110, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325400107.node = NNI1325400107;
var NNI1660944404 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1660944388, name: "Field3", sons: null}]};
NTI1660944404.node = NNI1660944404;
NTI1660944401.base = NTI1660944404;
var NNI1660944398 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1660944401, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1660944398.node = NNI1660944398;
NTI1660944406.base = NTI1660944388;
var NNI1660944389 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1660944387, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1660944398, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1660944406, name: "elems", sons: null}]]}]};
NTI1660944389.node = NNI1660944389;
NTI1660944388.base = NTI1660944389;
var NNI1325400128 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1325400128.node = NNI1325400128;
NTI1325400125.base = NTI1325400128;
var NNI1325400122 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325400125, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325400122.node = NNI1325400122;
NTI1191182347.base = NTI1191182349;
var NNI2164260868 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2164260868.node = NNI2164260868;
NTI2164260868.base = NTI33555171;
NTI2164260867.base = NTI2164260868;
var NNI2181038084 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2197815299, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "dirty", len: 0, typ: NTI33554466, name: "dirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2181038084.node = NNI2181038084;
NTI2181038084.base = NTI33555171;
NTI2181038083.base = NTI2181038084;
var NNI1325400068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2164260867, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2181038083, name: "editor", sons: null}]};
NTI1325400068.node = NNI1325400068;
NTI1325400067.base = NTI1325400068;
NTI1325400130.base = NTI1325400067;
NTI1325400069.base = NTI1325400074;
var NNI1325400078 = {kind: 1, offset: "props", len: 0, typ: NTI1325400086, name: "props", sons: null};
NTI1325400078.node = NNI1325400078;
NTI1325400073.base = NTI1325400078;
var NNI2499805222 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2382364675, name: "Field2", sons: null}]};
NTI2499805222.node = NNI2499805222;
NTI2499805219.base = NTI2499805222;
var NNI2499805216 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2499805219, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2499805216.node = NNI2499805216;
var NNI2499805196 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2382364675, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2499805196.node = NNI2499805196;
NTI2499805207.base = NTI2499805187;
var NNI2499805188 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2499805196, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2499805196, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2499805207, name: "fontStyle", sons: null}]};
NTI2499805188.node = NNI2499805188;
var NNI2499805237 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2499805188, name: "Field2", sons: null}]};
NTI2499805237.node = NNI2499805237;
NTI2499805234.base = NTI2499805237;
var NNI2499805231 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2499805234, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2499805231.node = NNI2499805231;
var NNI2499805208 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2499805216, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2499805231, name: "tokenColors", sons: null}]};
NTI2499805208.node = NNI2499805208;
NTI2499805189.base = NTI2499805208;
var NNI1325400144 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815299, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2181038083, name: "Field2", sons: null}]};
NTI1325400144.node = NNI1325400144;
NTI1325400141.base = NTI1325400144;
var NNI1325400138 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1325400141, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1325400138.node = NNI1325400138;
var NNI2231369732 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2197815299, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}]};
NTI2231369732.node = NNI2231369732;
NTI2231369732.base = NTI33555171;
NTI2231369731.base = NTI2231369732;
NTI1325400146.base = NTI2231369731;
var NNI1325400159 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1325400160, name: "Field1", sons: null}]};
NTI1325400159.node = NNI1325400159;
NTI1325400158.base = NTI1325400159;
var NNI1325400152 = {kind: 1, offset: "handlers", len: 0, typ: NTI1325400158, name: "handlers", sons: null};
NTI1325400152.node = NNI1325400152;
NTI1325400166.base = NTI2181038083;
var NNI1325400098 = {kind: 2, len: 34, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2197815313, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2332033027, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2248146964, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2248146964, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2248146964, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2348810243, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1325400107, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1660944388, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1325400122, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1191182347, name: "logger", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1325400130, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1325400069, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1325400073, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2499805189, name: "theme", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1325400138, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1325400146, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1325400152, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1325400152, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2181038083, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2080374796, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2080374796, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1325400166, name: "editor_defaults", sons: null}]};
NTI1325400098.node = NNI1325400098;
NTI1325400097.base = NTI1325400098;
NTI2634023048.base = NTI33554449;
var NNI2634023061 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2634023062, name: "Field1", sons: null}]};
NTI2634023061.node = NNI2634023061;
NTI2634023060.base = NTI2634023061;
var NNI2634023054 = {kind: 1, offset: "handlers", len: 0, typ: NTI2634023060, name: "handlers", sons: null};
NTI2634023054.node = NNI2634023054;
var NNI2634023078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2634023079, name: "Field1", sons: null}]};
NTI2634023078.node = NNI2634023078;
NTI2634023077.base = NTI2634023078;
var NNI2634023071 = {kind: 1, offset: "handlers", len: 0, typ: NTI2634023077, name: "handlers", sons: null};
NTI2634023071.node = NNI2634023071;
var NNI2634023095 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2634023096, name: "Field1", sons: null}]};
NTI2634023095.node = NNI2634023095;
NTI2634023094.base = NTI2634023095;
var NNI2634023088 = {kind: 1, offset: "handlers", len: 0, typ: NTI2634023094, name: "handlers", sons: null};
NTI2634023088.node = NNI2634023088;
var NNI2197815305 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2197815305.node = NNI2197815305;
var NNI2197815307 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2197815305, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815305, name: "Field1", sons: null}]};
NTI2197815307.node = NNI2197815307;
NTI2634022919.base = NTI2197815307;
var NNI2634022915 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2634022915, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2634022915, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2634022915, name: "Nested", len: 0, sons: null}}};
NTI2634022915.node = NNI2634022915;
NTI2634022920.base = NTI2634022916;
var NNI2634022918 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2634022919, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2634022915, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2197815307, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2197815305, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2634022920, name: "children", sons: null}]]}]};
NTI2634022918.node = NNI2634022918;
NTI2634022916.base = NTI2634022918;
NTI2634023099.base = NTI2634022916;
NTI2634023100.base = NTI2634022916;
var NNI2717908998 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2717908998.node = NNI2717908998;
NTI2717908997.base = NTI2717908998;
var NNI2717909002 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2717909002.node = NNI2717909002;
NTI2717909001.base = NTI2717909002;
var NNI2717909000 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2717909000.node = NNI2717909000;
NTI2717908999.base = NTI2717909000;
var NNI2667577348 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2667577348.node = NNI2667577348;
NTI2667577348.base = NTI33555171;
NTI2667577347.base = NTI2667577348;
var NNI2634023106 = {kind: 1, offset: "val", len: 0, typ: NTI2667577347, name: "val", sons: null};
NTI2634023106.node = NNI2634023106;
var NNI2634023047 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2634023048, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2634023054, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2634023071, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2634023088, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2634023099, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2634023100, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2717908997, name: "tsParser", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2717909001, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2717908999, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2634023106, name: "languageServer", sons: null}]};
NTI2634023047.node = NNI2634023047;
NTI2634023047.base = NTI2164260868;
NTI2634023046.base = NTI2634023047;
NTI2197815315.base = NTI2197815307;
NTI2634023126.base = NTI2197815315;
var NNI2634023124 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2634023126, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2634023124.node = NNI2634023124;
var NNI2684354563 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2684354563.node = NNI2684354563;
var NNI2634023132 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2684354563, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2634023132.node = NNI2634023132;
NTI2634023143.base = NTI2197815307;
var NNI2634023155 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2634023143, name: "Field2", sons: null}]};
NTI2634023155.node = NNI2634023155;
NTI2634023152.base = NTI2634023155;
var NNI2634023149 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2634023152, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2634023149.node = NNI2634023149;
var NNI2197815311 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2197815311, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2197815311, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2197815311, name: "relative", len: 0, sons: null}}};
NTI2197815311.node = NNI2197815311;
var NNI2634023162 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2197815311, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2634023162.node = NNI2634023162;
var NNI2634023114 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2113929221, name: "bounds", sons: null}]};
NTI2634023114.node = NNI2634023114;
NTI2634023116.base = NTI2634023114;
var NNI2634023115 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2634023116, name: "parts", sons: null}]};
NTI2634023115.node = NNI2634023115;
NTI2634023170.base = NTI2634023115;
var NNI2667577349 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2667577349, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2667577349, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2667577349, name: "Function", len: 0, sons: null}}};
NTI2667577349.node = NNI2667577349;
var NNI2667577352 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2197815305, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2667577349, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2667577352.node = NNI2667577352;
NTI2634023171.base = NTI2667577352;
var NNI2634023173 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2634023173.node = NNI2634023173;
NTI2634023172.base = NTI2634023173;
var NNI2634023118 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1325400097, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2634023046, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2197815315, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2634023124, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2634023132, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2634023149, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2080374796, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2634023162, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2634023170, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2634023171, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2634023172, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2634023118.node = NNI2634023118;
NTI2634023118.base = NTI2181038084;
var NNI2734687771 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2298478595, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2768240644, name: "Field2", sons: null}]};
NTI2734687771.node = NNI2734687771;
NTI2734687768.base = NTI2734687771;
var NNI2734687765 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2734687768, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2734687765.node = NNI2734687765;
NTI2734687773.base = NTI2734687776;
var NNI2734687619 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2734687619, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2734687619, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2734687619, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2734687619, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2734687619, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2734687619.node = NNI2734687619;
var NNI2734687622 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2734687619, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2768240644, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2768240644, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2734687622.node = NNI2734687622;
NTI2734687620.base = NTI2734687622;
NTI2734687774.base = NTI2734687620;
NTI2734687775.base = NTI2734687620;
var NNI2734687752 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI2868904881, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2768240644, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2734687765, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2734687773, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2734687774, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2734687775, name: "redoOps", sons: null}]};
NTI2734687752.node = NNI2734687752;
NTI2734687752.base = NTI2164260868;
NTI2734687751.base = NTI2734687752;
NTI2734687789.base = NTI2768240644;
var NNI2734687787 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2734687789, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2734687787.node = NNI2734687787;
NTI2634023117.base = NTI2634023118;
var NNI2734687777 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2734687777, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2734687777, name: "AstCompletion", len: 0, sons: null}}};
NTI2734687777.node = NNI2734687777;
var NNI2734687778 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2734687777, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2298478595, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2768240643, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2734687778.node = NNI2734687778;
NTI2734687796.base = NTI2734687778;
var NNI2734687798 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2734687798.node = NNI2734687798;
NTI2734687797.base = NTI2734687798;
var NNI2734687800 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903967, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2130706819, name: "Field1", sons: null}]};
NTI2734687800.node = NNI2734687800;
NTI2734687799.base = NTI2734687800;
var NNI2734687801 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2734687801.node = NNI2734687801;
var NNI2734687802 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2734687802.node = NNI2734687802;
var NNI2734687803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2734687803.node = NNI2734687803;
var NNI2734687804 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2734687804.node = NNI2734687804;
var NNI2734687781 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1325400097, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2734687751, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2768240644, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2734687787, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2734687787, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2768240759, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2298478595, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2768240644, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2634023117, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2634023046, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2080374796, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2080374796, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2734687796, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2734687797, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2113929221, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2734687799, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2734687801, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2734687802, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2734687803, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2734687804, name: "lastCommand", sons: null}]};
NTI2734687781.node = NNI2734687781;
NTI2734687781.base = NTI2181038084;
NTI1325403640.base = NTI2181038084;
NTI1325403646.base = NTI1325403640;
var NNI2382364693 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2382364693.node = NNI2382364693;
NTI2382364693.base = NTI134217746;
var NNI2365587613 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2365587613.node = NNI2365587613;
var NNI1694499294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1694499294.node = NNI1694499294;
var NNI1694498826 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1694498827, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1694498828, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1694498829, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1694498830, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1694498831, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1694498836, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1694498838, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1694498839, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1694498840, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1694498841, name: "flushImpl", sons: null}]};
NTI1694498826.node = NNI1694498826;
NTI1694498826.base = NTI33555171;
NTI1694499294.base = NTI1694498826;
var NNI1728053252 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1728053252, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1728053252, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1728053252, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1728053252, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1728053252, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1728053252, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1728053252, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1728053252, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1728053252, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1728053252, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1728053252, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1728053252, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1728053252, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1728053252, name: "tkComma", len: 0, sons: null}}};
NTI1728053252.node = NNI1728053252;
var NNI1728053251 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1728053251, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1728053251, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1728053251, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1728053251, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1728053251, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1728053251, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1728053251, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1728053251, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1728053251, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1728053251, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1728053251, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1728053251, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1728053251.node = NNI1728053251;
var NNI1728053253 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1728053253, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1728053253, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1728053253, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1728053253, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1728053253, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1728053253, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1728053253, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1728053253, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1728053253, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1728053253, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1728053253, name: "errExprExpected", len: 0, sons: null}}};
NTI1728053253.node = NNI1728053253;
var NNI1728053254 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1728053254, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1728053254, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1728053254, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1728053254, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1728053254, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1728053254, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1728053254, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1728053254, name: "stateExpectValue", len: 0, sons: null}}};
NTI1728053254.node = NNI1728053254;
NTI1728053262.base = NTI1728053254;
var NNI1728053255 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1728053252, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1728053251, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1728053253, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1728053262, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1728053255.node = NNI1728053255;
NTI1694498825.base = NTI1694498826;
NTI1677721605.base = NTI33554448;
var NNI1677721604 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1694498825, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1677721605, name: "refillChars", sons: null}]};
NTI1677721604.node = NNI1677721604;
NTI1677721604.base = NTI33555171;
NTI1728053255.base = NTI1677721604;
NTI1728053295.base = NTI1728053254;
var NNI1728053257 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1728053257.node = NNI1728053257;
NTI1728053257.base = NTI134217746;
var NNI1325404020 = {kind: 1, offset: "val", len: 0, typ: NTI1325400097, name: "val", sons: null};
NTI1325404020.node = NNI1325404020;
var NNI1845493766 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1845493766, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1845493766, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1845493766, name: "joptEnumString", len: 0, sons: null}}};
NTI1845493766.node = NNI1845493766;
var NNI1845493767 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1845493767, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1845493767, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1845493767, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1845493767.node = NNI1845493767;
var NNI1845493768 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1845493766, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1845493767, name: "jsonNodeMode", sons: null}]};
NTI1845493768.node = NNI1845493768;
var NNI1728053256 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1728053256.node = NNI1728053256;
NTI1728053256.base = NTI134217746;
var NNI2717909028 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2717909028.node = NNI2717909028;
NTI872415757.base = NTI33554449;
NTI872415746.base = NTI33554449;
var NNI2214592516 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2214592516.node = NNI2214592516;
NTI2214592516.base = NTI2181038084;
var NNI1325400076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325400076.node = NNI1325400076;
NTI1325400076.base = NTI1325400074;
var NNI1325400077 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325400077.node = NNI1325400077;
NTI1325400077.base = NTI1325400074;
NTI503316776.base = NTI33554449;
var NNI3003121669 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3003121669.node = NNI3003121669;
NTI3003121669.base = NTI33555171;
NTI3003121667.base = NTI3003121669;
NTI3003121671.base = NTI3003121667;
var NNI3003121678 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI3003121678.node = NNI3003121678;
NTI3003121677.base = NTI3003121678;
var NNI3003121670 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1325400097, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2634023117, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3003121671, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3003121672, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3003121673, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3003121674, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3003121675, name: "getCompletions", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3003121677, name: "lastItems", sons: null}]};
NTI3003121670.node = NNI3003121670;
NTI3003121670.base = NTI2231369732;
NTI2634023297.base = NTI2197815315;
NTI2634023243.base = NTI2197815307;
NTI2634023232.base = NTI2197815307;
NTI2634023412.base = NTI2197815307;
var NNI2634026335 = {kind: 1, offset: "val", len: 0, typ: NTI2634023117, name: "val", sons: null};
NTI2634026335.node = NNI2634026335;
var NNI1325402635 = {kind: 1, offset: "val", len: 0, typ: NTI2181038083, name: "val", sons: null};
NTI1325402635.node = NNI1325402635;
NTI2634024038.base = NTI2634022916;
NTI2634024267.base = NTI2197815307;
NTI2634026873.base = NTI2197815307;
NTI1660944520.base = NTI1660944388;
NTI2634024009.base = NTI2197815307;
NTI2634027358.base = NTI2197815307;
NTI2197815355.base = NTI2197815307;
NTI2197815435.base = NTI2197815307;
NTI2197815426.base = NTI2197815307;
NTI2667577384.base = NTI2667577352;
NTI2634024517.base = NTI2197815307;
var NNI2634024522 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2634024517, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2634024522.node = NNI2634024522;
NTI2634024447.base = NTI2197815307;
var NNI2634026184 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2197815305, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815305, name: "Field1", sons: null}]};
NTI2634026184.node = NNI2634026184;
var NNI2634026226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2197815305, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815305, name: "Field1", sons: null}]};
NTI2634026226.node = NNI2634026226;
var NNI2634026258 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2197815305, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815305, name: "Field1", sons: null}]};
NTI2634026258.node = NNI2634026258;
NTI2634023218.base = NTI2197815307;
NTI2634030781.base = NTI2197815307;
var NNI2634031856 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2634031856.node = NNI2634031856;
var NNI2634031855 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2634031856, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2197815305, name: "Field1", sons: null}]};
NTI2634031855.node = NNI2634031855;
var NNI2634031918 = {kind: 1, offset: "val", len: 0, typ: NTI1660944388, name: "val", sons: null};
NTI2634031918.node = NNI2634031918;
NTI3003121676.base = NTI3003121667;
NTI3003121668.base = NTI3003121670;
var NNI3003121774 = {kind: 1, offset: "val", len: 0, typ: NTI3003121668, name: "val", sons: null};
NTI3003121774.node = NNI3003121774;
var NNI1325402767 = {kind: 1, offset: "val", len: 0, typ: NTI2231369731, name: "val", sons: null};
NTI1325402767.node = NNI1325402767;
var NNI1476395015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1476395015.node = NNI1476395015;
NTI2013265996.base = NTI33554449;
NTI2013265930.base = NTI33554435;
NTI2013265936.base = NTI2013265930;
NTI2013265963.base = NTI33554435;
var NNI1325402822 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1325402822.node = NNI1325402822;
NTI1325402822.base = NTI3003121669;
var NNI1325402824 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI1325402824.node = NNI1325402824;
NTI1325402824.base = NTI3003121669;
NTI1325406467.base = NTI2197815299;
var NNI1660945593 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1660944388, name: "Field1", sons: null}]};
NTI1660945593.node = NNI1660945593;
NTI2499805699.base = NTI2499805187;
var NNI2499807172 = {kind: 1, offset: "val", len: 0, typ: NTI2499805189, name: "val", sons: null};
NTI2499807172.node = NNI2499807172;
NTI2348810255.base = NTI2348810243;
var NNI2348810254 = {kind: 1, offset: "children", len: 0, typ: NTI2348810255, name: "children", sons: null};
NTI2348810254.node = NNI2348810254;
NTI2348810254.base = NTI2348810250;
NTI2348810253.base = NTI2348810243;
var NNI2348810252 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2348810253, name: "children", sons: null}]};
NTI2348810252.node = NNI2348810252;
NTI2348810252.base = NTI2348810250;
NTI2348810257.base = NTI2348810243;
var NNI2348810256 = {kind: 1, offset: "children", len: 0, typ: NTI2348810257, name: "children", sons: null};
NTI2348810256.node = NNI2348810256;
NTI2348810256.base = NTI2348810250;
NTI2348810259.base = NTI2348810243;
var NNI2348810258 = {kind: 1, offset: "children", len: 0, typ: NTI2348810259, name: "children", sons: null};
NTI2348810258.node = NNI2348810258;
NTI2348810258.base = NTI2348810250;
var NNI2348810260 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2499805188, name: "style", sons: null}]};
NTI2348810260.node = NNI2348810260;
NTI2348810260.base = NTI2348810250;
var NNI2382364676 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2382364676.node = NNI2382364676;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1207959581.base = NTI1207959617;
NTI1207959579.base = NTI1207959609;
NTI1207959578.base = NTI1207959605;
NTI1207959577.base = NTI1207959601;
var NNI1207959570 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1207959570, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1207959570, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207959570, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1207959570, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1207959570, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1207959570, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1207959570, name: "Sunday", len: 0, sons: null}}};
NTI1207959570.node = NNI1207959570;
NTI1207959580.base = NTI1207959613;
var NNI1207959625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1207959626, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1207959627, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1207959625.node = NNI1207959625;
NTI1207959590.base = NTI1207959625;
var NNI1207959585 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1207959581, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1207959579, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1207959578, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1207959577, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1207959570, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1207959580, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1207959590, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1207959585.node = NNI1207959585;
NTI1207959585.base = NTI33555171;
var NNI1207959584 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1207959581, name: "nanosecond", sons: null}]};
NTI1207959584.node = NNI1207959584;
var NNI1207959586 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1207959581, name: "nanosecond", sons: null}]};
NTI1207959586.node = NNI1207959586;
NTI1207959576.base = NTI1207959596;
var NNI1207959569 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1207959569, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1207959569, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1207959569, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1207959569, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1207959569, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1207959569, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1207959569, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1207959569, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1207959569, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1207959569, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1207959569, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1207959569, name: "December", len: 0, sons: null}}};
NTI1207959569.node = NNI1207959569;
var NNI1207959748 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1207959576, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1207959569, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1207959748.node = NNI1207959748;
var NNI1207959591 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1207959584, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1207959591.node = NNI1207959591;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI2785017991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795097, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903968, name: "val", sons: null}]};
NTI2785017991.node = NNI2785017991;
NTI2785017995.base = NTI2785017998;
var NNI2785017998 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785017995, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785017995, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785017991, name: "value", sons: null}]};
NTI2785017998.node = NNI2785017998;
NTI2785018019.base = NTI2785017998;
var NNI2785018027 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795097, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785018019, name: "Field2", sons: null}]};
NTI2785018027.node = NNI2785018027;
NTI2499805632.base = NTI2499805187;
var NNI2969567907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2298478595, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903966, name: "Field1", sons: null}]};
NTI2969567907.node = NNI2969567907;
NTI2952790034.base = NTI2734687778;
var NNI2785017918 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795097, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2768240644, name: "val", sons: null}]};
NTI2785017918.node = NNI2785017918;
NTI2785017922.base = NTI2785017925;
var NNI2785017925 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2785017922, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2785017922, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2785017918, name: "value", sons: null}]};
NTI2785017925.node = NNI2785017925;
NTI2785017946.base = NTI2785017925;
var NNI2785017954 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1358954499, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795097, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2785017946, name: "Field2", sons: null}]};
NTI2785017954.node = NNI2785017954;
var NNI2768241977 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}]};
NTI2768241977.node = NNI2768241977;
NTI2734688707.base = NTI2768240644;
NTI2181038111.base = NTI2080374796;
NTI2734690703.base = NTI2734687778;
NTI2734691311.base = NTI2734687620;
var NNI2734691605 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2768240644, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2734691605.node = NNI2734691605;
var NNI2734691610 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2734691605, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2734691610.node = NNI2734691610;
var NNI2634032594 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2634032594.node = NNI2634032594;
var NNI2634032417 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2197815305, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2634032417.node = NNI2634032417;
NTI2952790245.base = NTI2080374796;
NTI2952790021.base = NTI2734687778;
var NNI2952790024 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2952790024.node = NNI2952790024;
NTI2952790023.base = NTI2952790024;
var NNI2952790020 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1325400097, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2634023117, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2734687751, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2952790021, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI2952790022, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2113929221, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2952790023, name: "lastItems", sons: null}]};
NTI2952790020.node = NNI2952790020;
NTI2952790020.base = NTI2231369732;
var NNI3003121699 = {kind: 1, offset: "val", len: 0, typ: NTI3003121667, name: "val", sons: null};
NTI3003121699.node = NNI3003121699;
var NNI2952790158 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2734687778, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2952790158.node = NNI2952790158;
var NNI2348810852 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2113929221, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2348810852.node = NNI2348810852;
NTI872416567.base = NTI33554448;
NTI2734687780.base = NTI2734687781;
var NNI2734693534 = {kind: 1, offset: "val", len: 0, typ: NTI2734687780, name: "val", sons: null};
NTI2734693534.node = NNI2734693534;
var NNI2768240780 = {kind: 1, offset: "val", len: 0, typ: NTI2768240644, name: "val", sons: null};
NTI2768240780.node = NNI2768240780;
var NNI2734689014 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}]};
NTI2734689014.node = NNI2734689014;
NTI2952790026.base = NTI2734687778;
var NNI2868904130 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903965, name: "Field1", sons: null}]};
NTI2868904130.node = NNI2868904130;
var NNI2868904058 = {kind: 1, offset: "val", len: 0, typ: NTI2868903965, name: "val", sons: null};
NTI2868904058.node = NNI2868904058;
var NNI2734696906 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903965, name: "Field1", sons: null}]};
NTI2734696906.node = NNI2734696906;
var NNI2785053670 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2768240644, name: "Field1", sons: null}]};
NTI2785053670.node = NNI2785053670;
var NNI2785053723 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903968, name: "Field1", sons: null}]};
NTI2785053723.node = NNI2785053723;
var NNI2785018055 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2801795097, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2868903969, name: "val", sons: null}]};
NTI2785018055.node = NNI2785018055;
var NNI2785053776 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903969, name: "Field1", sons: null}]};
NTI2785053776.node = NNI2785053776;
var NNI2785053829 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903946, name: "Field1", sons: null}]};
NTI2785053829.node = NNI2785053829;
var NNI2785053882 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801795097, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903957, name: "Field1", sons: null}]};
NTI2785053882.node = NNI2785053882;
var NNI2785053935 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2768240644, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903940, name: "Field1", sons: null}]};
NTI2785053935.node = NNI2785053935;
var NNI2785053982 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2768240644, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903943, name: "Field1", sons: null}]};
NTI2785053982.node = NNI2785053982;
var NNI2785054029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2768240644, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868905073, name: "Field1", sons: null}]};
NTI2785054029.node = NNI2785054029;
var NNI2785054123 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2768240644, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868904878, name: "Field1", sons: null}]};
NTI2785054123.node = NNI2785054123;
var NNI2785054256 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903946, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903940, name: "Field1", sons: null}]};
NTI2785054256.node = NNI2785054256;
var NNI2785054303 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903946, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903943, name: "Field1", sons: null}]};
NTI2785054303.node = NNI2785054303;
var NNI2785054350 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903957, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903943, name: "Field1", sons: null}]};
NTI2785054350.node = NNI2785054350;
var NNI2785054397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903968, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2868903967, name: "Field1", sons: null}]};
NTI2785054397.node = NNI2785054397;
var NNI2785054444 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2868903969, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2785054444.node = NNI2785054444;
NTI1325401598.base = NTI2113929221;
var NNI2097152003 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2097152003, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2097152003, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2097152003, name: "Percent", len: 0, sons: null}}};
NTI2097152003.node = NNI2097152003;
var NNI2097152004 = {kind: 3, offset: "kind", len: 3, typ: NTI2097152003, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2097152004.node = NNI2097152004;
var NNI2097152063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2113929221, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2113929221, name: "Field1", sons: null}]};
NTI2097152063.node = NNI2097152063;
NTI1325401387.base = NTI2113929221;
var NNI3053453316 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3053453316.node = NNI3053453316;
var NNI2382364677 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2382364677.node = NNI2382364677;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
    var names_2768242660 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet11 = setConstr(4);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}
var ConstSet12 = setConstr(4);
var ConstSet13 = setConstr(5);
var ConstSet14 = setConstr(2);
var ConstSet15 = setConstr(3);
var ConstSet16 = setConstr(5);
var ConstSet17 = setConstr(6);
var ConstSet18 = setConstr(6);
var ConstSet19 = setConstr(4);
var ConstSet20 = setConstr(4);
var ConstSet21 = setConstr(4);
var ConstSet22 = setConstr(4);
var ConstSet23 = setConstr(4);
var ConstSet24 = setConstr(5);
var ConstSet25 = setConstr(5);
var ConstSet26 = setConstr(4);
var ConstSet27 = setConstr(4);
var ConstSet28 = setConstr(4);
var ConstSet29 = setConstr(4);
var ConstSet30 = setConstr(4);
var ConstSet31 = setConstr(4);
var ConstSet32 = setConstr(4);
var ConstSet33 = setConstr(4);
var ConstSet34 = setConstr(4);
var ConstSet35 = setConstr(6);
var ConstSet36 = setConstr(6);
var ConstSet37 = setConstr(0);
var ConstSet38 = setConstr(1);
var ConstSet39 = setConstr(1);

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet40 = setConstr(1);
var ConstSet41 = setConstr(1);
var ConstSet42 = setConstr(3);
var ConstSet43 = setConstr(3);
var ConstSet44 = setConstr(2);
var ConstSet45 = setConstr(2);
var ConstSet46 = setConstr(4);
var ConstSet47 = setConstr(4);
var ConstSet48 = setConstr(5);
var ConstSet49 = setConstr(5);
var ConstSet50 = setConstr(6);
var ConstSet51 = setConstr(6);
var ConstSet52 = setConstr(1);
var ConstSet53 = setConstr(1);
var ConstSet54 = setConstr(1);
var ConstSet55 = setConstr(1);
var ConstSet56 = setConstr(1);
var ConstSet57 = setConstr(1);
var ConstSet58 = setConstr(0);
var ConstSet59 = setConstr(0);

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
var ConstSet60 = setConstr(0);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(4);
var ConstSet63 = setConstr(5);
var ConstSet64 = setConstr(4);
var ConstSet65 = setConstr(4);
var ConstSet66 = setConstr(3);
var ConstSet67 = setConstr(2);
var ConstSet68 = setConstr(5);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(5);
var ConstSet72 = setConstr(6);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(3);
var ConstSet76 = setConstr(2);
var ConstSet77 = setConstr(5);
var ConstSet78 = setConstr(5);
var ConstSet79 = setConstr(6);
var ConstSet80 = setConstr(0);
var ConstSet81 = setConstr(1);
var ConstSet82 = setConstr(1);
var ConstSet83 = setConstr(1);
var ConstSet84 = setConstr(1);
var ConstSet85 = setConstr(0);
var ConstSet86 = setConstr(1);
var ConstSet87 = setConstr(0);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(3);
var ConstSet90 = setConstr(3);
var ConstSet91 = setConstr(4);
var ConstSet92 = setConstr(5);
var ConstSet93 = setConstr(4);
var ConstSet94 = setConstr(10, 9, 7);
var ConstSet95 = setConstr(8);
var ConstSet96 = setConstr(1);
var ConstSet97 = setConstr(0);
var ConstSet98 = setConstr(0);
var ConstSet99 = setConstr(0);
var ConstSet100 = setConstr(0);
var ConstSet101 = setConstr();
var ConstSet102 = setConstr(0);

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet103 = setConstr(0);
var ConstSet104 = setConstr(0);
var ConstSet105 = setConstr(2);
var ConstSet106 = setConstr(1);

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}
var ConstSet107 = setConstr();
var ConstSet108 = setConstr(1);
var ConstSet109 = setConstr(1);
var ConstSet110 = setConstr(1);
var ConstSet111 = setConstr(3);
var ConstSet112 = setConstr(3);
var ConstSet113 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet114 = setConstr(2);
var ConstSet115 = setConstr();
var ConstSet116 = setConstr();
var ConstSet117 = setConstr(0);
var ConstSet118 = setConstr(1);
var ConstSet119 = setConstr(2);
var ConstSet120 = setConstr();
var ConstSet121 = setConstr();
var ConstSet122 = setConstr(1);
    var toUpperRanges_805307345 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_805307346 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_805307343 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_805307344 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet123 = setConstr(1);
var ConstSet124 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet125 = setConstr(1);
var ConstSet126 = setConstr(1);
var ConstSet127 = setConstr(1);
var ConstSet128 = setConstr();
var ConstSet129 = setConstr();
var ConstSet130 = setConstr();
var ConstSet131 = setConstr();
var ConstSet132 = setConstr(5);

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet135 = setConstr();
var ConstSet136 = setConstr(120, 88);
var ConstSet137 = setConstr(0);
var ConstSet138 = setConstr([48, 57]);
var ConstSet139 = setConstr(0, 125);
var ConstSet140 = setConstr([48, 57]);
var ConstSet141 = setConstr([65, 90]);
var ConstSet142 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet143 = setConstr(13, 10);
var ConstSet144 = setConstr([48, 57]);
var ConstSet145 = setConstr([48, 57]);
var ConstSet146 = setConstr(69, 101);
var ConstSet147 = setConstr(43, 45);
var ConstSet148 = setConstr([48, 57]);
var ConstSet149 = setConstr(46, 101, 69);
var ConstSet150 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet151 = setConstr([97, 122], [65, 90], 95);
var ConstSet152 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet153 = setConstr(4);
var ConstSet154 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet155 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet156 = setConstr([48, 57]);
var ConstSet157 = setConstr([48, 57]);
var ConstSet158 = setConstr(101, 69);
var ConstSet159 = setConstr([48, 57]);
var ConstSet160 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet154[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet155[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet156[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet157[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet158[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet159[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet160[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1728053326 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet161 = setConstr(5);
var ConstSet162 = setConstr(6);
    var names_1325407521 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet163 = setConstr(4);
var ConstSet164 = setConstr(4);
var ConstSet165 = setConstr(2);
var ConstSet166 = setConstr(2);
var ConstSet167 = setConstr(3);
var ConstSet168 = setConstr(3);
var ConstSet169 = setConstr(1);
var ConstSet170 = setConstr(1);
var ConstSet171 = setConstr(6);
var ConstSet172 = setConstr(6);
var ConstSet173 = setConstr(5);
var ConstSet174 = setConstr(5);
var ConstSet175 = setConstr(5);
var ConstSet176 = setConstr(5);
var ConstSet177 = setConstr(5);
var ConstSet178 = setConstr(6);
var ConstSet179 = setConstr(5);
var ConstSet180 = setConstr(6);
var ConstSet181 = setConstr(5);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(2);
var ConstSet185 = setConstr(3);
var ConstSet186 = setConstr(1);
var ConstSet187 = setConstr(4, 0);
var ConstSet188 = setConstr(4, 0);
var ConstSet189 = setConstr(4);
var ConstSet190 = setConstr(6);
var ConstSet191 = setConstr(1);
var ConstSet192 = setConstr(1);
var ConstSet193 = setConstr(1);
var ConstSet194 = setConstr(5);
var ConstSet195 = setConstr(5);
var ConstSet196 = setConstr(4);
var ConstSet197 = setConstr(4);
var ConstSet198 = setConstr(2, 3);
var ConstSet199 = setConstr(2, 3);
var ConstSet200 = setConstr(3);
var ConstSet201 = setConstr(2);
var ConstSet202 = setConstr(47, 47);
var ConstSet203 = setConstr(47, 47);
var ConstSet204 = setConstr(47, 47);
var ConstSet205 = setConstr(13, 10);
var ConstSet206 = setConstr(6);
var ConstSet207 = setConstr(2);
var ConstSet208 = setConstr(2);
var ConstSet209 = setConstr(2);
var ConstSet210 = setConstr([65, 90]);
var ConstSet211 = setConstr(4);
var ConstSet212 = setConstr(2);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(5);
var ConstSet215 = setConstr(2);
var ConstSet216 = setConstr(3);
var ConstSet217 = setConstr(1);
var ConstSet218 = setConstr(6);
var ConstSet219 = setConstr(6);
var ConstSet220 = setConstr(6);
var ConstSet221 = setConstr(13, 10);
var ConstSet222 = setConstr(2);
var ConstSet223 = setConstr(2);
var ConstSet224 = setConstr(6);
var ConstSet225 = setConstr(5);
var ConstSet226 = setConstr(2);
var ConstSet227 = setConstr(2);
var ConstSet228 = setConstr(3);
var ConstSet229 = setConstr(2);
var ConstSet230 = setConstr(0);
var ConstSet231 = setConstr(0);
var ConstSet232 = setConstr(0);
var ConstSet233 = setConstr(1);
var ConstSet234 = setConstr(1);
var ConstSet235 = setConstr(1);
var ConstSet236 = setConstr(2);
var ConstSet237 = setConstr(2);
var ConstSet238 = setConstr(2);
var ConstSet239 = setConstr(0);
var ConstSet240 = setConstr(0);
var ConstSet241 = setConstr(0);
var ConstSet242 = setConstr(1);
var ConstSet243 = setConstr(1);
var ConstSet244 = setConstr(1);
var ConstSet245 = setConstr(1);
var ConstSet246 = setConstr(2);
var ConstSet247 = setConstr(2);
var ConstSet248 = setConstr(2);
var ConstSet249 = setConstr(2);
var ConstSet250 = setConstr(47, 47);
var ConstSet251 = setConstr(47, 47);
var ConstSet252 = setConstr(47, 47);
var ConstSet253 = setConstr(47, 47);
var ConstSet254 = setConstr(47, 47);
var ConstSet255 = setConstr(47, 47);
var ConstSet256 = setConstr(47, 47);
var ConstSet257 = setConstr(47, 47);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(47, 47);
var ConstSet263 = setConstr(2, 3);
var ConstSet264 = setConstr(2);
var ConstSet265 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet266 = setConstr(2, 3);
var ConstSet267 = setConstr(2);
var ConstSet268 = setConstr(0);
var ConstSet269 = setConstr(5);
var ConstSet270 = setConstr(4);
var ConstSet271 = setConstr(6);
var ConstSet272 = setConstr(4);
var ConstSet273 = setConstr(6);
var ConstSet274 = setConstr(4);
var ConstSet275 = setConstr();
var ConstSet276 = setConstr(4);
var ConstSet277 = setConstr(46, 44);
var ConstSet278 = setConstr([65, 90]);
var ConstSet279 = setConstr([97, 122]);
var ConstSet280 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet281 = setConstr([65, 90]);
    var unitWeights_1207959702 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
    var daysUntilMonthLeap_1207959825 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1207959824 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1191182351 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet282 = setConstr();
var ConstSet283 = setConstr(0);
var ConstSet284 = setConstr(0);
var ConstSet285 = setConstr(0);
var ConstSet286 = setConstr(1);
var ConstSet287 = setConstr(0);
var ConstSet288 = setConstr(0);
var ConstSet289 = setConstr();
var ConstSet290 = setConstr();
var ConstSet291 = setConstr();
var ConstSet292 = setConstr(1);
var ConstSet293 = setConstr(1);
var ConstSet294 = setConstr(0);
var ConstSet295 = setConstr(0);
var ConstSet296 = setConstr(0);
var ConstSet297 = setConstr(0);
var ConstSet298 = setConstr(1);
var ConstSet299 = setConstr(4);
var ConstSet300 = setConstr(4);
var ConstSet301 = setConstr(4);
var ConstSet302 = setConstr(4);
var ConstSet303 = setConstr(1);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr(0);
var ConstSet306 = setConstr(0);
var ConstSet307 = setConstr(4);
var ConstSet308 = setConstr([65, 90]);
var ConstSet309 = setConstr(13, 10);
var ConstSet310 = setConstr(0);
var ConstSet311 = setConstr(1);
var ConstSet312 = setConstr(2);
if (globalThis.utcInstance_1207961035 === undefined) {
  globalThis.utcInstance_1207961035 = [null];
}
if (globalThis.localInstance_1207961036 === undefined) {
  globalThis.localInstance_1207961036 = [null];
}
if (globalThis.level_1191182363 === undefined) {
  globalThis.level_1191182363 = [0];
}
if (globalThis.handlers_1191182364 === undefined) {
  globalThis.handlers_1191182364 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_721420307(levelThreshold_721420308, fmtStr_721420309) {
  var result_721420310 = null;

    result_721420310 = ({m_type: NTI721420294, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_721420310.fmtStr = nimCopy(null, fmtStr_721420309, NTI33554449);
    result_721420310.levelThreshold = levelThreshold_721420308;

  return result_721420310;

}
var logger_721420488 = [newCustomLogger_721420307(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_721420336(val_721420338) {
  var result_721420339 = ({val: null});

    if (!(!((val_721420338 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_721420339.val = val_721420338;

  return result_721420339;

}

function newConsoleLogger_1191182451(levelThreshold_1191182452, fmtStr_1191182453, useStderr_1191182454, flushThreshold_1191182455) {
  var result_1191182456 = null;

    result_1191182456 = ({m_type: NTI1191182350, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1191182456.fmtStr = nimCopy(null, fmtStr_1191182453, NTI33554449);
    result_1191182456.levelThreshold = levelThreshold_1191182452;
    result_1191182456.flushThreshold = flushThreshold_1191182455;
    result_1191182456.useStderr = useStderr_1191182454;

  return result_1191182456;

}

function enableConsoleLogger_721420334(self_721420335) {
    self_721420335.consoleLogger = nimCopy(self_721420335.consoleLogger, some_721420336(newConsoleLogger_1191182451(self_721420335.levelThreshold, self_721420335.fmtStr, false, 0)), NTI721420300);

  
}
enableConsoleLogger_721420334(logger_721420488[0]);
var objectID_1358954660 = [0];
var nextEditorId_2197815610 = [0];
var idCounter_2298478599 = [0];

function idNone_2298478706() {
  var result_2298478707 = ({id: 0});

  return result_2298478707;

}
var null_2298478708 = idNone_2298478706();
var gEditor_1325400204 = [null];

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function genOid_2298478600() {
  var result_2298478601 = ({id: 0});

    result_2298478601 = nimCopy(result_2298478601, {id: idCounter_2298478599[0]}, NTI2298478595);
    idCounter_2298478599[0] = addInt(idCounter_2298478599[0], 1);

  return result_2298478601;

}

function parseOid_2298478616(s_2298478617) {
  var result_2298478618 = ({id: 0});

    result_2298478618 = nimCopy(result_2298478618, genOid_2298478600(), NTI2298478595);

  return result_2298478618;

}

function parseId_2298478695(s_2298478696) {
  var result_2298478697 = ({id: 0});

  BeforeRet: {
    if (((s_2298478696).length < 23)) {
    if (true) {
    failedAssertImpl_268435515([105,100,46,110,105,109,40,51,57,44,32,53,41,32,96,102,97,108,115,101,96,32]);
    }
    
    }
    
    result_2298478697 = nimCopy(result_2298478697, parseOid_2298478616(s_2298478696), NTI2298478595);
    break BeforeRet;
  };

  return result_2298478697;

}
var IdPrint_2751463426 = parseId_2298478695([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2751463427 = parseId_2298478695([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2751463428 = parseId_2298478695([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2751463429 = parseId_2298478695([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2751463430 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2751463431 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2751463432 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2751463433 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2751463434 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2751463435 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2751463436 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2751463437 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2751463438 = parseId_2298478695([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2751463439 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2751463440 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2751463441 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2751463442 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2751463443 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2751463444 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2751463445 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2751463446 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2751463447 = parseId_2298478695([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2751463448 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2751463449 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2751463450 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2751463451 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2751463452 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2751463453 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2751463454 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2751463455 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2751463456 = parseId_2298478695([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2751463457 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2751463458 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2751463459 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2751463460 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2751463461 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2751463462 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2751463463 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2751463464 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2751463465 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2751463466 = parseId_2298478695([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2751463467 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2751463468 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2751463469 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2751463470 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2751463471 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2751463472 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2751463473 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2751463474 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2751463475 = parseId_2298478695([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2751463476 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2751463477 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2751463478 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2751463479 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2751463480 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2751463481 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2751463482 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2751463483 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2751463484 = parseId_2298478695([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2751463485 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2751463486 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2751463487 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2751463488 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2751463489 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2751463490 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2751463491 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2751463492 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2751463493 = parseId_2298478695([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2751463494 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2751463495 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2751463496 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2751463497 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2751463498 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2751463499 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2751463500 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2751463501 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2751463502 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2751463503 = parseId_2298478695([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2751463504 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2751463505 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2751463506 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2751463507 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2751463508 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2751463509 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2751463510 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2751463511 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2751463512 = parseId_2298478695([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2751463513 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2751463514 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2751463515 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2751463516 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2751463517 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2751463518 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2751463519 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2751463520 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2751463521 = parseId_2298478695([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2751463522 = parseId_2298478695([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2751463523 = parseId_2298478695([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2751463524 = parseId_2298478695([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2751463525 = parseId_2298478695([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_2801795086 = [0];
var dependencyGlobalRevision_2801795104 = parseId_2298478695([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_2902458581 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function nextPowerOfTwo_889192653(x_889192654) {
  var result_889192655 = 0;

    result_889192655 = (x_889192654 - 1);
    result_889192655 = (result_889192655 | (result_889192655 >> 16));
    result_889192655 = (result_889192655 | (result_889192655 >> 8));
    result_889192655 = (result_889192655 | (result_889192655 >> 4));
    result_889192655 = (result_889192655 | (result_889192655 >> 2));
    result_889192655 = (result_889192655 | (result_889192655 >> 1));
    result_889192655 += (1 + ((x_889192654 <= 0) ? 1 : 0));

  return result_889192655;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_1342177323(count_1342177324) {
  var result_1342177325 = 0;

    result_1342177325 = nextPowerOfTwo_889192653(addInt(divInt(mulInt(count_1342177324, 3), 2), 4));

  return result_1342177325;

}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function hasJsBigInt_989855787() {
  var result_989855788 = false;

    result_989855788 = typeof BigInt != 'undefined'

  return result_989855788;

}

function hiXorLoJs_1358954581(a_1358954582, b_1358954583) {
  var result_1358954584 = 0n;

    var prod_1358954585 = (a_1358954582 * b_1358954583);
    var mask_1358954586 = BigInt("0xffffffffffffffff");
    result_1358954584 = ((prod_1358954585 >> BigInt("64")) ^ (prod_1358954585 & mask_1358954586));

  return result_1358954584;

}

function hashWangYi1_1358954676(x_1358954678) {
  var result_1358954679 = 0;

    if (hasJsBigInt_989855787()) {
    var P0HEX60gensym6_1358954698 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1358954699 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1358954700 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1358954701 = hiXorLoJs_1358954581(hiXorLoJs_1358954581(P0HEX60gensym6_1358954698, (BigInt(x_1358954678) ^ P1HEX60gensym6_1358954699)), P58HEX60gensym6_1358954700);
    result_1358954679 = Number((() => { const i = resHEX60gensym6_1358954701, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1358954679 = (x_1358954678 & 4294967295);
    }
    

  return result_1358954679;

}

function hash_1358954668(x_1358954670) {
  var result_1358954671 = 0;

    result_1358954671 = hashWangYi1_1358954676(x_1358954670);

  return result_1358954671;

}

function isFilled_1342177312(hcode_1342177313) {
  var result_1342177314 = false;

    result_1342177314 = !((hcode_1342177313 == 0));

  return result_1342177314;

}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2734686283 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2734686283 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2734686283;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2734686283 = addInt(i_2734686283, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nextTry_1342177315(h_1342177316, maxHash_1342177317) {
  var result_1342177318 = 0;

    result_1342177318 = (addInt(h_1342177316, 1) & maxHash_1342177317);

  return result_1342177318;

}

function rawGet_2801795511(t_2801795514, key_2801795515, hc_2801795516, hc_2801795516_Idx) {
  var result_2801795517 = 0;

  BeforeRet: {
    hc_2801795516[hc_2801795516_Idx] = hash_1358954668(key_2801795515);
    if ((hc_2801795516[hc_2801795516_Idx] == 0)) {
    hc_2801795516[hc_2801795516_Idx] = 314159265;
    }
    
    if (((t_2801795514.data).length == 0)) {
    result_2801795517 = -1;
    break BeforeRet;
    }
    
    var h_2801795605 = (hc_2801795516[hc_2801795516_Idx] & (t_2801795514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801795514.data[chckIndx(h_2801795605, 0, (t_2801795514.data).length - 1)].Field0)) break Label2;
          if (((t_2801795514.data[chckIndx(h_2801795605, 0, (t_2801795514.data).length - 1)].Field0 == hc_2801795516[hc_2801795516_Idx]) && (t_2801795514.data[chckIndx(h_2801795605, 0, (t_2801795514.data).length - 1)].Field1 == key_2801795515))) {
          result_2801795517 = h_2801795605;
          break BeforeRet;
          }
          
          h_2801795605 = nextTry_1342177315(h_2801795605, (t_2801795514.data).length - 1);
        }
    };
    result_2801795517 = subInt(-1, h_2801795605);
  };

  return result_2801795517;

}

function mustRehash_2801796035(t_2801796037) {
  var result_2801796038 = false;

    if (!((t_2801796037.counter < (t_2801796037.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801796038 = ((mulInt((t_2801796037.data).length, 2) < mulInt(t_2801796037.counter, 3)) || (subInt((t_2801796037.data).length, t_2801796037.counter) < 4));

  return result_2801796038;

}

function rawInsert_2801796728(t_2801796732, data_2801796733, data_2801796733_Idx, key_2801796734, val_2801796735, hc_2801796736, h_2801796737) {
    data_2801796733[data_2801796733_Idx][chckIndx(h_2801796737, 0, (data_2801796733[data_2801796733_Idx]).length - 1)].Field1 = key_2801796734;
    data_2801796733[data_2801796733_Idx][chckIndx(h_2801796737, 0, (data_2801796733[data_2801796733_Idx]).length - 1)].Field2 = nimCopy(null, val_2801796735, NTI33554449);
    data_2801796733[data_2801796733_Idx][chckIndx(h_2801796737, 0, (data_2801796733[data_2801796733_Idx]).length - 1)].Field0 = hc_2801796736;

  
}

function enlarge_2801796292(t_2801796295) {
    var n_2801796298 = [];
    n_2801796298 = new Array(chckRange(mulInt((t_2801796295.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801796295.data).length, 2), 0, 2147483647) ; ++i) { n_2801796298[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2801796295.data; t_2801796295.data = n_2801796298; n_2801796298 = Temporary1;    Label2: {
      var i_2801796396 = 0;
      var colontmp__2734686287 = 0;
      colontmp__2734686287 = (n_2801796298).length - 1;
      var res_2734686289 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686289 <= colontmp__2734686287)) break Label4;
            i_2801796396 = res_2734686289;
            var eh_2801796477 = n_2801796298[chckIndx(i_2801796396, 0, (n_2801796298).length - 1)].Field0;
            if (isFilled_1342177312(eh_2801796477)) {
            var j_2801796481 = (eh_2801796477 & (t_2801796295.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2801796295.data[chckIndx(j_2801796481, 0, (t_2801796295.data).length - 1)].Field0)) break Label6;
                  j_2801796481 = nextTry_1342177315(j_2801796481, (t_2801796295.data).length - 1);
                }
            };
            rawInsert_2801796728(t_2801796295, t_2801796295, "data", n_2801796298[chckIndx(i_2801796396, 0, (n_2801796298).length - 1)].Field1, n_2801796298[chckIndx(i_2801796396, 0, (n_2801796298).length - 1)].Field2, eh_2801796477, j_2801796481);
            }
            
            res_2734686289 = addInt(res_2734686289, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801796978(t_2801796981, key_2801796982, hc_2801796983) {
  var result_2801796984 = 0;

  BeforeRet: {
    if (((t_2801796981.data).length == 0)) {
    result_2801796984 = -1;
    break BeforeRet;
    }
    
    var h_2801797069 = (hc_2801796983 & (t_2801796981.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801796981.data[chckIndx(h_2801797069, 0, (t_2801796981.data).length - 1)].Field0)) break Label2;
          if (((t_2801796981.data[chckIndx(h_2801797069, 0, (t_2801796981.data).length - 1)].Field0 == hc_2801796983) && (t_2801796981.data[chckIndx(h_2801797069, 0, (t_2801796981.data).length - 1)].Field1 == key_2801796982))) {
          result_2801796984 = h_2801797069;
          break BeforeRet;
          }
          
          h_2801797069 = nextTry_1342177315(h_2801797069, (t_2801796981.data).length - 1);
        }
    };
    result_2801796984 = subInt(-1, h_2801797069);
  };

  return result_2801796984;

}

function HEX5BHEX5DHEX3D_2801795416(t_2801795419, key_2801795420, val_2801795421) {
    if (((t_2801795419.data).length == 0)) {
    var correctSizeHEX60gensym3_2801795505 = slotsNeeded_1342177323(32);
    t_2801795419.counter = 0;
    t_2801795419.data = new Array(chckRange(correctSizeHEX60gensym3_2801795505, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_2801795505, 0, 2147483647) ; ++i) { t_2801795419.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2801795510 = [0];
    var index_2801795867 = rawGet_2801795511(t_2801795419, key_2801795420, hc_2801795510, 0);
    if ((0 <= index_2801795867)) {
    t_2801795419.data[chckIndx(index_2801795867, 0, (t_2801795419.data).length - 1)].Field2 = nimCopy(null, val_2801795421, NTI33554449);
    }
    else {
      if (((t_2801795419.data).length == 0)) {
      var correctSizeHEX60gensym8_2801796030 = slotsNeeded_1342177323(32);
      t_2801795419.counter = 0;
      t_2801795419.data = new Array(chckRange(correctSizeHEX60gensym8_2801796030, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_2801796030, 0, 2147483647) ; ++i) { t_2801795419.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2801796035(t_2801795419)) {
      enlarge_2801796292(t_2801795419);
      index_2801795867 = rawGetKnownHC_2801796978(t_2801795419, key_2801795420, hc_2801795510[0]);
      }
      
      index_2801795867 = subInt(-1, index_2801795867);
      rawInsert_2801796728(t_2801795419, t_2801795419, "data", key_2801795420, val_2801795421, hc_2801795510[0], index_2801795867);
      t_2801795419.counter = addInt(t_2801795419.counter, 1);
    }
    

  
}

function initDoublyLinkedList_2801797346() {
  var result_2801797348 = ({head: null, tail: null});

  return result_2801797348;

}

function initTable_2801797352(initialSize_2801797355) {
  var result_2801797356 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_2801797358 = slotsNeeded_1342177323(chckRange(initialSize_2801797355, 0, 2147483647));
    result_2801797356.counter = 0;
    result_2801797356.data = new Array(chckRange(correctSizeHEX60gensym16_2801797358, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_2801797358, 0, 2147483647) ; ++i) { result_2801797356.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2801797356;

}

function correctSize_2818572309(cap_2818572310) {
  var result_2818572311 = 0;

    result_2818572311 = cap_2818572310;

  return result_2818572311;

}

function newLruCache_2801797336(capacity_2801797339, recordRemovedKeys_2801797340) {
  var result_2801797341 = null;

    result_2801797341 = {capacity: capacity_2801797339, list: initDoublyLinkedList_2801797346(), table: initTable_2801797352(correctSize_2818572309(capacity_2801797339)), recordRemovedKeys: recordRemovedKeys_2801797340, removedKeys: ({data: [], counter: 0})};

  return result_2801797341;

}

function newCache_2801797331(capacity_2801797334) {
  var result_2801797335 = null;

    result_2801797335 = newLruCache_2801797336(capacity_2801797334, false);

  return result_2801797335;

}

function initDoublyLinkedList_2801797418() {
  var result_2801797420 = ({head: null, tail: null});

  return result_2801797420;

}

function initTable_2801797424(initialSize_2801797427) {
  var result_2801797428 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_2801797430 = slotsNeeded_1342177323(chckRange(initialSize_2801797427, 0, 2147483647));
    result_2801797428.counter = 0;
    result_2801797428.data = new Array(chckRange(correctSizeHEX60gensym18_2801797430, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_2801797430, 0, 2147483647) ; ++i) { result_2801797428.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2801797428;

}

function newLruCache_2801797408(capacity_2801797411, recordRemovedKeys_2801797412) {
  var result_2801797413 = null;

    result_2801797413 = {capacity: capacity_2801797411, list: initDoublyLinkedList_2801797418(), table: initTable_2801797424(correctSize_2818572309(capacity_2801797411)), recordRemovedKeys: recordRemovedKeys_2801797412, removedKeys: ({data: [], counter: 0})};

  return result_2801797413;

}

function newCache_2801797403(capacity_2801797406) {
  var result_2801797407 = null;

    result_2801797407 = newLruCache_2801797408(capacity_2801797406, false);

  return result_2801797407;

}

function initDoublyLinkedList_2801797486() {
  var result_2801797488 = ({head: null, tail: null});

  return result_2801797488;

}

function initTable_2801797492(initialSize_2801797495) {
  var result_2801797496 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_2801797498 = slotsNeeded_1342177323(chckRange(initialSize_2801797495, 0, 2147483647));
    result_2801797496.counter = 0;
    result_2801797496.data = new Array(chckRange(correctSizeHEX60gensym20_2801797498, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2801797498, 0, 2147483647) ; ++i) { result_2801797496.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_2801797496;

}

function newLruCache_2801797476(capacity_2801797479, recordRemovedKeys_2801797480) {
  var result_2801797481 = null;

    result_2801797481 = {capacity: capacity_2801797479, list: initDoublyLinkedList_2801797486(), table: initTable_2801797492(correctSize_2818572309(capacity_2801797479)), recordRemovedKeys: recordRemovedKeys_2801797480, removedKeys: ({data: [], counter: 0})};

  return result_2801797481;

}

function newCache_2801797471(capacity_2801797474) {
  var result_2801797475 = null;

    result_2801797475 = newLruCache_2801797476(capacity_2801797474, false);

  return result_2801797475;

}

function newDependencyGraph_2801795348() {
  var result_2801795349 = null;

    result_2801795349 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_2801795349.revision = 0;
    HEX5BHEX5DHEX3D_2801795416(result_2801795349.queryNames, -1, []);
    result_2801795349.verified = newCache_2801797331(2000);
    result_2801795349.changed = newCache_2801797331(2000);
    result_2801795349.fingerprints = newCache_2801797403(2000);
    result_2801795349.dependencies = newCache_2801797471(2000);

  return result_2801795349;

}

function HEX21HEX26_1358954499(h_1358954500, val_1358954501) {
  var result_1358954502 = 0;

    var h_1358954503 = (h_1358954500 >>> 0);
    var val_1358954504 = (val_1358954501 >>> 0);
    var res_1358954505 = ((h_1358954503 + val_1358954504) >>> 0);
    res_1358954505 = ((res_1358954505 + (res_1358954505 << 10)) >>> 0);
    res_1358954505 = (res_1358954505 ^ (res_1358954505 >>> 6));
    result_1358954502 = (res_1358954505 | 0);

  return result_1358954502;

}

function HEX21HEX24_1358954514(h_1358954515) {
  var result_1358954516 = 0;

    var h_1358954517 = (h_1358954515 >>> 0);
    var res_1358954522 = ((h_1358954517 + (h_1358954517 << 3)) >>> 0);
    res_1358954522 = (res_1358954522 ^ (res_1358954522 >>> 11));
    res_1358954522 = ((res_1358954522 + (res_1358954522 << 15)) >>> 0);
    result_1358954516 = (res_1358954522 | 0);

  return result_1358954516;

}

function hash_2298478684(x_2298478686) {
  var result_2298478687 = 0;

    result_2298478687 = HEX21HEX26_1358954499(result_2298478687, hash_1358954668(x_2298478686.id));
    result_2298478687 = HEX21HEX24_1358954514(result_2298478687);

  return result_2298478687;

}

function hash_2298478681(id_2298478682) {
  var result_2298478683 = 0;

  BeforeRet: {
    result_2298478683 = hash_2298478684(id_2298478682);
    break BeforeRet;
  };

  return result_2298478683;

}

function hash_2785018995(x_2785018997) {
  var result_2785018998 = 0;

    result_2785018998 = HEX21HEX26_1358954499(result_2785018998, hash_2298478681(x_2785018997["Field0"]));
    result_2785018998 = HEX21HEX26_1358954499(result_2785018998, hash_1358954668(x_2785018997["Field1"]));
    result_2785018998 = HEX21HEX24_1358954514(result_2785018998);

  return result_2785018998;

}

function HEX3DHEX3D_2298478671(x_2298478673, y_2298478674) {
  var result_2298478675 = false;

  BeforeRet: {
    if (!((x_2298478673.id == y_2298478674.id))) {
    result_2298478675 = false;
    break BeforeRet;
    }
    
    result_2298478675 = true;
    break BeforeRet;
  };

  return result_2298478675;

}

function HEX3DHEX3D_2298478667(idA_2298478668, idB_2298478669) {
  var result_2298478670 = false;

  BeforeRet: {
    result_2298478670 = HEX3DHEX3D_2298478671(idA_2298478668, idB_2298478669);
    break BeforeRet;
  };

  return result_2298478670;

}

function HEX3DHEX3D_2785019332(x_2785019334, y_2785019335) {
  var result_2785019336 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2298478667(x_2785019334["Field0"], y_2785019335["Field0"]))) {
    result_2785019336 = false;
    break BeforeRet;
    }
    
    if (!((x_2785019334["Field1"] == y_2785019335["Field1"]))) {
    result_2785019336 = false;
    break BeforeRet;
    }
    
    result_2785019336 = true;
    break BeforeRet;
  };

  return result_2785019336;

}

function rawGet_2785018988(t_2785018991, key_2785018992, hc_2785018993, hc_2785018993_Idx) {
  var result_2785018994 = 0;

  BeforeRet: {
    hc_2785018993[hc_2785018993_Idx] = hash_2785018995(key_2785018992);
    if ((hc_2785018993[hc_2785018993_Idx] == 0)) {
    hc_2785018993[hc_2785018993_Idx] = 314159265;
    }
    
    if (((t_2785018991.data).length == 0)) {
    result_2785018994 = -1;
    break BeforeRet;
    }
    
    var h_2785019091 = (hc_2785018993[hc_2785018993_Idx] & (t_2785018991.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785018991.data[chckIndx(h_2785019091, 0, (t_2785018991.data).length - 1)].Field0)) break Label2;
          if (((t_2785018991.data[chckIndx(h_2785019091, 0, (t_2785018991.data).length - 1)].Field0 == hc_2785018993[hc_2785018993_Idx]) && HEX3DHEX3D_2785019332(t_2785018991.data[chckIndx(h_2785019091, 0, (t_2785018991.data).length - 1)].Field1, key_2785018992))) {
          result_2785018994 = h_2785019091;
          break BeforeRet;
          }
          
          h_2785019091 = nextTry_1342177315(h_2785019091, (t_2785018991.data).length - 1);
        }
    };
    result_2785018994 = subInt(-1, h_2785019091);
  };

  return result_2785018994;

}

function hasKey_2785018981(t_2785018984, key_2785018985) {
  var result_2785018986 = false;

    var hc_2785018987 = [0];
    result_2785018986 = (0 <= rawGet_2785018988(t_2785018984, key_2785018985, hc_2785018987, 0));

  return result_2785018986;

}

function contains_2785018975(t_2785018978, key_2785018979) {
  var result_2785018980 = false;

  BeforeRet: {
    result_2785018980 = hasKey_2785018981(t_2785018978, key_2785018979);
    break BeforeRet;
  };

  return result_2785018980;

}

function contains_2785018881(cache_2785018884, key_2785018885) {
  var result_2785018886 = false;

    result_2785018886 = contains_2785018975(cache_2785018884.table, key_2785018885);

  return result_2785018886;

}

function parseSaturatedNatural_788529558(s_788529559, b_788529560, b_788529560_Idx) {
      var Temporary1;
          var Temporary4;

  var result_788529561 = 0;

    var i_788529562 = 0;
    if (((i_788529562 < (s_788529559).length) && (s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)] == 43))) {
    i_788529562 = addInt(i_788529562, 1);
    }
    
      if (!(i_788529562 < (s_788529559).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)]] != undefined);      }    if (Temporary1) {
    b_788529560[b_788529560_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_788529562 < (s_788529559).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_788529591 = subInt(s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)], 48);
          if ((b_788529560[b_788529560_Idx] <= divInt(subInt(2147483647, c_788529591), 10))) {
          b_788529560[b_788529560_Idx] = addInt(mulInt(b_788529560[b_788529560_Idx], 10), c_788529591);
          }
          else {
            b_788529560[b_788529560_Idx] = 2147483647;
          }
          
          i_788529562 = addInt(i_788529562, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_788529562 < (s_788529559).length) && (s_788529559[chckIndx(i_788529562, 0, (s_788529559).length - 1)] == 95))) break Label6;
                i_788529562 = addInt(i_788529562, 1);
              }
          };
        }
    };
    result_788529561 = i_788529562;
    }
    

  return result_788529561;

}

function parseSaturatedNatural_788529945(s_788529946, b_788529947, b_788529947_Idx, start_788529948) {
  var result_788529949 = 0;

    result_788529949 = parseSaturatedNatural_788529558((s_788529946.slice(start_788529948, (s_788529946).length - 1 + 1)), b_788529947, b_788529947_Idx);

  return result_788529949;

}

function HEX5BHEX5D_872416535(s_872416538, x_872416539) {
  var result_872416540 = [];

    var a_872416542 = x_872416539.a;
    var L_872416544 = addInt(subInt(subInt((s_872416538).length, x_872416539.b), a_872416542), 1);
    result_872416540 = nimCopy(null, mnewString(chckRange(L_872416544, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_872416549 = 0;
      var i_2583691790 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2583691790 < L_872416544)) break Label3;
            i_872416549 = i_2583691790;
            result_872416540[chckIndx(i_872416549, 0, (result_872416540).length - 1)] = s_872416538[chckIndx(addInt(i_872416549, a_872416542), 0, (s_872416538).length - 1)];
            i_2583691790 = addInt(i_2583691790, 1);
          }
      };
    };

  return result_872416540;

}

function HEX2EHEX2E_1056964704(a_1056964707, b_1056964708) {
  var result_1056964711 = ({a: 0, b: 0});

    result_1056964711 = nimCopy(result_1056964711, {a: a_1056964707, b: b_1056964708}, NTI1056964692);

  return result_1056964711;

}

function parseStandardFormatSpecifier_738197562(s_738197563, start_738197564, ignoreUnknownSuffix_738197565) {
      var Temporary1;
      var Temporary2;

  var result_738197566 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_738197566.fill = 32;
    result_738197566.align = 0;
    result_738197566.sign = 45;
    var i_738197568 = start_738197564;
    if (((addInt(i_738197568, 1) < (s_738197563).length) && (ConstSet2[s_738197563[chckIndx(addInt(i_738197568, 1), 0, (s_738197563).length - 1)]] != undefined))) {
    result_738197566.fill = s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)];
    result_738197566.align = s_738197563[chckIndx(addInt(i_738197568, 1), 0, (s_738197563).length - 1)];
    i_738197568 = addInt(i_738197568, 2);
    }
    else {
    if (((i_738197568 < (s_738197563).length) && (ConstSet3[s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)]] != undefined))) {
    result_738197566.align = s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)];
    i_738197568 = addInt(i_738197568, 1);
    }
    }
    if (((i_738197568 < (s_738197563).length) && (ConstSet4[s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)]] != undefined))) {
    result_738197566.sign = s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)];
    i_738197568 = addInt(i_738197568, 1);
    }
    
    if (((i_738197568 < (s_738197563).length) && (s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)] == 35))) {
    result_738197566.alternateForm = true;
    i_738197568 = addInt(i_738197568, 1);
    }
    
      if (!((addInt(i_738197568, 1) < (s_738197563).length) && (s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_738197563[chckIndx(addInt(i_738197568, 1), 0, (s_738197563).length - 1)]] != undefined);      }    if (Temporary1) {
    result_738197566.padWithZero = true;
    i_738197568 = addInt(i_738197568, 1);
    }
    
    var parsedLength_738197610 = parseSaturatedNatural_788529945(s_738197563, result_738197566, "minimumWidth", i_738197568);
    i_738197568 = addInt(i_738197568, parsedLength_738197610);
    if (((i_738197568 < (s_738197563).length) && (s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)] == 46))) {
    i_738197568 = addInt(i_738197568, 1);
    var parsedLengthB_738197621 = parseSaturatedNatural_788529945(s_738197563, result_738197566, "precision", i_738197568);
    i_738197568 = addInt(i_738197568, parsedLengthB_738197621);
    }
    else {
      result_738197566.precision = -1;
    }
    
      if (!(i_738197568 < (s_738197563).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)]] != undefined);      }    if (Temporary2) {
    result_738197566.typ = s_738197563[chckIndx(i_738197568, 0, (s_738197563).length - 1)];
    i_738197568 = addInt(i_738197568, 1);
    }
    
    result_738197566.endPosition = i_738197568;
    if ((!((i_738197568 == (s_738197563).length)) && !(ignoreUnknownSuffix_738197565))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_872416535(s_738197563, HEX2EHEX2E_1056964704(i_738197568, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_738197566;

}

function nucruneLen(s_805306396) {
  var result_805306397 = 0;

    result_805306397 = 0;
    var i_805306398 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_805306398 < (s_805306396).length)) break Label2;
          if ((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] <= 127)) {
          i_805306398 = addInt(i_805306398, 1);
          }
          else {
          if (((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] >>> 5) == 6)) {
          i_805306398 = addInt(i_805306398, 2);
          }
          else {
          if (((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] >>> 4) == 14)) {
          i_805306398 = addInt(i_805306398, 3);
          }
          else {
          if (((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] >>> 3) == 30)) {
          i_805306398 = addInt(i_805306398, 4);
          }
          else {
          if (((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] >>> 2) == 62)) {
          i_805306398 = addInt(i_805306398, 5);
          }
          else {
          if (((s_805306396[chckIndx(i_805306398, 0, (s_805306396).length - 1)] >>> 1) == 126)) {
          i_805306398 = addInt(i_805306398, 6);
          }
          else {
          i_805306398 = addInt(i_805306398, 1);
          }
          }}}}}
          result_805306397 = addInt(result_805306397, 1);
        }
    };

  return result_805306397;

}

function runeLen_805313388(s_805313389) {
  var result_805313390 = 0;

    result_805313390 = nucruneLen((s_805313389.slice(0, (s_805313389).length - 1 + 1)));

  return result_805313390;

}

function runeLenAt_805306462(s_805306463, i_805306464) {
  var result_805306465 = 0;

    if ((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] <= 127)) {
    result_805306465 = 1;
    }
    else {
    if (((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] >>> 5) == 6)) {
    result_805306465 = 2;
    }
    else {
    if (((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] >>> 4) == 14)) {
    result_805306465 = 3;
    }
    else {
    if (((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] >>> 3) == 30)) {
    result_805306465 = 4;
    }
    else {
    if (((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] >>> 2) == 62)) {
    result_805306465 = 5;
    }
    else {
    if (((s_805306463[chckIndx(i_805306464, 0, (s_805306463).length - 1)] >>> 1) == 126)) {
    result_805306465 = 6;
    }
    else {
      result_805306465 = 1;
    }
    }}}}}

  return result_805306465;

}

function runeOffset_805307059(s_805307060, pos_805307061, start_805307062) {
  var result_805307063 = 0;

  BeforeRet: {
    var i_805307064 = 0;
    var o_805307065 = start_805307062;
    Label1: {
        Label2: while (true) {
        if (!(i_805307064 < pos_805307061)) break Label2;
          o_805307065 = addInt(o_805307065, chckRange(runeLenAt_805306462(s_805307060, o_805307065), 0, 2147483647));
          if (((s_805307060).length <= o_805307065)) {
          result_805307063 = -1;
          break BeforeRet;
          }
          
          i_805307064 = addInt(i_805307064, 1);
        }
    };
    result_805307063 = o_805307065;
    break BeforeRet;
  };

  return result_805307063;

}

function runeOffset_805313563(s_805313564, pos_805313565, start_805313566) {
  var result_805313567 = 0;

    result_805313567 = runeOffset_805307059((s_805313564.slice(0, (s_805313564).length - 1 + 1)), pos_805313565, start_805313566);

  return result_805313567;

}

function validateUtf8_805306691(s_805306692) {
  var result_805306693 = 0;

  BeforeRet: {
    var i_805306694 = 0;
    var L_805306698 = (s_805306692).length;
    Label1: {
        Label2: while (true) {
        if (!(i_805306694 < L_805306698)) break Label2;
          if ((s_805306692[chckIndx(i_805306694, 0, (s_805306692).length - 1)] <= 127)) {
          i_805306694 = addInt(i_805306694, 1);
          }
          else {
          if (((s_805306692[chckIndx(i_805306694, 0, (s_805306692).length - 1)] >>> 5) == 6)) {
          if ((s_805306692[chckIndx(i_805306694, 0, (s_805306692).length - 1)] < 194)) {
          result_805306693 = i_805306694;
          break BeforeRet;
          }
          
          if (((addInt(i_805306694, 1) < L_805306698) && ((s_805306692[chckIndx(addInt(i_805306694, 1), 0, (s_805306692).length - 1)] >>> 6) == 2))) {
          i_805306694 = addInt(i_805306694, 2);
          }
          else {
            result_805306693 = i_805306694;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_805306692[chckIndx(i_805306694, 0, (s_805306692).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_805306694, 2) < L_805306698) && ((s_805306692[chckIndx(addInt(i_805306694, 1), 0, (s_805306692).length - 1)] >>> 6) == 2)) && ((s_805306692[chckIndx(addInt(i_805306694, 2), 0, (s_805306692).length - 1)] >>> 6) == 2))) {
          i_805306694 = addInt(i_805306694, 3);
          }
          else {
            result_805306693 = i_805306694;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_805306692[chckIndx(i_805306694, 0, (s_805306692).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_805306694, 3) < L_805306698) && ((s_805306692[chckIndx(addInt(i_805306694, 1), 0, (s_805306692).length - 1)] >>> 6) == 2)) && ((s_805306692[chckIndx(addInt(i_805306694, 2), 0, (s_805306692).length - 1)] >>> 6) == 2)) && ((s_805306692[chckIndx(addInt(i_805306694, 3), 0, (s_805306692).length - 1)] >>> 6) == 2))) {
          i_805306694 = addInt(i_805306694, 4);
          }
          else {
            result_805306693 = i_805306694;
            break BeforeRet;
          }
          
          }
          else {
            result_805306693 = i_805306694;
            break BeforeRet;
          }
          }}}
        }
    };
    result_805306693 = -1;
    break BeforeRet;
  };

  return result_805306693;

}

function validateUtf8_805313560(s_805313561) {
  var result_805313562 = 0;

    result_805313562 = validateUtf8_805306691((s_805313561.slice(0, (s_805313561).length - 1 + 1)));

  return result_805313562;

}

function nsuRepeatChar(c_872416349, count_872416350) {
  var result_872416351 = [];

    result_872416351 = nimCopy(null, mnewString(count_872416350), NTI33554449);
    Label1: {
      var i_872416356 = 0;
      var colontmp__2734686297 = 0;
      colontmp__2734686297 = subInt(count_872416350, 1);
      var res_2734686298 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686298 <= colontmp__2734686297)) break Label3;
            i_872416356 = res_2734686298;
            result_872416351[chckIndx(i_872416356, 0, (result_872416351).length - 1)] = c_872416349;
            res_2734686298 = addInt(res_2734686298, 1);
          }
      };
    };

  return result_872416351;

}

function alignString_738197524(s_738197525, minimumWidth_738197526, align_738197527, fill_738197528) {
      var Temporary1;

  var result_738197529 = [];

    if ((minimumWidth_738197526 == 0)) {
    result_738197529 = nimCopy(null, s_738197525, NTI33554449);
    }
    else {
      if ((validateUtf8_805313560(s_738197525) == -1)) {
      Temporary1 = runeLen_805313388(s_738197525);
      }
      else {
      Temporary1 = (s_738197525).length;
      }
      
      var sRuneLen_738197530 = Temporary1;
      var toFill_738197531 = subInt(minimumWidth_738197526, sRuneLen_738197530);
      if ((toFill_738197531 <= 0)) {
      result_738197529 = nimCopy(null, s_738197525, NTI33554449);
      }
      else {
      if (((align_738197527 == 60) || (align_738197527 == 0))) {
      result_738197529 = nimCopy(null, (s_738197525 || []).concat(nsuRepeatChar(fill_738197528, chckRange(toFill_738197531, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_738197527 == 94)) {
      var half_738197532 = divInt(toFill_738197531, 2);
      result_738197529 = nimCopy(null, (nsuRepeatChar(fill_738197528, chckRange(half_738197532, 0, 2147483647)) || []).concat(s_738197525 || [],nsuRepeatChar(fill_738197528, chckRange(subInt(toFill_738197531, half_738197532), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_738197529 = nimCopy(null, (nsuRepeatChar(fill_738197528, chckRange(toFill_738197531, 0, 2147483647)) || []).concat(s_738197525 || []), NTI33554449);
      }
      }}
    }
    

  return result_738197529;

}

function formatValue_738197675(result_738197676, result_738197676_Idx, value_738197677, specifier_738197678) {
    var Temporary1;

    var spec_738197679 = parseStandardFormatSpecifier_738197562(specifier_738197678, 0, false);
    var value_738197680 = nimCopy(null, value_738197677, NTI33554449);
    switch (spec_738197679.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_738197679.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_738197679.precision == -1))) {
    if ((spec_738197679.precision < runeLen_805313388(value_738197680))) {
    if (value_738197680.length < (Temporary1 = chckRange(runeOffset_805313563(value_738197680, chckRange(spec_738197679.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_738197680.length; i < Temporary1; ++i) value_738197680.push(0); }
         else {value_738197680.length = Temporary1; };
    }
    
    }
    
    result_738197676[result_738197676_Idx].push.apply(result_738197676[result_738197676_Idx], alignString_738197524(value_738197680, spec_738197679.minimumWidth, spec_738197679.align, spec_738197679.fill));;

  
}

function addQuoted_872416641(s_872416643, s_872416643_Idx, x_872416644) {
    addInt_301990108(s_872416643, s_872416643_Idx, x_872416644);

  
}

function HEX24_2298478637(x_2298478639) {
  var result_2298478640 = [[]];

    result_2298478640[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym0_2298478651 = 0;
    if ((0 < countHEX60gensym0_2298478651)) {
    result_2298478640[0].push.apply(result_2298478640[0], [44,32]);;
    }
    
    result_2298478640[0].push.apply(result_2298478640[0], [105,100]);;
    result_2298478640[0].push.apply(result_2298478640[0], [58,32]);;
    countHEX60gensym0_2298478651 += 1;
    addQuoted_872416641(result_2298478640, 0, x_2298478639.id);
    result_2298478640[0].push.apply(result_2298478640[0], [41]);;

  return result_2298478640[0];

}

function HEX24_2298478634(id_2298478635) {
  var result_2298478636 = [];

  BeforeRet: {
    result_2298478636 = nimCopy(null, HEX24_2298478637(id_2298478635), NTI33554449);
    break BeforeRet;
  };

  return result_2298478636;

}

function formatValue_2801795292(result_2801795294, result_2801795294_Idx, value_2801795295, specifier_2801795296) {
    formatValue_738197675(result_2801795294, result_2801795294_Idx, HEX24_2298478634(value_2801795295), specifier_2801795296);

  
}

function mkDigit_738197509(v_738197510, typ_738197511) {
      var Temporary1;

  var result_738197512 = [];

    if (!((v_738197510 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_738197510 < 10)) {
    result_738197512 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_738197510), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_738197511 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_738197512 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_738197510), 10), 0, 255)), NTI33554449);
    }
    

  return result_738197512;

}

function formatInt_2348810768(n_2348810770, radix_2348810771, spec_2348810772) {
    var Temporary1;

  var result_2348810773 = [];

    var n_2348810776 = n_2348810770;
    var negative_2348810777 = (n_2348810776 < 0);
    if (negative_2348810777) {
    Temporary1 = ((~(n_2348810776) + 1) );
    }
    else {
    Temporary1 = n_2348810776;
    }
    
    var v_2348810778 = Temporary1;
    var xx_2348810779 = [];
    if (spec_2348810772.alternateForm) {
    switch (spec_2348810772.typ) {
    case 88:
      xx_2348810779 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2348810779 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2348810779 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2348810779 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2348810778 == 0)) {
    result_2348810773 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2348810773 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2348810778)) break Label3;
            var d_2348810780 = (v_2348810778 % radix_2348810771);
            v_2348810778 = Math.trunc(((v_2348810778 / radix_2348810771) ));
            result_2348810773.push.apply(result_2348810773, mkDigit_738197509(chckRange(d_2348810780, -2147483648, 2147483647), spec_2348810772.typ));;
          }
      };
      Label4: {
        var idx_2348810785 = 0;
        var colontmp__2734686302 = 0;
        colontmp__2734686302 = divInt((result_2348810773).length, 2);
        var i_2734686303 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2734686303 < colontmp__2734686302)) break Label6;
              idx_2348810785 = i_2734686303;
              var Temporary7 = result_2348810773[chckIndx(idx_2348810785, 0, (result_2348810773).length - 1)]; result_2348810773[chckIndx(idx_2348810785, 0, (result_2348810773).length - 1)] = result_2348810773[chckIndx(subInt(subInt((result_2348810773).length, idx_2348810785), 1), 0, (result_2348810773).length - 1)]; result_2348810773[chckIndx(subInt(subInt((result_2348810773).length, idx_2348810785), 1), 0, (result_2348810773).length - 1)] = Temporary7;              i_2734686303 = addInt(i_2734686303, 1);
            }
        };
      };
    }
    
    if (spec_2348810772.padWithZero) {
    var sign_2348810790 = (negative_2348810777 || !((spec_2348810772.sign == 45)));
    var toFill_2348810794 = subInt(subInt(subInt(spec_2348810772.minimumWidth, (result_2348810773).length), (xx_2348810779).length), (sign_2348810790 ? 1 : 0));
    if ((0 < toFill_2348810794)) {
    result_2348810773 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2348810794, 0, 2147483647)) || []).concat(result_2348810773 || []), NTI33554449);
    }
    
    }
    
    if (negative_2348810777) {
    result_2348810773 = nimCopy(null, ([45] || []).concat(xx_2348810779 || [],result_2348810773 || []), NTI33554449);
    }
    else {
    if (!((spec_2348810772.sign == 45))) {
    result_2348810773 = nimCopy(null, [spec_2348810772.sign].concat(xx_2348810779 || [],result_2348810773 || []), NTI33554449);
    }
    else {
      result_2348810773 = nimCopy(null, (xx_2348810779 || []).concat(result_2348810773 || []), NTI33554449);
    }
    }
    if ((spec_2348810772.align == 60)) {
    Label8: {
      var i_2348810799 = 0;
      var colontmp__2734686306 = 0;
      colontmp__2734686306 = (result_2348810773).length;
      var i_2734686307 = colontmp__2734686306;
      Label9: {
          Label10: while (true) {
          if (!(i_2734686307 < spec_2348810772.minimumWidth)) break Label10;
            i_2348810799 = i_2734686307;
            addChar(result_2348810773, spec_2348810772.fill);;
            i_2734686307 = addInt(i_2734686307, 1);
          }
      };
    };
    }
    else {
      var toFill_2348810800 = subInt(spec_2348810772.minimumWidth, (result_2348810773).length);
      if ((spec_2348810772.align == 94)) {
      var half_2348810801 = divInt(toFill_2348810800, 2);
      result_2348810773 = nimCopy(null, (nsuRepeatChar(spec_2348810772.fill, chckRange(half_2348810801, 0, 2147483647)) || []).concat(result_2348810773 || [],nsuRepeatChar(spec_2348810772.fill, chckRange(subInt(toFill_2348810800, half_2348810801), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2348810800)) {
        result_2348810773 = nimCopy(null, (nsuRepeatChar(spec_2348810772.fill, chckRange(toFill_2348810800, 0, 2147483647)) || []).concat(result_2348810773 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2348810773;

}

function formatValue_2348810760(result_2348810762, result_2348810762_Idx, value_2348810763, specifier_2348810764) {
  BeforeRet: {
    if (((specifier_2348810764).length == 0)) {
    result_2348810762[result_2348810762_Idx].push.apply(result_2348810762[result_2348810762_Idx], HEX24_369098760(value_2348810763));;
    break BeforeRet;
    }
    
    var spec_2348810765 = parseStandardFormatSpecifier_738197562(specifier_2348810764, 0, false);
    var radix_2348810766 = 10;
    switch (spec_2348810765.typ) {
    case 120:
    case 88:
      radix_2348810766 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2348810766 = 2;
      break;
    case 111:
      radix_2348810766 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2348810765.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2348810762[result_2348810762_Idx].push.apply(result_2348810762[result_2348810762_Idx], formatInt_2348810768(value_2348810763, radix_2348810766, spec_2348810765));;
  };

  
}

function HEX24_2801795284(item_2801795285) {
  var result_2801795286 = [];

  BeforeRet: {
    var fmtRes_2801795291 = [mnewString(0)];
    fmtRes_2801795291[0].push.apply(fmtRes_2801795291[0], [40]);;
    formatValue_2801795292(fmtRes_2801795291, 0, item_2801795285.Field0, []);
    fmtRes_2801795291[0].push.apply(fmtRes_2801795291[0], [44,32]);;
    formatValue_2348810760(fmtRes_2801795291, 0, item_2801795285.Field1, []);
    fmtRes_2801795291[0].push.apply(fmtRes_2801795291[0], [41]);;
    result_2801795286 = nimCopy(null, fmtRes_2801795291[0], NTI33554449);
    break BeforeRet;
  };

  return result_2801795286;

}

function raiseKeyError_2785019628(key_2785019630) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2801795284(key_2785019630) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785019534(t_2785019537, key_2785019538) {
  var result_2785019539 = null;
  var result_2785019539_Idx = 0;

    var hcHEX60gensym22_2785019540 = [0];
    var indexHEX60gensym22_2785019547 = rawGet_2785018988(t_2785019537, key_2785019538, hcHEX60gensym22_2785019540, 0);
    if ((0 <= indexHEX60gensym22_2785019547)) {
    result_2785019539 = t_2785019537.data[chckIndx(indexHEX60gensym22_2785019547, 0, (t_2785019537.data).length - 1)]; result_2785019539_Idx = "Field2";
    }
    else {
    raiseKeyError_2785019628(key_2785019538);
    }
    

  return [result_2785019539, result_2785019539_Idx];

}

function remove_2785019655(L_2785019657, n_2785019658) {
    if ((n_2785019658 == L_2785019657.tail)) {
    L_2785019657.tail = n_2785019658.prev;
    }
    
    if ((n_2785019658 == L_2785019657.head)) {
    L_2785019657.head = n_2785019658.next;
    }
    
    if (!((n_2785019658.next == null))) {
    n_2785019658.next.prev = n_2785019658.prev;
    }
    
    if (!((n_2785019658.prev == null))) {
    n_2785019658.prev.next = n_2785019658.next;
    }
    

  
}

function prepend_2785019959(L_2785019961, n_2785019962) {
    n_2785019962.prev = null;
    n_2785019962.next = L_2785019961.head;
    if (!((L_2785019961.head == null))) {
    if (!((L_2785019961.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785019961.head.prev = n_2785019962;
    }
    
    L_2785019961.head = n_2785019962;
    if ((L_2785019961.tail == null)) {
    L_2785019961.tail = n_2785019962;
    }
    

  
}

function HEX5BHEX5D_2785019448(cache_2785019451, key_2785019452) {
    var Temporary1;

  var result_2785019453 = null;

    var node_2785019641 = (Temporary1 = HEX5BHEX5D_2785019534(cache_2785019451.table, key_2785019452), Temporary1)[0][Temporary1[1]];
    result_2785019453 = node_2785019641.value.val;
    remove_2785019655(cache_2785019451.list, node_2785019641);
    prepend_2785019959(cache_2785019451.list, node_2785019641);

  return result_2785019453;

}

function nsuRepeatStr(s_872416358, n_872416359) {
  var result_872416360 = [];

    result_872416360 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_872416365 = 0;
      var colontmp__2734686337 = 0;
      colontmp__2734686337 = n_872416359;
      var res_2734686338 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686338 <= colontmp__2734686337)) break Label3;
            i_872416365 = res_2734686338;
            result_872416360.push.apply(result_872416360, s_872416358);;
            res_2734686338 = addInt(res_2734686338, 1);
          }
      };
    };

  return result_872416360;

}

function repeat2_2801795087(s_2801795088, n_2801795089) {
  var result_2801795090 = [];

    result_2801795090 = nimCopy(null, nsuRepeatStr(s_2801795088, n_2801795089), NTI33554449);

  return result_2801795090;

}

function symbolName_2768242650(a_2768242652) {
  var result_2768242653 = [];

    result_2768242653 = nimCopy(null, names_2768242660[chckIndx(subInt(a_2768242652, 0), 0, (names_2768242660).length - 1)], NTI33554449);

  return result_2768242653;

}

function len_2768240728(node_2768240729) {
  var result_2768240730 = 0;

  BeforeRet: {
    result_2768240730 = (node_2768240729.children).length;
    break BeforeRet;
  };

  return result_2768240730;

}

function collectionToString_2768242748(x_2768242750, prefix_2768242751, separator_2768242752, suffix_2768242753) {
  var result_2768242754 = [[]];

    result_2768242754[0] = nimCopy(null, prefix_2768242751, NTI33554449);
    var firstElement_2768242755 = true;
    Label1: {
      var value_2768242759 = 0;
      var i_2734686342 = 0;
      var L_2734686343 = (x_2768242750).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686342 < L_2734686343)) break Label3;
            value_2768242759 = x_2768242750[i_2734686342];
            if (firstElement_2768242755) {
            firstElement_2768242755 = false;
            }
            else {
            result_2768242754[0].push.apply(result_2768242754[0], separator_2768242752);;
            }
            
            addQuoted_872416641(result_2768242754, 0, value_2768242759);
            i_2734686342 += 1;
            if (!(((x_2768242750).length == L_2734686343))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2768242754[0].push.apply(result_2768242754[0], suffix_2768242753);;

  return result_2768242754[0];

}

function HEX24_2768242744(x_2768242746) {
  var result_2768242747 = [];

    result_2768242747 = nimCopy(null, collectionToString_2768242748(x_2768242746, [64,91], [44,32], [93]), NTI33554449);

  return result_2768242747;

}

function find_2768240755(a_2768240758, item_2768240759) {
  var result_2768240760 = 0;

  BeforeRet: {
    result_2768240760 = 0;
    Label1: {
      var i_2768240782 = null;
      var i_2734686347 = 0;
      var L_2734686348 = (a_2768240758).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686347 < L_2734686348)) break Label3;
            i_2768240782 = a_2768240758[chckIndx(i_2734686347, 0, (a_2768240758).length - 1)];
            if ((i_2768240782 == item_2768240759)) {
            break BeforeRet;
            }
            
            result_2768240760 = addInt(result_2768240760, 1);
            i_2734686347 = addInt(i_2734686347, 1);
            if (!(((a_2768240758).length == L_2734686348))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2768240760 = -1;
  };

  return result_2768240760;

}

function index_2768240748(node_2768240749) {
  var result_2768240750 = 0;

  BeforeRet: {
    if ((node_2768240749.parent == null)) {
    result_2768240750 = -1;
    break BeforeRet;
    }
    
    result_2768240750 = find_2768240755(node_2768240749.parent.children, node_2768240749);
    break BeforeRet;
  };

  return result_2768240750;

}

function reverse_2768242617(a_2768242619, first_2768242620, last_2768242621) {
    var x_2768242622 = first_2768242620;
    var y_2768242623 = last_2768242621;
    Label1: {
        Label2: while (true) {
        if (!(x_2768242622 < y_2768242623)) break Label2;
          var Temporary3 = a_2768242619[chckIndx(x_2768242622, 0, (a_2768242619).length - 1)]; a_2768242619[chckIndx(x_2768242622, 0, (a_2768242619).length - 1)] = a_2768242619[chckIndx(y_2768242623, 0, (a_2768242619).length - 1)]; a_2768242619[chckIndx(y_2768242623, 0, (a_2768242619).length - 1)] = Temporary3;          y_2768242623 = subInt(y_2768242623, 1);
          x_2768242622 = addInt(x_2768242622, 1);
        }
    };

  
}

function reverse_2768242611(a_2768242613) {
    reverse_2768242617(a_2768242613, 0, chckRange(nimMax(0, (a_2768242613).length - 1), 0, 2147483647));

  
}

function path_2768242595(node_2768242596) {
  var result_2768242597 = [];

    result_2768242597 = nimCopy(null, [], NTI2768241729);
    var node_2768242602 = node_2768242596;
    Label1: {
        Label2: while (true) {
        if (!!((node_2768242602.parent == null))) break Label2;
          result_2768242597.push(index_2768240748(node_2768242602));;
          node_2768242602 = node_2768242602.parent;
        }
    };
    reverse_2768242611(result_2768242597);

  return result_2768242597;

}

function HEX24_2768242647(node_2768242648) {
  var result_2768242649 = [];

    result_2768242649 = nimCopy(null, (symbolName_2768242650(node_2768242648.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2298478667(node_2768242648.id, idNone_2298478706()))) {
    result_2768242649.push.apply(result_2768242649, (HEX24_2298478634(node_2768242648.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2298478667(node_2768242648.reff, idNone_2298478706()))) {
    result_2768242649.push.apply(result_2768242649, ([114,101,102,102,58,32] || []).concat(HEX24_2298478634(node_2768242648.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2768242648.text).length)) {
    result_2768242649.push.apply(result_2768242649, ([39] || []).concat(node_2768242648.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2768240728(node_2768242648))) {
    result_2768242649.push.apply(result_2768242649, (HEX24_369098760(len_2768240728(node_2768242648)) || []).concat([44,32] || []));;
    }
    
    result_2768242649.push.apply(result_2768242649, HEX24_2768242744(path_2768242595(node_2768242648)));;
    result_2768242649.push.apply(result_2768242649, [41]);;

  return result_2768242649;

}

function getTypeKey_2785101941(ctxHEX60gensym101_2785101942, itemIdHEX60gensym101_2785101943) {
  var result_2785101944 = {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2734686351 = nimCopy(null, itemIdHEX60gensym101_2785101943, NTI2801795097);
    var colontmp__2734686352 = 0;
    result_2785101944 = nimCopy(result_2785101944, {Field0: nimCopy(null, colontmp__2734686351, NTI2801795097), Field1: colontmp__2734686352}, NTI2801795100);
    break BeforeRet;
  };

  return result_2785101944;

}

function newId_2298478623() {
  var result_2298478624 = ({id: 0});

  BeforeRet: {
    result_2298478624 = nimCopy(result_2298478624, genOid_2298478600(), NTI2298478595);
    break BeforeRet;
  };

  return result_2298478624;

}

function getItem_2785079817(selfHEX60gensym83_2785079818) {
  var result_2785079819 = {Field0: ({id: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2298478667(selfHEX60gensym83_2785079818.id, null_2298478708)) {
    selfHEX60gensym83_2785079818.id = nimCopy(selfHEX60gensym83_2785079818.id, newId_2298478623(), NTI2298478595);
    }
    
    if (!(!(HEX3DHEX3D_2298478667(selfHEX60gensym83_2785079818.id, null_2298478708)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,51,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2734686353 = nimCopy(null, selfHEX60gensym83_2785079818.id, NTI2298478595);
    var colontmp__2734686354 = 0;
    result_2785079819 = nimCopy(result_2785079819, {Field0: nimCopy(null, colontmp__2734686353, NTI2298478595), Field1: colontmp__2734686354}, NTI2801795097);
    break BeforeRet;
  };

  return result_2785079819;

}

function hash_2801795302(value_2801795303) {
  var result_2801795304 = 0;

    result_2801795304 = (hash_2298478681(value_2801795303.Field0) ^ hash_1358954668(value_2801795303.Field1));

  return result_2801795304;

}

function hash_2801797764(x_2801797766) {
  var result_2801797767 = 0;

    result_2801797767 = HEX21HEX26_1358954499(result_2801797767, hash_2801795302(x_2801797766["Field0"]));
    result_2801797767 = HEX21HEX26_1358954499(result_2801797767, hash_1358954668(x_2801797766["Field1"]));
    result_2801797767 = HEX21HEX24_1358954514(result_2801797767);

  return result_2801797767;

}

function HEX3DHEX3D_2801795308(a_2801795309, b_2801795310) {
  var result_2801795311 = false;

    result_2801795311 = (HEX3DHEX3D_2298478667(a_2801795309.Field0, b_2801795310.Field0) && (a_2801795309.Field1 == b_2801795310.Field1));

  return result_2801795311;

}

function HEX3DHEX3D_2801798101(x_2801798103, y_2801798104) {
  var result_2801798105 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2801795308(x_2801798103["Field0"], y_2801798104["Field0"]))) {
    result_2801798105 = false;
    break BeforeRet;
    }
    
    if (!((x_2801798103["Field1"] == y_2801798104["Field1"]))) {
    result_2801798105 = false;
    break BeforeRet;
    }
    
    result_2801798105 = true;
    break BeforeRet;
  };

  return result_2801798105;

}

function rawGet_2785131998(t_2785132001, key_2785132002, hc_2785132003, hc_2785132003_Idx) {
  var result_2785132004 = 0;

  BeforeRet: {
    hc_2785132003[hc_2785132003_Idx] = hash_2801797764(key_2785132002);
    if ((hc_2785132003[hc_2785132003_Idx] == 0)) {
    hc_2785132003[hc_2785132003_Idx] = 314159265;
    }
    
    if (((t_2785132001.data).length == 0)) {
    result_2785132004 = -1;
    break BeforeRet;
    }
    
    var h_2785132093 = (hc_2785132003[hc_2785132003_Idx] & (t_2785132001.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785132001.data[chckIndx(h_2785132093, 0, (t_2785132001.data).length - 1)].Field0)) break Label2;
          if (((t_2785132001.data[chckIndx(h_2785132093, 0, (t_2785132001.data).length - 1)].Field0 == hc_2785132003[hc_2785132003_Idx]) && HEX3DHEX3D_2801798101(t_2785132001.data[chckIndx(h_2785132093, 0, (t_2785132001.data).length - 1)].Field1, key_2785132002))) {
          result_2785132004 = h_2785132093;
          break BeforeRet;
          }
          
          h_2785132093 = nextTry_1342177315(h_2785132093, (t_2785132001.data).length - 1);
        }
    };
    result_2785132004 = subInt(-1, h_2785132093);
  };

  return result_2785132004;

}

function hasKey_2785131991(t_2785131994, key_2785131995) {
  var result_2785131996 = false;

    var hc_2785131997 = [0];
    result_2785131996 = (0 <= rawGet_2785131998(t_2785131994, key_2785131995, hc_2785131997, 0));

  return result_2785131996;

}

function contains_2785131985(t_2785131988, key_2785131989) {
  var result_2785131990 = false;

  BeforeRet: {
    result_2785131990 = hasKey_2785131991(t_2785131988, key_2785131989);
    break BeforeRet;
  };

  return result_2785131990;

}

function addQuoted_2801805946(s_2801805948, s_2801805948_Idx, x_2801805949) {
    s_2801805948[s_2801805948_Idx].push.apply(s_2801805948[s_2801805948_Idx], HEX24_2801795284(x_2801805949));;

  
}

function HEX24_2801805920(x_2801805922) {
  var result_2801805923 = [[]];

    result_2801805923[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_2801805934 = 0;
    if ((0 < countHEX60gensym66_2801805934)) {
    result_2801805923[0].push.apply(result_2801805923[0], [44,32]);;
    }
    
    result_2801805923[0].push.apply(result_2801805923[0], [105,116,101,109]);;
    result_2801805923[0].push.apply(result_2801805923[0], [58,32]);;
    countHEX60gensym66_2801805934 += 1;
    addQuoted_2801805946(result_2801805923, 0, x_2801805922["Field0"]);
    if ((0 < countHEX60gensym66_2801805934)) {
    result_2801805923[0].push.apply(result_2801805923[0], [44,32]);;
    }
    
    result_2801805923[0].push.apply(result_2801805923[0], [117,112,100,97,116,101]);;
    result_2801805923[0].push.apply(result_2801805923[0], [58,32]);;
    countHEX60gensym66_2801805934 += 1;
    addQuoted_872416641(result_2801805923, 0, x_2801805922["Field1"]);
    result_2801805923[0].push.apply(result_2801805923[0], [41]);;

  return result_2801805923[0];

}

function raiseKeyError_2801805873(key_2801805875) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2801805920(key_2801805875) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785132430(t_2785132433, key_2785132434) {
  var result_2785132435 = null;
  var result_2785132435_Idx = 0;

    var hcHEX60gensym22_2785132436 = [0];
    var indexHEX60gensym22_2785132443 = rawGet_2785131998(t_2785132433, key_2785132434, hcHEX60gensym22_2785132436, 0);
    if ((0 <= indexHEX60gensym22_2785132443)) {
    result_2785132435 = t_2785132433.data[chckIndx(indexHEX60gensym22_2785132443, 0, (t_2785132433.data).length - 1)]; result_2785132435_Idx = "Field2";
    }
    else {
    raiseKeyError_2801805873(key_2785132434);
    }
    

  return [result_2785132435, result_2785132435_Idx];

}

function rawGet_2785133153(t_2785133156, key_2785133157, hc_2785133158, hc_2785133158_Idx) {
  var result_2785133159 = 0;

  BeforeRet: {
    hc_2785133158[hc_2785133158_Idx] = hash_2801797764(key_2785133157);
    if ((hc_2785133158[hc_2785133158_Idx] == 0)) {
    hc_2785133158[hc_2785133158_Idx] = 314159265;
    }
    
    if (((t_2785133156.data).length == 0)) {
    result_2785133159 = -1;
    break BeforeRet;
    }
    
    var h_2785133248 = (hc_2785133158[hc_2785133158_Idx] & (t_2785133156.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785133156.data[chckIndx(h_2785133248, 0, (t_2785133156.data).length - 1)].Field0)) break Label2;
          if (((t_2785133156.data[chckIndx(h_2785133248, 0, (t_2785133156.data).length - 1)].Field0 == hc_2785133158[hc_2785133158_Idx]) && HEX3DHEX3D_2801798101(t_2785133156.data[chckIndx(h_2785133248, 0, (t_2785133156.data).length - 1)].Field1, key_2785133157))) {
          result_2785133159 = h_2785133248;
          break BeforeRet;
          }
          
          h_2785133248 = nextTry_1342177315(h_2785133248, (t_2785133156.data).length - 1);
        }
    };
    result_2785133159 = subInt(-1, h_2785133248);
  };

  return result_2785133159;

}

function isEmpty_1342177309(hcode_1342177310) {
  var result_1342177311 = false;

    result_1342177311 = (hcode_1342177310 == 0);

  return result_1342177311;

}

function del_2785133147(t_2785133150, key_2785133151) {
    var hc_2785133152 = [0];
    var i_2785133514 = rawGet_2785133153(t_2785133150, key_2785133151, hc_2785133152, 0);
    var mskHEX60gensym36_2785133518 = (t_2785133150.data).length - 1;
    if ((0 <= i_2785133514)) {
    t_2785133150.counter = subInt(t_2785133150.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785133525 = i_2785133514;
            var rHEX60gensym36_2785133526 = jHEX60gensym36_2785133525;
            t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field0 = 0;
            t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field1 = nimCopy(t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field2 = nimCopy(null, [], NTI2785017864);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785133514 = (addInt(i_2785133514, 1) & mskHEX60gensym36_2785133518);
                  if (isEmpty_1342177309(t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785133526 = (t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)].Field0 & mskHEX60gensym36_2785133518);
                  if (!(((((rHEX60gensym36_2785133526 <= i_2785133514) && (jHEX60gensym36_2785133525 < rHEX60gensym36_2785133526)) || ((jHEX60gensym36_2785133525 < rHEX60gensym36_2785133526) && (i_2785133514 < jHEX60gensym36_2785133525))) || ((i_2785133514 < jHEX60gensym36_2785133525) && (rHEX60gensym36_2785133526 <= i_2785133514))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785133150.data[chckIndx(jHEX60gensym36_2785133525, 0, (t_2785133150.data).length - 1)] = nimCopy(t_2785133150.data[chckIndx(jHEX60gensym36_2785133525, 0, (t_2785133150.data).length - 1)], t_2785133150.data[chckIndx(i_2785133514, 0, (t_2785133150.data).length - 1)], NTI2785017876);
          }
      };
    };
    }
    

  
}

function rawGet_2785132646(t_2785132649, key_2785132650, hc_2785132651, hc_2785132651_Idx) {
  var result_2785132652 = 0;

  BeforeRet: {
    hc_2785132651[hc_2785132651_Idx] = hash_2298478681(key_2785132650);
    if ((hc_2785132651[hc_2785132651_Idx] == 0)) {
    hc_2785132651[hc_2785132651_Idx] = 314159265;
    }
    
    if (((t_2785132649.data).length == 0)) {
    result_2785132652 = -1;
    break BeforeRet;
    }
    
    var h_2785132738 = (hc_2785132651[hc_2785132651_Idx] & (t_2785132649.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785132649.data[chckIndx(h_2785132738, 0, (t_2785132649.data).length - 1)].Field0)) break Label2;
          if (((t_2785132649.data[chckIndx(h_2785132738, 0, (t_2785132649.data).length - 1)].Field0 == hc_2785132651[hc_2785132651_Idx]) && HEX3DHEX3D_2298478667(t_2785132649.data[chckIndx(h_2785132738, 0, (t_2785132649.data).length - 1)].Field1, key_2785132650))) {
          result_2785132652 = h_2785132738;
          break BeforeRet;
          }
          
          h_2785132738 = nextTry_1342177315(h_2785132738, (t_2785132649.data).length - 1);
        }
    };
    result_2785132652 = subInt(-1, h_2785132738);
  };

  return result_2785132652;

}

function raiseKeyError_2768242456(key_2768242458) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2298478634(key_2768242458) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785132639(t_2785132642, key_2785132643) {
  var result_2785132644 = null;

    var hcHEX60gensym22_2785132645 = [0];
    var indexHEX60gensym22_2785132991 = rawGet_2785132646(t_2785132642, key_2785132643, hcHEX60gensym22_2785132645, 0);
    if ((0 <= indexHEX60gensym22_2785132991)) {
    result_2785132644 = t_2785132642.data[chckIndx(indexHEX60gensym22_2785132991, 0, (t_2785132642.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2768242456(key_2785132643);
    }
    

  return result_2785132644;

}

function voidType_2868904318() {
  var result_2868904319 = null;

    result_2868904319 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_2868904319;

}

function integerOutOfRangeError_788529477() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_788529479(s_788529480, b_788529481, b_788529481_Idx) {
      var Temporary1;
          var Temporary4;

  var result_788529482 = 0;

    var sign_788529483 = -1;
    var i_788529484 = 0;
    if ((i_788529484 < (s_788529480).length)) {
    if ((s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 43)) {
    i_788529484 += 1;
    }
    else {
    if ((s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 45)) {
    i_788529484 += 1;
    sign_788529483 = 1;
    }
    }
    }
    
      if (!(i_788529484 < (s_788529480).length)) Temporary1 = false; else {        Temporary1 = (ConstSet9[s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)]] != undefined);      }    if (Temporary1) {
    b_788529481[b_788529481_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_788529484 < (s_788529480).length)) Temporary4 = false; else {            Temporary4 = (ConstSet10[s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_788529518 = (s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_788529518) / 10) <= b_788529481[b_788529481_Idx])) {
          b_788529481[b_788529481_Idx] = ((b_788529481[b_788529481_Idx] * 10) - c_788529518);
          }
          else {
          integerOutOfRangeError_788529477();
          }
          
          i_788529484 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_788529484 < (s_788529480).length) && (s_788529480[chckIndx(i_788529484, 0, (s_788529480).length - 1)] == 95))) break Label6;
                i_788529484 += 1;
              }
          };
        }
    };
    if (((sign_788529483 == -1) && (b_788529481[b_788529481_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_788529477();
    }
    else {
      b_788529481[b_788529481_Idx] = (b_788529481[b_788529481_Idx] * sign_788529483);
      result_788529482 = i_788529484;
    }
    
    }
    

  return result_788529482;

}

function npuParseBiggestInt(s_788529541, number_788529542, number_788529542_Idx) {
  var result_788529543 = 0;

    var res_788529544 = [0];
    result_788529543 = rawParseInt_788529479(s_788529541, res_788529544, 0);
    if (!((result_788529543 == 0))) {
    number_788529542[number_788529542_Idx] = res_788529544[0];
    }
    

  return result_788529543;

}

function npuParseInt(s_788529546, number_788529547, number_788529547_Idx) {
  var result_788529548 = 0;

    var res_788529549 = [0];
    result_788529548 = npuParseBiggestInt(s_788529546, res_788529549, 0);
    if (((res_788529549[0] < -2147483648) || (2147483647 < res_788529549[0]))) {
    integerOutOfRangeError_788529477();
    }
    
    if (!((result_788529548 == 0))) {
    number_788529547[number_788529547_Idx] = chckRange(res_788529549[0], -2147483648, 2147483647);
    }
    

  return result_788529548;

}

function parseInt_788529940(s_788529941, number_788529942, number_788529942_Idx, start_788529943) {
  var result_788529944 = 0;

    result_788529944 = npuParseInt((s_788529941.slice(start_788529943, (s_788529941).length - 1 + 1)), number_788529942, number_788529942_Idx);

  return result_788529944;

}

function nsuParseInt(s_872416085) {
  var result_872416086 = [0];

    result_872416086[0] = 0;
    var L_872416087 = parseInt_788529940(s_872416085, result_872416086, 0, 0);
    if ((!((L_872416087 == (s_872416085).length)) || (L_872416087 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_872416085 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_872416086[0];

}

function intType_2868904320() {
  var result_2868904321 = null;

    result_2868904321 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_2868904321;

}

function errorType_2868904282() {
  var result_2868904283 = null;

    result_2868904283 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_2868904283;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function stringType_2868904322() {
  var result_2868904323 = null;

    result_2868904323 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_2868904323;

}

function HEX5BHEX5D_2768240724(node_2768240725, index_2768240726) {
  var result_2768240727 = null;

  BeforeRet: {
    result_2768240727 = node_2768240725.children[chckIndx(index_2768240726, 0, (node_2768240725.children).length - 1)];
    break BeforeRet;
  };

  return result_2768240727;

}

function recordDependency_2785079604(ctxHEX60gensym80_2785079605, itemHEX60gensym80_2785079606, updateHEX60gensym80_2785079607) {
    if ((0 < (ctxHEX60gensym80_2785079605.dependencyStack).length)) {
    ctxHEX60gensym80_2785079605.dependencyStack[chckIndx((ctxHEX60gensym80_2785079605.dependencyStack).length - 1, 0, (ctxHEX60gensym80_2785079605.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym80_2785079606, NTI2801795097), Field1: updateHEX60gensym80_2785079607});;
    }
    

  
}

function getTicks_2248146947() {
  var result_2248146948 = 0;

    result_2248146948 = 0;

  return result_2248146948;

}

function startTimer_2248146975() {
  var result_2248146976 = ({start: 0});

    result_2248146976 = nimCopy(result_2248146976, {start: getTicks_2248146947()}, NTI2248146964);

  return result_2248146976;

}

function rawGet_2801797757(t_2801797760, key_2801797761, hc_2801797762, hc_2801797762_Idx) {
  var result_2801797763 = 0;

  BeforeRet: {
    hc_2801797762[hc_2801797762_Idx] = hash_2801797764(key_2801797761);
    if ((hc_2801797762[hc_2801797762_Idx] == 0)) {
    hc_2801797762[hc_2801797762_Idx] = 314159265;
    }
    
    if (((t_2801797760.data).length == 0)) {
    result_2801797763 = -1;
    break BeforeRet;
    }
    
    var h_2801797860 = (hc_2801797762[hc_2801797762_Idx] & (t_2801797760.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801797760.data[chckIndx(h_2801797860, 0, (t_2801797760.data).length - 1)].Field0)) break Label2;
          if (((t_2801797760.data[chckIndx(h_2801797860, 0, (t_2801797760.data).length - 1)].Field0 == hc_2801797762[hc_2801797762_Idx]) && HEX3DHEX3D_2801798101(t_2801797760.data[chckIndx(h_2801797860, 0, (t_2801797760.data).length - 1)].Field1, key_2801797761))) {
          result_2801797763 = h_2801797860;
          break BeforeRet;
          }
          
          h_2801797860 = nextTry_1342177315(h_2801797860, (t_2801797760.data).length - 1);
        }
    };
    result_2801797763 = subInt(-1, h_2801797860);
  };

  return result_2801797763;

}

function getOrDefault_2801797747(t_2801797750, key_2801797751, default_2801797752) {
    var Temporary1;

  var result_2801797753 = null;

    var hcHEX60gensym22_2801797756 = [0];
    var indexHEX60gensym22_2801798123 = rawGet_2801797757(t_2801797750, key_2801797751, hcHEX60gensym22_2801797756, 0);
    if ((0 <= indexHEX60gensym22_2801798123)) {
    Temporary1 = t_2801797750.data[chckIndx(indexHEX60gensym22_2801798123, 0, (t_2801797750.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2801797752;
    }
    
    result_2801797753 = Temporary1;

  return result_2801797753;

}

function getOrDefault_2801797651(cache_2801797654, key_2801797655, val_2801797656) {
  var result_2801797657 = 0;

    var node_2801798213 = getOrDefault_2801797747(cache_2801797654.table, key_2801797655, null);
    if ((node_2801798213 == null)) {
    result_2801797657 = val_2801797656;
    }
    else {
      result_2801797657 = node_2801798213.value.val;
    }
    

  return result_2801797657;

}

function nodeColor_2801797557(graph_2801797558, key_2801797559, parentVerified_2801797560) {
  var result_2801797561 = 0;

  BeforeRet: {
    if ((key_2801797559.Field1 == -1)) {
    var inputChangedRevision_2801798217 = getOrDefault_2801797651(graph_2801797558.changed, key_2801797559, graph_2801797558.revision);
    if ((parentVerified_2801797560 < inputChangedRevision_2801798217)) {
    result_2801797561 = 1;
    break BeforeRet;
    }
    else {
      result_2801797561 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_2801798313 = getOrDefault_2801797651(graph_2801797558.verified, key_2801797559, 0);
    if (!((verified_2801798313 == graph_2801797558.revision))) {
    result_2801797561 = 0;
    break BeforeRet;
    }
    
    var changed_2801798409 = getOrDefault_2801797651(graph_2801797558.changed, key_2801797559, graph_2801797558.revision);
    if ((changed_2801798409 == graph_2801797558.revision)) {
    result_2801797561 = 1;
    break BeforeRet;
    }
    
    result_2801797561 = 2;
    break BeforeRet;
  };

  return result_2801797561;

}

function hash_2768242995(node_2768242996) {
  var result_2768242997 = 0;

    result_2768242997 = node_2768242996;

  return result_2768242997;

}

function rawGet_2785020324(t_2785020327, key_2785020328, hc_2785020329, hc_2785020329_Idx) {
  var result_2785020330 = 0;

  BeforeRet: {
    hc_2785020329[hc_2785020329_Idx] = hash_2768242995(key_2785020328);
    if ((hc_2785020329[hc_2785020329_Idx] == 0)) {
    hc_2785020329[hc_2785020329_Idx] = 314159265;
    }
    
    if (((t_2785020327.data).length == 0)) {
    result_2785020330 = -1;
    break BeforeRet;
    }
    
    var h_2785020416 = (hc_2785020329[hc_2785020329_Idx] & (t_2785020327.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785020327.data[chckIndx(h_2785020416, 0, (t_2785020327.data).length - 1)].Field0)) break Label2;
          if (((t_2785020327.data[chckIndx(h_2785020416, 0, (t_2785020327.data).length - 1)].Field0 == hc_2785020329[hc_2785020329_Idx]) && (t_2785020327.data[chckIndx(h_2785020416, 0, (t_2785020327.data).length - 1)].Field1 == key_2785020328))) {
          result_2785020330 = h_2785020416;
          break BeforeRet;
          }
          
          h_2785020416 = nextTry_1342177315(h_2785020416, (t_2785020327.data).length - 1);
        }
    };
    result_2785020330 = subInt(-1, h_2785020416);
  };

  return result_2785020330;

}

function hasKey_2785102129(t_2785102132, key_2785102133) {
  var result_2785102134 = false;

    var hc_2785102135 = [0];
    result_2785102134 = (0 <= rawGet_2785020324(t_2785102132, key_2785102133, hc_2785102135, 0));

  return result_2785102134;

}

function contains_2785102123(t_2785102126, key_2785102127) {
  var result_2785102128 = false;

  BeforeRet: {
    result_2785102128 = hasKey_2785102129(t_2785102126, key_2785102127);
    break BeforeRet;
  };

  return result_2785102128;

}

function contains_2785102029(cache_2785102032, key_2785102033) {
  var result_2785102034 = false;

    result_2785102034 = contains_2785102123(cache_2785102032.table, key_2785102033);

  return result_2785102034;

}

function raiseKeyError_1325405137(key_1325405139) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1325405139) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785099466(t_2785099469, key_2785099470) {
  var result_2785099471 = null;
  var result_2785099471_Idx = 0;

    var hcHEX60gensym22_2785099472 = [0];
    var indexHEX60gensym22_2785099479 = rawGet_2801795511(t_2785099469, key_2785099470, hcHEX60gensym22_2785099472, 0);
    if ((0 <= indexHEX60gensym22_2785099479)) {
    result_2785099471 = t_2785099469.data[chckIndx(indexHEX60gensym22_2785099479, 0, (t_2785099469.data).length - 1)]; result_2785099471_Idx = "Field2";
    }
    else {
    raiseKeyError_1325405137(key_2785099470);
    }
    

  return [result_2785099471, result_2785099471_Idx];

}

function isFilled_1862271015(hcode_1862271016) {
  var result_1862271017 = false;

    result_1862271017 = !((hcode_1862271016 == 0));

  return result_1862271017;

}

function nextTry_1862271018(h_1862271019, maxHash_1862271020) {
  var result_1862271021 = 0;

    result_1862271021 = (addInt(h_1862271019, 1) & maxHash_1862271020);

  return result_1862271021;

}

function rawGet_2801801206(t_2801801209, key_2801801210, hc_2801801211, hc_2801801211_Idx) {
  var result_2801801212 = 0;

  BeforeRet: {
    hc_2801801211[hc_2801801211_Idx] = hash_2801797764(key_2801801210);
    if ((hc_2801801211[hc_2801801211_Idx] == 0)) {
    hc_2801801211[hc_2801801211_Idx] = 314159265;
    }
    
    if (((t_2801801209.data).length == 0)) {
    result_2801801212 = -1;
    break BeforeRet;
    }
    
    var h_2801801301 = (hc_2801801211[hc_2801801211_Idx] & (t_2801801209.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2801801209.data[chckIndx(h_2801801301, 0, (t_2801801209.data).length - 1)].Field0)) break Label2;
          if (((t_2801801209.data[chckIndx(h_2801801301, 0, (t_2801801209.data).length - 1)].Field0 == hc_2801801211[hc_2801801211_Idx]) && HEX3DHEX3D_2801798101(t_2801801209.data[chckIndx(h_2801801301, 0, (t_2801801209.data).length - 1)].Field1, key_2801801210))) {
          result_2801801212 = h_2801801301;
          break BeforeRet;
          }
          
          h_2801801301 = nextTry_1862271018(h_2801801301, (t_2801801209.data).length - 1);
        }
    };
    result_2801801212 = subInt(-1, h_2801801301);
  };

  return result_2801801212;

}

function contains_2785099639(s_2785099641, key_2785099642) {
  var result_2785099643 = false;

    var hc_2785099644 = [0];
    var index_2785099658 = rawGet_2801801206(s_2785099641, key_2785099642, hc_2785099644, 0);
    result_2785099643 = (0 <= index_2785099658);

  return result_2785099643;

}

function slotsNeeded_1862271026(count_1862271027) {
  var result_1862271028 = 0;

    result_1862271028 = nextPowerOfTwo_889192653(addInt(divInt(mulInt(count_1862271027, 3), 2), 4));

  return result_1862271028;

}

function mustRehash_2801802472(t_2801802474) {
  var result_2801802475 = false;

    if (!((t_2801802474.counter < (t_2801802474.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801802475 = ((mulInt((t_2801802474.data).length, 2) < mulInt(t_2801802474.counter, 3)) || (subInt((t_2801802474.data).length, t_2801802474.counter) < 4));

  return result_2801802475;

}

function rawGetKnownHC_2801803078(t_2801803081, key_2801803082, hc_2801803083) {
  var result_2801803084 = 0;

  BeforeRet: {
    if (((t_2801803081.data).length == 0)) {
    result_2801803084 = -1;
    break BeforeRet;
    }
    
    var h_2801803169 = (hc_2801803083 & (t_2801803081.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2801803081.data[chckIndx(h_2801803169, 0, (t_2801803081.data).length - 1)].Field0)) break Label2;
          if (((t_2801803081.data[chckIndx(h_2801803169, 0, (t_2801803081.data).length - 1)].Field0 == hc_2801803083) && HEX3DHEX3D_2801798101(t_2801803081.data[chckIndx(h_2801803169, 0, (t_2801803081.data).length - 1)].Field1, key_2801803082))) {
          result_2801803084 = h_2801803169;
          break BeforeRet;
          }
          
          h_2801803169 = nextTry_1862271018(h_2801803169, (t_2801803081.data).length - 1);
        }
    };
    result_2801803084 = subInt(-1, h_2801803169);
  };

  return result_2801803084;

}

function rawInsert_2801803582(s_2801803584, data_2801803585, data_2801803585_Idx, key_2801803586, hc_2801803587, h_2801803588) {
    if (((data_2801803585[data_2801803585_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_2801803671 = slotsNeeded_1862271026(64);
    s_2801803584.counter = 0;
    s_2801803584.data = new Array(chckRange(correctSizeHEX60gensym56_2801803671, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2801803671, 0, 2147483647) ; ++i) { s_2801803584.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_2801803585[data_2801803585_Idx][chckIndx(h_2801803588, 0, (data_2801803585[data_2801803585_Idx]).length - 1)].Field1 = nimCopy(data_2801803585[data_2801803585_Idx][chckIndx(h_2801803588, 0, (data_2801803585[data_2801803585_Idx]).length - 1)].Field1, key_2801803586, NTI2801795100);
    data_2801803585[data_2801803585_Idx][chckIndx(h_2801803588, 0, (data_2801803585[data_2801803585_Idx]).length - 1)].Field0 = hc_2801803587;

  
}

function enlarge_2801802735(s_2801802737) {
    var n_2801802739 = [];
    n_2801802739 = new Array(chckRange(mulInt((s_2801802737.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2801802737.data).length, 2), 0, 2147483647) ; ++i) { n_2801802739[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_2801802737.data; s_2801802737.data = n_2801802739; n_2801802739 = Temporary1;    Label2: {
      var i_2801802837 = 0;
      var colontmp__2734686371 = 0;
      colontmp__2734686371 = (n_2801802739).length - 1;
      var res_2734686372 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686372 <= colontmp__2734686371)) break Label4;
            i_2801802837 = res_2734686372;
            if (isFilled_1862271015(n_2801802739[chckIndx(i_2801802837, 0, (n_2801802739).length - 1)].Field0)) {
            var j_2801803417 = subInt(-1, rawGetKnownHC_2801803078(s_2801802737, n_2801802739[chckIndx(i_2801802837, 0, (n_2801802739).length - 1)].Field1, n_2801802739[chckIndx(i_2801802837, 0, (n_2801802739).length - 1)].Field0));
            rawInsert_2801803582(s_2801802737, s_2801802737, "data", n_2801802739[chckIndx(i_2801802837, 0, (n_2801802739).length - 1)].Field1, n_2801802739[chckIndx(i_2801802837, 0, (n_2801802739).length - 1)].Field0, j_2801803417);
            }
            
            res_2734686372 = addInt(res_2734686372, 1);
          }
      };
    };

  
}

function incl_2801802356(s_2801802358, key_2801802359) {
    if (((s_2801802358.data).length == 0)) {
    var correctSizeHEX60gensym49_2801802442 = slotsNeeded_1862271026(64);
    s_2801802358.counter = 0;
    s_2801802358.data = new Array(chckRange(correctSizeHEX60gensym49_2801802442, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_2801802442, 0, 2147483647) ; ++i) { s_2801802358.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_2801802457 = [0];
    var index_2801802471 = rawGet_2801801206(s_2801802358, key_2801802359, hc_2801802457, 0);
    if ((index_2801802471 < 0)) {
    if (mustRehash_2801802472(s_2801802358)) {
    enlarge_2801802735(s_2801802358);
    index_2801802471 = rawGetKnownHC_2801803078(s_2801802358, key_2801802359, hc_2801802457[0]);
    }
    
    rawInsert_2801803582(s_2801802358, s_2801802358, "data", key_2801802359, hc_2801802457[0], subInt(-1, index_2801802471));
    s_2801802358.counter = addInt(s_2801802358.counter, 1);
    }
    

  
}

function getOrDefault_2785099870(t_2785099873, key_2785099874) {
  var result_2785099875 = [];

    var hcHEX60gensym531_2785099878 = [0];
    var indexHEX60gensym531_2785099885 = rawGet_2801795511(t_2785099873, key_2785099874, hcHEX60gensym531_2785099878, 0);
    if ((0 <= indexHEX60gensym531_2785099885)) {
    result_2785099875 = nimCopy(null, t_2785099873.data[chckIndx(indexHEX60gensym531_2785099885, 0, (t_2785099873.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_2785099875;

}

function rawGet_2785075464(t_2785075467, key_2785075468, hc_2785075469, hc_2785075469_Idx) {
  var result_2785075470 = 0;

  BeforeRet: {
    hc_2785075469[hc_2785075469_Idx] = hash_1358954668(key_2785075468);
    if ((hc_2785075469[hc_2785075469_Idx] == 0)) {
    hc_2785075469[hc_2785075469_Idx] = 314159265;
    }
    
    if (((t_2785075467.data).length == 0)) {
    result_2785075470 = -1;
    break BeforeRet;
    }
    
    var h_2785075558 = (hc_2785075469[hc_2785075469_Idx] & (t_2785075467.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785075467.data[chckIndx(h_2785075558, 0, (t_2785075467.data).length - 1)].Field0)) break Label2;
          if (((t_2785075467.data[chckIndx(h_2785075558, 0, (t_2785075467.data).length - 1)].Field0 == hc_2785075469[hc_2785075469_Idx]) && (t_2785075467.data[chckIndx(h_2785075558, 0, (t_2785075467.data).length - 1)].Field1 == key_2785075468))) {
          result_2785075470 = h_2785075558;
          break BeforeRet;
          }
          
          h_2785075558 = nextTry_1342177315(h_2785075558, (t_2785075467.data).length - 1);
        }
    };
    result_2785075470 = subInt(-1, h_2785075558);
  };

  return result_2785075470;

}

function hasKey_2785100048(t_2785100051, key_2785100052) {
  var result_2785100053 = false;

    var hc_2785100054 = [0];
    result_2785100053 = (0 <= rawGet_2785075464(t_2785100051, key_2785100052, hc_2785100054, 0));

  return result_2785100053;

}

function contains_2785100042(t_2785100045, key_2785100046) {
  var result_2785100047 = false;

  BeforeRet: {
    result_2785100047 = hasKey_2785100048(t_2785100045, key_2785100046);
    break BeforeRet;
  };

  return result_2785100047;

}

function HEX5BHEX5D_2785100141(t_2785100144, key_2785100145) {
  var result_2785100146 = null;
  var result_2785100146_Idx = 0;

    var hcHEX60gensym22_2785100147 = [0];
    var indexHEX60gensym22_2785100154 = rawGet_2785075464(t_2785100144, key_2785100145, hcHEX60gensym22_2785100147, 0);
    if ((0 <= indexHEX60gensym22_2785100154)) {
    result_2785100146 = t_2785100144.data[chckIndx(indexHEX60gensym22_2785100154, 0, (t_2785100144.data).length - 1)]; result_2785100146_Idx = "Field2";
    }
    else {
    raiseKeyError_1325405137(key_2785100145);
    }
    

  return [result_2785100146, result_2785100146_Idx];

}

function newDoublyLinkedNode_2801806668(value_2801806670) {
  var result_2801806671 = null;

    result_2801806671 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_2801806671.value = nimCopy(result_2801806671.value, value_2801806670, NTI2801795124);

  return result_2801806671;

}

function mustRehash_2801807018(t_2801807020) {
  var result_2801807021 = false;

    if (!((t_2801807020.counter < (t_2801807020.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801807021 = ((mulInt((t_2801807020.data).length, 2) < mulInt(t_2801807020.counter, 3)) || (subInt((t_2801807020.data).length, t_2801807020.counter) < 4));

  return result_2801807021;

}

function rawInsert_2801807711(t_2801807715, data_2801807716, data_2801807716_Idx, key_2801807717, val_2801807718, hc_2801807719, h_2801807720) {
    data_2801807716[data_2801807716_Idx][chckIndx(h_2801807720, 0, (data_2801807716[data_2801807716_Idx]).length - 1)].Field1 = nimCopy(data_2801807716[data_2801807716_Idx][chckIndx(h_2801807720, 0, (data_2801807716[data_2801807716_Idx]).length - 1)].Field1, key_2801807717, NTI2801795100);
    data_2801807716[data_2801807716_Idx][chckIndx(h_2801807720, 0, (data_2801807716[data_2801807716_Idx]).length - 1)].Field2 = val_2801807718;
    data_2801807716[data_2801807716_Idx][chckIndx(h_2801807720, 0, (data_2801807716[data_2801807716_Idx]).length - 1)].Field0 = hc_2801807719;

  
}

function enlarge_2801807275(t_2801807278) {
    var n_2801807281 = [];
    n_2801807281 = new Array(chckRange(mulInt((t_2801807278.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801807278.data).length, 2), 0, 2147483647) ; ++i) { n_2801807281[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2801807278.data; t_2801807278.data = n_2801807281; n_2801807281 = Temporary1;    Label2: {
      var i_2801807379 = 0;
      var colontmp__2734686378 = 0;
      colontmp__2734686378 = (n_2801807281).length - 1;
      var res_2734686379 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686379 <= colontmp__2734686378)) break Label4;
            i_2801807379 = res_2734686379;
            var eh_2801807460 = n_2801807281[chckIndx(i_2801807379, 0, (n_2801807281).length - 1)].Field0;
            if (isFilled_1342177312(eh_2801807460)) {
            var j_2801807464 = (eh_2801807460 & (t_2801807278.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2801807278.data[chckIndx(j_2801807464, 0, (t_2801807278.data).length - 1)].Field0)) break Label6;
                  j_2801807464 = nextTry_1342177315(j_2801807464, (t_2801807278.data).length - 1);
                }
            };
            rawInsert_2801807711(t_2801807278, t_2801807278, "data", n_2801807281[chckIndx(i_2801807379, 0, (n_2801807281).length - 1)].Field1, n_2801807281[chckIndx(i_2801807379, 0, (n_2801807281).length - 1)].Field2, eh_2801807460, j_2801807464);
            }
            
            res_2734686379 = addInt(res_2734686379, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801807961(t_2801807964, key_2801807965, hc_2801807966) {
  var result_2801807967 = 0;

  BeforeRet: {
    if (((t_2801807964.data).length == 0)) {
    result_2801807967 = -1;
    break BeforeRet;
    }
    
    var h_2801808052 = (hc_2801807966 & (t_2801807964.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801807964.data[chckIndx(h_2801808052, 0, (t_2801807964.data).length - 1)].Field0)) break Label2;
          if (((t_2801807964.data[chckIndx(h_2801808052, 0, (t_2801807964.data).length - 1)].Field0 == hc_2801807966) && HEX3DHEX3D_2801798101(t_2801807964.data[chckIndx(h_2801808052, 0, (t_2801807964.data).length - 1)].Field1, key_2801807965))) {
          result_2801807967 = h_2801808052;
          break BeforeRet;
          }
          
          h_2801808052 = nextTry_1342177315(h_2801808052, (t_2801807964.data).length - 1);
        }
    };
    result_2801807967 = subInt(-1, h_2801808052);
  };

  return result_2801807967;

}

function HEX5BHEX5DHEX3D_2801806750(t_2801806753, key_2801806754, val_2801806755) {
    if (((t_2801806753.data).length == 0)) {
    var correctSizeHEX60gensym77_2801806838 = slotsNeeded_1342177323(32);
    t_2801806753.counter = 0;
    t_2801806753.data = new Array(chckRange(correctSizeHEX60gensym77_2801806838, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_2801806838, 0, 2147483647) ; ++i) { t_2801806753.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2801806843 = [0];
    var index_2801806850 = rawGet_2801797757(t_2801806753, key_2801806754, hc_2801806843, 0);
    if ((0 <= index_2801806850)) {
    t_2801806753.data[chckIndx(index_2801806850, 0, (t_2801806753.data).length - 1)].Field2 = val_2801806755;
    }
    else {
      if (((t_2801806753.data).length == 0)) {
      var correctSizeHEX60gensym80_2801807013 = slotsNeeded_1342177323(32);
      t_2801806753.counter = 0;
      t_2801806753.data = new Array(chckRange(correctSizeHEX60gensym80_2801807013, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_2801807013, 0, 2147483647) ; ++i) { t_2801806753.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2801807018(t_2801806753)) {
      enlarge_2801807275(t_2801806753);
      index_2801806850 = rawGetKnownHC_2801807961(t_2801806753, key_2801806754, hc_2801806843[0]);
      }
      
      index_2801806850 = subInt(-1, index_2801806850);
      rawInsert_2801807711(t_2801806753, t_2801806753, "data", key_2801806754, val_2801806755, hc_2801806843[0], index_2801806850);
      t_2801806753.counter = addInt(t_2801806753.counter, 1);
    }
    

  
}

function prepend_2801808361(L_2801808363, n_2801808364) {
    n_2801808364.prev = null;
    n_2801808364.next = L_2801808363.head;
    if (!((L_2801808363.head == null))) {
    if (!((L_2801808363.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2801808363.head.prev = n_2801808364;
    }
    
    L_2801808363.head = n_2801808364;
    if ((L_2801808363.tail == null)) {
    L_2801808363.tail = n_2801808364;
    }
    

  
}

function isEmpty_1862271012(hcode_1862271013) {
  var result_1862271014 = false;

    result_1862271014 = (hcode_1862271013 == 0);

  return result_1862271014;

}

function exclImpl_2801801200(s_2801801202, key_2801801203) {
          var Temporary5;

  var result_2801801204 = false;

  BeforeRet: {
    var hc_2801801205 = [0];
    var i_2801801567 = rawGet_2801801206(s_2801801202, key_2801801203, hc_2801801205, 0);
    var msk_2801801571 = (s_2801801202.data).length - 1;
    result_2801801204 = true;
    if ((0 <= i_2801801567)) {
    result_2801801204 = false;
    s_2801801202.counter = subInt(s_2801801202.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2801801577 = i_2801801567;
          var r_2801801578 = j_2801801577;
          s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)].Field0 = 0;
          s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)].Field1 = nimCopy(s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2801801567 = (addInt(i_2801801567, 1) & msk_2801801571);
                if (isEmpty_1862271012(s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2801801578 = (s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)].Field0 & msk_2801801571);
                if (!(((((r_2801801578 <= i_2801801567) && (j_2801801577 < r_2801801578)) || ((j_2801801577 < r_2801801578) && (i_2801801567 < j_2801801577))) || ((i_2801801567 < j_2801801577) && (r_2801801578 <= i_2801801567))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)];
          s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)] = genericReset(s_2801801202.data[chckIndx(i_2801801567, 0, (s_2801801202.data).length - 1)], NTI2801795180);
          s_2801801202.data[chckIndx(j_2801801577, 0, (s_2801801202.data).length - 1)] = nimCopy(s_2801801202.data[chckIndx(j_2801801577, 0, (s_2801801202.data).length - 1)], Temporary5, NTI2801795180);
        }
    };
    }
    
  };

  return result_2801801204;

}

function excl_2801801185(s_2801801187, key_2801801188) {
    var _ = exclImpl_2801801200(s_2801801187, key_2801801188);

  
}

function len_2801808754(t_2801808757) {
  var result_2801808758 = 0;

    result_2801808758 = t_2801808757.counter;

  return result_2801808758;

}

function len_2801808671(cache_2801808674) {
  var result_2801808675 = 0;

    result_2801808675 = len_2801808754(cache_2801808674.table);

  return result_2801808675;

}

function del_2801808846(t_2801808849, key_2801808850) {
    var hc_2801808851 = [0];
    var i_2801808858 = rawGet_2801797757(t_2801808849, key_2801808850, hc_2801808851, 0);
    var mskHEX60gensym36_2801808862 = (t_2801808849.data).length - 1;
    if ((0 <= i_2801808858)) {
    t_2801808849.counter = subInt(t_2801808849.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2801808869 = i_2801808858;
            var rHEX60gensym36_2801808870 = jHEX60gensym36_2801808869;
            t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field0 = 0;
            t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field1 = nimCopy(t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2801808858 = (addInt(i_2801808858, 1) & mskHEX60gensym36_2801808862);
                  if (isEmpty_1342177309(t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2801808870 = (t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)].Field0 & mskHEX60gensym36_2801808862);
                  if (!(((((rHEX60gensym36_2801808870 <= i_2801808858) && (jHEX60gensym36_2801808869 < rHEX60gensym36_2801808870)) || ((jHEX60gensym36_2801808869 < rHEX60gensym36_2801808870) && (i_2801808858 < jHEX60gensym36_2801808869))) || ((i_2801808858 < jHEX60gensym36_2801808869) && (rHEX60gensym36_2801808870 <= i_2801808858))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2801808849.data[chckIndx(jHEX60gensym36_2801808869, 0, (t_2801808849.data).length - 1)] = nimCopy(t_2801808849.data[chckIndx(jHEX60gensym36_2801808869, 0, (t_2801808849.data).length - 1)], t_2801808849.data[chckIndx(i_2801808858, 0, (t_2801808849.data).length - 1)], NTI2801795160);
          }
      };
    };
    }
    

  
}

function remove_2801809605(L_2801809607, n_2801809608) {
    if ((n_2801809608 == L_2801809607.tail)) {
    L_2801809607.tail = n_2801809608.prev;
    }
    
    if ((n_2801809608 == L_2801809607.head)) {
    L_2801809607.head = n_2801809608.next;
    }
    
    if (!((n_2801809608.next == null))) {
    n_2801809608.next.prev = n_2801809608.prev;
    }
    
    if (!((n_2801809608.prev == null))) {
    n_2801809608.prev.next = n_2801809608.next;
    }
    

  
}

function resize_2801808589(cache_2801808592) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2801808592.capacity < len_2801808671(cache_2801808592))) break Label2;
          var t_2801808759 = cache_2801808592.list.tail;
          if (cache_2801808592.recordRemovedKeys) {
          incl_2801802356(cache_2801808592.removedKeys, t_2801808759.value.key);
          }
          
          del_2801808846(cache_2801808592.table, t_2801808759.value.key);
          remove_2801809605(cache_2801808592.list, t_2801808759);
        }
    };

  
}

function addNewNode_2801806660(cache_2801806663, key_2801806664, val_2801806665) {
    var node_2801806686 = newDoublyLinkedNode_2801806668({key: nimCopy(null, key_2801806664, NTI2801795100), val: val_2801806665});
    HEX5BHEX5DHEX3D_2801806750(cache_2801806663.table, key_2801806664, node_2801806686);
    prepend_2801808361(cache_2801806663.list, node_2801806686);
    if (cache_2801806663.recordRemovedKeys) {
    excl_2801801185(cache_2801806663.removedKeys, key_2801806664);
    }
    
    resize_2801808589(cache_2801806663);

  
}

function HEX5BHEX5DHEX3D_2801806532(cache_2801806535, key_2801806536, val_2801806537) {
    var node_2801806633 = getOrDefault_2801797747(cache_2801806535.table, key_2801806536, null);
    if ((node_2801806633 == null)) {
    addNewNode_2801806660(cache_2801806535, key_2801806536, val_2801806537);
    }
    else {
      node_2801806633.value.val = val_2801806537;
      remove_2801809605(cache_2801806535.list, node_2801806633);
      prepend_2801808361(cache_2801806535.list, node_2801806633);
    }
    

  
}

function rawGet_2801805261(t_2801805264, key_2801805265, hc_2801805266, hc_2801805266_Idx) {
  var result_2801805267 = 0;

  BeforeRet: {
    hc_2801805266[hc_2801805266_Idx] = hash_2801797764(key_2801805265);
    if ((hc_2801805266[hc_2801805266_Idx] == 0)) {
    hc_2801805266[hc_2801805266_Idx] = 314159265;
    }
    
    if (((t_2801805264.data).length == 0)) {
    result_2801805267 = -1;
    break BeforeRet;
    }
    
    var h_2801805356 = (hc_2801805266[hc_2801805266_Idx] & (t_2801805264.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801805264.data[chckIndx(h_2801805356, 0, (t_2801805264.data).length - 1)].Field0)) break Label2;
          if (((t_2801805264.data[chckIndx(h_2801805356, 0, (t_2801805264.data).length - 1)].Field0 == hc_2801805266[hc_2801805266_Idx]) && HEX3DHEX3D_2801798101(t_2801805264.data[chckIndx(h_2801805356, 0, (t_2801805264.data).length - 1)].Field1, key_2801805265))) {
          result_2801805267 = h_2801805356;
          break BeforeRet;
          }
          
          h_2801805356 = nextTry_1342177315(h_2801805356, (t_2801805264.data).length - 1);
        }
    };
    result_2801805267 = subInt(-1, h_2801805356);
  };

  return result_2801805267;

}

function getOrDefault_2801810209(t_2801810212, key_2801810213, default_2801810214) {
    var Temporary1;

  var result_2801810215 = null;

    var hcHEX60gensym90_2801810218 = [0];
    var indexHEX60gensym90_2801810225 = rawGet_2801805261(t_2801810212, key_2801810213, hcHEX60gensym90_2801810218, 0);
    if ((0 <= indexHEX60gensym90_2801810225)) {
    Temporary1 = t_2801810212.data[chckIndx(indexHEX60gensym90_2801810225, 0, (t_2801810212.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2801810214;
    }
    
    result_2801810215 = Temporary1;

  return result_2801810215;

}

function newDoublyLinkedNode_2801810341(value_2801810343) {
  var result_2801810344 = null;

    result_2801810344 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_2801810344.value = nimCopy(result_2801810344.value, value_2801810343, NTI2801795203);

  return result_2801810344;

}

function mustRehash_2801810691(t_2801810693) {
  var result_2801810694 = false;

    if (!((t_2801810693.counter < (t_2801810693.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801810694 = ((mulInt((t_2801810693.data).length, 2) < mulInt(t_2801810693.counter, 3)) || (subInt((t_2801810693.data).length, t_2801810693.counter) < 4));

  return result_2801810694;

}

function rawInsert_2801811384(t_2801811388, data_2801811389, data_2801811389_Idx, key_2801811390, val_2801811391, hc_2801811392, h_2801811393) {
    data_2801811389[data_2801811389_Idx][chckIndx(h_2801811393, 0, (data_2801811389[data_2801811389_Idx]).length - 1)].Field1 = nimCopy(data_2801811389[data_2801811389_Idx][chckIndx(h_2801811393, 0, (data_2801811389[data_2801811389_Idx]).length - 1)].Field1, key_2801811390, NTI2801795100);
    data_2801811389[data_2801811389_Idx][chckIndx(h_2801811393, 0, (data_2801811389[data_2801811389_Idx]).length - 1)].Field2 = val_2801811391;
    data_2801811389[data_2801811389_Idx][chckIndx(h_2801811393, 0, (data_2801811389[data_2801811389_Idx]).length - 1)].Field0 = hc_2801811392;

  
}

function enlarge_2801810948(t_2801810951) {
    var n_2801810954 = [];
    n_2801810954 = new Array(chckRange(mulInt((t_2801810951.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801810951.data).length, 2), 0, 2147483647) ; ++i) { n_2801810954[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2801810951.data; t_2801810951.data = n_2801810954; n_2801810954 = Temporary1;    Label2: {
      var i_2801811052 = 0;
      var colontmp__2734686390 = 0;
      colontmp__2734686390 = (n_2801810954).length - 1;
      var res_2734686391 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686391 <= colontmp__2734686390)) break Label4;
            i_2801811052 = res_2734686391;
            var eh_2801811133 = n_2801810954[chckIndx(i_2801811052, 0, (n_2801810954).length - 1)].Field0;
            if (isFilled_1342177312(eh_2801811133)) {
            var j_2801811137 = (eh_2801811133 & (t_2801810951.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2801810951.data[chckIndx(j_2801811137, 0, (t_2801810951.data).length - 1)].Field0)) break Label6;
                  j_2801811137 = nextTry_1342177315(j_2801811137, (t_2801810951.data).length - 1);
                }
            };
            rawInsert_2801811384(t_2801810951, t_2801810951, "data", n_2801810954[chckIndx(i_2801811052, 0, (n_2801810954).length - 1)].Field1, n_2801810954[chckIndx(i_2801811052, 0, (n_2801810954).length - 1)].Field2, eh_2801811133, j_2801811137);
            }
            
            res_2734686391 = addInt(res_2734686391, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801811634(t_2801811637, key_2801811638, hc_2801811639) {
  var result_2801811640 = 0;

  BeforeRet: {
    if (((t_2801811637.data).length == 0)) {
    result_2801811640 = -1;
    break BeforeRet;
    }
    
    var h_2801811725 = (hc_2801811639 & (t_2801811637.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801811637.data[chckIndx(h_2801811725, 0, (t_2801811637.data).length - 1)].Field0)) break Label2;
          if (((t_2801811637.data[chckIndx(h_2801811725, 0, (t_2801811637.data).length - 1)].Field0 == hc_2801811639) && HEX3DHEX3D_2801798101(t_2801811637.data[chckIndx(h_2801811725, 0, (t_2801811637.data).length - 1)].Field1, key_2801811638))) {
          result_2801811640 = h_2801811725;
          break BeforeRet;
          }
          
          h_2801811725 = nextTry_1342177315(h_2801811725, (t_2801811637.data).length - 1);
        }
    };
    result_2801811640 = subInt(-1, h_2801811725);
  };

  return result_2801811640;

}

function HEX5BHEX5DHEX3D_2801810423(t_2801810426, key_2801810427, val_2801810428) {
    if (((t_2801810426.data).length == 0)) {
    var correctSizeHEX60gensym93_2801810511 = slotsNeeded_1342177323(32);
    t_2801810426.counter = 0;
    t_2801810426.data = new Array(chckRange(correctSizeHEX60gensym93_2801810511, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_2801810511, 0, 2147483647) ; ++i) { t_2801810426.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2801810516 = [0];
    var index_2801810523 = rawGet_2801805261(t_2801810426, key_2801810427, hc_2801810516, 0);
    if ((0 <= index_2801810523)) {
    t_2801810426.data[chckIndx(index_2801810523, 0, (t_2801810426.data).length - 1)].Field2 = val_2801810428;
    }
    else {
      if (((t_2801810426.data).length == 0)) {
      var correctSizeHEX60gensym96_2801810686 = slotsNeeded_1342177323(32);
      t_2801810426.counter = 0;
      t_2801810426.data = new Array(chckRange(correctSizeHEX60gensym96_2801810686, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_2801810686, 0, 2147483647) ; ++i) { t_2801810426.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2801810691(t_2801810426)) {
      enlarge_2801810948(t_2801810426);
      index_2801810523 = rawGetKnownHC_2801811634(t_2801810426, key_2801810427, hc_2801810516[0]);
      }
      
      index_2801810523 = subInt(-1, index_2801810523);
      rawInsert_2801811384(t_2801810426, t_2801810426, "data", key_2801810427, val_2801810428, hc_2801810516[0], index_2801810523);
      t_2801810426.counter = addInt(t_2801810426.counter, 1);
    }
    

  
}

function prepend_2801806280(L_2801806282, n_2801806283) {
    n_2801806283.prev = null;
    n_2801806283.next = L_2801806282.head;
    if (!((L_2801806282.head == null))) {
    if (!((L_2801806282.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2801806282.head.prev = n_2801806283;
    }
    
    L_2801806282.head = n_2801806283;
    if ((L_2801806282.tail == null)) {
    L_2801806282.tail = n_2801806283;
    }
    

  
}

function len_2801812245(t_2801812248) {
  var result_2801812249 = 0;

    result_2801812249 = t_2801812248.counter;

  return result_2801812249;

}

function len_2801812162(cache_2801812165) {
  var result_2801812166 = 0;

    result_2801812166 = len_2801812245(cache_2801812165.table);

  return result_2801812166;

}

function del_2801812337(t_2801812340, key_2801812341) {
    var hc_2801812342 = [0];
    var i_2801812349 = rawGet_2801805261(t_2801812340, key_2801812341, hc_2801812342, 0);
    var mskHEX60gensym36_2801812353 = (t_2801812340.data).length - 1;
    if ((0 <= i_2801812349)) {
    t_2801812340.counter = subInt(t_2801812340.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2801812360 = i_2801812349;
            var rHEX60gensym36_2801812361 = jHEX60gensym36_2801812360;
            t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field0 = 0;
            t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field1 = nimCopy(t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2801812349 = (addInt(i_2801812349, 1) & mskHEX60gensym36_2801812353);
                  if (isEmpty_1342177309(t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2801812361 = (t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)].Field0 & mskHEX60gensym36_2801812353);
                  if (!(((((rHEX60gensym36_2801812361 <= i_2801812349) && (jHEX60gensym36_2801812360 < rHEX60gensym36_2801812361)) || ((jHEX60gensym36_2801812360 < rHEX60gensym36_2801812361) && (i_2801812349 < jHEX60gensym36_2801812360))) || ((i_2801812349 < jHEX60gensym36_2801812360) && (rHEX60gensym36_2801812361 <= i_2801812349))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2801812340.data[chckIndx(jHEX60gensym36_2801812360, 0, (t_2801812340.data).length - 1)] = nimCopy(t_2801812340.data[chckIndx(jHEX60gensym36_2801812360, 0, (t_2801812340.data).length - 1)], t_2801812340.data[chckIndx(i_2801812349, 0, (t_2801812340.data).length - 1)], NTI2801795239);
          }
      };
    };
    }
    

  
}

function remove_2801805988(L_2801805990, n_2801805991) {
    if ((n_2801805991 == L_2801805990.tail)) {
    L_2801805990.tail = n_2801805991.prev;
    }
    
    if ((n_2801805991 == L_2801805990.head)) {
    L_2801805990.head = n_2801805991.next;
    }
    
    if (!((n_2801805991.next == null))) {
    n_2801805991.next.prev = n_2801805991.prev;
    }
    
    if (!((n_2801805991.prev == null))) {
    n_2801805991.prev.next = n_2801805991.next;
    }
    

  
}

function resize_2801812080(cache_2801812083) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2801812083.capacity < len_2801812162(cache_2801812083))) break Label2;
          var t_2801812250 = cache_2801812083.list.tail;
          if (cache_2801812083.recordRemovedKeys) {
          incl_2801802356(cache_2801812083.removedKeys, t_2801812250.value.key);
          }
          
          del_2801812337(cache_2801812083.table, t_2801812250.value.key);
          remove_2801805988(cache_2801812083.list, t_2801812250);
        }
    };

  
}

function addNewNode_2801810333(cache_2801810336, key_2801810337, val_2801810338) {
    var node_2801810359 = newDoublyLinkedNode_2801810341({key: nimCopy(null, key_2801810337, NTI2801795100), val: nimCopy(null, val_2801810338, NTI2801795096)});
    HEX5BHEX5DHEX3D_2801810423(cache_2801810336.table, key_2801810337, node_2801810359);
    prepend_2801806280(cache_2801810336.list, node_2801810359);
    if (cache_2801810336.recordRemovedKeys) {
    excl_2801801185(cache_2801810336.removedKeys, key_2801810337);
    }
    
    resize_2801812080(cache_2801810336);

  
}

function HEX5BHEX5DHEX3D_2801810114(cache_2801810117, key_2801810118, val_2801810119) {
    var node_2801810306 = getOrDefault_2801810209(cache_2801810117.table, key_2801810118, null);
    if ((node_2801810306 == null)) {
    addNewNode_2801810333(cache_2801810117, key_2801810118, val_2801810119);
    }
    else {
      node_2801810306.value.val = nimCopy(null, val_2801810119, NTI2801795096);
      remove_2801805988(cache_2801810117.list, node_2801810306);
      prepend_2801806280(cache_2801810117.list, node_2801810306);
    }
    

  
}

function markRed_2801809909(graph_2801809910, key_2801809911, fingerprint_2801809912) {
    HEX5BHEX5DHEX3D_2801806532(graph_2801809910.verified, key_2801809911, graph_2801809910.revision);
    HEX5BHEX5DHEX3D_2801806532(graph_2801809910.changed, key_2801809911, graph_2801809910.revision);
    HEX5BHEX5DHEX3D_2801810114(graph_2801809910.fingerprints, key_2801809911, fingerprint_2801809912);

  
}

function rawGet_2801798622(t_2801798625, key_2801798626, hc_2801798627, hc_2801798627_Idx) {
  var result_2801798628 = 0;

  BeforeRet: {
    hc_2801798627[hc_2801798627_Idx] = hash_2801797764(key_2801798626);
    if ((hc_2801798627[hc_2801798627_Idx] == 0)) {
    hc_2801798627[hc_2801798627_Idx] = 314159265;
    }
    
    if (((t_2801798625.data).length == 0)) {
    result_2801798628 = -1;
    break BeforeRet;
    }
    
    var h_2801798717 = (hc_2801798627[hc_2801798627_Idx] & (t_2801798625.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801798625.data[chckIndx(h_2801798717, 0, (t_2801798625.data).length - 1)].Field0)) break Label2;
          if (((t_2801798625.data[chckIndx(h_2801798717, 0, (t_2801798625.data).length - 1)].Field0 == hc_2801798627[hc_2801798627_Idx]) && HEX3DHEX3D_2801798101(t_2801798625.data[chckIndx(h_2801798717, 0, (t_2801798625.data).length - 1)].Field1, key_2801798626))) {
          result_2801798628 = h_2801798717;
          break BeforeRet;
          }
          
          h_2801798717 = nextTry_1342177315(h_2801798717, (t_2801798625.data).length - 1);
        }
    };
    result_2801798628 = subInt(-1, h_2801798717);
  };

  return result_2801798628;

}

function getOrDefault_2801798612(t_2801798615, key_2801798616, default_2801798617) {
    var Temporary1;

  var result_2801798618 = null;

    var hcHEX60gensym28_2801798621 = [0];
    var indexHEX60gensym28_2801798974 = rawGet_2801798622(t_2801798615, key_2801798616, hcHEX60gensym28_2801798621, 0);
    if ((0 <= indexHEX60gensym28_2801798974)) {
    Temporary1 = t_2801798615.data[chckIndx(indexHEX60gensym28_2801798974, 0, (t_2801798615.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2801798617;
    }
    
    result_2801798618 = Temporary1;

  return result_2801798618;

}

function newDoublyLinkedNode_2801799291(value_2801799293) {
  var result_2801799294 = null;

    result_2801799294 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_2801799294.value = nimCopy(result_2801799294.value, value_2801799293, NTI2801795270);

  return result_2801799294;

}

function mustRehash_2801799641(t_2801799643) {
  var result_2801799644 = false;

    if (!((t_2801799643.counter < (t_2801799643.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801799644 = ((mulInt((t_2801799643.data).length, 2) < mulInt(t_2801799643.counter, 3)) || (subInt((t_2801799643.data).length, t_2801799643.counter) < 4));

  return result_2801799644;

}

function rawInsert_2801800334(t_2801800338, data_2801800339, data_2801800339_Idx, key_2801800340, val_2801800341, hc_2801800342, h_2801800343) {
    data_2801800339[data_2801800339_Idx][chckIndx(h_2801800343, 0, (data_2801800339[data_2801800339_Idx]).length - 1)].Field1 = nimCopy(data_2801800339[data_2801800339_Idx][chckIndx(h_2801800343, 0, (data_2801800339[data_2801800339_Idx]).length - 1)].Field1, key_2801800340, NTI2801795100);
    data_2801800339[data_2801800339_Idx][chckIndx(h_2801800343, 0, (data_2801800339[data_2801800339_Idx]).length - 1)].Field2 = val_2801800341;
    data_2801800339[data_2801800339_Idx][chckIndx(h_2801800343, 0, (data_2801800339[data_2801800339_Idx]).length - 1)].Field0 = hc_2801800342;

  
}

function enlarge_2801799898(t_2801799901) {
    var n_2801799904 = [];
    n_2801799904 = new Array(chckRange(mulInt((t_2801799901.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801799901.data).length, 2), 0, 2147483647) ; ++i) { n_2801799904[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_2801799901.data; t_2801799901.data = n_2801799904; n_2801799904 = Temporary1;    Label2: {
      var i_2801800002 = 0;
      var colontmp__2734686400 = 0;
      colontmp__2734686400 = (n_2801799904).length - 1;
      var res_2734686401 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686401 <= colontmp__2734686400)) break Label4;
            i_2801800002 = res_2734686401;
            var eh_2801800083 = n_2801799904[chckIndx(i_2801800002, 0, (n_2801799904).length - 1)].Field0;
            if (isFilled_1342177312(eh_2801800083)) {
            var j_2801800087 = (eh_2801800083 & (t_2801799901.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2801799901.data[chckIndx(j_2801800087, 0, (t_2801799901.data).length - 1)].Field0)) break Label6;
                  j_2801800087 = nextTry_1342177315(j_2801800087, (t_2801799901.data).length - 1);
                }
            };
            rawInsert_2801800334(t_2801799901, t_2801799901, "data", n_2801799904[chckIndx(i_2801800002, 0, (n_2801799904).length - 1)].Field1, n_2801799904[chckIndx(i_2801800002, 0, (n_2801799904).length - 1)].Field2, eh_2801800083, j_2801800087);
            }
            
            res_2734686401 = addInt(res_2734686401, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801800584(t_2801800587, key_2801800588, hc_2801800589) {
  var result_2801800590 = 0;

  BeforeRet: {
    if (((t_2801800587.data).length == 0)) {
    result_2801800590 = -1;
    break BeforeRet;
    }
    
    var h_2801800675 = (hc_2801800589 & (t_2801800587.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2801800587.data[chckIndx(h_2801800675, 0, (t_2801800587.data).length - 1)].Field0)) break Label2;
          if (((t_2801800587.data[chckIndx(h_2801800675, 0, (t_2801800587.data).length - 1)].Field0 == hc_2801800589) && HEX3DHEX3D_2801798101(t_2801800587.data[chckIndx(h_2801800675, 0, (t_2801800587.data).length - 1)].Field1, key_2801800588))) {
          result_2801800590 = h_2801800675;
          break BeforeRet;
          }
          
          h_2801800675 = nextTry_1342177315(h_2801800675, (t_2801800587.data).length - 1);
        }
    };
    result_2801800590 = subInt(-1, h_2801800675);
  };

  return result_2801800590;

}

function HEX5BHEX5DHEX3D_2801799373(t_2801799376, key_2801799377, val_2801799378) {
    if (((t_2801799376.data).length == 0)) {
    var correctSizeHEX60gensym34_2801799461 = slotsNeeded_1342177323(32);
    t_2801799376.counter = 0;
    t_2801799376.data = new Array(chckRange(correctSizeHEX60gensym34_2801799461, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_2801799461, 0, 2147483647) ; ++i) { t_2801799376.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_2801799466 = [0];
    var index_2801799473 = rawGet_2801798622(t_2801799376, key_2801799377, hc_2801799466, 0);
    if ((0 <= index_2801799473)) {
    t_2801799376.data[chckIndx(index_2801799473, 0, (t_2801799376.data).length - 1)].Field2 = val_2801799378;
    }
    else {
      if (((t_2801799376.data).length == 0)) {
      var correctSizeHEX60gensym37_2801799636 = slotsNeeded_1342177323(32);
      t_2801799376.counter = 0;
      t_2801799376.data = new Array(chckRange(correctSizeHEX60gensym37_2801799636, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2801799636, 0, 2147483647) ; ++i) { t_2801799376.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2801799641(t_2801799376)) {
      enlarge_2801799898(t_2801799376);
      index_2801799473 = rawGetKnownHC_2801800584(t_2801799376, key_2801799377, hc_2801799466[0]);
      }
      
      index_2801799473 = subInt(-1, index_2801799473);
      rawInsert_2801800334(t_2801799376, t_2801799376, "data", key_2801799377, val_2801799378, hc_2801799466[0], index_2801799473);
      t_2801799376.counter = addInt(t_2801799376.counter, 1);
    }
    

  
}

function prepend_2801800984(L_2801800986, n_2801800987) {
    n_2801800987.prev = null;
    n_2801800987.next = L_2801800986.head;
    if (!((L_2801800986.head == null))) {
    if (!((L_2801800986.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2801800986.head.prev = n_2801800987;
    }
    
    L_2801800986.head = n_2801800987;
    if ((L_2801800986.tail == null)) {
    L_2801800986.tail = n_2801800987;
    }
    

  
}

function len_2801802331(t_2801802334) {
  var result_2801802335 = 0;

    result_2801802335 = t_2801802334.counter;

  return result_2801802335;

}

function len_2801802248(cache_2801802251) {
  var result_2801802252 = 0;

    result_2801802252 = len_2801802331(cache_2801802251.table);

  return result_2801802252;

}

function del_2801803938(t_2801803941, key_2801803942) {
    var hc_2801803943 = [0];
    var i_2801803950 = rawGet_2801798622(t_2801803941, key_2801803942, hc_2801803943, 0);
    var mskHEX60gensym36_2801803954 = (t_2801803941.data).length - 1;
    if ((0 <= i_2801803950)) {
    t_2801803941.counter = subInt(t_2801803941.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2801803961 = i_2801803950;
            var rHEX60gensym36_2801803962 = jHEX60gensym36_2801803961;
            t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field0 = 0;
            t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field1 = nimCopy(t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2801803950 = (addInt(i_2801803950, 1) & mskHEX60gensym36_2801803954);
                  if (isEmpty_1342177309(t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2801803962 = (t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)].Field0 & mskHEX60gensym36_2801803954);
                  if (!(((((rHEX60gensym36_2801803962 <= i_2801803950) && (jHEX60gensym36_2801803961 < rHEX60gensym36_2801803962)) || ((jHEX60gensym36_2801803961 < rHEX60gensym36_2801803962) && (i_2801803950 < jHEX60gensym36_2801803961))) || ((i_2801803950 < jHEX60gensym36_2801803961) && (rHEX60gensym36_2801803962 <= i_2801803950))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2801803941.data[chckIndx(jHEX60gensym36_2801803961, 0, (t_2801803941.data).length - 1)] = nimCopy(t_2801803941.data[chckIndx(jHEX60gensym36_2801803961, 0, (t_2801803941.data).length - 1)], t_2801803941.data[chckIndx(i_2801803950, 0, (t_2801803941.data).length - 1)], NTI2801795306);
          }
      };
    };
    }
    

  
}

function remove_2801804697(L_2801804699, n_2801804700) {
    if ((n_2801804700 == L_2801804699.tail)) {
    L_2801804699.tail = n_2801804700.prev;
    }
    
    if ((n_2801804700 == L_2801804699.head)) {
    L_2801804699.head = n_2801804700.next;
    }
    
    if (!((n_2801804700.next == null))) {
    n_2801804700.next.prev = n_2801804700.prev;
    }
    
    if (!((n_2801804700.prev == null))) {
    n_2801804700.prev.next = n_2801804700.next;
    }
    

  
}

function resize_2801802166(cache_2801802169) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2801802169.capacity < len_2801802248(cache_2801802169))) break Label2;
          var t_2801802336 = cache_2801802169.list.tail;
          if (cache_2801802169.recordRemovedKeys) {
          incl_2801802356(cache_2801802169.removedKeys, t_2801802336.value.key);
          }
          
          del_2801803938(cache_2801802169.table, t_2801802336.value.key);
          remove_2801804697(cache_2801802169.list, t_2801802336);
        }
    };

  
}

function addNewNode_2801799283(cache_2801799286, key_2801799287, val_2801799288) {
    var node_2801799309 = newDoublyLinkedNode_2801799291({key: nimCopy(null, key_2801799287, NTI2801795100), val: nimCopy(null, val_2801799288, NTI2801795256)});
    HEX5BHEX5DHEX3D_2801799373(cache_2801799286.table, key_2801799287, node_2801799309);
    prepend_2801800984(cache_2801799286.list, node_2801799309);
    if (cache_2801799286.recordRemovedKeys) {
    excl_2801801185(cache_2801799286.removedKeys, key_2801799287);
    }
    
    resize_2801802166(cache_2801799286);

  
}

function HEX5BHEX5DHEX3D_2801799155(cache_2801799158, key_2801799159, val_2801799160) {
    var node_2801799256 = getOrDefault_2801798612(cache_2801799158.table, key_2801799159, null);
    if ((node_2801799256 == null)) {
    addNewNode_2801799283(cache_2801799158, key_2801799159, val_2801799160);
    }
    else {
      node_2801799256.value.val = nimCopy(null, val_2801799160, NTI2801795256);
      remove_2801804697(cache_2801799158.list, node_2801799256);
      prepend_2801800984(cache_2801799158.list, node_2801799256);
    }
    

  
}

function clearEdges_2801799085(graph_2801799086, key_2801799087) {
    HEX5BHEX5DHEX3D_2801799155(graph_2801799086.dependencies, key_2801799087, []);

  
}

function setDependencies_2801805001(graph_2801805002, key_2801805003, deps_2801805004) {
    HEX5BHEX5DHEX3D_2801799155(graph_2801805002.dependencies, key_2801805003, deps_2801805004);

  
}

function pop_2785100287(s_2785100289, s_2785100289_Idx) {
  var result_2785100290 = [];

    var L_2785100294 = subInt((s_2785100289[s_2785100289_Idx]).length, 1);
    result_2785100290 = nimCopy(null, s_2785100289[s_2785100289_Idx][chckIndx(L_2785100294, 0, (s_2785100289[s_2785100289_Idx]).length - 1)], NTI2785017884);
    if (s_2785100289[s_2785100289_Idx].length < chckRange(L_2785100294, 0, 2147483647)) { for (var i = s_2785100289[s_2785100289_Idx].length ; i < chckRange(L_2785100294, 0, 2147483647) ; ++i) s_2785100289[s_2785100289_Idx].push([]); }
               else { s_2785100289[s_2785100289_Idx].length = chckRange(L_2785100294, 0, 2147483647); };

  return result_2785100290;

}

function pop_2785100318(s_2785100320, s_2785100320_Idx) {
  var result_2785100321 = {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0};

    var L_2785100325 = subInt((s_2785100320[s_2785100320_Idx]).length, 1);
    result_2785100321 = nimCopy(result_2785100321, s_2785100320[s_2785100320_Idx][chckIndx(L_2785100325, 0, (s_2785100320[s_2785100320_Idx]).length - 1)], NTI2801795100);
    if (s_2785100320[s_2785100320_Idx].length < chckRange(L_2785100325, 0, 2147483647)) { for (var i = s_2785100320[s_2785100320_Idx].length ; i < chckRange(L_2785100325, 0, 2147483647) ; ++i) s_2785100320[s_2785100320_Idx].push({Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}); }
               else { s_2785100320[s_2785100320_Idx].length = chckRange(L_2785100325, 0, 2147483647); };

  return result_2785100321;

}

function hasKey_2801805254(t_2801805257, key_2801805258) {
  var result_2801805259 = false;

    var hc_2801805260 = [0];
    result_2801805259 = (0 <= rawGet_2801805261(t_2801805257, key_2801805258, hc_2801805260, 0));

  return result_2801805259;

}

function contains_2801805248(t_2801805251, key_2801805252) {
  var result_2801805253 = false;

  BeforeRet: {
    result_2801805253 = hasKey_2801805254(t_2801805251, key_2801805252);
    break BeforeRet;
  };

  return result_2801805253;

}

function contains_2801805154(cache_2801805157, key_2801805158) {
  var result_2801805159 = false;

    result_2801805159 = contains_2801805248(cache_2801805157.table, key_2801805158);

  return result_2801805159;

}

function HEX5BHEX5D_2801805779(t_2801805782, key_2801805783) {
  var result_2801805784 = null;
  var result_2801805784_Idx = 0;

    var hcHEX60gensym22_2801805785 = [0];
    var indexHEX60gensym22_2801805792 = rawGet_2801805261(t_2801805782, key_2801805783, hcHEX60gensym22_2801805785, 0);
    if ((0 <= indexHEX60gensym22_2801805792)) {
    result_2801805784 = t_2801805782.data[chckIndx(indexHEX60gensym22_2801805792, 0, (t_2801805782.data).length - 1)]; result_2801805784_Idx = "Field2";
    }
    else {
    raiseKeyError_2801805873(key_2801805783);
    }
    

  return [result_2801805784, result_2801805784_Idx];

}

function HEX5BHEX5D_2801805693(cache_2801805696, key_2801805697) {
    var Temporary1;

  var result_2801805698 = [];

    var node_2801805974 = (Temporary1 = HEX5BHEX5D_2801805779(cache_2801805696.table, key_2801805697), Temporary1)[0][Temporary1[1]];
    result_2801805698 = nimCopy(null, node_2801805974.value.val, NTI2801795096);
    remove_2801805988(cache_2801805696.list, node_2801805974);
    prepend_2801806280(cache_2801805696.list, node_2801805974);

  return result_2801805698;

}

function fingerprint_2801805074(graph_2801805075, key_2801805076) {
  var result_2801805077 = [];

  BeforeRet: {
    if (contains_2801805154(graph_2801805075.fingerprints, key_2801805076)) {
    result_2801805077 = nimCopy(null, HEX5BHEX5D_2801805693(graph_2801805075.fingerprints, key_2801805076), NTI2801795096);
    break BeforeRet;
    }
    
  };

  return result_2801805077;

}

function HEX3DHEX3D_2785100331(x_2785100333, y_2785100334) {
  var result_2785100335 = false;

  BeforeRet: {
    var sameObject_2785100342 = false;
    sameObject_2785100342 = x_2785100333 === y_2785100334
    if (sameObject_2785100342) {
    result_2785100335 = true;
    break BeforeRet;
    }
    
    if (!(((x_2785100333).length == (y_2785100334).length))) {
    result_2785100335 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2785100356 = 0;
      var colontmp__2734686408 = 0;
      colontmp__2734686408 = subInt((x_2785100333).length, 1);
      var res_2734686409 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686409 <= colontmp__2734686408)) break Label3;
            i_2785100356 = res_2734686409;
            if (!((x_2785100333[chckIndx(i_2785100356, 0, (x_2785100333).length - 1)] == y_2785100334[chckIndx(i_2785100356, 0, (y_2785100334).length - 1)]))) {
            result_2785100335 = false;
            break BeforeRet;
            }
            
            res_2734686409 = addInt(res_2734686409, 1);
          }
      };
    };
    result_2785100335 = true;
    break BeforeRet;
  };

  return result_2785100335;

}

function markGreen_2801806466(graph_2801806467, key_2801806468) {
    HEX5BHEX5DHEX3D_2801806532(graph_2801806467.verified, key_2801806468, graph_2801806467.revision);

  
}

function force_2785099373(ctxHEX60gensym99_2785099374, keyHEX60gensym99_2785099375) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym99_2785099374.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary1);
    try {
    if (ctxHEX60gensym99_2785099374.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_2785099466(ctxHEX60gensym99_2785099374.depGraph.queryNames, keyHEX60gensym99_2785099375.Field1), Temporary3)[0][Temporary3[1]], HEX24_2801795284(keyHEX60gensym99_2785099375.Field0));
    }
    
    if (contains_2785099639(ctxHEX60gensym99_2785099374.activeQuerySet, keyHEX60gensym99_2785099375)) {
    incl_2801802356(ctxHEX60gensym99_2785099374.recursiveQueries, keyHEX60gensym99_2785099375);
    var itemHEX60gensym99_2785099682 = nimCopy(null, keyHEX60gensym99_2785099375.Field0, NTI2801795097);
    var queryHEX60gensym99_2785099768 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2785099466(ctxHEX60gensym99_2785099374.depGraph.queryNames, keyHEX60gensym99_2785099375.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_2801795284(itemHEX60gensym99_2785099682), [32,40], queryHEX60gensym99_2785099768, [41]);
    Label5: {
      var kHEX60gensym99_2785099776 = 0;
      var colontmp__2734686366 = 0;
      colontmp__2734686366 = (ctxHEX60gensym99_2785099374.activeQueryStack).length - 1;
      var res_2734686367 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2734686367 <= colontmp__2734686366)) break Label7;
            kHEX60gensym99_2785099776 = res_2734686367;
            var iHEX60gensym99_2785099780 = subInt(subInt((ctxHEX60gensym99_2785099374.activeQueryStack).length, kHEX60gensym99_2785099776), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym99_2785099776), [93,32,80,97,114,101,110,116,58,32], HEX24_2801795284(ctxHEX60gensym99_2785099374.activeQueryStack[chckIndx(iHEX60gensym99_2785099780, 0, (ctxHEX60gensym99_2785099374.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2785099870(ctxHEX60gensym99_2785099374.depGraph.queryNames, ctxHEX60gensym99_2785099374.activeQueryStack[chckIndx(iHEX60gensym99_2785099780, 0, (ctxHEX60gensym99_2785099374.activeQueryStack).length - 1)].Field1));
            res_2734686367 = addInt(res_2734686367, 1);
          }
      };
    };
    if (ctxHEX60gensym99_2785099374.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2785100042(ctxHEX60gensym99_2785099374.recoveryFunctions, keyHEX60gensym99_2785099375.Field1)) {
    (Temporary8 = HEX5BHEX5D_2785100141(ctxHEX60gensym99_2785099374.recoveryFunctions, keyHEX60gensym99_2785099375.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym99_2785099375);
    markRed_2801809909(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375, []);
    }
    
    break BeforeRet;
    }
    
    incl_2801802356(ctxHEX60gensym99_2785099374.activeQuerySet, keyHEX60gensym99_2785099375);
    var Temporary9 = nimCopy(null, keyHEX60gensym99_2785099375, NTI2801795100);
    ctxHEX60gensym99_2785099374.activeQueryStack.push(Temporary9);;
    clearEdges_2801799085(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375);
    ctxHEX60gensym99_2785099374.dependencyStack.push([]);;
    recordDependency_2785079604(ctxHEX60gensym99_2785099374, keyHEX60gensym99_2785099375.Field0, -1);
    var fingerprintHEX60gensym99_2785100286 = ctxHEX60gensym99_2785099374.updateFunctions[chckIndx(keyHEX60gensym99_2785099375.Field1, 0, (ctxHEX60gensym99_2785099374.updateFunctions).length - 1)](keyHEX60gensym99_2785099375.Field0);
    setDependencies_2801805001(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375, pop_2785100287(ctxHEX60gensym99_2785099374, "dependencyStack"));
    excl_2801801185(ctxHEX60gensym99_2785099374.activeQuerySet, keyHEX60gensym99_2785099375);
    var _ = pop_2785100318(ctxHEX60gensym99_2785099374, "activeQueryStack");
    var prevFingerprintHEX60gensym99_2785100330 = fingerprint_2801805074(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375);
    if (HEX3DHEX3D_2785100331(fingerprintHEX60gensym99_2785100286, prevFingerprintHEX60gensym99_2785100330)) {
    if (ctxHEX60gensym99_2785099374.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_2801806466(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375);
    }
    else {
      if (ctxHEX60gensym99_2785099374.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_2801809909(ctxHEX60gensym99_2785099374.depGraph, keyHEX60gensym99_2785099375, fingerprintHEX60gensym99_2785100286);
    }
    
    } finally {
    if (ctxHEX60gensym99_2785099374.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary10);
    }
  };

  
}

function addQuoted_2868904389(s_2868904391, s_2868904391_Idx, x_2868904392) {
    s_2868904391[s_2868904391_Idx].push.apply(s_2868904391[s_2868904391_Idx], HEX24_2868904342(x_2868904392));;

  
}

function collectionToString_2868904349(x_2868904351, prefix_2868904352, separator_2868904353, suffix_2868904354) {
  var result_2868904355 = [[]];

    result_2868904355[0] = nimCopy(null, prefix_2868904352, NTI33554449);
    var firstElement_2868904356 = true;
    Label1: {
      var value_2868904379 = null;
      var i_2734686413 = 0;
      var L_2734686414 = (x_2868904351).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686413 < L_2734686414)) break Label3;
            value_2868904379 = x_2868904351[i_2734686413];
            if (firstElement_2868904356) {
            firstElement_2868904356 = false;
            }
            else {
            result_2868904355[0].push.apply(result_2868904355[0], separator_2868904353);;
            }
            
            if ((value_2868904379 == null)) {
            result_2868904355[0].push.apply(result_2868904355[0], [110,105,108]);;
            }
            else {
            addQuoted_2868904389(result_2868904355, 0, value_2868904379);
            }
            
            i_2734686413 += 1;
            if (!(((x_2868904351).length == L_2734686414))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2868904355[0].push.apply(result_2868904355[0], suffix_2868904354);;

  return result_2868904355[0];

}

function HEX24_2868904345(x_2868904347) {
  var result_2868904348 = [];

    result_2868904348 = nimCopy(null, collectionToString_2868904349(x_2868904347, [64,91], [44,32], [93]), NTI33554449);

  return result_2868904348;

}

function formatValue_2868904409(result_2868904411, result_2868904411_Idx, value_2868904412, specifier_2868904413) {
    formatValue_738197675(result_2868904411, result_2868904411_Idx, nimBoolToStr(value_2868904412), specifier_2868904413);

  
}

function HEX24_2868904342(typ_2868904343) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2868904344 = [];

  BeforeRet: {
    switch (typ_2868904343.kind) {
    case 0:
      result_2868904344 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_2868904344 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_2868904344 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_2868904344 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_2868904343;
      if (ConstSet11[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903939)); }
      var Temporary2 = typ_2868904343;
      if (ConstSet12[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903939)); }
      result_2868904344 = nimCopy(null, (HEX24_2868904345(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_2868904342(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_2868904344 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_2868904408 = [mnewString(0)];
      fmtRes_2868904408[0].push.apply(fmtRes_2868904408[0], [97,110,121,40]);;
      var Temporary3 = typ_2868904343;
      if (ConstSet13[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903939)); }
      formatValue_2868904409(fmtRes_2868904408, 0, Temporary3.open, []);
      fmtRes_2868904408[0].push.apply(fmtRes_2868904408[0], [41]);;
      result_2868904344 = nimCopy(null, fmtRes_2868904408[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2868904344;

}

function raiseKeyError_2785102402(key_2785102404) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2768242647(key_2785102404) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785102308(t_2785102311, key_2785102312) {
  var result_2785102313 = null;
  var result_2785102313_Idx = 0;

    var hcHEX60gensym22_2785102314 = [0];
    var indexHEX60gensym22_2785102321 = rawGet_2785020324(t_2785102311, key_2785102312, hcHEX60gensym22_2785102314, 0);
    if ((0 <= indexHEX60gensym22_2785102321)) {
    result_2785102313 = t_2785102311.data[chckIndx(indexHEX60gensym22_2785102321, 0, (t_2785102311.data).length - 1)]; result_2785102313_Idx = "Field2";
    }
    else {
    raiseKeyError_2785102402(key_2785102312);
    }
    

  return [result_2785102313, result_2785102313_Idx];

}

function remove_2785026210(L_2785026212, n_2785026213) {
    if ((n_2785026213 == L_2785026212.tail)) {
    L_2785026212.tail = n_2785026213.prev;
    }
    
    if ((n_2785026213 == L_2785026212.head)) {
    L_2785026212.head = n_2785026213.next;
    }
    
    if (!((n_2785026213.next == null))) {
    n_2785026213.next.prev = n_2785026213.prev;
    }
    
    if (!((n_2785026213.prev == null))) {
    n_2785026213.prev.next = n_2785026213.next;
    }
    

  
}

function prepend_2785022500(L_2785022502, n_2785022503) {
    n_2785022503.prev = null;
    n_2785022503.next = L_2785022502.head;
    if (!((L_2785022502.head == null))) {
    if (!((L_2785022502.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785022502.head.prev = n_2785022503;
    }
    
    L_2785022502.head = n_2785022503;
    if ((L_2785022502.tail == null)) {
    L_2785022502.tail = n_2785022503;
    }
    

  
}

function HEX5BHEX5D_2785102222(cache_2785102225, key_2785102226) {
    var Temporary1;

  var result_2785102227 = null;

    var node_2785102415 = (Temporary1 = HEX5BHEX5D_2785102308(cache_2785102225.table, key_2785102226), Temporary1)[0][Temporary1[1]];
    result_2785102227 = node_2785102415.value.val;
    remove_2785026210(cache_2785102225.list, node_2785102415);
    prepend_2785022500(cache_2785102225.list, node_2785102415);

  return result_2785102227;

}

function addQuoted_2785100580(s_2785100582, s_2785100582_Idx, x_2785100583) {
    s_2785100582[s_2785100582_Idx].push.apply(s_2785100582[s_2785100582_Idx], HEX24_2801805920(x_2785100583));;

  
}

function collectionToString_2785100547(x_2785100549, prefix_2785100550, separator_2785100551, suffix_2785100552) {
  var result_2785100553 = [[]];

    result_2785100553[0] = nimCopy(null, prefix_2785100550, NTI33554449);
    var firstElement_2785100554 = true;
    Label1: {
      var value_2785100576 = {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0};
      var i_2734686429 = 0;
      var L_2734686430 = (x_2785100549).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686429 < L_2734686430)) break Label3;
            value_2785100576 = x_2785100549[i_2734686429];
            if (firstElement_2785100554) {
            firstElement_2785100554 = false;
            }
            else {
            result_2785100553[0].push.apply(result_2785100553[0], separator_2785100551);;
            }
            
            addQuoted_2785100580(result_2785100553, 0, value_2785100576);
            i_2734686429 += 1;
            if (!(((x_2785100549).length == L_2734686430))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2785100553[0].push.apply(result_2785100553[0], suffix_2785100552);;

  return result_2785100553[0];

}

function HEX24_2785100543(x_2785100545) {
  var result_2785100546 = [];

    result_2785100546 = nimCopy(null, collectionToString_2785100547(x_2785100545, [64,91], [44,32], [93]), NTI33554449);

  return result_2785100546;

}

function getOrDefault_2801798516(cache_2801798519, key_2801798520, val_2801798521) {
  var result_2801798522 = [];

    var node_2801799064 = getOrDefault_2801798612(cache_2801798519.table, key_2801798520, null);
    if ((node_2801799064 == null)) {
    result_2801798522 = nimCopy(null, val_2801798521, NTI2801795256);
    }
    else {
      result_2801798522 = nimCopy(null, node_2801799064.value.val, NTI2801795256);
    }
    

  return result_2801798522;

}

function getDependencies_2801798419(graph_2801798420, key_2801798421) {
  var result_2801798422 = [];

    result_2801798422 = nimCopy(null, getOrDefault_2801798516(graph_2801798420.dependencies, key_2801798421, []), NTI2801795256);
    if ((((result_2801798422).length == 0) && !((key_2801798421.Field1 == -1)))) {
    result_2801798422.push({Field0: nimCopy(null, key_2801798421.Field0, NTI2801795097), Field1: -1});;
    }
    

  return result_2801798422;

}

function tryMarkGreen_2785100388(ctxHEX60gensym100_2785100389, keyHEX60gensym100_2785100390, tryForceHEX60gensym100_2785100391) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_2785100392 = 0;

  BeforeRet: {
    if (ctxHEX60gensym100_2785100389.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary1);
    try {
    if (ctxHEX60gensym100_2785100389.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, keyHEX60gensym100_2785100390.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_2801795284(keyHEX60gensym100_2785100390.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_2785100543(getDependencies_2801798419(ctxHEX60gensym100_2785100389.depGraph, keyHEX60gensym100_2785100390)));
    }
    
    if (contains_2785099639(ctxHEX60gensym100_2785100389.activeQuerySet, keyHEX60gensym100_2785100390)) {
    incl_2801802356(ctxHEX60gensym100_2785100389.recursiveQueries, keyHEX60gensym100_2785100390);
    var itemHEX60gensym100_2785100692 = nimCopy(null, keyHEX60gensym100_2785100390.Field0, NTI2801795097);
    var queryHEX60gensym100_2785100778 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, keyHEX60gensym100_2785100390.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_2801795284(itemHEX60gensym100_2785100692), [32,40], queryHEX60gensym100_2785100778, [41]);
    Label5: {
      var kHEX60gensym100_2785100786 = 0;
      var colontmp__2734686417 = 0;
      colontmp__2734686417 = (ctxHEX60gensym100_2785100389.activeQueryStack).length - 1;
      var res_2734686418 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2734686418 <= colontmp__2734686417)) break Label7;
            kHEX60gensym100_2785100786 = res_2734686418;
            var iHEX60gensym100_2785100790 = subInt(subInt((ctxHEX60gensym100_2785100389.activeQueryStack).length, kHEX60gensym100_2785100786), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym100_2785100786), [93,32,80,97,114,101,110,116,58,32], HEX24_2801795284(ctxHEX60gensym100_2785100389.activeQueryStack[chckIndx(iHEX60gensym100_2785100790, 0, (ctxHEX60gensym100_2785100389.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2785099870(ctxHEX60gensym100_2785100389.depGraph.queryNames, ctxHEX60gensym100_2785100389.activeQueryStack[chckIndx(iHEX60gensym100_2785100790, 0, (ctxHEX60gensym100_2785100389.activeQueryStack).length - 1)].Field1));
            res_2734686418 = addInt(res_2734686418, 1);
          }
      };
    };
    if (ctxHEX60gensym100_2785100389.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2785100042(ctxHEX60gensym100_2785100389.recoveryFunctions, keyHEX60gensym100_2785100390.Field1)) {
    (Temporary8 = HEX5BHEX5D_2785100141(ctxHEX60gensym100_2785100389.recoveryFunctions, keyHEX60gensym100_2785100390.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym100_2785100390);
    markRed_2801809909(ctxHEX60gensym100_2785100389.depGraph, keyHEX60gensym100_2785100390, []);
    }
    
    result_2785100392 = 2;
    break BeforeRet;
    }
    
    incl_2801802356(ctxHEX60gensym100_2785100389.activeQuerySet, keyHEX60gensym100_2785100390);
    var Temporary9 = nimCopy(null, keyHEX60gensym100_2785100390, NTI2801795100);
    ctxHEX60gensym100_2785100389.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym100_2785101199 = getOrDefault_2801797651(ctxHEX60gensym100_2785100389.depGraph.verified, keyHEX60gensym100_2785100390, 0);
    Label11: {
      var iHEX60gensym100_2785101223 = 0;
      var depHEX60gensym100_2785101224 = {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0};
      var colontmp__2734686422 = [];
      colontmp__2734686422 = getDependencies_2801798419(ctxHEX60gensym100_2785100389.depGraph, keyHEX60gensym100_2785100390);
      var i_2734686424 = 0;
      var L_2734686425 = (colontmp__2734686422).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2734686424 < L_2734686425)) break Label13;
            iHEX60gensym100_2785101223 = i_2734686424;
            depHEX60gensym100_2785101224 = nimCopy(depHEX60gensym100_2785101224, colontmp__2734686422[chckIndx(i_2734686424, 0, (colontmp__2734686422).length - 1)], NTI2801795100);
            Label14: {
              if (HEX3DHEX3D_2298478667(depHEX60gensym100_2785101224.Field0.Field0, null_2298478708)) {
              if (ctxHEX60gensym100_2785100389.enableLogging) {
              rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2785100392 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2298478667(depHEX60gensym100_2785101224.Field0.Field0, dependencyGlobalRevision_2801795104)) {
              if ((verifiedHEX60gensym100_2785101199 < ctxHEX60gensym100_2785100389.depGraph.revision)) {
              if (ctxHEX60gensym100_2785100389.enableLogging) {
              rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2785100392 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym100_2785100389.enableLogging) {
                rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_2801797557(ctxHEX60gensym100_2785100389.depGraph, depHEX60gensym100_2785101224, verifiedHEX60gensym100_2785101199)) {
              case 2:
                if (ctxHEX60gensym100_2785100389.enableLogging) {
                rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym100_2785100389.enableLogging) {
                rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_2785100392 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym100_2785100389.enableLogging) {
                rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_2785100388(ctxHEX60gensym100_2785100389, depHEX60gensym100_2785101224, true)) {
                case 2:
                  if (ctxHEX60gensym100_2785100389.enableLogging) {
                  rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_2801805920(keyHEX60gensym100_2785100390) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2785100392 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym100_2785100389.enableLogging) {
                  rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym100_2785100391) {
                  force_2785099373(ctxHEX60gensym100_2785100389, depHEX60gensym100_2785101224);
                  }
                  else {
                    result_2785100392 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_2785099639(ctxHEX60gensym100_2785100389.recursiveQueries, keyHEX60gensym100_2785100390)) {
                  excl_2801801185(ctxHEX60gensym100_2785100389.recursiveQueries, keyHEX60gensym100_2785100390);
                  if (ctxHEX60gensym100_2785100389.enableLogging) {
                  rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_2801805920(keyHEX60gensym100_2785100390) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2785100392 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_2801797557(ctxHEX60gensym100_2785100389.depGraph, depHEX60gensym100_2785101224, verifiedHEX60gensym100_2785101199) == 1)) {
                  if (ctxHEX60gensym100_2785100389.enableLogging) {
                  rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_2785099466(ctxHEX60gensym100_2785100389.depGraph.queryNames, depHEX60gensym100_2785101224.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_2801795284(depHEX60gensym100_2785101224.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_2785100392 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2734686424 = addInt(i_2734686424, 1);
            if (!(((colontmp__2734686422).length == L_2734686425))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym100_2785100389.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_2801806466(ctxHEX60gensym100_2785100389.depGraph, keyHEX60gensym100_2785100390);
    result_2785100392 = 0;
    break BeforeRet;
    } finally {
    excl_2801801185(ctxHEX60gensym100_2785100389.activeQuerySet, keyHEX60gensym100_2785100390);
    var _ = pop_2785100318(ctxHEX60gensym100_2785100389, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym100_2785100389.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary22);
    }
  };

  return result_2785100392;

}

function clear_2785102603(s_2785102605) {
    s_2785102605.counter = 0;
    Label1: {
      var i_2785102691 = 0;
      var colontmp__2734686433 = 0;
      colontmp__2734686433 = (s_2785102605.data).length;
      var i_2734686434 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686434 < colontmp__2734686433)) break Label3;
            i_2785102691 = i_2734686434;
            s_2785102605.data[chckIndx(i_2785102691, 0, (s_2785102605.data).length - 1)].Field0 = 0;
            s_2785102605.data[chckIndx(i_2785102691, 0, (s_2785102605.data).length - 1)].Field1 = nimCopy(s_2785102605.data[chckIndx(i_2785102691, 0, (s_2785102605.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            i_2734686434 = addInt(i_2734686434, 1);
          }
      };
    };

  
}

function elapsed_2248146986(timer_2248146987) {
  var result_2248146988 = 0;

    result_2248146988 = subInt(getTicks_2248146947(), timer_2248146987.start);

  return result_2248146988;

}

function computeType_2785102512(ctxHEX60gensym103_2785102513, inputHEX60gensym103_2785102514, recordDependencyHEX60gensym103_2785102515) {
    var Temporary3;
    var Temporary5;

  var result_2785102516 = null;

  BeforeRet: {
    var timerHEX60gensym103_2785102517 = startTimer_2248146975();
    ctxHEX60gensym103_2785102513.statsType.totalCalls = addInt(ctxHEX60gensym103_2785102513.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym103_2785102936 = getItem_2785079817(inputHEX60gensym103_2785102514);
    var keyHEX60gensym103_2785102937 = {Field0: nimCopy(null, itemHEX60gensym103_2785102936, NTI2801795097), Field1: 0};
    if (recordDependencyHEX60gensym103_2785102515) {
    recordDependency_2785079604(ctxHEX60gensym103_2785102513, itemHEX60gensym103_2785102936, 0);
    }
    
    var colorHEX60gensym103_2785102938 = nodeColor_2801797557(ctxHEX60gensym103_2785102513.depGraph, keyHEX60gensym103_2785102937, 0);
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym103_2785102938, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym103_2785102936));
    }
    
    if ((colorHEX60gensym103_2785102938 == 2)) {
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym103_2785102513, keyHEX60gensym103_2785102937);
    if (false) {
    markRed_2801809909(ctxHEX60gensym103_2785102513.depGraph, keyHEX60gensym103_2785102937, []);
    }
    
    if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
    }
    
    }
    else {
      if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
      }
      
    }
    
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym103_2785102514) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785102516 = HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym103_2785102938 == 0)) {
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym103_2785102513, keyHEX60gensym103_2785102937);
    if (false) {
    markRed_2801809909(ctxHEX60gensym103_2785102513.depGraph, keyHEX60gensym103_2785102937, []);
    }
    
    if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
    }
    
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym103_2785102514) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785102516 = HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym103_2785102513, keyHEX60gensym103_2785102937, true) == 0)) {
    if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
    }
    
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym103_2785102514) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785102516 = HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym103_2785102513.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym103_2785102513, keyHEX60gensym103_2785102937);
      if (false) {
      markRed_2801809909(ctxHEX60gensym103_2785102513.depGraph, keyHEX60gensym103_2785102937, []);
      }
      
      if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
      }
      
      if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym103_2785102514) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785102516 = HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym103_2785102938 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,51,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym103_2785102513.enableLogging && contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514)));
    }
    
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    force_2785099373(ctxHEX60gensym103_2785102513, keyHEX60gensym103_2785102937);
    }
    
    if (!(contains_2785102029(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym103_2785102514) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785102516 = HEX5BHEX5D_2785102222(ctxHEX60gensym103_2785102513.queryCacheType, inputHEX60gensym103_2785102514);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym103_2785102513.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym103_2785102513.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym103_2785102513.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym103_2785102513.statsType.time = addInt(ctxHEX60gensym103_2785102513.statsType.time, elapsed_2248146986(timerHEX60gensym103_2785102517));
    }
  };

  return result_2785102516;

}

function formatValue_2785140702(result_2785140704, result_2785140704_Idx, value_2785140705, specifier_2785140706) {
    formatValue_738197675(result_2785140704, result_2785140704_Idx, HEX24_2868904342(value_2785140705), specifier_2785140706);

  
}

function rawGet_2785027041(t_2785027044, key_2785027045, hc_2785027046, hc_2785027046_Idx) {
  var result_2785027047 = 0;

  BeforeRet: {
    hc_2785027046[hc_2785027046_Idx] = hash_2768242995(key_2785027045);
    if ((hc_2785027046[hc_2785027046_Idx] == 0)) {
    hc_2785027046[hc_2785027046_Idx] = 314159265;
    }
    
    if (((t_2785027044.data).length == 0)) {
    result_2785027047 = -1;
    break BeforeRet;
    }
    
    var h_2785027133 = (hc_2785027046[hc_2785027046_Idx] & (t_2785027044.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785027044.data[chckIndx(h_2785027133, 0, (t_2785027044.data).length - 1)].Field0)) break Label2;
          if (((t_2785027044.data[chckIndx(h_2785027133, 0, (t_2785027044.data).length - 1)].Field0 == hc_2785027046[hc_2785027046_Idx]) && (t_2785027044.data[chckIndx(h_2785027133, 0, (t_2785027044.data).length - 1)].Field1 == key_2785027045))) {
          result_2785027047 = h_2785027133;
          break BeforeRet;
          }
          
          h_2785027133 = nextTry_1342177315(h_2785027133, (t_2785027044.data).length - 1);
        }
    };
    result_2785027047 = subInt(-1, h_2785027133);
  };

  return result_2785027047;

}

function hasKey_2785105604(t_2785105607, key_2785105608) {
  var result_2785105609 = false;

    var hc_2785105610 = [0];
    result_2785105609 = (0 <= rawGet_2785027041(t_2785105607, key_2785105608, hc_2785105610, 0));

  return result_2785105609;

}

function contains_2785105598(t_2785105601, key_2785105602) {
  var result_2785105603 = false;

  BeforeRet: {
    result_2785105603 = hasKey_2785105604(t_2785105601, key_2785105602);
    break BeforeRet;
  };

  return result_2785105603;

}

function contains_2785105504(cache_2785105507, key_2785105508) {
  var result_2785105509 = false;

    result_2785105509 = contains_2785105598(cache_2785105507.table, key_2785105508);

  return result_2785105509;

}

function HEX24_2868904649(value_2868904650) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2868904651 = [];

  BeforeRet: {
    switch (value_2868904650.kind) {
    case 0:
      result_2868904651 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_2868904651 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_2868904650;
      if (ConstSet14[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
      result_2868904651 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_2868904650;
      if (ConstSet15[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903942)); }
      result_2868904651 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_2868904651 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2868904650;
      if (ConstSet16[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903942)); }
      result_2868904651 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2768242647(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_2868904650;
      if (ConstSet17[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903942)); }
      result_2868904651 = nimCopy(null, HEX24_2868904342(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2868904651;

}

function HEX5BHEX5D_2785105783(t_2785105786, key_2785105787) {
  var result_2785105788 = null;
  var result_2785105788_Idx = 0;

    var hcHEX60gensym22_2785105789 = [0];
    var indexHEX60gensym22_2785105796 = rawGet_2785027041(t_2785105786, key_2785105787, hcHEX60gensym22_2785105789, 0);
    if ((0 <= indexHEX60gensym22_2785105796)) {
    result_2785105788 = t_2785105786.data[chckIndx(indexHEX60gensym22_2785105796, 0, (t_2785105786.data).length - 1)]; result_2785105788_Idx = "Field2";
    }
    else {
    raiseKeyError_2785102402(key_2785105787);
    }
    

  return [result_2785105788, result_2785105788_Idx];

}

function remove_2785030479(L_2785030481, n_2785030482) {
    if ((n_2785030482 == L_2785030481.tail)) {
    L_2785030481.tail = n_2785030482.prev;
    }
    
    if ((n_2785030482 == L_2785030481.head)) {
    L_2785030481.head = n_2785030482.next;
    }
    
    if (!((n_2785030482.next == null))) {
    n_2785030482.next.prev = n_2785030482.prev;
    }
    
    if (!((n_2785030482.prev == null))) {
    n_2785030482.prev.next = n_2785030482.next;
    }
    

  
}

function prepend_2785029226(L_2785029228, n_2785029229) {
    n_2785029229.prev = null;
    n_2785029229.next = L_2785029228.head;
    if (!((L_2785029228.head == null))) {
    if (!((L_2785029228.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785029228.head.prev = n_2785029229;
    }
    
    L_2785029228.head = n_2785029229;
    if ((L_2785029228.tail == null)) {
    L_2785029228.tail = n_2785029229;
    }
    

  
}

function HEX5BHEX5D_2785105697(cache_2785105700, key_2785105701) {
    var Temporary1;

  var result_2785105702 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2785105889 = (Temporary1 = HEX5BHEX5D_2785105783(cache_2785105700.table, key_2785105701), Temporary1)[0][Temporary1[1]];
    result_2785105702 = nimCopy(result_2785105702, node_2785105889.value.val, NTI2868903943);
    remove_2785030479(cache_2785105700.list, node_2785105889);
    prepend_2785029226(cache_2785105700.list, node_2785105889);

  return result_2785105702;

}

function computeValue_2785105988(ctxHEX60gensym107_2785105989, inputHEX60gensym107_2785105990, recordDependencyHEX60gensym107_2785105991) {
    var Temporary3;
    var Temporary5;

  var result_2785105992 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym107_2785105993 = startTimer_2248146975();
    ctxHEX60gensym107_2785105989.statsValue.totalCalls = addInt(ctxHEX60gensym107_2785105989.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym107_2785106082 = getItem_2785079817(inputHEX60gensym107_2785105990);
    var keyHEX60gensym107_2785106083 = {Field0: nimCopy(null, itemHEX60gensym107_2785106082, NTI2801795097), Field1: 1};
    if (recordDependencyHEX60gensym107_2785105991) {
    recordDependency_2785079604(ctxHEX60gensym107_2785105989, itemHEX60gensym107_2785106082, 1);
    }
    
    var colorHEX60gensym107_2785106084 = nodeColor_2801797557(ctxHEX60gensym107_2785105989.depGraph, keyHEX60gensym107_2785106083, 0);
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym107_2785106084, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym107_2785106082));
    }
    
    if ((colorHEX60gensym107_2785106084 == 2)) {
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym107_2785105989, keyHEX60gensym107_2785106083);
    if (false) {
    markRed_2801809909(ctxHEX60gensym107_2785105989.depGraph, keyHEX60gensym107_2785106083, []);
    }
    
    if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
    }
    
    }
    else {
      if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
      }
      
    }
    
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym107_2785105990) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785105992 = nimCopy(result_2785105992, HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990), NTI2868903943);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym107_2785106084 == 0)) {
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym107_2785105989, keyHEX60gensym107_2785106083);
    if (false) {
    markRed_2801809909(ctxHEX60gensym107_2785105989.depGraph, keyHEX60gensym107_2785106083, []);
    }
    
    if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
    }
    
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym107_2785105990) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785105992 = nimCopy(result_2785105992, HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990), NTI2868903943);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym107_2785105989, keyHEX60gensym107_2785106083, true) == 0)) {
    if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
    }
    
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym107_2785105990) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785105992 = nimCopy(result_2785105992, HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990), NTI2868903943);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym107_2785105989.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym107_2785105989, keyHEX60gensym107_2785106083);
      if (false) {
      markRed_2801809909(ctxHEX60gensym107_2785105989.depGraph, keyHEX60gensym107_2785106083, []);
      }
      
      if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
      }
      
      if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym107_2785105990) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785105992 = nimCopy(result_2785105992, HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990), NTI2868903943);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym107_2785106084 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,55,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym107_2785105989.enableLogging && contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990)));
    }
    
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    force_2785099373(ctxHEX60gensym107_2785105989, keyHEX60gensym107_2785106083);
    }
    
    if (!(contains_2785105504(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2768242647(inputHEX60gensym107_2785105990) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785105992 = nimCopy(result_2785105992, HEX5BHEX5D_2785105697(ctxHEX60gensym107_2785105989.queryCacheValue, inputHEX60gensym107_2785105990), NTI2868903943);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym107_2785105989.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym107_2785105989.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym107_2785105989.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym107_2785105989.statsValue.time = addInt(ctxHEX60gensym107_2785105989.statsValue.time, elapsed_2248146986(timerHEX60gensym107_2785105993));
    }
  };

  return result_2785105992;

}

function formatValue_2919237023(result_2919237025, result_2919237025_Idx, value_2919237026, specifier_2919237027) {
    formatValue_738197675(result_2919237025, result_2919237025_Idx, HEX24_2868904649(value_2919237026), specifier_2919237027);

  
}

function newFunctionType_2868904324(paramTypes_2868904325, returnType_2868904326) {
  var result_2868904327 = null;

    result_2868904327 = {kind: 4, returnType: returnType_2868904326, paramTypes: nimCopy(null, paramTypes_2868904325, NTI2868904223), open: false};

  return result_2868904327;

}

function HEX3DHEX3D_2868904482(x_2868904484, y_2868904485) {
  var result_2868904486 = false;

  BeforeRet: {
    var sameObject_2868904493 = false;
    sameObject_2868904493 = x_2868904484 === y_2868904485
    if (sameObject_2868904493) {
    result_2868904486 = true;
    break BeforeRet;
    }
    
    if (!(((x_2868904484).length == (y_2868904485).length))) {
    result_2868904486 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2868904507 = 0;
      var colontmp__2734686438 = 0;
      colontmp__2734686438 = subInt((x_2868904484).length, 1);
      var res_2734686439 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686439 <= colontmp__2734686438)) break Label3;
            i_2868904507 = res_2734686439;
            if (!(HEX3DHEX3D_2868904464(x_2868904484[chckIndx(i_2868904507, 0, (x_2868904484).length - 1)], y_2868904485[chckIndx(i_2868904507, 0, (y_2868904485).length - 1)]))) {
            result_2868904486 = false;
            break BeforeRet;
            }
            
            res_2734686439 = addInt(res_2734686439, 1);
          }
      };
    };
    result_2868904486 = true;
    break BeforeRet;
  };

  return result_2868904486;

}

function HEX3DHEX3D_2868904464(a_2868904465, b_2868904466) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_2868904467 = false;

  BeforeRet: {
    if ((a_2868904465 == null)) {
    result_2868904467 = (b_2868904466 == null);
    break BeforeRet;
    }
    
    if ((b_2868904466 == null)) {
    result_2868904467 = false;
    break BeforeRet;
    }
    
    if (!((a_2868904465.kind == b_2868904466.kind))) {
    result_2868904467 = false;
    break BeforeRet;
    }
    
    switch (a_2868904465.kind) {
    case 4:
      var Temporary2 = a_2868904465;
      if (ConstSet20[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903939)); }
      var Temporary3 = b_2868904466;
      if (ConstSet21[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903939)); }
      if (!HEX3DHEX3D_2868904464(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_2868904465;
        if (ConstSet22[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903939)); }
        var Temporary5 = b_2868904466;
        if (ConstSet23[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903939)); }
        Temporary1 = HEX3DHEX3D_2868904482(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_2868904467 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_2868904465;
      if (ConstSet24[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903939)); }
      var Temporary7 = b_2868904466;
      if (ConstSet25[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2868903939)); }
      result_2868904467 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_2868904467 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2868904467;

}

function anyType_2868904339(open_2868904340) {
  var result_2868904341 = null;

    result_2868904341 = {kind: 5, open: open_2868904340, returnType: null, paramTypes: []};

  return result_2868904341;

}

function rawGet_2785035573(t_2785035576, key_2785035577, hc_2785035578, hc_2785035578_Idx) {
  var result_2785035579 = 0;

  BeforeRet: {
    hc_2785035578[hc_2785035578_Idx] = hash_2768242995(key_2785035577);
    if ((hc_2785035578[hc_2785035578_Idx] == 0)) {
    hc_2785035578[hc_2785035578_Idx] = 314159265;
    }
    
    if (((t_2785035576.data).length == 0)) {
    result_2785035579 = -1;
    break BeforeRet;
    }
    
    var h_2785035665 = (hc_2785035578[hc_2785035578_Idx] & (t_2785035576.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785035576.data[chckIndx(h_2785035665, 0, (t_2785035576.data).length - 1)].Field0)) break Label2;
          if (((t_2785035576.data[chckIndx(h_2785035665, 0, (t_2785035576.data).length - 1)].Field0 == hc_2785035578[hc_2785035578_Idx]) && (t_2785035576.data[chckIndx(h_2785035665, 0, (t_2785035576.data).length - 1)].Field1 == key_2785035577))) {
          result_2785035579 = h_2785035665;
          break BeforeRet;
          }
          
          h_2785035665 = nextTry_1342177315(h_2785035665, (t_2785035576.data).length - 1);
        }
    };
    result_2785035579 = subInt(-1, h_2785035665);
  };

  return result_2785035579;

}

function hasKey_2785112232(t_2785112235, key_2785112236) {
  var result_2785112237 = false;

    var hc_2785112238 = [0];
    result_2785112237 = (0 <= rawGet_2785035573(t_2785112235, key_2785112236, hc_2785112238, 0));

  return result_2785112237;

}

function contains_2785112226(t_2785112229, key_2785112230) {
  var result_2785112231 = false;

  BeforeRet: {
    result_2785112231 = hasKey_2785112232(t_2785112229, key_2785112230);
    break BeforeRet;
  };

  return result_2785112231;

}

function contains_2785112132(cache_2785112135, key_2785112136) {
  var result_2785112137 = false;

    result_2785112137 = contains_2785112226(cache_2785112135.table, key_2785112136);

  return result_2785112137;

}

function len_2868905204(t_2868905207) {
  var result_2868905208 = 0;

    result_2868905208 = t_2868905207.counter;

  return result_2868905208;

}

function addQuoted_2785079165(s_2785079167, s_2785079167_Idx, x_2785079168) {
    s_2785079167[s_2785079167_Idx].push.apply(s_2785079167[s_2785079167_Idx], HEX24_2298478634(x_2785079168));;

  
}

function HEX24_2868905054(symbol_2868905055) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2868905056 = [];

  BeforeRet: {
    switch (symbol_2868905055.kind) {
    case 0:
      var Temporary1 = symbol_2868905055;
      if (ConstSet37[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903945)); }
      result_2868905056 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2298478634(symbol_2868905055.id) || [],[44,32] || [],HEX24_2768242647(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_2868905055;
      if (ConstSet38[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      var Temporary3 = symbol_2868905055;
      if (ConstSet39[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      result_2868905056 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2298478634(symbol_2868905055.id) || [],[44,32] || [],HEX24_2868904342(Temporary2.typ) || [],[44,32] || [],HEX24_2868904649(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_2868905056;

}

function addQuoted_2785078923(s_2785078925, s_2785078925_Idx, x_2785078926) {
    s_2785078925[s_2785078925_Idx].push.apply(s_2785078925[s_2785078925_Idx], HEX24_2868905054(x_2785078926));;

  
}

function HEX24_2785079072(t_2785079075) {
  var result_2785079076 = [[]];

    if ((len_2868905204(t_2785079075) == 0)) {
    result_2785079076[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_2785079076[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_2785079163 = ({id: 0});
        var val_2785079164 = null;
        var L_2734686447 = len_2868905204(t_2785079075);
        Label2: {
          var h_2734686449 = 0;
          var colontmp__2734686450 = 0;
          colontmp__2734686450 = (t_2785079075.data).length - 1;
          var res_2734686451 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2734686451 <= colontmp__2734686450)) break Label4;
                h_2734686449 = res_2734686451;
                if (isFilled_1342177312(t_2785079075.data[chckIndx(h_2734686449, 0, (t_2785079075.data).length - 1)].Field0)) {
                key_2785079163 = nimCopy(key_2785079163, t_2785079075.data[chckIndx(h_2734686449, 0, (t_2785079075.data).length - 1)].Field1, NTI2298478595);
                val_2785079164 = t_2785079075.data[chckIndx(h_2734686449, 0, (t_2785079075.data).length - 1)].Field2;
                if ((1 < (result_2785079076[0]).length)) {
                result_2785079076[0].push.apply(result_2785079076[0], [44,32]);;
                }
                
                addQuoted_2785079165(result_2785079076, 0, key_2785079163);
                result_2785079076[0].push.apply(result_2785079076[0], [58,32]);;
                addQuoted_2785078923(result_2785079076, 0, val_2785079164);
                if (!((len_2868905204(t_2785079075) == L_2734686447))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2734686451 = addInt(res_2734686451, 1);
              }
          };
        };
      };
      result_2785079076[0].push.apply(result_2785079076[0], [125]);;
    }
    

  return result_2785079076[0];

}

function HEX5BHEX5D_2785112411(t_2785112414, key_2785112415) {
  var result_2785112416 = null;
  var result_2785112416_Idx = 0;

    var hcHEX60gensym22_2785112417 = [0];
    var indexHEX60gensym22_2785112424 = rawGet_2785035573(t_2785112414, key_2785112415, hcHEX60gensym22_2785112417, 0);
    if ((0 <= indexHEX60gensym22_2785112424)) {
    result_2785112416 = t_2785112414.data[chckIndx(indexHEX60gensym22_2785112424, 0, (t_2785112414.data).length - 1)]; result_2785112416_Idx = "Field2";
    }
    else {
    raiseKeyError_2785102402(key_2785112415);
    }
    

  return [result_2785112416, result_2785112416_Idx];

}

function remove_2785039002(L_2785039004, n_2785039005) {
    if ((n_2785039005 == L_2785039004.tail)) {
    L_2785039004.tail = n_2785039005.prev;
    }
    
    if ((n_2785039005 == L_2785039004.head)) {
    L_2785039004.head = n_2785039005.next;
    }
    
    if (!((n_2785039005.next == null))) {
    n_2785039005.next.prev = n_2785039005.prev;
    }
    
    if (!((n_2785039005.prev == null))) {
    n_2785039005.prev.next = n_2785039005.next;
    }
    

  
}

function prepend_2785037749(L_2785037751, n_2785037752) {
    n_2785037752.prev = null;
    n_2785037752.next = L_2785037751.head;
    if (!((L_2785037751.head == null))) {
    if (!((L_2785037751.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785037751.head.prev = n_2785037752;
    }
    
    L_2785037751.head = n_2785037752;
    if ((L_2785037751.tail == null)) {
    L_2785037751.tail = n_2785037752;
    }
    

  
}

function HEX5BHEX5D_2785112325(cache_2785112328, key_2785112329) {
    var Temporary1;

  var result_2785112330 = null;

    var node_2785112517 = (Temporary1 = HEX5BHEX5D_2785112411(cache_2785112328.table, key_2785112329), Temporary1)[0][Temporary1[1]];
    result_2785112330 = node_2785112517.value.val;
    remove_2785039002(cache_2785112328.list, node_2785112517);
    prepend_2785037749(cache_2785112328.list, node_2785112517);

  return result_2785112330;

}

function computeSymbols_2785112618(ctxHEX60gensym115_2785112619, inputHEX60gensym115_2785112620, recordDependencyHEX60gensym115_2785112621) {
    var Temporary3;
    var Temporary5;

  var result_2785112624 = null;

  BeforeRet: {
    var timerHEX60gensym115_2785112625 = startTimer_2248146975();
    ctxHEX60gensym115_2785112619.statsSymbols.totalCalls = addInt(ctxHEX60gensym115_2785112619.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym115_2785112714 = getItem_2785079817(inputHEX60gensym115_2785112620);
    var keyHEX60gensym115_2785112715 = {Field0: nimCopy(null, itemHEX60gensym115_2785112714, NTI2801795097), Field1: 3};
    if (recordDependencyHEX60gensym115_2785112621) {
    recordDependency_2785079604(ctxHEX60gensym115_2785112619, itemHEX60gensym115_2785112714, 3);
    }
    
    var colorHEX60gensym115_2785112716 = nodeColor_2801797557(ctxHEX60gensym115_2785112619.depGraph, keyHEX60gensym115_2785112715, 0);
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym115_2785112716, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym115_2785112714));
    }
    
    if ((colorHEX60gensym115_2785112716 == 2)) {
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym115_2785112619, keyHEX60gensym115_2785112715);
    if (false) {
    markRed_2801809909(ctxHEX60gensym115_2785112619.depGraph, keyHEX60gensym115_2785112715, []);
    }
    
    if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
    }
    
    }
    else {
      if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
      }
      
    }
    
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2768242647(inputHEX60gensym115_2785112620) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785112624 = HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym115_2785112716 == 0)) {
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym115_2785112619, keyHEX60gensym115_2785112715);
    if (false) {
    markRed_2801809909(ctxHEX60gensym115_2785112619.depGraph, keyHEX60gensym115_2785112715, []);
    }
    
    if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
    }
    
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2768242647(inputHEX60gensym115_2785112620) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785112624 = HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym115_2785112619, keyHEX60gensym115_2785112715, true) == 0)) {
    if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
    }
    
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2768242647(inputHEX60gensym115_2785112620) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785112624 = HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym115_2785112619.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym115_2785112619, keyHEX60gensym115_2785112715);
      if (false) {
      markRed_2801809909(ctxHEX60gensym115_2785112619.depGraph, keyHEX60gensym115_2785112715, []);
      }
      
      if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
      }
      
      if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2768242647(inputHEX60gensym115_2785112620) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785112624 = HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym115_2785112716 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,53,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym115_2785112619.enableLogging && contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2785079072(HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620)));
    }
    
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    force_2785099373(ctxHEX60gensym115_2785112619, keyHEX60gensym115_2785112715);
    }
    
    if (!(contains_2785112132(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2768242647(inputHEX60gensym115_2785112620) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785112624 = HEX5BHEX5D_2785112325(ctxHEX60gensym115_2785112619.queryCacheSymbols, inputHEX60gensym115_2785112620);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym115_2785112619.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym115_2785112619.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym115_2785112619.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym115_2785112619.statsSymbols.time = addInt(ctxHEX60gensym115_2785112619.statsSymbols.time, elapsed_2248146986(timerHEX60gensym115_2785112625));
    }
  };

  return result_2785112624;

}

function rawGet_2785130000(t_2785130003, key_2785130004, hc_2785130005, hc_2785130005_Idx) {
  var result_2785130006 = 0;

  BeforeRet: {
    hc_2785130005[hc_2785130005_Idx] = hash_2298478681(key_2785130004);
    if ((hc_2785130005[hc_2785130005_Idx] == 0)) {
    hc_2785130005[hc_2785130005_Idx] = 314159265;
    }
    
    if (((t_2785130003.data).length == 0)) {
    result_2785130006 = -1;
    break BeforeRet;
    }
    
    var h_2785130091 = (hc_2785130005[hc_2785130005_Idx] & (t_2785130003.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785130003.data[chckIndx(h_2785130091, 0, (t_2785130003.data).length - 1)].Field0)) break Label2;
          if (((t_2785130003.data[chckIndx(h_2785130091, 0, (t_2785130003.data).length - 1)].Field0 == hc_2785130005[hc_2785130005_Idx]) && HEX3DHEX3D_2298478667(t_2785130003.data[chckIndx(h_2785130091, 0, (t_2785130003.data).length - 1)].Field1, key_2785130004))) {
          result_2785130006 = h_2785130091;
          break BeforeRet;
          }
          
          h_2785130091 = nextTry_1342177315(h_2785130091, (t_2785130003.data).length - 1);
        }
    };
    result_2785130006 = subInt(-1, h_2785130091);
  };

  return result_2785130006;

}

function hasKey_2785141316(t_2785141319, key_2785141320) {
  var result_2785141321 = false;

    var hc_2785141322 = [0];
    result_2785141321 = (0 <= rawGet_2785130000(t_2785141319, key_2785141320, hc_2785141322, 0));

  return result_2785141321;

}

function hasKey_2785141190(t_2785141193, key_2785141194) {
  var result_2785141195 = false;

    result_2785141195 = hasKey_2785141316(t_2785141193, key_2785141194);

  return result_2785141195;

}

function contains_2785141154(t_2785141157, key_2785141158) {
  var result_2785141159 = false;

  BeforeRet: {
    result_2785141159 = hasKey_2785141190(t_2785141157, key_2785141158);
    break BeforeRet;
  };

  return result_2785141159;

}

function HEX5BHEX5D_2785141575(t_2785141578, key_2785141579) {
  var result_2785141580 = null;
  var result_2785141580_Idx = 0;

    var hcHEX60gensym22_2785141581 = [0];
    var indexHEX60gensym22_2785141588 = rawGet_2785130000(t_2785141578, key_2785141579, hcHEX60gensym22_2785141581, 0);
    if ((0 <= indexHEX60gensym22_2785141588)) {
    result_2785141580 = t_2785141578.data[chckIndx(indexHEX60gensym22_2785141588, 0, (t_2785141578.data).length - 1)]; result_2785141580_Idx = "Field2";
    }
    else {
    raiseKeyError_2768242456(key_2785141579);
    }
    

  return [result_2785141580, result_2785141580_Idx];

}

function HEX5BHEX5D_2785141409(t_2785141412, key_2785141413) {
    var Temporary1;

  var result_2785141414 = null;
  var result_2785141414_Idx = 0;

    result_2785141414 = (Temporary1 = HEX5BHEX5D_2785141575(t_2785141412, key_2785141413), Temporary1)[0]; result_2785141414_Idx = Temporary1[1];

  return [result_2785141414, result_2785141414_Idx];

}

function getItem_2785092484(selfHEX60gensym92_2785092485) {
  var result_2785092486 = {Field0: ({id: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2298478667(selfHEX60gensym92_2785092485.id, null_2298478708)) {
    selfHEX60gensym92_2785092485.id = nimCopy(selfHEX60gensym92_2785092485.id, newId_2298478623(), NTI2298478595);
    }
    
    if (!(!(HEX3DHEX3D_2298478667(selfHEX60gensym92_2785092485.id, null_2298478708)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,57,50,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2734686454 = nimCopy(null, selfHEX60gensym92_2785092485.id, NTI2298478595);
    var colontmp__2734686455 = 3;
    result_2785092486 = nimCopy(result_2785092486, {Field0: nimCopy(null, colontmp__2734686454, NTI2298478595), Field1: colontmp__2734686455}, NTI2801795097);
    break BeforeRet;
  };

  return result_2785092486;

}

function hash_2868905057(symbol_2868905058) {
  var result_2868905059 = 0;

  BeforeRet: {
    result_2868905059 = hash_2298478681(symbol_2868905058.id);
    break BeforeRet;
  };

  return result_2868905059;

}

function HEX3DHEX3D_2868904672(a_2868904673, b_2868904674) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_2868904675 = false;

  BeforeRet: {
    if (!((a_2868904673.kind == b_2868904674.kind))) {
    result_2868904675 = false;
    break BeforeRet;
    }
    
    switch (a_2868904673.kind) {
    case 0:
      result_2868904675 = true;
      break BeforeRet;
      break;
    case 1:
      result_2868904675 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_2868904673;
      if (ConstSet42[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
      var Temporary2 = b_2868904674;
      if (ConstSet43[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903942)); }
      result_2868904675 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_2868904673;
      if (ConstSet44[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903942)); }
      var Temporary4 = b_2868904674;
      if (ConstSet45[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903942)); }
      result_2868904675 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_2868904673;
      if (ConstSet46[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903942)); }
      var Temporary6 = b_2868904674;
      if (ConstSet47[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903942)); }
      result_2868904675 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_2868904673;
      if (ConstSet48[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2868903942)); }
      var Temporary8 = b_2868904674;
      if (ConstSet49[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2868903942)); }
      result_2868904675 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_2868904673;
      if (ConstSet50[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2868903942)); }
      var Temporary10 = b_2868904674;
      if (ConstSet51[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2868903942)); }
      result_2868904675 = HEX3DHEX3D_2868904464(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_2868904675;

}

function HEX3DHEX3D_2868905060(a_2868905061, b_2868905062) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_2868905063 = false;

  BeforeRet: {
    if ((a_2868905061 == null)) {
    result_2868905063 = (b_2868905062 == null);
    break BeforeRet;
    }
    
    if ((b_2868905062 == null)) {
    result_2868905063 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2298478667(a_2868905061.id, b_2868905062.id))) {
    result_2868905063 = false;
    break BeforeRet;
    }
    
    if (!((a_2868905061.kind == b_2868905062.kind))) {
    result_2868905063 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_2868905061.name, b_2868905062.name))) {
    result_2868905063 = false;
    break BeforeRet;
    }
    
    switch (a_2868905061.kind) {
    case 1:
      var Temporary4 = a_2868905061;
      if (ConstSet40[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      var Temporary5 = b_2868905062;
      if (ConstSet41[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903945)); }
      if (!HEX3DHEX3D_2868904464(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_2868905061;
        if (ConstSet52[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903945)); }
        var Temporary7 = b_2868905062;
        if (ConstSet53[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2868903945)); }
        Temporary3 = HEX3DHEX3D_2868904672(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_2868905061;
        if (ConstSet54[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2868903945)); }
        var Temporary9 = b_2868905062;
        if (ConstSet55[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2868903945)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_2868905061;
        if (ConstSet56[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2868903945)); }
        var Temporary11 = b_2868905062;
        if (ConstSet57[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2868903945)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_2868905063 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_2868905061;
      if (ConstSet58[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2868903945)); }
      var Temporary13 = b_2868905062;
      if (ConstSet59[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2868903945)); }
      result_2868905063 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_2868905063;

}

function rawGet_2785040996(t_2785040999, key_2785041000, hc_2785041001, hc_2785041001_Idx) {
  var result_2785041002 = 0;

  BeforeRet: {
    hc_2785041001[hc_2785041001_Idx] = hash_2868905057(key_2785041000);
    if ((hc_2785041001[hc_2785041001_Idx] == 0)) {
    hc_2785041001[hc_2785041001_Idx] = 314159265;
    }
    
    if (((t_2785040999.data).length == 0)) {
    result_2785041002 = -1;
    break BeforeRet;
    }
    
    var h_2785041088 = (hc_2785041001[hc_2785041001_Idx] & (t_2785040999.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785040999.data[chckIndx(h_2785041088, 0, (t_2785040999.data).length - 1)].Field0)) break Label2;
          if (((t_2785040999.data[chckIndx(h_2785041088, 0, (t_2785040999.data).length - 1)].Field0 == hc_2785041001[hc_2785041001_Idx]) && HEX3DHEX3D_2868905060(t_2785040999.data[chckIndx(h_2785041088, 0, (t_2785040999.data).length - 1)].Field1, key_2785041000))) {
          result_2785041002 = h_2785041088;
          break BeforeRet;
          }
          
          h_2785041088 = nextTry_1342177315(h_2785041088, (t_2785040999.data).length - 1);
        }
    };
    result_2785041002 = subInt(-1, h_2785041088);
  };

  return result_2785041002;

}

function hasKey_2785115734(t_2785115737, key_2785115738) {
  var result_2785115739 = false;

    var hc_2785115740 = [0];
    result_2785115739 = (0 <= rawGet_2785040996(t_2785115737, key_2785115738, hc_2785115740, 0));

  return result_2785115739;

}

function contains_2785115728(t_2785115731, key_2785115732) {
  var result_2785115733 = false;

  BeforeRet: {
    result_2785115733 = hasKey_2785115734(t_2785115731, key_2785115732);
    break BeforeRet;
  };

  return result_2785115733;

}

function contains_2785115634(cache_2785115637, key_2785115638) {
  var result_2785115639 = false;

    result_2785115639 = contains_2785115728(cache_2785115637.table, key_2785115638);

  return result_2785115639;

}

function raiseKeyError_2785116007(key_2785116009) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2868905054(key_2785116009) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785115913(t_2785115916, key_2785115917) {
  var result_2785115918 = null;
  var result_2785115918_Idx = 0;

    var hcHEX60gensym22_2785115919 = [0];
    var indexHEX60gensym22_2785115926 = rawGet_2785040996(t_2785115916, key_2785115917, hcHEX60gensym22_2785115919, 0);
    if ((0 <= indexHEX60gensym22_2785115926)) {
    result_2785115918 = t_2785115916.data[chckIndx(indexHEX60gensym22_2785115926, 0, (t_2785115916.data).length - 1)]; result_2785115918_Idx = "Field2";
    }
    else {
    raiseKeyError_2785116007(key_2785115917);
    }
    

  return [result_2785115918, result_2785115918_Idx];

}

function remove_2785046875(L_2785046877, n_2785046878) {
    if ((n_2785046878 == L_2785046877.tail)) {
    L_2785046877.tail = n_2785046878.prev;
    }
    
    if ((n_2785046878 == L_2785046877.head)) {
    L_2785046877.head = n_2785046878.next;
    }
    
    if (!((n_2785046878.next == null))) {
    n_2785046878.next.prev = n_2785046878.prev;
    }
    
    if (!((n_2785046878.prev == null))) {
    n_2785046878.prev.next = n_2785046878.next;
    }
    

  
}

function prepend_2785043164(L_2785043166, n_2785043167) {
    n_2785043167.prev = null;
    n_2785043167.next = L_2785043166.head;
    if (!((L_2785043166.head == null))) {
    if (!((L_2785043166.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785043166.head.prev = n_2785043167;
    }
    
    L_2785043166.head = n_2785043167;
    if ((L_2785043166.tail == null)) {
    L_2785043166.tail = n_2785043167;
    }
    

  
}

function HEX5BHEX5D_2785115827(cache_2785115830, key_2785115831) {
    var Temporary1;

  var result_2785115832 = null;

    var node_2785116020 = (Temporary1 = HEX5BHEX5D_2785115913(cache_2785115830.table, key_2785115831), Temporary1)[0][Temporary1[1]];
    result_2785115832 = node_2785116020.value.val;
    remove_2785046875(cache_2785115830.list, node_2785116020);
    prepend_2785043164(cache_2785115830.list, node_2785116020);

  return result_2785115832;

}

function computeSymbolType_2785116090(ctxHEX60gensym119_2785116091, inputHEX60gensym119_2785116092, recordDependencyHEX60gensym119_2785116093) {
    var Temporary3;
    var Temporary5;

  var result_2785116094 = null;

  BeforeRet: {
    var timerHEX60gensym119_2785116095 = startTimer_2248146975();
    ctxHEX60gensym119_2785116091.statsSymbolType.totalCalls = addInt(ctxHEX60gensym119_2785116091.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym119_2785116184 = getItem_2785092484(inputHEX60gensym119_2785116092);
    var keyHEX60gensym119_2785116185 = {Field0: nimCopy(null, itemHEX60gensym119_2785116184, NTI2801795097), Field1: 4};
    if (recordDependencyHEX60gensym119_2785116093) {
    recordDependency_2785079604(ctxHEX60gensym119_2785116091, itemHEX60gensym119_2785116184, 4);
    }
    
    var colorHEX60gensym119_2785116186 = nodeColor_2801797557(ctxHEX60gensym119_2785116091.depGraph, keyHEX60gensym119_2785116185, 0);
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym119_2785116186, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym119_2785116184));
    }
    
    if ((colorHEX60gensym119_2785116186 == 2)) {
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym119_2785116091, keyHEX60gensym119_2785116185);
    if (false) {
    markRed_2801809909(ctxHEX60gensym119_2785116091.depGraph, keyHEX60gensym119_2785116185, []);
    }
    
    if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
    }
    
    }
    else {
      if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
      }
      
    }
    
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym119_2785116092) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785116094 = HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym119_2785116186 == 0)) {
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym119_2785116091, keyHEX60gensym119_2785116185);
    if (false) {
    markRed_2801809909(ctxHEX60gensym119_2785116091.depGraph, keyHEX60gensym119_2785116185, []);
    }
    
    if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
    }
    
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym119_2785116092) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785116094 = HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym119_2785116091, keyHEX60gensym119_2785116185, true) == 0)) {
    if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
    }
    
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym119_2785116092) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785116094 = HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym119_2785116091.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym119_2785116091, keyHEX60gensym119_2785116185);
      if (false) {
      markRed_2801809909(ctxHEX60gensym119_2785116091.depGraph, keyHEX60gensym119_2785116185, []);
      }
      
      if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
      }
      
      if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym119_2785116092) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785116094 = HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym119_2785116186 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,57,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym119_2785116091.enableLogging && contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904342(HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092)));
    }
    
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    force_2785099373(ctxHEX60gensym119_2785116091, keyHEX60gensym119_2785116185);
    }
    
    if (!(contains_2785115634(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym119_2785116092) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785116094 = HEX5BHEX5D_2785115827(ctxHEX60gensym119_2785116091.queryCacheSymbolType, inputHEX60gensym119_2785116092);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym119_2785116091.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym119_2785116091.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym119_2785116091.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym119_2785116091.statsSymbolType.time = addInt(ctxHEX60gensym119_2785116091.statsSymbolType.time, elapsed_2248146986(timerHEX60gensym119_2785116095));
    }
  };

  return result_2785116094;

}

function none_2785102496() {
  var result_2785102502 = ({val: null});

  return result_2785102502;

}

function none_2785102493() {
  var result_2785102495 = ({val: null});

    result_2785102495 = nimCopy(result_2785102495, none_2785102496(), NTI2785067720);

  return result_2785102495;

}

function isNone_2785141764(self_2785141766) {
  var result_2785141767 = false;

    result_2785141767 = (self_2785141766.val == null);

  return result_2785141767;

}

function get_2785141807(self_2785141809) {
  var result_2785141810 = null;
  var result_2785141810_Idx = 0;

  BeforeRet: {
    if (isNone_2785141764(self_2785141809)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2785141810 = self_2785141809; result_2785141810_Idx = "val";
    break BeforeRet;
  };

  return [result_2785141810, result_2785141810_Idx];

}

function some_2785102480(val_2785102482) {
  var result_2785102483 = ({val: null});

    if (!(!((val_2785102482 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2785102483.val = val_2785102482;

  return result_2785102483;

}

function last_2768240898(node_2768240899) {
  var result_2768240900 = null;

  BeforeRet: {
    if ((0 < len_2768240728(node_2768240899))) {
    result_2768240900 = HEX5BHEX5D_2768240724(node_2768240899, subInt(len_2768240728(node_2768240899), 1));
    break BeforeRet;
    }
    
    result_2768240900 = null;
    break BeforeRet;
  };

  return result_2768240900;

}

function isSome_2785141934(self_2785141936) {
  var result_2785141937 = false;

    result_2785141937 = !((self_2785141936.val == null));

  return result_2785141937;

}

function get_2785141925(self_2785141927, otherwise_2785141928) {
    var Temporary1;

  var result_2785141929 = null;

    if (isSome_2785141934(self_2785141927)) {
    Temporary1 = self_2785141927.val;
    }
    else {
    Temporary1 = otherwise_2785141928;
    }
    
    result_2785141929 = Temporary1;

  return result_2785141929;

}

function rawGet_2785031311(t_2785031314, key_2785031315, hc_2785031316, hc_2785031316_Idx) {
  var result_2785031317 = 0;

  BeforeRet: {
    hc_2785031316[hc_2785031316_Idx] = hash_2768242995(key_2785031315);
    if ((hc_2785031316[hc_2785031316_Idx] == 0)) {
    hc_2785031316[hc_2785031316_Idx] = 314159265;
    }
    
    if (((t_2785031314.data).length == 0)) {
    result_2785031317 = -1;
    break BeforeRet;
    }
    
    var h_2785031403 = (hc_2785031316[hc_2785031316_Idx] & (t_2785031314.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785031314.data[chckIndx(h_2785031403, 0, (t_2785031314.data).length - 1)].Field0)) break Label2;
          if (((t_2785031314.data[chckIndx(h_2785031403, 0, (t_2785031314.data).length - 1)].Field0 == hc_2785031316[hc_2785031316_Idx]) && (t_2785031314.data[chckIndx(h_2785031403, 0, (t_2785031314.data).length - 1)].Field1 == key_2785031315))) {
          result_2785031317 = h_2785031403;
          break BeforeRet;
          }
          
          h_2785031403 = nextTry_1342177315(h_2785031403, (t_2785031314.data).length - 1);
        }
    };
    result_2785031317 = subInt(-1, h_2785031403);
  };

  return result_2785031317;

}

function hasKey_2785108741(t_2785108744, key_2785108745) {
  var result_2785108746 = false;

    var hc_2785108747 = [0];
    result_2785108746 = (0 <= rawGet_2785031311(t_2785108744, key_2785108745, hc_2785108747, 0));

  return result_2785108746;

}

function contains_2785108735(t_2785108738, key_2785108739) {
  var result_2785108740 = false;

  BeforeRet: {
    result_2785108740 = hasKey_2785108741(t_2785108738, key_2785108739);
    break BeforeRet;
  };

  return result_2785108740;

}

function contains_2785108641(cache_2785108644, key_2785108645) {
  var result_2785108646 = false;

    result_2785108646 = contains_2785108735(cache_2785108644.table, key_2785108645);

  return result_2785108646;

}

function isSome_2868905495(self_2868905497) {
  var result_2868905498 = false;

    result_2868905498 = !((self_2868905497.val == null));

  return result_2868905498;

}

function HEX24_2785078912(self_2785078914) {
  var result_2785078915 = [[]];

    if (isSome_2868905495(self_2785078914)) {
    result_2785078915[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2785078923(result_2785078915, 0, self_2785078914.val);
    result_2785078915[0].push.apply(result_2785078915[0], [41]);;
    }
    else {
      result_2785078915[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_2785078915[0];

}

function HEX5BHEX5D_2785108920(t_2785108923, key_2785108924) {
  var result_2785108925 = null;
  var result_2785108925_Idx = 0;

    var hcHEX60gensym22_2785108926 = [0];
    var indexHEX60gensym22_2785108933 = rawGet_2785031311(t_2785108923, key_2785108924, hcHEX60gensym22_2785108926, 0);
    if ((0 <= indexHEX60gensym22_2785108933)) {
    result_2785108925 = t_2785108923.data[chckIndx(indexHEX60gensym22_2785108933, 0, (t_2785108923.data).length - 1)]; result_2785108925_Idx = "Field2";
    }
    else {
    raiseKeyError_2785102402(key_2785108924);
    }
    

  return [result_2785108925, result_2785108925_Idx];

}

function remove_2785034740(L_2785034742, n_2785034743) {
    if ((n_2785034743 == L_2785034742.tail)) {
    L_2785034742.tail = n_2785034743.prev;
    }
    
    if ((n_2785034743 == L_2785034742.head)) {
    L_2785034742.head = n_2785034743.next;
    }
    
    if (!((n_2785034743.next == null))) {
    n_2785034743.next.prev = n_2785034743.prev;
    }
    
    if (!((n_2785034743.prev == null))) {
    n_2785034743.prev.next = n_2785034743.next;
    }
    

  
}

function prepend_2785033487(L_2785033489, n_2785033490) {
    n_2785033490.prev = null;
    n_2785033490.next = L_2785033489.head;
    if (!((L_2785033489.head == null))) {
    if (!((L_2785033489.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785033489.head.prev = n_2785033490;
    }
    
    L_2785033489.head = n_2785033490;
    if ((L_2785033489.tail == null)) {
    L_2785033489.tail = n_2785033490;
    }
    

  
}

function HEX5BHEX5D_2785108834(cache_2785108837, key_2785108838) {
    var Temporary1;

  var result_2785108839 = ({val: null});

    var node_2785109026 = (Temporary1 = HEX5BHEX5D_2785108920(cache_2785108837.table, key_2785108838), Temporary1)[0][Temporary1[1]];
    result_2785108839 = nimCopy(result_2785108839, node_2785109026.value.val, NTI2868905073);
    remove_2785034740(cache_2785108837.list, node_2785109026);
    prepend_2785033487(cache_2785108837.list, node_2785109026);

  return result_2785108839;

}

function computeSymbol_2785109118(ctxHEX60gensym111_2785109119, inputHEX60gensym111_2785109120, recordDependencyHEX60gensym111_2785109121) {
    var Temporary3;
    var Temporary5;

  var result_2785109123 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym111_2785109124 = startTimer_2248146975();
    ctxHEX60gensym111_2785109119.statsSymbol.totalCalls = addInt(ctxHEX60gensym111_2785109119.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym111_2785109213 = getItem_2785079817(inputHEX60gensym111_2785109120);
    var keyHEX60gensym111_2785109214 = {Field0: nimCopy(null, itemHEX60gensym111_2785109213, NTI2801795097), Field1: 2};
    if (recordDependencyHEX60gensym111_2785109121) {
    recordDependency_2785079604(ctxHEX60gensym111_2785109119, itemHEX60gensym111_2785109213, 2);
    }
    
    var colorHEX60gensym111_2785109215 = nodeColor_2801797557(ctxHEX60gensym111_2785109119.depGraph, keyHEX60gensym111_2785109214, 0);
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym111_2785109215, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym111_2785109213));
    }
    
    if ((colorHEX60gensym111_2785109215 == 2)) {
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym111_2785109119, keyHEX60gensym111_2785109214);
    if (false) {
    markRed_2801809909(ctxHEX60gensym111_2785109119.depGraph, keyHEX60gensym111_2785109214, []);
    }
    
    if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
    }
    
    }
    else {
      if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
      }
      
    }
    
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2768242647(inputHEX60gensym111_2785109120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785109123 = nimCopy(result_2785109123, HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120), NTI2868905073);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym111_2785109215 == 0)) {
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym111_2785109119, keyHEX60gensym111_2785109214);
    if (false) {
    markRed_2801809909(ctxHEX60gensym111_2785109119.depGraph, keyHEX60gensym111_2785109214, []);
    }
    
    if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
    }
    
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2768242647(inputHEX60gensym111_2785109120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785109123 = nimCopy(result_2785109123, HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120), NTI2868905073);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym111_2785109119, keyHEX60gensym111_2785109214, true) == 0)) {
    if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
    }
    
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2768242647(inputHEX60gensym111_2785109120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785109123 = nimCopy(result_2785109123, HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120), NTI2868905073);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym111_2785109119.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym111_2785109119, keyHEX60gensym111_2785109214);
      if (false) {
      markRed_2801809909(ctxHEX60gensym111_2785109119.depGraph, keyHEX60gensym111_2785109214, []);
      }
      
      if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
      }
      
      if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2768242647(inputHEX60gensym111_2785109120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785109123 = nimCopy(result_2785109123, HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120), NTI2868905073);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym111_2785109215 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym111_2785109119.enableLogging && contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2785078912(HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120)));
    }
    
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    force_2785099373(ctxHEX60gensym111_2785109119, keyHEX60gensym111_2785109214);
    }
    
    if (!(contains_2785108641(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2768242647(inputHEX60gensym111_2785109120) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785109123 = nimCopy(result_2785109123, HEX5BHEX5D_2785108834(ctxHEX60gensym111_2785109119.queryCacheSymbol, inputHEX60gensym111_2785109120), NTI2868905073);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym111_2785109119.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym111_2785109119.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym111_2785109119.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym111_2785109119.statsSymbol.time = addInt(ctxHEX60gensym111_2785109119.statsSymbol.time, elapsed_2248146986(timerHEX60gensym111_2785109124));
    }
  };

  return result_2785109123;

}

function isNone_2868905523(self_2868905525) {
  var result_2868905526 = false;

    result_2868905526 = (self_2868905525.val == null);

  return result_2868905526;

}

function get_2868905515(self_2868905517) {
  var result_2868905518 = null;

    if (isNone_2868905523(self_2868905517)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2868905518 = self_2868905517["val"];

  return result_2868905518;

}

function formatValue_2785142080(result_2785142082, result_2785142082_Idx, value_2785142083, specifier_2785142084) {
    formatValue_738197675(result_2785142082, result_2785142082_Idx, HEX24_2868905054(value_2785142083), specifier_2785142084);

  
}

function mustRehash_2785134602(t_2785134604) {
  var result_2785134605 = false;

    if (!((t_2785134604.counter < (t_2785134604.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785134605 = ((mulInt((t_2785134604.data).length, 2) < mulInt(t_2785134604.counter, 3)) || (subInt((t_2785134604.data).length, t_2785134604.counter) < 4));

  return result_2785134605;

}

function rawInsert_2785135295(t_2785135299, data_2785135300, data_2785135300_Idx, key_2785135301, val_2785135302, hc_2785135303, h_2785135304) {
    data_2785135300[data_2785135300_Idx][chckIndx(h_2785135304, 0, (data_2785135300[data_2785135300_Idx]).length - 1)].Field1 = nimCopy(data_2785135300[data_2785135300_Idx][chckIndx(h_2785135304, 0, (data_2785135300[data_2785135300_Idx]).length - 1)].Field1, key_2785135301, NTI2801795100);
    data_2785135300[data_2785135300_Idx][chckIndx(h_2785135304, 0, (data_2785135300[data_2785135300_Idx]).length - 1)].Field2 = nimCopy(null, val_2785135302, NTI2785018256);
    data_2785135300[data_2785135300_Idx][chckIndx(h_2785135304, 0, (data_2785135300[data_2785135300_Idx]).length - 1)].Field0 = hc_2785135303;

  
}

function enlarge_2785134859(t_2785134862) {
    var n_2785134865 = [];
    n_2785134865 = new Array(chckRange(mulInt((t_2785134862.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785134862.data).length, 2), 0, 2147483647) ; ++i) { n_2785134865[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2785134862.data; t_2785134862.data = n_2785134865; n_2785134865 = Temporary1;    Label2: {
      var i_2785134963 = 0;
      var colontmp__2734686460 = 0;
      colontmp__2734686460 = (n_2785134865).length - 1;
      var res_2734686461 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686461 <= colontmp__2734686460)) break Label4;
            i_2785134963 = res_2734686461;
            var eh_2785135044 = n_2785134865[chckIndx(i_2785134963, 0, (n_2785134865).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785135044)) {
            var j_2785135048 = (eh_2785135044 & (t_2785134862.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785134862.data[chckIndx(j_2785135048, 0, (t_2785134862.data).length - 1)].Field0)) break Label6;
                  j_2785135048 = nextTry_1342177315(j_2785135048, (t_2785134862.data).length - 1);
                }
            };
            rawInsert_2785135295(t_2785134862, t_2785134862, "data", n_2785134865[chckIndx(i_2785134963, 0, (n_2785134865).length - 1)].Field1, n_2785134865[chckIndx(i_2785134963, 0, (n_2785134865).length - 1)].Field2, eh_2785135044, j_2785135048);
            }
            
            res_2734686461 = addInt(res_2734686461, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785135554(t_2785135557, key_2785135558, hc_2785135559) {
  var result_2785135560 = 0;

  BeforeRet: {
    if (((t_2785135557.data).length == 0)) {
    result_2785135560 = -1;
    break BeforeRet;
    }
    
    var h_2785135645 = (hc_2785135559 & (t_2785135557.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785135557.data[chckIndx(h_2785135645, 0, (t_2785135557.data).length - 1)].Field0)) break Label2;
          if (((t_2785135557.data[chckIndx(h_2785135645, 0, (t_2785135557.data).length - 1)].Field0 == hc_2785135559) && HEX3DHEX3D_2801798101(t_2785135557.data[chckIndx(h_2785135645, 0, (t_2785135557.data).length - 1)].Field1, key_2785135558))) {
          result_2785135560 = h_2785135645;
          break BeforeRet;
          }
          
          h_2785135645 = nextTry_1342177315(h_2785135645, (t_2785135557.data).length - 1);
        }
    };
    result_2785135560 = subInt(-1, h_2785135645);
  };

  return result_2785135560;

}

function HEX5BHEX5DHEX3D_2785134334(t_2785134337, key_2785134338, val_2785134339) {
    if (((t_2785134337.data).length == 0)) {
    var correctSizeHEX60gensym643_2785134422 = slotsNeeded_1342177323(32);
    t_2785134337.counter = 0;
    t_2785134337.data = new Array(chckRange(correctSizeHEX60gensym643_2785134422, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym643_2785134422, 0, 2147483647) ; ++i) { t_2785134337.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2785134427 = [0];
    var index_2785134434 = rawGet_2785131998(t_2785134337, key_2785134338, hc_2785134427, 0);
    if ((0 <= index_2785134434)) {
    t_2785134337.data[chckIndx(index_2785134434, 0, (t_2785134337.data).length - 1)].Field2 = nimCopy(null, val_2785134339, NTI2785018256);
    }
    else {
      if (((t_2785134337.data).length == 0)) {
      var correctSizeHEX60gensym646_2785134597 = slotsNeeded_1342177323(32);
      t_2785134337.counter = 0;
      t_2785134337.data = new Array(chckRange(correctSizeHEX60gensym646_2785134597, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym646_2785134597, 0, 2147483647) ; ++i) { t_2785134337.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2785134602(t_2785134337)) {
      enlarge_2785134859(t_2785134337);
      index_2785134434 = rawGetKnownHC_2785135554(t_2785134337, key_2785134338, hc_2785134427[0]);
      }
      
      index_2785134434 = subInt(-1, index_2785134434);
      rawInsert_2785135295(t_2785134337, t_2785134337, "data", key_2785134338, val_2785134339, hc_2785134427[0], index_2785134434);
      t_2785134337.counter = addInt(t_2785134337.counter, 1);
    }
    

  
}

function hasKey_2785136003(t_2785136006, key_2785136007) {
  var result_2785136008 = false;

    var hc_2785136009 = [0];
    result_2785136008 = (0 <= rawGet_2785132646(t_2785136006, key_2785136007, hc_2785136009, 0));

  return result_2785136008;

}

function contains_2785135997(t_2785136000, key_2785136001) {
  var result_2785136002 = false;

  BeforeRet: {
    result_2785136002 = hasKey_2785136003(t_2785136000, key_2785136001);
    break BeforeRet;
  };

  return result_2785136002;

}

function mustRehash_2785136347(t_2785136349) {
  var result_2785136350 = false;

    if (!((t_2785136349.counter < (t_2785136349.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785136350 = ((mulInt((t_2785136349.data).length, 2) < mulInt(t_2785136349.counter, 3)) || (subInt((t_2785136349.data).length, t_2785136349.counter) < 4));

  return result_2785136350;

}

function rawInsert_2785137040(t_2785137044, data_2785137045, data_2785137045_Idx, key_2785137046, val_2785137047, hc_2785137048, h_2785137049) {
    data_2785137045[data_2785137045_Idx][chckIndx(h_2785137049, 0, (data_2785137045[data_2785137045_Idx]).length - 1)].Field1 = nimCopy(data_2785137045[data_2785137045_Idx][chckIndx(h_2785137049, 0, (data_2785137045[data_2785137045_Idx]).length - 1)].Field1, key_2785137046, NTI2298478595);
    data_2785137045[data_2785137045_Idx][chckIndx(h_2785137049, 0, (data_2785137045[data_2785137045_Idx]).length - 1)].Field2 = nimCopy(data_2785137045[data_2785137045_Idx][chckIndx(h_2785137049, 0, (data_2785137045[data_2785137045_Idx]).length - 1)].Field2, val_2785137047, NTI2785017860);
    data_2785137045[data_2785137045_Idx][chckIndx(h_2785137049, 0, (data_2785137045[data_2785137045_Idx]).length - 1)].Field0 = hc_2785137048;

  
}

function enlarge_2785136604(t_2785136607) {
    var n_2785136610 = [];
    n_2785136610 = new Array(chckRange(mulInt((t_2785136607.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785136607.data).length, 2), 0, 2147483647) ; ++i) { n_2785136610[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_2785136607.data; t_2785136607.data = n_2785136610; n_2785136610 = Temporary1;    Label2: {
      var i_2785136708 = 0;
      var colontmp__2734686466 = 0;
      colontmp__2734686466 = (n_2785136610).length - 1;
      var res_2734686467 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686467 <= colontmp__2734686466)) break Label4;
            i_2785136708 = res_2734686467;
            var eh_2785136789 = n_2785136610[chckIndx(i_2785136708, 0, (n_2785136610).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785136789)) {
            var j_2785136793 = (eh_2785136789 & (t_2785136607.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785136607.data[chckIndx(j_2785136793, 0, (t_2785136607.data).length - 1)].Field0)) break Label6;
                  j_2785136793 = nextTry_1342177315(j_2785136793, (t_2785136607.data).length - 1);
                }
            };
            rawInsert_2785137040(t_2785136607, t_2785136607, "data", n_2785136610[chckIndx(i_2785136708, 0, (n_2785136610).length - 1)].Field1, n_2785136610[chckIndx(i_2785136708, 0, (n_2785136610).length - 1)].Field2, eh_2785136789, j_2785136793);
            }
            
            res_2734686467 = addInt(res_2734686467, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785137299(t_2785137302, key_2785137303, hc_2785137304) {
  var result_2785137305 = 0;

  BeforeRet: {
    if (((t_2785137302.data).length == 0)) {
    result_2785137305 = -1;
    break BeforeRet;
    }
    
    var h_2785137390 = (hc_2785137304 & (t_2785137302.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785137302.data[chckIndx(h_2785137390, 0, (t_2785137302.data).length - 1)].Field0)) break Label2;
          if (((t_2785137302.data[chckIndx(h_2785137390, 0, (t_2785137302.data).length - 1)].Field0 == hc_2785137304) && HEX3DHEX3D_2298478667(t_2785137302.data[chckIndx(h_2785137390, 0, (t_2785137302.data).length - 1)].Field1, key_2785137303))) {
          result_2785137305 = h_2785137390;
          break BeforeRet;
          }
          
          h_2785137390 = nextTry_1342177315(h_2785137390, (t_2785137302.data).length - 1);
        }
    };
    result_2785137305 = subInt(-1, h_2785137390);
  };

  return result_2785137305;

}

function HEX5BHEX5DHEX3D_2785136079(t_2785136082, key_2785136083, val_2785136084) {
    if (((t_2785136082.data).length == 0)) {
    var correctSizeHEX60gensym655_2785136167 = slotsNeeded_1342177323(32);
    t_2785136082.counter = 0;
    t_2785136082.data = new Array(chckRange(correctSizeHEX60gensym655_2785136167, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym655_2785136167, 0, 2147483647) ; ++i) { t_2785136082.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_2785136172 = [0];
    var index_2785136179 = rawGet_2785132646(t_2785136082, key_2785136083, hc_2785136172, 0);
    if ((0 <= index_2785136179)) {
    t_2785136082.data[chckIndx(index_2785136179, 0, (t_2785136082.data).length - 1)].Field2 = nimCopy(t_2785136082.data[chckIndx(index_2785136179, 0, (t_2785136082.data).length - 1)].Field2, val_2785136084, NTI2785017860);
    }
    else {
      if (((t_2785136082.data).length == 0)) {
      var correctSizeHEX60gensym658_2785136342 = slotsNeeded_1342177323(32);
      t_2785136082.counter = 0;
      t_2785136082.data = new Array(chckRange(correctSizeHEX60gensym658_2785136342, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym658_2785136342, 0, 2147483647) ; ++i) { t_2785136082.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2785136347(t_2785136082)) {
      enlarge_2785136604(t_2785136082);
      index_2785136179 = rawGetKnownHC_2785137299(t_2785136082, key_2785136083, hc_2785136172[0]);
      }
      
      index_2785136179 = subInt(-1, index_2785136179);
      rawInsert_2785137040(t_2785136082, t_2785136082, "data", key_2785136083, val_2785136084, hc_2785136172[0], index_2785136179);
      t_2785136082.counter = addInt(t_2785136082.counter, 1);
    }
    

  
}

function hasKey_2785137819(t_2785137822, key_2785137823) {
  var result_2785137824 = false;

    var hc_2785137825 = [0];
    result_2785137824 = (0 <= rawGet_2785133153(t_2785137822, key_2785137823, hc_2785137825, 0));

  return result_2785137824;

}

function contains_2785137813(t_2785137816, key_2785137817) {
  var result_2785137818 = false;

  BeforeRet: {
    result_2785137818 = hasKey_2785137819(t_2785137816, key_2785137817);
    break BeforeRet;
  };

  return result_2785137818;

}

function mustRehash_2785138252(t_2785138254) {
  var result_2785138255 = false;

    if (!((t_2785138254.counter < (t_2785138254.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785138255 = ((mulInt((t_2785138254.data).length, 2) < mulInt(t_2785138254.counter, 3)) || (subInt((t_2785138254.data).length, t_2785138254.counter) < 4));

  return result_2785138255;

}

function rawInsert_2785138945(t_2785138949, data_2785138950, data_2785138950_Idx, key_2785138951, val_2785138952, hc_2785138953, h_2785138954) {
    data_2785138950[data_2785138950_Idx][chckIndx(h_2785138954, 0, (data_2785138950[data_2785138950_Idx]).length - 1)].Field1 = nimCopy(data_2785138950[data_2785138950_Idx][chckIndx(h_2785138954, 0, (data_2785138950[data_2785138950_Idx]).length - 1)].Field1, key_2785138951, NTI2801795100);
    data_2785138950[data_2785138950_Idx][chckIndx(h_2785138954, 0, (data_2785138950[data_2785138950_Idx]).length - 1)].Field2 = nimCopy(null, val_2785138952, NTI2785017864);
    data_2785138950[data_2785138950_Idx][chckIndx(h_2785138954, 0, (data_2785138950[data_2785138950_Idx]).length - 1)].Field0 = hc_2785138953;

  
}

function enlarge_2785138509(t_2785138512) {
    var n_2785138515 = [];
    n_2785138515 = new Array(chckRange(mulInt((t_2785138512.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785138512.data).length, 2), 0, 2147483647) ; ++i) { n_2785138515[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2785138512.data; t_2785138512.data = n_2785138515; n_2785138515 = Temporary1;    Label2: {
      var i_2785138613 = 0;
      var colontmp__2734686472 = 0;
      colontmp__2734686472 = (n_2785138515).length - 1;
      var res_2734686473 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686473 <= colontmp__2734686472)) break Label4;
            i_2785138613 = res_2734686473;
            var eh_2785138694 = n_2785138515[chckIndx(i_2785138613, 0, (n_2785138515).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785138694)) {
            var j_2785138698 = (eh_2785138694 & (t_2785138512.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785138512.data[chckIndx(j_2785138698, 0, (t_2785138512.data).length - 1)].Field0)) break Label6;
                  j_2785138698 = nextTry_1342177315(j_2785138698, (t_2785138512.data).length - 1);
                }
            };
            rawInsert_2785138945(t_2785138512, t_2785138512, "data", n_2785138515[chckIndx(i_2785138613, 0, (n_2785138515).length - 1)].Field1, n_2785138515[chckIndx(i_2785138613, 0, (n_2785138515).length - 1)].Field2, eh_2785138694, j_2785138698);
            }
            
            res_2734686473 = addInt(res_2734686473, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785139195(t_2785139198, key_2785139199, hc_2785139200) {
  var result_2785139201 = 0;

  BeforeRet: {
    if (((t_2785139198.data).length == 0)) {
    result_2785139201 = -1;
    break BeforeRet;
    }
    
    var h_2785139286 = (hc_2785139200 & (t_2785139198.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785139198.data[chckIndx(h_2785139286, 0, (t_2785139198.data).length - 1)].Field0)) break Label2;
          if (((t_2785139198.data[chckIndx(h_2785139286, 0, (t_2785139198.data).length - 1)].Field0 == hc_2785139200) && HEX3DHEX3D_2801798101(t_2785139198.data[chckIndx(h_2785139286, 0, (t_2785139198.data).length - 1)].Field1, key_2785139199))) {
          result_2785139201 = h_2785139286;
          break BeforeRet;
          }
          
          h_2785139286 = nextTry_1342177315(h_2785139286, (t_2785139198.data).length - 1);
        }
    };
    result_2785139201 = subInt(-1, h_2785139286);
  };

  return result_2785139201;

}

function HEX5BHEX5DHEX3D_2785137984(t_2785137987, key_2785137988, val_2785137989) {
    if (((t_2785137987.data).length == 0)) {
    var correctSizeHEX60gensym667_2785138072 = slotsNeeded_1342177323(32);
    t_2785137987.counter = 0;
    t_2785137987.data = new Array(chckRange(correctSizeHEX60gensym667_2785138072, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym667_2785138072, 0, 2147483647) ; ++i) { t_2785137987.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2785138077 = [0];
    var index_2785138084 = rawGet_2785133153(t_2785137987, key_2785137988, hc_2785138077, 0);
    if ((0 <= index_2785138084)) {
    t_2785137987.data[chckIndx(index_2785138084, 0, (t_2785137987.data).length - 1)].Field2 = nimCopy(null, val_2785137989, NTI2785017864);
    }
    else {
      if (((t_2785137987.data).length == 0)) {
      var correctSizeHEX60gensym670_2785138247 = slotsNeeded_1342177323(32);
      t_2785137987.counter = 0;
      t_2785137987.data = new Array(chckRange(correctSizeHEX60gensym670_2785138247, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym670_2785138247, 0, 2147483647) ; ++i) { t_2785137987.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2785138252(t_2785137987)) {
      enlarge_2785138509(t_2785137987);
      index_2785138084 = rawGetKnownHC_2785139195(t_2785137987, key_2785137988, hc_2785138077[0]);
      }
      
      index_2785138084 = subInt(-1, index_2785138084);
      rawInsert_2785138945(t_2785137987, t_2785137987, "data", key_2785137988, val_2785137989, hc_2785138077[0], index_2785138084);
      t_2785137987.counter = addInt(t_2785137987.counter, 1);
    }
    

  
}

function HEX5BHEX5D_2785139717(t_2785139720, key_2785139721) {
  var result_2785139722 = null;
  var result_2785139722_Idx = 0;

    var hcHEX60gensym22_2785139723 = [0];
    var indexHEX60gensym22_2785139730 = rawGet_2785133153(t_2785139720, key_2785139721, hcHEX60gensym22_2785139723, 0);
    if ((0 <= indexHEX60gensym22_2785139730)) {
    result_2785139722 = t_2785139720.data[chckIndx(indexHEX60gensym22_2785139730, 0, (t_2785139720.data).length - 1)]; result_2785139722_Idx = "Field2";
    }
    else {
    raiseKeyError_2801805873(key_2785139721);
    }
    

  return [result_2785139722, result_2785139722_Idx];

}

function del_2785139890(t_2785139893, key_2785139894) {
    var hc_2785139895 = [0];
    var i_2785139902 = rawGet_2785131998(t_2785139893, key_2785139894, hc_2785139895, 0);
    var mskHEX60gensym36_2785139906 = (t_2785139893.data).length - 1;
    if ((0 <= i_2785139902)) {
    t_2785139893.counter = subInt(t_2785139893.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785139913 = i_2785139902;
            var rHEX60gensym36_2785139914 = jHEX60gensym36_2785139913;
            t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field0 = 0;
            t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field1 = nimCopy(t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field1, {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, NTI2801795100);
            t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field2 = nimCopy(null, [], NTI2785018256);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785139902 = (addInt(i_2785139902, 1) & mskHEX60gensym36_2785139906);
                  if (isEmpty_1342177309(t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785139914 = (t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)].Field0 & mskHEX60gensym36_2785139906);
                  if (!(((((rHEX60gensym36_2785139914 <= i_2785139902) && (jHEX60gensym36_2785139913 < rHEX60gensym36_2785139914)) || ((jHEX60gensym36_2785139913 < rHEX60gensym36_2785139914) && (i_2785139902 < jHEX60gensym36_2785139913))) || ((i_2785139902 < jHEX60gensym36_2785139913) && (rHEX60gensym36_2785139914 <= i_2785139902))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785139893.data[chckIndx(jHEX60gensym36_2785139913, 0, (t_2785139893.data).length - 1)] = nimCopy(t_2785139893.data[chckIndx(jHEX60gensym36_2785139913, 0, (t_2785139893.data).length - 1)], t_2785139893.data[chckIndx(i_2785139902, 0, (t_2785139893.data).length - 1)], NTI2785018268);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_2785018763(ctx_2785018764, node_2785018765) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_2785131895 = null;

  BeforeRet: {
    var logQueryHEX60gensym632_2785131897 = (ctx_2785018764.enableLogging || ctx_2785018764.enableQueryLogging);
    if (logQueryHEX60gensym632_2785131897) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym632_2785131897) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2768242647(node_2785018765) || []));
    }
    
    try {
    var key_2785131908 = nimCopy(null, getTypeKey_2785101941(ctx_2785018764, getItem_2785079817(node_2785018765)), NTI2801795100);
    if (contains_2785131985(ctx_2785018764.diagnosticsPerQuery, key_2785131908)) {
    Label3: {
      var id_2785132558 = ({id: 0});
      var colontmp__2734686310 = [];
      colontmp__2734686310 = (Temporary4 = HEX5BHEX5D_2785132430(ctx_2785018764.diagnosticsPerQuery, key_2785131908), Temporary4)[0][Temporary4[1]];
      var i_2734686312 = 0;
      var L_2734686313 = (colontmp__2734686310).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2734686312 < L_2734686313)) break Label6;
            id_2785132558 = colontmp__2734686310[chckIndx(i_2734686312, 0, (colontmp__2734686310).length - 1)];
            del_2785133147(HEX5BHEX5D_2785132639(ctx_2785018764.diagnosticsPerNode, id_2785132558).queries, key_2785131908);
            i_2734686312 = addInt(i_2734686312, 1);
            if (!(((colontmp__2734686310).length == L_2734686313))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_2785134261 = [];
    var ids_2785134266 = [];
    try {
    Label8: {
      var expr_2785140639 = node_2785018765;
      var pos_2785140640 = 0;
      var _ = pos_2785140640;
      if ((expr_2785140639.kind == 0)) {
      result_2785131895 = voidType_2868904318();
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_2785018765.text);
      result_2785131895 = intType_2868904320();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_2785140639.kind == 3)) {
      result_2785131895 = stringType_2868904322();
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 12)) {
      result_2785131895 = voidType_2868904318();
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 11)) {
      if ((len_2768240728(node_2785018765) < 3)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var params_2785140663 = HEX5BHEX5D_2768240724(node_2785018765, 0);
      recordDependency_2785079604(ctx_2785018764, getItem_2785079817(params_2785140663), -1);
      var returnTypeNode_2785140664 = HEX5BHEX5D_2768240724(node_2785018765, 1);
      var paramTypes_2785140669 = [];
      var ok_2785140670 = true;
      Label10: {
        var param_2785140674 = null;
        var i_2734686323 = 0;
        var L_2734686324 = (params_2785140663.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2734686323 < L_2734686324)) break Label12;
              param_2785140674 = params_2785140663.children[chckIndx(i_2734686323, 0, (params_2785140663.children).length - 1)];
              Label13: {
                var paramType_2785140675 = computeType_2785102512(ctx_2785018764, param_2785140674, true);
                if ((paramType_2785140675.kind == 0)) {
                ok_2785140670 = false;
                break Label13;
                }
                
                paramTypes_2785140669.push(paramType_2785140675);;
              };
              i_2734686323 = addInt(i_2734686323, 1);
              if (!(((params_2785140663.children).length == L_2734686324))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_2785140684 = computeType_2785102512(ctx_2785018764, returnTypeNode_2785140664, true);
      if ((returnTypeType_2785140684.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((returnTypeType_2785140684.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_2785140664.id, NTI2298478595);
      ids_2785134266.push(Temporary14);;
      var fmtRes_2785140701 = [mnewString(0)];
      fmtRes_2785140701[0].push.apply(fmtRes_2785140701[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2785140702(fmtRes_2785140701, 0, returnTypeType_2785140684, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140701[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var returnTypeValue_2785140711 = computeValue_2785105988(ctx_2785018764, returnTypeNode_2785140664, true);
      if ((returnTypeValue_2785140711.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_2785140711.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_2785140664.id, NTI2298478595);
      ids_2785134266.push(Temporary15);;
      var fmtRes_2785140728 = [mnewString(0)];
      fmtRes_2785140728[0].push.apply(fmtRes_2785140728[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_2919237023(fmtRes_2785140728, 0, returnTypeValue_2785140711, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140728[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_2785140711;
      if (ConstSet18[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI2868903942)); }
      var returnType_2785140738 = Temporary16.typ;
      result_2785131895 = newFunctionType_2868904324(paramTypes_2785140669, returnType_2785140738);
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 8)) {
      if ((len_2768240728(node_2785018765) == 0)) {
      var Temporary17 = nimCopy(null, node_2785018765.id, NTI2298478595);
      ids_2785134266.push(Temporary17);;
      var fmtRes_2785140751 = mnewString(0);
      fmtRes_2785140751.push.apply(fmtRes_2785140751, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140751, NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var function_2785140756 = HEX5BHEX5D_2768240724(node_2785018765, 0);
      var functionType_2785140757 = computeType_2785102512(ctx_2785018764, function_2785140756, true);
      if ((functionType_2785140757.kind == 0)) {
      result_2785131895 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_2785140757.kind == 4))) {
      var Temporary18 = nimCopy(null, function_2785140756.id, NTI2298478595);
      ids_2785134266.push(Temporary18);;
      var fmtRes_2785140774 = [mnewString(0)];
      fmtRes_2785140774[0].push.apply(fmtRes_2785140774[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_2785140702(fmtRes_2785140774, 0, functionType_2785140757, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140774[0], NTI33554449)});;
      result_2785131895 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_2785140784 = subInt(len_2768240728(node_2785018765), 1);
      var Temporary21 = functionType_2785140757;
      if (ConstSet19[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI2868903939)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_2785140757;
        if (ConstSet26[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI2868903939)); }
        var Temporary23 = functionType_2785140757;
        if (ConstSet27[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI2868903939)); }
        Temporary20 = HEX3DHEX3D_2868904464((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_2868904339(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_2785140757;
        if (ConstSet28[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI2868903939)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_2785140784);      }      var isValidOpenAnyCall_2785140794 = Temporary19;
        var Temporary27 = functionType_2785140757;
        if (ConstSet29[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2868903939)); }
        if (!!((numArgs_2785140784 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_2785140794);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_2785018765.id, NTI2298478595);
      ids_2785134266.push(Temporary28);;
      var fmtRes_2785140806 = [mnewString(0)];
      fmtRes_2785140806[0].push.apply(fmtRes_2785140806[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_2785140757;
      if (ConstSet30[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI2868903939)); }
      formatValue_2348810760(fmtRes_2785140806, 0, (Temporary29.paramTypes).length, []);
      fmtRes_2785140806[0].push.apply(fmtRes_2785140806[0], [32,103,111,116,32]);;
      formatValue_2348810760(fmtRes_2785140806, 0, numArgs_2785140784, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140806[0], NTI33554449)});;
      result_2785131895 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_2785140824 = true;
      Label30: {
        var i_2785140829 = 0;
        var res_2734686328 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2734686328 <= numArgs_2785140784)) break Label32;
              i_2785140829 = res_2734686328;
              Label33: {
                var argType_2785140830 = computeType_2785102512(ctx_2785018764, HEX5BHEX5D_2768240724(node_2785018765, i_2785140829), true);
                if ((argType_2785140830.kind == 0)) {
                allArgsOk_2785140824 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_2785140794) Temporary34 = false; else {                    var Temporary35 = functionType_2785140757;
                    if (ConstSet31[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI2868903939)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_2785140829);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_2785140757;
                  if (ConstSet32[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI2868903939)); }
                if (!(HEX3DHEX3D_2868904464(argType_2785140830, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_2785140829, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2768240724(node_2785018765, i_2785140829).id, NTI2298478595);
                ids_2785134266.push(Temporary38);;
                var fmtRes_2785140846 = [mnewString(0)];
                fmtRes_2785140846[0].push.apply(fmtRes_2785140846[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2348810760(fmtRes_2785140846, 0, i_2785140829, []);
                fmtRes_2785140846[0].push.apply(fmtRes_2785140846[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_2785140757;
                if (ConstSet33[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI2868903939)); }
                formatValue_2785140702(fmtRes_2785140846, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_2785140829, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_2785140846[0].push.apply(fmtRes_2785140846[0], [32,103,111,116,32]);;
                formatValue_2785140702(fmtRes_2785140846, 0, argType_2785140830, []);
                diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140846[0], NTI33554449)});;
                allArgsOk_2785140824 = false;
                }
                
              };
              res_2734686328 = addInt(res_2734686328, 1);
            }
        };
      };
      if (!(allArgsOk_2785140824)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_2785140757;
      if (ConstSet34[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI2868903939)); }
      result_2785131895 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 4)) {
      if ((len_2768240728(node_2785018765) == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      result_2785131895 = computeType_2785102512(ctx_2785018764, HEX5BHEX5D_2768240724(node_2785018765, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 5)) {
      if ((len_2768240728(node_2785018765) < 1)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var typeNode_2785140874 = HEX5BHEX5D_2768240724(node_2785018765, 0);
      var typ_2785140875 = voidType_2868904318();
      if (!((typeNode_2785140874.kind == 0))) {
      var typeNodeType_2785140880 = computeType_2785102512(ctx_2785018764, typeNode_2785140874, true);
      if ((typeNodeType_2785140880.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2785140880.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_2785140874.id, NTI2298478595);
      ids_2785134266.push(Temporary42);;
      var fmtRes_2785140897 = [mnewString(0)];
      fmtRes_2785140897[0].push.apply(fmtRes_2785140897[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2785140702(fmtRes_2785140897, 0, typeNodeType_2785140880, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140897[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var typeNodeValue_2785140907 = computeValue_2785105988(ctx_2785018764, typeNode_2785140874, true);
      if ((typeNodeValue_2785140907.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2785140907.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_2785140874.id, NTI2298478595);
      ids_2785134266.push(Temporary43);;
      var fmtRes_2785140924 = [mnewString(0)];
      fmtRes_2785140924[0].push.apply(fmtRes_2785140924[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_2919237023(fmtRes_2785140924, 0, typeNodeValue_2785140907, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140924[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_2785140907;
      if (ConstSet35[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI2868903942)); }
      typ_2785140875 = Temporary44.typ;
      }
      
      if ((2 <= len_2768240728(node_2785018765))) {
      var valueNode_2785140934 = HEX5BHEX5D_2768240724(node_2785018765, 1);
      if (!((valueNode_2785140934.kind == 0))) {
      var valueNodeType_2785140939 = computeType_2785102512(ctx_2785018764, valueNode_2785140934, true);
      if ((valueNodeType_2785140939.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if ((typ_2785140875.kind == 1)) {
      typ_2785140875 = valueNodeType_2785140939;
      }
      
      if (!(HEX3DHEX3D_2868904464(valueNodeType_2785140939, typ_2785140875))) {
      var Temporary45 = nimCopy(null, valueNode_2785140934.id, NTI2298478595);
      ids_2785134266.push(Temporary45);;
      var fmtRes_2785140956 = [mnewString(0)];
      fmtRes_2785140956[0].push.apply(fmtRes_2785140956[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2785140702(fmtRes_2785140956, 0, typ_2785140875, []);
      fmtRes_2785140956[0].push.apply(fmtRes_2785140956[0], [44,32,103,111,116,32]);;
      formatValue_2785140702(fmtRes_2785140956, 0, valueNodeType_2785140939, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140956[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2785131895 = typ_2785140875;
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 6)) {
      if ((len_2768240728(node_2785018765) < 1)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var typeNode_2785140975 = HEX5BHEX5D_2768240724(node_2785018765, 0);
      var typ_2785140976 = voidType_2868904318();
      if (!((typeNode_2785140975.kind == 0))) {
      var typeNodeType_2785140981 = computeType_2785102512(ctx_2785018764, typeNode_2785140975, true);
      if ((typeNodeType_2785140981.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2785140981.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_2785140975.id, NTI2298478595);
      ids_2785134266.push(Temporary46);;
      var fmtRes_2785140998 = [mnewString(0)];
      fmtRes_2785140998[0].push.apply(fmtRes_2785140998[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2785140702(fmtRes_2785140998, 0, typeNodeType_2785140981, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785140998[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var typeNodeValue_2785141008 = computeValue_2785105988(ctx_2785018764, typeNode_2785140975, true);
      if ((typeNodeValue_2785141008.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2785141008.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_2785140975.id, NTI2298478595);
      ids_2785134266.push(Temporary47);;
      var fmtRes_2785141025 = [mnewString(0)];
      fmtRes_2785141025[0].push.apply(fmtRes_2785141025[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_2919237023(fmtRes_2785141025, 0, typeNodeValue_2785141008, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785141025[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_2785141008;
      if (ConstSet36[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI2868903942)); }
      typ_2785140976 = Temporary48.typ;
      }
      
      if ((2 <= len_2768240728(node_2785018765))) {
      var valueNode_2785141035 = HEX5BHEX5D_2768240724(node_2785018765, 1);
      if (!((valueNode_2785141035.kind == 0))) {
      var valueNodeType_2785141040 = computeType_2785102512(ctx_2785018764, valueNode_2785141035, true);
      if ((valueNodeType_2785141040.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if ((typ_2785140976.kind == 1)) {
      typ_2785140976 = valueNodeType_2785141040;
      }
      
      if (!(HEX3DHEX3D_2868904464(valueNodeType_2785141040, typ_2785140976))) {
      var Temporary49 = nimCopy(null, valueNode_2785141035.id, NTI2298478595);
      ids_2785134266.push(Temporary49);;
      var fmtRes_2785141057 = [mnewString(0)];
      fmtRes_2785141057[0].push.apply(fmtRes_2785141057[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2785140702(fmtRes_2785141057, 0, typ_2785140976, []);
      fmtRes_2785141057[0].push.apply(fmtRes_2785141057[0], [44,32,103,111,116,32]);;
      formatValue_2785140702(fmtRes_2785141057, 0, valueNodeType_2785141040, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785141057[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2785131895 = typ_2785140976;
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 1)) {
      var id_2785141076 = nimCopy(null, node_2785018765.reff, NTI2298478595);
      var symbols_2785141077 = computeSymbols_2785112618(ctx_2785018764, node_2785018765, true);
      if (contains_2785141154(symbols_2785141077, id_2785141076)) {
      var symbol_2785141681 = (Temporary50 = HEX5BHEX5D_2785141409(symbols_2785141077, id_2785141076), Temporary50)[0][Temporary50[1]];
      result_2785131895 = computeSymbolType_2785116090(ctx_2785018764, symbol_2785141681, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_2785018765.id, NTI2298478595);
      ids_2785134266.push(Temporary51);;
      var fmtRes_2785141690 = [mnewString(0)];
      fmtRes_2785141690[0].push.apply(fmtRes_2785141690[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_2801795292(fmtRes_2785141690, 0, id_2785141076, []);
      fmtRes_2785141690[0].push.apply(fmtRes_2785141690[0], [39]);;
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785141690[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 7)) {
      if ((len_2768240728(node_2785018765) == 0)) {
      result_2785131895 = voidType_2868904318();
      break BeforeRet;
      }
      
      var lastType_2785141704 = null;
      Label52: {
        var child_2785141708 = null;
        var i_2734686331 = 0;
        var L_2734686332 = (node_2785018765.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2734686331 < L_2734686332)) break Label54;
              child_2785141708 = node_2785018765.children[chckIndx(i_2734686331, 0, (node_2785018765.children).length - 1)];
              lastType_2785141704 = computeType_2785102512(ctx_2785018764, child_2785141708, true);
              if ((lastType_2785141704.kind == 0)) {
              result_2785131895 = errorType_2868904282();
              break BeforeRet;
              }
              
              i_2734686331 = addInt(i_2734686331, 1);
              if (!(((node_2785018765.children).length == L_2734686332))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_2785131895 = lastType_2785141704;
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 9)) {
      if ((len_2768240728(node_2785018765) < 2)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var ok_2785141717 = true;
      var commonType_2785141720 = [none_2785102493()];
      var index_2785141721 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_2785141721, 1) < len_2768240728(node_2785018765))) break Label56;
            Label57: {
              try {
              var condition_2785141726 = HEX5BHEX5D_2768240724(node_2785018765, index_2785141721);
              var trueCase_2785141727 = HEX5BHEX5D_2768240724(node_2785018765, addInt(index_2785141721, 1));
              var conditionType_2785141728 = computeType_2785102512(ctx_2785018764, condition_2785141726, true);
              if ((conditionType_2785141728.kind == 0)) {
              ok_2785141717 = false;
              }
              else {
              if (!((conditionType_2785141728.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_2785141726.id, NTI2298478595);
              ids_2785134266.push(Temporary59);;
              var fmtRes_2785141745 = [mnewString(0)];
              fmtRes_2785141745[0].push.apply(fmtRes_2785141745[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_2785140702(fmtRes_2785141745, 0, conditionType_2785141728, []);
              diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785141745[0], NTI33554449)});;
              ok_2785141717 = false;
              }
              }
              var trueCaseType_2785141755 = computeType_2785102512(ctx_2785018764, trueCase_2785141727, true);
              if ((trueCaseType_2785141755.kind == 0)) {
              ok_2785141717 = false;
              break Label57;
              }
              
              if ((isNone_2785141764(commonType_2785141720[0]) || HEX3DHEX3D_2868904464(trueCaseType_2785141755, (Temporary60 = get_2785141807(commonType_2785141720[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_2785141720[0] = nimCopy(commonType_2785141720[0], some_2785102480(trueCaseType_2785141755), NTI2785067720);
              }
              else {
                commonType_2785141720[0] = nimCopy(commonType_2785141720[0], some_2785102480(voidType_2868904318()), NTI2785067720);
              }
              
              } finally {
              index_2785141721 = addInt(index_2785141721, 2);
              }
            };
          }
      };
      if (!((modInt(len_2768240728(node_2785018765), 2) == 0))) {
      var falseCaseType_2785141834 = computeType_2785102512(ctx_2785018764, last_2768240898(node_2785018765), true);
      if ((falseCaseType_2785141834.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if ((isNone_2785141764(commonType_2785141720[0]) || HEX3DHEX3D_2868904464(falseCaseType_2785141834, (Temporary61 = get_2785141807(commonType_2785141720[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_2785141720[0] = nimCopy(commonType_2785141720[0], some_2785102480(falseCaseType_2785141834), NTI2785067720);
      }
      else {
        commonType_2785141720[0] = nimCopy(commonType_2785141720[0], some_2785102480(voidType_2868904318()), NTI2785067720);
      }
      
      }
      
      if (!(ok_2785141717)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      result_2785131895 = get_2785141925(commonType_2785141720[0], voidType_2868904318());
      break BeforeRet;
      }
      else {
      if ((expr_2785140639.kind == 10)) {
      if ((len_2768240728(node_2785018765) < 2)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var ok_2785141946 = true;
      var conditionType_2785141947 = computeType_2785102512(ctx_2785018764, HEX5BHEX5D_2768240724(node_2785018765, 0), true);
      if ((conditionType_2785141947.kind == 0)) {
      ok_2785141946 = false;
      }
      else {
      if (!((conditionType_2785141947.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2768240724(node_2785018765, 0).id, NTI2298478595);
      ids_2785134266.push(Temporary62);;
      var fmtRes_2785141964 = [mnewString(0)];
      fmtRes_2785141964[0].push.apply(fmtRes_2785141964[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_2785140702(fmtRes_2785141964, 0, conditionType_2785141947, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785141964[0], NTI33554449)});;
      ok_2785141946 = false;
      }
      }
      var bodyType_2785141974 = computeType_2785102512(ctx_2785018764, HEX5BHEX5D_2768240724(node_2785018765, 1), true);
      if ((bodyType_2785141974.kind == 0)) {
      ok_2785141946 = false;
      }
      
      if (ok_2785141946) {
      result_2785131895 = voidType_2868904318();
      break BeforeRet;
      }
      else {
        result_2785131895 = errorType_2868904282();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_2785140639.kind == 13)) {
      if ((len_2768240728(node_2785018765) < 2)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var target_2785141983 = HEX5BHEX5D_2768240724(node_2785018765, 0);
      var value_2785141984 = HEX5BHEX5D_2768240724(node_2785018765, 1);
      var targetType_2785141985 = computeType_2785102512(ctx_2785018764, target_2785141983, true);
      if ((targetType_2785141985.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      var valueType_2785141990 = computeType_2785102512(ctx_2785018764, value_2785141984, true);
      if ((valueType_2785141990.kind == 0)) {
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_2868904464(targetType_2785141985, valueType_2785141990))) {
      var Temporary63 = nimCopy(null, value_2785141984.id, NTI2298478595);
      ids_2785134266.push(Temporary63);;
      var fmtRes_2785142003 = [mnewString(0)];
      fmtRes_2785142003[0].push.apply(fmtRes_2785142003[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_2785140702(fmtRes_2785142003, 0, valueType_2785141990, []);
      fmtRes_2785142003[0].push.apply(fmtRes_2785142003[0], [32,116,111,32]);;
      formatValue_2785140702(fmtRes_2785142003, 0, targetType_2785141985, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785142003[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
        var oHEX60gensym764_2785142020 = computeSymbol_2785109118(ctx_2785018764, target_2785141983, true);
        if (!isSome_2868905495(oHEX60gensym764_2785142020)) Temporary64 = false; else {          var sym_2785142066 = get_2868905515(oHEX60gensym764_2785142020);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_2785142066.kind == 1)) {
      var Temporary65 = nimCopy(null, target_2785141983.id, NTI2298478595);
      ids_2785134266.push(Temporary65);;
      var fmtRes_2785142079 = [mnewString(0)];
      fmtRes_2785142079[0].push.apply(fmtRes_2785142079[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_2785142080(fmtRes_2785142079, 0, sym_2785142066, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785142079[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      if (!((sym_2785142066.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,53,51,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_2785142066;
        if (ConstSet60[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI2868903945)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_2785141983.id, NTI2298478595);
      ids_2785134266.push(Temporary67);;
      var fmtRes_2785142110 = [mnewString(0)];
      fmtRes_2785142110[0].push.apply(fmtRes_2785142110[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_2785142080(fmtRes_2785142110, 0, sym_2785142066, []);
      diagnostics_2785134261.push({message: nimCopy(null, fmtRes_2785142110[0], NTI33554449)});;
      result_2785131895 = errorType_2868904282();
      break BeforeRet;
      }
      
      }
      
      result_2785131895 = voidType_2868904318();
      break BeforeRet;
      }
      else {
        result_2785131895 = errorType_2868904282();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_2785134261).length)) {
    HEX5BHEX5DHEX3D_2785134334(ctx_2785018764.diagnosticsPerQuery, key_2785131908, ids_2785134266);
    Label68: {
      var i_2785135918 = 0;
      var colontmp__2734686316 = 0;
      colontmp__2734686316 = (ids_2785134266).length - 1;
      var res_2734686317 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2734686317 <= colontmp__2734686316)) break Label70;
            i_2785135918 = res_2734686317;
            var id_2785135919 = nimCopy(null, ids_2785134266[chckIndx(i_2785135918, 0, (ids_2785134266).length - 1)], NTI2298478595);
            var diag_2785135920 = nimCopy(null, diagnostics_2785134261[chckIndx(i_2785135918, 0, (diagnostics_2785134261).length - 1)], NTI2785017859);
            if (!(contains_2785135997(ctx_2785018764.diagnosticsPerNode, id_2785135919))) {
            HEX5BHEX5DHEX3D_2785136079(ctx_2785018764.diagnosticsPerNode, id_2785135919, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_2785137813(HEX5BHEX5D_2785132639(ctx_2785018764.diagnosticsPerNode, id_2785135919).queries, key_2785131908))) {
            HEX5BHEX5DHEX3D_2785137984(HEX5BHEX5D_2785132639(ctx_2785018764.diagnosticsPerNode, id_2785135919).queries, key_2785131908, []);
            }
            
            var Temporary72 = nimCopy(null, diag_2785135920, NTI2785017859);
            (Temporary71 = HEX5BHEX5D_2785139717(HEX5BHEX5D_2785132639(ctx_2785018764.diagnosticsPerNode, id_2785135919).queries, key_2785131908), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2734686317 = addInt(res_2734686317, 1);
          }
      };
    };
    }
    else {
    del_2785139890(ctx_2785018764.diagnosticsPerQuery, key_2785131908);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym632_2785131897 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868904342(result_2785131895) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym632_2785131897) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785131895;

}

function getOrDefault_2785020314(t_2785020317, key_2785020318, default_2785020319) {
    var Temporary1;

  var result_2785020320 = null;

    var hcHEX60gensym143_2785020323 = [0];
    var indexHEX60gensym143_2785020682 = rawGet_2785020324(t_2785020317, key_2785020318, hcHEX60gensym143_2785020323, 0);
    if ((0 <= indexHEX60gensym143_2785020682)) {
    Temporary1 = t_2785020317.data[chckIndx(indexHEX60gensym143_2785020682, 0, (t_2785020317.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785020319;
    }
    
    result_2785020320 = Temporary1;

  return result_2785020320;

}

function newDoublyLinkedNode_2785020807(value_2785020809) {
  var result_2785020810 = null;

    result_2785020810 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2785020810.value = nimCopy(result_2785020810.value, value_2785020809, NTI2785018285);

  return result_2785020810;

}

function mustRehash_2785021157(t_2785021159) {
  var result_2785021160 = false;

    if (!((t_2785021159.counter < (t_2785021159.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785021160 = ((mulInt((t_2785021159.data).length, 2) < mulInt(t_2785021159.counter, 3)) || (subInt((t_2785021159.data).length, t_2785021159.counter) < 4));

  return result_2785021160;

}

function rawInsert_2785021850(t_2785021854, data_2785021855, data_2785021855_Idx, key_2785021856, val_2785021857, hc_2785021858, h_2785021859) {
    data_2785021855[data_2785021855_Idx][chckIndx(h_2785021859, 0, (data_2785021855[data_2785021855_Idx]).length - 1)].Field1 = key_2785021856;
    data_2785021855[data_2785021855_Idx][chckIndx(h_2785021859, 0, (data_2785021855[data_2785021855_Idx]).length - 1)].Field2 = val_2785021857;
    data_2785021855[data_2785021855_Idx][chckIndx(h_2785021859, 0, (data_2785021855[data_2785021855_Idx]).length - 1)].Field0 = hc_2785021858;

  
}

function enlarge_2785021414(t_2785021417) {
    var n_2785021420 = [];
    n_2785021420 = new Array(chckRange(mulInt((t_2785021417.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785021417.data).length, 2), 0, 2147483647) ; ++i) { n_2785021420[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785021417.data; t_2785021417.data = n_2785021420; n_2785021420 = Temporary1;    Label2: {
      var i_2785021518 = 0;
      var colontmp__2734686480 = 0;
      colontmp__2734686480 = (n_2785021420).length - 1;
      var res_2734686481 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686481 <= colontmp__2734686480)) break Label4;
            i_2785021518 = res_2734686481;
            var eh_2785021599 = n_2785021420[chckIndx(i_2785021518, 0, (n_2785021420).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785021599)) {
            var j_2785021603 = (eh_2785021599 & (t_2785021417.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785021417.data[chckIndx(j_2785021603, 0, (t_2785021417.data).length - 1)].Field0)) break Label6;
                  j_2785021603 = nextTry_1342177315(j_2785021603, (t_2785021417.data).length - 1);
                }
            };
            rawInsert_2785021850(t_2785021417, t_2785021417, "data", n_2785021420[chckIndx(i_2785021518, 0, (n_2785021420).length - 1)].Field1, n_2785021420[chckIndx(i_2785021518, 0, (n_2785021420).length - 1)].Field2, eh_2785021599, j_2785021603);
            }
            
            res_2734686481 = addInt(res_2734686481, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785022100(t_2785022103, key_2785022104, hc_2785022105) {
  var result_2785022106 = 0;

  BeforeRet: {
    if (((t_2785022103.data).length == 0)) {
    result_2785022106 = -1;
    break BeforeRet;
    }
    
    var h_2785022191 = (hc_2785022105 & (t_2785022103.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785022103.data[chckIndx(h_2785022191, 0, (t_2785022103.data).length - 1)].Field0)) break Label2;
          if (((t_2785022103.data[chckIndx(h_2785022191, 0, (t_2785022103.data).length - 1)].Field0 == hc_2785022105) && (t_2785022103.data[chckIndx(h_2785022191, 0, (t_2785022103.data).length - 1)].Field1 == key_2785022104))) {
          result_2785022106 = h_2785022191;
          break BeforeRet;
          }
          
          h_2785022191 = nextTry_1342177315(h_2785022191, (t_2785022103.data).length - 1);
        }
    };
    result_2785022106 = subInt(-1, h_2785022191);
  };

  return result_2785022106;

}

function HEX5BHEX5DHEX3D_2785020889(t_2785020892, key_2785020893, val_2785020894) {
    if (((t_2785020892.data).length == 0)) {
    var correctSizeHEX60gensym148_2785020977 = slotsNeeded_1342177323(32);
    t_2785020892.counter = 0;
    t_2785020892.data = new Array(chckRange(correctSizeHEX60gensym148_2785020977, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_2785020977, 0, 2147483647) ; ++i) { t_2785020892.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785020982 = [0];
    var index_2785020989 = rawGet_2785020324(t_2785020892, key_2785020893, hc_2785020982, 0);
    if ((0 <= index_2785020989)) {
    t_2785020892.data[chckIndx(index_2785020989, 0, (t_2785020892.data).length - 1)].Field2 = val_2785020894;
    }
    else {
      if (((t_2785020892.data).length == 0)) {
      var correctSizeHEX60gensym151_2785021152 = slotsNeeded_1342177323(32);
      t_2785020892.counter = 0;
      t_2785020892.data = new Array(chckRange(correctSizeHEX60gensym151_2785021152, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym151_2785021152, 0, 2147483647) ; ++i) { t_2785020892.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785021157(t_2785020892)) {
      enlarge_2785021414(t_2785020892);
      index_2785020989 = rawGetKnownHC_2785022100(t_2785020892, key_2785020893, hc_2785020982[0]);
      }
      
      index_2785020989 = subInt(-1, index_2785020989);
      rawInsert_2785021850(t_2785020892, t_2785020892, "data", key_2785020893, val_2785020894, hc_2785020982[0], index_2785020989);
      t_2785020892.counter = addInt(t_2785020892.counter, 1);
    }
    

  
}

function rawGet_2785022731(t_2785022734, key_2785022735, hc_2785022736, hc_2785022736_Idx) {
  var result_2785022737 = 0;

  BeforeRet: {
    hc_2785022736[hc_2785022736_Idx] = hash_2768242995(key_2785022735);
    if ((hc_2785022736[hc_2785022736_Idx] == 0)) {
    hc_2785022736[hc_2785022736_Idx] = 314159265;
    }
    
    if (((t_2785022734.data).length == 0)) {
    result_2785022737 = -1;
    break BeforeRet;
    }
    
    var h_2785022823 = (hc_2785022736[hc_2785022736_Idx] & (t_2785022734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785022734.data[chckIndx(h_2785022823, 0, (t_2785022734.data).length - 1)].Field0)) break Label2;
          if (((t_2785022734.data[chckIndx(h_2785022823, 0, (t_2785022734.data).length - 1)].Field0 == hc_2785022736[hc_2785022736_Idx]) && (t_2785022734.data[chckIndx(h_2785022823, 0, (t_2785022734.data).length - 1)].Field1 == key_2785022735))) {
          result_2785022737 = h_2785022823;
          break BeforeRet;
          }
          
          h_2785022823 = nextTry_1862271018(h_2785022823, (t_2785022734.data).length - 1);
        }
    };
    result_2785022737 = subInt(-1, h_2785022823);
  };

  return result_2785022737;

}

function exclImpl_2785022725(s_2785022727, key_2785022728) {
          var Temporary5;

  var result_2785022729 = false;

  BeforeRet: {
    var hc_2785022730 = [0];
    var i_2785023089 = rawGet_2785022731(s_2785022727, key_2785022728, hc_2785022730, 0);
    var msk_2785023093 = (s_2785022727.data).length - 1;
    result_2785022729 = true;
    if ((0 <= i_2785023089)) {
    result_2785022729 = false;
    s_2785022727.counter = subInt(s_2785022727.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785023099 = i_2785023089;
          var r_2785023100 = j_2785023099;
          s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)].Field0 = 0;
          s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785023089 = (addInt(i_2785023089, 1) & msk_2785023093);
                if (isEmpty_1862271012(s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785023100 = (s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)].Field0 & msk_2785023093);
                if (!(((((r_2785023100 <= i_2785023089) && (j_2785023099 < r_2785023100)) || ((j_2785023099 < r_2785023100) && (i_2785023089 < j_2785023099))) || ((i_2785023089 < j_2785023099) && (r_2785023100 <= i_2785023089))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)];
          s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)] = genericReset(s_2785022727.data[chckIndx(i_2785023089, 0, (s_2785022727.data).length - 1)], NTI2785018341);
          s_2785022727.data[chckIndx(j_2785023099, 0, (s_2785022727.data).length - 1)] = nimCopy(s_2785022727.data[chckIndx(j_2785023099, 0, (s_2785022727.data).length - 1)], Temporary5, NTI2785018341);
        }
    };
    }
    
  };

  return result_2785022729;

}

function excl_2785022710(s_2785022712, key_2785022713) {
    var _ = exclImpl_2785022725(s_2785022712, key_2785022713);

  
}

function len_2785023844(t_2785023847) {
  var result_2785023848 = 0;

    result_2785023848 = t_2785023847.counter;

  return result_2785023848;

}

function len_2785023761(cache_2785023764) {
  var result_2785023765 = 0;

    result_2785023765 = len_2785023844(cache_2785023764.table);

  return result_2785023765;

}

function mustRehash_2785023985(t_2785023987) {
  var result_2785023988 = false;

    if (!((t_2785023987.counter < (t_2785023987.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785023988 = ((mulInt((t_2785023987.data).length, 2) < mulInt(t_2785023987.counter, 3)) || (subInt((t_2785023987.data).length, t_2785023987.counter) < 4));

  return result_2785023988;

}

function rawGetKnownHC_2785024591(t_2785024594, key_2785024595, hc_2785024596) {
  var result_2785024597 = 0;

  BeforeRet: {
    if (((t_2785024594.data).length == 0)) {
    result_2785024597 = -1;
    break BeforeRet;
    }
    
    var h_2785024682 = (hc_2785024596 & (t_2785024594.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785024594.data[chckIndx(h_2785024682, 0, (t_2785024594.data).length - 1)].Field0)) break Label2;
          if (((t_2785024594.data[chckIndx(h_2785024682, 0, (t_2785024594.data).length - 1)].Field0 == hc_2785024596) && (t_2785024594.data[chckIndx(h_2785024682, 0, (t_2785024594.data).length - 1)].Field1 == key_2785024595))) {
          result_2785024597 = h_2785024682;
          break BeforeRet;
          }
          
          h_2785024682 = nextTry_1862271018(h_2785024682, (t_2785024594.data).length - 1);
        }
    };
    result_2785024597 = subInt(-1, h_2785024682);
  };

  return result_2785024597;

}

function rawInsert_2785025095(s_2785025097, data_2785025098, data_2785025098_Idx, key_2785025099, hc_2785025100, h_2785025101) {
    if (((data_2785025098[data_2785025098_Idx]).length == 0)) {
    var correctSizeHEX60gensym170_2785025184 = slotsNeeded_1862271026(64);
    s_2785025097.counter = 0;
    s_2785025097.data = new Array(chckRange(correctSizeHEX60gensym170_2785025184, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym170_2785025184, 0, 2147483647) ; ++i) { s_2785025097.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2785025098[data_2785025098_Idx][chckIndx(h_2785025101, 0, (data_2785025098[data_2785025098_Idx]).length - 1)].Field1 = key_2785025099;
    data_2785025098[data_2785025098_Idx][chckIndx(h_2785025101, 0, (data_2785025098[data_2785025098_Idx]).length - 1)].Field0 = hc_2785025100;

  
}

function enlarge_2785024248(s_2785024250) {
    var n_2785024252 = [];
    n_2785024252 = new Array(chckRange(mulInt((s_2785024250.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785024250.data).length, 2), 0, 2147483647) ; ++i) { n_2785024252[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2785024250.data; s_2785024250.data = n_2785024252; n_2785024252 = Temporary1;    Label2: {
      var i_2785024350 = 0;
      var colontmp__2734686489 = 0;
      colontmp__2734686489 = (n_2785024252).length - 1;
      var res_2734686490 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686490 <= colontmp__2734686489)) break Label4;
            i_2785024350 = res_2734686490;
            if (isFilled_1862271015(n_2785024252[chckIndx(i_2785024350, 0, (n_2785024252).length - 1)].Field0)) {
            var j_2785024930 = subInt(-1, rawGetKnownHC_2785024591(s_2785024250, n_2785024252[chckIndx(i_2785024350, 0, (n_2785024252).length - 1)].Field1, n_2785024252[chckIndx(i_2785024350, 0, (n_2785024252).length - 1)].Field0));
            rawInsert_2785025095(s_2785024250, s_2785024250, "data", n_2785024252[chckIndx(i_2785024350, 0, (n_2785024252).length - 1)].Field1, n_2785024252[chckIndx(i_2785024350, 0, (n_2785024252).length - 1)].Field0, j_2785024930);
            }
            
            res_2734686490 = addInt(res_2734686490, 1);
          }
      };
    };

  
}

function incl_2785023869(s_2785023871, key_2785023872) {
    if (((s_2785023871.data).length == 0)) {
    var correctSizeHEX60gensym163_2785023955 = slotsNeeded_1862271026(64);
    s_2785023871.counter = 0;
    s_2785023871.data = new Array(chckRange(correctSizeHEX60gensym163_2785023955, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym163_2785023955, 0, 2147483647) ; ++i) { s_2785023871.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2785023970 = [0];
    var index_2785023984 = rawGet_2785022731(s_2785023871, key_2785023872, hc_2785023970, 0);
    if ((index_2785023984 < 0)) {
    if (mustRehash_2785023985(s_2785023871)) {
    enlarge_2785024248(s_2785023871);
    index_2785023984 = rawGetKnownHC_2785024591(s_2785023871, key_2785023872, hc_2785023970[0]);
    }
    
    rawInsert_2785025095(s_2785023871, s_2785023871, "data", key_2785023872, hc_2785023970[0], subInt(-1, index_2785023984));
    s_2785023871.counter = addInt(s_2785023871.counter, 1);
    }
    

  
}

function del_2785025451(t_2785025454, key_2785025455) {
    var hc_2785025456 = [0];
    var i_2785025463 = rawGet_2785020324(t_2785025454, key_2785025455, hc_2785025456, 0);
    var mskHEX60gensym36_2785025467 = (t_2785025454.data).length - 1;
    if ((0 <= i_2785025463)) {
    t_2785025454.counter = subInt(t_2785025454.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785025474 = i_2785025463;
            var rHEX60gensym36_2785025475 = jHEX60gensym36_2785025474;
            t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)].Field0 = 0;
            t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)].Field1 = null;
            t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785025463 = (addInt(i_2785025463, 1) & mskHEX60gensym36_2785025467);
                  if (isEmpty_1342177309(t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785025475 = (t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)].Field0 & mskHEX60gensym36_2785025467);
                  if (!(((((rHEX60gensym36_2785025475 <= i_2785025463) && (jHEX60gensym36_2785025474 < rHEX60gensym36_2785025475)) || ((jHEX60gensym36_2785025474 < rHEX60gensym36_2785025475) && (i_2785025463 < jHEX60gensym36_2785025474))) || ((i_2785025463 < jHEX60gensym36_2785025474) && (rHEX60gensym36_2785025475 <= i_2785025463))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785025454.data[chckIndx(jHEX60gensym36_2785025474, 0, (t_2785025454.data).length - 1)] = nimCopy(t_2785025454.data[chckIndx(jHEX60gensym36_2785025474, 0, (t_2785025454.data).length - 1)], t_2785025454.data[chckIndx(i_2785025463, 0, (t_2785025454.data).length - 1)], NTI2785018321);
          }
      };
    };
    }
    

  
}

function resize_2785023679(cache_2785023682) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785023682.capacity < len_2785023761(cache_2785023682))) break Label2;
          var t_2785023849 = cache_2785023682.list.tail;
          if (cache_2785023682.recordRemovedKeys) {
          incl_2785023869(cache_2785023682.removedKeys, t_2785023849.value.key);
          }
          
          del_2785025451(cache_2785023682.table, t_2785023849.value.key);
          remove_2785026210(cache_2785023682.list, t_2785023849);
        }
    };

  
}

function addNewNode_2785020799(cache_2785020802, key_2785020803, val_2785020804) {
    var node_2785020825 = newDoublyLinkedNode_2785020807({key: key_2785020803, val: val_2785020804});
    HEX5BHEX5DHEX3D_2785020889(cache_2785020802.table, key_2785020803, node_2785020825);
    prepend_2785022500(cache_2785020802.list, node_2785020825);
    if (cache_2785020802.recordRemovedKeys) {
    excl_2785022710(cache_2785020802.removedKeys, key_2785020803);
    }
    
    resize_2785023679(cache_2785020802);

  
}

function HEX5BHEX5DHEX3D_2785020219(cache_2785020222, key_2785020223, val_2785020224) {
    var node_2785020772 = getOrDefault_2785020314(cache_2785020222.table, key_2785020223, null);
    if ((node_2785020772 == null)) {
    addNewNode_2785020799(cache_2785020222, key_2785020223, val_2785020224);
    }
    else {
      node_2785020772.value.val = val_2785020224;
      remove_2785026210(cache_2785020222.list, node_2785020772);
      prepend_2785022500(cache_2785020222.list, node_2785020772);
    }
    

  
}

function HEX26_2868904515(x_2868904517, y_2868904518) {
  var result_2868904519 = [];

    result_2868904519 = new Array(chckRange(addInt((x_2868904517).length, (y_2868904518).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2868904517).length, (y_2868904518).length), 0, 2147483647) ; ++i) { result_2868904519[i] = 0; }    Label1: {
      var i_2868904537 = 0;
      var colontmp__2734686501 = 0;
      colontmp__2734686501 = subInt((x_2868904517).length, 1);
      var res_2734686502 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686502 <= colontmp__2734686501)) break Label3;
            i_2868904537 = res_2734686502;
            result_2868904519[chckIndx(i_2868904537, 0, (result_2868904519).length - 1)] = x_2868904517[chckIndx(i_2868904537, 0, (x_2868904517).length - 1)];
            res_2734686502 = addInt(res_2734686502, 1);
          }
      };
    };
    Label4: {
      var i_2868904545 = 0;
      var colontmp__2734686505 = 0;
      colontmp__2734686505 = subInt((y_2868904518).length, 1);
      var res_2734686506 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2734686506 <= colontmp__2734686505)) break Label6;
            i_2868904545 = res_2734686506;
            result_2868904519[chckIndx(addInt(i_2868904545, (x_2868904517).length), 0, (result_2868904519).length - 1)] = y_2868904518[chckIndx(i_2868904545, 0, (y_2868904518).length - 1)];
            res_2734686506 = addInt(res_2734686506, 1);
          }
      };
    };

  return result_2868904519;

}

function add_2868904553(x_2868904555, x_2868904555_Idx, y_2868904556) {
    var Temporary1;

    var xl_2868904560 = (x_2868904555[x_2868904555_Idx]).length;
    if (x_2868904555[x_2868904555_Idx].length < (Temporary1 = chckRange(addInt(xl_2868904560, (y_2868904556).length), 0, 2147483647), Temporary1)) { for (var i = x_2868904555[x_2868904555_Idx].length ; i < Temporary1 ; ++i) x_2868904555[x_2868904555_Idx].push(0); }
               else { x_2868904555[x_2868904555_Idx].length = Temporary1; };
    Label2: {
      var i_2868904575 = 0;
      var colontmp__2734686509 = 0;
      colontmp__2734686509 = (y_2868904556).length - 1;
      var res_2734686510 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686510 <= colontmp__2734686509)) break Label4;
            i_2868904575 = res_2734686510;
            x_2868904555[x_2868904555_Idx][chckIndx(addInt(xl_2868904560, i_2868904575), 0, (x_2868904555[x_2868904555_Idx]).length - 1)] = y_2868904556[chckIndx(i_2868904575, 0, (y_2868904556).length - 1)];
            res_2734686510 = addInt(res_2734686510, 1);
          }
      };
    };

  
}

function fingerprint_2868904508(typ_2868904509) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_2868904510 = [[]];

    switch (typ_2868904509.kind) {
    case 4:
      var Temporary1 = typ_2868904509;
      if (ConstSet61[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903939)); }
      result_2868904510[0] = nimCopy(null, HEX26_2868904515([typ_2868904509.kind], fingerprint_2868904508(Temporary1.returnType)), NTI2868904368);
      Label2: {
        var param_2868904552 = null;
        var colontmp__2734686496 = [];
        var Temporary3 = typ_2868904509;
        if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903939)); }
        colontmp__2734686496 = Temporary3.paramTypes;
        var i_2734686497 = 0;
        var L_2734686498 = (colontmp__2734686496).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2734686497 < L_2734686498)) break Label5;
              param_2868904552 = colontmp__2734686496[chckIndx(i_2734686497, 0, (colontmp__2734686496).length - 1)];
              add_2868904553(result_2868904510, 0, fingerprint_2868904508(param_2868904552));
              i_2734686497 = addInt(i_2734686497, 1);
              if (!(((colontmp__2734686496).length == L_2734686498))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_2868904509;
      if (ConstSet63[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903939)); }
      result_2868904510[0] = nimCopy(null, [typ_2868904509.kind, Temporary6.open], NTI2801795405);
      break;
    default: 
      result_2868904510[0] = nimCopy(null, [typ_2868904509.kind], NTI2868904362);
      break;
    }

  return result_2868904510[0];

}

function initDoublyLinkedList_2785026653() {
  var result_2785026655 = ({head: null, tail: null});

  return result_2785026655;

}

function initTable_2785026659(initialSize_2785026662) {
  var result_2785026663 = ({data: [], counter: 0});

    var correctSizeHEX60gensym171_2785026665 = slotsNeeded_1342177323(chckRange(initialSize_2785026662, 0, 2147483647));
    result_2785026663.counter = 0;
    result_2785026663.data = new Array(chckRange(correctSizeHEX60gensym171_2785026665, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym171_2785026665, 0, 2147483647) ; ++i) { result_2785026663.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785026663;

}

function newLruCache_2785026643(capacity_2785026646, recordRemovedKeys_2785026647) {
  var result_2785026648 = null;

    result_2785026648 = {capacity: capacity_2785026646, list: initDoublyLinkedList_2785026653(), table: initTable_2785026659(correctSize_2818572309(capacity_2785026646)), recordRemovedKeys: recordRemovedKeys_2785026647, removedKeys: ({data: [], counter: 0})};

  return result_2785026648;

}

function newCache_2785026638(capacity_2785026641) {
  var result_2785026642 = null;

    result_2785026642 = newLruCache_2785026643(capacity_2785026641, false);

  return result_2785026642;

}

function init_2785026633(result_2785026636, result_2785026636_Idx, capacity_2785026637) {
    result_2785026636[result_2785026636_Idx] = newCache_2785026638(capacity_2785026637);

  
}

function errorValue_2868904593() {
  var result_2868904594 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2868904594 = nimCopy(result_2868904594, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);

  return result_2868904594;

}

function HEX5BHEX5D_2919237397(s_2919237401, x_2919237402) {
  var result_2919237403 = [];

    var a_2919237405 = x_2919237402.a;
    var L_2919237411 = addInt(subInt(subInt((s_2919237401).length, x_2919237402.b), a_2919237405), 1);
    result_2919237403 = new Array(chckRange(L_2919237411, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2919237411, 0, 2147483647) ; ++i) { result_2919237403[i] = null; }    Label1: {
      var i_2919237420 = 0;
      var i_2734686520 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686520 < L_2919237411)) break Label3;
            i_2919237420 = i_2734686520;
            result_2919237403[chckIndx(i_2919237420, 0, (result_2919237403).length - 1)] = s_2919237401[chckIndx(addInt(i_2919237420, a_2919237405), 0, (s_2919237401).length - 1)];
            i_2734686520 = addInt(i_2734686520, 1);
          }
      };
    };

  return result_2919237403;

}

function formatValue_2868904741(result_2868904743, result_2868904743_Idx, value_2868904744, specifier_2868904745) {
    formatValue_738197675(result_2868904743, result_2868904743_Idx, HEX24_2768242647(value_2868904744), specifier_2868904745);

  
}

function hash_2868904655(x_2868904657) {
  var result_2868904658 = 0;

    result_2868904658 = hashWangYi1_1358954676(x_2868904657);

  return result_2868904658;

}

function imul_1358954788(a_1358954789, b_1358954790) {
  var result_1358954791 = 0;

    var mask_1358954792 = 65535;
    var aHi_1358954797 = ((a_1358954789 >>> 16) & mask_1358954792);
    var aLo_1358954798 = (a_1358954789 & mask_1358954792);
    var bHi_1358954803 = ((b_1358954790 >>> 16) & mask_1358954792);
    var bLo_1358954804 = (b_1358954790 & mask_1358954792);
    result_1358954791 = ((((aLo_1358954798 * bLo_1358954804) >>> 0) + (((((aHi_1358954797 * bLo_1358954804) >>> 0) + ((aLo_1358954798 * bHi_1358954803) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1358954791;

}

function rotl32_1358954809(x_1358954810, r_1358954811) {
  var result_1358954812 = 0;

    result_1358954812 = ((x_1358954810 << r_1358954811) | (x_1358954810 >>> subInt(32, r_1358954811)));

  return result_1358954812;

}

function murmurHash_1358954821(x_1358954822) {
  var result_1358954823 = 0;

  BeforeRet: {
    var size_1358954832 = (x_1358954822).length;
    var stepSize_1358954833 = 4;
    var n_1358954834 = divInt(size_1358954832, stepSize_1358954833);
    var h1_1358954835 = 0;
    var i_1358954836 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1358954836 < mulInt(n_1358954834, stepSize_1358954833))) break Label2;
          var k1_1358954837 = 0;
          var j_1358954838 = stepSize_1358954833;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1358954838)) break Label4;
                j_1358954838 = subInt(j_1358954838, 1);
                k1_1358954837 = ((k1_1358954837 << 8) | x_1358954822[chckIndx(addInt(i_1358954836, j_1358954838), 0, (x_1358954822).length - 1)]);
              }
          };
          i_1358954836 = addInt(i_1358954836, stepSize_1358954833);
          k1_1358954837 = imul_1358954788(k1_1358954837, 3432918353);
          k1_1358954837 = rotl32_1358954809(k1_1358954837, 15);
          k1_1358954837 = imul_1358954788(k1_1358954837, 461845907);
          h1_1358954835 = (h1_1358954835 ^ k1_1358954837);
          h1_1358954835 = rotl32_1358954809(h1_1358954835, 13);
          h1_1358954835 = ((((h1_1358954835 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1358954857 = 0;
    var rem_1358954858 = modInt(size_1358954832, stepSize_1358954833);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1358954858)) break Label6;
          rem_1358954858 = subInt(rem_1358954858, 1);
          k1_1358954857 = ((k1_1358954857 << 8) | x_1358954822[chckIndx(addInt(i_1358954836, rem_1358954858), 0, (x_1358954822).length - 1)]);
        }
    };
    k1_1358954857 = imul_1358954788(k1_1358954857, 3432918353);
    k1_1358954857 = rotl32_1358954809(k1_1358954857, 15);
    k1_1358954857 = imul_1358954788(k1_1358954857, 461845907);
    h1_1358954835 = (h1_1358954835 ^ k1_1358954857);
    h1_1358954835 = (h1_1358954835 ^ size_1358954832);
    h1_1358954835 = (h1_1358954835 ^ (h1_1358954835 >>> 16));
    h1_1358954835 = imul_1358954788(h1_1358954835, 2246822507);
    h1_1358954835 = (h1_1358954835 ^ (h1_1358954835 >>> 13));
    h1_1358954835 = imul_1358954788(h1_1358954835, 3266489909);
    h1_1358954835 = (h1_1358954835 ^ (h1_1358954835 >>> 16));
    result_1358954823 = (h1_1358954835 | 0);
    break BeforeRet;
  };

  return result_1358954823;

}

function hash_1358954923(x_1358954924) {
  var result_1358954925 = 0;

    result_1358954925 = murmurHash_1358954821((x_1358954924.slice(0, (x_1358954924).length - 1 + 1)));

  return result_1358954925;

}

function hash_2868904417(x_2868904419) {
  var result_2868904420 = 0;

    result_2868904420 = hashWangYi1_1358954676(x_2868904419);

  return result_2868904420;

}

function hash_2868904428(x_2868904430) {
  var result_2868904431 = 0;

    Label1: {
      var a_2868904445 = null;
      var i_2734686540 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686540 < (x_2868904430).length)) break Label3;
            a_2868904445 = x_2868904430[chckIndx(i_2734686540, 0, (x_2868904430).length - 1)];
            result_2868904431 = HEX21HEX26_1358954499(result_2868904431, hash_2868904414(a_2868904445));
            i_2734686540 = addInt(i_2734686540, 1);
          }
      };
    };
    result_2868904431 = HEX21HEX24_1358954514(result_2868904431);

  return result_2868904431;

}

function hash_2600471099(x_2600471101) {
  var result_2600471102 = 0;

    result_2600471102 = hashWangYi1_1358954676((x_2600471101 ? 1 : 0));

  return result_2600471102;

}

function hash_2868904414(typ_2868904415) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2868904416 = 0;

  BeforeRet: {
    switch (typ_2868904415.kind) {
    case 4:
      var Temporary2 = typ_2868904415;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903939)); }
      var Temporary3 = typ_2868904415;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903939)); }
      Temporary1 = ((hash_2868904417(typ_2868904415.kind) ^ hash_2868904414(Temporary2.returnType)) ^ hash_2868904428(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_2868904415;
      if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903939)); }
      Temporary1 = (hash_2868904417(typ_2868904415.kind) ^ hash_2600471099(Temporary4.open));
      break;
    default: 
      result_2868904416 = hash_2868904417(typ_2868904415.kind);
      break BeforeRet;
      break;
    }
    result_2868904416 = Temporary1;
  };

  return result_2868904416;

}

function hash_2868904652(value_2868904653) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_2868904654 = 0;

  BeforeRet: {
    switch (value_2868904653.kind) {
    case 0:
      result_2868904654 = hash_2868904655(value_2868904653.kind);
      break BeforeRet;
      break;
    case 1:
      result_2868904654 = hash_2868904655(value_2868904653.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_2868904653;
      if (ConstSet66[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
      result_2868904654 = hash_1358954668(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_2868904653;
      if (ConstSet67[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903942)); }
      result_2868904654 = hash_1358954923(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_2868904654 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2868904653;
      if (ConstSet68[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903942)); }
      result_2868904654 = hash_2768242995(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_2868904653;
      if (ConstSet72[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903942)); }
      result_2868904654 = hash_2868904414(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_2868904654;

}

function hash_2868904886(x_2868904888) {
  var result_2868904889 = 0;

    Label1: {
      var a_2868904903 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2734686533 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686533 < (x_2868904888).length)) break Label3;
            a_2868904903 = x_2868904888[chckIndx(i_2734686533, 0, (x_2868904888).length - 1)];
            result_2868904889 = HEX21HEX26_1358954499(result_2868904889, hash_2868904652(a_2868904903));
            i_2734686533 = addInt(i_2734686533, 1);
          }
      };
    };
    result_2868904889 = HEX21HEX24_1358954514(result_2868904889);

  return result_2868904889;

}

function hash_2868904904(x_2868904906) {
  var result_2868904907 = 0;

    result_2868904907 = HEX21HEX26_1358954499(result_2868904907, hash_1358954668(x_2868904906.val));
    result_2868904907 = HEX21HEX26_1358954499(result_2868904907, hash_2600471099(x_2868904906.has));
    result_2868904907 = HEX21HEX24_1358954514(result_2868904907);

  return result_2868904907;

}

function hash_2868904883(fec_2868904884) {
  var result_2868904885 = 0;

    result_2868904885 = HEX21HEX26_1358954499(HEX21HEX26_1358954499(hash_2768242995(fec_2868904884.node), hash_2868904886(fec_2868904884.arguments)), hash_2868904904(fec_2868904884.maxLoopIterations));
    result_2868904885 = HEX21HEX24_1358954514(result_2868904885);

  return result_2868904885;

}

function HEX3DHEX3D_2868904944(x_2868904946, y_2868904947) {
  var result_2868904948 = false;

  BeforeRet: {
    var sameObject_2868904955 = false;
    sameObject_2868904955 = x_2868904946 === y_2868904947
    if (sameObject_2868904955) {
    result_2868904948 = true;
    break BeforeRet;
    }
    
    if (!(((x_2868904946).length == (y_2868904947).length))) {
    result_2868904948 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2868904969 = 0;
      var colontmp__2734686543 = 0;
      colontmp__2734686543 = subInt((x_2868904946).length, 1);
      var res_2734686544 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686544 <= colontmp__2734686543)) break Label3;
            i_2868904969 = res_2734686544;
            if (!(HEX3DHEX3D_2868904672(x_2868904946[chckIndx(i_2868904969, 0, (x_2868904946).length - 1)], y_2868904947[chckIndx(i_2868904969, 0, (y_2868904947).length - 1)]))) {
            result_2868904948 = false;
            break BeforeRet;
            }
            
            res_2734686544 = addInt(res_2734686544, 1);
          }
      };
    };
    result_2868904948 = true;
    break BeforeRet;
  };

  return result_2868904948;

}

function isSome_1207962333(self_1207962335) {
  var result_1207962336 = false;

    result_1207962336 = self_1207962335.has;

  return result_1207962336;

}

function isNone_1207962410(self_1207962412) {
  var result_1207962413 = false;

    result_1207962413 = !(self_1207962412.has);

  return result_1207962413;

}

function HEX3DHEX3D_2868905020(a_2868905022, b_2868905023) {
  var result_2868905024 = false;

    result_2868905024 = (((isSome_1207962333(a_2868905022) && isSome_1207962333(b_2868905023)) && (a_2868905022.val == b_2868905023.val)) || (isNone_1207962410(a_2868905022) && isNone_1207962410(b_2868905023)));

  return result_2868905024;

}

function HEX3DHEX3D_2868904927(a_2868904928, b_2868904929) {
  var result_2868904930 = false;

  BeforeRet: {
    if ((a_2868904928 == null)) {
    result_2868904930 = (b_2868904929 == null);
    break BeforeRet;
    }
    
    if ((b_2868904929 == null)) {
    result_2868904930 = false;
    break BeforeRet;
    }
    
    if (!((a_2868904928.node == b_2868904929.node))) {
    result_2868904930 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2868904944(a_2868904928.arguments, b_2868904929.arguments))) {
    result_2868904930 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2868905020(a_2868904928.maxLoopIterations, b_2868904929.maxLoopIterations))) {
    result_2868904930 = false;
    break BeforeRet;
    }
    
    result_2868904930 = true;
    break BeforeRet;
  };

  return result_2868904930;

}

function getItem_2785095888(selfHEX60gensym95_2785095889) {
  var result_2785095890 = {Field0: ({id: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2298478667(selfHEX60gensym95_2785095889.id, null_2298478708)) {
    selfHEX60gensym95_2785095889.id = nimCopy(selfHEX60gensym95_2785095889.id, newId_2298478623(), NTI2298478595);
    }
    
    if (!(!(HEX3DHEX3D_2298478667(selfHEX60gensym95_2785095889.id, null_2298478708)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,57,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2734686546 = nimCopy(null, selfHEX60gensym95_2785095889.id, NTI2298478595);
    var colontmp__2734686547 = 4;
    result_2785095890 = nimCopy(result_2785095890, {Field0: nimCopy(null, colontmp__2734686546, NTI2298478595), Field1: colontmp__2734686547}, NTI2801795097);
    break BeforeRet;
  };

  return result_2785095890;

}

function rawGet_2785051809(t_2785051812, key_2785051813, hc_2785051814, hc_2785051814_Idx) {
  var result_2785051815 = 0;

  BeforeRet: {
    hc_2785051814[hc_2785051814_Idx] = hash_2785018995(key_2785051813);
    if ((hc_2785051814[hc_2785051814_Idx] == 0)) {
    hc_2785051814[hc_2785051814_Idx] = 314159265;
    }
    
    if (((t_2785051812.data).length == 0)) {
    result_2785051815 = -1;
    break BeforeRet;
    }
    
    var h_2785051904 = (hc_2785051814[hc_2785051814_Idx] & (t_2785051812.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785051812.data[chckIndx(h_2785051904, 0, (t_2785051812.data).length - 1)].Field0)) break Label2;
          if (((t_2785051812.data[chckIndx(h_2785051904, 0, (t_2785051812.data).length - 1)].Field0 == hc_2785051814[hc_2785051814_Idx]) && HEX3DHEX3D_2785019332(t_2785051812.data[chckIndx(h_2785051904, 0, (t_2785051812.data).length - 1)].Field1, key_2785051813))) {
          result_2785051815 = h_2785051904;
          break BeforeRet;
          }
          
          h_2785051904 = nextTry_1342177315(h_2785051904, (t_2785051812.data).length - 1);
        }
    };
    result_2785051815 = subInt(-1, h_2785051904);
  };

  return result_2785051815;

}

function getOrDefault_2785096139(t_2785096142, key_2785096143, default_2785096144) {
    var Temporary1;

  var result_2785096145 = null;

    var hcHEX60gensym516_2785096148 = [0];
    var indexHEX60gensym516_2785096155 = rawGet_2785051809(t_2785096142, key_2785096143, hcHEX60gensym516_2785096148, 0);
    if ((0 <= indexHEX60gensym516_2785096155)) {
    Temporary1 = t_2785096142.data[chckIndx(indexHEX60gensym516_2785096155, 0, (t_2785096142.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785096144;
    }
    
    result_2785096145 = Temporary1;

  return result_2785096145;

}

function newDoublyLinkedNode_2785096271(value_2785096273) {
  var result_2785096274 = null;

    result_2785096274 = ({next: null, prev: null, value: ({key: {Field0: ({id: 0}), Field1: 0}, val: null})});
    result_2785096274.value = nimCopy(result_2785096274.value, value_2785096273, NTI2785018183);

  return result_2785096274;

}

function mustRehash_2785096612(t_2785096614) {
  var result_2785096615 = false;

    if (!((t_2785096614.counter < (t_2785096614.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785096615 = ((mulInt((t_2785096614.data).length, 2) < mulInt(t_2785096614.counter, 3)) || (subInt((t_2785096614.data).length, t_2785096614.counter) < 4));

  return result_2785096615;

}

function rawInsert_2785097305(t_2785097309, data_2785097310, data_2785097310_Idx, key_2785097311, val_2785097312, hc_2785097313, h_2785097314) {
    data_2785097310[data_2785097310_Idx][chckIndx(h_2785097314, 0, (data_2785097310[data_2785097310_Idx]).length - 1)].Field1 = nimCopy(data_2785097310[data_2785097310_Idx][chckIndx(h_2785097314, 0, (data_2785097310[data_2785097310_Idx]).length - 1)].Field1, key_2785097311, NTI2801795097);
    data_2785097310[data_2785097310_Idx][chckIndx(h_2785097314, 0, (data_2785097310[data_2785097310_Idx]).length - 1)].Field2 = val_2785097312;
    data_2785097310[data_2785097310_Idx][chckIndx(h_2785097314, 0, (data_2785097310[data_2785097310_Idx]).length - 1)].Field0 = hc_2785097313;

  
}

function enlarge_2785096869(t_2785096872) {
    var n_2785096875 = [];
    n_2785096875 = new Array(chckRange(mulInt((t_2785096872.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785096872.data).length, 2), 0, 2147483647) ; ++i) { n_2785096875[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2785096872.data; t_2785096872.data = n_2785096875; n_2785096875 = Temporary1;    Label2: {
      var i_2785096973 = 0;
      var colontmp__2734686551 = 0;
      colontmp__2734686551 = (n_2785096875).length - 1;
      var res_2734686552 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686552 <= colontmp__2734686551)) break Label4;
            i_2785096973 = res_2734686552;
            var eh_2785097054 = n_2785096875[chckIndx(i_2785096973, 0, (n_2785096875).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785097054)) {
            var j_2785097058 = (eh_2785097054 & (t_2785096872.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785096872.data[chckIndx(j_2785097058, 0, (t_2785096872.data).length - 1)].Field0)) break Label6;
                  j_2785097058 = nextTry_1342177315(j_2785097058, (t_2785096872.data).length - 1);
                }
            };
            rawInsert_2785097305(t_2785096872, t_2785096872, "data", n_2785096875[chckIndx(i_2785096973, 0, (n_2785096875).length - 1)].Field1, n_2785096875[chckIndx(i_2785096973, 0, (n_2785096875).length - 1)].Field2, eh_2785097054, j_2785097058);
            }
            
            res_2734686552 = addInt(res_2734686552, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785097555(t_2785097558, key_2785097559, hc_2785097560) {
  var result_2785097561 = 0;

  BeforeRet: {
    if (((t_2785097558.data).length == 0)) {
    result_2785097561 = -1;
    break BeforeRet;
    }
    
    var h_2785097646 = (hc_2785097560 & (t_2785097558.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785097558.data[chckIndx(h_2785097646, 0, (t_2785097558.data).length - 1)].Field0)) break Label2;
          if (((t_2785097558.data[chckIndx(h_2785097646, 0, (t_2785097558.data).length - 1)].Field0 == hc_2785097560) && HEX3DHEX3D_2785019332(t_2785097558.data[chckIndx(h_2785097646, 0, (t_2785097558.data).length - 1)].Field1, key_2785097559))) {
          result_2785097561 = h_2785097646;
          break BeforeRet;
          }
          
          h_2785097646 = nextTry_1342177315(h_2785097646, (t_2785097558.data).length - 1);
        }
    };
    result_2785097561 = subInt(-1, h_2785097646);
  };

  return result_2785097561;

}

function HEX5BHEX5DHEX3D_2785096344(t_2785096347, key_2785096348, val_2785096349) {
    if (((t_2785096347.data).length == 0)) {
    var correctSizeHEX60gensym519_2785096432 = slotsNeeded_1342177323(32);
    t_2785096347.counter = 0;
    t_2785096347.data = new Array(chckRange(correctSizeHEX60gensym519_2785096432, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym519_2785096432, 0, 2147483647) ; ++i) { t_2785096347.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2785096437 = [0];
    var index_2785096444 = rawGet_2785051809(t_2785096347, key_2785096348, hc_2785096437, 0);
    if ((0 <= index_2785096444)) {
    t_2785096347.data[chckIndx(index_2785096444, 0, (t_2785096347.data).length - 1)].Field2 = val_2785096349;
    }
    else {
      if (((t_2785096347.data).length == 0)) {
      var correctSizeHEX60gensym522_2785096607 = slotsNeeded_1342177323(32);
      t_2785096347.counter = 0;
      t_2785096347.data = new Array(chckRange(correctSizeHEX60gensym522_2785096607, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym522_2785096607, 0, 2147483647) ; ++i) { t_2785096347.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2785096612(t_2785096347)) {
      enlarge_2785096869(t_2785096347);
      index_2785096444 = rawGetKnownHC_2785097555(t_2785096347, key_2785096348, hc_2785096437[0]);
      }
      
      index_2785096444 = subInt(-1, index_2785096444);
      rawInsert_2785097305(t_2785096347, t_2785096347, "data", key_2785096348, val_2785096349, hc_2785096437[0], index_2785096444);
      t_2785096347.counter = addInt(t_2785096347.counter, 1);
    }
    

  
}

function prepend_2785052765(L_2785052767, n_2785052768) {
    n_2785052768.prev = null;
    n_2785052768.next = L_2785052767.head;
    if (!((L_2785052767.head == null))) {
    if (!((L_2785052767.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785052767.head.prev = n_2785052768;
    }
    
    L_2785052767.head = n_2785052768;
    if ((L_2785052767.tail == null)) {
    L_2785052767.tail = n_2785052768;
    }
    

  
}

function rawGet_2785081928(t_2785081931, key_2785081932, hc_2785081933, hc_2785081933_Idx) {
  var result_2785081934 = 0;

  BeforeRet: {
    hc_2785081933[hc_2785081933_Idx] = hash_2785018995(key_2785081932);
    if ((hc_2785081933[hc_2785081933_Idx] == 0)) {
    hc_2785081933[hc_2785081933_Idx] = 314159265;
    }
    
    if (((t_2785081931.data).length == 0)) {
    result_2785081934 = -1;
    break BeforeRet;
    }
    
    var h_2785082023 = (hc_2785081933[hc_2785081933_Idx] & (t_2785081931.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785081931.data[chckIndx(h_2785082023, 0, (t_2785081931.data).length - 1)].Field0)) break Label2;
          if (((t_2785081931.data[chckIndx(h_2785082023, 0, (t_2785081931.data).length - 1)].Field0 == hc_2785081933[hc_2785081933_Idx]) && HEX3DHEX3D_2785019332(t_2785081931.data[chckIndx(h_2785082023, 0, (t_2785081931.data).length - 1)].Field1, key_2785081932))) {
          result_2785081934 = h_2785082023;
          break BeforeRet;
          }
          
          h_2785082023 = nextTry_1862271018(h_2785082023, (t_2785081931.data).length - 1);
        }
    };
    result_2785081934 = subInt(-1, h_2785082023);
  };

  return result_2785081934;

}

function exclImpl_2785081922(s_2785081924, key_2785081925) {
          var Temporary5;

  var result_2785081926 = false;

  BeforeRet: {
    var hc_2785081927 = [0];
    var i_2785082289 = rawGet_2785081928(s_2785081924, key_2785081925, hc_2785081927, 0);
    var msk_2785082293 = (s_2785081924.data).length - 1;
    result_2785081926 = true;
    if ((0 <= i_2785082289)) {
    result_2785081926 = false;
    s_2785081924.counter = subInt(s_2785081924.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785082299 = i_2785082289;
          var r_2785082300 = j_2785082299;
          s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)].Field0 = 0;
          s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)].Field1 = nimCopy(s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)].Field1, {Field0: ({id: 0}), Field1: 0}, NTI2801795097);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785082289 = (addInt(i_2785082289, 1) & msk_2785082293);
                if (isEmpty_1862271012(s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785082300 = (s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)].Field0 & msk_2785082293);
                if (!(((((r_2785082300 <= i_2785082289) && (j_2785082299 < r_2785082300)) || ((j_2785082299 < r_2785082300) && (i_2785082289 < j_2785082299))) || ((i_2785082289 < j_2785082299) && (r_2785082300 <= i_2785082289))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)];
          s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)] = genericReset(s_2785081924.data[chckIndx(i_2785082289, 0, (s_2785081924.data).length - 1)], NTI2785017974);
          s_2785081924.data[chckIndx(j_2785082299, 0, (s_2785081924.data).length - 1)] = nimCopy(s_2785081924.data[chckIndx(j_2785082299, 0, (s_2785081924.data).length - 1)], Temporary5, NTI2785017974);
        }
    };
    }
    
  };

  return result_2785081926;

}

function excl_2785081907(s_2785081909, key_2785081910) {
    var _ = exclImpl_2785081922(s_2785081909, key_2785081910);

  
}

function len_2785098166(t_2785098169) {
  var result_2785098170 = 0;

    result_2785098170 = t_2785098169.counter;

  return result_2785098170;

}

function len_2785098083(cache_2785098086) {
  var result_2785098087 = 0;

    result_2785098087 = len_2785098166(cache_2785098086.table);

  return result_2785098087;

}

function mustRehash_2785083194(t_2785083196) {
  var result_2785083197 = false;

    if (!((t_2785083196.counter < (t_2785083196.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785083197 = ((mulInt((t_2785083196.data).length, 2) < mulInt(t_2785083196.counter, 3)) || (subInt((t_2785083196.data).length, t_2785083196.counter) < 4));

  return result_2785083197;

}

function rawGetKnownHC_2785083800(t_2785083803, key_2785083804, hc_2785083805) {
  var result_2785083806 = 0;

  BeforeRet: {
    if (((t_2785083803.data).length == 0)) {
    result_2785083806 = -1;
    break BeforeRet;
    }
    
    var h_2785083891 = (hc_2785083805 & (t_2785083803.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785083803.data[chckIndx(h_2785083891, 0, (t_2785083803.data).length - 1)].Field0)) break Label2;
          if (((t_2785083803.data[chckIndx(h_2785083891, 0, (t_2785083803.data).length - 1)].Field0 == hc_2785083805) && HEX3DHEX3D_2785019332(t_2785083803.data[chckIndx(h_2785083891, 0, (t_2785083803.data).length - 1)].Field1, key_2785083804))) {
          result_2785083806 = h_2785083891;
          break BeforeRet;
          }
          
          h_2785083891 = nextTry_1862271018(h_2785083891, (t_2785083803.data).length - 1);
        }
    };
    result_2785083806 = subInt(-1, h_2785083891);
  };

  return result_2785083806;

}

function rawInsert_2785084304(s_2785084306, data_2785084307, data_2785084307_Idx, key_2785084308, hc_2785084309, h_2785084310) {
    if (((data_2785084307[data_2785084307_Idx]).length == 0)) {
    var correctSizeHEX60gensym455_2785084393 = slotsNeeded_1862271026(64);
    s_2785084306.counter = 0;
    s_2785084306.data = new Array(chckRange(correctSizeHEX60gensym455_2785084393, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym455_2785084393, 0, 2147483647) ; ++i) { s_2785084306.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}}; }    }
    
    data_2785084307[data_2785084307_Idx][chckIndx(h_2785084310, 0, (data_2785084307[data_2785084307_Idx]).length - 1)].Field1 = nimCopy(data_2785084307[data_2785084307_Idx][chckIndx(h_2785084310, 0, (data_2785084307[data_2785084307_Idx]).length - 1)].Field1, key_2785084308, NTI2801795097);
    data_2785084307[data_2785084307_Idx][chckIndx(h_2785084310, 0, (data_2785084307[data_2785084307_Idx]).length - 1)].Field0 = hc_2785084309;

  
}

function enlarge_2785083457(s_2785083459) {
    var n_2785083461 = [];
    n_2785083461 = new Array(chckRange(mulInt((s_2785083459.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785083459.data).length, 2), 0, 2147483647) ; ++i) { n_2785083461[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}}; }    var Temporary1 = s_2785083459.data; s_2785083459.data = n_2785083461; n_2785083461 = Temporary1;    Label2: {
      var i_2785083559 = 0;
      var colontmp__2734686560 = 0;
      colontmp__2734686560 = (n_2785083461).length - 1;
      var res_2734686561 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686561 <= colontmp__2734686560)) break Label4;
            i_2785083559 = res_2734686561;
            if (isFilled_1862271015(n_2785083461[chckIndx(i_2785083559, 0, (n_2785083461).length - 1)].Field0)) {
            var j_2785084139 = subInt(-1, rawGetKnownHC_2785083800(s_2785083459, n_2785083461[chckIndx(i_2785083559, 0, (n_2785083461).length - 1)].Field1, n_2785083461[chckIndx(i_2785083559, 0, (n_2785083461).length - 1)].Field0));
            rawInsert_2785084304(s_2785083459, s_2785083459, "data", n_2785083461[chckIndx(i_2785083559, 0, (n_2785083461).length - 1)].Field1, n_2785083461[chckIndx(i_2785083559, 0, (n_2785083461).length - 1)].Field0, j_2785084139);
            }
            
            res_2734686561 = addInt(res_2734686561, 1);
          }
      };
    };

  
}

function incl_2785083078(s_2785083080, key_2785083081) {
    if (((s_2785083080.data).length == 0)) {
    var correctSizeHEX60gensym448_2785083164 = slotsNeeded_1862271026(64);
    s_2785083080.counter = 0;
    s_2785083080.data = new Array(chckRange(correctSizeHEX60gensym448_2785083164, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym448_2785083164, 0, 2147483647) ; ++i) { s_2785083080.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}}; }    }
    
    var hc_2785083179 = [0];
    var index_2785083193 = rawGet_2785081928(s_2785083080, key_2785083081, hc_2785083179, 0);
    if ((index_2785083193 < 0)) {
    if (mustRehash_2785083194(s_2785083080)) {
    enlarge_2785083457(s_2785083080);
    index_2785083193 = rawGetKnownHC_2785083800(s_2785083080, key_2785083081, hc_2785083179[0]);
    }
    
    rawInsert_2785084304(s_2785083080, s_2785083080, "data", key_2785083081, hc_2785083179[0], subInt(-1, index_2785083193));
    s_2785083080.counter = addInt(s_2785083080.counter, 1);
    }
    

  
}

function del_2785098258(t_2785098261, key_2785098262) {
    var hc_2785098263 = [0];
    var i_2785098270 = rawGet_2785051809(t_2785098261, key_2785098262, hc_2785098263, 0);
    var mskHEX60gensym36_2785098274 = (t_2785098261.data).length - 1;
    if ((0 <= i_2785098270)) {
    t_2785098261.counter = subInt(t_2785098261.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785098281 = i_2785098270;
            var rHEX60gensym36_2785098282 = jHEX60gensym36_2785098281;
            t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field0 = 0;
            t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field1 = nimCopy(t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field1, {Field0: ({id: 0}), Field1: 0}, NTI2801795097);
            t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785098270 = (addInt(i_2785098270, 1) & mskHEX60gensym36_2785098274);
                  if (isEmpty_1342177309(t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785098282 = (t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)].Field0 & mskHEX60gensym36_2785098274);
                  if (!(((((rHEX60gensym36_2785098282 <= i_2785098270) && (jHEX60gensym36_2785098281 < rHEX60gensym36_2785098282)) || ((jHEX60gensym36_2785098281 < rHEX60gensym36_2785098282) && (i_2785098270 < jHEX60gensym36_2785098281))) || ((i_2785098270 < jHEX60gensym36_2785098281) && (rHEX60gensym36_2785098282 <= i_2785098270))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785098261.data[chckIndx(jHEX60gensym36_2785098281, 0, (t_2785098261.data).length - 1)] = nimCopy(t_2785098261.data[chckIndx(jHEX60gensym36_2785098281, 0, (t_2785098261.data).length - 1)], t_2785098261.data[chckIndx(i_2785098270, 0, (t_2785098261.data).length - 1)], NTI2785018219);
          }
      };
    };
    }
    

  
}

function remove_2785052461(L_2785052463, n_2785052464) {
    if ((n_2785052464 == L_2785052463.tail)) {
    L_2785052463.tail = n_2785052464.prev;
    }
    
    if ((n_2785052464 == L_2785052463.head)) {
    L_2785052463.head = n_2785052464.next;
    }
    
    if (!((n_2785052464.next == null))) {
    n_2785052464.next.prev = n_2785052464.prev;
    }
    
    if (!((n_2785052464.prev == null))) {
    n_2785052464.prev.next = n_2785052464.next;
    }
    

  
}

function resize_2785098001(cache_2785098004) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785098004.capacity < len_2785098083(cache_2785098004))) break Label2;
          var t_2785098171 = cache_2785098004.list.tail;
          if (cache_2785098004.recordRemovedKeys) {
          incl_2785083078(cache_2785098004.removedKeys, t_2785098171.value.key);
          }
          
          del_2785098258(cache_2785098004.table, t_2785098171.value.key);
          remove_2785052461(cache_2785098004.list, t_2785098171);
        }
    };

  
}

function addNewNode_2785096263(cache_2785096266, key_2785096267, val_2785096268) {
    var node_2785096280 = newDoublyLinkedNode_2785096271({key: nimCopy(null, key_2785096267, NTI2801795097), val: val_2785096268});
    HEX5BHEX5DHEX3D_2785096344(cache_2785096266.table, key_2785096267, node_2785096280);
    prepend_2785052765(cache_2785096266.list, node_2785096280);
    if (cache_2785096266.recordRemovedKeys) {
    excl_2785081907(cache_2785096266.removedKeys, key_2785096267);
    }
    
    resize_2785098001(cache_2785096266);

  
}

function HEX5BHEX5DHEX3D_2785096044(cache_2785096047, key_2785096048, val_2785096049) {
    var node_2785096236 = getOrDefault_2785096139(cache_2785096047.table, key_2785096048, null);
    if ((node_2785096236 == null)) {
    addNewNode_2785096263(cache_2785096047, key_2785096048, val_2785096049);
    }
    else {
      node_2785096236.value.val = val_2785096049;
      remove_2785052461(cache_2785096047.list, node_2785096236);
      prepend_2785052765(cache_2785096047.list, node_2785096236);
    }
    

  
}

function getOrCreateFunctionExecutionContext_2785095897(ctxHEX60gensym96_2785095898, dataHEX60gensym96_2785095899) {
  var result_2785095900 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym96_2785095909 = null;
      Label2: {
        var node_2734686528 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_2734686529 = ctxHEX60gensym96_2785095898.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2734686529 == null))) break Label4;
              node_2734686528 = nimCopy(node_2734686528, it_2734686529.value, NTI2785018183);
              existingHEX60gensym96_2785095909 = node_2734686528.val;
              if (((hash_2868904883(existingHEX60gensym96_2785095909) == hash_2868904883(dataHEX60gensym96_2785095899)) && HEX3DHEX3D_2868904927(existingHEX60gensym96_2785095909, dataHEX60gensym96_2785095899))) {
              result_2785095900 = existingHEX60gensym96_2785095909;
              break BeforeRet;
              }
              
              it_2734686529 = it_2734686529.next;
            }
        };
      };
    };
    var itemHEX60gensym96_2785095910 = getItem_2785095888(dataHEX60gensym96_2785095899);
    var keyHEX60gensym96_2785095911 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym96_2785095910, NTI2801795097), Field1: -1}, NTI2801795100);
    HEX5BHEX5DHEX3D_2801806532(ctxHEX60gensym96_2785095898.depGraph.changed, keyHEX60gensym96_2785095911, ctxHEX60gensym96_2785095898.depGraph.revision);
    HEX5BHEX5DHEX3D_2785096044(ctxHEX60gensym96_2785095898.itemsFunctionExecutionContext, itemHEX60gensym96_2785095910, dataHEX60gensym96_2785095899);
    result_2785095900 = dataHEX60gensym96_2785095899;
    break BeforeRet;
  };

  return result_2785095900;

}

function rawGet_2785053139(t_2785053142, key_2785053143, hc_2785053144, hc_2785053144_Idx) {
  var result_2785053145 = 0;

  BeforeRet: {
    hc_2785053144[hc_2785053144_Idx] = hash_2868904883(key_2785053143);
    if ((hc_2785053144[hc_2785053144_Idx] == 0)) {
    hc_2785053144[hc_2785053144_Idx] = 314159265;
    }
    
    if (((t_2785053142.data).length == 0)) {
    result_2785053145 = -1;
    break BeforeRet;
    }
    
    var h_2785053231 = (hc_2785053144[hc_2785053144_Idx] & (t_2785053142.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785053142.data[chckIndx(h_2785053231, 0, (t_2785053142.data).length - 1)].Field0)) break Label2;
          if (((t_2785053142.data[chckIndx(h_2785053231, 0, (t_2785053142.data).length - 1)].Field0 == hc_2785053144[hc_2785053144_Idx]) && HEX3DHEX3D_2868904927(t_2785053142.data[chckIndx(h_2785053231, 0, (t_2785053142.data).length - 1)].Field1, key_2785053143))) {
          result_2785053145 = h_2785053231;
          break BeforeRet;
          }
          
          h_2785053231 = nextTry_1342177315(h_2785053231, (t_2785053142.data).length - 1);
        }
    };
    result_2785053145 = subInt(-1, h_2785053231);
  };

  return result_2785053145;

}

function hasKey_2785121941(t_2785121944, key_2785121945) {
  var result_2785121946 = false;

    var hc_2785121947 = [0];
    result_2785121946 = (0 <= rawGet_2785053139(t_2785121944, key_2785121945, hc_2785121947, 0));

  return result_2785121946;

}

function contains_2785121935(t_2785121938, key_2785121939) {
  var result_2785121940 = false;

  BeforeRet: {
    result_2785121940 = hasKey_2785121941(t_2785121938, key_2785121939);
    break BeforeRet;
  };

  return result_2785121940;

}

function contains_2785121841(cache_2785121844, key_2785121845) {
  var result_2785121846 = false;

    result_2785121846 = contains_2785121935(cache_2785121844.table, key_2785121845);

  return result_2785121846;

}

function addQuoted_2868904789(s_2868904791, s_2868904791_Idx, x_2868904792) {
    s_2868904791[s_2868904791_Idx].push.apply(s_2868904791[s_2868904791_Idx], HEX24_2868904649(x_2868904792));;

  
}

function collectionToString_2868904755(x_2868904757, prefix_2868904758, separator_2868904759, suffix_2868904760) {
  var result_2868904761 = [[]];

    result_2868904761[0] = nimCopy(null, prefix_2868904758, NTI33554449);
    var firstElement_2868904762 = true;
    Label1: {
      var value_2868904785 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2734686569 = 0;
      var L_2734686570 = (x_2868904757).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686569 < L_2734686570)) break Label3;
            value_2868904785 = x_2868904757[i_2734686569];
            if (firstElement_2868904762) {
            firstElement_2868904762 = false;
            }
            else {
            result_2868904761[0].push.apply(result_2868904761[0], separator_2868904759);;
            }
            
            addQuoted_2868904789(result_2868904761, 0, value_2868904785);
            i_2734686569 += 1;
            if (!(((x_2868904757).length == L_2734686570))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2868904761[0].push.apply(result_2868904761[0], suffix_2868904760);;

  return result_2868904761[0];

}

function HEX24_2868904751(x_2868904753) {
  var result_2868904754 = [];

    result_2868904754 = nimCopy(null, collectionToString_2868904755(x_2868904753, [64,91], [44,32], [93]), NTI33554449);

  return result_2868904754;

}

function formatValue_2868904746(result_2868904748, result_2868904748_Idx, value_2868904749, specifier_2868904750) {
    formatValue_738197675(result_2868904748, result_2868904748_Idx, HEX24_2868904751(value_2868904749), specifier_2868904750);

  
}

function HEX24_2868904864(self_2868904866) {
  var result_2868904867 = [[]];

    if (isSome_1207962333(self_2868904866)) {
    result_2868904867[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_872416641(result_2868904867, 0, self_2868904866.val);
    result_2868904867[0].push.apply(result_2868904867[0], [41]);;
    }
    else {
      result_2868904867[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_2868904867[0];

}

function formatValue_2868904813(result_2868904815, result_2868904815_Idx, value_2868904816, specifier_2868904817) {
    formatValue_738197675(result_2868904815, result_2868904815_Idx, HEX24_2868904864(value_2868904816), specifier_2868904817);

  
}

function HEX24_2868904733(fec_2868904734) {
  var result_2868904735 = [];

  BeforeRet: {
    var fmtRes_2868904740 = [mnewString(0)];
    fmtRes_2868904740[0].push.apply(fmtRes_2868904740[0], [67,97,108,108,32]);;
    formatValue_2868904741(fmtRes_2868904740, 0, fec_2868904734.node, []);
    fmtRes_2868904740[0].push.apply(fmtRes_2868904740[0], [40]);;
    formatValue_2868904746(fmtRes_2868904740, 0, fec_2868904734.arguments, []);
    fmtRes_2868904740[0].push.apply(fmtRes_2868904740[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_2868904813(fmtRes_2868904740, 0, fec_2868904734.maxLoopIterations, []);
    fmtRes_2868904740[0].push.apply(fmtRes_2868904740[0], [41]);;
    result_2868904735 = nimCopy(null, fmtRes_2868904740[0], NTI33554449);
    break BeforeRet;
  };

  return result_2868904735;

}

function raiseKeyError_2785122214(key_2785122216) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2868904733(key_2785122216) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785122120(t_2785122123, key_2785122124) {
  var result_2785122125 = null;
  var result_2785122125_Idx = 0;

    var hcHEX60gensym22_2785122126 = [0];
    var indexHEX60gensym22_2785122133 = rawGet_2785053139(t_2785122123, key_2785122124, hcHEX60gensym22_2785122126, 0);
    if ((0 <= indexHEX60gensym22_2785122133)) {
    result_2785122125 = t_2785122123.data[chckIndx(indexHEX60gensym22_2785122133, 0, (t_2785122123.data).length - 1)]; result_2785122125_Idx = "Field2";
    }
    else {
    raiseKeyError_2785122214(key_2785122124);
    }
    

  return [result_2785122125, result_2785122125_Idx];

}

function remove_2785059027(L_2785059029, n_2785059030) {
    if ((n_2785059030 == L_2785059029.tail)) {
    L_2785059029.tail = n_2785059030.prev;
    }
    
    if ((n_2785059030 == L_2785059029.head)) {
    L_2785059029.head = n_2785059030.next;
    }
    
    if (!((n_2785059030.next == null))) {
    n_2785059030.next.prev = n_2785059030.prev;
    }
    
    if (!((n_2785059030.prev == null))) {
    n_2785059030.prev.next = n_2785059030.next;
    }
    

  
}

function prepend_2785055316(L_2785055318, n_2785055319) {
    n_2785055319.prev = null;
    n_2785055319.next = L_2785055318.head;
    if (!((L_2785055318.head == null))) {
    if (!((L_2785055318.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785055318.head.prev = n_2785055319;
    }
    
    L_2785055318.head = n_2785055319;
    if ((L_2785055318.tail == null)) {
    L_2785055318.tail = n_2785055319;
    }
    

  
}

function HEX5BHEX5D_2785122034(cache_2785122037, key_2785122038) {
    var Temporary1;

  var result_2785122039 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2785122227 = (Temporary1 = HEX5BHEX5D_2785122120(cache_2785122037.table, key_2785122038), Temporary1)[0][Temporary1[1]];
    result_2785122039 = nimCopy(result_2785122039, node_2785122227.value.val, NTI2868903943);
    remove_2785059027(cache_2785122037.list, node_2785122227);
    prepend_2785055316(cache_2785122037.list, node_2785122227);

  return result_2785122039;

}

function computeFunctionExecution_2785122297(ctxHEX60gensym127_2785122298, inputHEX60gensym127_2785122299) {
    var Temporary3;
    var Temporary5;

  var result_2785122300 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym127_2785122301 = startTimer_2248146975();
    ctxHEX60gensym127_2785122298.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym127_2785122298.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym127_2785122390 = getItem_2785095888(inputHEX60gensym127_2785122299);
    var keyHEX60gensym127_2785122391 = {Field0: nimCopy(null, itemHEX60gensym127_2785122390, NTI2801795097), Field1: 6};
    recordDependency_2785079604(ctxHEX60gensym127_2785122298, itemHEX60gensym127_2785122390, 6);
    if (ctxHEX60gensym127_2785122298.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym127_2785122298.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_2801795284(itemHEX60gensym127_2785122390));
    }
    
    force_2785099373(ctxHEX60gensym127_2785122298, keyHEX60gensym127_2785122391);
    if (!(contains_2785121841(ctxHEX60gensym127_2785122298.queryCacheFunctionExecution, inputHEX60gensym127_2785122299))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_2868904733(inputHEX60gensym127_2785122299) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785122300 = nimCopy(result_2785122300, HEX5BHEX5D_2785122034(ctxHEX60gensym127_2785122298.queryCacheFunctionExecution, inputHEX60gensym127_2785122299), NTI2868903943);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym127_2785122298.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym127_2785122298.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym127_2785122298.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym127_2785122298.statsFunctionExecution.time = addInt(ctxHEX60gensym127_2785122298.statsFunctionExecution.time, elapsed_2248146986(timerHEX60gensym127_2785122301));
    }
  };

  return result_2785122300;

}

function rawGet_2785047706(t_2785047709, key_2785047710, hc_2785047711, hc_2785047711_Idx) {
  var result_2785047712 = 0;

  BeforeRet: {
    hc_2785047711[hc_2785047711_Idx] = hash_2868905057(key_2785047710);
    if ((hc_2785047711[hc_2785047711_Idx] == 0)) {
    hc_2785047711[hc_2785047711_Idx] = 314159265;
    }
    
    if (((t_2785047709.data).length == 0)) {
    result_2785047712 = -1;
    break BeforeRet;
    }
    
    var h_2785047798 = (hc_2785047711[hc_2785047711_Idx] & (t_2785047709.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785047709.data[chckIndx(h_2785047798, 0, (t_2785047709.data).length - 1)].Field0)) break Label2;
          if (((t_2785047709.data[chckIndx(h_2785047798, 0, (t_2785047709.data).length - 1)].Field0 == hc_2785047711[hc_2785047711_Idx]) && HEX3DHEX3D_2868905060(t_2785047709.data[chckIndx(h_2785047798, 0, (t_2785047709.data).length - 1)].Field1, key_2785047710))) {
          result_2785047712 = h_2785047798;
          break BeforeRet;
          }
          
          h_2785047798 = nextTry_1342177315(h_2785047798, (t_2785047709.data).length - 1);
        }
    };
    result_2785047712 = subInt(-1, h_2785047798);
  };

  return result_2785047712;

}

function hasKey_2785118838(t_2785118841, key_2785118842) {
  var result_2785118843 = false;

    var hc_2785118844 = [0];
    result_2785118843 = (0 <= rawGet_2785047706(t_2785118841, key_2785118842, hc_2785118844, 0));

  return result_2785118843;

}

function contains_2785118832(t_2785118835, key_2785118836) {
  var result_2785118837 = false;

  BeforeRet: {
    result_2785118837 = hasKey_2785118838(t_2785118835, key_2785118836);
    break BeforeRet;
  };

  return result_2785118837;

}

function contains_2785118738(cache_2785118741, key_2785118742) {
  var result_2785118743 = false;

    result_2785118743 = contains_2785118832(cache_2785118741.table, key_2785118742);

  return result_2785118743;

}

function HEX5BHEX5D_2785119017(t_2785119020, key_2785119021) {
  var result_2785119022 = null;
  var result_2785119022_Idx = 0;

    var hcHEX60gensym22_2785119023 = [0];
    var indexHEX60gensym22_2785119030 = rawGet_2785047706(t_2785119020, key_2785119021, hcHEX60gensym22_2785119023, 0);
    if ((0 <= indexHEX60gensym22_2785119030)) {
    result_2785119022 = t_2785119020.data[chckIndx(indexHEX60gensym22_2785119030, 0, (t_2785119020.data).length - 1)]; result_2785119022_Idx = "Field2";
    }
    else {
    raiseKeyError_2785116007(key_2785119021);
    }
    

  return [result_2785119022, result_2785119022_Idx];

}

function remove_2785051136(L_2785051138, n_2785051139) {
    if ((n_2785051139 == L_2785051138.tail)) {
    L_2785051138.tail = n_2785051139.prev;
    }
    
    if ((n_2785051139 == L_2785051138.head)) {
    L_2785051138.head = n_2785051139.next;
    }
    
    if (!((n_2785051139.next == null))) {
    n_2785051139.next.prev = n_2785051139.prev;
    }
    
    if (!((n_2785051139.prev == null))) {
    n_2785051139.prev.next = n_2785051139.next;
    }
    

  
}

function prepend_2785049883(L_2785049885, n_2785049886) {
    n_2785049886.prev = null;
    n_2785049886.next = L_2785049885.head;
    if (!((L_2785049885.head == null))) {
    if (!((L_2785049885.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785049885.head.prev = n_2785049886;
    }
    
    L_2785049885.head = n_2785049886;
    if ((L_2785049885.tail == null)) {
    L_2785049885.tail = n_2785049886;
    }
    

  
}

function HEX5BHEX5D_2785118931(cache_2785118934, key_2785118935) {
    var Temporary1;

  var result_2785118936 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2785119123 = (Temporary1 = HEX5BHEX5D_2785119017(cache_2785118934.table, key_2785118935), Temporary1)[0][Temporary1[1]];
    result_2785118936 = nimCopy(result_2785118936, node_2785119123.value.val, NTI2868903943);
    remove_2785051136(cache_2785118934.list, node_2785119123);
    prepend_2785049883(cache_2785118934.list, node_2785119123);

  return result_2785118936;

}

function computeSymbolValue_2785119193(ctxHEX60gensym123_2785119194, inputHEX60gensym123_2785119195, recordDependencyHEX60gensym123_2785119196) {
    var Temporary3;
    var Temporary5;

  var result_2785119197 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym123_2785119198 = startTimer_2248146975();
    ctxHEX60gensym123_2785119194.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym123_2785119194.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym123_2785119287 = getItem_2785092484(inputHEX60gensym123_2785119195);
    var keyHEX60gensym123_2785119288 = {Field0: nimCopy(null, itemHEX60gensym123_2785119287, NTI2801795097), Field1: 5};
    if (recordDependencyHEX60gensym123_2785119196) {
    recordDependency_2785079604(ctxHEX60gensym123_2785119194, itemHEX60gensym123_2785119287, 5);
    }
    
    var colorHEX60gensym123_2785119289 = nodeColor_2801797557(ctxHEX60gensym123_2785119194.depGraph, keyHEX60gensym123_2785119288, 0);
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym123_2785119289, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym123_2785119287));
    }
    
    if ((colorHEX60gensym123_2785119289 == 2)) {
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym123_2785119194, keyHEX60gensym123_2785119288);
    if (false) {
    markRed_2801809909(ctxHEX60gensym123_2785119194.depGraph, keyHEX60gensym123_2785119288, []);
    }
    
    if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
    }
    
    }
    else {
      if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
      }
      
    }
    
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym123_2785119195) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785119197 = nimCopy(result_2785119197, HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195), NTI2868903943);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym123_2785119289 == 0)) {
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym123_2785119194, keyHEX60gensym123_2785119288);
    if (false) {
    markRed_2801809909(ctxHEX60gensym123_2785119194.depGraph, keyHEX60gensym123_2785119288, []);
    }
    
    if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
    }
    
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym123_2785119195) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785119197 = nimCopy(result_2785119197, HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195), NTI2868903943);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym123_2785119194, keyHEX60gensym123_2785119288, true) == 0)) {
    if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
    }
    
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym123_2785119195) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785119197 = nimCopy(result_2785119197, HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195), NTI2868903943);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym123_2785119194.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym123_2785119194, keyHEX60gensym123_2785119288);
      if (false) {
      markRed_2801809909(ctxHEX60gensym123_2785119194.depGraph, keyHEX60gensym123_2785119288, []);
      }
      
      if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
      }
      
      if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym123_2785119195) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785119197 = nimCopy(result_2785119197, HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195), NTI2868903943);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym123_2785119289 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,51,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym123_2785119194.enableLogging && contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868904649(HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195)));
    }
    
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    force_2785099373(ctxHEX60gensym123_2785119194, keyHEX60gensym123_2785119288);
    }
    
    if (!(contains_2785118738(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2868905054(inputHEX60gensym123_2785119195) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785119197 = nimCopy(result_2785119197, HEX5BHEX5D_2785118931(ctxHEX60gensym123_2785119194.queryCacheSymbolValue, inputHEX60gensym123_2785119195), NTI2868903943);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym123_2785119194.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym123_2785119194.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym123_2785119194.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym123_2785119194.statsSymbolValue.time = addInt(ctxHEX60gensym123_2785119194.statsSymbolValue.time, elapsed_2248146986(timerHEX60gensym123_2785119198));
    }
  };

  return result_2785119197;

}

function voidValue_2868904622() {
  var result_2868904623 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2868904623 = nimCopy(result_2868904623, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);

  return result_2868904623;

}

function some_2785105954(val_2785105956) {
  var result_2785105957 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2785105957.has = true;
    result_2785105957.val = nimCopy(result_2785105957.val, val_2785105956, NTI2868903943);

  return result_2785105957;

}

function none_2785105962() {
  var result_2785105969 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_2785105969;

}

function none_2785105959() {
  var result_2785105961 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2785105961 = nimCopy(result_2785105961, none_2785105962(), NTI2785069724);

  return result_2785105961;

}

function getValue_2785105419(ctxHEX60gensym106_2785105420, inputHEX60gensym106_2785105421) {
  var result_2785105427 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_2785105504(ctxHEX60gensym106_2785105420.queryCacheValue, inputHEX60gensym106_2785105421)) {
    result_2785105427 = nimCopy(result_2785105427, some_2785105954(HEX5BHEX5D_2785105697(ctxHEX60gensym106_2785105420.queryCacheValue, inputHEX60gensym106_2785105421)), NTI2785069724);
    break BeforeRet;
    }
    
    result_2785105427 = nimCopy(result_2785105427, none_2785105959(), NTI2785069724);
    break BeforeRet;
  };

  return result_2785105427;

}

function isSome_2919235616(self_2919235618) {
  var result_2919235619 = false;

    result_2919235619 = self_2919235618.has;

  return result_2919235619;

}

function isNone_2919235641(self_2919235643) {
  var result_2919235644 = false;

    result_2919235644 = !(self_2919235643.has);

  return result_2919235644;

}

function get_2919235633(self_2919235635) {
  var result_2919235636 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_2919235641(self_2919235635)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2919235636 = self_2919235635.val;

  return result_2919235636;

}

function newAstFunctionValue_2868904645(node_2868904646, rev_2868904647) {
  var result_2868904648 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2868904648 = nimCopy(result_2868904648, {kind: 5, node: node_2868904646, rev: rev_2868904647, stringValue: [], intValue: 0, impl: null, typ: null}, NTI2868903943);
    break BeforeRet;
  };

  return result_2868904648;

}

function computeValueImpl_2785018766(ctx_2785018767, node_2785018768) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_2785142168 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym772_2785142170 = (ctx_2785018767.enableLogging || ctx_2785018767.enableQueryLogging);
    if (logQueryHEX60gensym772_2785142170) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym772_2785142170) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2768242647(node_2785018768) || []));
    }
    
    try {
    Label3: {
      var expr_2785142181 = node_2785018768;
      var pos_2785142182 = 0;
      var _ = pos_2785142182;
      if ((expr_2785142181.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_2785018768.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_2785142189 = Temporary4;
      result_2785142168 = nimCopy(result_2785142168, {kind: 3, intValue: value_2785142189, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 3)) {
      result_2785142168 = nimCopy(result_2785142168, {kind: 2, stringValue: nimCopy(null, node_2785018768.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 8)) {
      var function_2785142198 = HEX5BHEX5D_2768240724(node_2785018768, 0);
      var functionValue_2785142199 = computeValue_2785105988(ctx_2785018767, function_2785142198, true);
      if ((functionValue_2785142199.kind == 0)) {
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var args_2785142208 = [];
      Label6: {
        var arg_2785142227 = null;
        var colontmp__2734686514 = [];
        colontmp__2734686514 = HEX5BHEX5D_2919237397(node_2785018768.children, HEX2EHEX2E_1056964704(1, 1));
        var i_2734686515 = 0;
        var L_2734686516 = (colontmp__2734686514).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2734686515 < L_2734686516)) break Label8;
              arg_2785142227 = colontmp__2734686514[chckIndx(i_2734686515, 0, (colontmp__2734686514).length - 1)];
              var value_2785142228 = computeValue_2785105988(ctx_2785018767, arg_2785142227, true);
              if ((value_2785142228.kind == 0)) {
              result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_2785142228, NTI2868903943);
              args_2785142208.push(Temporary9);;
              i_2734686515 = addInt(i_2734686515, 1);
              if (!(((colontmp__2734686514).length == L_2734686516))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_2785142199.kind == 4)) {
        var Temporary10 = functionValue_2785142199;
        if (ConstSet64[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2868903942)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_2785142249 = [mnewString(0)];
      fmtRes_2785142249[0].push.apply(fmtRes_2785142249[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_2801795292(fmtRes_2785142249, 0, function_2785142198.id, []);
      fmtRes_2785142249[0].push.apply(fmtRes_2785142249[0], [39,32,97,116,32]);;
      formatValue_2868904741(fmtRes_2785142249, 0, node_2785018768, []);
      log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2785142249[0], NTI33554449)]);
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_2785142199;
      if (ConstSet65[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2868903942)); }
      result_2785142168 = nimCopy(result_2785142168, Temporary11.impl(args_2785142208), NTI2868903943);
      break BeforeRet;
      }
      
      if ((functionValue_2785142199.kind == 5)) {
      var Temporary12 = functionValue_2785142199;
      if (ConstSet73[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2868903942)); }
      var fec_2785142264 = getOrCreateFunctionExecutionContext_2785095897(ctx_2785018767, {node: Temporary12.node, arguments: nimCopy(null, args_2785142208, NTI2785090894), id: ({id: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_2785142168 = nimCopy(result_2785142168, computeFunctionExecution_2785122297(ctx_2785018767, fec_2785142264), NTI2868903943);
      break BeforeRet;
      }
      
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 7)) {
      if ((len_2768240728(node_2785018768) == 0)) {
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      result_2785142168 = nimCopy(result_2785142168, computeValue_2785105988(ctx_2785018767, last_2768240898(node_2785018768), true), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 4)) {
      if ((len_2768240728(node_2785018768) == 0)) {
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      result_2785142168 = nimCopy(result_2785142168, computeValue_2785105988(ctx_2785018767, HEX5BHEX5D_2768240724(node_2785018768, 0), true), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 1)) {
      var id_2785142277 = nimCopy(null, node_2785018768.reff, NTI2298478595);
      var symbols_2785142278 = computeSymbols_2785112618(ctx_2785018767, node_2785018768, true);
      if (contains_2785141154(symbols_2785142278, id_2785142277)) {
      var symbol_2785142445 = (Temporary13 = HEX5BHEX5D_2785141409(symbols_2785142278, id_2785142277), Temporary13)[0][Temporary13[1]];
      result_2785142168 = nimCopy(result_2785142168, computeSymbolValue_2785119193(ctx_2785018767, symbol_2785142445, true), NTI2868903943);
      break BeforeRet;
      }
      
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 9)) {
      if ((len_2768240728(node_2785018768) < 2)) {
      result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var index_2785142450 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_2785142450, 1) < len_2768240728(node_2785018768))) break Label15;
            try {
            var condition_2785142455 = HEX5BHEX5D_2768240724(node_2785018768, index_2785142450);
            var trueCase_2785142456 = HEX5BHEX5D_2768240724(node_2785018768, addInt(index_2785142450, 1));
            var conditionValue_2785142457 = computeValue_2785105988(ctx_2785018767, condition_2785142455, true);
            if ((conditionValue_2785142457.kind == 0)) {
            result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            if (!((conditionValue_2785142457.kind == 3))) {
            var fmtRes_2785142470 = [mnewString(0)];
            fmtRes_2785142470[0].push.apply(fmtRes_2785142470[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_2919237023(fmtRes_2785142470, 0, conditionValue_2785142457, []);
            log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2785142470[0], NTI33554449)]);
            result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            if (!((conditionValue_2785142457.intValue == 0))) {
            var trueCaseValue_2785142476 = computeValue_2785105988(ctx_2785018767, trueCase_2785142456, true);
            result_2785142168 = nimCopy(result_2785142168, trueCaseValue_2785142476, NTI2868903943);
            break BeforeRet;
            }
            
            } finally {
            index_2785142450 = addInt(index_2785142450, 2);
            }
          }
      };
      if (!((modInt(len_2768240728(node_2785018768), 2) == 0))) {
      var falseCaseValue_2785142477 = computeValue_2785105988(ctx_2785018767, last_2768240898(node_2785018768), true);
      result_2785142168 = nimCopy(result_2785142168, falseCaseValue_2785142477, NTI2868903943);
      break BeforeRet;
      }
      
      result_2785142168 = nimCopy(result_2785142168, voidValue_2868904622(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2785142181.kind == 11)) {
        var oHEX60gensym797_2785142484 = getValue_2785105419(ctx_2785018767, node_2785018768);
        if (!isSome_2919235616(oHEX60gensym797_2785142484)) Temporary19 = false; else {          var value_2785142530 = nimCopy(null, get_2919235633(oHEX60gensym797_2785142484), NTI2868903943);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_2785142530.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_2785142530;
      if (ConstSet74[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI2868903942)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_2785142535 = Temporary17;
      result_2785142168 = nimCopy(result_2785142168, newAstFunctionValue_2868904645(node_2785018768, addInt(currentRev_2785142535, 1)), NTI2868903943);
      break BeforeRet;
      }
      else {
        result_2785142168 = nimCopy(result_2785142168, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym772_2785142170 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868904649(result_2785142168) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym772_2785142170) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785142168;

}

function getOrDefault_2785027031(t_2785027034, key_2785027035, default_2785027036) {
    var Temporary1;

  var result_2785027037 = null;

    var hcHEX60gensym174_2785027040 = [0];
    var indexHEX60gensym174_2785027399 = rawGet_2785027041(t_2785027034, key_2785027035, hcHEX60gensym174_2785027040, 0);
    if ((0 <= indexHEX60gensym174_2785027399)) {
    Temporary1 = t_2785027034.data[chckIndx(indexHEX60gensym174_2785027399, 0, (t_2785027034.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785027036;
    }
    
    result_2785027037 = Temporary1;

  return result_2785027037;

}

function newDoublyLinkedNode_2785027524(value_2785027526) {
  var result_2785027527 = null;

    result_2785027527 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2785027527.value = nimCopy(result_2785027527.value, value_2785027526, NTI2785018360);

  return result_2785027527;

}

function mustRehash_2785027883(t_2785027885) {
  var result_2785027886 = false;

    if (!((t_2785027885.counter < (t_2785027885.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785027886 = ((mulInt((t_2785027885.data).length, 2) < mulInt(t_2785027885.counter, 3)) || (subInt((t_2785027885.data).length, t_2785027885.counter) < 4));

  return result_2785027886;

}

function rawInsert_2785028576(t_2785028580, data_2785028581, data_2785028581_Idx, key_2785028582, val_2785028583, hc_2785028584, h_2785028585) {
    data_2785028581[data_2785028581_Idx][chckIndx(h_2785028585, 0, (data_2785028581[data_2785028581_Idx]).length - 1)].Field1 = key_2785028582;
    data_2785028581[data_2785028581_Idx][chckIndx(h_2785028585, 0, (data_2785028581[data_2785028581_Idx]).length - 1)].Field2 = val_2785028583;
    data_2785028581[data_2785028581_Idx][chckIndx(h_2785028585, 0, (data_2785028581[data_2785028581_Idx]).length - 1)].Field0 = hc_2785028584;

  
}

function enlarge_2785028140(t_2785028143) {
    var n_2785028146 = [];
    n_2785028146 = new Array(chckRange(mulInt((t_2785028143.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785028143.data).length, 2), 0, 2147483647) ; ++i) { n_2785028146[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785028143.data; t_2785028143.data = n_2785028146; n_2785028146 = Temporary1;    Label2: {
      var i_2785028244 = 0;
      var colontmp__2734686575 = 0;
      colontmp__2734686575 = (n_2785028146).length - 1;
      var res_2734686576 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686576 <= colontmp__2734686575)) break Label4;
            i_2785028244 = res_2734686576;
            var eh_2785028325 = n_2785028146[chckIndx(i_2785028244, 0, (n_2785028146).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785028325)) {
            var j_2785028329 = (eh_2785028325 & (t_2785028143.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785028143.data[chckIndx(j_2785028329, 0, (t_2785028143.data).length - 1)].Field0)) break Label6;
                  j_2785028329 = nextTry_1342177315(j_2785028329, (t_2785028143.data).length - 1);
                }
            };
            rawInsert_2785028576(t_2785028143, t_2785028143, "data", n_2785028146[chckIndx(i_2785028244, 0, (n_2785028146).length - 1)].Field1, n_2785028146[chckIndx(i_2785028244, 0, (n_2785028146).length - 1)].Field2, eh_2785028325, j_2785028329);
            }
            
            res_2734686576 = addInt(res_2734686576, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785028826(t_2785028829, key_2785028830, hc_2785028831) {
  var result_2785028832 = 0;

  BeforeRet: {
    if (((t_2785028829.data).length == 0)) {
    result_2785028832 = -1;
    break BeforeRet;
    }
    
    var h_2785028917 = (hc_2785028831 & (t_2785028829.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785028829.data[chckIndx(h_2785028917, 0, (t_2785028829.data).length - 1)].Field0)) break Label2;
          if (((t_2785028829.data[chckIndx(h_2785028917, 0, (t_2785028829.data).length - 1)].Field0 == hc_2785028831) && (t_2785028829.data[chckIndx(h_2785028917, 0, (t_2785028829.data).length - 1)].Field1 == key_2785028830))) {
          result_2785028832 = h_2785028917;
          break BeforeRet;
          }
          
          h_2785028917 = nextTry_1342177315(h_2785028917, (t_2785028829.data).length - 1);
        }
    };
    result_2785028832 = subInt(-1, h_2785028917);
  };

  return result_2785028832;

}

function HEX5BHEX5DHEX3D_2785027615(t_2785027618, key_2785027619, val_2785027620) {
    if (((t_2785027618.data).length == 0)) {
    var correctSizeHEX60gensym179_2785027703 = slotsNeeded_1342177323(32);
    t_2785027618.counter = 0;
    t_2785027618.data = new Array(chckRange(correctSizeHEX60gensym179_2785027703, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym179_2785027703, 0, 2147483647) ; ++i) { t_2785027618.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785027708 = [0];
    var index_2785027715 = rawGet_2785027041(t_2785027618, key_2785027619, hc_2785027708, 0);
    if ((0 <= index_2785027715)) {
    t_2785027618.data[chckIndx(index_2785027715, 0, (t_2785027618.data).length - 1)].Field2 = val_2785027620;
    }
    else {
      if (((t_2785027618.data).length == 0)) {
      var correctSizeHEX60gensym182_2785027878 = slotsNeeded_1342177323(32);
      t_2785027618.counter = 0;
      t_2785027618.data = new Array(chckRange(correctSizeHEX60gensym182_2785027878, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym182_2785027878, 0, 2147483647) ; ++i) { t_2785027618.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785027883(t_2785027618)) {
      enlarge_2785028140(t_2785027618);
      index_2785027715 = rawGetKnownHC_2785028826(t_2785027618, key_2785027619, hc_2785027708[0]);
      }
      
      index_2785027715 = subInt(-1, index_2785027715);
      rawInsert_2785028576(t_2785027618, t_2785027618, "data", key_2785027619, val_2785027620, hc_2785027708[0], index_2785027715);
      t_2785027618.counter = addInt(t_2785027618.counter, 1);
    }
    

  
}

function len_2785029628(t_2785029631) {
  var result_2785029632 = 0;

    result_2785029632 = t_2785029631.counter;

  return result_2785029632;

}

function len_2785029545(cache_2785029548) {
  var result_2785029549 = 0;

    result_2785029549 = len_2785029628(cache_2785029548.table);

  return result_2785029549;

}

function del_2785029720(t_2785029723, key_2785029724) {
    var hc_2785029725 = [0];
    var i_2785029732 = rawGet_2785027041(t_2785029723, key_2785029724, hc_2785029725, 0);
    var mskHEX60gensym36_2785029736 = (t_2785029723.data).length - 1;
    if ((0 <= i_2785029732)) {
    t_2785029723.counter = subInt(t_2785029723.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785029743 = i_2785029732;
            var rHEX60gensym36_2785029744 = jHEX60gensym36_2785029743;
            t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)].Field0 = 0;
            t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)].Field1 = null;
            t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785029732 = (addInt(i_2785029732, 1) & mskHEX60gensym36_2785029736);
                  if (isEmpty_1342177309(t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785029744 = (t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)].Field0 & mskHEX60gensym36_2785029736);
                  if (!(((((rHEX60gensym36_2785029744 <= i_2785029732) && (jHEX60gensym36_2785029743 < rHEX60gensym36_2785029744)) || ((jHEX60gensym36_2785029743 < rHEX60gensym36_2785029744) && (i_2785029732 < jHEX60gensym36_2785029743))) || ((i_2785029732 < jHEX60gensym36_2785029743) && (rHEX60gensym36_2785029744 <= i_2785029732))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785029723.data[chckIndx(jHEX60gensym36_2785029743, 0, (t_2785029723.data).length - 1)] = nimCopy(t_2785029723.data[chckIndx(jHEX60gensym36_2785029743, 0, (t_2785029723.data).length - 1)], t_2785029723.data[chckIndx(i_2785029732, 0, (t_2785029723.data).length - 1)], NTI2785018396);
          }
      };
    };
    }
    

  
}

function resize_2785029463(cache_2785029466) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785029466.capacity < len_2785029545(cache_2785029466))) break Label2;
          var t_2785029633 = cache_2785029466.list.tail;
          if (cache_2785029466.recordRemovedKeys) {
          incl_2785023869(cache_2785029466.removedKeys, t_2785029633.value.key);
          }
          
          del_2785029720(cache_2785029466.table, t_2785029633.value.key);
          remove_2785030479(cache_2785029466.list, t_2785029633);
        }
    };

  
}

function addNewNode_2785027516(cache_2785027519, key_2785027520, val_2785027521) {
    var node_2785027551 = newDoublyLinkedNode_2785027524({key: key_2785027520, val: nimCopy(null, val_2785027521, NTI2868903943)});
    HEX5BHEX5DHEX3D_2785027615(cache_2785027519.table, key_2785027520, node_2785027551);
    prepend_2785029226(cache_2785027519.list, node_2785027551);
    if (cache_2785027519.recordRemovedKeys) {
    excl_2785022710(cache_2785027519.removedKeys, key_2785027520);
    }
    
    resize_2785029463(cache_2785027519);

  
}

function HEX5BHEX5DHEX3D_2785026936(cache_2785026939, key_2785026940, val_2785026941) {
    var node_2785027489 = getOrDefault_2785027031(cache_2785026939.table, key_2785026940, null);
    if ((node_2785027489 == null)) {
    addNewNode_2785027516(cache_2785026939, key_2785026940, val_2785026941);
    }
    else {
      node_2785027489.value.val = nimCopy(node_2785027489.value.val, val_2785026941, NTI2868903943);
      remove_2785030479(cache_2785026939.list, node_2785027489);
      prepend_2785029226(cache_2785026939.list, node_2785027489);
    }
    

  
}

function fingerprint_2868904689(value_2868904690) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_2868904691 = [];

  BeforeRet: {
    switch (value_2868904690.kind) {
    case 0:
      result_2868904691 = nimCopy(null, [value_2868904690.kind], NTI2868904362);
      break BeforeRet;
      break;
    case 1:
      result_2868904691 = nimCopy(null, [value_2868904690.kind], NTI2868904362);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_2868904690;
      if (ConstSet75[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
      result_2868904691 = nimCopy(null, [value_2868904690.kind, Temporary1.intValue], NTI2801795405);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_2868904690;
      if (ConstSet76[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903942)); }
      result_2868904691 = nimCopy(null, [value_2868904690.kind, hash_1358954923(Temporary2.stringValue)], NTI2801795405);
      break BeforeRet;
      break;
    case 4:
      result_2868904691 = nimCopy(null, [], NTI2046822965);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_2868904690;
      if (ConstSet77[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903942)); }
      var Temporary4 = value_2868904690;
      if (ConstSet78[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903942)); }
      result_2868904691 = nimCopy(null, [value_2868904690.kind, hash_2768242995(Temporary3.node), Temporary4.rev], NTI2868904552);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_2868904690;
      if (ConstSet79[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903942)); }
      result_2868904691 = nimCopy(null, HEX26_2868904515([value_2868904690.kind], fingerprint_2868904508(Temporary5.typ)), NTI2868904368);
      break BeforeRet;
      break;
    }
  };

  return result_2868904691;

}

function initDoublyLinkedList_2785030922() {
  var result_2785030924 = ({head: null, tail: null});

  return result_2785030924;

}

function initTable_2785030928(initialSize_2785030931) {
  var result_2785030932 = ({data: [], counter: 0});

    var correctSizeHEX60gensym192_2785030934 = slotsNeeded_1342177323(chckRange(initialSize_2785030931, 0, 2147483647));
    result_2785030932.counter = 0;
    result_2785030932.data = new Array(chckRange(correctSizeHEX60gensym192_2785030934, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym192_2785030934, 0, 2147483647) ; ++i) { result_2785030932.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785030932;

}

function newLruCache_2785030912(capacity_2785030915, recordRemovedKeys_2785030916) {
  var result_2785030917 = null;

    result_2785030917 = {capacity: capacity_2785030915, list: initDoublyLinkedList_2785030922(), table: initTable_2785030928(correctSize_2818572309(capacity_2785030915)), recordRemovedKeys: recordRemovedKeys_2785030916, removedKeys: ({data: [], counter: 0})};

  return result_2785030917;

}

function newCache_2785030907(capacity_2785030910) {
  var result_2785030911 = null;

    result_2785030911 = newLruCache_2785030912(capacity_2785030910, false);

  return result_2785030911;

}

function init_2785030902(result_2785030905, result_2785030905_Idx, capacity_2785030906) {
    result_2785030905[result_2785030905_Idx] = newCache_2785030907(capacity_2785030906);

  
}

function some_2785092461(val_2785092463) {
  var result_2785092464 = ({val: null});

    if (!(!((val_2785092463 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2785092464.val = val_2785092463;

  return result_2785092464;

}

function rawGet_2785039675(t_2785039678, key_2785039679, hc_2785039680, hc_2785039680_Idx) {
  var result_2785039681 = 0;

  BeforeRet: {
    hc_2785039680[hc_2785039680_Idx] = hash_2785018995(key_2785039679);
    if ((hc_2785039680[hc_2785039680_Idx] == 0)) {
    hc_2785039680[hc_2785039680_Idx] = 314159265;
    }
    
    if (((t_2785039678.data).length == 0)) {
    result_2785039681 = -1;
    break BeforeRet;
    }
    
    var h_2785039770 = (hc_2785039680[hc_2785039680_Idx] & (t_2785039678.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785039678.data[chckIndx(h_2785039770, 0, (t_2785039678.data).length - 1)].Field0)) break Label2;
          if (((t_2785039678.data[chckIndx(h_2785039770, 0, (t_2785039678.data).length - 1)].Field0 == hc_2785039680[hc_2785039680_Idx]) && HEX3DHEX3D_2785019332(t_2785039678.data[chckIndx(h_2785039770, 0, (t_2785039678.data).length - 1)].Field1, key_2785039679))) {
          result_2785039681 = h_2785039770;
          break BeforeRet;
          }
          
          h_2785039770 = nextTry_1342177315(h_2785039770, (t_2785039678.data).length - 1);
        }
    };
    result_2785039681 = subInt(-1, h_2785039770);
  };

  return result_2785039681;

}

function getOrDefault_2785092735(t_2785092738, key_2785092739, default_2785092740) {
    var Temporary1;

  var result_2785092741 = null;

    var hcHEX60gensym497_2785092744 = [0];
    var indexHEX60gensym497_2785092751 = rawGet_2785039675(t_2785092738, key_2785092739, hcHEX60gensym497_2785092744, 0);
    if ((0 <= indexHEX60gensym497_2785092751)) {
    Temporary1 = t_2785092738.data[chckIndx(indexHEX60gensym497_2785092751, 0, (t_2785092738.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785092740;
    }
    
    result_2785092741 = Temporary1;

  return result_2785092741;

}

function newDoublyLinkedNode_2785092867(value_2785092869) {
  var result_2785092870 = null;

    result_2785092870 = ({next: null, prev: null, value: ({key: {Field0: ({id: 0}), Field1: 0}, val: null})});
    result_2785092870.value = nimCopy(result_2785092870.value, value_2785092869, NTI2785018119);

  return result_2785092870;

}

function mustRehash_2785093208(t_2785093210) {
  var result_2785093211 = false;

    if (!((t_2785093210.counter < (t_2785093210.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785093211 = ((mulInt((t_2785093210.data).length, 2) < mulInt(t_2785093210.counter, 3)) || (subInt((t_2785093210.data).length, t_2785093210.counter) < 4));

  return result_2785093211;

}

function rawInsert_2785093901(t_2785093905, data_2785093906, data_2785093906_Idx, key_2785093907, val_2785093908, hc_2785093909, h_2785093910) {
    data_2785093906[data_2785093906_Idx][chckIndx(h_2785093910, 0, (data_2785093906[data_2785093906_Idx]).length - 1)].Field1 = nimCopy(data_2785093906[data_2785093906_Idx][chckIndx(h_2785093910, 0, (data_2785093906[data_2785093906_Idx]).length - 1)].Field1, key_2785093907, NTI2801795097);
    data_2785093906[data_2785093906_Idx][chckIndx(h_2785093910, 0, (data_2785093906[data_2785093906_Idx]).length - 1)].Field2 = val_2785093908;
    data_2785093906[data_2785093906_Idx][chckIndx(h_2785093910, 0, (data_2785093906[data_2785093906_Idx]).length - 1)].Field0 = hc_2785093909;

  
}

function enlarge_2785093465(t_2785093468) {
    var n_2785093471 = [];
    n_2785093471 = new Array(chckRange(mulInt((t_2785093468.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785093468.data).length, 2), 0, 2147483647) ; ++i) { n_2785093471[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2785093468.data; t_2785093468.data = n_2785093471; n_2785093471 = Temporary1;    Label2: {
      var i_2785093569 = 0;
      var colontmp__2734686586 = 0;
      colontmp__2734686586 = (n_2785093471).length - 1;
      var res_2734686587 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686587 <= colontmp__2734686586)) break Label4;
            i_2785093569 = res_2734686587;
            var eh_2785093650 = n_2785093471[chckIndx(i_2785093569, 0, (n_2785093471).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785093650)) {
            var j_2785093654 = (eh_2785093650 & (t_2785093468.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785093468.data[chckIndx(j_2785093654, 0, (t_2785093468.data).length - 1)].Field0)) break Label6;
                  j_2785093654 = nextTry_1342177315(j_2785093654, (t_2785093468.data).length - 1);
                }
            };
            rawInsert_2785093901(t_2785093468, t_2785093468, "data", n_2785093471[chckIndx(i_2785093569, 0, (n_2785093471).length - 1)].Field1, n_2785093471[chckIndx(i_2785093569, 0, (n_2785093471).length - 1)].Field2, eh_2785093650, j_2785093654);
            }
            
            res_2734686587 = addInt(res_2734686587, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785094151(t_2785094154, key_2785094155, hc_2785094156) {
  var result_2785094157 = 0;

  BeforeRet: {
    if (((t_2785094154.data).length == 0)) {
    result_2785094157 = -1;
    break BeforeRet;
    }
    
    var h_2785094242 = (hc_2785094156 & (t_2785094154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785094154.data[chckIndx(h_2785094242, 0, (t_2785094154.data).length - 1)].Field0)) break Label2;
          if (((t_2785094154.data[chckIndx(h_2785094242, 0, (t_2785094154.data).length - 1)].Field0 == hc_2785094156) && HEX3DHEX3D_2785019332(t_2785094154.data[chckIndx(h_2785094242, 0, (t_2785094154.data).length - 1)].Field1, key_2785094155))) {
          result_2785094157 = h_2785094242;
          break BeforeRet;
          }
          
          h_2785094242 = nextTry_1342177315(h_2785094242, (t_2785094154.data).length - 1);
        }
    };
    result_2785094157 = subInt(-1, h_2785094242);
  };

  return result_2785094157;

}

function HEX5BHEX5DHEX3D_2785092940(t_2785092943, key_2785092944, val_2785092945) {
    if (((t_2785092943.data).length == 0)) {
    var correctSizeHEX60gensym500_2785093028 = slotsNeeded_1342177323(32);
    t_2785092943.counter = 0;
    t_2785092943.data = new Array(chckRange(correctSizeHEX60gensym500_2785093028, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym500_2785093028, 0, 2147483647) ; ++i) { t_2785092943.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2785093033 = [0];
    var index_2785093040 = rawGet_2785039675(t_2785092943, key_2785092944, hc_2785093033, 0);
    if ((0 <= index_2785093040)) {
    t_2785092943.data[chckIndx(index_2785093040, 0, (t_2785092943.data).length - 1)].Field2 = val_2785092945;
    }
    else {
      if (((t_2785092943.data).length == 0)) {
      var correctSizeHEX60gensym503_2785093203 = slotsNeeded_1342177323(32);
      t_2785092943.counter = 0;
      t_2785092943.data = new Array(chckRange(correctSizeHEX60gensym503_2785093203, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym503_2785093203, 0, 2147483647) ; ++i) { t_2785092943.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2785093208(t_2785092943)) {
      enlarge_2785093465(t_2785092943);
      index_2785093040 = rawGetKnownHC_2785094151(t_2785092943, key_2785092944, hc_2785093033[0]);
      }
      
      index_2785093040 = subInt(-1, index_2785093040);
      rawInsert_2785093901(t_2785092943, t_2785092943, "data", key_2785092944, val_2785092945, hc_2785093033[0], index_2785093040);
      t_2785092943.counter = addInt(t_2785092943.counter, 1);
    }
    

  
}

function prepend_2785040631(L_2785040633, n_2785040634) {
    n_2785040634.prev = null;
    n_2785040634.next = L_2785040633.head;
    if (!((L_2785040633.head == null))) {
    if (!((L_2785040633.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785040633.head.prev = n_2785040634;
    }
    
    L_2785040633.head = n_2785040634;
    if ((L_2785040633.tail == null)) {
    L_2785040633.tail = n_2785040634;
    }
    

  
}

function len_2785094762(t_2785094765) {
  var result_2785094766 = 0;

    result_2785094766 = t_2785094765.counter;

  return result_2785094766;

}

function len_2785094679(cache_2785094682) {
  var result_2785094683 = 0;

    result_2785094683 = len_2785094762(cache_2785094682.table);

  return result_2785094683;

}

function del_2785094854(t_2785094857, key_2785094858) {
    var hc_2785094859 = [0];
    var i_2785094866 = rawGet_2785039675(t_2785094857, key_2785094858, hc_2785094859, 0);
    var mskHEX60gensym36_2785094870 = (t_2785094857.data).length - 1;
    if ((0 <= i_2785094866)) {
    t_2785094857.counter = subInt(t_2785094857.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785094877 = i_2785094866;
            var rHEX60gensym36_2785094878 = jHEX60gensym36_2785094877;
            t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field0 = 0;
            t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field1 = nimCopy(t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field1, {Field0: ({id: 0}), Field1: 0}, NTI2801795097);
            t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785094866 = (addInt(i_2785094866, 1) & mskHEX60gensym36_2785094870);
                  if (isEmpty_1342177309(t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785094878 = (t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)].Field0 & mskHEX60gensym36_2785094870);
                  if (!(((((rHEX60gensym36_2785094878 <= i_2785094866) && (jHEX60gensym36_2785094877 < rHEX60gensym36_2785094878)) || ((jHEX60gensym36_2785094877 < rHEX60gensym36_2785094878) && (i_2785094866 < jHEX60gensym36_2785094877))) || ((i_2785094866 < jHEX60gensym36_2785094877) && (rHEX60gensym36_2785094878 <= i_2785094866))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785094857.data[chckIndx(jHEX60gensym36_2785094877, 0, (t_2785094857.data).length - 1)] = nimCopy(t_2785094857.data[chckIndx(jHEX60gensym36_2785094877, 0, (t_2785094857.data).length - 1)], t_2785094857.data[chckIndx(i_2785094866, 0, (t_2785094857.data).length - 1)], NTI2785018155);
          }
      };
    };
    }
    

  
}

function remove_2785040327(L_2785040329, n_2785040330) {
    if ((n_2785040330 == L_2785040329.tail)) {
    L_2785040329.tail = n_2785040330.prev;
    }
    
    if ((n_2785040330 == L_2785040329.head)) {
    L_2785040329.head = n_2785040330.next;
    }
    
    if (!((n_2785040330.next == null))) {
    n_2785040330.next.prev = n_2785040330.prev;
    }
    
    if (!((n_2785040330.prev == null))) {
    n_2785040330.prev.next = n_2785040330.next;
    }
    

  
}

function resize_2785094597(cache_2785094600) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785094600.capacity < len_2785094679(cache_2785094600))) break Label2;
          var t_2785094767 = cache_2785094600.list.tail;
          if (cache_2785094600.recordRemovedKeys) {
          incl_2785083078(cache_2785094600.removedKeys, t_2785094767.value.key);
          }
          
          del_2785094854(cache_2785094600.table, t_2785094767.value.key);
          remove_2785040327(cache_2785094600.list, t_2785094767);
        }
    };

  
}

function addNewNode_2785092859(cache_2785092862, key_2785092863, val_2785092864) {
    var node_2785092876 = newDoublyLinkedNode_2785092867({key: nimCopy(null, key_2785092863, NTI2801795097), val: val_2785092864});
    HEX5BHEX5DHEX3D_2785092940(cache_2785092862.table, key_2785092863, node_2785092876);
    prepend_2785040631(cache_2785092862.list, node_2785092876);
    if (cache_2785092862.recordRemovedKeys) {
    excl_2785081907(cache_2785092862.removedKeys, key_2785092863);
    }
    
    resize_2785094597(cache_2785092862);

  
}

function HEX5BHEX5DHEX3D_2785092640(cache_2785092643, key_2785092644, val_2785092645) {
    var node_2785092832 = getOrDefault_2785092735(cache_2785092643.table, key_2785092644, null);
    if ((node_2785092832 == null)) {
    addNewNode_2785092859(cache_2785092643, key_2785092644, val_2785092645);
    }
    else {
      node_2785092832.value.val = val_2785092645;
      remove_2785040327(cache_2785092643.list, node_2785092832);
      prepend_2785040631(cache_2785092643.list, node_2785092832);
    }
    

  
}

function newSymbol_2785099085(ctxHEX60gensym97_2785099086, dataHEX60gensym97_2785099087) {
  var result_2785099088 = null;

  BeforeRet: {
    var itemHEX60gensym97_2785099089 = getItem_2785092484(dataHEX60gensym97_2785099087);
    var keyHEX60gensym97_2785099090 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym97_2785099089, NTI2801795097), Field1: -1}, NTI2801795100);
    HEX5BHEX5DHEX3D_2801806532(ctxHEX60gensym97_2785099086.depGraph.changed, keyHEX60gensym97_2785099090, ctxHEX60gensym97_2785099086.depGraph.revision);
    HEX5BHEX5DHEX3D_2785092640(ctxHEX60gensym97_2785099086.itemsSymbol, itemHEX60gensym97_2785099089, dataHEX60gensym97_2785099087);
    result_2785099088 = dataHEX60gensym97_2785099087;
    break BeforeRet;
  };

  return result_2785099088;

}

function none_2785092477() {
  var result_2785092483 = ({val: null});

  return result_2785092483;

}

function none_2785092474() {
  var result_2785092476 = ({val: null});

    result_2785092476 = nimCopy(result_2785092476, none_2785092477(), NTI2868905073);

  return result_2785092476;

}

function computeSymbolImpl_2785018769(ctx_2785018770, node_2785018771) {
      var Temporary4;

  var result_2785142542 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym798_2785142544 = (ctx_2785018770.enableLogging || ctx_2785018770.enableQueryLogging);
    if (logQueryHEX60gensym798_2785142544) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym798_2785142544) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2768242647(node_2785018771) || []));
    }
    
    try {
    Label3: {
      var expr_2785142615 = node_2785018771;
      var pos_2785142616 = 0;
      var _ = pos_2785142616;
      if ((expr_2785142615.kind == 1)) {
      var symbols_2785142623 = computeSymbols_2785112618(ctx_2785018770, node_2785018771, true);
      if (contains_2785141154(symbols_2785142623, node_2785018771.reff)) {
      result_2785142542 = nimCopy(result_2785142542, some_2785092461((Temporary4 = HEX5BHEX5D_2785141409(symbols_2785142623, node_2785018771.reff), Temporary4)[0][Temporary4[1]]), NTI2868905073);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_2785142615.kind == 4)) {
      result_2785142542 = nimCopy(result_2785142542, some_2785092461(newSymbol_2785099085(ctx_2785018770, {kind: 0, id: nimCopy(null, node_2785018771.id, NTI2298478595), node: node_2785018771, name: nimCopy(null, node_2785018771.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2868905073);
      break BeforeRet;
      }
      else {
      if ((expr_2785142615.kind == 5)) {
      result_2785142542 = nimCopy(result_2785142542, some_2785092461(newSymbol_2785099085(ctx_2785018770, {kind: 0, id: nimCopy(null, node_2785018771.id, NTI2298478595), node: node_2785018771, name: nimCopy(null, node_2785018771.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2868905073);
      break BeforeRet;
      }
      else {
      if ((expr_2785142615.kind == 6)) {
      result_2785142542 = nimCopy(result_2785142542, some_2785092461(newSymbol_2785099085(ctx_2785018770, {kind: 0, id: nimCopy(null, node_2785018771.id, NTI2298478595), node: node_2785018771, name: nimCopy(null, node_2785018771.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI2868905073);
      break BeforeRet;
      }
      else {
        var fmtRes_2785142818 = [mnewString(0)];
        fmtRes_2785142818[0].push.apply(fmtRes_2785142818[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_2868904741(fmtRes_2785142818, 0, node_2785018771, []);
        log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2785142818[0], NTI33554449)]);
        result_2785142542 = nimCopy(result_2785142542, none_2785092474(), NTI2868905073);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym798_2785142544 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2785078912(result_2785142542) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym798_2785142544) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785142542;

}

function getOrDefault_2785031301(t_2785031304, key_2785031305, default_2785031306) {
    var Temporary1;

  var result_2785031307 = null;

    var hcHEX60gensym195_2785031310 = [0];
    var indexHEX60gensym195_2785031669 = rawGet_2785031311(t_2785031304, key_2785031305, hcHEX60gensym195_2785031310, 0);
    if ((0 <= indexHEX60gensym195_2785031669)) {
    Temporary1 = t_2785031304.data[chckIndx(indexHEX60gensym195_2785031669, 0, (t_2785031304.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785031306;
    }
    
    result_2785031307 = Temporary1;

  return result_2785031307;

}

function newDoublyLinkedNode_2785031794(value_2785031796) {
  var result_2785031797 = null;

    result_2785031797 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_2785031797.value = nimCopy(result_2785031797.value, value_2785031796, NTI2785018431);

  return result_2785031797;

}

function mustRehash_2785032144(t_2785032146) {
  var result_2785032147 = false;

    if (!((t_2785032146.counter < (t_2785032146.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785032147 = ((mulInt((t_2785032146.data).length, 2) < mulInt(t_2785032146.counter, 3)) || (subInt((t_2785032146.data).length, t_2785032146.counter) < 4));

  return result_2785032147;

}

function rawInsert_2785032837(t_2785032841, data_2785032842, data_2785032842_Idx, key_2785032843, val_2785032844, hc_2785032845, h_2785032846) {
    data_2785032842[data_2785032842_Idx][chckIndx(h_2785032846, 0, (data_2785032842[data_2785032842_Idx]).length - 1)].Field1 = key_2785032843;
    data_2785032842[data_2785032842_Idx][chckIndx(h_2785032846, 0, (data_2785032842[data_2785032842_Idx]).length - 1)].Field2 = val_2785032844;
    data_2785032842[data_2785032842_Idx][chckIndx(h_2785032846, 0, (data_2785032842[data_2785032842_Idx]).length - 1)].Field0 = hc_2785032845;

  
}

function enlarge_2785032401(t_2785032404) {
    var n_2785032407 = [];
    n_2785032407 = new Array(chckRange(mulInt((t_2785032404.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785032404.data).length, 2), 0, 2147483647) ; ++i) { n_2785032407[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785032404.data; t_2785032404.data = n_2785032407; n_2785032407 = Temporary1;    Label2: {
      var i_2785032505 = 0;
      var colontmp__2734686595 = 0;
      colontmp__2734686595 = (n_2785032407).length - 1;
      var res_2734686596 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686596 <= colontmp__2734686595)) break Label4;
            i_2785032505 = res_2734686596;
            var eh_2785032586 = n_2785032407[chckIndx(i_2785032505, 0, (n_2785032407).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785032586)) {
            var j_2785032590 = (eh_2785032586 & (t_2785032404.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785032404.data[chckIndx(j_2785032590, 0, (t_2785032404.data).length - 1)].Field0)) break Label6;
                  j_2785032590 = nextTry_1342177315(j_2785032590, (t_2785032404.data).length - 1);
                }
            };
            rawInsert_2785032837(t_2785032404, t_2785032404, "data", n_2785032407[chckIndx(i_2785032505, 0, (n_2785032407).length - 1)].Field1, n_2785032407[chckIndx(i_2785032505, 0, (n_2785032407).length - 1)].Field2, eh_2785032586, j_2785032590);
            }
            
            res_2734686596 = addInt(res_2734686596, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785033087(t_2785033090, key_2785033091, hc_2785033092) {
  var result_2785033093 = 0;

  BeforeRet: {
    if (((t_2785033090.data).length == 0)) {
    result_2785033093 = -1;
    break BeforeRet;
    }
    
    var h_2785033178 = (hc_2785033092 & (t_2785033090.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785033090.data[chckIndx(h_2785033178, 0, (t_2785033090.data).length - 1)].Field0)) break Label2;
          if (((t_2785033090.data[chckIndx(h_2785033178, 0, (t_2785033090.data).length - 1)].Field0 == hc_2785033092) && (t_2785033090.data[chckIndx(h_2785033178, 0, (t_2785033090.data).length - 1)].Field1 == key_2785033091))) {
          result_2785033093 = h_2785033178;
          break BeforeRet;
          }
          
          h_2785033178 = nextTry_1342177315(h_2785033178, (t_2785033090.data).length - 1);
        }
    };
    result_2785033093 = subInt(-1, h_2785033178);
  };

  return result_2785033093;

}

function HEX5BHEX5DHEX3D_2785031876(t_2785031879, key_2785031880, val_2785031881) {
    if (((t_2785031879.data).length == 0)) {
    var correctSizeHEX60gensym200_2785031964 = slotsNeeded_1342177323(32);
    t_2785031879.counter = 0;
    t_2785031879.data = new Array(chckRange(correctSizeHEX60gensym200_2785031964, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym200_2785031964, 0, 2147483647) ; ++i) { t_2785031879.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785031969 = [0];
    var index_2785031976 = rawGet_2785031311(t_2785031879, key_2785031880, hc_2785031969, 0);
    if ((0 <= index_2785031976)) {
    t_2785031879.data[chckIndx(index_2785031976, 0, (t_2785031879.data).length - 1)].Field2 = val_2785031881;
    }
    else {
      if (((t_2785031879.data).length == 0)) {
      var correctSizeHEX60gensym203_2785032139 = slotsNeeded_1342177323(32);
      t_2785031879.counter = 0;
      t_2785031879.data = new Array(chckRange(correctSizeHEX60gensym203_2785032139, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym203_2785032139, 0, 2147483647) ; ++i) { t_2785031879.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785032144(t_2785031879)) {
      enlarge_2785032401(t_2785031879);
      index_2785031976 = rawGetKnownHC_2785033087(t_2785031879, key_2785031880, hc_2785031969[0]);
      }
      
      index_2785031976 = subInt(-1, index_2785031976);
      rawInsert_2785032837(t_2785031879, t_2785031879, "data", key_2785031880, val_2785031881, hc_2785031969[0], index_2785031976);
      t_2785031879.counter = addInt(t_2785031879.counter, 1);
    }
    

  
}

function len_2785033889(t_2785033892) {
  var result_2785033893 = 0;

    result_2785033893 = t_2785033892.counter;

  return result_2785033893;

}

function len_2785033806(cache_2785033809) {
  var result_2785033810 = 0;

    result_2785033810 = len_2785033889(cache_2785033809.table);

  return result_2785033810;

}

function del_2785033981(t_2785033984, key_2785033985) {
    var hc_2785033986 = [0];
    var i_2785033993 = rawGet_2785031311(t_2785033984, key_2785033985, hc_2785033986, 0);
    var mskHEX60gensym36_2785033997 = (t_2785033984.data).length - 1;
    if ((0 <= i_2785033993)) {
    t_2785033984.counter = subInt(t_2785033984.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785034004 = i_2785033993;
            var rHEX60gensym36_2785034005 = jHEX60gensym36_2785034004;
            t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)].Field0 = 0;
            t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)].Field1 = null;
            t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785033993 = (addInt(i_2785033993, 1) & mskHEX60gensym36_2785033997);
                  if (isEmpty_1342177309(t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785034005 = (t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)].Field0 & mskHEX60gensym36_2785033997);
                  if (!(((((rHEX60gensym36_2785034005 <= i_2785033993) && (jHEX60gensym36_2785034004 < rHEX60gensym36_2785034005)) || ((jHEX60gensym36_2785034004 < rHEX60gensym36_2785034005) && (i_2785033993 < jHEX60gensym36_2785034004))) || ((i_2785033993 < jHEX60gensym36_2785034004) && (rHEX60gensym36_2785034005 <= i_2785033993))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785033984.data[chckIndx(jHEX60gensym36_2785034004, 0, (t_2785033984.data).length - 1)] = nimCopy(t_2785033984.data[chckIndx(jHEX60gensym36_2785034004, 0, (t_2785033984.data).length - 1)], t_2785033984.data[chckIndx(i_2785033993, 0, (t_2785033984.data).length - 1)], NTI2785018467);
          }
      };
    };
    }
    

  
}

function resize_2785033724(cache_2785033727) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785033727.capacity < len_2785033806(cache_2785033727))) break Label2;
          var t_2785033894 = cache_2785033727.list.tail;
          if (cache_2785033727.recordRemovedKeys) {
          incl_2785023869(cache_2785033727.removedKeys, t_2785033894.value.key);
          }
          
          del_2785033981(cache_2785033727.table, t_2785033894.value.key);
          remove_2785034740(cache_2785033727.list, t_2785033894);
        }
    };

  
}

function addNewNode_2785031786(cache_2785031789, key_2785031790, val_2785031791) {
    var node_2785031812 = newDoublyLinkedNode_2785031794({key: key_2785031790, val: nimCopy(null, val_2785031791, NTI2868905073)});
    HEX5BHEX5DHEX3D_2785031876(cache_2785031789.table, key_2785031790, node_2785031812);
    prepend_2785033487(cache_2785031789.list, node_2785031812);
    if (cache_2785031789.recordRemovedKeys) {
    excl_2785022710(cache_2785031789.removedKeys, key_2785031790);
    }
    
    resize_2785033724(cache_2785031789);

  
}

function HEX5BHEX5DHEX3D_2785031206(cache_2785031209, key_2785031210, val_2785031211) {
    var node_2785031759 = getOrDefault_2785031301(cache_2785031209.table, key_2785031210, null);
    if ((node_2785031759 == null)) {
    addNewNode_2785031786(cache_2785031209, key_2785031210, val_2785031211);
    }
    else {
      node_2785031759.value.val = nimCopy(node_2785031759.value.val, val_2785031211, NTI2868905073);
      remove_2785034740(cache_2785031209.list, node_2785031759);
      prepend_2785033487(cache_2785031209.list, node_2785031759);
    }
    

  
}

function fingerprint_2868905087(symbol_2868905088) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_2868905089 = [];

    switch (symbol_2868905088.kind) {
    case 0:
      var Temporary1 = symbol_2868905088;
      if (ConstSet80[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903945)); }
      result_2868905089 = nimCopy(null, [hash_2298478681(symbol_2868905088.id), hash_1358954923(symbol_2868905088.name), symbol_2868905088.kind, hash_2298478681(Temporary1.node.id)], NTI2868904822);
      break;
    case 1:
      var Temporary2 = symbol_2868905088;
      if (ConstSet81[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      var Temporary3 = symbol_2868905088;
      if (ConstSet82[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      var Temporary4 = symbol_2868905088;
      if (ConstSet83[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      var Temporary5 = symbol_2868905088;
      if (ConstSet84[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903945)); }
      result_2868905089 = nimCopy(null, HEX26_2868904515(HEX26_2868904515([hash_2298478681(symbol_2868905088.id), hash_1358954923(symbol_2868905088.name), symbol_2868905088.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_2868904508(Temporary4.typ)), fingerprint_2868904689(Temporary5.value)), NTI2868904368);
      break;
    }

  return result_2868905089;

}

function fingerprint_2868905481(symbol_2868905486) {
      var Temporary1;

  var result_2868905487 = [];

  BeforeRet: {
      var oHEX60gensym25_2868905490 = nimCopy(null, symbol_2868905486, NTI2868905073);
      if (!isSome_2868905495(oHEX60gensym25_2868905490)) Temporary1 = false; else {        var s_2868905541 = get_2868905515(oHEX60gensym25_2868905490);
        Temporary1 = true;      }    if (Temporary1) {
    result_2868905487 = nimCopy(null, fingerprint_2868905087(s_2868905541), NTI2801795096);
    break BeforeRet;
    }
    
    result_2868905487 = nimCopy(null, [], NTI2046822965);
    break BeforeRet;
  };

  return result_2868905487;

}

function initDoublyLinkedList_2785035183() {
  var result_2785035185 = ({head: null, tail: null});

  return result_2785035185;

}

function initTable_2785035189(initialSize_2785035192) {
  var result_2785035193 = ({data: [], counter: 0});

    var correctSizeHEX60gensym213_2785035195 = slotsNeeded_1342177323(chckRange(initialSize_2785035192, 0, 2147483647));
    result_2785035193.counter = 0;
    result_2785035193.data = new Array(chckRange(correctSizeHEX60gensym213_2785035195, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym213_2785035195, 0, 2147483647) ; ++i) { result_2785035193.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785035193;

}

function newLruCache_2785035173(capacity_2785035176, recordRemovedKeys_2785035177) {
  var result_2785035178 = null;

    result_2785035178 = {capacity: capacity_2785035176, list: initDoublyLinkedList_2785035183(), table: initTable_2785035189(correctSize_2818572309(capacity_2785035176)), recordRemovedKeys: recordRemovedKeys_2785035177, removedKeys: ({data: [], counter: 0})};

  return result_2785035178;

}

function newCache_2785035168(capacity_2785035171) {
  var result_2785035172 = null;

    result_2785035172 = newLruCache_2785035173(capacity_2785035171, false);

  return result_2785035172;

}

function init_2785035163(result_2785035166, result_2785035166_Idx, capacity_2785035167) {
    result_2785035166[result_2785035166_Idx] = newCache_2785035168(capacity_2785035167);

  
}

function initTable_2785078011(initialSize_2785078014) {
  var result_2785078015 = ({data: [], counter: 0});

    var correctSizeHEX60gensym421_2785078017 = slotsNeeded_1342177323(chckRange(initialSize_2785078014, 0, 2147483647));
    result_2785078015.counter = 0;
    result_2785078015.data = new Array(chckRange(correctSizeHEX60gensym421_2785078017, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym421_2785078017, 0, 2147483647) ; ++i) { result_2785078015.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }
  return result_2785078015;

}

function newTable_2785129706(initialSize_2785129709) {
  var result_2785129710 = null;

    result_2785129710 = ({data: [], counter: 0});
    result_2785129710 = nimCopy(result_2785129710, initTable_2785078011(initialSize_2785129709), NTI2868904881);

  return result_2785129710;

}

function none_2768240847() {
  var result_2768240853 = ({val: null});

  return result_2768240853;

}

function none_2768240844() {
  var result_2768240846 = ({val: null});

    result_2768240846 = nimCopy(result_2768240846, none_2768240847(), NTI2768240759);

  return result_2768240846;

}

function some_2768240866(val_2768240868) {
  var result_2768240869 = ({val: null});

    if (!(!((val_2768240868 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2768240869.val = val_2768240868;

  return result_2768240869;

}

function findWithParentRec_2768242565(node_2768242566, kind_2768242567) {
  var result_2768242569 = ({val: null});

  BeforeRet: {
    if ((node_2768242566.parent == null)) {
    result_2768242569 = nimCopy(result_2768242569, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    if ((node_2768242566.parent.kind == kind_2768242567)) {
    result_2768242569 = nimCopy(result_2768242569, some_2768240866(node_2768242566), NTI2768240759);
    break BeforeRet;
    }
    
    result_2768242569 = nimCopy(result_2768242569, findWithParentRec_2768242565(node_2768242566.parent, kind_2768242567), NTI2768240759);
    break BeforeRet;
  };

  return result_2768242569;

}

function isSome_2768242522(self_2768242524) {
  var result_2768242525 = false;

    result_2768242525 = !((self_2768242524.val == null));

  return result_2768242525;

}

function isNone_2768242550(self_2768242552) {
  var result_2768242553 = false;

    result_2768242553 = (self_2768242552.val == null);

  return result_2768242553;

}

function get_2768242542(self_2768242544) {
  var result_2768242545 = null;

    if (isNone_2768242550(self_2768242544)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2768242545 = self_2768242544["val"];

  return result_2768242545;

}

function mustRehash_2785130503(t_2785130505) {
  var result_2785130506 = false;

    if (!((t_2785130505.counter < (t_2785130505.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785130506 = ((mulInt((t_2785130505.data).length, 2) < mulInt(t_2785130505.counter, 3)) || (subInt((t_2785130505.data).length, t_2785130505.counter) < 4));

  return result_2785130506;

}

function rawInsert_2785131196(t_2785131200, data_2785131201, data_2785131201_Idx, key_2785131202, val_2785131203, hc_2785131204, h_2785131205) {
    data_2785131201[data_2785131201_Idx][chckIndx(h_2785131205, 0, (data_2785131201[data_2785131201_Idx]).length - 1)].Field1 = nimCopy(data_2785131201[data_2785131201_Idx][chckIndx(h_2785131205, 0, (data_2785131201[data_2785131201_Idx]).length - 1)].Field1, key_2785131202, NTI2298478595);
    data_2785131201[data_2785131201_Idx][chckIndx(h_2785131205, 0, (data_2785131201[data_2785131201_Idx]).length - 1)].Field2 = val_2785131203;
    data_2785131201[data_2785131201_Idx][chckIndx(h_2785131205, 0, (data_2785131201[data_2785131201_Idx]).length - 1)].Field0 = hc_2785131204;

  
}

function enlarge_2785130760(t_2785130763) {
    var n_2785130766 = [];
    n_2785130766 = new Array(chckRange(mulInt((t_2785130763.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785130763.data).length, 2), 0, 2147483647) ; ++i) { n_2785130766[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }    var Temporary1 = t_2785130763.data; t_2785130763.data = n_2785130766; n_2785130766 = Temporary1;    Label2: {
      var i_2785130864 = 0;
      var colontmp__2734686640 = 0;
      colontmp__2734686640 = (n_2785130766).length - 1;
      var res_2734686641 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686641 <= colontmp__2734686640)) break Label4;
            i_2785130864 = res_2734686641;
            var eh_2785130945 = n_2785130766[chckIndx(i_2785130864, 0, (n_2785130766).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785130945)) {
            var j_2785130949 = (eh_2785130945 & (t_2785130763.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785130763.data[chckIndx(j_2785130949, 0, (t_2785130763.data).length - 1)].Field0)) break Label6;
                  j_2785130949 = nextTry_1342177315(j_2785130949, (t_2785130763.data).length - 1);
                }
            };
            rawInsert_2785131196(t_2785130763, t_2785130763, "data", n_2785130766[chckIndx(i_2785130864, 0, (n_2785130766).length - 1)].Field1, n_2785130766[chckIndx(i_2785130864, 0, (n_2785130766).length - 1)].Field2, eh_2785130945, j_2785130949);
            }
            
            res_2734686641 = addInt(res_2734686641, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785131446(t_2785131449, key_2785131450, hc_2785131451) {
  var result_2785131452 = 0;

  BeforeRet: {
    if (((t_2785131449.data).length == 0)) {
    result_2785131452 = -1;
    break BeforeRet;
    }
    
    var h_2785131537 = (hc_2785131451 & (t_2785131449.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785131449.data[chckIndx(h_2785131537, 0, (t_2785131449.data).length - 1)].Field0)) break Label2;
          if (((t_2785131449.data[chckIndx(h_2785131537, 0, (t_2785131449.data).length - 1)].Field0 == hc_2785131451) && HEX3DHEX3D_2298478667(t_2785131449.data[chckIndx(h_2785131537, 0, (t_2785131449.data).length - 1)].Field1, key_2785131450))) {
          result_2785131452 = h_2785131537;
          break BeforeRet;
          }
          
          h_2785131537 = nextTry_1342177315(h_2785131537, (t_2785131449.data).length - 1);
        }
    };
    result_2785131452 = subInt(-1, h_2785131537);
  };

  return result_2785131452;

}

function HEX5BHEX5DHEX3D_2785129905(t_2785129908, key_2785129909, val_2785129910) {
    if (((t_2785129908.data).length == 0)) {
    var correctSizeHEX60gensym617_2785129994 = slotsNeeded_1342177323(32);
    t_2785129908.counter = 0;
    t_2785129908.data = new Array(chckRange(correctSizeHEX60gensym617_2785129994, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym617_2785129994, 0, 2147483647) ; ++i) { t_2785129908.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }    }
    
    var hc_2785129999 = [0];
    var index_2785130335 = rawGet_2785130000(t_2785129908, key_2785129909, hc_2785129999, 0);
    if ((0 <= index_2785130335)) {
    t_2785129908.data[chckIndx(index_2785130335, 0, (t_2785129908.data).length - 1)].Field2 = val_2785129910;
    }
    else {
      if (((t_2785129908.data).length == 0)) {
      var correctSizeHEX60gensym622_2785130498 = slotsNeeded_1342177323(32);
      t_2785129908.counter = 0;
      t_2785129908.data = new Array(chckRange(correctSizeHEX60gensym622_2785130498, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym622_2785130498, 0, 2147483647) ; ++i) { t_2785129908.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }      }
      
      if (mustRehash_2785130503(t_2785129908)) {
      enlarge_2785130760(t_2785129908);
      index_2785130335 = rawGetKnownHC_2785131446(t_2785129908, key_2785129909, hc_2785129999[0]);
      }
      
      index_2785130335 = subInt(-1, index_2785130335);
      rawInsert_2785131196(t_2785129908, t_2785129908, "data", key_2785129909, val_2785129910, hc_2785129999[0], index_2785130335);
      t_2785129908.counter = addInt(t_2785129908.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_2785143062(t_2785143065, key_2785143066, val_2785143067) {
    HEX5BHEX5DHEX3D_2785129905(t_2785143065, key_2785143066, val_2785143067);

  
}

function base_2768240734(node_2768240735) {
  var result_2768240736 = null;

  BeforeRet: {
    if ((node_2768240735.parent == null)) {
    result_2768240736 = node_2768240735;
    break BeforeRet;
    }
    
    result_2768240736 = base_2768240734(node_2768240735.parent);
    break BeforeRet;
  };

  return result_2768240736;

}

function len_2785143750(t_2785143753) {
  var result_2785143754 = 0;

    result_2785143754 = t_2785143753.counter;

  return result_2785143754;

}

function computeSymbolsImpl_2785018773(ctx_2785018774, node_2785018775) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_2785142857 = null;

    var logQueryHEX60gensym809_2785142859 = (ctx_2785018774.enableLogging || ctx_2785018774.enableQueryLogging);
    if (logQueryHEX60gensym809_2785142859) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym809_2785142859) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2768242647(node_2785018775) || []));
    }
    
    try {
    result_2785142857 = newTable_2785129706(32);
      var oHEX60gensym810_2785142941 = findWithParentRec_2768242565(node_2785018775, 7);
      if (!isSome_2768242522(oHEX60gensym810_2785142941)) Temporary4 = false; else {        var parentInNodeList_2785142987 = get_2768242542(oHEX60gensym810_2785142941);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_2785142987.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_2785142992 = computeSymbols_2785112618(ctx_2785018774, parentInNodeList_2785142987.parent, true);
    Label5: {
      var id_2785142997 = ({id: 0});
      var sym_2785142998 = null;
      var L_2734686603 = len_2868905204(parentSymbols_2785142992);
      Label6: {
        var h_2734686605 = 0;
        var colontmp__2734686606 = 0;
        colontmp__2734686606 = (parentSymbols_2785142992.data).length - 1;
        var res_2734686607 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2734686607 <= colontmp__2734686606)) break Label8;
              h_2734686605 = res_2734686607;
              if (isFilled_1342177312(parentSymbols_2785142992.data[chckIndx(h_2734686605, 0, (parentSymbols_2785142992.data).length - 1)].Field0)) {
              var colontmp__2734686610 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_2785142992.data[chckIndx(h_2734686605, 0, (parentSymbols_2785142992.data).length - 1)].Field1, NTI2298478595), Field1: parentSymbols_2785142992.data[chckIndx(h_2734686605, 0, (parentSymbols_2785142992.data).length - 1)].Field2}, NTI2868904899);
              id_2785142997 = nimCopy(id_2785142997, colontmp__2734686610["Field0"], NTI2298478595);
              sym_2785142998 = colontmp__2734686610["Field1"];
              HEX5BHEX5DHEX3D_2785143062(result_2785142857, id_2785142997, sym_2785142998);
              if (!((len_2868905204(parentSymbols_2785142992) == L_2734686603))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2734686607 = addInt(res_2734686607, 1);
            }
        };
      };
    };
    recordDependency_2785079604(ctx_2785018774, getItem_2785079817(parentInNodeList_2785142987.parent), -1);
    var bIsOrderDependent_2785143221 = !((parentInNodeList_2785142987.parent.parent == null));
    Label9: {
      var child_2785143225 = null;
      var i_2734686613 = 0;
      var L_2734686614 = (parentInNodeList_2785142987.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2734686613 < L_2734686614)) break Label11;
            child_2785143225 = parentInNodeList_2785142987.parent.children[chckIndx(i_2734686613, 0, (parentInNodeList_2785142987.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_2785143221 && (child_2785143225 == parentInNodeList_2785142987))) {
              break Label9;
              }
              
              if (((!((child_2785143225.kind == 4)) && !((child_2785143225.kind == 5))) && !((child_2785143225.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym816_2785143244 = computeSymbol_2785109118(ctx_2785018774, child_2785143225, true);
                if (!isSome_2868905495(oHEX60gensym816_2785143244)) Temporary13 = false; else {                  var symbol_2785143290 = get_2868905515(oHEX60gensym816_2785143244);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_2785143062(result_2785142857, symbol_2785143290.id, symbol_2785143290);
              }
              
            };
            i_2734686613 = addInt(i_2734686613, 1);
            if (!(((parentInNodeList_2785142987.parent.children).length == L_2734686614))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym817_2785143362 = findWithParentRec_2768242565(node_2785018775, 11);
      if (!isSome_2768242522(oHEX60gensym817_2785143362)) Temporary14 = false; else {        var parentInFunctionDef_2785143408 = get_2768242542(oHEX60gensym817_2785143362);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_2785143409 = parentInFunctionDef_2785143408.parent;
    if ((0 < len_2768240728(functionDefinition_2785143409))) {
    var params_2785143410 = HEX5BHEX5D_2768240724(functionDefinition_2785143409, 0);
    recordDependency_2785079604(ctx_2785018774, getItem_2785079817(params_2785143410), -1);
    Label15: {
      var param_2785143414 = null;
      var i_2734686617 = 0;
      var L_2734686618 = (params_2785143410.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2734686617 < L_2734686618)) break Label17;
            param_2785143414 = params_2785143410.children[chckIndx(i_2734686617, 0, (params_2785143410.children).length - 1)];
            recordDependency_2785079604(ctx_2785018774, getItem_2785079817(param_2785143414), -1);
              var oHEX60gensym819_2785143417 = computeSymbol_2785109118(ctx_2785018774, param_2785143414, true);
              if (!isSome_2868905495(oHEX60gensym819_2785143417)) Temporary18 = false; else {                var symbol_2785143463 = get_2868905515(oHEX60gensym819_2785143417);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_2785143062(result_2785142857, param_2785143414.id, symbol_2785143463);
            }
            
            i_2734686617 = addInt(i_2734686617, 1);
            if (!(((params_2785143410.children).length == L_2734686618))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_2785143533 = base_2768240734(node_2785018775);
    recordDependency_2785079604(ctx_2785018774, getItem_2785079817(root_2785143533), -1);
    Label19: {
      var child_2785143537 = null;
      var i_2734686622 = 0;
      var L_2734686623 = (root_2785143533.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2734686622 < L_2734686623)) break Label21;
            child_2785143537 = root_2785143533.children[chckIndx(i_2734686622, 0, (root_2785143533.children).length - 1)];
            Label22: {
              if (((!((child_2785143537.kind == 4)) && !((child_2785143537.kind == 5))) && !((child_2785143537.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym823_2785143552 = computeSymbol_2785109118(ctx_2785018774, child_2785143537, true);
                if (!isSome_2868905495(oHEX60gensym823_2785143552)) Temporary23 = false; else {                  var symbol_2785143598 = get_2868905515(oHEX60gensym823_2785143552);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_2785143062(result_2785142857, symbol_2785143598.id, symbol_2785143598);
              }
              
            };
            i_2734686622 = addInt(i_2734686622, 1);
            if (!(((root_2785143533.children).length == L_2734686623))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_2785144091 = ({id: 0});
      var symbol_2785144092 = null;
      var L_2734686630 = len_2785143750(ctx_2785018774.globalScope);
      Label25: {
        var h_2734686632 = 0;
        var colontmp__2734686633 = 0;
        colontmp__2734686633 = (ctx_2785018774.globalScope.data).length - 1;
        var res_2734686634 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2734686634 <= colontmp__2734686633)) break Label27;
              h_2734686632 = res_2734686634;
              if (isFilled_1342177312(ctx_2785018774.globalScope.data[chckIndx(h_2734686632, 0, (ctx_2785018774.globalScope.data).length - 1)].Field0)) {
              var colontmp__2734686637 = nimCopy(null, {Field0: nimCopy(null, ctx_2785018774.globalScope.data[chckIndx(h_2734686632, 0, (ctx_2785018774.globalScope.data).length - 1)].Field1, NTI2298478595), Field1: ctx_2785018774.globalScope.data[chckIndx(h_2734686632, 0, (ctx_2785018774.globalScope.data).length - 1)].Field2}, NTI2785091801);
              key_2785144091 = nimCopy(key_2785144091, colontmp__2734686637["Field0"], NTI2298478595);
              symbol_2785144092 = colontmp__2734686637["Field1"];
              recordDependency_2785079604(ctx_2785018774, getItem_2785092484(symbol_2785144092), -1);
              HEX5BHEX5DHEX3D_2785143062(result_2785142857, symbol_2785144092.id, symbol_2785144092);
              if (!((len_2785143750(ctx_2785018774.globalScope) == L_2734686630))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2734686634 = addInt(res_2734686634, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym809_2785142859 && false)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2785079072(result_2785142857) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym809_2785142859) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }

  return result_2785142857;

}

function getOrDefault_2785035563(t_2785035566, key_2785035567, default_2785035568) {
    var Temporary1;

  var result_2785035569 = null;

    var hcHEX60gensym216_2785035572 = [0];
    var indexHEX60gensym216_2785035931 = rawGet_2785035573(t_2785035566, key_2785035567, hcHEX60gensym216_2785035572, 0);
    if ((0 <= indexHEX60gensym216_2785035931)) {
    Temporary1 = t_2785035566.data[chckIndx(indexHEX60gensym216_2785035931, 0, (t_2785035566.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785035568;
    }
    
    result_2785035569 = Temporary1;

  return result_2785035569;

}

function newDoublyLinkedNode_2785036056(value_2785036058) {
  var result_2785036059 = null;

    result_2785036059 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2785036059.value = nimCopy(result_2785036059.value, value_2785036058, NTI2785018504);

  return result_2785036059;

}

function mustRehash_2785036406(t_2785036408) {
  var result_2785036409 = false;

    if (!((t_2785036408.counter < (t_2785036408.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785036409 = ((mulInt((t_2785036408.data).length, 2) < mulInt(t_2785036408.counter, 3)) || (subInt((t_2785036408.data).length, t_2785036408.counter) < 4));

  return result_2785036409;

}

function rawInsert_2785037099(t_2785037103, data_2785037104, data_2785037104_Idx, key_2785037105, val_2785037106, hc_2785037107, h_2785037108) {
    data_2785037104[data_2785037104_Idx][chckIndx(h_2785037108, 0, (data_2785037104[data_2785037104_Idx]).length - 1)].Field1 = key_2785037105;
    data_2785037104[data_2785037104_Idx][chckIndx(h_2785037108, 0, (data_2785037104[data_2785037104_Idx]).length - 1)].Field2 = val_2785037106;
    data_2785037104[data_2785037104_Idx][chckIndx(h_2785037108, 0, (data_2785037104[data_2785037104_Idx]).length - 1)].Field0 = hc_2785037107;

  
}

function enlarge_2785036663(t_2785036666) {
    var n_2785036669 = [];
    n_2785036669 = new Array(chckRange(mulInt((t_2785036666.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785036666.data).length, 2), 0, 2147483647) ; ++i) { n_2785036669[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785036666.data; t_2785036666.data = n_2785036669; n_2785036669 = Temporary1;    Label2: {
      var i_2785036767 = 0;
      var colontmp__2734686646 = 0;
      colontmp__2734686646 = (n_2785036669).length - 1;
      var res_2734686647 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686647 <= colontmp__2734686646)) break Label4;
            i_2785036767 = res_2734686647;
            var eh_2785036848 = n_2785036669[chckIndx(i_2785036767, 0, (n_2785036669).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785036848)) {
            var j_2785036852 = (eh_2785036848 & (t_2785036666.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785036666.data[chckIndx(j_2785036852, 0, (t_2785036666.data).length - 1)].Field0)) break Label6;
                  j_2785036852 = nextTry_1342177315(j_2785036852, (t_2785036666.data).length - 1);
                }
            };
            rawInsert_2785037099(t_2785036666, t_2785036666, "data", n_2785036669[chckIndx(i_2785036767, 0, (n_2785036669).length - 1)].Field1, n_2785036669[chckIndx(i_2785036767, 0, (n_2785036669).length - 1)].Field2, eh_2785036848, j_2785036852);
            }
            
            res_2734686647 = addInt(res_2734686647, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785037349(t_2785037352, key_2785037353, hc_2785037354) {
  var result_2785037355 = 0;

  BeforeRet: {
    if (((t_2785037352.data).length == 0)) {
    result_2785037355 = -1;
    break BeforeRet;
    }
    
    var h_2785037440 = (hc_2785037354 & (t_2785037352.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785037352.data[chckIndx(h_2785037440, 0, (t_2785037352.data).length - 1)].Field0)) break Label2;
          if (((t_2785037352.data[chckIndx(h_2785037440, 0, (t_2785037352.data).length - 1)].Field0 == hc_2785037354) && (t_2785037352.data[chckIndx(h_2785037440, 0, (t_2785037352.data).length - 1)].Field1 == key_2785037353))) {
          result_2785037355 = h_2785037440;
          break BeforeRet;
          }
          
          h_2785037440 = nextTry_1342177315(h_2785037440, (t_2785037352.data).length - 1);
        }
    };
    result_2785037355 = subInt(-1, h_2785037440);
  };

  return result_2785037355;

}

function HEX5BHEX5DHEX3D_2785036138(t_2785036141, key_2785036142, val_2785036143) {
    if (((t_2785036141.data).length == 0)) {
    var correctSizeHEX60gensym221_2785036226 = slotsNeeded_1342177323(32);
    t_2785036141.counter = 0;
    t_2785036141.data = new Array(chckRange(correctSizeHEX60gensym221_2785036226, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym221_2785036226, 0, 2147483647) ; ++i) { t_2785036141.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785036231 = [0];
    var index_2785036238 = rawGet_2785035573(t_2785036141, key_2785036142, hc_2785036231, 0);
    if ((0 <= index_2785036238)) {
    t_2785036141.data[chckIndx(index_2785036238, 0, (t_2785036141.data).length - 1)].Field2 = val_2785036143;
    }
    else {
      if (((t_2785036141.data).length == 0)) {
      var correctSizeHEX60gensym224_2785036401 = slotsNeeded_1342177323(32);
      t_2785036141.counter = 0;
      t_2785036141.data = new Array(chckRange(correctSizeHEX60gensym224_2785036401, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym224_2785036401, 0, 2147483647) ; ++i) { t_2785036141.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785036406(t_2785036141)) {
      enlarge_2785036663(t_2785036141);
      index_2785036238 = rawGetKnownHC_2785037349(t_2785036141, key_2785036142, hc_2785036231[0]);
      }
      
      index_2785036238 = subInt(-1, index_2785036238);
      rawInsert_2785037099(t_2785036141, t_2785036141, "data", key_2785036142, val_2785036143, hc_2785036231[0], index_2785036238);
      t_2785036141.counter = addInt(t_2785036141.counter, 1);
    }
    

  
}

function len_2785038151(t_2785038154) {
  var result_2785038155 = 0;

    result_2785038155 = t_2785038154.counter;

  return result_2785038155;

}

function len_2785038068(cache_2785038071) {
  var result_2785038072 = 0;

    result_2785038072 = len_2785038151(cache_2785038071.table);

  return result_2785038072;

}

function del_2785038243(t_2785038246, key_2785038247) {
    var hc_2785038248 = [0];
    var i_2785038255 = rawGet_2785035573(t_2785038246, key_2785038247, hc_2785038248, 0);
    var mskHEX60gensym36_2785038259 = (t_2785038246.data).length - 1;
    if ((0 <= i_2785038255)) {
    t_2785038246.counter = subInt(t_2785038246.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785038266 = i_2785038255;
            var rHEX60gensym36_2785038267 = jHEX60gensym36_2785038266;
            t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)].Field0 = 0;
            t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)].Field1 = null;
            t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785038255 = (addInt(i_2785038255, 1) & mskHEX60gensym36_2785038259);
                  if (isEmpty_1342177309(t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785038267 = (t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)].Field0 & mskHEX60gensym36_2785038259);
                  if (!(((((rHEX60gensym36_2785038267 <= i_2785038255) && (jHEX60gensym36_2785038266 < rHEX60gensym36_2785038267)) || ((jHEX60gensym36_2785038266 < rHEX60gensym36_2785038267) && (i_2785038255 < jHEX60gensym36_2785038266))) || ((i_2785038255 < jHEX60gensym36_2785038266) && (rHEX60gensym36_2785038267 <= i_2785038255))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785038246.data[chckIndx(jHEX60gensym36_2785038266, 0, (t_2785038246.data).length - 1)] = nimCopy(t_2785038246.data[chckIndx(jHEX60gensym36_2785038266, 0, (t_2785038246.data).length - 1)], t_2785038246.data[chckIndx(i_2785038255, 0, (t_2785038246.data).length - 1)], NTI2785018540);
          }
      };
    };
    }
    

  
}

function resize_2785037986(cache_2785037989) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785037989.capacity < len_2785038068(cache_2785037989))) break Label2;
          var t_2785038156 = cache_2785037989.list.tail;
          if (cache_2785037989.recordRemovedKeys) {
          incl_2785023869(cache_2785037989.removedKeys, t_2785038156.value.key);
          }
          
          del_2785038243(cache_2785037989.table, t_2785038156.value.key);
          remove_2785039002(cache_2785037989.list, t_2785038156);
        }
    };

  
}

function addNewNode_2785036048(cache_2785036051, key_2785036052, val_2785036053) {
    var node_2785036074 = newDoublyLinkedNode_2785036056({key: key_2785036052, val: val_2785036053});
    HEX5BHEX5DHEX3D_2785036138(cache_2785036051.table, key_2785036052, node_2785036074);
    prepend_2785037749(cache_2785036051.list, node_2785036074);
    if (cache_2785036051.recordRemovedKeys) {
    excl_2785022710(cache_2785036051.removedKeys, key_2785036052);
    }
    
    resize_2785037986(cache_2785036051);

  
}

function HEX5BHEX5DHEX3D_2785035468(cache_2785035471, key_2785035472, val_2785035473) {
    var node_2785036021 = getOrDefault_2785035563(cache_2785035471.table, key_2785035472, null);
    if ((node_2785036021 == null)) {
    addNewNode_2785036048(cache_2785035471, key_2785035472, val_2785035473);
    }
    else {
      node_2785036021.value.val = val_2785035473;
      remove_2785039002(cache_2785035471.list, node_2785036021);
      prepend_2785037749(cache_2785035471.list, node_2785036021);
    }
    

  
}

function fingerprint_2868905142(symbols_2868905150) {
  var result_2868905151 = [[]];

    result_2868905151[0] = nimCopy(null, [], NTI2046822965);
    Label1: {
      var key_2868905466 = ({id: 0});
      var value_2868905467 = null;
      var L_2734686654 = len_2868905204(symbols_2868905150);
      Label2: {
        var h_2734686656 = 0;
        var colontmp__2734686657 = 0;
        colontmp__2734686657 = (symbols_2868905150.data).length - 1;
        var res_2734686658 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2734686658 <= colontmp__2734686657)) break Label4;
              h_2734686656 = res_2734686658;
              if (isFilled_1342177312(symbols_2868905150.data[chckIndx(h_2734686656, 0, (symbols_2868905150.data).length - 1)].Field0)) {
              var colontmp__2734686661 = nimCopy(null, {Field0: nimCopy(null, symbols_2868905150.data[chckIndx(h_2734686656, 0, (symbols_2868905150.data).length - 1)].Field1, NTI2298478595), Field1: symbols_2868905150.data[chckIndx(h_2734686656, 0, (symbols_2868905150.data).length - 1)].Field2}, NTI2868904899);
              key_2868905466 = nimCopy(key_2868905466, colontmp__2734686661["Field0"], NTI2298478595);
              value_2868905467 = colontmp__2734686661["Field1"];
              add_2868904553(result_2868905151, 0, fingerprint_2868905087(value_2868905467));
              if (!((len_2868905204(symbols_2868905150) == L_2734686654))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2734686658 = addInt(res_2734686658, 1);
            }
        };
      };
    };

  return result_2868905151[0];

}

function initDoublyLinkedList_2785039445() {
  var result_2785039447 = ({head: null, tail: null});

  return result_2785039447;

}

function initTable_2785039451(initialSize_2785039454) {
  var result_2785039455 = ({data: [], counter: 0});

    var correctSizeHEX60gensym234_2785039457 = slotsNeeded_1342177323(chckRange(initialSize_2785039454, 0, 2147483647));
    result_2785039455.counter = 0;
    result_2785039455.data = new Array(chckRange(correctSizeHEX60gensym234_2785039457, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_2785039457, 0, 2147483647) ; ++i) { result_2785039455.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785039455;

}

function newLruCache_2785039435(capacity_2785039438, recordRemovedKeys_2785039439) {
  var result_2785039440 = null;

    result_2785039440 = {capacity: capacity_2785039438, list: initDoublyLinkedList_2785039445(), table: initTable_2785039451(correctSize_2818572309(capacity_2785039438)), recordRemovedKeys: recordRemovedKeys_2785039439, removedKeys: ({data: [], counter: 0})};

  return result_2785039440;

}

function newCache_2785039430(capacity_2785039433) {
  var result_2785039434 = null;

    result_2785039434 = newLruCache_2785039435(capacity_2785039433, false);

  return result_2785039434;

}

function init_2785039425(result_2785039428, result_2785039428_Idx, capacity_2785039429) {
    result_2785039428[result_2785039428_Idx] = newCache_2785039430(capacity_2785039429);

  
}

function hasKey_2785039668(t_2785039671, key_2785039672) {
  var result_2785039673 = false;

    var hc_2785039674 = [0];
    result_2785039673 = (0 <= rawGet_2785039675(t_2785039671, key_2785039672, hc_2785039674, 0));

  return result_2785039673;

}

function contains_2785039662(t_2785039665, key_2785039666) {
  var result_2785039667 = false;

  BeforeRet: {
    result_2785039667 = hasKey_2785039668(t_2785039665, key_2785039666);
    break BeforeRet;
  };

  return result_2785039667;

}

function contains_2785039568(cache_2785039571, key_2785039572) {
  var result_2785039573 = false;

    result_2785039573 = contains_2785039662(cache_2785039571.table, key_2785039572);

  return result_2785039573;

}

function HEX5BHEX5D_2785040207(t_2785040210, key_2785040211) {
  var result_2785040212 = null;
  var result_2785040212_Idx = 0;

    var hcHEX60gensym22_2785040213 = [0];
    var indexHEX60gensym22_2785040220 = rawGet_2785039675(t_2785040210, key_2785040211, hcHEX60gensym22_2785040213, 0);
    if ((0 <= indexHEX60gensym22_2785040220)) {
    result_2785040212 = t_2785040210.data[chckIndx(indexHEX60gensym22_2785040220, 0, (t_2785040210.data).length - 1)]; result_2785040212_Idx = "Field2";
    }
    else {
    raiseKeyError_2785019628(key_2785040211);
    }
    

  return [result_2785040212, result_2785040212_Idx];

}

function HEX5BHEX5D_2785040121(cache_2785040124, key_2785040125) {
    var Temporary1;

  var result_2785040126 = null;

    var node_2785040313 = (Temporary1 = HEX5BHEX5D_2785040207(cache_2785040124.table, key_2785040125), Temporary1)[0][Temporary1[1]];
    result_2785040126 = node_2785040313.value.val;
    remove_2785040327(cache_2785040124.list, node_2785040313);
    prepend_2785040631(cache_2785040124.list, node_2785040313);

  return result_2785040126;

}

function computeSymbolTypeImpl_2785018778(ctx_2785018779, symbol_2785018780) {
      var Temporary3;
      var Temporary4;

  var result_2785131863 = null;

  BeforeRet: {
    var logQueryHEX60gensym630_2785131865 = (ctx_2785018779.enableLogging || ctx_2785018779.enableQueryLogging);
    if (logQueryHEX60gensym630_2785131865) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym630_2785131865) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2868905054(symbol_2785018780) || []));
    }
    
    try {
    switch (symbol_2785018780.kind) {
    case 0:
      var Temporary3 = symbol_2785018780;
      if (ConstSet85[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      result_2785131863 = computeType_2785102512(ctx_2785018779, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2785018780;
      if (ConstSet86[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      result_2785131863 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym630_2785131865 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868904342(result_2785131863) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym630_2785131865) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785131863;

}

function getOrDefault_2785040986(t_2785040989, key_2785040990, default_2785040991) {
    var Temporary1;

  var result_2785040992 = null;

    var hcHEX60gensym241_2785040995 = [0];
    var indexHEX60gensym241_2785041350 = rawGet_2785040996(t_2785040989, key_2785040990, hcHEX60gensym241_2785040995, 0);
    if ((0 <= indexHEX60gensym241_2785041350)) {
    Temporary1 = t_2785040989.data[chckIndx(indexHEX60gensym241_2785041350, 0, (t_2785040989.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785040991;
    }
    
    result_2785040992 = Temporary1;

  return result_2785040992;

}

function newDoublyLinkedNode_2785041475(value_2785041477) {
  var result_2785041478 = null;

    result_2785041478 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2785041478.value = nimCopy(result_2785041478.value, value_2785041477, NTI2785018570);

  return result_2785041478;

}

function mustRehash_2785041825(t_2785041827) {
  var result_2785041828 = false;

    if (!((t_2785041827.counter < (t_2785041827.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785041828 = ((mulInt((t_2785041827.data).length, 2) < mulInt(t_2785041827.counter, 3)) || (subInt((t_2785041827.data).length, t_2785041827.counter) < 4));

  return result_2785041828;

}

function rawInsert_2785042518(t_2785042522, data_2785042523, data_2785042523_Idx, key_2785042524, val_2785042525, hc_2785042526, h_2785042527) {
    data_2785042523[data_2785042523_Idx][chckIndx(h_2785042527, 0, (data_2785042523[data_2785042523_Idx]).length - 1)].Field1 = key_2785042524;
    data_2785042523[data_2785042523_Idx][chckIndx(h_2785042527, 0, (data_2785042523[data_2785042523_Idx]).length - 1)].Field2 = val_2785042525;
    data_2785042523[data_2785042523_Idx][chckIndx(h_2785042527, 0, (data_2785042523[data_2785042523_Idx]).length - 1)].Field0 = hc_2785042526;

  
}

function enlarge_2785042082(t_2785042085) {
    var n_2785042088 = [];
    n_2785042088 = new Array(chckRange(mulInt((t_2785042085.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785042085.data).length, 2), 0, 2147483647) ; ++i) { n_2785042088[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785042085.data; t_2785042085.data = n_2785042088; n_2785042088 = Temporary1;    Label2: {
      var i_2785042186 = 0;
      var colontmp__2734686664 = 0;
      colontmp__2734686664 = (n_2785042088).length - 1;
      var res_2734686665 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686665 <= colontmp__2734686664)) break Label4;
            i_2785042186 = res_2734686665;
            var eh_2785042267 = n_2785042088[chckIndx(i_2785042186, 0, (n_2785042088).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785042267)) {
            var j_2785042271 = (eh_2785042267 & (t_2785042085.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785042085.data[chckIndx(j_2785042271, 0, (t_2785042085.data).length - 1)].Field0)) break Label6;
                  j_2785042271 = nextTry_1342177315(j_2785042271, (t_2785042085.data).length - 1);
                }
            };
            rawInsert_2785042518(t_2785042085, t_2785042085, "data", n_2785042088[chckIndx(i_2785042186, 0, (n_2785042088).length - 1)].Field1, n_2785042088[chckIndx(i_2785042186, 0, (n_2785042088).length - 1)].Field2, eh_2785042267, j_2785042271);
            }
            
            res_2734686665 = addInt(res_2734686665, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785042768(t_2785042771, key_2785042772, hc_2785042773) {
  var result_2785042774 = 0;

  BeforeRet: {
    if (((t_2785042771.data).length == 0)) {
    result_2785042774 = -1;
    break BeforeRet;
    }
    
    var h_2785042859 = (hc_2785042773 & (t_2785042771.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785042771.data[chckIndx(h_2785042859, 0, (t_2785042771.data).length - 1)].Field0)) break Label2;
          if (((t_2785042771.data[chckIndx(h_2785042859, 0, (t_2785042771.data).length - 1)].Field0 == hc_2785042773) && HEX3DHEX3D_2868905060(t_2785042771.data[chckIndx(h_2785042859, 0, (t_2785042771.data).length - 1)].Field1, key_2785042772))) {
          result_2785042774 = h_2785042859;
          break BeforeRet;
          }
          
          h_2785042859 = nextTry_1342177315(h_2785042859, (t_2785042771.data).length - 1);
        }
    };
    result_2785042774 = subInt(-1, h_2785042859);
  };

  return result_2785042774;

}

function HEX5BHEX5DHEX3D_2785041557(t_2785041560, key_2785041561, val_2785041562) {
    if (((t_2785041560.data).length == 0)) {
    var correctSizeHEX60gensym246_2785041645 = slotsNeeded_1342177323(32);
    t_2785041560.counter = 0;
    t_2785041560.data = new Array(chckRange(correctSizeHEX60gensym246_2785041645, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_2785041645, 0, 2147483647) ; ++i) { t_2785041560.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785041650 = [0];
    var index_2785041657 = rawGet_2785040996(t_2785041560, key_2785041561, hc_2785041650, 0);
    if ((0 <= index_2785041657)) {
    t_2785041560.data[chckIndx(index_2785041657, 0, (t_2785041560.data).length - 1)].Field2 = val_2785041562;
    }
    else {
      if (((t_2785041560.data).length == 0)) {
      var correctSizeHEX60gensym249_2785041820 = slotsNeeded_1342177323(32);
      t_2785041560.counter = 0;
      t_2785041560.data = new Array(chckRange(correctSizeHEX60gensym249_2785041820, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym249_2785041820, 0, 2147483647) ; ++i) { t_2785041560.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785041825(t_2785041560)) {
      enlarge_2785042082(t_2785041560);
      index_2785041657 = rawGetKnownHC_2785042768(t_2785041560, key_2785041561, hc_2785041650[0]);
      }
      
      index_2785041657 = subInt(-1, index_2785041657);
      rawInsert_2785042518(t_2785041560, t_2785041560, "data", key_2785041561, val_2785041562, hc_2785041650[0], index_2785041657);
      t_2785041560.counter = addInt(t_2785041560.counter, 1);
    }
    

  
}

function rawGet_2785043395(t_2785043398, key_2785043399, hc_2785043400, hc_2785043400_Idx) {
  var result_2785043401 = 0;

  BeforeRet: {
    hc_2785043400[hc_2785043400_Idx] = hash_2868905057(key_2785043399);
    if ((hc_2785043400[hc_2785043400_Idx] == 0)) {
    hc_2785043400[hc_2785043400_Idx] = 314159265;
    }
    
    if (((t_2785043398.data).length == 0)) {
    result_2785043401 = -1;
    break BeforeRet;
    }
    
    var h_2785043487 = (hc_2785043400[hc_2785043400_Idx] & (t_2785043398.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785043398.data[chckIndx(h_2785043487, 0, (t_2785043398.data).length - 1)].Field0)) break Label2;
          if (((t_2785043398.data[chckIndx(h_2785043487, 0, (t_2785043398.data).length - 1)].Field0 == hc_2785043400[hc_2785043400_Idx]) && HEX3DHEX3D_2868905060(t_2785043398.data[chckIndx(h_2785043487, 0, (t_2785043398.data).length - 1)].Field1, key_2785043399))) {
          result_2785043401 = h_2785043487;
          break BeforeRet;
          }
          
          h_2785043487 = nextTry_1862271018(h_2785043487, (t_2785043398.data).length - 1);
        }
    };
    result_2785043401 = subInt(-1, h_2785043487);
  };

  return result_2785043401;

}

function exclImpl_2785043389(s_2785043391, key_2785043392) {
          var Temporary5;

  var result_2785043393 = false;

  BeforeRet: {
    var hc_2785043394 = [0];
    var i_2785043749 = rawGet_2785043395(s_2785043391, key_2785043392, hc_2785043394, 0);
    var msk_2785043753 = (s_2785043391.data).length - 1;
    result_2785043393 = true;
    if ((0 <= i_2785043749)) {
    result_2785043393 = false;
    s_2785043391.counter = subInt(s_2785043391.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785043759 = i_2785043749;
          var r_2785043760 = j_2785043759;
          s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)].Field0 = 0;
          s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785043749 = (addInt(i_2785043749, 1) & msk_2785043753);
                if (isEmpty_1862271012(s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785043760 = (s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)].Field0 & msk_2785043753);
                if (!(((((r_2785043760 <= i_2785043749) && (j_2785043759 < r_2785043760)) || ((j_2785043759 < r_2785043760) && (i_2785043749 < j_2785043759))) || ((i_2785043749 < j_2785043759) && (r_2785043760 <= i_2785043749))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)];
          s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)] = genericReset(s_2785043391.data[chckIndx(i_2785043749, 0, (s_2785043391.data).length - 1)], NTI2785018626);
          s_2785043391.data[chckIndx(j_2785043759, 0, (s_2785043391.data).length - 1)] = nimCopy(s_2785043391.data[chckIndx(j_2785043759, 0, (s_2785043391.data).length - 1)], Temporary5, NTI2785018626);
        }
    };
    }
    
  };

  return result_2785043393;

}

function excl_2785043374(s_2785043376, key_2785043377) {
    var _ = exclImpl_2785043389(s_2785043376, key_2785043377);

  
}

function len_2785044513(t_2785044516) {
  var result_2785044517 = 0;

    result_2785044517 = t_2785044516.counter;

  return result_2785044517;

}

function len_2785044430(cache_2785044433) {
  var result_2785044434 = 0;

    result_2785044434 = len_2785044513(cache_2785044433.table);

  return result_2785044434;

}

function mustRehash_2785044654(t_2785044656) {
  var result_2785044657 = false;

    if (!((t_2785044656.counter < (t_2785044656.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785044657 = ((mulInt((t_2785044656.data).length, 2) < mulInt(t_2785044656.counter, 3)) || (subInt((t_2785044656.data).length, t_2785044656.counter) < 4));

  return result_2785044657;

}

function rawGetKnownHC_2785045260(t_2785045263, key_2785045264, hc_2785045265) {
  var result_2785045266 = 0;

  BeforeRet: {
    if (((t_2785045263.data).length == 0)) {
    result_2785045266 = -1;
    break BeforeRet;
    }
    
    var h_2785045351 = (hc_2785045265 & (t_2785045263.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785045263.data[chckIndx(h_2785045351, 0, (t_2785045263.data).length - 1)].Field0)) break Label2;
          if (((t_2785045263.data[chckIndx(h_2785045351, 0, (t_2785045263.data).length - 1)].Field0 == hc_2785045265) && HEX3DHEX3D_2868905060(t_2785045263.data[chckIndx(h_2785045351, 0, (t_2785045263.data).length - 1)].Field1, key_2785045264))) {
          result_2785045266 = h_2785045351;
          break BeforeRet;
          }
          
          h_2785045351 = nextTry_1862271018(h_2785045351, (t_2785045263.data).length - 1);
        }
    };
    result_2785045266 = subInt(-1, h_2785045351);
  };

  return result_2785045266;

}

function rawInsert_2785045760(s_2785045762, data_2785045763, data_2785045763_Idx, key_2785045764, hc_2785045765, h_2785045766) {
    if (((data_2785045763[data_2785045763_Idx]).length == 0)) {
    var correctSizeHEX60gensym268_2785045849 = slotsNeeded_1862271026(64);
    s_2785045762.counter = 0;
    s_2785045762.data = new Array(chckRange(correctSizeHEX60gensym268_2785045849, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym268_2785045849, 0, 2147483647) ; ++i) { s_2785045762.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2785045763[data_2785045763_Idx][chckIndx(h_2785045766, 0, (data_2785045763[data_2785045763_Idx]).length - 1)].Field1 = key_2785045764;
    data_2785045763[data_2785045763_Idx][chckIndx(h_2785045766, 0, (data_2785045763[data_2785045763_Idx]).length - 1)].Field0 = hc_2785045765;

  
}

function enlarge_2785044917(s_2785044919) {
    var n_2785044921 = [];
    n_2785044921 = new Array(chckRange(mulInt((s_2785044919.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785044919.data).length, 2), 0, 2147483647) ; ++i) { n_2785044921[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2785044919.data; s_2785044919.data = n_2785044921; n_2785044921 = Temporary1;    Label2: {
      var i_2785045019 = 0;
      var colontmp__2734686673 = 0;
      colontmp__2734686673 = (n_2785044921).length - 1;
      var res_2734686674 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686674 <= colontmp__2734686673)) break Label4;
            i_2785045019 = res_2734686674;
            if (isFilled_1862271015(n_2785044921[chckIndx(i_2785045019, 0, (n_2785044921).length - 1)].Field0)) {
            var j_2785045595 = subInt(-1, rawGetKnownHC_2785045260(s_2785044919, n_2785044921[chckIndx(i_2785045019, 0, (n_2785044921).length - 1)].Field1, n_2785044921[chckIndx(i_2785045019, 0, (n_2785044921).length - 1)].Field0));
            rawInsert_2785045760(s_2785044919, s_2785044919, "data", n_2785044921[chckIndx(i_2785045019, 0, (n_2785044921).length - 1)].Field1, n_2785044921[chckIndx(i_2785045019, 0, (n_2785044921).length - 1)].Field0, j_2785045595);
            }
            
            res_2734686674 = addInt(res_2734686674, 1);
          }
      };
    };

  
}

function incl_2785044538(s_2785044540, key_2785044541) {
    if (((s_2785044540.data).length == 0)) {
    var correctSizeHEX60gensym261_2785044624 = slotsNeeded_1862271026(64);
    s_2785044540.counter = 0;
    s_2785044540.data = new Array(chckRange(correctSizeHEX60gensym261_2785044624, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym261_2785044624, 0, 2147483647) ; ++i) { s_2785044540.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2785044639 = [0];
    var index_2785044653 = rawGet_2785043395(s_2785044540, key_2785044541, hc_2785044639, 0);
    if ((index_2785044653 < 0)) {
    if (mustRehash_2785044654(s_2785044540)) {
    enlarge_2785044917(s_2785044540);
    index_2785044653 = rawGetKnownHC_2785045260(s_2785044540, key_2785044541, hc_2785044639[0]);
    }
    
    rawInsert_2785045760(s_2785044540, s_2785044540, "data", key_2785044541, hc_2785044639[0], subInt(-1, index_2785044653));
    s_2785044540.counter = addInt(s_2785044540.counter, 1);
    }
    

  
}

function del_2785046116(t_2785046119, key_2785046120) {
    var hc_2785046121 = [0];
    var i_2785046128 = rawGet_2785040996(t_2785046119, key_2785046120, hc_2785046121, 0);
    var mskHEX60gensym36_2785046132 = (t_2785046119.data).length - 1;
    if ((0 <= i_2785046128)) {
    t_2785046119.counter = subInt(t_2785046119.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785046139 = i_2785046128;
            var rHEX60gensym36_2785046140 = jHEX60gensym36_2785046139;
            t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)].Field0 = 0;
            t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)].Field1 = null;
            t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785046128 = (addInt(i_2785046128, 1) & mskHEX60gensym36_2785046132);
                  if (isEmpty_1342177309(t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785046140 = (t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)].Field0 & mskHEX60gensym36_2785046132);
                  if (!(((((rHEX60gensym36_2785046140 <= i_2785046128) && (jHEX60gensym36_2785046139 < rHEX60gensym36_2785046140)) || ((jHEX60gensym36_2785046139 < rHEX60gensym36_2785046140) && (i_2785046128 < jHEX60gensym36_2785046139))) || ((i_2785046128 < jHEX60gensym36_2785046139) && (rHEX60gensym36_2785046140 <= i_2785046128))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785046119.data[chckIndx(jHEX60gensym36_2785046139, 0, (t_2785046119.data).length - 1)] = nimCopy(t_2785046119.data[chckIndx(jHEX60gensym36_2785046139, 0, (t_2785046119.data).length - 1)], t_2785046119.data[chckIndx(i_2785046128, 0, (t_2785046119.data).length - 1)], NTI2785018606);
          }
      };
    };
    }
    

  
}

function resize_2785044348(cache_2785044351) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785044351.capacity < len_2785044430(cache_2785044351))) break Label2;
          var t_2785044518 = cache_2785044351.list.tail;
          if (cache_2785044351.recordRemovedKeys) {
          incl_2785044538(cache_2785044351.removedKeys, t_2785044518.value.key);
          }
          
          del_2785046116(cache_2785044351.table, t_2785044518.value.key);
          remove_2785046875(cache_2785044351.list, t_2785044518);
        }
    };

  
}

function addNewNode_2785041467(cache_2785041470, key_2785041471, val_2785041472) {
    var node_2785041493 = newDoublyLinkedNode_2785041475({key: key_2785041471, val: val_2785041472});
    HEX5BHEX5DHEX3D_2785041557(cache_2785041470.table, key_2785041471, node_2785041493);
    prepend_2785043164(cache_2785041470.list, node_2785041493);
    if (cache_2785041470.recordRemovedKeys) {
    excl_2785043374(cache_2785041470.removedKeys, key_2785041471);
    }
    
    resize_2785044348(cache_2785041470);

  
}

function HEX5BHEX5DHEX3D_2785040891(cache_2785040894, key_2785040895, val_2785040896) {
    var node_2785041440 = getOrDefault_2785040986(cache_2785040894.table, key_2785040895, null);
    if ((node_2785041440 == null)) {
    addNewNode_2785041467(cache_2785040894, key_2785040895, val_2785040896);
    }
    else {
      node_2785041440.value.val = val_2785040896;
      remove_2785046875(cache_2785040894.list, node_2785041440);
      prepend_2785043164(cache_2785040894.list, node_2785041440);
    }
    

  
}

function initDoublyLinkedList_2785047318() {
  var result_2785047320 = ({head: null, tail: null});

  return result_2785047320;

}

function initTable_2785047324(initialSize_2785047327) {
  var result_2785047328 = ({data: [], counter: 0});

    var correctSizeHEX60gensym269_2785047330 = slotsNeeded_1342177323(chckRange(initialSize_2785047327, 0, 2147483647));
    result_2785047328.counter = 0;
    result_2785047328.data = new Array(chckRange(correctSizeHEX60gensym269_2785047330, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym269_2785047330, 0, 2147483647) ; ++i) { result_2785047328.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785047328;

}

function newLruCache_2785047308(capacity_2785047311, recordRemovedKeys_2785047312) {
  var result_2785047313 = null;

    result_2785047313 = {capacity: capacity_2785047311, list: initDoublyLinkedList_2785047318(), table: initTable_2785047324(correctSize_2818572309(capacity_2785047311)), recordRemovedKeys: recordRemovedKeys_2785047312, removedKeys: ({data: [], counter: 0})};

  return result_2785047313;

}

function newCache_2785047303(capacity_2785047306) {
  var result_2785047307 = null;

    result_2785047307 = newLruCache_2785047308(capacity_2785047306, false);

  return result_2785047307;

}

function init_2785047298(result_2785047301, result_2785047301_Idx, capacity_2785047302) {
    result_2785047301[result_2785047301_Idx] = newCache_2785047303(capacity_2785047302);

  
}

function computeSymbolValueImpl_2785018781(ctx_2785018782, symbol_2785018783) {
      var Temporary3;
      var Temporary4;

  var result_2785131879 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym631_2785131881 = (ctx_2785018782.enableLogging || ctx_2785018782.enableQueryLogging);
    if (logQueryHEX60gensym631_2785131881) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym631_2785131881) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2868905054(symbol_2785018783) || []));
    }
    
    try {
    switch (symbol_2785018783.kind) {
    case 0:
      var Temporary3 = symbol_2785018783;
      if (ConstSet87[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      result_2785131879 = nimCopy(result_2785131879, computeValue_2785105988(ctx_2785018782, Temporary3.node, true), NTI2868903943);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2785018783;
      if (ConstSet88[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      result_2785131879 = nimCopy(result_2785131879, Temporary4.value, NTI2868903943);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym631_2785131881 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868904649(result_2785131879) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym631_2785131881) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785131879;

}

function getOrDefault_2785047696(t_2785047699, key_2785047700, default_2785047701) {
    var Temporary1;

  var result_2785047702 = null;

    var hcHEX60gensym272_2785047705 = [0];
    var indexHEX60gensym272_2785048060 = rawGet_2785047706(t_2785047699, key_2785047700, hcHEX60gensym272_2785047705, 0);
    if ((0 <= indexHEX60gensym272_2785048060)) {
    Temporary1 = t_2785047699.data[chckIndx(indexHEX60gensym272_2785048060, 0, (t_2785047699.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785047701;
    }
    
    result_2785047702 = Temporary1;

  return result_2785047702;

}

function newDoublyLinkedNode_2785048185(value_2785048187) {
  var result_2785048188 = null;

    result_2785048188 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2785048188.value = nimCopy(result_2785048188.value, value_2785048187, NTI2785018645);

  return result_2785048188;

}

function mustRehash_2785048544(t_2785048546) {
  var result_2785048547 = false;

    if (!((t_2785048546.counter < (t_2785048546.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785048547 = ((mulInt((t_2785048546.data).length, 2) < mulInt(t_2785048546.counter, 3)) || (subInt((t_2785048546.data).length, t_2785048546.counter) < 4));

  return result_2785048547;

}

function rawInsert_2785049237(t_2785049241, data_2785049242, data_2785049242_Idx, key_2785049243, val_2785049244, hc_2785049245, h_2785049246) {
    data_2785049242[data_2785049242_Idx][chckIndx(h_2785049246, 0, (data_2785049242[data_2785049242_Idx]).length - 1)].Field1 = key_2785049243;
    data_2785049242[data_2785049242_Idx][chckIndx(h_2785049246, 0, (data_2785049242[data_2785049242_Idx]).length - 1)].Field2 = val_2785049244;
    data_2785049242[data_2785049242_Idx][chckIndx(h_2785049246, 0, (data_2785049242[data_2785049242_Idx]).length - 1)].Field0 = hc_2785049245;

  
}

function enlarge_2785048801(t_2785048804) {
    var n_2785048807 = [];
    n_2785048807 = new Array(chckRange(mulInt((t_2785048804.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785048804.data).length, 2), 0, 2147483647) ; ++i) { n_2785048807[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785048804.data; t_2785048804.data = n_2785048807; n_2785048807 = Temporary1;    Label2: {
      var i_2785048905 = 0;
      var colontmp__2734686681 = 0;
      colontmp__2734686681 = (n_2785048807).length - 1;
      var res_2734686682 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686682 <= colontmp__2734686681)) break Label4;
            i_2785048905 = res_2734686682;
            var eh_2785048986 = n_2785048807[chckIndx(i_2785048905, 0, (n_2785048807).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785048986)) {
            var j_2785048990 = (eh_2785048986 & (t_2785048804.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785048804.data[chckIndx(j_2785048990, 0, (t_2785048804.data).length - 1)].Field0)) break Label6;
                  j_2785048990 = nextTry_1342177315(j_2785048990, (t_2785048804.data).length - 1);
                }
            };
            rawInsert_2785049237(t_2785048804, t_2785048804, "data", n_2785048807[chckIndx(i_2785048905, 0, (n_2785048807).length - 1)].Field1, n_2785048807[chckIndx(i_2785048905, 0, (n_2785048807).length - 1)].Field2, eh_2785048986, j_2785048990);
            }
            
            res_2734686682 = addInt(res_2734686682, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785049487(t_2785049490, key_2785049491, hc_2785049492) {
  var result_2785049493 = 0;

  BeforeRet: {
    if (((t_2785049490.data).length == 0)) {
    result_2785049493 = -1;
    break BeforeRet;
    }
    
    var h_2785049578 = (hc_2785049492 & (t_2785049490.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785049490.data[chckIndx(h_2785049578, 0, (t_2785049490.data).length - 1)].Field0)) break Label2;
          if (((t_2785049490.data[chckIndx(h_2785049578, 0, (t_2785049490.data).length - 1)].Field0 == hc_2785049492) && HEX3DHEX3D_2868905060(t_2785049490.data[chckIndx(h_2785049578, 0, (t_2785049490.data).length - 1)].Field1, key_2785049491))) {
          result_2785049493 = h_2785049578;
          break BeforeRet;
          }
          
          h_2785049578 = nextTry_1342177315(h_2785049578, (t_2785049490.data).length - 1);
        }
    };
    result_2785049493 = subInt(-1, h_2785049578);
  };

  return result_2785049493;

}

function HEX5BHEX5DHEX3D_2785048276(t_2785048279, key_2785048280, val_2785048281) {
    if (((t_2785048279.data).length == 0)) {
    var correctSizeHEX60gensym277_2785048364 = slotsNeeded_1342177323(32);
    t_2785048279.counter = 0;
    t_2785048279.data = new Array(chckRange(correctSizeHEX60gensym277_2785048364, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym277_2785048364, 0, 2147483647) ; ++i) { t_2785048279.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785048369 = [0];
    var index_2785048376 = rawGet_2785047706(t_2785048279, key_2785048280, hc_2785048369, 0);
    if ((0 <= index_2785048376)) {
    t_2785048279.data[chckIndx(index_2785048376, 0, (t_2785048279.data).length - 1)].Field2 = val_2785048281;
    }
    else {
      if (((t_2785048279.data).length == 0)) {
      var correctSizeHEX60gensym280_2785048539 = slotsNeeded_1342177323(32);
      t_2785048279.counter = 0;
      t_2785048279.data = new Array(chckRange(correctSizeHEX60gensym280_2785048539, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym280_2785048539, 0, 2147483647) ; ++i) { t_2785048279.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785048544(t_2785048279)) {
      enlarge_2785048801(t_2785048279);
      index_2785048376 = rawGetKnownHC_2785049487(t_2785048279, key_2785048280, hc_2785048369[0]);
      }
      
      index_2785048376 = subInt(-1, index_2785048376);
      rawInsert_2785049237(t_2785048279, t_2785048279, "data", key_2785048280, val_2785048281, hc_2785048369[0], index_2785048376);
      t_2785048279.counter = addInt(t_2785048279.counter, 1);
    }
    

  
}

function len_2785050285(t_2785050288) {
  var result_2785050289 = 0;

    result_2785050289 = t_2785050288.counter;

  return result_2785050289;

}

function len_2785050202(cache_2785050205) {
  var result_2785050206 = 0;

    result_2785050206 = len_2785050285(cache_2785050205.table);

  return result_2785050206;

}

function del_2785050377(t_2785050380, key_2785050381) {
    var hc_2785050382 = [0];
    var i_2785050389 = rawGet_2785047706(t_2785050380, key_2785050381, hc_2785050382, 0);
    var mskHEX60gensym36_2785050393 = (t_2785050380.data).length - 1;
    if ((0 <= i_2785050389)) {
    t_2785050380.counter = subInt(t_2785050380.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785050400 = i_2785050389;
            var rHEX60gensym36_2785050401 = jHEX60gensym36_2785050400;
            t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)].Field0 = 0;
            t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)].Field1 = null;
            t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785050389 = (addInt(i_2785050389, 1) & mskHEX60gensym36_2785050393);
                  if (isEmpty_1342177309(t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785050401 = (t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)].Field0 & mskHEX60gensym36_2785050393);
                  if (!(((((rHEX60gensym36_2785050401 <= i_2785050389) && (jHEX60gensym36_2785050400 < rHEX60gensym36_2785050401)) || ((jHEX60gensym36_2785050400 < rHEX60gensym36_2785050401) && (i_2785050389 < jHEX60gensym36_2785050400))) || ((i_2785050389 < jHEX60gensym36_2785050400) && (rHEX60gensym36_2785050401 <= i_2785050389))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785050380.data[chckIndx(jHEX60gensym36_2785050400, 0, (t_2785050380.data).length - 1)] = nimCopy(t_2785050380.data[chckIndx(jHEX60gensym36_2785050400, 0, (t_2785050380.data).length - 1)], t_2785050380.data[chckIndx(i_2785050389, 0, (t_2785050380.data).length - 1)], NTI2785018681);
          }
      };
    };
    }
    

  
}

function resize_2785050120(cache_2785050123) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785050123.capacity < len_2785050202(cache_2785050123))) break Label2;
          var t_2785050290 = cache_2785050123.list.tail;
          if (cache_2785050123.recordRemovedKeys) {
          incl_2785044538(cache_2785050123.removedKeys, t_2785050290.value.key);
          }
          
          del_2785050377(cache_2785050123.table, t_2785050290.value.key);
          remove_2785051136(cache_2785050123.list, t_2785050290);
        }
    };

  
}

function addNewNode_2785048177(cache_2785048180, key_2785048181, val_2785048182) {
    var node_2785048212 = newDoublyLinkedNode_2785048185({key: key_2785048181, val: nimCopy(null, val_2785048182, NTI2868903943)});
    HEX5BHEX5DHEX3D_2785048276(cache_2785048180.table, key_2785048181, node_2785048212);
    prepend_2785049883(cache_2785048180.list, node_2785048212);
    if (cache_2785048180.recordRemovedKeys) {
    excl_2785043374(cache_2785048180.removedKeys, key_2785048181);
    }
    
    resize_2785050120(cache_2785048180);

  
}

function HEX5BHEX5DHEX3D_2785047601(cache_2785047604, key_2785047605, val_2785047606) {
    var node_2785048150 = getOrDefault_2785047696(cache_2785047604.table, key_2785047605, null);
    if ((node_2785048150 == null)) {
    addNewNode_2785048177(cache_2785047604, key_2785047605, val_2785047606);
    }
    else {
      node_2785048150.value.val = nimCopy(node_2785048150.value.val, val_2785047606, NTI2868903943);
      remove_2785051136(cache_2785047604.list, node_2785048150);
      prepend_2785049883(cache_2785047604.list, node_2785048150);
    }
    

  
}

function initDoublyLinkedList_2785051579() {
  var result_2785051581 = ({head: null, tail: null});

  return result_2785051581;

}

function initTable_2785051585(initialSize_2785051588) {
  var result_2785051589 = ({data: [], counter: 0});

    var correctSizeHEX60gensym290_2785051591 = slotsNeeded_1342177323(chckRange(initialSize_2785051588, 0, 2147483647));
    result_2785051589.counter = 0;
    result_2785051589.data = new Array(chckRange(correctSizeHEX60gensym290_2785051591, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_2785051591, 0, 2147483647) ; ++i) { result_2785051589.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785051589;

}

function newLruCache_2785051569(capacity_2785051572, recordRemovedKeys_2785051573) {
  var result_2785051574 = null;

    result_2785051574 = {capacity: capacity_2785051572, list: initDoublyLinkedList_2785051579(), table: initTable_2785051585(correctSize_2818572309(capacity_2785051572)), recordRemovedKeys: recordRemovedKeys_2785051573, removedKeys: ({data: [], counter: 0})};

  return result_2785051574;

}

function newCache_2785051564(capacity_2785051567) {
  var result_2785051568 = null;

    result_2785051568 = newLruCache_2785051569(capacity_2785051567, false);

  return result_2785051568;

}

function init_2785051559(result_2785051562, result_2785051562_Idx, capacity_2785051563) {
    result_2785051562[result_2785051562_Idx] = newCache_2785051564(capacity_2785051563);

  
}

function hasKey_2785051802(t_2785051805, key_2785051806) {
  var result_2785051807 = false;

    var hc_2785051808 = [0];
    result_2785051807 = (0 <= rawGet_2785051809(t_2785051805, key_2785051806, hc_2785051808, 0));

  return result_2785051807;

}

function contains_2785051796(t_2785051799, key_2785051800) {
  var result_2785051801 = false;

  BeforeRet: {
    result_2785051801 = hasKey_2785051802(t_2785051799, key_2785051800);
    break BeforeRet;
  };

  return result_2785051801;

}

function contains_2785051702(cache_2785051705, key_2785051706) {
  var result_2785051707 = false;

    result_2785051707 = contains_2785051796(cache_2785051705.table, key_2785051706);

  return result_2785051707;

}

function HEX5BHEX5D_2785052341(t_2785052344, key_2785052345) {
  var result_2785052346 = null;
  var result_2785052346_Idx = 0;

    var hcHEX60gensym22_2785052347 = [0];
    var indexHEX60gensym22_2785052354 = rawGet_2785051809(t_2785052344, key_2785052345, hcHEX60gensym22_2785052347, 0);
    if ((0 <= indexHEX60gensym22_2785052354)) {
    result_2785052346 = t_2785052344.data[chckIndx(indexHEX60gensym22_2785052354, 0, (t_2785052344.data).length - 1)]; result_2785052346_Idx = "Field2";
    }
    else {
    raiseKeyError_2785019628(key_2785052345);
    }
    

  return [result_2785052346, result_2785052346_Idx];

}

function HEX5BHEX5D_2785052255(cache_2785052258, key_2785052259) {
    var Temporary1;

  var result_2785052260 = null;

    var node_2785052447 = (Temporary1 = HEX5BHEX5D_2785052341(cache_2785052258.table, key_2785052259), Temporary1)[0][Temporary1[1]];
    result_2785052260 = node_2785052447.value.val;
    remove_2785052461(cache_2785052258.list, node_2785052447);
    prepend_2785052765(cache_2785052258.list, node_2785052447);

  return result_2785052260;

}

function initTable_2919237820(initialSize_2919237823) {
  var result_2919237824 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_2919237826 = slotsNeeded_1342177323(chckRange(initialSize_2919237823, 0, 2147483647));
    result_2919237824.counter = 0;
    result_2919237824.data = new Array(chckRange(correctSizeHEX60gensym58_2919237826, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_2919237826, 0, 2147483647) ; ++i) { result_2919237824.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_2919237824;

}

function rawGet_2919235749(t_2919235752, key_2919235753, hc_2919235754, hc_2919235754_Idx) {
  var result_2919235755 = 0;

  BeforeRet: {
    hc_2919235754[hc_2919235754_Idx] = hash_2298478681(key_2919235753);
    if ((hc_2919235754[hc_2919235754_Idx] == 0)) {
    hc_2919235754[hc_2919235754_Idx] = 314159265;
    }
    
    if (((t_2919235752.data).length == 0)) {
    result_2919235755 = -1;
    break BeforeRet;
    }
    
    var h_2919235806 = (hc_2919235754[hc_2919235754_Idx] & (t_2919235752.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2919235752.data[chckIndx(h_2919235806, 0, (t_2919235752.data).length - 1)].Field0)) break Label2;
          if (((t_2919235752.data[chckIndx(h_2919235806, 0, (t_2919235752.data).length - 1)].Field0 == hc_2919235754[hc_2919235754_Idx]) && HEX3DHEX3D_2298478667(t_2919235752.data[chckIndx(h_2919235806, 0, (t_2919235752.data).length - 1)].Field1, key_2919235753))) {
          result_2919235755 = h_2919235806;
          break BeforeRet;
          }
          
          h_2919235806 = nextTry_1342177315(h_2919235806, (t_2919235752.data).length - 1);
        }
    };
    result_2919235755 = subInt(-1, h_2919235806);
  };

  return result_2919235755;

}

function mustRehash_2919236094(t_2919236096) {
  var result_2919236097 = false;

    if (!((t_2919236096.counter < (t_2919236096.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236097 = ((mulInt((t_2919236096.data).length, 2) < mulInt(t_2919236096.counter, 3)) || (subInt((t_2919236096.data).length, t_2919236096.counter) < 4));

  return result_2919236097;

}

function rawInsert_2919236543(t_2919236547, data_2919236548, data_2919236548_Idx, key_2919236549, val_2919236550, hc_2919236551, h_2919236552) {
    data_2919236548[data_2919236548_Idx][chckIndx(h_2919236552, 0, (data_2919236548[data_2919236548_Idx]).length - 1)].Field1 = nimCopy(data_2919236548[data_2919236548_Idx][chckIndx(h_2919236552, 0, (data_2919236548[data_2919236548_Idx]).length - 1)].Field1, key_2919236549, NTI2298478595);
    data_2919236548[data_2919236548_Idx][chckIndx(h_2919236552, 0, (data_2919236548[data_2919236548_Idx]).length - 1)].Field2 = nimCopy(data_2919236548[data_2919236548_Idx][chckIndx(h_2919236552, 0, (data_2919236548[data_2919236548_Idx]).length - 1)].Field2, val_2919236550, NTI2868903943);
    data_2919236548[data_2919236548_Idx][chckIndx(h_2919236552, 0, (data_2919236548[data_2919236548_Idx]).length - 1)].Field0 = hc_2919236551;

  
}

function enlarge_2919236249(t_2919236252) {
    var n_2919236255 = [];
    n_2919236255 = new Array(chckRange(mulInt((t_2919236252.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236252.data).length, 2), 0, 2147483647) ; ++i) { n_2919236255[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_2919236252.data; t_2919236252.data = n_2919236255; n_2919236255 = Temporary1;    Label2: {
      var i_2919236319 = 0;
      var colontmp__2734686696 = 0;
      colontmp__2734686696 = (n_2919236255).length - 1;
      var res_2734686697 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686697 <= colontmp__2734686696)) break Label4;
            i_2919236319 = res_2734686697;
            var eh_2919236373 = n_2919236255[chckIndx(i_2919236319, 0, (n_2919236255).length - 1)].Field0;
            if (isFilled_1342177312(eh_2919236373)) {
            var j_2919236377 = (eh_2919236373 & (t_2919236252.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2919236252.data[chckIndx(j_2919236377, 0, (t_2919236252.data).length - 1)].Field0)) break Label6;
                  j_2919236377 = nextTry_1342177315(j_2919236377, (t_2919236252.data).length - 1);
                }
            };
            rawInsert_2919236543(t_2919236252, t_2919236252, "data", n_2919236255[chckIndx(i_2919236319, 0, (n_2919236255).length - 1)].Field1, n_2919236255[chckIndx(i_2919236319, 0, (n_2919236255).length - 1)].Field2, eh_2919236373, j_2919236377);
            }
            
            res_2734686697 = addInt(res_2734686697, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919236712(t_2919236715, key_2919236716, hc_2919236717) {
  var result_2919236718 = 0;

  BeforeRet: {
    if (((t_2919236715.data).length == 0)) {
    result_2919236718 = -1;
    break BeforeRet;
    }
    
    var h_2919236769 = (hc_2919236717 & (t_2919236715.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2919236715.data[chckIndx(h_2919236769, 0, (t_2919236715.data).length - 1)].Field0)) break Label2;
          if (((t_2919236715.data[chckIndx(h_2919236769, 0, (t_2919236715.data).length - 1)].Field0 == hc_2919236717) && HEX3DHEX3D_2298478667(t_2919236715.data[chckIndx(h_2919236769, 0, (t_2919236715.data).length - 1)].Field1, key_2919236716))) {
          result_2919236718 = h_2919236769;
          break BeforeRet;
          }
          
          h_2919236769 = nextTry_1342177315(h_2919236769, (t_2919236715.data).length - 1);
        }
    };
    result_2919236718 = subInt(-1, h_2919236769);
  };

  return result_2919236718;

}

function HEX5BHEX5DHEX3D_2919235688(t_2919235691, key_2919235692, val_2919235693) {
    if (((t_2919235691.data).length == 0)) {
    var correctSizeHEX60gensym3_2919235743 = slotsNeeded_1342177323(32);
    t_2919235691.counter = 0;
    t_2919235691.data = new Array(chckRange(correctSizeHEX60gensym3_2919235743, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_2919235743, 0, 2147483647) ; ++i) { t_2919235691.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_2919235748 = [0];
    var index_2919235987 = rawGet_2919235749(t_2919235691, key_2919235692, hc_2919235748, 0);
    if ((0 <= index_2919235987)) {
    t_2919235691.data[chckIndx(index_2919235987, 0, (t_2919235691.data).length - 1)].Field2 = nimCopy(t_2919235691.data[chckIndx(index_2919235987, 0, (t_2919235691.data).length - 1)].Field2, val_2919235693, NTI2868903943);
    }
    else {
      if (((t_2919235691.data).length == 0)) {
      var correctSizeHEX60gensym8_2919236089 = slotsNeeded_1342177323(32);
      t_2919235691.counter = 0;
      t_2919235691.data = new Array(chckRange(correctSizeHEX60gensym8_2919236089, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_2919236089, 0, 2147483647) ; ++i) { t_2919235691.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_2919236094(t_2919235691)) {
      enlarge_2919236249(t_2919235691);
      index_2919235987 = rawGetKnownHC_2919236712(t_2919235691, key_2919235692, hc_2919235748[0]);
      }
      
      index_2919235987 = subInt(-1, index_2919235987);
      rawInsert_2919236543(t_2919235691, t_2919235691, "data", key_2919235692, val_2919235693, hc_2919235748[0], index_2919235987);
      t_2919235691.counter = addInt(t_2919235691.counter, 1);
    }
    

  
}

function get_1207962324(self_1207962326, otherwise_1207962327) {
    var Temporary1;

  var result_1207962328 = 0;

    if (isSome_1207962333(self_1207962326)) {
    Temporary1 = self_1207962326.val;
    }
    else {
    Temporary1 = otherwise_1207962327;
    }
    
    result_1207962328 = Temporary1;

  return result_1207962328;

}

function hasKey_2919237150(t_2919237153, key_2919237154) {
  var result_2919237155 = false;

    var hc_2919237156 = [0];
    result_2919237155 = (0 <= rawGet_2919235749(t_2919237153, key_2919237154, hc_2919237156, 0));

  return result_2919237155;

}

function contains_2919237144(t_2919237147, key_2919237148) {
  var result_2919237149 = false;

  BeforeRet: {
    result_2919237149 = hasKey_2919237150(t_2919237147, key_2919237148);
    break BeforeRet;
  };

  return result_2919237149;

}

function HEX5BHEX5D_2919237216(t_2919237219, key_2919237220) {
  var result_2919237221 = null;

    var hcHEX60gensym22_2919237222 = [0];
    var indexHEX60gensym22_2919237229 = rawGet_2919235749(t_2919237219, key_2919237220, hcHEX60gensym22_2919237222, 0);
    if ((0 <= indexHEX60gensym22_2919237229)) {
    result_2919237221 = t_2919237219.data[chckIndx(indexHEX60gensym22_2919237229, 0, (t_2919237219.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2768242456(key_2919237220);
    }
    

  return result_2919237221;

}

function newFunctionExecutionContext_2785099229(ctxHEX60gensym98_2785099230, dataHEX60gensym98_2785099231) {
  var result_2785099232 = null;

  BeforeRet: {
    var itemHEX60gensym98_2785099233 = getItem_2785095888(dataHEX60gensym98_2785099231);
    var keyHEX60gensym98_2785099234 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym98_2785099233, NTI2801795097), Field1: -1}, NTI2801795100);
    HEX5BHEX5DHEX3D_2801806532(ctxHEX60gensym98_2785099230.depGraph.changed, keyHEX60gensym98_2785099234, ctxHEX60gensym98_2785099230.depGraph.revision);
    HEX5BHEX5DHEX3D_2785096044(ctxHEX60gensym98_2785099230.itemsFunctionExecutionContext, itemHEX60gensym98_2785099233, dataHEX60gensym98_2785099231);
    result_2785099232 = dataHEX60gensym98_2785099231;
    break BeforeRet;
  };

  return result_2785099232;

}

function executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, node_2919236957, variables_2919236960) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_2919236961 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_2919236955.enableExecutionLogging) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (ctx_2919236955.enableExecutionLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2768242647(node_2919236957));
    }
    
    try {
    Label3: {
      var expr_2919236972 = node_2919236957;
      var pos_2919236973 = 0;
      var _ = pos_2919236973;
      if ((expr_2919236972.kind == 0)) {
      result_2919236961 = nimCopy(result_2919236961, voidValue_2868904622(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 7)) {
      var lastValue_2919236984 = errorValue_2868904593();
      Label4: {
        var child_2919236988 = null;
        var i_2734686702 = 0;
        var L_2734686703 = (node_2919236957.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2734686702 < L_2734686703)) break Label6;
              child_2919236988 = node_2919236957.children[chckIndx(i_2734686702, 0, (node_2919236957.children).length - 1)];
              lastValue_2919236984 = nimCopy(lastValue_2919236984, executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, child_2919236988, variables_2919236960), NTI2868903943);
              i_2734686702 = addInt(i_2734686702, 1);
              if (!(((node_2919236957.children).length == L_2734686703))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_2919236961 = nimCopy(result_2919236961, lastValue_2919236984, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 3)) {
      result_2919236961 = nimCopy(result_2919236961, {kind: 2, stringValue: nimCopy(null, node_2919236957.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_2919236957.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_2919236997 = Temporary7;
      result_2919236961 = nimCopy(result_2919236961, {kind: 3, intValue: value_2919236997, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 9)) {
      if ((len_2768240728(node_2919236957) < 2)) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var index_2919237002 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_2919237002, 1) < len_2768240728(node_2919236957))) break Label10;
            try {
            var condition_2919237007 = HEX5BHEX5D_2768240724(node_2919236957, index_2919237002);
            var trueCase_2919237008 = HEX5BHEX5D_2768240724(node_2919236957, addInt(index_2919237002, 1));
            var conditionValue_2919237009 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, condition_2919237007, variables_2919236960);
            if ((conditionValue_2919237009.kind == 0)) {
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            if (!((conditionValue_2919237009.kind == 3))) {
            var fmtRes_2919237022 = [mnewString(0)];
            fmtRes_2919237022[0].push.apply(fmtRes_2919237022[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_2919237023(fmtRes_2919237022, 0, conditionValue_2919237009, []);
            log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237022[0], NTI33554449)]);
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_2919237009;
              if (ConstSet89[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2868903942)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_2919237028 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, trueCase_2919237008, variables_2919236960);
            result_2919236961 = nimCopy(result_2919236961, trueCaseValue_2919237028, NTI2868903943);
            break BeforeRet;
            }
            
            } finally {
            index_2919237002 = addInt(index_2919237002, 2);
            }
          }
      };
      if (!((modInt(len_2768240728(node_2919236957), 2) == 0))) {
      var falseCaseValue_2919237029 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, last_2768240898(node_2919236957), variables_2919236960);
      result_2919236961 = nimCopy(result_2919236961, falseCaseValue_2919237029, NTI2868903943);
      break BeforeRet;
      }
      
      result_2919236961 = nimCopy(result_2919236961, voidValue_2868904622(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 10)) {
      if ((len_2768240728(node_2919236957) < 2)) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var condition_2919237034 = HEX5BHEX5D_2768240724(node_2919236957, 0);
      var body_2919237035 = HEX5BHEX5D_2768240724(node_2919236957, 1);
      var index_2919237036 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_2919237057 = get_1207962324(fec_2919236956.maxLoopIterations, 1000);
            if ((maxLoopIterations_2919237057 < index_2919237036)) {
            var fmtRes_2919237062 = [mnewString(0)];
            fmtRes_2919237062[0].push.apply(fmtRes_2919237062[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2348810760(fmtRes_2919237062, 0, maxLoopIterations_2919237057, []);
            fmtRes_2919237062[0].push.apply(fmtRes_2919237062[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_2868904741(fmtRes_2919237062, 0, node_2919236957, []);
            log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237062[0], NTI33554449)]);
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            var conditionValue_2919237073 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, condition_2919237034, variables_2919236960);
            if ((conditionValue_2919237073.kind == 0)) {
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            if (!((conditionValue_2919237073.kind == 3))) {
            var fmtRes_2919237086 = [mnewString(0)];
            fmtRes_2919237086[0].push.apply(fmtRes_2919237086[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_2919237023(fmtRes_2919237086, 0, conditionValue_2919237073, []);
            log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237086[0], NTI33554449)]);
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_2919237073;
              if (ConstSet90[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI2868903942)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_2919237092 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, body_2919237035, variables_2919236960);
            if ((bodyValue_2919237092.kind == 0)) {
            result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            } finally {
            index_2919237036 = addInt(index_2919237036, 1);
            }
          }
      };
      result_2919236961 = nimCopy(result_2919236961, voidValue_2868904622(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 1)) {
      var id_2919237101 = nimCopy(null, node_2919236957.reff, NTI2298478595);
      if (contains_2919237144(variables_2919236960, id_2919237101)) {
      result_2919236961 = nimCopy(result_2919236961, HEX5BHEX5D_2919237216(variables_2919236960, id_2919237101), NTI2868903943);
      break BeforeRet;
      }
      
        var oHEX60gensym44_2919237297 = computeSymbol_2785109118(ctx_2919236955, node_2919236957, true);
        if (!isSome_2868905495(oHEX60gensym44_2919237297)) Temporary17 = false; else {          var sym_2919237320 = get_2868905515(oHEX60gensym44_2919237297);
          Temporary17 = true;        }      if (Temporary17) {
      var value_2919237321 = computeSymbolValue_2785119193(ctx_2919236955, sym_2919237320, true);
      HEX5BHEX5DHEX3D_2919235688(variables_2919236960, id_2919237101, value_2919237321);
      result_2919236961 = nimCopy(result_2919236961, value_2919237321, NTI2868903943);
      break BeforeRet;
      }
      
      var fmtRes_2919237372 = [mnewString(0)];
      fmtRes_2919237372[0].push.apply(fmtRes_2919237372[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_2868904741(fmtRes_2919237372, 0, node_2919236957, []);
      fmtRes_2919237372[0].push.apply(fmtRes_2919237372[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237372[0], NTI33554449)]);
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 8)) {
      var function_2919237382 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, HEX5BHEX5D_2768240724(node_2919236957, 0), variables_2919236960);
      switch (function_2919237382.kind) {
      case 0:
        result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        break;
      case 4:
        var args_2919237387 = [];
        Label18: {
          var arg_2919237424 = null;
          var colontmp__2734686708 = [];
          colontmp__2734686708 = HEX5BHEX5D_2919237397(node_2919236957.children, HEX2EHEX2E_1056964704(1, 1));
          var i_2734686709 = 0;
          var L_2734686710 = (colontmp__2734686708).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2734686709 < L_2734686710)) break Label20;
                arg_2919237424 = colontmp__2734686708[chckIndx(i_2734686709, 0, (colontmp__2734686708).length - 1)];
                var value_2919237425 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, arg_2919237424, variables_2919236960);
                if ((value_2919237425.kind == 0)) {
                result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_2919237425, NTI2868903943);
                args_2919237387.push(Temporary21);;
                i_2734686709 = addInt(i_2734686709, 1);
                if (!(((colontmp__2734686708).length == L_2734686710))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_2919237382;
        if (ConstSet91[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI2868903942)); }
        result_2919236961 = nimCopy(result_2919236961, Temporary22.impl(args_2919237387), NTI2868903943);
        break BeforeRet;
        break;
      case 5:
        var args_2919237438 = [];
        Label23: {
          var arg_2919237457 = null;
          var colontmp__2734686713 = [];
          colontmp__2734686713 = HEX5BHEX5D_2919237397(node_2919236957.children, HEX2EHEX2E_1056964704(1, 1));
          var i_2734686714 = 0;
          var L_2734686715 = (colontmp__2734686713).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2734686714 < L_2734686715)) break Label25;
                arg_2919237457 = colontmp__2734686713[chckIndx(i_2734686714, 0, (colontmp__2734686713).length - 1)];
                var value_2919237458 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, arg_2919237457, variables_2919236960);
                if ((value_2919237458.kind == 0)) {
                result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_2919237458, NTI2868903943);
                args_2919237438.push(Temporary26);;
                i_2734686714 = addInt(i_2734686714, 1);
                if (!(((colontmp__2734686713).length == L_2734686715))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_2919237382;
        if (ConstSet92[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2868903942)); }
        var fec_2919237467 = newFunctionExecutionContext_2785099229(ctx_2919236955, {node: Temporary27.node, arguments: nimCopy(null, args_2919237438, NTI2919236594), id: ({id: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_2919236961 = nimCopy(result_2919236961, computeFunctionExecution_2785122297(ctx_2919236955, fec_2919237467), NTI2868903943);
        break BeforeRet;
        break;
      default: 
        result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_2919236972.kind == 5)) {
      if ((len_2768240728(node_2919236957) < 2)) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var valueNode_2919237472 = HEX5BHEX5D_2768240724(node_2919236957, 1);
      var value_2919237473 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, valueNode_2919237472, variables_2919236960);
      HEX5BHEX5DHEX3D_2919235688(variables_2919236960, node_2919236957.id, value_2919237473);
      result_2919236961 = nimCopy(result_2919236961, value_2919237473, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 6)) {
      if ((len_2768240728(node_2919236957) < 2)) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var valueNode_2919237524 = HEX5BHEX5D_2768240724(node_2919236957, 1);
      var value_2919237525 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, valueNode_2919237524, variables_2919236960);
      HEX5BHEX5DHEX3D_2919235688(variables_2919236960, node_2919236957.id, value_2919237525);
      result_2919236961 = nimCopy(result_2919236961, value_2919237525, NTI2868903943);
      break BeforeRet;
      }
      else {
      if ((expr_2919236972.kind == 4)) {
      var id_2919237576 = nimCopy(null, node_2919236957.id, NTI2298478595);
      if (contains_2919237144(variables_2919236960, id_2919237576)) {
      result_2919236961 = nimCopy(result_2919236961, HEX5BHEX5D_2919237216(variables_2919236960, id_2919237576), NTI2868903943);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_2919236972.kind == 13)) {
      if ((len_2768240728(node_2919236957) < 2)) {
      result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
      break BeforeRet;
      }
      
      var targetNode_2919237686 = HEX5BHEX5D_2768240724(node_2919236957, 0);
      var valueNode_2919237687 = HEX5BHEX5D_2768240724(node_2919236957, 1);
        var oHEX60gensym55_2919237690 = computeSymbol_2785109118(ctx_2919236955, targetNode_2919237686, true);
        if (!isSome_2868905495(oHEX60gensym55_2919237690)) Temporary28 = false; else {          var sym_2919237713 = get_2868905515(oHEX60gensym55_2919237690);
          Temporary28 = true;        }      if (Temporary28) {
      var value_2919237714 = executeNodeRec_2919236954(ctx_2919236955, fec_2919236956, valueNode_2919237687, variables_2919236960);
      HEX5BHEX5DHEX3D_2919235688(variables_2919236960, sym_2919237713.id, value_2919237714);
      result_2919236961 = nimCopy(result_2919236961, voidValue_2868904622(), NTI2868903943);
      break BeforeRet;
      }
      else {
        var fmtRes_2919237765 = [mnewString(0)];
        fmtRes_2919237765[0].push.apply(fmtRes_2919237765[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_2868904741(fmtRes_2919237765, 0, node_2919236957, []);
        fmtRes_2919237765[0].push.apply(fmtRes_2919237765[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_2868904741(fmtRes_2919237765, 0, targetNode_2919237686, []);
        fmtRes_2919237765[0].push.apply(fmtRes_2919237765[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237765[0], NTI33554449)]);
        result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_2919237780 = [mnewString(0)];
        fmtRes_2919237780[0].push.apply(fmtRes_2919237780[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_2868904741(fmtRes_2919237780, 0, node_2919236957, []);
        log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237780[0], NTI33554449)]);
        result_2919236961 = nimCopy(result_2919236961, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_2919236955.enableExecutionLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [45,62,32], HEX24_2868904649(result_2919236961));
    }
    
    }
    } finally {
    if (ctx_2919236955.enableExecutionLogging) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2919236961;

}

function computeFunctionExecutionImpl2_2919237815(ctx_2919237816, fec_2919237817) {
      var Temporary4;
        var Temporary5;

  var result_2919237818 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_2919237819 = HEX5BHEX5D_2768240724(fec_2919237817.node, 2);
    var variables_2919237831 = [initTable_2919237820(32)];
    var params_2919237832 = HEX5BHEX5D_2768240724(fec_2919237817.node, 0);
    Label1: {
      var i_2919237874 = 0;
      var arg_2919237875 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2734686690 = 0;
      var L_2734686691 = (fec_2919237817.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686690 < L_2734686691)) break Label3;
            i_2919237874 = i_2734686690;
            arg_2919237875 = nimCopy(arg_2919237875, fec_2919237817.arguments[chckIndx(i_2734686690, 0, (fec_2919237817.arguments).length - 1)], NTI2868903943);
            if ((len_2768240728(params_2919237832) <= i_2919237874)) {
            var fmtRes_2919237880 = [mnewString(0)];
            fmtRes_2919237880[0].push.apply(fmtRes_2919237880[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2348810760(fmtRes_2919237880, 0, len_2768240728(params_2919237832), []);
            fmtRes_2919237880[0].push.apply(fmtRes_2919237880[0], [44,32,103,111,116,32]);;
            formatValue_2348810760(fmtRes_2919237880, 0, (fec_2919237817.arguments).length, []);
            log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2919237880[0], NTI33554449)]);
            result_2919237818 = nimCopy(result_2919237818, errorValue_2868904593(), NTI2868903943);
            break BeforeRet;
            }
            
            var param_2919237894 = HEX5BHEX5D_2768240724(params_2919237832, i_2919237874);
            HEX5BHEX5DHEX3D_2919235688(variables_2919237831[0], param_2919237894.id, arg_2919237875);
            i_2734686690 = addInt(i_2734686690, 1);
            if (!(((fec_2919237817.arguments).length == L_2734686691))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_2919237941 = executeNodeRec_2919236954(ctx_2919237816, fec_2919237817, body_2919237819, variables_2919237831[0]);
    if ((bodyResult_2919237941.kind == 0)) {
    result_2919237818 = nimCopy(result_2919237818, errorValue_2868904593(), NTI2868903943);
    break BeforeRet;
    }
    
    var functionType_2919237946 = computeType_2785102512(ctx_2919237816, fec_2919237817.node, true);
      if (!(functionType_2919237946.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_2919237946;
        if (ConstSet93[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903939)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_2919237818 = nimCopy(result_2919237818, voidValue_2868904622(), NTI2868903943);
    break BeforeRet;
    }
    
    result_2919237818 = nimCopy(result_2919237818, bodyResult_2919237941, NTI2868903943);
    break BeforeRet;
  };

  return result_2919237818;

}

function computeFunctionExecutionImpl_2785018784(ctx_2785018785, fec_2785018786) {
  var result_2785129170 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym607_2785129172 = (ctx_2785018785.enableLogging || ctx_2785018785.enableQueryLogging);
    if (logQueryHEX60gensym607_2785129172) {
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym607_2785129172) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_2868904733(fec_2785018786) || []));
    }
    
    try {
    result_2785129170 = nimCopy(result_2785129170, computeFunctionExecutionImpl2_2919237815(ctx_2785018785, fec_2785018786), NTI2868903943);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym607_2785129172 && true)) {
    log_1191182436(logger_721420488[0], 2, [(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2868904649(result_2785129170) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym607_2785129172) {
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], 1);
    }
    
    }
  };

  return result_2785129170;

}

function getOrDefault_2785053129(t_2785053132, key_2785053133, default_2785053134) {
    var Temporary1;

  var result_2785053135 = null;

    var hcHEX60gensym297_2785053138 = [0];
    var indexHEX60gensym297_2785053493 = rawGet_2785053139(t_2785053132, key_2785053133, hcHEX60gensym297_2785053138, 0);
    if ((0 <= indexHEX60gensym297_2785053493)) {
    Temporary1 = t_2785053132.data[chckIndx(indexHEX60gensym297_2785053493, 0, (t_2785053132.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785053134;
    }
    
    result_2785053135 = Temporary1;

  return result_2785053135;

}

function newDoublyLinkedNode_2785053618(value_2785053620) {
  var result_2785053621 = null;

    result_2785053621 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2785053621.value = nimCopy(result_2785053621.value, value_2785053620, NTI2785018711);

  return result_2785053621;

}

function mustRehash_2785053977(t_2785053979) {
  var result_2785053980 = false;

    if (!((t_2785053979.counter < (t_2785053979.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785053980 = ((mulInt((t_2785053979.data).length, 2) < mulInt(t_2785053979.counter, 3)) || (subInt((t_2785053979.data).length, t_2785053979.counter) < 4));

  return result_2785053980;

}

function rawInsert_2785054670(t_2785054674, data_2785054675, data_2785054675_Idx, key_2785054676, val_2785054677, hc_2785054678, h_2785054679) {
    data_2785054675[data_2785054675_Idx][chckIndx(h_2785054679, 0, (data_2785054675[data_2785054675_Idx]).length - 1)].Field1 = key_2785054676;
    data_2785054675[data_2785054675_Idx][chckIndx(h_2785054679, 0, (data_2785054675[data_2785054675_Idx]).length - 1)].Field2 = val_2785054677;
    data_2785054675[data_2785054675_Idx][chckIndx(h_2785054679, 0, (data_2785054675[data_2785054675_Idx]).length - 1)].Field0 = hc_2785054678;

  
}

function enlarge_2785054234(t_2785054237) {
    var n_2785054240 = [];
    n_2785054240 = new Array(chckRange(mulInt((t_2785054237.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785054237.data).length, 2), 0, 2147483647) ; ++i) { n_2785054240[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785054237.data; t_2785054237.data = n_2785054240; n_2785054240 = Temporary1;    Label2: {
      var i_2785054338 = 0;
      var colontmp__2734686719 = 0;
      colontmp__2734686719 = (n_2785054240).length - 1;
      var res_2734686720 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686720 <= colontmp__2734686719)) break Label4;
            i_2785054338 = res_2734686720;
            var eh_2785054419 = n_2785054240[chckIndx(i_2785054338, 0, (n_2785054240).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785054419)) {
            var j_2785054423 = (eh_2785054419 & (t_2785054237.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785054237.data[chckIndx(j_2785054423, 0, (t_2785054237.data).length - 1)].Field0)) break Label6;
                  j_2785054423 = nextTry_1342177315(j_2785054423, (t_2785054237.data).length - 1);
                }
            };
            rawInsert_2785054670(t_2785054237, t_2785054237, "data", n_2785054240[chckIndx(i_2785054338, 0, (n_2785054240).length - 1)].Field1, n_2785054240[chckIndx(i_2785054338, 0, (n_2785054240).length - 1)].Field2, eh_2785054419, j_2785054423);
            }
            
            res_2734686720 = addInt(res_2734686720, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785054920(t_2785054923, key_2785054924, hc_2785054925) {
  var result_2785054926 = 0;

  BeforeRet: {
    if (((t_2785054923.data).length == 0)) {
    result_2785054926 = -1;
    break BeforeRet;
    }
    
    var h_2785055011 = (hc_2785054925 & (t_2785054923.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785054923.data[chckIndx(h_2785055011, 0, (t_2785054923.data).length - 1)].Field0)) break Label2;
          if (((t_2785054923.data[chckIndx(h_2785055011, 0, (t_2785054923.data).length - 1)].Field0 == hc_2785054925) && HEX3DHEX3D_2868904927(t_2785054923.data[chckIndx(h_2785055011, 0, (t_2785054923.data).length - 1)].Field1, key_2785054924))) {
          result_2785054926 = h_2785055011;
          break BeforeRet;
          }
          
          h_2785055011 = nextTry_1342177315(h_2785055011, (t_2785054923.data).length - 1);
        }
    };
    result_2785054926 = subInt(-1, h_2785055011);
  };

  return result_2785054926;

}

function HEX5BHEX5DHEX3D_2785053709(t_2785053712, key_2785053713, val_2785053714) {
    if (((t_2785053712.data).length == 0)) {
    var correctSizeHEX60gensym302_2785053797 = slotsNeeded_1342177323(32);
    t_2785053712.counter = 0;
    t_2785053712.data = new Array(chckRange(correctSizeHEX60gensym302_2785053797, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_2785053797, 0, 2147483647) ; ++i) { t_2785053712.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785053802 = [0];
    var index_2785053809 = rawGet_2785053139(t_2785053712, key_2785053713, hc_2785053802, 0);
    if ((0 <= index_2785053809)) {
    t_2785053712.data[chckIndx(index_2785053809, 0, (t_2785053712.data).length - 1)].Field2 = val_2785053714;
    }
    else {
      if (((t_2785053712.data).length == 0)) {
      var correctSizeHEX60gensym305_2785053972 = slotsNeeded_1342177323(32);
      t_2785053712.counter = 0;
      t_2785053712.data = new Array(chckRange(correctSizeHEX60gensym305_2785053972, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym305_2785053972, 0, 2147483647) ; ++i) { t_2785053712.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785053977(t_2785053712)) {
      enlarge_2785054234(t_2785053712);
      index_2785053809 = rawGetKnownHC_2785054920(t_2785053712, key_2785053713, hc_2785053802[0]);
      }
      
      index_2785053809 = subInt(-1, index_2785053809);
      rawInsert_2785054670(t_2785053712, t_2785053712, "data", key_2785053713, val_2785053714, hc_2785053802[0], index_2785053809);
      t_2785053712.counter = addInt(t_2785053712.counter, 1);
    }
    

  
}

function rawGet_2785055547(t_2785055550, key_2785055551, hc_2785055552, hc_2785055552_Idx) {
  var result_2785055553 = 0;

  BeforeRet: {
    hc_2785055552[hc_2785055552_Idx] = hash_2868904883(key_2785055551);
    if ((hc_2785055552[hc_2785055552_Idx] == 0)) {
    hc_2785055552[hc_2785055552_Idx] = 314159265;
    }
    
    if (((t_2785055550.data).length == 0)) {
    result_2785055553 = -1;
    break BeforeRet;
    }
    
    var h_2785055639 = (hc_2785055552[hc_2785055552_Idx] & (t_2785055550.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785055550.data[chckIndx(h_2785055639, 0, (t_2785055550.data).length - 1)].Field0)) break Label2;
          if (((t_2785055550.data[chckIndx(h_2785055639, 0, (t_2785055550.data).length - 1)].Field0 == hc_2785055552[hc_2785055552_Idx]) && HEX3DHEX3D_2868904927(t_2785055550.data[chckIndx(h_2785055639, 0, (t_2785055550.data).length - 1)].Field1, key_2785055551))) {
          result_2785055553 = h_2785055639;
          break BeforeRet;
          }
          
          h_2785055639 = nextTry_1862271018(h_2785055639, (t_2785055550.data).length - 1);
        }
    };
    result_2785055553 = subInt(-1, h_2785055639);
  };

  return result_2785055553;

}

function exclImpl_2785055541(s_2785055543, key_2785055544) {
          var Temporary5;

  var result_2785055545 = false;

  BeforeRet: {
    var hc_2785055546 = [0];
    var i_2785055901 = rawGet_2785055547(s_2785055543, key_2785055544, hc_2785055546, 0);
    var msk_2785055905 = (s_2785055543.data).length - 1;
    result_2785055545 = true;
    if ((0 <= i_2785055901)) {
    result_2785055545 = false;
    s_2785055543.counter = subInt(s_2785055543.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785055911 = i_2785055901;
          var r_2785055912 = j_2785055911;
          s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)].Field0 = 0;
          s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785055901 = (addInt(i_2785055901, 1) & msk_2785055905);
                if (isEmpty_1862271012(s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785055912 = (s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)].Field0 & msk_2785055905);
                if (!(((((r_2785055912 <= i_2785055901) && (j_2785055911 < r_2785055912)) || ((j_2785055911 < r_2785055912) && (i_2785055901 < j_2785055911))) || ((i_2785055901 < j_2785055911) && (r_2785055912 <= i_2785055901))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)];
          s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)] = genericReset(s_2785055543.data[chckIndx(i_2785055901, 0, (s_2785055543.data).length - 1)], NTI2785018767);
          s_2785055543.data[chckIndx(j_2785055911, 0, (s_2785055543.data).length - 1)] = nimCopy(s_2785055543.data[chckIndx(j_2785055911, 0, (s_2785055543.data).length - 1)], Temporary5, NTI2785018767);
        }
    };
    }
    
  };

  return result_2785055545;

}

function excl_2785055526(s_2785055528, key_2785055529) {
    var _ = exclImpl_2785055541(s_2785055528, key_2785055529);

  
}

function len_2785056665(t_2785056668) {
  var result_2785056669 = 0;

    result_2785056669 = t_2785056668.counter;

  return result_2785056669;

}

function len_2785056582(cache_2785056585) {
  var result_2785056586 = 0;

    result_2785056586 = len_2785056665(cache_2785056585.table);

  return result_2785056586;

}

function mustRehash_2785056806(t_2785056808) {
  var result_2785056809 = false;

    if (!((t_2785056808.counter < (t_2785056808.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785056809 = ((mulInt((t_2785056808.data).length, 2) < mulInt(t_2785056808.counter, 3)) || (subInt((t_2785056808.data).length, t_2785056808.counter) < 4));

  return result_2785056809;

}

function rawGetKnownHC_2785057412(t_2785057415, key_2785057416, hc_2785057417) {
  var result_2785057418 = 0;

  BeforeRet: {
    if (((t_2785057415.data).length == 0)) {
    result_2785057418 = -1;
    break BeforeRet;
    }
    
    var h_2785057503 = (hc_2785057417 & (t_2785057415.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785057415.data[chckIndx(h_2785057503, 0, (t_2785057415.data).length - 1)].Field0)) break Label2;
          if (((t_2785057415.data[chckIndx(h_2785057503, 0, (t_2785057415.data).length - 1)].Field0 == hc_2785057417) && HEX3DHEX3D_2868904927(t_2785057415.data[chckIndx(h_2785057503, 0, (t_2785057415.data).length - 1)].Field1, key_2785057416))) {
          result_2785057418 = h_2785057503;
          break BeforeRet;
          }
          
          h_2785057503 = nextTry_1862271018(h_2785057503, (t_2785057415.data).length - 1);
        }
    };
    result_2785057418 = subInt(-1, h_2785057503);
  };

  return result_2785057418;

}

function rawInsert_2785057912(s_2785057914, data_2785057915, data_2785057915_Idx, key_2785057916, hc_2785057917, h_2785057918) {
    if (((data_2785057915[data_2785057915_Idx]).length == 0)) {
    var correctSizeHEX60gensym324_2785058001 = slotsNeeded_1862271026(64);
    s_2785057914.counter = 0;
    s_2785057914.data = new Array(chckRange(correctSizeHEX60gensym324_2785058001, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym324_2785058001, 0, 2147483647) ; ++i) { s_2785057914.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2785057915[data_2785057915_Idx][chckIndx(h_2785057918, 0, (data_2785057915[data_2785057915_Idx]).length - 1)].Field1 = key_2785057916;
    data_2785057915[data_2785057915_Idx][chckIndx(h_2785057918, 0, (data_2785057915[data_2785057915_Idx]).length - 1)].Field0 = hc_2785057917;

  
}

function enlarge_2785057069(s_2785057071) {
    var n_2785057073 = [];
    n_2785057073 = new Array(chckRange(mulInt((s_2785057071.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785057071.data).length, 2), 0, 2147483647) ; ++i) { n_2785057073[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2785057071.data; s_2785057071.data = n_2785057073; n_2785057073 = Temporary1;    Label2: {
      var i_2785057171 = 0;
      var colontmp__2734686728 = 0;
      colontmp__2734686728 = (n_2785057073).length - 1;
      var res_2734686729 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686729 <= colontmp__2734686728)) break Label4;
            i_2785057171 = res_2734686729;
            if (isFilled_1862271015(n_2785057073[chckIndx(i_2785057171, 0, (n_2785057073).length - 1)].Field0)) {
            var j_2785057747 = subInt(-1, rawGetKnownHC_2785057412(s_2785057071, n_2785057073[chckIndx(i_2785057171, 0, (n_2785057073).length - 1)].Field1, n_2785057073[chckIndx(i_2785057171, 0, (n_2785057073).length - 1)].Field0));
            rawInsert_2785057912(s_2785057071, s_2785057071, "data", n_2785057073[chckIndx(i_2785057171, 0, (n_2785057073).length - 1)].Field1, n_2785057073[chckIndx(i_2785057171, 0, (n_2785057073).length - 1)].Field0, j_2785057747);
            }
            
            res_2734686729 = addInt(res_2734686729, 1);
          }
      };
    };

  
}

function incl_2785056690(s_2785056692, key_2785056693) {
    if (((s_2785056692.data).length == 0)) {
    var correctSizeHEX60gensym317_2785056776 = slotsNeeded_1862271026(64);
    s_2785056692.counter = 0;
    s_2785056692.data = new Array(chckRange(correctSizeHEX60gensym317_2785056776, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym317_2785056776, 0, 2147483647) ; ++i) { s_2785056692.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2785056791 = [0];
    var index_2785056805 = rawGet_2785055547(s_2785056692, key_2785056693, hc_2785056791, 0);
    if ((index_2785056805 < 0)) {
    if (mustRehash_2785056806(s_2785056692)) {
    enlarge_2785057069(s_2785056692);
    index_2785056805 = rawGetKnownHC_2785057412(s_2785056692, key_2785056693, hc_2785056791[0]);
    }
    
    rawInsert_2785057912(s_2785056692, s_2785056692, "data", key_2785056693, hc_2785056791[0], subInt(-1, index_2785056805));
    s_2785056692.counter = addInt(s_2785056692.counter, 1);
    }
    

  
}

function del_2785058268(t_2785058271, key_2785058272) {
    var hc_2785058273 = [0];
    var i_2785058280 = rawGet_2785053139(t_2785058271, key_2785058272, hc_2785058273, 0);
    var mskHEX60gensym36_2785058284 = (t_2785058271.data).length - 1;
    if ((0 <= i_2785058280)) {
    t_2785058271.counter = subInt(t_2785058271.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785058291 = i_2785058280;
            var rHEX60gensym36_2785058292 = jHEX60gensym36_2785058291;
            t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)].Field0 = 0;
            t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)].Field1 = null;
            t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785058280 = (addInt(i_2785058280, 1) & mskHEX60gensym36_2785058284);
                  if (isEmpty_1342177309(t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785058292 = (t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)].Field0 & mskHEX60gensym36_2785058284);
                  if (!(((((rHEX60gensym36_2785058292 <= i_2785058280) && (jHEX60gensym36_2785058291 < rHEX60gensym36_2785058292)) || ((jHEX60gensym36_2785058291 < rHEX60gensym36_2785058292) && (i_2785058280 < jHEX60gensym36_2785058291))) || ((i_2785058280 < jHEX60gensym36_2785058291) && (rHEX60gensym36_2785058292 <= i_2785058280))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785058271.data[chckIndx(jHEX60gensym36_2785058291, 0, (t_2785058271.data).length - 1)] = nimCopy(t_2785058271.data[chckIndx(jHEX60gensym36_2785058291, 0, (t_2785058271.data).length - 1)], t_2785058271.data[chckIndx(i_2785058280, 0, (t_2785058271.data).length - 1)], NTI2785018747);
          }
      };
    };
    }
    

  
}

function resize_2785056500(cache_2785056503) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785056503.capacity < len_2785056582(cache_2785056503))) break Label2;
          var t_2785056670 = cache_2785056503.list.tail;
          if (cache_2785056503.recordRemovedKeys) {
          incl_2785056690(cache_2785056503.removedKeys, t_2785056670.value.key);
          }
          
          del_2785058268(cache_2785056503.table, t_2785056670.value.key);
          remove_2785059027(cache_2785056503.list, t_2785056670);
        }
    };

  
}

function addNewNode_2785053610(cache_2785053613, key_2785053614, val_2785053615) {
    var node_2785053645 = newDoublyLinkedNode_2785053618({key: key_2785053614, val: nimCopy(null, val_2785053615, NTI2868903943)});
    HEX5BHEX5DHEX3D_2785053709(cache_2785053613.table, key_2785053614, node_2785053645);
    prepend_2785055316(cache_2785053613.list, node_2785053645);
    if (cache_2785053613.recordRemovedKeys) {
    excl_2785055526(cache_2785053613.removedKeys, key_2785053614);
    }
    
    resize_2785056500(cache_2785053613);

  
}

function HEX5BHEX5DHEX3D_2785053034(cache_2785053037, key_2785053038, val_2785053039) {
    var node_2785053583 = getOrDefault_2785053129(cache_2785053037.table, key_2785053038, null);
    if ((node_2785053583 == null)) {
    addNewNode_2785053610(cache_2785053037, key_2785053038, val_2785053039);
    }
    else {
      node_2785053583.value.val = nimCopy(node_2785053583.value.val, val_2785053039, NTI2868903943);
      remove_2785059027(cache_2785053037.list, node_2785053583);
      prepend_2785055316(cache_2785053037.list, node_2785053583);
    }
    

  
}

function initDoublyLinkedList_2785059474() {
  var result_2785059476 = ({head: null, tail: null});

  return result_2785059476;

}

function initTable_2785059480(initialSize_2785059483) {
  var result_2785059484 = ({data: [], counter: 0});

    var correctSizeHEX60gensym325_2785059486 = slotsNeeded_1342177323(chckRange(initialSize_2785059483, 0, 2147483647));
    result_2785059484.counter = 0;
    result_2785059484.data = new Array(chckRange(correctSizeHEX60gensym325_2785059486, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_2785059486, 0, 2147483647) ; ++i) { result_2785059484.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785059484;

}

function newLruCache_2785059464(capacity_2785059467, recordRemovedKeys_2785059468) {
  var result_2785059469 = null;

    result_2785059469 = {capacity: capacity_2785059467, list: initDoublyLinkedList_2785059474(), table: initTable_2785059480(correctSize_2818572309(capacity_2785059467)), recordRemovedKeys: recordRemovedKeys_2785059468, removedKeys: ({data: [], counter: 0})};

  return result_2785059469;

}

function newCache_2785059459(capacity_2785059462) {
  var result_2785059463 = null;

    result_2785059463 = newLruCache_2785059464(capacity_2785059462, false);

  return result_2785059463;

}

function init_2785059454(result_2785059457, result_2785059457_Idx, capacity_2785059458) {
    result_2785059457[result_2785059457_Idx] = newCache_2785059459(capacity_2785059458);

  
}

function rawGet_2785059704(t_2785059707, key_2785059708, hc_2785059709, hc_2785059709_Idx) {
  var result_2785059710 = 0;

  BeforeRet: {
    hc_2785059709[hc_2785059709_Idx] = hash_2785018995(key_2785059708);
    if ((hc_2785059709[hc_2785059709_Idx] == 0)) {
    hc_2785059709[hc_2785059709_Idx] = 314159265;
    }
    
    if (((t_2785059707.data).length == 0)) {
    result_2785059710 = -1;
    break BeforeRet;
    }
    
    var h_2785059799 = (hc_2785059709[hc_2785059709_Idx] & (t_2785059707.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785059707.data[chckIndx(h_2785059799, 0, (t_2785059707.data).length - 1)].Field0)) break Label2;
          if (((t_2785059707.data[chckIndx(h_2785059799, 0, (t_2785059707.data).length - 1)].Field0 == hc_2785059709[hc_2785059709_Idx]) && HEX3DHEX3D_2785019332(t_2785059707.data[chckIndx(h_2785059799, 0, (t_2785059707.data).length - 1)].Field1, key_2785059708))) {
          result_2785059710 = h_2785059799;
          break BeforeRet;
          }
          
          h_2785059799 = nextTry_1342177315(h_2785059799, (t_2785059707.data).length - 1);
        }
    };
    result_2785059710 = subInt(-1, h_2785059799);
  };

  return result_2785059710;

}

function hasKey_2785059697(t_2785059700, key_2785059701) {
  var result_2785059702 = false;

    var hc_2785059703 = [0];
    result_2785059702 = (0 <= rawGet_2785059704(t_2785059700, key_2785059701, hc_2785059703, 0));

  return result_2785059702;

}

function contains_2785059691(t_2785059694, key_2785059695) {
  var result_2785059696 = false;

  BeforeRet: {
    result_2785059696 = hasKey_2785059697(t_2785059694, key_2785059695);
    break BeforeRet;
  };

  return result_2785059696;

}

function contains_2785059597(cache_2785059600, key_2785059601) {
  var result_2785059602 = false;

    result_2785059602 = contains_2785059691(cache_2785059600.table, key_2785059601);

  return result_2785059602;

}

function HEX5BHEX5D_2785060236(t_2785060239, key_2785060240) {
  var result_2785060241 = null;
  var result_2785060241_Idx = 0;

    var hcHEX60gensym22_2785060242 = [0];
    var indexHEX60gensym22_2785060249 = rawGet_2785059704(t_2785060239, key_2785060240, hcHEX60gensym22_2785060242, 0);
    if ((0 <= indexHEX60gensym22_2785060249)) {
    result_2785060241 = t_2785060239.data[chckIndx(indexHEX60gensym22_2785060249, 0, (t_2785060239.data).length - 1)]; result_2785060241_Idx = "Field2";
    }
    else {
    raiseKeyError_2785019628(key_2785060240);
    }
    

  return [result_2785060241, result_2785060241_Idx];

}

function remove_2785060356(L_2785060358, n_2785060359) {
    if ((n_2785060359 == L_2785060358.tail)) {
    L_2785060358.tail = n_2785060359.prev;
    }
    
    if ((n_2785060359 == L_2785060358.head)) {
    L_2785060358.head = n_2785060359.next;
    }
    
    if (!((n_2785060359.next == null))) {
    n_2785060359.next.prev = n_2785060359.prev;
    }
    
    if (!((n_2785060359.prev == null))) {
    n_2785060359.prev.next = n_2785060359.next;
    }
    

  
}

function prepend_2785060660(L_2785060662, n_2785060663) {
    n_2785060663.prev = null;
    n_2785060663.next = L_2785060662.head;
    if (!((L_2785060662.head == null))) {
    if (!((L_2785060662.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785060662.head.prev = n_2785060663;
    }
    
    L_2785060662.head = n_2785060663;
    if ((L_2785060662.tail == null)) {
    L_2785060662.tail = n_2785060663;
    }
    

  
}

function HEX5BHEX5D_2785060150(cache_2785060153, key_2785060154) {
    var Temporary1;

  var result_2785060155 = null;

    var node_2785060342 = (Temporary1 = HEX5BHEX5D_2785060236(cache_2785060153.table, key_2785060154), Temporary1)[0][Temporary1[1]];
    result_2785060155 = node_2785060342.value.val;
    remove_2785060356(cache_2785060153.list, node_2785060342);
    prepend_2785060660(cache_2785060153.list, node_2785060342);

  return result_2785060155;

}

function dependOnCurrentRevision_2785079628(ctxHEX60gensym81_2785079629) {
    if ((0 < (ctxHEX60gensym81_2785079629.dependencyStack).length)) {
    ctxHEX60gensym81_2785079629.dependencyStack[chckIndx((ctxHEX60gensym81_2785079629.dependencyStack).length - 1, 0, (ctxHEX60gensym81_2785079629.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_2801795104, NTI2298478595), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_2902461832(initialSize_2902461835) {
  var result_2902461836 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_2902461838 = slotsNeeded_1342177323(chckRange(initialSize_2902461835, 0, 2147483647));
    result_2902461836.counter = 0;
    result_2902461836.data = new Array(chckRange(correctSizeHEX60gensym96_2902461838, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_2902461838, 0, 2147483647) ; ++i) { result_2902461836.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_2902461836;

}

function rawGet_2868906508(t_2868906511, key_2868906512, hc_2868906513, hc_2868906513_Idx) {
  var result_2868906514 = 0;

  BeforeRet: {
    hc_2868906513[hc_2868906513_Idx] = hash_2298478681(key_2868906512);
    if ((hc_2868906513[hc_2868906513_Idx] == 0)) {
    hc_2868906513[hc_2868906513_Idx] = 314159265;
    }
    
    if (((t_2868906511.data).length == 0)) {
    result_2868906514 = -1;
    break BeforeRet;
    }
    
    var h_2868906566 = (hc_2868906513[hc_2868906513_Idx] & (t_2868906511.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2868906511.data[chckIndx(h_2868906566, 0, (t_2868906511.data).length - 1)].Field0)) break Label2;
          if (((t_2868906511.data[chckIndx(h_2868906566, 0, (t_2868906511.data).length - 1)].Field0 == hc_2868906513[hc_2868906513_Idx]) && HEX3DHEX3D_2298478667(t_2868906511.data[chckIndx(h_2868906566, 0, (t_2868906511.data).length - 1)].Field1, key_2868906512))) {
          result_2868906514 = h_2868906566;
          break BeforeRet;
          }
          
          h_2868906566 = nextTry_1342177315(h_2868906566, (t_2868906511.data).length - 1);
        }
    };
    result_2868906514 = subInt(-1, h_2868906566);
  };

  return result_2868906514;

}

function hasKey_2868906501(t_2868906504, key_2868906505) {
  var result_2868906506 = false;

    var hc_2868906507 = [0];
    result_2868906506 = (0 <= rawGet_2868906508(t_2868906504, key_2868906505, hc_2868906507, 0));

  return result_2868906506;

}

function contains_2902458727(t_2902458730, key_2902458731) {
  var result_2902458732 = false;

  BeforeRet: {
    result_2902458732 = hasKey_2868906501(t_2902458730, key_2902458731);
    break BeforeRet;
  };

  return result_2902458732;

}

function rawGet_2902458971(t_2902458974, key_2902458975, hc_2902458976, hc_2902458976_Idx) {
  var result_2902458977 = 0;

  BeforeRet: {
    hc_2902458976[hc_2902458976_Idx] = hash_2298478681(key_2902458975);
    if ((hc_2902458976[hc_2902458976_Idx] == 0)) {
    hc_2902458976[hc_2902458976_Idx] = 314159265;
    }
    
    if (((t_2902458974.data).length == 0)) {
    result_2902458977 = -1;
    break BeforeRet;
    }
    
    var h_2902459028 = (hc_2902458976[hc_2902458976_Idx] & (t_2902458974.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2902458974.data[chckIndx(h_2902459028, 0, (t_2902458974.data).length - 1)].Field0)) break Label2;
          if (((t_2902458974.data[chckIndx(h_2902459028, 0, (t_2902458974.data).length - 1)].Field0 == hc_2902458976[hc_2902458976_Idx]) && HEX3DHEX3D_2298478667(t_2902458974.data[chckIndx(h_2902459028, 0, (t_2902458974.data).length - 1)].Field1, key_2902458975))) {
          result_2902458977 = h_2902459028;
          break BeforeRet;
          }
          
          h_2902459028 = nextTry_1342177315(h_2902459028, (t_2902458974.data).length - 1);
        }
    };
    result_2902458977 = subInt(-1, h_2902459028);
  };

  return result_2902458977;

}

function mustRehash_2902459316(t_2902459318) {
  var result_2902459319 = false;

    if (!((t_2902459318.counter < (t_2902459318.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2902459319 = ((mulInt((t_2902459318.data).length, 2) < mulInt(t_2902459318.counter, 3)) || (subInt((t_2902459318.data).length, t_2902459318.counter) < 4));

  return result_2902459319;

}

function rawInsert_2902459765(t_2902459769, data_2902459770, data_2902459770_Idx, key_2902459771, val_2902459772, hc_2902459773, h_2902459774) {
    data_2902459770[data_2902459770_Idx][chckIndx(h_2902459774, 0, (data_2902459770[data_2902459770_Idx]).length - 1)].Field1 = nimCopy(data_2902459770[data_2902459770_Idx][chckIndx(h_2902459774, 0, (data_2902459770[data_2902459770_Idx]).length - 1)].Field1, key_2902459771, NTI2298478595);
    data_2902459770[data_2902459770_Idx][chckIndx(h_2902459774, 0, (data_2902459770[data_2902459770_Idx]).length - 1)].Field2 = nimCopy(data_2902459770[data_2902459770_Idx][chckIndx(h_2902459774, 0, (data_2902459770[data_2902459770_Idx]).length - 1)].Field2, val_2902459772, NTI2868903966);
    data_2902459770[data_2902459770_Idx][chckIndx(h_2902459774, 0, (data_2902459770[data_2902459770_Idx]).length - 1)].Field0 = hc_2902459773;

  
}

function enlarge_2902459471(t_2902459474) {
    var n_2902459477 = [];
    n_2902459477 = new Array(chckRange(mulInt((t_2902459474.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2902459474.data).length, 2), 0, 2147483647) ; ++i) { n_2902459477[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_2902459474.data; t_2902459474.data = n_2902459477; n_2902459477 = Temporary1;    Label2: {
      var i_2902459541 = 0;
      var colontmp__2734686755 = 0;
      colontmp__2734686755 = (n_2902459477).length - 1;
      var res_2734686756 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686756 <= colontmp__2734686755)) break Label4;
            i_2902459541 = res_2734686756;
            var eh_2902459595 = n_2902459477[chckIndx(i_2902459541, 0, (n_2902459477).length - 1)].Field0;
            if (isFilled_1342177312(eh_2902459595)) {
            var j_2902459599 = (eh_2902459595 & (t_2902459474.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2902459474.data[chckIndx(j_2902459599, 0, (t_2902459474.data).length - 1)].Field0)) break Label6;
                  j_2902459599 = nextTry_1342177315(j_2902459599, (t_2902459474.data).length - 1);
                }
            };
            rawInsert_2902459765(t_2902459474, t_2902459474, "data", n_2902459477[chckIndx(i_2902459541, 0, (n_2902459477).length - 1)].Field1, n_2902459477[chckIndx(i_2902459541, 0, (n_2902459477).length - 1)].Field2, eh_2902459595, j_2902459599);
            }
            
            res_2734686756 = addInt(res_2734686756, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2902459934(t_2902459937, key_2902459938, hc_2902459939) {
  var result_2902459940 = 0;

  BeforeRet: {
    if (((t_2902459937.data).length == 0)) {
    result_2902459940 = -1;
    break BeforeRet;
    }
    
    var h_2902459991 = (hc_2902459939 & (t_2902459937.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2902459937.data[chckIndx(h_2902459991, 0, (t_2902459937.data).length - 1)].Field0)) break Label2;
          if (((t_2902459937.data[chckIndx(h_2902459991, 0, (t_2902459937.data).length - 1)].Field0 == hc_2902459939) && HEX3DHEX3D_2298478667(t_2902459937.data[chckIndx(h_2902459991, 0, (t_2902459937.data).length - 1)].Field1, key_2902459938))) {
          result_2902459940 = h_2902459991;
          break BeforeRet;
          }
          
          h_2902459991 = nextTry_1342177315(h_2902459991, (t_2902459937.data).length - 1);
        }
    };
    result_2902459940 = subInt(-1, h_2902459991);
  };

  return result_2902459940;

}

function HEX5BHEX5DHEX3D_2902458910(t_2902458913, key_2902458914, val_2902458915) {
    if (((t_2902458913.data).length == 0)) {
    var correctSizeHEX60gensym21_2902458965 = slotsNeeded_1342177323(32);
    t_2902458913.counter = 0;
    t_2902458913.data = new Array(chckRange(correctSizeHEX60gensym21_2902458965, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_2902458965, 0, 2147483647) ; ++i) { t_2902458913.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_2902458970 = [0];
    var index_2902459209 = rawGet_2902458971(t_2902458913, key_2902458914, hc_2902458970, 0);
    if ((0 <= index_2902459209)) {
    t_2902458913.data[chckIndx(index_2902459209, 0, (t_2902458913.data).length - 1)].Field2 = nimCopy(t_2902458913.data[chckIndx(index_2902459209, 0, (t_2902458913.data).length - 1)].Field2, val_2902458915, NTI2868903966);
    }
    else {
      if (((t_2902458913.data).length == 0)) {
      var correctSizeHEX60gensym26_2902459311 = slotsNeeded_1342177323(32);
      t_2902458913.counter = 0;
      t_2902458913.data = new Array(chckRange(correctSizeHEX60gensym26_2902459311, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_2902459311, 0, 2147483647) ; ++i) { t_2902458913.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_2902459316(t_2902458913)) {
      enlarge_2902459471(t_2902458913);
      index_2902459209 = rawGetKnownHC_2902459934(t_2902458913, key_2902458914, hc_2902458970[0]);
      }
      
      index_2902459209 = subInt(-1, index_2902459209);
      rawInsert_2902459765(t_2902458913, t_2902458913, "data", key_2902458914, val_2902458915, hc_2902458970[0], index_2902459209);
      t_2902458913.counter = addInt(t_2902458913.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2113929304(a_2113929305, b_2113929306) {
  var result_2113929307 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929307.x = min_33555609(a_2113929305.x, b_2113929306.x);
    result_2113929307.y = min_33555609(a_2113929305.y, b_2113929306.y);
    result_2113929307.w = (max_33555642((a_2113929305.x + a_2113929305.w), (b_2113929306.x + b_2113929306.w)) - result_2113929307.x);
    result_2113929307.h = (max_33555642((a_2113929305.y + a_2113929305.h), (b_2113929306.y + b_2113929306.h)) - result_2113929307.y);

  return result_2113929307;

}

function HEX2B_2097152159(a_2097152160, b_2097152161) {
  var result_2097152162 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152162.x = (a_2097152160.x + b_2097152161.arr[chckIndx(0, 0, (b_2097152161.arr).length - 1)]);
    result_2097152162.y = (a_2097152160.y + b_2097152161.arr[chckIndx(1, 0, (b_2097152161.arr).length - 1)]);
    result_2097152162.w = a_2097152160.w;
    result_2097152162.h = a_2097152160.h;

  return result_2097152162;

}

function vec2_2130707424(xHEX60gensym72_2130707425, yHEX60gensym72_2130707426) {
  var result_2130707427 = ({arr: new Float32Array(2)});

    result_2130707427 = nimCopy(result_2130707427, {arr: new Float32Array([xHEX60gensym72_2130707425, yHEX60gensym72_2130707426])}, NTI2130706819);

  return result_2130707427;

}

function xy_2113929252(rect_2113929253) {
  var result_2113929254 = ({arr: new Float32Array(2)});

    result_2113929254 = nimCopy(result_2113929254, vec2_2130707424(rect_2113929253.x, rect_2113929253.y), NTI2130706819);

  return result_2113929254;

}

function add_2868905979(node_2868905980, node_2868905980_Idx, child_2868905981) {
  var result_2868905982 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_2868905980[node_2868905980_Idx].children.push(child_2868905981);;
    child_2868905981.depth = addInt(node_2868905980[node_2868905980_Idx].depth, 1);
    child_2868905981.parent = node_2868905980[node_2868905980_Idx];
    child_2868905981.bounds.x = node_2868905980[node_2868905980_Idx].bounds.w;
    node_2868905980[node_2868905980_Idx].bounds = nimCopy(node_2868905980[node_2868905980_Idx].bounds, or_2113929304(node_2868905980[node_2868905980_Idx].bounds, HEX2B_2097152159(child_2868905981.bounds, xy_2113929252(node_2868905980[node_2868905980_Idx].bounds))), NTI2113929221);
    result_2868905982 = nimCopy(result_2868905982, {parent: node_2868905980[node_2868905980_Idx], first: (node_2868905980[node_2868905980_Idx].children).length - 1, last: (node_2868905980[node_2868905980_Idx].children).length}, NTI2868903966);
    break BeforeRet;
  };

  return result_2868905982;

}

function map_2868905574(s_2868905577, op_2868905579) {
  var result_2868905580 = [];

    result_2868905580 = new Array(chckRange((s_2868905577).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2868905577).length, 0, 2147483647) ; ++i) { result_2868905580[i] = null; }    Label1: {
      var i_2868905596 = 0;
      var colontmp__2734686765 = 0;
      colontmp__2734686765 = (s_2868905577).length;
      var i_2734686766 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686766 < colontmp__2734686765)) break Label3;
            i_2868905596 = i_2734686766;
            result_2868905580[chckIndx(i_2868905596, 0, (result_2868905580).length - 1)] = op_2868905579(s_2868905577[chckIndx(i_2868905596, 0, (s_2868905577).length - 1)]);
            i_2734686766 = addInt(i_2734686766, 1);
          }
      };
    };

  return result_2868905580;

}

function clone_2868905555(node_2868905556) {
    
function HEX3Aanonymous_2868905561(c_2868905569) {
      var result_2868905572 = null;

        result_2868905572 = clone_2868905555(c_2868905569);

      return result_2868905572;

    }

  var result_2868905557 = null;

    result_2868905557 = ({parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_2868905557.parent = node_2868905556.parent;
    result_2868905557.node = node_2868905556.node;
    result_2868905557.text = nimCopy(null, node_2868905556.text, NTI33554449);
    result_2868905557.bounds = nimCopy(result_2868905557.bounds, node_2868905556.bounds, NTI2113929221);
    result_2868905557.indent = node_2868905556.indent;
    result_2868905557.font = nimCopy(null, node_2868905556.font, NTI33554449);
    result_2868905557.render = node_2868905556.render;
    result_2868905557.children = nimCopy(null, map_2868905574(node_2868905556.children, HEX3Aanonymous_2868905561), NTI2868905166);
    Label1: {
      var c_2868905627 = null;
      var i_2734686761 = 0;
      var L_2734686762 = (result_2868905557.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686761 < L_2734686762)) break Label3;
            c_2868905627 = result_2868905557.children[chckIndx(i_2734686761, 0, (result_2868905557.children).length - 1)];
            c_2868905627.parent = result_2868905557;
            i_2734686761 = addInt(i_2734686761, 1);
            if (!(((result_2868905557.children).length == L_2734686762))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2868905557;

}

function HEX5BHEX5D_2902458796(t_2902458799, key_2902458800) {
  var result_2902458801 = null;
  var result_2902458801_Idx = 0;

    var hcHEX60gensym22_2902458802 = [0];
    var indexHEX60gensym22_2902458809 = rawGet_2868906508(t_2902458799, key_2902458800, hcHEX60gensym22_2902458802, 0);
    if ((0 <= indexHEX60gensym22_2902458809)) {
    result_2902458801 = t_2902458799.data[chckIndx(indexHEX60gensym22_2902458809, 0, (t_2902458799.data).length - 1)]; result_2902458801_Idx = "Field2";
    }
    else {
    raiseKeyError_2768242456(key_2902458800);
    }
    

  return [result_2902458801, result_2902458801_Idx];

}

function createReplacement_2902458679(input_2902458680, node_2902458681, layout_2902458682, line_2902458683, line_2902458683_Idx) {
    var Temporary1;
    var Temporary2;

  var result_2902458684 = false;

  BeforeRet: {
    if (contains_2902458727(input_2902458680.replacements, node_2902458681.id)) {
    HEX5BHEX5DHEX3D_2902458910(layout_2902458682.nodeToVisualNode, node_2902458681.id, add_2868905979(line_2902458683, line_2902458683_Idx, clone_2868905555((Temporary1 = HEX5BHEX5D_2902458796(input_2902458680.replacements, node_2902458681.id), Temporary1)[0][Temporary1[1]])));
    result_2902458684 = true;
    break BeforeRet;
    }
    
    if (contains_2902458727(input_2902458680.replacements, node_2902458681.reff)) {
    HEX5BHEX5DHEX3D_2902458910(layout_2902458682.nodeToVisualNode, node_2902458681.id, add_2868905979(line_2902458683, line_2902458683_Idx, clone_2868905555((Temporary2 = HEX5BHEX5D_2902458796(input_2902458680.replacements, node_2902458681.reff), Temporary2)[0][Temporary2[1]])));
    result_2902458684 = true;
    break BeforeRet;
    }
    
    result_2902458684 = false;
    break BeforeRet;
  };

  return result_2902458684;

}

function rect_2113929240(pos_2113929241, size_2113929242) {
  var result_2113929243 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929243.x = pos_2113929241.arr[chckIndx(0, 0, (pos_2113929241.arr).length - 1)];
    result_2113929243.y = pos_2113929241.arr[chckIndx(1, 0, (pos_2113929241.arr).length - 1)];
    result_2113929243.w = size_2113929242.arr[chckIndx(0, 0, (size_2113929242.arr).length - 1)];
    result_2113929243.h = size_2113929242.arr[chckIndx(1, 0, (size_2113929242.arr).length - 1)];

  return result_2113929243;

}

function vec2_2130707358() {
  var result_2130707359 = ({arr: new Float32Array(2)});

    result_2130707359 = nimCopy(result_2130707359, {arr: new Float32Array([0.0, 0.0])}, NTI2130706819);

  return result_2130707359;

}

function newTextNode_2902458612(text_2902458613, color_2902458614, font_2902458615, node_2902458616) {
  var result_2902458617 = null;

    result_2902458617 = {text: nimCopy(null, text_2902458613, NTI33554449), colors: [nimCopy(null, color_2902458614, NTI33554449)], font: nimCopy(null, font_2902458615, NTI33554449), node: node_2902458616, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};

  return result_2902458617;

}

function newTextNode_2902458622(text_2902458623, colors_2902458624, font_2902458625, node_2902458626, styleOverride_2902458636) {
  var result_2902458637 = null;

    result_2902458637 = {text: nimCopy(null, text_2902458623, NTI33554449), colors: nimCopy(null, colors_2902458624, NTI2902458549), font: nimCopy(null, font_2902458625, NTI33554449), node: node_2902458626, styleOverride: nimCopy(null, styleOverride_2902458636, NTI2868903981), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};

  return result_2902458637;

}

function none_2902458628() {
  var result_2902458635 = ({val: {}, has: false});

  return result_2902458635;

}

function getColorForSymbol_2902460323(ctx_2902460324, sym_2902460325) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_2902460326 = [];

  BeforeRet: {
    var typ_2902460327 = computeSymbolType_2785116090(ctx_2902460324, sym_2902460325, false);
    switch (typ_2902460327.kind) {
    case 0:
      result_2902460326 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1593835635);
      break BeforeRet;
      break;
    case 6:
      result_2902460326 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1593835635);
      break BeforeRet;
      break;
    case 4:
      if ((sym_2902460325.kind == 1)) {
      var Temporary1 = sym_2902460325;
      if (ConstSet96[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903945)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_2902460326 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1593835635);
        break BeforeRet;
        break;
      default: 
        result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI2902459458);
        break BeforeRet;
        break;
      }
      }
      
      result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI2902459458);
      break BeforeRet;
      break;
    default: 
      if ((sym_2902460325.kind == 0)) {
        var Temporary2 = sym_2902460325;
        if (ConstSet97[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      if ((Temporary2.node.kind == 4)) {
      result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI2902459458);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_2902460325;
        if (ConstSet98[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_2902460325;
          if (ConstSet99[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903945)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_2902460325;
        if (ConstSet100[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903945)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI2902459458);
      break BeforeRet;
      }
      else {
        result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1593835635);
        break BeforeRet;
      }
      
      }
      else {
        result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI2902459458);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_2902460326 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI2902459458);
    break BeforeRet;
  };

  return result_2902460326;

}

function some_2902460443(val_2902460445) {
  var result_2902460446 = ({val: {}, has: false});

    result_2902460446.has = true;
    result_2902460446.val = nimCopy(result_2902460446.val, val_2902460445, NTI2868903976);

  return result_2902460446;

}

function getStyleForSymbol_2902460392(ctx_2902460393, sym_2902460394) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2902460396 = ({val: {}, has: false});

    var style_2902460397 = nimCopy(null, ConstSet101, NTI2902459522);
    if ((sym_2902460394.kind == 0)) {
      var Temporary1 = sym_2902460394;
      if (ConstSet102[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903945)); }
    if ((Temporary1.node.kind == 6)) {
    style_2902460397 = nimCopy(style_2902460397, SetPlus(style_2902460397, ConstSet103), NTI2902459522);
    }
    
      var Temporary2 = sym_2902460394;
      if (ConstSet104[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_2902460416 = computeSymbolType_2785116090(ctx_2902460393, sym_2902460394, false);
    if (!((typ_2902460416.kind == 4))) {
    style_2902460397 = nimCopy(style_2902460397, SetPlus(style_2902460397, ConstSet105), NTI2902459522);
    }
    
    }
    
    }
    else {
    if ((sym_2902460394.kind == 1)) {
      var Temporary3 = sym_2902460394;
      if (ConstSet106[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_2902460397[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_2902460397, ConstSet107))) {
    result_2902460396 = nimCopy(result_2902460396, some_2902460443(style_2902460397), NTI2868903981);
    }
    

  return result_2902460396;

}

function len_2868904121(node_2868904122) {
  var result_2868904123 = 0;

  BeforeRet: {
    result_2868904123 = (node_2868904122.children).length;
    break BeforeRet;
  };

  return result_2868904123;

}

function addLine_2868906005(node_2868906006, node_2868906006_Idx, child_2868906007, child_2868906007_Idx) {
    node_2868906006[node_2868906006_Idx].children.push(child_2868906007[child_2868906007_Idx]);;
    child_2868906007[child_2868906007_Idx].depth = addInt(node_2868906006[node_2868906006_Idx].depth, 1);
    child_2868906007[child_2868906007_Idx].parent = node_2868906006[node_2868906006_Idx];
    child_2868906007[child_2868906007_Idx].bounds.y = node_2868906006[node_2868906006_Idx].bounds.h;
    node_2868906006[node_2868906006_Idx].bounds = nimCopy(node_2868906006[node_2868906006_Idx].bounds, or_2113929304(node_2868906006[node_2868906006_Idx].bounds, HEX2B_2097152159(child_2868906007[child_2868906007_Idx].bounds, xy_2113929252(node_2868906006[node_2868906006_Idx].bounds))), NTI2113929221);

  
}

function rect_2113929234(x_2113929235, y_2113929236, w_2113929237, h_2113929238) {
  var result_2113929239 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929239.x = x_2113929235;
    result_2113929239.y = y_2113929236;
    result_2113929239.w = w_2113929237;
    result_2113929239.h = h_2113929238;

  return result_2113929239;

}

function getPrecedenceForNode_2902458382(ctx_2902458383, node_2902458384) {
      var Temporary1;
      var Temporary2;

  var result_2902458385 = 0;

  BeforeRet: {
    if ((!((node_2902458384.kind == 8)) || (len_2768240728(node_2902458384) == 0))) {
    result_2902458385 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_2902458392 = computeSymbol_2785109118(ctx_2902458383, HEX5BHEX5D_2768240724(node_2902458384, 0), false);
      if (!isSome_2868905495(oHEX60gensym1_2902458392)) Temporary1 = false; else {        var symbol_2902458415 = get_2868905515(oHEX60gensym1_2902458392);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_2902458415.kind) {
    case 1:
      var Temporary2 = symbol_2902458415;
      if (ConstSet110[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      result_2902458385 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_2902458385 = 0;
    break BeforeRet;
  };

  return result_2902458385;

}

function some_2902458661(val_2902458663) {
  var result_2902458664 = ({val: [], has: false});

    result_2902458664.has = true;
    result_2902458664.val = nimCopy(null, val_2902458663, NTI2902458576);

  return result_2902458664;

}

function whHEX3D_2113929263(rect_2113929264, v_2113929265) {
    rect_2113929264.w = v_2113929265.arr[chckIndx(0, 0, (v_2113929265.arr).length - 1)];
    rect_2113929264.h = v_2113929265.arr[chckIndx(1, 0, (v_2113929265.arr).length - 1)];

  
}

function newBlockNode_2902458647(colors_2902458648, size_2902458649, node_2902458650, styleOverride_2902458659) {
  var result_2902458660 = null;

    result_2902458660 = {node: node_2902458650, styleOverride: nimCopy(null, styleOverride_2902458659, NTI2868903981), background: some_2902458661(colors_2902458648), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], depth: 0};
    whHEX3D_2113929263(result_2902458660.bounds, size_2902458649);

  return result_2902458660;

}

function HEX2BHEX3D_2113929327(x_2113929329, x_2113929329_Idx, y_2113929330) {
    x_2113929329[x_2113929329_Idx] = (x_2113929329[x_2113929329_Idx] + y_2113929330);

  
}

function formatValue_2902461784(result_2902461786, result_2902461786_Idx, value_2902461787, specifier_2902461788) {
    formatValue_738197675(result_2902461786, result_2902461786_Idx, reprEnum(value_2902461787, NTI2768240643), specifier_2902461788);

  
}

function createLayoutLineForRemainingChildren_2902460461(ctx_2902460462, input_2902460463, node_2902460464, firstChildIndex_2902460465, result_2902460466, line_2902460467, line_2902460467_Idx) {
  BeforeRet: {
    if ((len_2768240728(node_2902460464) <= firstChildIndex_2902460465)) {
    break BeforeRet;
    }
    
    var _ = add_2868905979(line_2902460467, line_2902460467_Idx, newTextNode_2902458622([60], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
    Label1: {
      var i_2902460476 = 0;
      var colontmp__2734686771 = 0;
      colontmp__2734686771 = len_2768240728(node_2902460464);
      var i_2734686772 = firstChildIndex_2902460465;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686772 < colontmp__2734686771)) break Label3;
            i_2902460476 = i_2734686772;
            if ((firstChildIndex_2902460465 < i_2902460476)) {
            var _ = add_2868905979(line_2902460467, line_2902460467_Idx, newTextNode_2902458622([44,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
            }
            
            createLayoutLineForNode_2902460455(ctx_2902460462, input_2902460463, HEX5BHEX5D_2768240724(node_2902460464, i_2902460476), result_2902460466, line_2902460467, line_2902460467_Idx);
            i_2734686772 = addInt(i_2734686772, 1);
          }
      };
    };
    var _ = add_2868905979(line_2902460467, line_2902460467_Idx, newTextNode_2902458622([62], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
  };

  
}

function createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_2902460500 = ((ConstSet94[node_2902460458.kind] != undefined) && (ConstSet95[node_2902460458.parent.kind] != undefined));
    var prevLine_2902460501 = line_2902460460[line_2902460460_Idx];
    var first_2902460505 = (prevLine_2902460501.children).length;
    try {
    var oldLineHEX60gensym42_2902460560 = [line_2902460460[line_2902460460_Idx]];
    var containerLineHEX60gensym42_2902460561 = [{node: node_2902460458, parent: line_2902460460[line_2902460460_Idx], orientation: 1, depth: addInt(line_2902460460[line_2902460460_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_2902460500) {
    line_2902460460[line_2902460460_Idx] = {parent: containerLineHEX60gensym42_2902460561[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_2902460561[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_2785102512(ctx_2902460456, node_2902460458, false);
    var lastUsedChild_2902460608 = -1;
    try {
    Label4: {
      var expr_2902460609 = node_2902460458;
      var pos_2902460610 = 0;
      var _ = pos_2902460610;
      if ((expr_2902460609.kind == 0)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(line_2902460460, line_2902460460_Idx, {colors: [nimCopy(null, config_2902458581[0].colors.empty, NTI33554449)], node: node_2902460458, bounds: rect_2113929240(vec2_2130707358(), vec2_2130707424((config_2902458581[0].fontSize * 0.5), config_2902458581[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_2902460609.kind == 2)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(node_2902460458.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_2902458581[0].fontRegular, node_2902460458)));
      }
      
      }
      else {
      if ((expr_2902460609.kind == 3)) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(node_2902460458.text, [115,116,114,105,110,103], config_2902458581[0].fontRegular, node_2902460458));
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      }
      else {
      if ((expr_2902460609.kind == 1)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
        var oHEX60gensym61_2902460735 = computeSymbol_2785109118(ctx_2902460456, node_2902460458, false);
        if (!isSome_2868905495(oHEX60gensym61_2902460735)) Temporary5 = false; else {          var sym_2902460758 = get_2868905515(oHEX60gensym61_2902460735);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622(sym_2902460758.name, getColorForSymbol_2902460323(ctx_2902460456, sym_2902460758), config_2902458581[0].fontRegular, node_2902460458, getStyleForSymbol_2902460392(ctx_2902460456, sym_2902460758))));
      }
      else {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(HEX24_2298478634(node_2902460458.reff), [118,97,114,105,97,98,108,101], config_2902458581[0].fontRegular, node_2902460458)));
      }
      
      }
      
      }
      else {
      if ((expr_2902460609.kind == 4)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
        var oHEX60gensym63_2902460857 = computeSymbol_2785109118(ctx_2902460456, node_2902460458, false);
        if (!isSome_2868905495(oHEX60gensym63_2902460857)) Temporary7 = false; else {          var sym_2902460880 = get_2868905515(oHEX60gensym63_2902460857);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_2902460323(ctx_2902460456, sym_2902460880);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_2902460885 = nimCopy(null, Temporary6, NTI2902459424);
        var oHEX60gensym64_2902460888 = computeSymbol_2785109118(ctx_2902460456, node_2902460458, false);
        if (!isSome_2868905495(oHEX60gensym64_2902460888)) Temporary8 = false; else {          var sym_2902460911 = get_2868905515(oHEX60gensym64_2902460888);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622(sym_2902460911.name, color_2902460885, config_2902458581[0].fontRegular, node_2902460458, getStyleForSymbol_2902460392(ctx_2902460456, sym_2902460911)));
      }
      else {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622(HEX24_2298478634(node_2902460458.id), color_2902460885, config_2902458581[0].fontRegular, node_2902460458, none_2902458628()));
      }
      
      }
      
      var typ_2902460912 = computeType_2785102512(ctx_2902460456, node_2902460458, false);
      if ((typ_2902460912.kind == 4)) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,58,58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      }
      else {
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(HEX24_2868904342(typ_2902460912), config_2902458581[0].colors.typ, config_2902458581[0].fontRegular, null));
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      }
      
      if ((0 < len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
      var value_2902460929 = computeValue_2785105988(ctx_2902460456, node_2902460458, false);
      switch (value_2902460929.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2768240724(node_2902460458, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,61,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(HEX24_2868904649(value_2902460929), [115,116,114,105,110,103], config_2902458581[0].fontRegular, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_2902460608 = 0;
      }
      else {
      if ((expr_2902460609.kind == 5)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
        var oHEX60gensym67_2902460940 = computeSymbol_2785109118(ctx_2902460456, node_2902460458, false);
        if (!isSome_2868905495(oHEX60gensym67_2902460940)) Temporary10 = false; else {          var sym_2902460963 = get_2868905515(oHEX60gensym67_2902460940);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_2902460323(ctx_2902460456, sym_2902460963), Field1: getStyleForSymbol_2902460392(ctx_2902460456, sym_2902460963)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_2902458628()};
      }
      
      var colontmp__2734686768 = nimCopy(null, Temporary9, NTI2902459894);
      var color_2902460975 = nimCopy(null, colontmp__2734686768["Field0"], NTI2902459424);
      var style_2902460976 = nimCopy(null, colontmp__2734686768["Field1"], NTI2868903981);
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622(node_2902460458.text, color_2902460975, config_2902458581[0].fontRegular, node_2902460458, style_2902460976));
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((0 < len_2768240728(node_2902460458))) {
      if ((((HEX5BHEX5D_2768240724(node_2902460458, 0).kind == 0) && ((HEX5BHEX5D_2768240724(node_2902460458, 0).text).length == 0)) && !(contains_2902458727(input_2902460457.replacements, HEX5BHEX5D_2768240724(node_2902460458, 0).id)))) {
      var typ_2902461032 = computeType_2785102512(ctx_2902460456, node_2902460458, false);
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, HEX5BHEX5D_2768240724(node_2902460458, 0).id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(HEX24_2868904342(typ_2902461032), config_2902458581[0].colors.typ, config_2902458581[0].fontRegular, HEX5BHEX5D_2768240724(node_2902460458, 0))));
      }
      else {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      }
      
      if ((1 < len_2768240728(node_2902460458))) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,61,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      lastUsedChild_2902460608 = 1;
      }
      else {
      if ((expr_2902460609.kind == 6)) {
      if (!(createReplacement_2902458679(input_2902460457, node_2902460458, result_2902460459, line_2902460460, line_2902460460_Idx))) {
        var oHEX60gensym71_2902461089 = computeSymbol_2785109118(ctx_2902460456, node_2902460458, false);
        if (!isSome_2868905495(oHEX60gensym71_2902461089)) Temporary12 = false; else {          var sym_2902461112 = get_2868905515(oHEX60gensym71_2902461089);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_2902460323(ctx_2902460456, sym_2902461112), Field1: getStyleForSymbol_2902460392(ctx_2902460456, sym_2902461112)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_2902458628()};
      }
      
      var colontmp__2734686769 = nimCopy(null, Temporary11, NTI2902459997);
      var color_2902461124 = nimCopy(null, colontmp__2734686769["Field0"], NTI2902459424);
      var style_2902461125 = nimCopy(null, colontmp__2734686769["Field1"], NTI2868903981);
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622(node_2902460458.text, color_2902461124, config_2902458581[0].fontRegular, node_2902460458, style_2902461125));
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,58,32,109,117,116,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((0 < len_2768240728(node_2902460458))) {
      if ((((HEX5BHEX5D_2768240724(node_2902460458, 0).kind == 0) && ((HEX5BHEX5D_2768240724(node_2902460458, 0).text).length == 0)) && !(contains_2902458727(input_2902460457.replacements, HEX5BHEX5D_2768240724(node_2902460458, 0).id)))) {
      var typ_2902461181 = computeType_2785102512(ctx_2902460456, node_2902460458, false);
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, HEX5BHEX5D_2768240724(node_2902460458, 0).id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612(HEX24_2868904342(typ_2902461181), config_2902458581[0].colors.typ, config_2902458581[0].fontRegular, HEX5BHEX5D_2768240724(node_2902460458, 0))));
      }
      else {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      }
      
      if ((1 < len_2768240728(node_2902460458))) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,61,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      lastUsedChild_2902460608 = 1;
      }
      else {
      if ((expr_2902460609.kind == 11)) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([102,110], config_2902458581[0].colors.keyword, config_2902458581[0].fontRegular, null));
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([40], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((0 < len_2768240728(node_2902460458))) {
      var parent_2902461236 = line_2902460460[line_2902460460_Idx];
      var first_2902461237 = len_2868904121(parent_2902461236);
      Label13: {
        var i_2902461261 = 0;
        var param_2902461262 = null;
        var colontmp__2734686737 = [];
        colontmp__2734686737 = HEX5BHEX5D_2768240724(node_2902460458, 0).children;
        var i_2734686739 = 0;
        var L_2734686740 = (colontmp__2734686737).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2734686739 < L_2734686740)) break Label15;
              i_2902461261 = i_2734686739;
              param_2902461262 = colontmp__2734686737[chckIndx(i_2734686739, 0, (colontmp__2734686737).length - 1)];
              if ((0 < i_2902461261)) {
              var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([44,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
              }
              
              createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, param_2902461262, result_2902460459, line_2902460460, line_2902460460_Idx);
              i_2734686739 = addInt(i_2734686739, 1);
              if (!(((colontmp__2734686737).length == L_2734686740))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2768240728(HEX5BHEX5D_2768240724(node_2902460458, 0)) == 0)) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, HEX5BHEX5D_2768240724(node_2902460458, 0).id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([32], config_2902458581[0].colors.empty, config_2902458581[0].fontRegular, HEX5BHEX5D_2768240724(node_2902460458, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, HEX5BHEX5D_2768240724(node_2902460458, 0).id, {parent: parent_2902461236, first: first_2902461237, last: len_2868904121(parent_2902461236)});
      }
      
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([41,32], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((1 < len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,61,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((2 < len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 2), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      lastUsedChild_2902460608 = 2;
      }
      else {
      if ((expr_2902460609.kind == 9)) {
      var parent_2902461367 = [line_2902460460[line_2902460460_Idx].parent];
      var prevIndent_2902461368 = line_2902460460[line_2902460460_Idx].indent;
      var first_2902461372 = (parent_2902461367[0].children).length;
      try {
      var i_2902461425 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_2902461425, 1) < len_2768240728(node_2902460458))) break Label18;
            try {
            if ((i_2902461425 == 0)) {
            var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([105,102,32], config_2902458581[0].colors.keyword, config_2902458581[0].fontRegular, null));
            }
            else {
              addLine_2868906005(parent_2902461367, 0, line_2902460460, line_2902460460_Idx);
              line_2902460460[line_2902460460_Idx] = {parent: parent_2902461367[0], bounds: rect_2113929234((prevIndent_2902461368 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461368, depth: addInt(parent_2902461367[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([101,108,105,102,32], config_2902458581[0].colors.keyword, config_2902458581[0].fontRegular, null));
            }
            
            createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, i_2902461425), result_2902460459, line_2902460460, line_2902460460_Idx);
            var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
            createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, addInt(i_2902461425, 1)), result_2902460459, line_2902460460, line_2902460460_Idx);
            } finally {
            i_2902461425 = addInt(i_2902461425, 2);
            }
          }
      };
      if ((modInt(len_2768240728(node_2902460458), 2) == 1)) {
      addLine_2868906005(parent_2902461367, 0, line_2902460460, line_2902460460_Idx);
      line_2902460460[line_2902460460_Idx] = {parent: parent_2902461367[0], bounds: rect_2113929234((prevIndent_2902461368 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461368, depth: addInt(parent_2902461367[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([101,108,115,101,58,32], config_2902458581[0].colors.keyword, config_2902458581[0].fontRegular, null));
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, last_2768240898(node_2902460458), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      addLine_2868906005(parent_2902461367, 0, line_2902460460, line_2902460460_Idx);
      line_2902460460[line_2902460460_Idx] = {parent: parent_2902461367[0], bounds: rect_2113929234((prevIndent_2902461368 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461368, depth: addInt(parent_2902461367[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_2902460608 = subInt(len_2768240728(node_2902460458), 1);
      } finally {
      if ((first_2902461372 < (parent_2902461367[0].children).length)) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, {parent: parent_2902461367[0], first: first_2902461372, last: (parent_2902461367[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_2902460609.kind == 10)) {
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([119,104,105,108,101,32], config_2902458581[0].colors.keyword, config_2902458581[0].fontRegular, null));
      if ((1 <= len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([58,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((2 <= len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      lastUsedChild_2902460608 = 1;
      }
      else {
      if ((expr_2902460609.kind == 7)) {
      var parent_2902461446 = [line_2902460460[line_2902460460_Idx].parent];
      var first_2902461450 = addInt((parent_2902461446[0].children).length, 1);
      try {
      var prevIndent_2902461503 = line_2902460460[line_2902460460_Idx].indent;
      Label21: {
        var child_2902461507 = null;
        var i_2734686744 = 0;
        var L_2734686745 = (node_2902460458.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2734686744 < L_2734686745)) break Label23;
              child_2902461507 = node_2902460458.children[chckIndx(i_2734686744, 0, (node_2902460458.children).length - 1)];
              addLine_2868906005(parent_2902461446, 0, line_2902460460, line_2902460460_Idx);
              line_2902460460[line_2902460460_Idx] = {parent: parent_2902461446[0], bounds: rect_2113929234((prevIndent_2902461503 * config_2902458581[0].indent), 0.0, config_2902458581[0].indent, 0.0), indent: addInt(prevIndent_2902461503, 1), node: child_2902461507, depth: addInt(parent_2902461446[0].depth, 1), orientation: 0, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, child_2902461507, result_2902460459, line_2902460460, line_2902460460_Idx);
              i_2734686744 = addInt(i_2734686744, 1);
              if (!(((node_2902460458.children).length == L_2734686745))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_2868906005(parent_2902461446, 0, line_2902460460, line_2902460460_Idx);
      line_2902460460[line_2902460460_Idx] = {parent: parent_2902461446[0], bounds: rect_2113929234((prevIndent_2902461503 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461503, depth: addInt(parent_2902461446[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_2902460608 = subInt(len_2768240728(node_2902460458), 1);
      } finally {
      if ((first_2902461450 < (parent_2902461446[0].children).length)) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, {parent: parent_2902461446[0], first: first_2902461450, last: (parent_2902461446[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_2902460609.kind == 13)) {
      if ((0 < len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([32,61,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
      if ((0 < len_2768240728(node_2902460458))) {
      createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
      }
      
      lastUsedChild_2902460608 = 1;
      }
      else {
      if ((expr_2902460609.kind == 8)) {
      if ((len_2768240728(node_2902460458) == 0)) {
      HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_2902458581[0].colors.empty, config_2902458581[0].fontRegular, node_2902460458)));
      break BeforeRet;
      }
      
      var isDivision_2902461566 = false;
        var oHEX60gensym90_2902461569 = computeSymbol_2785109118(ctx_2902460456, HEX5BHEX5D_2768240724(node_2902460458, 0), false);
        if (!isSome_2868905495(oHEX60gensym90_2902461569)) Temporary26 = false; else {          var sym_2902461592 = get_2868905515(oHEX60gensym90_2902461569);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2902461592.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2298478667(sym_2902461592.id, IdDiv_2751463430)) {
      isDivision_2902461566 = true;
      }
      
      var Temporary27 = sym_2902461592;
      if (ConstSet108[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2868903945)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_2902461597 = Temporary28;
      if ((len_2768240728(node_2902460458) == addInt(arity_2902461597, 1))) {
      var Temporary30 = sym_2902461592;
      if (ConstSet109[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI2868903945)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_2902461598 = Temporary24;
      switch (operatorNotation_2902461598) {
      case 3:
        var parentPrecedence_2902461599 = getPrecedenceForNode_2902458382(ctx_2902460456, node_2902460458.parent);
        var precedence_2902461600 = getPrecedenceForNode_2902458382(ctx_2902460456, node_2902460458);
        var renderParens_2902461601 = (precedence_2902461600 < parentPrecedence_2902461599);
        if ((isDivision_2902461566 && !(input_2902460457.renderDivisionVertically))) {
        var oldLineHEX60gensym91_2902461604 = [line_2902460460[line_2902460460_Idx]];
        var containerLineHEX60gensym91_2902461605 = [{node: node_2902460458, parent: line_2902460460[line_2902460460_Idx], orientation: 1, depth: addInt(line_2902460460[line_2902460460_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_2902460460[line_2902460460_Idx] = {parent: containerLineHEX60gensym91_2902461605[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_2902461605[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_2902461652 = [line_2902460460[line_2902460460_Idx].parent];
        var prevIndent_2902461653 = line_2902460460[line_2902460460_Idx].indent;
        var first_2902461657 = (parent_2902461652[0].children).length;
        try {
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
        addLine_2868906005(parent_2902461652, 0, line_2902460460, line_2902460460_Idx);
        var line1_2902461710 = line_2902460460[line_2902460460_Idx];
        line_2902460460[line_2902460460_Idx] = {parent: parent_2902461652[0], bounds: rect_2113929234((prevIndent_2902461653 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461653, depth: addInt(parent_2902461652[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_2902461715 = newBlockNode_2902458647([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2130707424(0.0, (config_2902458581[0].fontSize * 0.1)), HEX5BHEX5D_2768240724(node_2902460458, 0), none_2902458628());
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, divLine_2902461715);
        HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, HEX5BHEX5D_2768240724(node_2902460458, 0).id, {parent: line_2902460460[line_2902460460_Idx], first: 0, last: 1});
        addLine_2868906005(parent_2902461652, 0, line_2902460460, line_2902460460_Idx);
        line_2902460460[line_2902460460_Idx] = {parent: parent_2902461652[0], bounds: rect_2113929234((prevIndent_2902461653 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461653, depth: addInt(parent_2902461652[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 2), result_2902460459, line_2902460460, line_2902460460_Idx);
        addLine_2868906005(parent_2902461652, 0, line_2902460460, line_2902460460_Idx);
        var line2_2902461762 = line_2902460460[line_2902460460_Idx];
        line_2902460460[line_2902460460_Idx] = {parent: parent_2902461652[0], bounds: rect_2113929234((prevIndent_2902461653 * config_2902458581[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_2902461653, depth: addInt(parent_2902461652[0].depth, 1), orientation: 0, node: null, text: [], font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_2902461715.bounds.w = max_33555642(line1_2902461710.bounds.w, line2_2902461762.bounds.w);
        divLine_2902461715.parent.bounds.w = divLine_2902461715.bounds.w;
        var shorterLine_2902461763 = line1_2902461710;
        var longerLine_2902461764 = line2_2902461762;
        if ((longerLine_2902461764.bounds.w < shorterLine_2902461763.bounds.w)) {
        shorterLine_2902461763 = line2_2902461762;
        longerLine_2902461764 = line1_2902461710;
        }
        
        var lengthDiff_2902461765 = (longerLine_2902461764.bounds.w - shorterLine_2902461763.bounds.w);
        HEX2BHEX3D_2113929327(shorterLine_2902461763.bounds, "x", (lengthDiff_2902461765 / 2.0));
        lastUsedChild_2902460608 = 2;
        } finally {
        if ((first_2902461657 < (parent_2902461652[0].children).length)) {
        HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, {parent: parent_2902461652[0], first: first_2902461657, last: (parent_2902461652[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_2868906005(containerLineHEX60gensym91_2902461605, 0, line_2902460460, line_2902460460_Idx);
        HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(oldLineHEX60gensym91_2902461604, 0, containerLineHEX60gensym91_2902461605[0]));
        line_2902460460[line_2902460460_Idx] = oldLineHEX60gensym91_2902461604[0];
        }
        
        }
        }
        else {
          if (renderParens_2902461601) {
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([40], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
          }
          
          createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([32], config_2902458581[0].colors.separator, config_2902458581[0].fontRegular, null));
          createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458612([32], config_2902458581[0].colors.separator, config_2902458581[0].fontRegular, null));
          createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 2), result_2902460459, line_2902460460, line_2902460460_Idx);
          if (renderParens_2902461601) {
          var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([41], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
          }
          
          lastUsedChild_2902460608 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
        lastUsedChild_2902460608 = 1;
        break;
      case 2:
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
        lastUsedChild_2902460608 = 1;
        break;
      default: 
        if ((0 < len_2768240728(node_2902460458))) {
        createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, 0), result_2902460459, line_2902460460, line_2902460460_Idx);
        }
        
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([40], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
        Label33: {
          var i_2902461774 = 0;
          var colontmp__2734686748 = 0;
          colontmp__2734686748 = len_2768240728(node_2902460458);
          var i_2734686749 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2734686749 < colontmp__2734686748)) break Label35;
                i_2902461774 = i_2734686749;
                if ((1 < i_2902461774)) {
                var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([44,32], [nimCopy(null, config_2902458581[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_2902458581[0].fontRegular, null, none_2902458628()));
                }
                
                createLayoutLineForNode_2902460455(ctx_2902460456, input_2902460457, HEX5BHEX5D_2768240724(node_2902460458, i_2902461774), result_2902460459, line_2902460460, line_2902460460_Idx);
                i_2734686749 = addInt(i_2734686749, 1);
              }
          };
        };
        var _ = add_2868905979(line_2902460460, line_2902460460_Idx, newTextNode_2902458622([41], config_2902458581[0].colors.separatorParen, config_2902458581[0].fontRegular, null, none_2902458628()));
        lastUsedChild_2902460608 = subInt(len_2768240728(node_2902460458), 1);
        break;
      }
      }
      else {
        var fmtRes_2902461783 = [mnewString(0)];
        fmtRes_2902461783[0].push.apply(fmtRes_2902461783[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_2902461784(fmtRes_2902461783, 0, node_2902460458.kind, []);
      log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2902461783[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_2902460461(ctx_2902460456, input_2902460457, node_2902460458, addInt(lastUsedChild_2902460608, 1), result_2902460459, line_2902460460, line_2902460460_Idx);
    }
    } finally {
    if (renderInline_2902460500) {
    addLine_2868906005(containerLineHEX60gensym42_2902460561, 0, line_2902460460, line_2902460460_Idx);
    HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, add_2868905979(oldLineHEX60gensym42_2902460560, 0, containerLineHEX60gensym42_2902460561[0]));
    line_2902460460[line_2902460460_Idx] = oldLineHEX60gensym42_2902460560[0];
    }
    
    }
    } finally {
    if ((first_2902460505 < (prevLine_2902460501.children).length)) {
    HEX5BHEX5DHEX3D_2902458910(result_2902460459.nodeToVisualNode, node_2902460458.id, {parent: prevLine_2902460501, first: first_2902460505, last: (prevLine_2902460501.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_2902461810(vnode_2902461811) {
    var height_2902461812 = vnode_2902461811.bounds.h;
    Label1: {
      var child_2902461816 = null;
      var i_2734686775 = 0;
      var L_2734686776 = (vnode_2902461811.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686775 < L_2734686776)) break Label3;
            child_2902461816 = vnode_2902461811.children[chckIndx(i_2734686775, 0, (vnode_2902461811.children).length - 1)];
            if ((vnode_2902461811.orientation == 0)) {
            var heightDiff_2902461822 = (height_2902461812 - child_2902461816.bounds.h);
            HEX2BHEX3D_2113929327(child_2902461816.bounds, "y", (heightDiff_2902461822 * 0.5));
            }
            
            centerChildrenVertically_2902461810(child_2902461816);
            i_2734686775 = addInt(i_2734686775, 1);
            if (!(((vnode_2902461811.children).length == L_2734686776))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_2902461827(ctx_2902461828, input_2902461829) {
  var result_2902461830 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_2902461831 = input_2902461829.node;
    result_2902461830[0] = nimCopy(result_2902461830[0], {node: node_2902461831, root: {orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_2902461832(32)}, NTI2868903967);
    var line_2902461843 = [{node: node_2902461831, parent: result_2902461830[0].root, orientation: 0, depth: addInt(result_2902461830[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_2902460455(ctx_2902461828, input_2902461829, node_2902461831, result_2902461830[0], line_2902461843, 0);
    addLine_2868906005(line_2902461843[0], "parent", line_2902461843, 0);
    centerChildrenVertically_2902461810(result_2902461830[0].root);

  return result_2902461830[0];

}

function computeNodeLayoutImpl_2785018787(ctx_2785018788, nodeLayoutInput_2785018789) {
  var result_2785129166 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_2785079628(ctx_2785018788);
    result_2785129166 = nimCopy(result_2785129166, computeNodeLayoutImpl2_2902461827(ctx_2785018788, nodeLayoutInput_2785018789), NTI2868903967);
    break BeforeRet;
  };

  return result_2785129166;

}

function hash_2868906080(input_2868906081) {
  var result_2868906082 = 0;

    result_2868906082 = HEX21HEX26_1358954499(hash_2768242995(input_2868906081.node), hash_2298478681(input_2868906081.selectedNode));
    result_2868906082 = HEX21HEX24_1358954514(result_2868906082);

  return result_2868906082;

}

function len_2868906206(t_2868906209) {
  var result_2868906210 = 0;

    result_2868906210 = t_2868906209.counter;

  return result_2868906210;

}

function HEX3DHEX3D_2868905919(x_2868905921, y_2868905922) {
  var result_2868905923 = false;

  BeforeRet: {
    var sameObject_2868905930 = false;
    sameObject_2868905930 = x_2868905921 === y_2868905922
    if (sameObject_2868905930) {
    result_2868905923 = true;
    break BeforeRet;
    }
    
    if (!(((x_2868905921).length == (y_2868905922).length))) {
    result_2868905923 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2868905944 = 0;
      var colontmp__2734686791 = 0;
      colontmp__2734686791 = subInt((x_2868905921).length, 1);
      var res_2734686792 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686792 <= colontmp__2734686791)) break Label3;
            i_2868905944 = res_2734686792;
            if (!(eqStrings(x_2868905921[chckIndx(i_2868905944, 0, (x_2868905921).length - 1)], y_2868905922[chckIndx(i_2868905944, 0, (y_2868905922).length - 1)]))) {
            result_2868905923 = false;
            break BeforeRet;
            }
            
            res_2734686792 = addInt(res_2734686792, 1);
          }
      };
    };
    result_2868905923 = true;
    break BeforeRet;
  };

  return result_2868905923;

}

function HEX3DHEX3D_2348810951(x_2348810953, y_2348810954) {
  var result_2348810955 = false;

  BeforeRet: {
    if (!((x_2348810953.x == y_2348810954.x))) {
    result_2348810955 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810953.y == y_2348810954.y))) {
    result_2348810955 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810953.w == y_2348810954.w))) {
    result_2348810955 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810953.h == y_2348810954.h))) {
    result_2348810955 = false;
    break BeforeRet;
    }
    
    result_2348810955 = true;
    break BeforeRet;
  };

  return result_2348810955;

}

function HEX3DHEX3D_2868905953(x_2868905955, y_2868905956) {
  var result_2868905957 = false;

  BeforeRet: {
    var sameObject_2868905964 = false;
    sameObject_2868905964 = x_2868905955 === y_2868905956
    if (sameObject_2868905964) {
    result_2868905957 = true;
    break BeforeRet;
    }
    
    if (!(((x_2868905955).length == (y_2868905956).length))) {
    result_2868905957 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2868905978 = 0;
      var colontmp__2734686795 = 0;
      colontmp__2734686795 = subInt((x_2868905955).length, 1);
      var res_2734686796 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2734686796 <= colontmp__2734686795)) break Label3;
            i_2868905978 = res_2734686796;
            if (!(HEX3DHEX3D_2868905902(x_2868905955[chckIndx(i_2868905978, 0, (x_2868905955).length - 1)], y_2868905956[chckIndx(i_2868905978, 0, (y_2868905956).length - 1)]))) {
            result_2868905957 = false;
            break BeforeRet;
            }
            
            res_2734686796 = addInt(res_2734686796, 1);
          }
      };
    };
    result_2868905957 = true;
    break BeforeRet;
  };

  return result_2868905957;

}

function HEX3DHEX3D_2868905902(a_2868905903, b_2868905904) {
  var result_2868905905 = false;

  BeforeRet: {
    if ((a_2868905903 == null)) {
    result_2868905905 = (b_2868905904 == null);
    break BeforeRet;
    }
    
    if ((b_2868905904 == null)) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_2868905903.text, b_2868905904.text))) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    if (!((a_2868905903.node == b_2868905904.node))) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2868905919(a_2868905903.colors, b_2868905904.colors))) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2348810951(a_2868905903.bounds, b_2868905904.bounds))) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    if (!((a_2868905903.render == b_2868905904.render))) {
    result_2868905905 = false;
    break BeforeRet;
    }
    
    result_2868905905 = HEX3DHEX3D_2868905953(a_2868905903.children, b_2868905904.children);
    break BeforeRet;
  };

  return result_2868905905;

}

function getOrDefault_2868906795(t_2868906798, key_2868906799) {
  var result_2868906800 = null;

    var hcHEX60gensym49_2868906803 = [0];
    var indexHEX60gensym49_2868906810 = rawGet_2868906508(t_2868906798, key_2868906799, hcHEX60gensym49_2868906803, 0);
    if ((0 <= indexHEX60gensym49_2868906810)) {
    result_2868906800 = t_2868906798.data[chckIndx(indexHEX60gensym49_2868906810, 0, (t_2868906798.data).length - 1)].Field2;
    }
    

  return result_2868906800;

}

function HEX3DHEX3D_2868906150(s_2868906153, t_2868906154) {
  var result_2868906155 = false;

  BeforeRet: {
    if ((s_2868906153.counter == t_2868906154.counter)) {
    Label1: {
      var keyHEX60gensym43_2868906459 = ({id: 0});
      var valHEX60gensym43_2868906460 = null;
      var L_2734686784 = len_2868906206(s_2868906153);
      Label2: {
        var h_2734686786 = 0;
        var colontmp__2734686787 = 0;
        colontmp__2734686787 = (s_2868906153.data).length - 1;
        var res_2734686788 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2734686788 <= colontmp__2734686787)) break Label4;
              h_2734686786 = res_2734686788;
              if (isFilled_1342177312(s_2868906153.data[chckIndx(h_2734686786, 0, (s_2868906153.data).length - 1)].Field0)) {
              keyHEX60gensym43_2868906459 = nimCopy(keyHEX60gensym43_2868906459, s_2868906153.data[chckIndx(h_2734686786, 0, (s_2868906153.data).length - 1)].Field1, NTI2298478595);
              valHEX60gensym43_2868906460 = s_2868906153.data[chckIndx(h_2734686786, 0, (s_2868906153.data).length - 1)].Field2;
              if (!(hasKey_2868906501(t_2868906154, keyHEX60gensym43_2868906459))) {
              result_2868906155 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_2868905902(getOrDefault_2868906795(t_2868906154, keyHEX60gensym43_2868906459), valHEX60gensym43_2868906460))) {
              result_2868906155 = false;
              break BeforeRet;
              }
              
              if (!((len_2868906206(s_2868906153) == L_2734686784))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2734686788 = addInt(res_2734686788, 1);
            }
        };
      };
    };
    result_2868906155 = true;
    break BeforeRet;
    }
    
  };

  return result_2868906155;

}

function HEX3DHEX3D_2868906083(a_2868906084, b_2868906085) {
  var result_2868906086 = false;

  BeforeRet: {
    if ((a_2868906084 == null)) {
    result_2868906086 = (b_2868906085 == null);
    break BeforeRet;
    }
    
    if ((b_2868906085 == null)) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906084.revision == b_2868906085.revision))) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906084.node == b_2868906085.node))) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2298478667(a_2868906084.selectedNode, b_2868906085.selectedNode))) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2868906150(a_2868906084.replacements, b_2868906085.replacements))) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906084.renderDivisionVertically == b_2868906085.renderDivisionVertically))) {
    result_2868906086 = false;
    break BeforeRet;
    }
    
    result_2868906086 = true;
    break BeforeRet;
  };

  return result_2868906086;

}

function rawGet_2785061034(t_2785061037, key_2785061038, hc_2785061039, hc_2785061039_Idx) {
  var result_2785061040 = 0;

  BeforeRet: {
    hc_2785061039[hc_2785061039_Idx] = hash_2868906080(key_2785061038);
    if ((hc_2785061039[hc_2785061039_Idx] == 0)) {
    hc_2785061039[hc_2785061039_Idx] = 314159265;
    }
    
    if (((t_2785061037.data).length == 0)) {
    result_2785061040 = -1;
    break BeforeRet;
    }
    
    var h_2785061126 = (hc_2785061039[hc_2785061039_Idx] & (t_2785061037.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785061037.data[chckIndx(h_2785061126, 0, (t_2785061037.data).length - 1)].Field0)) break Label2;
          if (((t_2785061037.data[chckIndx(h_2785061126, 0, (t_2785061037.data).length - 1)].Field0 == hc_2785061039[hc_2785061039_Idx]) && HEX3DHEX3D_2868906083(t_2785061037.data[chckIndx(h_2785061126, 0, (t_2785061037.data).length - 1)].Field1, key_2785061038))) {
          result_2785061040 = h_2785061126;
          break BeforeRet;
          }
          
          h_2785061126 = nextTry_1342177315(h_2785061126, (t_2785061037.data).length - 1);
        }
    };
    result_2785061040 = subInt(-1, h_2785061126);
  };

  return result_2785061040;

}

function getOrDefault_2785061024(t_2785061027, key_2785061028, default_2785061029) {
    var Temporary1;

  var result_2785061030 = null;

    var hcHEX60gensym332_2785061033 = [0];
    var indexHEX60gensym332_2785061388 = rawGet_2785061034(t_2785061027, key_2785061028, hcHEX60gensym332_2785061033, 0);
    if ((0 <= indexHEX60gensym332_2785061388)) {
    Temporary1 = t_2785061027.data[chckIndx(indexHEX60gensym332_2785061388, 0, (t_2785061027.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785061029;
    }
    
    result_2785061030 = Temporary1;

  return result_2785061030;

}

function newDoublyLinkedNode_2785061513(value_2785061515) {
  var result_2785061516 = null;

    result_2785061516 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_2785061516.value = nimCopy(result_2785061516.value, value_2785061515, NTI2785018786);

  return result_2785061516;

}

function mustRehash_2785061863(t_2785061865) {
  var result_2785061866 = false;

    if (!((t_2785061865.counter < (t_2785061865.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785061866 = ((mulInt((t_2785061865.data).length, 2) < mulInt(t_2785061865.counter, 3)) || (subInt((t_2785061865.data).length, t_2785061865.counter) < 4));

  return result_2785061866;

}

function rawInsert_2785062556(t_2785062560, data_2785062561, data_2785062561_Idx, key_2785062562, val_2785062563, hc_2785062564, h_2785062565) {
    data_2785062561[data_2785062561_Idx][chckIndx(h_2785062565, 0, (data_2785062561[data_2785062561_Idx]).length - 1)].Field1 = key_2785062562;
    data_2785062561[data_2785062561_Idx][chckIndx(h_2785062565, 0, (data_2785062561[data_2785062561_Idx]).length - 1)].Field2 = val_2785062563;
    data_2785062561[data_2785062561_Idx][chckIndx(h_2785062565, 0, (data_2785062561[data_2785062561_Idx]).length - 1)].Field0 = hc_2785062564;

  
}

function enlarge_2785062120(t_2785062123) {
    var n_2785062126 = [];
    n_2785062126 = new Array(chckRange(mulInt((t_2785062123.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785062123.data).length, 2), 0, 2147483647) ; ++i) { n_2785062126[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2785062123.data; t_2785062123.data = n_2785062126; n_2785062126 = Temporary1;    Label2: {
      var i_2785062224 = 0;
      var colontmp__2734686800 = 0;
      colontmp__2734686800 = (n_2785062126).length - 1;
      var res_2734686801 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686801 <= colontmp__2734686800)) break Label4;
            i_2785062224 = res_2734686801;
            var eh_2785062305 = n_2785062126[chckIndx(i_2785062224, 0, (n_2785062126).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785062305)) {
            var j_2785062309 = (eh_2785062305 & (t_2785062123.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785062123.data[chckIndx(j_2785062309, 0, (t_2785062123.data).length - 1)].Field0)) break Label6;
                  j_2785062309 = nextTry_1342177315(j_2785062309, (t_2785062123.data).length - 1);
                }
            };
            rawInsert_2785062556(t_2785062123, t_2785062123, "data", n_2785062126[chckIndx(i_2785062224, 0, (n_2785062126).length - 1)].Field1, n_2785062126[chckIndx(i_2785062224, 0, (n_2785062126).length - 1)].Field2, eh_2785062305, j_2785062309);
            }
            
            res_2734686801 = addInt(res_2734686801, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785062806(t_2785062809, key_2785062810, hc_2785062811) {
  var result_2785062812 = 0;

  BeforeRet: {
    if (((t_2785062809.data).length == 0)) {
    result_2785062812 = -1;
    break BeforeRet;
    }
    
    var h_2785062897 = (hc_2785062811 & (t_2785062809.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785062809.data[chckIndx(h_2785062897, 0, (t_2785062809.data).length - 1)].Field0)) break Label2;
          if (((t_2785062809.data[chckIndx(h_2785062897, 0, (t_2785062809.data).length - 1)].Field0 == hc_2785062811) && HEX3DHEX3D_2868906083(t_2785062809.data[chckIndx(h_2785062897, 0, (t_2785062809.data).length - 1)].Field1, key_2785062810))) {
          result_2785062812 = h_2785062897;
          break BeforeRet;
          }
          
          h_2785062897 = nextTry_1342177315(h_2785062897, (t_2785062809.data).length - 1);
        }
    };
    result_2785062812 = subInt(-1, h_2785062897);
  };

  return result_2785062812;

}

function HEX5BHEX5DHEX3D_2785061595(t_2785061598, key_2785061599, val_2785061600) {
    if (((t_2785061598.data).length == 0)) {
    var correctSizeHEX60gensym337_2785061683 = slotsNeeded_1342177323(32);
    t_2785061598.counter = 0;
    t_2785061598.data = new Array(chckRange(correctSizeHEX60gensym337_2785061683, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_2785061683, 0, 2147483647) ; ++i) { t_2785061598.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2785061688 = [0];
    var index_2785061695 = rawGet_2785061034(t_2785061598, key_2785061599, hc_2785061688, 0);
    if ((0 <= index_2785061695)) {
    t_2785061598.data[chckIndx(index_2785061695, 0, (t_2785061598.data).length - 1)].Field2 = val_2785061600;
    }
    else {
      if (((t_2785061598.data).length == 0)) {
      var correctSizeHEX60gensym340_2785061858 = slotsNeeded_1342177323(32);
      t_2785061598.counter = 0;
      t_2785061598.data = new Array(chckRange(correctSizeHEX60gensym340_2785061858, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym340_2785061858, 0, 2147483647) ; ++i) { t_2785061598.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2785061863(t_2785061598)) {
      enlarge_2785062120(t_2785061598);
      index_2785061695 = rawGetKnownHC_2785062806(t_2785061598, key_2785061599, hc_2785061688[0]);
      }
      
      index_2785061695 = subInt(-1, index_2785061695);
      rawInsert_2785062556(t_2785061598, t_2785061598, "data", key_2785061599, val_2785061600, hc_2785061688[0], index_2785061695);
      t_2785061598.counter = addInt(t_2785061598.counter, 1);
    }
    

  
}

function prepend_2785063202(L_2785063204, n_2785063205) {
    n_2785063205.prev = null;
    n_2785063205.next = L_2785063204.head;
    if (!((L_2785063204.head == null))) {
    if (!((L_2785063204.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785063204.head.prev = n_2785063205;
    }
    
    L_2785063204.head = n_2785063205;
    if ((L_2785063204.tail == null)) {
    L_2785063204.tail = n_2785063205;
    }
    

  
}

function rawGet_2785063433(t_2785063436, key_2785063437, hc_2785063438, hc_2785063438_Idx) {
  var result_2785063439 = 0;

  BeforeRet: {
    hc_2785063438[hc_2785063438_Idx] = hash_2868906080(key_2785063437);
    if ((hc_2785063438[hc_2785063438_Idx] == 0)) {
    hc_2785063438[hc_2785063438_Idx] = 314159265;
    }
    
    if (((t_2785063436.data).length == 0)) {
    result_2785063439 = -1;
    break BeforeRet;
    }
    
    var h_2785063525 = (hc_2785063438[hc_2785063438_Idx] & (t_2785063436.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785063436.data[chckIndx(h_2785063525, 0, (t_2785063436.data).length - 1)].Field0)) break Label2;
          if (((t_2785063436.data[chckIndx(h_2785063525, 0, (t_2785063436.data).length - 1)].Field0 == hc_2785063438[hc_2785063438_Idx]) && HEX3DHEX3D_2868906083(t_2785063436.data[chckIndx(h_2785063525, 0, (t_2785063436.data).length - 1)].Field1, key_2785063437))) {
          result_2785063439 = h_2785063525;
          break BeforeRet;
          }
          
          h_2785063525 = nextTry_1862271018(h_2785063525, (t_2785063436.data).length - 1);
        }
    };
    result_2785063439 = subInt(-1, h_2785063525);
  };

  return result_2785063439;

}

function exclImpl_2785063427(s_2785063429, key_2785063430) {
          var Temporary5;

  var result_2785063431 = false;

  BeforeRet: {
    var hc_2785063432 = [0];
    var i_2785063787 = rawGet_2785063433(s_2785063429, key_2785063430, hc_2785063432, 0);
    var msk_2785063791 = (s_2785063429.data).length - 1;
    result_2785063431 = true;
    if ((0 <= i_2785063787)) {
    result_2785063431 = false;
    s_2785063429.counter = subInt(s_2785063429.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785063797 = i_2785063787;
          var r_2785063798 = j_2785063797;
          s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)].Field0 = 0;
          s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785063787 = (addInt(i_2785063787, 1) & msk_2785063791);
                if (isEmpty_1862271012(s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785063798 = (s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)].Field0 & msk_2785063791);
                if (!(((((r_2785063798 <= i_2785063787) && (j_2785063797 < r_2785063798)) || ((j_2785063797 < r_2785063798) && (i_2785063787 < j_2785063797))) || ((i_2785063787 < j_2785063797) && (r_2785063798 <= i_2785063787))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)];
          s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)] = genericReset(s_2785063429.data[chckIndx(i_2785063787, 0, (s_2785063429.data).length - 1)], NTI2785018842);
          s_2785063429.data[chckIndx(j_2785063797, 0, (s_2785063429.data).length - 1)] = nimCopy(s_2785063429.data[chckIndx(j_2785063797, 0, (s_2785063429.data).length - 1)], Temporary5, NTI2785018842);
        }
    };
    }
    
  };

  return result_2785063431;

}

function excl_2785063412(s_2785063414, key_2785063415) {
    var _ = exclImpl_2785063427(s_2785063414, key_2785063415);

  
}

function len_2785064551(t_2785064554) {
  var result_2785064555 = 0;

    result_2785064555 = t_2785064554.counter;

  return result_2785064555;

}

function len_2785064468(cache_2785064471) {
  var result_2785064472 = 0;

    result_2785064472 = len_2785064551(cache_2785064471.table);

  return result_2785064472;

}

function mustRehash_2785064692(t_2785064694) {
  var result_2785064695 = false;

    if (!((t_2785064694.counter < (t_2785064694.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785064695 = ((mulInt((t_2785064694.data).length, 2) < mulInt(t_2785064694.counter, 3)) || (subInt((t_2785064694.data).length, t_2785064694.counter) < 4));

  return result_2785064695;

}

function rawGetKnownHC_2785065298(t_2785065301, key_2785065302, hc_2785065303) {
  var result_2785065304 = 0;

  BeforeRet: {
    if (((t_2785065301.data).length == 0)) {
    result_2785065304 = -1;
    break BeforeRet;
    }
    
    var h_2785065389 = (hc_2785065303 & (t_2785065301.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785065301.data[chckIndx(h_2785065389, 0, (t_2785065301.data).length - 1)].Field0)) break Label2;
          if (((t_2785065301.data[chckIndx(h_2785065389, 0, (t_2785065301.data).length - 1)].Field0 == hc_2785065303) && HEX3DHEX3D_2868906083(t_2785065301.data[chckIndx(h_2785065389, 0, (t_2785065301.data).length - 1)].Field1, key_2785065302))) {
          result_2785065304 = h_2785065389;
          break BeforeRet;
          }
          
          h_2785065389 = nextTry_1862271018(h_2785065389, (t_2785065301.data).length - 1);
        }
    };
    result_2785065304 = subInt(-1, h_2785065389);
  };

  return result_2785065304;

}

function rawInsert_2785065798(s_2785065800, data_2785065801, data_2785065801_Idx, key_2785065802, hc_2785065803, h_2785065804) {
    if (((data_2785065801[data_2785065801_Idx]).length == 0)) {
    var correctSizeHEX60gensym359_2785065887 = slotsNeeded_1862271026(64);
    s_2785065800.counter = 0;
    s_2785065800.data = new Array(chckRange(correctSizeHEX60gensym359_2785065887, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym359_2785065887, 0, 2147483647) ; ++i) { s_2785065800.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2785065801[data_2785065801_Idx][chckIndx(h_2785065804, 0, (data_2785065801[data_2785065801_Idx]).length - 1)].Field1 = key_2785065802;
    data_2785065801[data_2785065801_Idx][chckIndx(h_2785065804, 0, (data_2785065801[data_2785065801_Idx]).length - 1)].Field0 = hc_2785065803;

  
}

function enlarge_2785064955(s_2785064957) {
    var n_2785064959 = [];
    n_2785064959 = new Array(chckRange(mulInt((s_2785064957.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785064957.data).length, 2), 0, 2147483647) ; ++i) { n_2785064959[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2785064957.data; s_2785064957.data = n_2785064959; n_2785064959 = Temporary1;    Label2: {
      var i_2785065057 = 0;
      var colontmp__2734686809 = 0;
      colontmp__2734686809 = (n_2785064959).length - 1;
      var res_2734686810 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686810 <= colontmp__2734686809)) break Label4;
            i_2785065057 = res_2734686810;
            if (isFilled_1862271015(n_2785064959[chckIndx(i_2785065057, 0, (n_2785064959).length - 1)].Field0)) {
            var j_2785065633 = subInt(-1, rawGetKnownHC_2785065298(s_2785064957, n_2785064959[chckIndx(i_2785065057, 0, (n_2785064959).length - 1)].Field1, n_2785064959[chckIndx(i_2785065057, 0, (n_2785064959).length - 1)].Field0));
            rawInsert_2785065798(s_2785064957, s_2785064957, "data", n_2785064959[chckIndx(i_2785065057, 0, (n_2785064959).length - 1)].Field1, n_2785064959[chckIndx(i_2785065057, 0, (n_2785064959).length - 1)].Field0, j_2785065633);
            }
            
            res_2734686810 = addInt(res_2734686810, 1);
          }
      };
    };

  
}

function incl_2785064576(s_2785064578, key_2785064579) {
    if (((s_2785064578.data).length == 0)) {
    var correctSizeHEX60gensym352_2785064662 = slotsNeeded_1862271026(64);
    s_2785064578.counter = 0;
    s_2785064578.data = new Array(chckRange(correctSizeHEX60gensym352_2785064662, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym352_2785064662, 0, 2147483647) ; ++i) { s_2785064578.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2785064677 = [0];
    var index_2785064691 = rawGet_2785063433(s_2785064578, key_2785064579, hc_2785064677, 0);
    if ((index_2785064691 < 0)) {
    if (mustRehash_2785064692(s_2785064578)) {
    enlarge_2785064955(s_2785064578);
    index_2785064691 = rawGetKnownHC_2785065298(s_2785064578, key_2785064579, hc_2785064677[0]);
    }
    
    rawInsert_2785065798(s_2785064578, s_2785064578, "data", key_2785064579, hc_2785064677[0], subInt(-1, index_2785064691));
    s_2785064578.counter = addInt(s_2785064578.counter, 1);
    }
    

  
}

function del_2785066154(t_2785066157, key_2785066158) {
    var hc_2785066159 = [0];
    var i_2785066166 = rawGet_2785061034(t_2785066157, key_2785066158, hc_2785066159, 0);
    var mskHEX60gensym36_2785066170 = (t_2785066157.data).length - 1;
    if ((0 <= i_2785066166)) {
    t_2785066157.counter = subInt(t_2785066157.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785066177 = i_2785066166;
            var rHEX60gensym36_2785066178 = jHEX60gensym36_2785066177;
            t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)].Field0 = 0;
            t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)].Field1 = null;
            t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785066166 = (addInt(i_2785066166, 1) & mskHEX60gensym36_2785066170);
                  if (isEmpty_1342177309(t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785066178 = (t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)].Field0 & mskHEX60gensym36_2785066170);
                  if (!(((((rHEX60gensym36_2785066178 <= i_2785066166) && (jHEX60gensym36_2785066177 < rHEX60gensym36_2785066178)) || ((jHEX60gensym36_2785066177 < rHEX60gensym36_2785066178) && (i_2785066166 < jHEX60gensym36_2785066177))) || ((i_2785066166 < jHEX60gensym36_2785066177) && (rHEX60gensym36_2785066178 <= i_2785066166))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785066157.data[chckIndx(jHEX60gensym36_2785066177, 0, (t_2785066157.data).length - 1)] = nimCopy(t_2785066157.data[chckIndx(jHEX60gensym36_2785066177, 0, (t_2785066157.data).length - 1)], t_2785066157.data[chckIndx(i_2785066166, 0, (t_2785066157.data).length - 1)], NTI2785018822);
          }
      };
    };
    }
    

  
}

function remove_2785066913(L_2785066915, n_2785066916) {
    if ((n_2785066916 == L_2785066915.tail)) {
    L_2785066915.tail = n_2785066916.prev;
    }
    
    if ((n_2785066916 == L_2785066915.head)) {
    L_2785066915.head = n_2785066916.next;
    }
    
    if (!((n_2785066916.next == null))) {
    n_2785066916.next.prev = n_2785066916.prev;
    }
    
    if (!((n_2785066916.prev == null))) {
    n_2785066916.prev.next = n_2785066916.next;
    }
    

  
}

function resize_2785064386(cache_2785064389) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785064389.capacity < len_2785064468(cache_2785064389))) break Label2;
          var t_2785064556 = cache_2785064389.list.tail;
          if (cache_2785064389.recordRemovedKeys) {
          incl_2785064576(cache_2785064389.removedKeys, t_2785064556.value.key);
          }
          
          del_2785066154(cache_2785064389.table, t_2785064556.value.key);
          remove_2785066913(cache_2785064389.list, t_2785064556);
        }
    };

  
}

function addNewNode_2785061505(cache_2785061508, key_2785061509, val_2785061510) {
    var node_2785061531 = newDoublyLinkedNode_2785061513({key: key_2785061509, val: nimCopy(null, val_2785061510, NTI2868903967)});
    HEX5BHEX5DHEX3D_2785061595(cache_2785061508.table, key_2785061509, node_2785061531);
    prepend_2785063202(cache_2785061508.list, node_2785061531);
    if (cache_2785061508.recordRemovedKeys) {
    excl_2785063412(cache_2785061508.removedKeys, key_2785061509);
    }
    
    resize_2785064386(cache_2785061508);

  
}

function HEX5BHEX5DHEX3D_2785060929(cache_2785060932, key_2785060933, val_2785060934) {
    var node_2785061478 = getOrDefault_2785061024(cache_2785060932.table, key_2785060933, null);
    if ((node_2785061478 == null)) {
    addNewNode_2785061505(cache_2785060932, key_2785060933, val_2785060934);
    }
    else {
      node_2785061478.value.val = nimCopy(node_2785061478.value.val, val_2785060934, NTI2868903967);
      remove_2785066913(cache_2785060932.list, node_2785061478);
      prepend_2785063202(cache_2785060932.list, node_2785061478);
    }
    

  
}

function initDoublyLinkedList_2785067369() {
  var result_2785067371 = ({head: null, tail: null});

  return result_2785067371;

}

function initTable_2785067375(initialSize_2785067378) {
  var result_2785067379 = ({data: [], counter: 0});

    var correctSizeHEX60gensym360_2785067381 = slotsNeeded_1342177323(chckRange(initialSize_2785067378, 0, 2147483647));
    result_2785067379.counter = 0;
    result_2785067379.data = new Array(chckRange(correctSizeHEX60gensym360_2785067381, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym360_2785067381, 0, 2147483647) ; ++i) { result_2785067379.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2785067379;

}

function newLruCache_2785067359(capacity_2785067362, recordRemovedKeys_2785067363) {
  var result_2785067364 = null;

    result_2785067364 = {capacity: capacity_2785067362, list: initDoublyLinkedList_2785067369(), table: initTable_2785067375(correctSize_2818572309(capacity_2785067362)), recordRemovedKeys: recordRemovedKeys_2785067363, removedKeys: ({data: [], counter: 0})};

  return result_2785067364;

}

function newCache_2785067354(capacity_2785067357) {
  var result_2785067358 = null;

    result_2785067358 = newLruCache_2785067359(capacity_2785067357, false);

  return result_2785067358;

}

function init_2785067349(result_2785067352, result_2785067352_Idx, capacity_2785067353) {
    result_2785067352[result_2785067352_Idx] = newCache_2785067354(capacity_2785067353);

  
}

function rawGet_2785067599(t_2785067602, key_2785067603, hc_2785067604, hc_2785067604_Idx) {
  var result_2785067605 = 0;

  BeforeRet: {
    hc_2785067604[hc_2785067604_Idx] = hash_2785018995(key_2785067603);
    if ((hc_2785067604[hc_2785067604_Idx] == 0)) {
    hc_2785067604[hc_2785067604_Idx] = 314159265;
    }
    
    if (((t_2785067602.data).length == 0)) {
    result_2785067605 = -1;
    break BeforeRet;
    }
    
    var h_2785067694 = (hc_2785067604[hc_2785067604_Idx] & (t_2785067602.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785067602.data[chckIndx(h_2785067694, 0, (t_2785067602.data).length - 1)].Field0)) break Label2;
          if (((t_2785067602.data[chckIndx(h_2785067694, 0, (t_2785067602.data).length - 1)].Field0 == hc_2785067604[hc_2785067604_Idx]) && HEX3DHEX3D_2785019332(t_2785067602.data[chckIndx(h_2785067694, 0, (t_2785067602.data).length - 1)].Field1, key_2785067603))) {
          result_2785067605 = h_2785067694;
          break BeforeRet;
          }
          
          h_2785067694 = nextTry_1342177315(h_2785067694, (t_2785067602.data).length - 1);
        }
    };
    result_2785067605 = subInt(-1, h_2785067694);
  };

  return result_2785067605;

}

function hasKey_2785067592(t_2785067595, key_2785067596) {
  var result_2785067597 = false;

    var hc_2785067598 = [0];
    result_2785067597 = (0 <= rawGet_2785067599(t_2785067595, key_2785067596, hc_2785067598, 0));

  return result_2785067597;

}

function contains_2785067586(t_2785067589, key_2785067590) {
  var result_2785067591 = false;

  BeforeRet: {
    result_2785067591 = hasKey_2785067592(t_2785067589, key_2785067590);
    break BeforeRet;
  };

  return result_2785067591;

}

function contains_2785067492(cache_2785067495, key_2785067496) {
  var result_2785067497 = false;

    result_2785067497 = contains_2785067586(cache_2785067495.table, key_2785067496);

  return result_2785067497;

}

function HEX5BHEX5D_2785068131(t_2785068134, key_2785068135) {
  var result_2785068136 = null;
  var result_2785068136_Idx = 0;

    var hcHEX60gensym22_2785068137 = [0];
    var indexHEX60gensym22_2785068144 = rawGet_2785067599(t_2785068134, key_2785068135, hcHEX60gensym22_2785068137, 0);
    if ((0 <= indexHEX60gensym22_2785068144)) {
    result_2785068136 = t_2785068134.data[chckIndx(indexHEX60gensym22_2785068144, 0, (t_2785068134.data).length - 1)]; result_2785068136_Idx = "Field2";
    }
    else {
    raiseKeyError_2785019628(key_2785068135);
    }
    

  return [result_2785068136, result_2785068136_Idx];

}

function remove_2785068251(L_2785068253, n_2785068254) {
    if ((n_2785068254 == L_2785068253.tail)) {
    L_2785068253.tail = n_2785068254.prev;
    }
    
    if ((n_2785068254 == L_2785068253.head)) {
    L_2785068253.head = n_2785068254.next;
    }
    
    if (!((n_2785068254.next == null))) {
    n_2785068254.next.prev = n_2785068254.prev;
    }
    
    if (!((n_2785068254.prev == null))) {
    n_2785068254.prev.next = n_2785068254.next;
    }
    

  
}

function prepend_2785068555(L_2785068557, n_2785068558) {
    n_2785068558.prev = null;
    n_2785068558.next = L_2785068557.head;
    if (!((L_2785068557.head == null))) {
    if (!((L_2785068557.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785068557.head.prev = n_2785068558;
    }
    
    L_2785068557.head = n_2785068558;
    if ((L_2785068557.tail == null)) {
    L_2785068557.tail = n_2785068558;
    }
    

  
}

function HEX5BHEX5D_2785068045(cache_2785068048, key_2785068049) {
    var Temporary1;

  var result_2785068050 = ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})});

    var node_2785068237 = (Temporary1 = HEX5BHEX5D_2785068131(cache_2785068048.table, key_2785068049), Temporary1)[0][Temporary1[1]];
    result_2785068050 = nimCopy(result_2785068050, node_2785068237.value.val, NTI2868903969);
    remove_2785068251(cache_2785068048.list, node_2785068237);
    prepend_2785068555(cache_2785068048.list, node_2785068237);

  return result_2785068050;

}

function computeRenderedTextImpl_2785018790(ctx_2785018791, input_2785018792) {
  var result_2785129162 = [];

  BeforeRet: {
    result_2785129162 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2785129162;

}

function hasBigUint64Array_989855789() {
  var result_989855790 = false;

    result_989855790 = typeof BigUint64Array != 'undefined'

  return result_989855790;

}

function hash_1358954706(x_1358954707) {
    var Temporary1;

  var result_1358954708 = 0;

    var y_1358954709 = (x_1358954707 + 0.0);
    var P0HEX60gensym16_1358954769 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym16_1358954770 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym16_1358954771 = BigInt("0xeb44accab455d16d");
    var xHEX60gensym11_1358954740 = new ArrayBuffer(8);
    var yHEX60gensym11_1358954741 = new Float64Array(xHEX60gensym11_1358954740);
    if (hasBigUint64Array_989855789()) {
    var zHEX60gensym11_1358954742 = new BigUint64Array(xHEX60gensym11_1358954740);
    yHEX60gensym11_1358954741[0] = y_1358954709;
    Temporary1 = zHEX60gensym11_1358954742[0];
    }
    else {
      var zHEX60gensym11_1358954743 = new Uint32Array(xHEX60gensym11_1358954740);
      yHEX60gensym11_1358954741[0] = y_1358954709;
    Temporary1 = (BigInt(zHEX60gensym11_1358954743[0]) + (BigInt(zHEX60gensym11_1358954743[1]) << BigInt(32)));
    }
    
    var resHEX60gensym16_1358954772 = hiXorLoJs_1358954581(hiXorLoJs_1358954581(P0HEX60gensym16_1358954769, (Temporary1 ^ P1HEX60gensym16_1358954770)), P58HEX60gensym16_1358954771);
    result_1358954708 = Number((() => { const i = resHEX60gensym16_1358954772, b = 32; return BigInt.asIntN(b, i) })());

  return result_1358954708;

}

function hash_2868906958(x_2868906960) {
  var result_2868906961 = 0;

    Label1: {
      var a_2868906975 = 0.0;
      var i_2734686819 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734686819 < (x_2868906960).length)) break Label3;
            a_2868906975 = x_2868906960[chckIndx(i_2734686819, 0, (x_2868906960).length - 1)];
            result_2868906961 = HEX21HEX26_1358954499(result_2868906961, hash_1358954706(a_2868906975));
            i_2734686819 = addInt(i_2734686819, 1);
          }
      };
    };
    result_2868906961 = HEX21HEX24_1358954514(result_2868906961);

  return result_2868906961;

}

function hash_2868906950(x_2868906952) {
  var result_2868906953 = 0;

    result_2868906953 = HEX21HEX26_1358954499(result_2868906953, hash_2868906958(x_2868906952.arr));
    result_2868906953 = HEX21HEX24_1358954514(result_2868906953);

  return result_2868906953;

}

function hash_2868906947(input_2868906948) {
  var result_2868906949 = 0;

    result_2868906949 = HEX21HEX26_1358954499(HEX21HEX26_1358954499(HEX21HEX26_1358954499(HEX21HEX26_1358954499(HEX21HEX26_1358954499(hash_1358954923(input_2868906948.text), hash_1358954923(input_2868906948.font)), hash_1358954706(input_2868906948.fontSize)), hash_1358954706(input_2868906948.lineHeight)), hash_1358954706(input_2868906948.charWidth)), hash_2868906950(input_2868906948.bounds));
    result_2868906949 = HEX21HEX24_1358954514(result_2868906949);

  return result_2868906949;

}

function HEX21HEX3D_2113929455(a_2113929457, b_2113929458) {
  var result_2113929459 = false;

    result_2113929459 = (!((a_2113929457.arr[0] == b_2113929458.arr[0])) || !((a_2113929457.arr[1] == b_2113929458.arr[1])));

  return result_2113929459;

}

function HEX3DHEX3D_2868906985(a_2868906986, b_2868906987) {
  var result_2868906988 = false;

  BeforeRet: {
    if (!(eqStrings(a_2868906986.text, b_2868906987.text))) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_2868906986.font, b_2868906987.font))) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906986.fontSize == b_2868906987.fontSize))) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906986.lineHeight == b_2868906987.lineHeight))) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    if (!((a_2868906986.charWidth == b_2868906987.charWidth))) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    if (HEX21HEX3D_2113929455(a_2868906986.bounds, b_2868906987.bounds)) {
    result_2868906988 = false;
    break BeforeRet;
    }
    
    result_2868906988 = true;
    break BeforeRet;
  };

  return result_2868906988;

}

function rawGet_2785068929(t_2785068932, key_2785068933, hc_2785068934, hc_2785068934_Idx) {
  var result_2785068935 = 0;

  BeforeRet: {
    hc_2785068934[hc_2785068934_Idx] = hash_2868906947(key_2785068933);
    if ((hc_2785068934[hc_2785068934_Idx] == 0)) {
    hc_2785068934[hc_2785068934_Idx] = 314159265;
    }
    
    if (((t_2785068932.data).length == 0)) {
    result_2785068935 = -1;
    break BeforeRet;
    }
    
    var h_2785069021 = (hc_2785068934[hc_2785068934_Idx] & (t_2785068932.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785068932.data[chckIndx(h_2785069021, 0, (t_2785068932.data).length - 1)].Field0)) break Label2;
          if (((t_2785068932.data[chckIndx(h_2785069021, 0, (t_2785068932.data).length - 1)].Field0 == hc_2785068934[hc_2785068934_Idx]) && HEX3DHEX3D_2868906985(t_2785068932.data[chckIndx(h_2785069021, 0, (t_2785068932.data).length - 1)].Field1, key_2785068933))) {
          result_2785068935 = h_2785069021;
          break BeforeRet;
          }
          
          h_2785069021 = nextTry_1342177315(h_2785069021, (t_2785068932.data).length - 1);
        }
    };
    result_2785068935 = subInt(-1, h_2785069021);
  };

  return result_2785068935;

}

function getOrDefault_2785068919(t_2785068922, key_2785068923, default_2785068924) {
    var Temporary1;

  var result_2785068925 = null;

    var hcHEX60gensym367_2785068928 = [0];
    var indexHEX60gensym367_2785069283 = rawGet_2785068929(t_2785068922, key_2785068923, hcHEX60gensym367_2785068928, 0);
    if ((0 <= indexHEX60gensym367_2785069283)) {
    Temporary1 = t_2785068922.data[chckIndx(indexHEX60gensym367_2785069283, 0, (t_2785068922.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785068924;
    }
    
    result_2785068925 = Temporary1;

  return result_2785068925;

}

function newDoublyLinkedNode_2785069408(value_2785069410) {
  var result_2785069411 = null;

    result_2785069411 = ({next: null, prev: null, value: ({key: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), val: []})});
    result_2785069411.value = nimCopy(result_2785069411.value, value_2785069410, NTI2785018861);

  return result_2785069411;

}

function mustRehash_2785069758(t_2785069760) {
  var result_2785069761 = false;

    if (!((t_2785069760.counter < (t_2785069760.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785069761 = ((mulInt((t_2785069760.data).length, 2) < mulInt(t_2785069760.counter, 3)) || (subInt((t_2785069760.data).length, t_2785069760.counter) < 4));

  return result_2785069761;

}

function rawInsert_2785070451(t_2785070455, data_2785070456, data_2785070456_Idx, key_2785070457, val_2785070458, hc_2785070459, h_2785070460) {
    data_2785070456[data_2785070456_Idx][chckIndx(h_2785070460, 0, (data_2785070456[data_2785070456_Idx]).length - 1)].Field1 = nimCopy(data_2785070456[data_2785070456_Idx][chckIndx(h_2785070460, 0, (data_2785070456[data_2785070456_Idx]).length - 1)].Field1, key_2785070457, NTI2868903969);
    data_2785070456[data_2785070456_Idx][chckIndx(h_2785070460, 0, (data_2785070456[data_2785070456_Idx]).length - 1)].Field2 = val_2785070458;
    data_2785070456[data_2785070456_Idx][chckIndx(h_2785070460, 0, (data_2785070456[data_2785070456_Idx]).length - 1)].Field0 = hc_2785070459;

  
}

function enlarge_2785070015(t_2785070018) {
    var n_2785070021 = [];
    n_2785070021 = new Array(chckRange(mulInt((t_2785070018.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785070018.data).length, 2), 0, 2147483647) ; ++i) { n_2785070021[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), Field2: null}; }    var Temporary1 = t_2785070018.data; t_2785070018.data = n_2785070021; n_2785070021 = Temporary1;    Label2: {
      var i_2785070119 = 0;
      var colontmp__2734686823 = 0;
      colontmp__2734686823 = (n_2785070021).length - 1;
      var res_2734686824 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686824 <= colontmp__2734686823)) break Label4;
            i_2785070119 = res_2734686824;
            var eh_2785070200 = n_2785070021[chckIndx(i_2785070119, 0, (n_2785070021).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785070200)) {
            var j_2785070204 = (eh_2785070200 & (t_2785070018.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785070018.data[chckIndx(j_2785070204, 0, (t_2785070018.data).length - 1)].Field0)) break Label6;
                  j_2785070204 = nextTry_1342177315(j_2785070204, (t_2785070018.data).length - 1);
                }
            };
            rawInsert_2785070451(t_2785070018, t_2785070018, "data", n_2785070021[chckIndx(i_2785070119, 0, (n_2785070021).length - 1)].Field1, n_2785070021[chckIndx(i_2785070119, 0, (n_2785070021).length - 1)].Field2, eh_2785070200, j_2785070204);
            }
            
            res_2734686824 = addInt(res_2734686824, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785070701(t_2785070704, key_2785070705, hc_2785070706) {
  var result_2785070707 = 0;

  BeforeRet: {
    if (((t_2785070704.data).length == 0)) {
    result_2785070707 = -1;
    break BeforeRet;
    }
    
    var h_2785070792 = (hc_2785070706 & (t_2785070704.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785070704.data[chckIndx(h_2785070792, 0, (t_2785070704.data).length - 1)].Field0)) break Label2;
          if (((t_2785070704.data[chckIndx(h_2785070792, 0, (t_2785070704.data).length - 1)].Field0 == hc_2785070706) && HEX3DHEX3D_2868906985(t_2785070704.data[chckIndx(h_2785070792, 0, (t_2785070704.data).length - 1)].Field1, key_2785070705))) {
          result_2785070707 = h_2785070792;
          break BeforeRet;
          }
          
          h_2785070792 = nextTry_1342177315(h_2785070792, (t_2785070704.data).length - 1);
        }
    };
    result_2785070707 = subInt(-1, h_2785070792);
  };

  return result_2785070707;

}

function HEX5BHEX5DHEX3D_2785069490(t_2785069493, key_2785069494, val_2785069495) {
    if (((t_2785069493.data).length == 0)) {
    var correctSizeHEX60gensym372_2785069578 = slotsNeeded_1342177323(32);
    t_2785069493.counter = 0;
    t_2785069493.data = new Array(chckRange(correctSizeHEX60gensym372_2785069578, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym372_2785069578, 0, 2147483647) ; ++i) { t_2785069493.data[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), Field2: null}; }    }
    
    var hc_2785069583 = [0];
    var index_2785069590 = rawGet_2785068929(t_2785069493, key_2785069494, hc_2785069583, 0);
    if ((0 <= index_2785069590)) {
    t_2785069493.data[chckIndx(index_2785069590, 0, (t_2785069493.data).length - 1)].Field2 = val_2785069495;
    }
    else {
      if (((t_2785069493.data).length == 0)) {
      var correctSizeHEX60gensym375_2785069753 = slotsNeeded_1342177323(32);
      t_2785069493.counter = 0;
      t_2785069493.data = new Array(chckRange(correctSizeHEX60gensym375_2785069753, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym375_2785069753, 0, 2147483647) ; ++i) { t_2785069493.data[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), Field2: null}; }      }
      
      if (mustRehash_2785069758(t_2785069493)) {
      enlarge_2785070015(t_2785069493);
      index_2785069590 = rawGetKnownHC_2785070701(t_2785069493, key_2785069494, hc_2785069583[0]);
      }
      
      index_2785069590 = subInt(-1, index_2785069590);
      rawInsert_2785070451(t_2785069493, t_2785069493, "data", key_2785069494, val_2785069495, hc_2785069583[0], index_2785069590);
      t_2785069493.counter = addInt(t_2785069493.counter, 1);
    }
    

  
}

function prepend_2785071097(L_2785071099, n_2785071100) {
    n_2785071100.prev = null;
    n_2785071100.next = L_2785071099.head;
    if (!((L_2785071099.head == null))) {
    if (!((L_2785071099.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2785071099.head.prev = n_2785071100;
    }
    
    L_2785071099.head = n_2785071100;
    if ((L_2785071099.tail == null)) {
    L_2785071099.tail = n_2785071100;
    }
    

  
}

function rawGet_2785071328(t_2785071331, key_2785071332, hc_2785071333, hc_2785071333_Idx) {
  var result_2785071334 = 0;

  BeforeRet: {
    hc_2785071333[hc_2785071333_Idx] = hash_2868906947(key_2785071332);
    if ((hc_2785071333[hc_2785071333_Idx] == 0)) {
    hc_2785071333[hc_2785071333_Idx] = 314159265;
    }
    
    if (((t_2785071331.data).length == 0)) {
    result_2785071334 = -1;
    break BeforeRet;
    }
    
    var h_2785071420 = (hc_2785071333[hc_2785071333_Idx] & (t_2785071331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785071331.data[chckIndx(h_2785071420, 0, (t_2785071331.data).length - 1)].Field0)) break Label2;
          if (((t_2785071331.data[chckIndx(h_2785071420, 0, (t_2785071331.data).length - 1)].Field0 == hc_2785071333[hc_2785071333_Idx]) && HEX3DHEX3D_2868906985(t_2785071331.data[chckIndx(h_2785071420, 0, (t_2785071331.data).length - 1)].Field1, key_2785071332))) {
          result_2785071334 = h_2785071420;
          break BeforeRet;
          }
          
          h_2785071420 = nextTry_1862271018(h_2785071420, (t_2785071331.data).length - 1);
        }
    };
    result_2785071334 = subInt(-1, h_2785071420);
  };

  return result_2785071334;

}

function exclImpl_2785071322(s_2785071324, key_2785071325) {
          var Temporary5;

  var result_2785071326 = false;

  BeforeRet: {
    var hc_2785071327 = [0];
    var i_2785071682 = rawGet_2785071328(s_2785071324, key_2785071325, hc_2785071327, 0);
    var msk_2785071686 = (s_2785071324.data).length - 1;
    result_2785071326 = true;
    if ((0 <= i_2785071682)) {
    result_2785071326 = false;
    s_2785071324.counter = subInt(s_2785071324.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2785071692 = i_2785071682;
          var r_2785071693 = j_2785071692;
          s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)].Field0 = 0;
          s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)].Field1 = nimCopy(s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)].Field1, ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), NTI2868903969);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2785071682 = (addInt(i_2785071682, 1) & msk_2785071686);
                if (isEmpty_1862271012(s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2785071693 = (s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)].Field0 & msk_2785071686);
                if (!(((((r_2785071693 <= i_2785071682) && (j_2785071692 < r_2785071693)) || ((j_2785071692 < r_2785071693) && (i_2785071682 < j_2785071692))) || ((i_2785071682 < j_2785071692) && (r_2785071693 <= i_2785071682))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)];
          s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)] = genericReset(s_2785071324.data[chckIndx(i_2785071682, 0, (s_2785071324.data).length - 1)], NTI2785018917);
          s_2785071324.data[chckIndx(j_2785071692, 0, (s_2785071324.data).length - 1)] = nimCopy(s_2785071324.data[chckIndx(j_2785071692, 0, (s_2785071324.data).length - 1)], Temporary5, NTI2785018917);
        }
    };
    }
    
  };

  return result_2785071326;

}

function excl_2785071307(s_2785071309, key_2785071310) {
    var _ = exclImpl_2785071322(s_2785071309, key_2785071310);

  
}

function len_2785072446(t_2785072449) {
  var result_2785072450 = 0;

    result_2785072450 = t_2785072449.counter;

  return result_2785072450;

}

function len_2785072363(cache_2785072366) {
  var result_2785072367 = 0;

    result_2785072367 = len_2785072446(cache_2785072366.table);

  return result_2785072367;

}

function mustRehash_2785072587(t_2785072589) {
  var result_2785072590 = false;

    if (!((t_2785072589.counter < (t_2785072589.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785072590 = ((mulInt((t_2785072589.data).length, 2) < mulInt(t_2785072589.counter, 3)) || (subInt((t_2785072589.data).length, t_2785072589.counter) < 4));

  return result_2785072590;

}

function rawGetKnownHC_2785073193(t_2785073196, key_2785073197, hc_2785073198) {
  var result_2785073199 = 0;

  BeforeRet: {
    if (((t_2785073196.data).length == 0)) {
    result_2785073199 = -1;
    break BeforeRet;
    }
    
    var h_2785073284 = (hc_2785073198 & (t_2785073196.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_2785073196.data[chckIndx(h_2785073284, 0, (t_2785073196.data).length - 1)].Field0)) break Label2;
          if (((t_2785073196.data[chckIndx(h_2785073284, 0, (t_2785073196.data).length - 1)].Field0 == hc_2785073198) && HEX3DHEX3D_2868906985(t_2785073196.data[chckIndx(h_2785073284, 0, (t_2785073196.data).length - 1)].Field1, key_2785073197))) {
          result_2785073199 = h_2785073284;
          break BeforeRet;
          }
          
          h_2785073284 = nextTry_1862271018(h_2785073284, (t_2785073196.data).length - 1);
        }
    };
    result_2785073199 = subInt(-1, h_2785073284);
  };

  return result_2785073199;

}

function rawInsert_2785073693(s_2785073695, data_2785073696, data_2785073696_Idx, key_2785073697, hc_2785073698, h_2785073699) {
    if (((data_2785073696[data_2785073696_Idx]).length == 0)) {
    var correctSizeHEX60gensym394_2785073782 = slotsNeeded_1862271026(64);
    s_2785073695.counter = 0;
    s_2785073695.data = new Array(chckRange(correctSizeHEX60gensym394_2785073782, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym394_2785073782, 0, 2147483647) ; ++i) { s_2785073695.data[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})})}; }    }
    
    data_2785073696[data_2785073696_Idx][chckIndx(h_2785073699, 0, (data_2785073696[data_2785073696_Idx]).length - 1)].Field1 = nimCopy(data_2785073696[data_2785073696_Idx][chckIndx(h_2785073699, 0, (data_2785073696[data_2785073696_Idx]).length - 1)].Field1, key_2785073697, NTI2868903969);
    data_2785073696[data_2785073696_Idx][chckIndx(h_2785073699, 0, (data_2785073696[data_2785073696_Idx]).length - 1)].Field0 = hc_2785073698;

  
}

function enlarge_2785072850(s_2785072852) {
    var n_2785072854 = [];
    n_2785072854 = new Array(chckRange(mulInt((s_2785072852.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2785072852.data).length, 2), 0, 2147483647) ; ++i) { n_2785072854[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})})}; }    var Temporary1 = s_2785072852.data; s_2785072852.data = n_2785072854; n_2785072854 = Temporary1;    Label2: {
      var i_2785072952 = 0;
      var colontmp__2734686832 = 0;
      colontmp__2734686832 = (n_2785072854).length - 1;
      var res_2734686833 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686833 <= colontmp__2734686832)) break Label4;
            i_2785072952 = res_2734686833;
            if (isFilled_1862271015(n_2785072854[chckIndx(i_2785072952, 0, (n_2785072854).length - 1)].Field0)) {
            var j_2785073528 = subInt(-1, rawGetKnownHC_2785073193(s_2785072852, n_2785072854[chckIndx(i_2785072952, 0, (n_2785072854).length - 1)].Field1, n_2785072854[chckIndx(i_2785072952, 0, (n_2785072854).length - 1)].Field0));
            rawInsert_2785073693(s_2785072852, s_2785072852, "data", n_2785072854[chckIndx(i_2785072952, 0, (n_2785072854).length - 1)].Field1, n_2785072854[chckIndx(i_2785072952, 0, (n_2785072854).length - 1)].Field0, j_2785073528);
            }
            
            res_2734686833 = addInt(res_2734686833, 1);
          }
      };
    };

  
}

function incl_2785072471(s_2785072473, key_2785072474) {
    if (((s_2785072473.data).length == 0)) {
    var correctSizeHEX60gensym387_2785072557 = slotsNeeded_1862271026(64);
    s_2785072473.counter = 0;
    s_2785072473.data = new Array(chckRange(correctSizeHEX60gensym387_2785072557, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym387_2785072557, 0, 2147483647) ; ++i) { s_2785072473.data[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})})}; }    }
    
    var hc_2785072572 = [0];
    var index_2785072586 = rawGet_2785071328(s_2785072473, key_2785072474, hc_2785072572, 0);
    if ((index_2785072586 < 0)) {
    if (mustRehash_2785072587(s_2785072473)) {
    enlarge_2785072850(s_2785072473);
    index_2785072586 = rawGetKnownHC_2785073193(s_2785072473, key_2785072474, hc_2785072572[0]);
    }
    
    rawInsert_2785073693(s_2785072473, s_2785072473, "data", key_2785072474, hc_2785072572[0], subInt(-1, index_2785072586));
    s_2785072473.counter = addInt(s_2785072473.counter, 1);
    }
    

  
}

function del_2785074049(t_2785074052, key_2785074053) {
    var hc_2785074054 = [0];
    var i_2785074061 = rawGet_2785068929(t_2785074052, key_2785074053, hc_2785074054, 0);
    var mskHEX60gensym36_2785074065 = (t_2785074052.data).length - 1;
    if ((0 <= i_2785074061)) {
    t_2785074052.counter = subInt(t_2785074052.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785074072 = i_2785074061;
            var rHEX60gensym36_2785074073 = jHEX60gensym36_2785074072;
            t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field0 = 0;
            t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field1 = nimCopy(t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field1, ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), NTI2868903969);
            t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785074061 = (addInt(i_2785074061, 1) & mskHEX60gensym36_2785074065);
                  if (isEmpty_1342177309(t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785074073 = (t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)].Field0 & mskHEX60gensym36_2785074065);
                  if (!(((((rHEX60gensym36_2785074073 <= i_2785074061) && (jHEX60gensym36_2785074072 < rHEX60gensym36_2785074073)) || ((jHEX60gensym36_2785074072 < rHEX60gensym36_2785074073) && (i_2785074061 < jHEX60gensym36_2785074072))) || ((i_2785074061 < jHEX60gensym36_2785074072) && (rHEX60gensym36_2785074073 <= i_2785074061))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785074052.data[chckIndx(jHEX60gensym36_2785074072, 0, (t_2785074052.data).length - 1)] = nimCopy(t_2785074052.data[chckIndx(jHEX60gensym36_2785074072, 0, (t_2785074052.data).length - 1)], t_2785074052.data[chckIndx(i_2785074061, 0, (t_2785074052.data).length - 1)], NTI2785018897);
          }
      };
    };
    }
    

  
}

function remove_2785074808(L_2785074810, n_2785074811) {
    if ((n_2785074811 == L_2785074810.tail)) {
    L_2785074810.tail = n_2785074811.prev;
    }
    
    if ((n_2785074811 == L_2785074810.head)) {
    L_2785074810.head = n_2785074811.next;
    }
    
    if (!((n_2785074811.next == null))) {
    n_2785074811.next.prev = n_2785074811.prev;
    }
    
    if (!((n_2785074811.prev == null))) {
    n_2785074811.prev.next = n_2785074811.next;
    }
    

  
}

function resize_2785072281(cache_2785072284) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785072284.capacity < len_2785072363(cache_2785072284))) break Label2;
          var t_2785072451 = cache_2785072284.list.tail;
          if (cache_2785072284.recordRemovedKeys) {
          incl_2785072471(cache_2785072284.removedKeys, t_2785072451.value.key);
          }
          
          del_2785074049(cache_2785072284.table, t_2785072451.value.key);
          remove_2785074808(cache_2785072284.list, t_2785072451);
        }
    };

  
}

function addNewNode_2785069400(cache_2785069403, key_2785069404, val_2785069405) {
    var node_2785069426 = newDoublyLinkedNode_2785069408({key: nimCopy(null, key_2785069404, NTI2868903969), val: nimCopy(null, val_2785069405, NTI33554449)});
    HEX5BHEX5DHEX3D_2785069490(cache_2785069403.table, key_2785069404, node_2785069426);
    prepend_2785071097(cache_2785069403.list, node_2785069426);
    if (cache_2785069403.recordRemovedKeys) {
    excl_2785071307(cache_2785069403.removedKeys, key_2785069404);
    }
    
    resize_2785072281(cache_2785069403);

  
}

function HEX5BHEX5DHEX3D_2785068824(cache_2785068827, key_2785068828, val_2785068829) {
    var node_2785069373 = getOrDefault_2785068919(cache_2785068827.table, key_2785068828, null);
    if ((node_2785069373 == null)) {
    addNewNode_2785069400(cache_2785068827, key_2785068828, val_2785068829);
    }
    else {
      node_2785069373.value.val = nimCopy(null, val_2785068829, NTI33554449);
      remove_2785074808(cache_2785068827.list, node_2785069373);
      prepend_2785071097(cache_2785068827.list, node_2785069373);
    }
    

  
}

function initDoublyLinkedList_2785075255() {
  var result_2785075257 = ({head: null, tail: null});

  return result_2785075257;

}

function initTable_2785075261(initialSize_2785075264) {
  var result_2785075265 = ({data: [], counter: 0});

    var correctSizeHEX60gensym395_2785075267 = slotsNeeded_1342177323(chckRange(initialSize_2785075264, 0, 2147483647));
    result_2785075265.counter = 0;
    result_2785075265.data = new Array(chckRange(correctSizeHEX60gensym395_2785075267, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym395_2785075267, 0, 2147483647) ; ++i) { result_2785075265.data[i] = {Field0: 0, Field1: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), Field2: null}; }
  return result_2785075265;

}

function newLruCache_2785075245(capacity_2785075248, recordRemovedKeys_2785075249) {
  var result_2785075250 = null;

    result_2785075250 = {capacity: capacity_2785075248, list: initDoublyLinkedList_2785075255(), table: initTable_2785075261(correctSize_2818572309(capacity_2785075248)), recordRemovedKeys: recordRemovedKeys_2785075249, removedKeys: ({data: [], counter: 0})};

  return result_2785075250;

}

function newCache_2785075240(capacity_2785075243) {
  var result_2785075244 = null;

    result_2785075244 = newLruCache_2785075245(capacity_2785075243, false);

  return result_2785075244;

}

function init_2785075235(result_2785075238, result_2785075238_Idx, capacity_2785075239) {
    result_2785075238[result_2785075238_Idx] = newCache_2785075240(capacity_2785075239);

  
}

function mustRehash_2785075988(t_2785075990) {
  var result_2785075991 = false;

    if (!((t_2785075990.counter < (t_2785075990.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785075991 = ((mulInt((t_2785075990.data).length, 2) < mulInt(t_2785075990.counter, 3)) || (subInt((t_2785075990.data).length, t_2785075990.counter) < 4));

  return result_2785075991;

}

function rawInsert_2785076681(t_2785076685, data_2785076686, data_2785076686_Idx, key_2785076687, val_2785076688, hc_2785076689, h_2785076690) {
    data_2785076686[data_2785076686_Idx][chckIndx(h_2785076690, 0, (data_2785076686[data_2785076686_Idx]).length - 1)].Field1 = key_2785076687;
    data_2785076686[data_2785076686_Idx][chckIndx(h_2785076690, 0, (data_2785076686[data_2785076686_Idx]).length - 1)].Field2 = val_2785076688;
    data_2785076686[data_2785076686_Idx][chckIndx(h_2785076690, 0, (data_2785076686[data_2785076686_Idx]).length - 1)].Field0 = hc_2785076689;

  
}

function enlarge_2785076245(t_2785076248) {
    var n_2785076251 = [];
    n_2785076251 = new Array(chckRange(mulInt((t_2785076248.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785076248.data).length, 2), 0, 2147483647) ; ++i) { n_2785076251[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2785076248.data; t_2785076248.data = n_2785076251; n_2785076251 = Temporary1;    Label2: {
      var i_2785076349 = 0;
      var colontmp__2734686840 = 0;
      colontmp__2734686840 = (n_2785076251).length - 1;
      var res_2734686841 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2734686841 <= colontmp__2734686840)) break Label4;
            i_2785076349 = res_2734686841;
            var eh_2785076430 = n_2785076251[chckIndx(i_2785076349, 0, (n_2785076251).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785076430)) {
            var j_2785076434 = (eh_2785076430 & (t_2785076248.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785076248.data[chckIndx(j_2785076434, 0, (t_2785076248.data).length - 1)].Field0)) break Label6;
                  j_2785076434 = nextTry_1342177315(j_2785076434, (t_2785076248.data).length - 1);
                }
            };
            rawInsert_2785076681(t_2785076248, t_2785076248, "data", n_2785076251[chckIndx(i_2785076349, 0, (n_2785076251).length - 1)].Field1, n_2785076251[chckIndx(i_2785076349, 0, (n_2785076251).length - 1)].Field2, eh_2785076430, j_2785076434);
            }
            
            res_2734686841 = addInt(res_2734686841, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785076940(t_2785076943, key_2785076944, hc_2785076945) {
  var result_2785076946 = 0;

  BeforeRet: {
    if (((t_2785076943.data).length == 0)) {
    result_2785076946 = -1;
    break BeforeRet;
    }
    
    var h_2785077031 = (hc_2785076945 & (t_2785076943.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785076943.data[chckIndx(h_2785077031, 0, (t_2785076943.data).length - 1)].Field0)) break Label2;
          if (((t_2785076943.data[chckIndx(h_2785077031, 0, (t_2785076943.data).length - 1)].Field0 == hc_2785076945) && (t_2785076943.data[chckIndx(h_2785077031, 0, (t_2785076943.data).length - 1)].Field1 == key_2785076944))) {
          result_2785076946 = h_2785077031;
          break BeforeRet;
          }
          
          h_2785077031 = nextTry_1342177315(h_2785077031, (t_2785076943.data).length - 1);
        }
    };
    result_2785076946 = subInt(-1, h_2785077031);
  };

  return result_2785076946;

}

function HEX5BHEX5DHEX3D_2785075369(t_2785075372, key_2785075373, val_2785075374) {
    if (((t_2785075372.data).length == 0)) {
    var correctSizeHEX60gensym398_2785075458 = slotsNeeded_1342177323(32);
    t_2785075372.counter = 0;
    t_2785075372.data = new Array(chckRange(correctSizeHEX60gensym398_2785075458, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym398_2785075458, 0, 2147483647) ; ++i) { t_2785075372.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2785075463 = [0];
    var index_2785075820 = rawGet_2785075464(t_2785075372, key_2785075373, hc_2785075463, 0);
    if ((0 <= index_2785075820)) {
    t_2785075372.data[chckIndx(index_2785075820, 0, (t_2785075372.data).length - 1)].Field2 = val_2785075374;
    }
    else {
      if (((t_2785075372.data).length == 0)) {
      var correctSizeHEX60gensym403_2785075983 = slotsNeeded_1342177323(32);
      t_2785075372.counter = 0;
      t_2785075372.data = new Array(chckRange(correctSizeHEX60gensym403_2785075983, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_2785075983, 0, 2147483647) ; ++i) { t_2785075372.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2785075988(t_2785075372)) {
      enlarge_2785076245(t_2785075372);
      index_2785075820 = rawGetKnownHC_2785076940(t_2785075372, key_2785075373, hc_2785075463[0]);
      }
      
      index_2785075820 = subInt(-1, index_2785075820);
      rawInsert_2785076681(t_2785075372, t_2785075372, "data", key_2785075373, val_2785075374, hc_2785075463[0], index_2785075820);
      t_2785075372.counter = addInt(t_2785075372.counter, 1);
    }
    

  
}

function formatValue_2785129191(result_2785129193, result_2785129193_Idx, value_2785129194, specifier_2785129195) {
    formatValue_738197675(result_2785129193, result_2785129193_Idx, HEX24_2801805920(value_2785129194), specifier_2785129195);

  
}

function getAstNode_2785079640(ctxHEX60gensym82_2785079641, idHEX60gensym82_2785079642) {
  var result_2785079644 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym82_2785079645 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym82_2785079642, NTI2298478595), Field1: 0}, NTI2801795097);
    if (contains_2785018881(ctxHEX60gensym82_2785079641.itemsAstNode, itemHEX60gensym82_2785079645)) {
    result_2785079644 = nimCopy(result_2785079644, some_2768240866(HEX5BHEX5D_2785019448(ctxHEX60gensym82_2785079641.itemsAstNode, itemHEX60gensym82_2785079645)), NTI2768240759);
    break BeforeRet;
    }
    
    result_2785079644 = nimCopy(result_2785079644, none_2768240844(), NTI2768240759);
    break BeforeRet;
  };

  return result_2785079644;

}

function recoverValue_2785018751(ctx_2785018752, key_2785018753) {
      var Temporary1;

    var fmtRes_2785129190 = [mnewString(0)];
    fmtRes_2785129190[0].push.apply(fmtRes_2785129190[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_2785129191(fmtRes_2785129190, 0, key_2785018753, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785129190[0], NTI33554449)]);
      var oHEX60gensym609_2785129201 = getAstNode_2785079640(ctx_2785018752, key_2785018753.Field0.Field0);
      if (!isSome_2768242522(oHEX60gensym609_2785129201)) Temporary1 = false; else {        var node_2785129247 = get_2768242542(oHEX60gensym609_2785129201);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2785026936(ctx_2785018752.queryCacheValue, node_2785129247, errorValue_2868904593());
    }
    

  
}

function recoverType_2785018754(ctx_2785018755, key_2785018756) {
      var Temporary1;

    var fmtRes_2785129324 = [mnewString(0)];
    fmtRes_2785129324[0].push.apply(fmtRes_2785129324[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_2785129191(fmtRes_2785129324, 0, key_2785018756, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785129324[0], NTI33554449)]);
      var oHEX60gensym611_2785129332 = getAstNode_2785079640(ctx_2785018755, key_2785018756.Field0.Field0);
      if (!isSome_2768242522(oHEX60gensym611_2785129332)) Temporary1 = false; else {        var node_2785129378 = get_2768242542(oHEX60gensym611_2785129332);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2785020219(ctx_2785018755.queryCacheType, node_2785129378, errorType_2868904282());
    }
    

  
}

function recoverSymbol_2785018757(ctx_2785018758, key_2785018759) {
      var Temporary1;

    var fmtRes_2785129455 = [mnewString(0)];
    fmtRes_2785129455[0].push.apply(fmtRes_2785129455[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_2785129191(fmtRes_2785129455, 0, key_2785018759, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785129455[0], NTI33554449)]);
      var oHEX60gensym613_2785129463 = getAstNode_2785079640(ctx_2785018758, key_2785018759.Field0.Field0);
      if (!isSome_2768242522(oHEX60gensym613_2785129463)) Temporary1 = false; else {        var node_2785129509 = get_2768242542(oHEX60gensym613_2785129463);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2785031206(ctx_2785018758.queryCacheSymbol, node_2785129509, none_2785092474());
    }
    

  
}

function recoverSymbols_2785018760(ctx_2785018761, key_2785018762) {
      var Temporary1;

    var fmtRes_2785129588 = [mnewString(0)];
    fmtRes_2785129588[0].push.apply(fmtRes_2785129588[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_2785129191(fmtRes_2785129588, 0, key_2785018762, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785129588[0], NTI33554449)]);
      var oHEX60gensym615_2785129596 = getAstNode_2785079640(ctx_2785018761, key_2785018762.Field0.Field0);
      if (!isSome_2768242522(oHEX60gensym615_2785129596)) Temporary1 = false; else {        var node_2785129642 = get_2768242542(oHEX60gensym615_2785129596);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2785035468(ctx_2785018761.queryCacheSymbols, node_2785129642, newTable_2785129706(32));
    }
    

  
}

function initDoublyLinkedList_2785077575() {
  var result_2785077577 = ({head: null, tail: null});

  return result_2785077577;

}

function initTable_2785077581(initialSize_2785077584) {
  var result_2785077585 = ({data: [], counter: 0});

    var correctSizeHEX60gensym411_2785077587 = slotsNeeded_1342177323(chckRange(initialSize_2785077584, 0, 2147483647));
    result_2785077585.counter = 0;
    result_2785077585.data = new Array(chckRange(correctSizeHEX60gensym411_2785077587, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym411_2785077587, 0, 2147483647) ; ++i) { result_2785077585.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }
  return result_2785077585;

}

function newLruCache_2785077565(capacity_2785077568, recordRemovedKeys_2785077569) {
  var result_2785077570 = null;

    result_2785077570 = {capacity: capacity_2785077568, list: initDoublyLinkedList_2785077575(), table: initTable_2785077581(correctSize_2818572309(capacity_2785077568)), recordRemovedKeys: recordRemovedKeys_2785077569, removedKeys: ({data: [], counter: 0})};

  return result_2785077570;

}

function newCache_2785077560(capacity_2785077563) {
  var result_2785077564 = null;

    result_2785077564 = newLruCache_2785077565(capacity_2785077563, false);

  return result_2785077564;

}

function init_2785077555(result_2785077558, result_2785077558_Idx, capacity_2785077559) {
    result_2785077558[result_2785077558_Idx] = newCache_2785077560(capacity_2785077559);

  
}

function initDoublyLinkedList_2785077673() {
  var result_2785077675 = ({head: null, tail: null});

  return result_2785077675;

}

function initTable_2785077679(initialSize_2785077682) {
  var result_2785077683 = ({data: [], counter: 0});

    var correctSizeHEX60gensym413_2785077685 = slotsNeeded_1342177323(chckRange(initialSize_2785077682, 0, 2147483647));
    result_2785077683.counter = 0;
    result_2785077683.data = new Array(chckRange(correctSizeHEX60gensym413_2785077685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym413_2785077685, 0, 2147483647) ; ++i) { result_2785077683.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }
  return result_2785077683;

}

function newLruCache_2785077663(capacity_2785077666, recordRemovedKeys_2785077667) {
  var result_2785077668 = null;

    result_2785077668 = {capacity: capacity_2785077666, list: initDoublyLinkedList_2785077673(), table: initTable_2785077679(correctSize_2818572309(capacity_2785077666)), recordRemovedKeys: recordRemovedKeys_2785077667, removedKeys: ({data: [], counter: 0})};

  return result_2785077668;

}

function newCache_2785077658(capacity_2785077661) {
  var result_2785077662 = null;

    result_2785077662 = newLruCache_2785077663(capacity_2785077661, false);

  return result_2785077662;

}

function init_2785077653(result_2785077656, result_2785077656_Idx, capacity_2785077657) {
    result_2785077656[result_2785077656_Idx] = newCache_2785077658(capacity_2785077657);

  
}

function initDoublyLinkedList_2785077771() {
  var result_2785077773 = ({head: null, tail: null});

  return result_2785077773;

}

function initTable_2785077777(initialSize_2785077780) {
  var result_2785077781 = ({data: [], counter: 0});

    var correctSizeHEX60gensym415_2785077783 = slotsNeeded_1342177323(chckRange(initialSize_2785077780, 0, 2147483647));
    result_2785077781.counter = 0;
    result_2785077781.data = new Array(chckRange(correctSizeHEX60gensym415_2785077783, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_2785077783, 0, 2147483647) ; ++i) { result_2785077781.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }
  return result_2785077781;

}

function newLruCache_2785077761(capacity_2785077764, recordRemovedKeys_2785077765) {
  var result_2785077766 = null;

    result_2785077766 = {capacity: capacity_2785077764, list: initDoublyLinkedList_2785077771(), table: initTable_2785077777(correctSize_2818572309(capacity_2785077764)), recordRemovedKeys: recordRemovedKeys_2785077765, removedKeys: ({data: [], counter: 0})};

  return result_2785077766;

}

function newCache_2785077756(capacity_2785077759) {
  var result_2785077760 = null;

    result_2785077760 = newLruCache_2785077761(capacity_2785077759, false);

  return result_2785077760;

}

function init_2785077751(result_2785077754, result_2785077754_Idx, capacity_2785077755) {
    result_2785077754[result_2785077754_Idx] = newCache_2785077756(capacity_2785077755);

  
}

function initDoublyLinkedList_2785077869() {
  var result_2785077871 = ({head: null, tail: null});

  return result_2785077871;

}

function initTable_2785077875(initialSize_2785077878) {
  var result_2785077879 = ({data: [], counter: 0});

    var correctSizeHEX60gensym417_2785077881 = slotsNeeded_1342177323(chckRange(initialSize_2785077878, 0, 2147483647));
    result_2785077879.counter = 0;
    result_2785077879.data = new Array(chckRange(correctSizeHEX60gensym417_2785077881, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym417_2785077881, 0, 2147483647) ; ++i) { result_2785077879.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }
  return result_2785077879;

}

function newLruCache_2785077859(capacity_2785077862, recordRemovedKeys_2785077863) {
  var result_2785077864 = null;

    result_2785077864 = {capacity: capacity_2785077862, list: initDoublyLinkedList_2785077869(), table: initTable_2785077875(correctSize_2818572309(capacity_2785077862)), recordRemovedKeys: recordRemovedKeys_2785077863, removedKeys: ({data: [], counter: 0})};

  return result_2785077864;

}

function newCache_2785077854(capacity_2785077857) {
  var result_2785077858 = null;

    result_2785077858 = newLruCache_2785077859(capacity_2785077857, false);

  return result_2785077858;

}

function init_2785077849(result_2785077852, result_2785077852_Idx, capacity_2785077853) {
    result_2785077852[result_2785077852_Idx] = newCache_2785077854(capacity_2785077853);

  
}

function initDoublyLinkedList_2785077967() {
  var result_2785077969 = ({head: null, tail: null});

  return result_2785077969;

}

function initTable_2785077973(initialSize_2785077976) {
  var result_2785077977 = ({data: [], counter: 0});

    var correctSizeHEX60gensym419_2785077979 = slotsNeeded_1342177323(chckRange(initialSize_2785077976, 0, 2147483647));
    result_2785077977.counter = 0;
    result_2785077977.data = new Array(chckRange(correctSizeHEX60gensym419_2785077979, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym419_2785077979, 0, 2147483647) ; ++i) { result_2785077977.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }
  return result_2785077977;

}

function newLruCache_2785077957(capacity_2785077960, recordRemovedKeys_2785077961) {
  var result_2785077962 = null;

    result_2785077962 = {capacity: capacity_2785077960, list: initDoublyLinkedList_2785077967(), table: initTable_2785077973(correctSize_2818572309(capacity_2785077960)), recordRemovedKeys: recordRemovedKeys_2785077961, removedKeys: ({data: [], counter: 0})};

  return result_2785077962;

}

function newCache_2785077952(capacity_2785077955) {
  var result_2785077956 = null;

    result_2785077956 = newLruCache_2785077957(capacity_2785077955, false);

  return result_2785077956;

}

function init_2785077947(result_2785077950, result_2785077950_Idx, capacity_2785077951) {
    result_2785077950[result_2785077950_Idx] = newCache_2785077952(capacity_2785077951);

  
}

function initTable_2785078022(initialSize_2785078025) {
  var result_2785078026 = ({data: [], counter: 0});

    var correctSizeHEX60gensym423_2785078028 = slotsNeeded_1342177323(chckRange(initialSize_2785078025, 0, 2147483647));
    result_2785078026.counter = 0;
    result_2785078026.data = new Array(chckRange(correctSizeHEX60gensym423_2785078028, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym423_2785078028, 0, 2147483647) ; ++i) { result_2785078026.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_2785078026;

}

function initTable_2785078042(initialSize_2785078045) {
  var result_2785078046 = ({data: [], counter: 0});

    var correctSizeHEX60gensym425_2785078048 = slotsNeeded_1342177323(chckRange(initialSize_2785078045, 0, 2147483647));
    result_2785078046.counter = 0;
    result_2785078046.data = new Array(chckRange(correctSizeHEX60gensym425_2785078048, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym425_2785078048, 0, 2147483647) ; ++i) { result_2785078046.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({id: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_2785078046;

}

function newContext_2785018793() {
    
function HEX3Aanonymous_2785018802(itemHEX60gensym31_2785018803) {
      var result_2785018804 = [];

      BeforeRet: {
        if (!(contains_2785018881(ctx_2785018041.itemsAstNode, itemHEX60gensym31_2785018803))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_2801795284(itemHEX60gensym31_2785018803) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsType.forcedCalls = addInt(ctx_2785018041.statsType.forcedCalls, 1);
        var argHEX60gensym31_2785020154 = HEX5BHEX5D_2785019448(ctx_2785018041.itemsAstNode, itemHEX60gensym31_2785018803);
        var valueHEX60gensym31_2785020155 = computeTypeImpl_2785018763(ctx_2785018041, argHEX60gensym31_2785020154);
        HEX5BHEX5DHEX3D_2785020219(ctx_2785018041.queryCacheType, argHEX60gensym31_2785020154, valueHEX60gensym31_2785020155);
        result_2785018804 = nimCopy(null, fingerprint_2868904508(valueHEX60gensym31_2785020155), NTI2801795096);
        break BeforeRet;
      };

      return result_2785018804;

    }
    
function HEX3Aanonymous_2785026697(itemHEX60gensym32_2785026698) {
      var result_2785026699 = [];

      BeforeRet: {
        if (!(contains_2785018881(ctx_2785018041.itemsAstNode, itemHEX60gensym32_2785026698))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_2801795284(itemHEX60gensym32_2785026698) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsValue.forcedCalls = addInt(ctx_2785018041.statsValue.forcedCalls, 1);
        var argHEX60gensym32_2785026871 = HEX5BHEX5D_2785019448(ctx_2785018041.itemsAstNode, itemHEX60gensym32_2785026698);
        var valueHEX60gensym32_2785026872 = computeValueImpl_2785018766(ctx_2785018041, argHEX60gensym32_2785026871);
        HEX5BHEX5DHEX3D_2785026936(ctx_2785018041.queryCacheValue, argHEX60gensym32_2785026871, valueHEX60gensym32_2785026872);
        result_2785026699 = nimCopy(null, fingerprint_2868904689(valueHEX60gensym32_2785026872), NTI2801795096);
        break BeforeRet;
      };

      return result_2785026699;

    }
    
function HEX3Aanonymous_2785030966(itemHEX60gensym33_2785030967) {
      var result_2785030968 = [];

      BeforeRet: {
        if (!(contains_2785018881(ctx_2785018041.itemsAstNode, itemHEX60gensym33_2785030967))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2801795284(itemHEX60gensym33_2785030967) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsSymbol.forcedCalls = addInt(ctx_2785018041.statsSymbol.forcedCalls, 1);
        var argHEX60gensym33_2785031140 = HEX5BHEX5D_2785019448(ctx_2785018041.itemsAstNode, itemHEX60gensym33_2785030967);
        var valueHEX60gensym33_2785031142 = computeSymbolImpl_2785018769(ctx_2785018041, argHEX60gensym33_2785031140);
        HEX5BHEX5DHEX3D_2785031206(ctx_2785018041.queryCacheSymbol, argHEX60gensym33_2785031140, valueHEX60gensym33_2785031142);
        result_2785030968 = nimCopy(null, fingerprint_2868905481(valueHEX60gensym33_2785031142), NTI2801795096);
        break BeforeRet;
      };

      return result_2785030968;

    }
    
function HEX3Aanonymous_2785035227(itemHEX60gensym34_2785035228) {
      var result_2785035229 = [];

      BeforeRet: {
        if (!(contains_2785018881(ctx_2785018041.itemsAstNode, itemHEX60gensym34_2785035228))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2801795284(itemHEX60gensym34_2785035228) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsSymbols.forcedCalls = addInt(ctx_2785018041.statsSymbols.forcedCalls, 1);
        var argHEX60gensym34_2785035401 = HEX5BHEX5D_2785019448(ctx_2785018041.itemsAstNode, itemHEX60gensym34_2785035228);
        var valueHEX60gensym34_2785035404 = computeSymbolsImpl_2785018773(ctx_2785018041, argHEX60gensym34_2785035401);
        HEX5BHEX5DHEX3D_2785035468(ctx_2785018041.queryCacheSymbols, argHEX60gensym34_2785035401, valueHEX60gensym34_2785035404);
        result_2785035229 = nimCopy(null, fingerprint_2868905142(valueHEX60gensym34_2785035404), NTI2801795096);
        break BeforeRet;
      };

      return result_2785035229;

    }
    
function HEX3Aanonymous_2785039489(itemHEX60gensym35_2785039490) {
      var result_2785039491 = [];

      BeforeRet: {
        if (!(contains_2785039568(ctx_2785018041.itemsSymbol, itemHEX60gensym35_2785039490))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_2801795284(itemHEX60gensym35_2785039490) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsSymbolType.forcedCalls = addInt(ctx_2785018041.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym35_2785040826 = HEX5BHEX5D_2785040121(ctx_2785018041.itemsSymbol, itemHEX60gensym35_2785039490);
        var valueHEX60gensym35_2785040827 = computeSymbolTypeImpl_2785018778(ctx_2785018041, argHEX60gensym35_2785040826);
        HEX5BHEX5DHEX3D_2785040891(ctx_2785018041.queryCacheSymbolType, argHEX60gensym35_2785040826, valueHEX60gensym35_2785040827);
        result_2785039491 = nimCopy(null, fingerprint_2868904508(valueHEX60gensym35_2785040827), NTI2801795096);
        break BeforeRet;
      };

      return result_2785039491;

    }
    
function HEX3Aanonymous_2785047362(itemHEX60gensym36_2785047363) {
      var result_2785047364 = [];

      BeforeRet: {
        if (!(contains_2785039568(ctx_2785018041.itemsSymbol, itemHEX60gensym36_2785047363))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_2801795284(itemHEX60gensym36_2785047363) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsSymbolValue.forcedCalls = addInt(ctx_2785018041.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym36_2785047536 = HEX5BHEX5D_2785040121(ctx_2785018041.itemsSymbol, itemHEX60gensym36_2785047363);
        var valueHEX60gensym36_2785047537 = computeSymbolValueImpl_2785018781(ctx_2785018041, argHEX60gensym36_2785047536);
        HEX5BHEX5DHEX3D_2785047601(ctx_2785018041.queryCacheSymbolValue, argHEX60gensym36_2785047536, valueHEX60gensym36_2785047537);
        result_2785047364 = nimCopy(null, fingerprint_2868904689(valueHEX60gensym36_2785047537), NTI2801795096);
        break BeforeRet;
      };

      return result_2785047364;

    }
    
function HEX3Aanonymous_2785051623(itemHEX60gensym37_2785051624) {
      var result_2785051625 = [];

      BeforeRet: {
        if (!(contains_2785051702(ctx_2785018041.itemsFunctionExecutionContext, itemHEX60gensym37_2785051624))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_2801795284(itemHEX60gensym37_2785051624) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsFunctionExecution.forcedCalls = addInt(ctx_2785018041.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym37_2785052969 = HEX5BHEX5D_2785052255(ctx_2785018041.itemsFunctionExecutionContext, itemHEX60gensym37_2785051624);
        var valueHEX60gensym37_2785052970 = computeFunctionExecutionImpl_2785018784(ctx_2785018041, argHEX60gensym37_2785052969);
        HEX5BHEX5DHEX3D_2785053034(ctx_2785018041.queryCacheFunctionExecution, argHEX60gensym37_2785052969, valueHEX60gensym37_2785052970);
        result_2785051625 = nimCopy(null, [], NTI2785042582);
        break BeforeRet;
      };

      return result_2785051625;

    }
    
function HEX3Aanonymous_2785059518(itemHEX60gensym38_2785059519) {
      var result_2785059520 = [];

      BeforeRet: {
        if (!(contains_2785059597(ctx_2785018041.itemsNodeLayoutInput, itemHEX60gensym38_2785059519))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2801795284(itemHEX60gensym38_2785059519) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsNodeLayout.forcedCalls = addInt(ctx_2785018041.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym38_2785060864 = HEX5BHEX5D_2785060150(ctx_2785018041.itemsNodeLayoutInput, itemHEX60gensym38_2785059519);
        var valueHEX60gensym38_2785060865 = computeNodeLayoutImpl_2785018787(ctx_2785018041, argHEX60gensym38_2785060864);
        HEX5BHEX5DHEX3D_2785060929(ctx_2785018041.queryCacheNodeLayout, argHEX60gensym38_2785060864, valueHEX60gensym38_2785060865);
        result_2785059520 = nimCopy(null, [], NTI2785047179);
        break BeforeRet;
      };

      return result_2785059520;

    }
    
function HEX3Aanonymous_2785067413(itemHEX60gensym39_2785067414) {
      var result_2785067415 = [];

      BeforeRet: {
        if (!(contains_2785067492(ctx_2785018041.itemsRenderTextInput, itemHEX60gensym39_2785067414))) {
        raiseException({message: ([117,112,100,97,116,101,82,101,110,100,101,114,101,100,84,101,120,116,40] || []).concat(HEX24_2801795284(itemHEX60gensym39_2785067414) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2785018041.statsRenderedText.forcedCalls = addInt(ctx_2785018041.statsRenderedText.forcedCalls, 1);
        var argHEX60gensym39_2785068759 = HEX5BHEX5D_2785068045(ctx_2785018041.itemsRenderTextInput, itemHEX60gensym39_2785067414);
        var valueHEX60gensym39_2785068760 = computeRenderedTextImpl_2785018790(ctx_2785018041, argHEX60gensym39_2785068759);
        HEX5BHEX5DHEX3D_2785068824(ctx_2785018041.queryCacheRenderedText, argHEX60gensym39_2785068759, valueHEX60gensym39_2785068760);
        result_2785067415 = nimCopy(null, [], NTI2785051770);
        break BeforeRet;
      };

      return result_2785067415;

    }
    
function HEX3Aanonymous_2785075304(keyHEX60gensym40_2785075305) {
        recoverValue_2785018751(ctx_2785018041, keyHEX60gensym40_2785075305);

      
    }
    
function HEX3Aanonymous_2785077298(keyHEX60gensym41_2785077299) {
        recoverType_2785018754(ctx_2785018041, keyHEX60gensym41_2785077299);

      
    }
    
function HEX3Aanonymous_2785077374(keyHEX60gensym42_2785077375) {
        recoverSymbol_2785018757(ctx_2785018041, keyHEX60gensym42_2785077375);

      
    }
    
function HEX3Aanonymous_2785077450(keyHEX60gensym43_2785077451) {
        recoverSymbols_2785018760(ctx_2785018041, keyHEX60gensym43_2785077451);

      
    }

  var result_2785018794 = null;

  BeforeRet: {
    var ctx_2785018041 = null;
    ctx_2785018041 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsRenderTextInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheRenderedText: null, updateRenderedText: null, statsRenderedText: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_2785018041.depGraph = newDependencyGraph_2801795348();
    ctx_2785018041.dependencyStack = nimCopy(null, [], NTI2785018956);
    ctx_2785018041.updateType = HEX3Aanonymous_2785018802;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateType);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 0, [84,121,112,101]);
    init_2785026633(ctx_2785018041, "queryCacheType", 2000);
    ctx_2785018041.updateValue = HEX3Aanonymous_2785026697;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateValue);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_2785030902(ctx_2785018041, "queryCacheValue", 2000);
    ctx_2785018041.updateSymbol = HEX3Aanonymous_2785030966;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateSymbol);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_2785035163(ctx_2785018041, "queryCacheSymbol", 2000);
    ctx_2785018041.updateSymbols = HEX3Aanonymous_2785035227;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateSymbols);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_2785039425(ctx_2785018041, "queryCacheSymbols", 2000);
    ctx_2785018041.updateSymbolType = HEX3Aanonymous_2785039489;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateSymbolType);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_2785047298(ctx_2785018041, "queryCacheSymbolType", 2000);
    ctx_2785018041.updateSymbolValue = HEX3Aanonymous_2785047362;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateSymbolValue);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_2785051559(ctx_2785018041, "queryCacheSymbolValue", 2000);
    ctx_2785018041.updateFunctionExecution = HEX3Aanonymous_2785051623;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_2785059454(ctx_2785018041, "queryCacheFunctionExecution", 2000);
    ctx_2785018041.updateNodeLayout = HEX3Aanonymous_2785059518;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateNodeLayout);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_2785067349(ctx_2785018041, "queryCacheNodeLayout", 2000);
    ctx_2785018041.updateRenderedText = HEX3Aanonymous_2785067413;
    ctx_2785018041.updateFunctions.push(ctx_2785018041.updateRenderedText);;
    HEX5BHEX5DHEX3D_2801795416(ctx_2785018041.depGraph.queryNames, 8, [82,101,110,100,101,114,101,100,84,101,120,116]);
    init_2785075235(ctx_2785018041, "queryCacheRenderedText", 2000);
    HEX5BHEX5DHEX3D_2785075369(ctx_2785018041.recoveryFunctions, 1, HEX3Aanonymous_2785075304);
    HEX5BHEX5DHEX3D_2785075369(ctx_2785018041.recoveryFunctions, 0, HEX3Aanonymous_2785077298);
    HEX5BHEX5DHEX3D_2785075369(ctx_2785018041.recoveryFunctions, 2, HEX3Aanonymous_2785077374);
    HEX5BHEX5DHEX3D_2785075369(ctx_2785018041.recoveryFunctions, 3, HEX3Aanonymous_2785077450);
    init_2785077555(ctx_2785018041, "itemsAstNode", 2000);
    init_2785077653(ctx_2785018041, "itemsNodeLayoutInput", 2000);
    init_2785077751(ctx_2785018041, "itemsRenderTextInput", 2000);
    init_2785077849(ctx_2785018041, "itemsSymbol", 2000);
    init_2785077947(ctx_2785018041, "itemsFunctionExecutionContext", 2000);
    ctx_2785018041.globalScope = nimCopy(ctx_2785018041.globalScope, initTable_2785078011(32), NTI2868904881);
    ctx_2785018041.enableQueryLogging = false;
    ctx_2785018041.enableExecutionLogging = false;
    ctx_2785018041.diagnosticsPerNode = nimCopy(ctx_2785018041.diagnosticsPerNode, initTable_2785078022(32), NTI2785018245);
    ctx_2785018041.diagnosticsPerQuery = nimCopy(ctx_2785018041.diagnosticsPerQuery, initTable_2785078042(32), NTI2785018262);
    result_2785018794 = ctx_2785018041;
    break BeforeRet;
  };

  return result_2785018794;

}
var executionOutput_2734686258 = [{lines: [], scroll: 0}];
var ctx_2734686259 = newContext_2785018793();
ctx_2734686259.enableLogging = false;
ctx_2734686259.enableQueryLogging = false;

function newFunctionValue_2868904633(impl_2868904634) {
  var result_2868904635 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2868904635 = nimCopy(result_2868904635, {kind: 4, impl: impl_2868904634, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI2868903943);
    break BeforeRet;
  };

  return result_2868904635;

}

function createBinaryIntOperator_2734686844(operator_2734686848) {
    
function HEX3Aanonymous_2734686850(values_2734686851) {
        var Temporary1;
        var Temporary2;

      var result_2734686852 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2734686851).length < 2)) {
        result_2734686852 = nimCopy(result_2734686852, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        }
        
        if ((!((values_2734686851[chckIndx(0, 0, (values_2734686851).length - 1)].kind == 3)) || !((values_2734686851[chckIndx(1, 0, (values_2734686851).length - 1)].kind == 3)))) {
        result_2734686852 = nimCopy(result_2734686852, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        }
        
        var Temporary1 = values_2734686851[chckIndx(0, 0, (values_2734686851).length - 1)];
        if (ConstSet111[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
        var Temporary2 = values_2734686851[chckIndx(1, 0, (values_2734686851).length - 1)];
        if (ConstSet112[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903942)); }
        result_2734686852 = nimCopy(result_2734686852, {kind: 3, intValue: operator_2734686848(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
        break BeforeRet;
      };

      return result_2734686852;

    }

  var result_2734686849 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2734686849 = nimCopy(result_2734686849, newFunctionValue_2868904633(HEX3Aanonymous_2734686850), NTI2868903943);
    break BeforeRet;
  };

  return result_2734686849;

}

function createUnityIntOperator_2734686864(operator_2734686867) {
    
function HEX3Aanonymous_2734686869(values_2734686870) {
        var Temporary1;

      var result_2734686871 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2734686870).length < 1)) {
        result_2734686871 = nimCopy(result_2734686871, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        }
        
        var value_2734686875 = nimCopy(null, values_2734686870[chckIndx(0, 0, (values_2734686870).length - 1)], NTI2868903943);
        if (!((value_2734686875.kind == 3))) {
        result_2734686871 = nimCopy(result_2734686871, errorValue_2868904593(), NTI2868903943);
        break BeforeRet;
        }
        
        var Temporary1 = value_2734686875;
        if (ConstSet113[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
        result_2734686871 = nimCopy(result_2734686871, {kind: 3, intValue: operator_2734686867(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
        break BeforeRet;
      };

      return result_2734686871;

    }

  var result_2734686868 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2734686868 = nimCopy(result_2734686868, newFunctionValue_2868904633(HEX3Aanonymous_2734686869), NTI2868903943);
    break BeforeRet;
  };

  return result_2734686868;

}

function stringValue_2868904627(value_2868904628) {
  var result_2868904629 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2868904629 = nimCopy(result_2868904629, {kind: 2, stringValue: nimCopy(null, value_2868904628, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);

  return result_2868904629;

}

function join_2734687019(a_2734687021, sep_2734687022) {
  var result_2734687023 = [];

    result_2734687023 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2734687038 = 0;
      var x_2734687039 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2734688774 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2734688774 < (a_2734687021).length)) break Label3;
            i_2734687038 = i_2734688774;
            x_2734687039 = nimCopy(x_2734687039, a_2734687021[chckIndx(i_2734688774, 0, (a_2734687021).length - 1)], NTI2868903943);
            if ((0 < i_2734687038)) {
            result_2734687023.push.apply(result_2734687023, sep_2734687022);;
            }
            
            result_2734687023.push.apply(result_2734687023, HEX24_2868904649(x_2734687039));;
            i_2734688774 = addInt(i_2734688774, 1);
          }
      };
    };

  return result_2734687023;

}

function HEX24_872416628(x_872416631) {
  var result_872416632 = [];

    result_872416632 = nimCopy(null, HEX24_369098760(x_872416631.a), NTI33554449);
    result_872416632.push.apply(result_872416632, [32,46,46,32]);;
    result_872416632.push.apply(result_872416632, HEX24_369098760(x_872416631.b));;

  return result_872416632;

}

function addQuoted_872416620(s_872416622, s_872416622_Idx, x_872416623) {
    s_872416622[s_872416622_Idx].push.apply(s_872416622[s_872416622_Idx], HEX24_872416628(x_872416623));;

  
}

function HEX24_872416587(x_872416589) {
  var result_872416590 = [[]];

    result_872416590[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_872416601 = 0;
    if ((0 < countHEX60gensym136_872416601)) {
    result_872416590[0].push.apply(result_872416590[0], [44,32]);;
    }
    
    result_872416590[0].push.apply(result_872416590[0], [115,108,105,99,101]);;
    result_872416590[0].push.apply(result_872416590[0], [58,32]);;
    countHEX60gensym136_872416601 += 1;
    addQuoted_872416620(result_872416590, 0, x_872416589["Field0"]);
    if ((0 < countHEX60gensym136_872416601)) {
    result_872416590[0].push.apply(result_872416590[0], [44,32]);;
    }
    
    result_872416590[0].push.apply(result_872416590[0], [108,101,110]);;
    result_872416590[0].push.apply(result_872416590[0], [58,32]);;
    countHEX60gensym136_872416601 += 1;
    addQuoted_872416641(result_872416590, 0, x_872416589["Field1"]);
    result_872416590[0].push.apply(result_872416590[0], [41]);;

  return result_872416590[0];

}

function delete_2734687057(s_2734687059, s_2734687059_Idx, slice_2734687060) {
    if (!((((slice_2734687060.a < (s_2734687059[s_2734687059_Idx]).length) && (0 <= slice_2734687060.a)) && (slice_2734687060.b < (s_2734687059[s_2734687059_Idx]).length)))) {
    raiseException({message: HEX24_872416587({Field0: nimCopy(null, slice_2734687060, NTI822083608), Field1: (s_2734687059[s_2734687059_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2734687060.a <= slice_2734687060.b)) {
    var n_2734687107 = addInt(subInt(slice_2734687060.b, slice_2734687060.a), 1);
    var first_2734687108 = slice_2734687060.a;
    s_2734687059[s_2734687059_Idx].splice(first_2734687108, n_2734687107);
    }
    

  
}

function HEX2EHEX2E_822083634(a_822083637, b_822083638) {
  var result_822083639 = ({a: 0, b: 0});

    result_822083639 = nimCopy(result_822083639, {a: a_822083637, b: b_822083638}, NTI822083608);

  return result_822083639;

}

function color_2466251134(c_2466251135) {
  var result_2466251136 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2466251136 = nimCopy(result_2466251136, c_2466251135, NTI2382364675);

  return result_2466251136;

}

function addOutput_2734687040(self_2734687042, line_2734687043, color_2734687044) {
    if ((1500 <= (self_2734687042.lines).length)) {
    delete_2734687057(self_2734687042, "lines", HEX2EHEX2E_822083634(0, subInt((self_2734687042.lines).length, 1000)));
    }
    
    if ((0 < self_2734687042.scroll)) {
    self_2734687042.scroll = addInt(self_2734687042.scroll, 1);
    }
    
    self_2734687042.lines.push({Field0: nimCopy(null, line_2734687043, NTI33554449), Field1: color_2466251134(color_2734687044)});;

  
}

function typeType_2868904337() {
  var result_2868904338 = null;

    result_2868904338 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_2868904338;

}

function typeValue_2868904630(typ_2868904631) {
  var result_2868904632 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2868904632 = nimCopy(result_2868904632, {kind: 6, typ: typ_2868904631, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI2868903943);

  return result_2868904632;

}

function HEX3Aanonymous_2734686925(a_2734686926, b_2734686927) {
  var result_2734686928 = 0;

    result_2734686928 = addInt(a_2734686926, b_2734686927);

  return result_2734686928;

}

function HEX3Aanonymous_2734686930(a_2734686931, b_2734686932) {
  var result_2734686933 = 0;

    result_2734686933 = subInt(a_2734686931, b_2734686932);

  return result_2734686933;

}

function HEX3Aanonymous_2734686935(a_2734686936, b_2734686937) {
  var result_2734686938 = 0;

    result_2734686938 = mulInt(a_2734686936, b_2734686937);

  return result_2734686938;

}

function HEX3Aanonymous_2734686940(a_2734686941, b_2734686942) {
  var result_2734686943 = 0;

    result_2734686943 = divInt(a_2734686941, b_2734686942);

  return result_2734686943;

}

function HEX3Aanonymous_2734686945(a_2734686946, b_2734686947) {
  var result_2734686948 = 0;

    result_2734686948 = modInt(a_2734686946, b_2734686947);

  return result_2734686948;

}

function HEX3Aanonymous_2734686950(a_2734686951) {
  var result_2734686952 = 0;

    result_2734686952 = negInt(a_2734686951);

  return result_2734686952;

}

function HEX3Aanonymous_2734686954(a_2734686955) {
    var Temporary1;

  var result_2734686956 = 0;

    if (!((a_2734686955 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2734686956 = Temporary1;

  return result_2734686956;

}

function HEX3Aanonymous_2734686958(a_2734686959, b_2734686960) {
    var Temporary1;

  var result_2734686961 = 0;

    if ((a_2734686959 < b_2734686960)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686961 = Temporary1;

  return result_2734686961;

}

function HEX3Aanonymous_2734686963(a_2734686964, b_2734686965) {
    var Temporary1;

  var result_2734686966 = 0;

    if ((a_2734686964 <= b_2734686965)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686966 = Temporary1;

  return result_2734686966;

}

function HEX3Aanonymous_2734686968(a_2734686969, b_2734686970) {
    var Temporary1;

  var result_2734686971 = 0;

    if ((b_2734686970 < a_2734686969)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686971 = Temporary1;

  return result_2734686971;

}

function HEX3Aanonymous_2734686973(a_2734686974, b_2734686975) {
    var Temporary1;

  var result_2734686976 = 0;

    if ((b_2734686975 <= a_2734686974)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686976 = Temporary1;

  return result_2734686976;

}

function HEX3Aanonymous_2734686978(a_2734686979, b_2734686980) {
    var Temporary1;

  var result_2734686981 = 0;

    if ((a_2734686979 == b_2734686980)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686981 = Temporary1;

  return result_2734686981;

}

function HEX3Aanonymous_2734686983(a_2734686984, b_2734686985) {
    var Temporary1;

  var result_2734686986 = 0;

    if (!((a_2734686984 == b_2734686985))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686986 = Temporary1;

  return result_2734686986;

}

function HEX3Aanonymous_2734686988(a_2734686989, b_2734686990) {
    var Temporary1;

  var result_2734686991 = 0;

    if ((!((a_2734686989 == 0)) && !((b_2734686990 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686991 = Temporary1;

  return result_2734686991;

}

function HEX3Aanonymous_2734686993(a_2734686994, b_2734686995) {
    var Temporary1;

  var result_2734686996 = 0;

    if ((!((a_2734686994 == 0)) || !((b_2734686995 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2734686996 = Temporary1;

  return result_2734686996;

}

function HEX3Aanonymous_2734686998(a_2734686999, b_2734687000) {
    var Temporary1;

  var result_2734687001 = 0;

    if ((a_2734686999 < b_2734687000)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2734687000 < a_2734686999)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2734687001 = Temporary1;

  return result_2734687001;

}

function HEX3Aanonymous_2734687003(values_2734687004) {
    var Temporary1;

  var result_2734687005 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2734687004).length < 2)) {
    result_2734687005 = nimCopy(result_2734687005, errorValue_2868904593(), NTI2868903943);
    break BeforeRet;
    }
    
    var leftValue_2734687009 = nimCopy(null, values_2734687004[chckIndx(0, 0, (values_2734687004).length - 1)], NTI2868903943);
    var rightValue_2734687010 = nimCopy(null, values_2734687004[chckIndx(1, 0, (values_2734687004).length - 1)], NTI2868903943);
    if (!((leftValue_2734687009.kind == 2))) {
    result_2734687005 = nimCopy(result_2734687005, errorValue_2868904593(), NTI2868903943);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2734687009;
    if (ConstSet114[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903942)); }
    result_2734687005 = nimCopy(result_2734687005, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_2868904649(rightValue_2734687010) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI2868903943);
    break BeforeRet;
  };

  return result_2734687005;

}

function HEX3Aanonymous_2734687016(values_2734687017) {
  var result_2734687018 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2734687018 = nimCopy(result_2734687018, stringValue_2868904627(join_2734687019(values_2734687017, [])), NTI2868903943);
    addOutput_2734687040(executionOutput_2734686258[0], HEX24_2868904649(result_2734687018), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1191182436(logger_721420488[0], 2, [HEX24_2868904649(result_2734687018)]);
    result_2734687018 = nimCopy(result_2734687018, voidValue_2868904622(), NTI2868903943);
    break BeforeRet;
  };

  return result_2734687018;

}

function HEX3Aanonymous_2734687127(values_2734687130) {
  var result_2734687133 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2734687133 = nimCopy(result_2734687133, stringValue_2868904627(join_2734687019(values_2734687130, [])), NTI2868903943);

  return result_2734687133;

}
var typeAddIntInt_2734686884 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var typeSubIntInt_2734686889 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var typeMulIntInt_2734686894 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var typeDivIntInt_2734686899 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var typeModIntInt_2734686904 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var typeAddStringInt_2734686909 = newFunctionType_2868904324([stringType_2868904322(), intType_2868904320()], stringType_2868904322());
var typeNegInt_2734686914 = newFunctionType_2868904324([intType_2868904320()], intType_2868904320());
var typeNotInt_2734686919 = newFunctionType_2868904324([intType_2868904320()], intType_2868904320());
var typeFnIntIntInt_2734686924 = newFunctionType_2868904324([intType_2868904320(), intType_2868904320()], intType_2868904320());
var funcAddIntInt_2734686929 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686925);
var funcSubIntInt_2734686934 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686930);
var funcMulIntInt_2734686939 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686935);
var funcDivIntInt_2734686944 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686940);
var funcModIntInt_2734686949 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686945);
var funcNegInt_2734686953 = createUnityIntOperator_2734686864(HEX3Aanonymous_2734686950);
var funcNotInt_2734686957 = createUnityIntOperator_2734686864(HEX3Aanonymous_2734686954);
var funcLessIntInt_2734686962 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686958);
var funcLessEqualIntInt_2734686967 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686963);
var funcGreaterIntInt_2734686972 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686968);
var funcGreaterEqualIntInt_2734686977 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686973);
var funcEqualIntInt_2734686982 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686978);
var funcNotEqualIntInt_2734686987 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686983);
var funcAndIntInt_2734686992 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686988);
var funcOrIntInt_2734686997 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686993);
var funcOrderIntInt_2734687002 = createBinaryIntOperator_2734686844(HEX3Aanonymous_2734686998);
var funcAddStringInt_2734687015 = newFunctionValue_2868904633(HEX3Aanonymous_2734687003);
var funcPrintAny_2734687126 = newFunctionValue_2868904633(HEX3Aanonymous_2734687016);
var funcBuildStringAny_2734687138 = newFunctionValue_2868904633(HEX3Aanonymous_2734687127);
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdAdd_2751463427, {id: nimCopy(null, IdAdd_2751463427, NTI2298478595), name: [43], kind: 1, typ: typeAddIntInt_2734686884, value: nimCopy(null, funcAddIntInt_2734686929, NTI2868903943), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdSub_2751463428, {id: nimCopy(null, IdSub_2751463428, NTI2298478595), name: [45], kind: 1, typ: typeSubIntInt_2734686889, value: nimCopy(null, funcSubIntInt_2734686934, NTI2868903943), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdMul_2751463429, {id: nimCopy(null, IdMul_2751463429, NTI2298478595), name: [42], kind: 1, typ: typeMulIntInt_2734686894, value: nimCopy(null, funcMulIntInt_2734686939, NTI2868903943), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdDiv_2751463430, {id: nimCopy(null, IdDiv_2751463430, NTI2298478595), name: [47], kind: 1, typ: typeDivIntInt_2734686899, value: nimCopy(null, funcDivIntInt_2734686944, NTI2868903943), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdMod_2751463431, {id: nimCopy(null, IdMod_2751463431, NTI2298478595), name: [37], kind: 1, typ: typeModIntInt_2734686904, value: nimCopy(null, funcModIntInt_2734686949, NTI2868903943), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdNegate_2751463432, {id: nimCopy(null, IdNegate_2751463432, NTI2298478595), name: [45], kind: 1, typ: typeNegInt_2734686914, value: nimCopy(null, funcNegInt_2734686953, NTI2868903943), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdNot_2751463433, {id: nimCopy(null, IdNot_2751463433, NTI2298478595), name: [33], kind: 1, typ: typeNotInt_2734686919, value: nimCopy(null, funcNotInt_2734686957, NTI2868903943), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdAppendString_2751463435, {id: nimCopy(null, IdAppendString_2751463435, NTI2298478595), name: [38], kind: 1, typ: typeAddStringInt_2734686909, value: nimCopy(null, funcAddStringInt_2734687015, NTI2868903943), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdLess_2751463439, {id: nimCopy(null, IdLess_2751463439, NTI2298478595), name: [60], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcLessIntInt_2734686962, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdLessEqual_2751463440, {id: nimCopy(null, IdLessEqual_2751463440, NTI2298478595), name: [60,61], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcLessEqualIntInt_2734686967, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdGreater_2751463441, {id: nimCopy(null, IdGreater_2751463441, NTI2298478595), name: [62], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcGreaterIntInt_2734686972, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdGreaterEqual_2751463442, {id: nimCopy(null, IdGreaterEqual_2751463442, NTI2298478595), name: [62,61], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcGreaterEqualIntInt_2734686977, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdEqual_2751463443, {id: nimCopy(null, IdEqual_2751463443, NTI2298478595), name: [61,61], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcEqualIntInt_2734686982, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdNotEqual_2751463444, {id: nimCopy(null, IdNotEqual_2751463444, NTI2298478595), name: [33,61], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcNotEqualIntInt_2734686987, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdAnd_2751463445, {id: nimCopy(null, IdAnd_2751463445, NTI2298478595), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcAndIntInt_2734686992, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdOr_2751463446, {id: nimCopy(null, IdOr_2751463446, NTI2298478595), name: [111,114], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcOrIntInt_2734686997, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdOrder_2751463447, {id: nimCopy(null, IdOrder_2751463447, NTI2298478595), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2734686924, value: nimCopy(null, funcOrderIntInt_2734687002, NTI2868903943), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdInt_2751463436, {id: nimCopy(null, IdInt_2751463436, NTI2298478595), name: [105,110,116], kind: 1, typ: typeType_2868904337(), value: typeValue_2868904630(intType_2868904320()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdString_2751463437, {id: nimCopy(null, IdString_2751463437, NTI2298478595), name: [115,116,114,105,110,103], kind: 1, typ: typeType_2868904337(), value: typeValue_2868904630(stringType_2868904322()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdVoid_2751463438, {id: nimCopy(null, IdVoid_2751463438, NTI2298478595), name: [118,111,105,100], kind: 1, typ: typeType_2868904337(), value: typeValue_2868904630(voidType_2868904318()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdPrint_2751463426, {id: nimCopy(null, IdPrint_2751463426, NTI2298478595), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_2868904324([anyType_2868904339(true)], voidType_2868904318()), value: nimCopy(null, funcPrintAny_2734687126, NTI2868903943), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2785129905(ctx_2734686259.globalScope, IdBuildString_2751463448, {id: nimCopy(null, IdBuildString_2751463448, NTI2298478595), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_2868904324([anyType_2868904339(true)], stringType_2868904322()), value: nimCopy(null, funcBuildStringAny_2734687138, NTI2868903943), node: null, operatorNotation: 0, precedence: 0});
Label111: {
  var symbol_2734688679 = [null];
  var L_2734688766 = len_2785143750(ctx_2734686259.globalScope);
  Label112: {
    var h_2734688768 = 0;
    var colontmp__2734688769 = 0;
    colontmp__2734688769 = (ctx_2734686259.globalScope.data).length - 1;
    var res_2734688770 = 0;
    Label113: {
        Label114: while (true) {
        if (!(res_2734688770 <= colontmp__2734688769)) break Label114;
          h_2734688768 = res_2734688770;
          if (isFilled_1342177312(ctx_2734686259.globalScope.data[chckIndx(h_2734688768, 0, (ctx_2734686259.globalScope.data).length - 1)].Field0)) {
          symbol_2734688679[0] = ctx_2734686259.globalScope.data[chckIndx(h_2734688768, 0, (ctx_2734686259.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_2785099085(ctx_2734686259, symbol_2734688679[0]);
          if (!((len_2785143750(ctx_2734686259.globalScope) == L_2734688766))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2734688770 = addInt(res_2734688770, 1);
        }
    };
  };
};
var frameTimeSmooth_3019898897 = [0.0];

function initTable_3019898925(initialSize_3019898928) {
  var result_3019898934 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3019898936 = slotsNeeded_1342177323(chckRange(initialSize_3019898928, 0, 2147483647));
    result_3019898934.counter = 0;
    result_3019898934.data = new Array(chckRange(correctSizeHEX60gensym0_3019898936, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3019898936, 0, 2147483647) ; ++i) { result_3019898934.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3019898934;

}
var commandLineWidget_3019898921 = [null];
var mainStack_3019898922 = [null];
var viewPanel_3019898923 = [null];
var mainPanel_3019898924 = [null];
var widgetsPerEditor_3019898950 = [initTable_3019898925(32)];

function new_536870933() {
  var result_536870936 = null;

  BeforeRet: {
    var r_536870938 = null;
    r_536870938 = ({m_type: NTI3070230534, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870936 = r_536870938;
    break BeforeRet;
  };

  return result_536870936;

}

function subscribe_1325405379(event_1325405381, callback_1325405383) {
  var result_1325405384 = ({id: 0});

    result_1325405384 = nimCopy(result_1325405384, newId_2298478623(), NTI2298478595);
    event_1325405381.handlers.push({Field0: nimCopy(null, result_1325405384, NTI2298478595), Field1: callback_1325405383});;

  return result_1325405384;

}

function anyInProgress_2080376298(handlers_2080376299) {
  var result_2080376300 = false;

  BeforeRet: {
    Label1: {
      var h_2080376314 = null;
      var i_536871006 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871006 < (handlers_2080376299).length)) break Label3;
            h_2080376314 = handlers_2080376299[chckIndx(i_536871006, 0, (handlers_2080376299).length - 1)];
            if (!((h_2080376314.state == 0))) {
            result_2080376300 = true;
            break BeforeRet;
            }
            
            i_536871006 = addInt(i_536871006, 1);
          }
      };
    };
    result_2080376300 = false;
    break BeforeRet;
  };

  return result_2080376300;

}

function hash_1660947381(x_1660947383) {
  var result_1660947384 = 0;

    result_1660947384 = hashWangYi1_1358954676(x_1660947383);

  return result_1660947384;

}

function rawGet_2046820507(t_2046820510, key_2046820511, hc_2046820512, hc_2046820512_Idx) {
  var result_2046820513 = 0;

  BeforeRet: {
    hc_2046820512[hc_2046820512_Idx] = hash_1660947381(key_2046820511);
    if ((hc_2046820512[hc_2046820512_Idx] == 0)) {
    hc_2046820512[hc_2046820512_Idx] = 314159265;
    }
    
    if (((t_2046820510.data).length == 0)) {
    result_2046820513 = -1;
    break BeforeRet;
    }
    
    var h_2046820568 = (hc_2046820512[hc_2046820512_Idx] & (t_2046820510.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2046820510.data[chckIndx(h_2046820568, 0, (t_2046820510.data).length - 1)].Field0)) break Label2;
          if (((t_2046820510.data[chckIndx(h_2046820568, 0, (t_2046820510.data).length - 1)].Field0 == hc_2046820512[hc_2046820512_Idx]) && (t_2046820510.data[chckIndx(h_2046820568, 0, (t_2046820510.data).length - 1)].Field1 == key_2046820511))) {
          result_2046820513 = h_2046820568;
          break BeforeRet;
          }
          
          h_2046820568 = nextTry_1342177315(h_2046820568, (t_2046820510.data).length - 1);
        }
    };
    result_2046820513 = subInt(-1, h_2046820568);
  };

  return result_2046820513;

}

function hasKey_2046820500(t_2046820503, key_2046820504) {
  var result_2046820505 = false;

    var hc_2046820506 = [0];
    result_2046820505 = (0 <= rawGet_2046820507(t_2046820503, key_2046820504, hc_2046820506, 0));

  return result_2046820505;

}

function contains_2046820494(t_2046820497, key_2046820498) {
  var result_2046820499 = false;

  BeforeRet: {
    result_2046820499 = hasKey_2046820500(t_2046820497, key_2046820498);
    break BeforeRet;
  };

  return result_2046820499;

}

function hash_2046820980(x_2046820982) {
  var result_2046820983 = 0;

    result_2046820983 = hashWangYi1_1358954676(x_2046820982);

  return result_2046820983;

}

function hash_2046820944(x_2046820946) {
  var result_2046820947 = 0;

    Label1: {
      var it_2046820979 = 0;
      var i_536871012 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871012 <= 3)) break Label3;
            if ((x_2046820946[chckRange(i_536871012, 0, 3)] != undefined)) {
            it_2046820979 = chckRange(i_536871012, 0, 3);
            result_2046820947 = HEX21HEX26_1358954499(result_2046820947, hash_2046820980(it_2046820979));
            }
            
            i_536871012 = addInt(i_536871012, 1);
          }
      };
    };
    result_2046820947 = HEX21HEX24_1358954514(result_2046820947);

  return result_2046820947;

}

function rawGet_2046820937(t_2046820940, key_2046820941, hc_2046820942, hc_2046820942_Idx) {
  var result_2046820943 = 0;

  BeforeRet: {
    hc_2046820942[hc_2046820942_Idx] = hash_2046820944(key_2046820941);
    if ((hc_2046820942[hc_2046820942_Idx] == 0)) {
    hc_2046820942[hc_2046820942_Idx] = 314159265;
    }
    
    if (((t_2046820940.data).length == 0)) {
    result_2046820943 = -1;
    break BeforeRet;
    }
    
    var h_2046821051 = (hc_2046820942[hc_2046820942_Idx] & (t_2046820940.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2046820940.data[chckIndx(h_2046821051, 0, (t_2046820940.data).length - 1)].Field0)) break Label2;
          if (((t_2046820940.data[chckIndx(h_2046821051, 0, (t_2046820940.data).length - 1)].Field0 == hc_2046820942[hc_2046820942_Idx]) && SetEq(t_2046820940.data[chckIndx(h_2046821051, 0, (t_2046820940.data).length - 1)].Field1, key_2046820941))) {
          result_2046820943 = h_2046821051;
          break BeforeRet;
          }
          
          h_2046821051 = nextTry_1342177315(h_2046821051, (t_2046820940.data).length - 1);
        }
    };
    result_2046820943 = subInt(-1, h_2046821051);
  };

  return result_2046820943;

}

function hasKey_2046820930(t_2046820933, key_2046820934) {
  var result_2046820935 = false;

    var hc_2046820936 = [0];
    result_2046820935 = (0 <= rawGet_2046820937(t_2046820933, key_2046820934, hc_2046820936, 0));

  return result_2046820935;

}

function contains_2046820924(t_2046820927, key_2046820928) {
  var result_2046820929 = false;

  BeforeRet: {
    result_2046820929 = hasKey_2046820930(t_2046820927, key_2046820928);
    break BeforeRet;
  };

  return result_2046820929;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2046820869(key_2046820871) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2046820871) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2046820802(t_2046820805, key_2046820806) {
  var result_2046820807 = null;

    var hcHEX60gensym22_2046820808 = [0];
    var indexHEX60gensym22_2046820815 = rawGet_2046820507(t_2046820805, key_2046820806, hcHEX60gensym22_2046820808, 0);
    if ((0 <= indexHEX60gensym22_2046820815)) {
    result_2046820807 = t_2046820805.data[chckIndx(indexHEX60gensym22_2046820815, 0, (t_2046820805.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2046820869(key_2046820806);
    }
    

  return result_2046820807;

}

function addQuoted_2046821465(s_2046821467, s_2046821467_Idx, x_2046821468) {
    s_2046821467[s_2046821467_Idx].push.apply(s_2046821467[s_2046821467_Idx], reprEnum(x_2046821468, NTI2046820381));;

  
}

function collectionToString_2046821450(x_2046821452, prefix_2046821453, separator_2046821454, suffix_2046821455) {
  var result_2046821456 = [[]];

    result_2046821456[0] = nimCopy(null, prefix_2046821453, NTI33554449);
    var firstElement_2046821457 = true;
    Label1: {
      var value_2046821461 = 0;
      var i_536871015 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871015 <= 3)) break Label3;
            if ((x_2046821452[i_536871015] != undefined)) {
            value_2046821461 = i_536871015;
            if (firstElement_2046821457) {
            firstElement_2046821457 = false;
            }
            else {
            result_2046821456[0].push.apply(result_2046821456[0], separator_2046821454);;
            }
            
            addQuoted_2046821465(result_2046821456, 0, value_2046821461);
            }
            
            i_536871015 += 1;
          }
      };
    };
    result_2046821456[0].push.apply(result_2046821456[0], suffix_2046821455);;

  return result_2046821456[0];

}

function HEX24_2046821446(x_2046821448) {
  var result_2046821449 = [];

    result_2046821449 = nimCopy(null, collectionToString_2046821450(x_2046821448, [123], [44,32], [125]), NTI33554449);

  return result_2046821449;

}

function raiseKeyError_2046821415(key_2046821417) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2046821446(key_2046821417) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2046821348(t_2046821351, key_2046821352) {
  var result_2046821353 = null;
  var result_2046821353_Idx = 0;

    var hcHEX60gensym22_2046821354 = [0];
    var indexHEX60gensym22_2046821361 = rawGet_2046820937(t_2046821351, key_2046821352, hcHEX60gensym22_2046821354, 0);
    if ((0 <= indexHEX60gensym22_2046821361)) {
    result_2046821353 = t_2046821351.data[chckIndx(indexHEX60gensym22_2046821361, 0, (t_2046821351.data).length - 1)]; result_2046821353_Idx = "Field2";
    }
    else {
    raiseKeyError_2046821415(key_2046821352);
    }
    

  return [result_2046821353, result_2046821353_Idx];

}

function step_2046820446(dfa_2046820447, currentState_2046820448, currentInput_2046820449, mods_2046820450) {
    var Temporary1;

  var result_2046820451 = 0;

  BeforeRet: {
    if ((currentInput_2046820449 == 0)) {
    log_1191182436(logger_721420488[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2046820494(dfa_2046820447.states[chckIndx(currentState_2046820448, 0, (dfa_2046820447.states).length - 1)].inputs, currentInput_2046820449))) {
    result_2046820451 = 0;
    break BeforeRet;
    }
    
    if (!(contains_2046820924(HEX5BHEX5D_2046820802(dfa_2046820447.states[chckIndx(currentState_2046820448, 0, (dfa_2046820447.states).length - 1)].inputs, currentInput_2046820449).next, mods_2046820450))) {
    result_2046820451 = 0;
    break BeforeRet;
    }
    
    result_2046820451 = (Temporary1 = HEX5BHEX5D_2046821348(HEX5BHEX5D_2046820802(dfa_2046820447.states[chckIndx(currentState_2046820448, 0, (dfa_2046820447.states).length - 1)].inputs, currentInput_2046820449).next, mods_2046820450), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_2046820451;

}

function isAscii_2046820429(input_2046820430) {
  var result_2046820431 = false;

  BeforeRet: {
    if (((0 <= input_2046820430) && (input_2046820430 <= 255))) {
    result_2046820431 = true;
    break BeforeRet;
    }
    
    result_2046820431 = false;
    break BeforeRet;
  };

  return result_2046820431;

}

function newSeq_805310555(len_805310557) {
  var result_805310558 = [];

    result_805310558 = new Array(len_805310557); for (var i = 0 ; i < len_805310557 ; ++i) { result_805310558[i] = 0; }
  return result_805310558;

}

function toRunes_805310548(s_805310549) {
  var result_805310550 = [];

    result_805310550 = nimCopy(null, newSeq_805310555(0), NTI805313422);
    Label1: {
      var r_805310563 = 0;
      var i_536871049 = 0;
      var result_536871050 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871049 < (s_805310549).length)) break Label3;
            if ((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] <= 127)) {
            result_536871050 = chckRange(s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)], -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 1);
            }
            else {
            if (((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] >>> 5) == 6)) {
            if ((i_536871049 <= subInt((s_805310549).length, 2))) {
            result_536871050 = chckRange((((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] & 31) << 6) | (s_805310549[chckIndx(addInt(i_536871049, 1), 0, (s_805310549).length - 1)] & 63)), -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 2);
            }
            else {
              result_536871050 = 65533;
              i_536871049 = addInt(i_536871049, 1);
            }
            
            }
            else {
            if (((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] >>> 4) == 14)) {
            if ((i_536871049 <= subInt((s_805310549).length, 3))) {
            result_536871050 = chckRange(((((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] & 15) << 12) | ((s_805310549[chckIndx(addInt(i_536871049, 1), 0, (s_805310549).length - 1)] & 63) << 6)) | (s_805310549[chckIndx(addInt(i_536871049, 2), 0, (s_805310549).length - 1)] & 63)), -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 3);
            }
            else {
              result_536871050 = 65533;
              i_536871049 = addInt(i_536871049, 1);
            }
            
            }
            else {
            if (((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] >>> 3) == 30)) {
            if ((i_536871049 <= subInt((s_805310549).length, 4))) {
            result_536871050 = chckRange((((((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] & 7) << 18) | ((s_805310549[chckIndx(addInt(i_536871049, 1), 0, (s_805310549).length - 1)] & 63) << 12)) | ((s_805310549[chckIndx(addInt(i_536871049, 2), 0, (s_805310549).length - 1)] & 63) << 6)) | (s_805310549[chckIndx(addInt(i_536871049, 3), 0, (s_805310549).length - 1)] & 63)), -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 4);
            }
            else {
              result_536871050 = 65533;
              i_536871049 = addInt(i_536871049, 1);
            }
            
            }
            else {
            if (((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] >>> 2) == 62)) {
            if ((i_536871049 <= subInt((s_805310549).length, 5))) {
            result_536871050 = chckRange(((((((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] & 3) << 24) | ((s_805310549[chckIndx(addInt(i_536871049, 1), 0, (s_805310549).length - 1)] & 63) << 18)) | ((s_805310549[chckIndx(addInt(i_536871049, 2), 0, (s_805310549).length - 1)] & 63) << 12)) | ((s_805310549[chckIndx(addInt(i_536871049, 3), 0, (s_805310549).length - 1)] & 63) << 6)) | (s_805310549[chckIndx(addInt(i_536871049, 4), 0, (s_805310549).length - 1)] & 63)), -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 5);
            }
            else {
              result_536871050 = 65533;
              i_536871049 = addInt(i_536871049, 1);
            }
            
            }
            else {
            if (((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] >>> 1) == 126)) {
            if ((i_536871049 <= subInt((s_805310549).length, 6))) {
            result_536871050 = chckRange((((((((s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)] & 1) << 30) | ((s_805310549[chckIndx(addInt(i_536871049, 1), 0, (s_805310549).length - 1)] & 63) << 24)) | ((s_805310549[chckIndx(addInt(i_536871049, 2), 0, (s_805310549).length - 1)] & 63) << 18)) | ((s_805310549[chckIndx(addInt(i_536871049, 3), 0, (s_805310549).length - 1)] & 63) << 12)) | ((s_805310549[chckIndx(addInt(i_536871049, 4), 0, (s_805310549).length - 1)] & 63) << 6)) | (s_805310549[chckIndx(addInt(i_536871049, 5), 0, (s_805310549).length - 1)] & 63)), -2147483648, 2147483647);
            i_536871049 = addInt(i_536871049, 6);
            }
            else {
              result_536871050 = 65533;
              i_536871049 = addInt(i_536871049, 1);
            }
            
            }
            else {
              result_536871050 = chckRange(s_805310549[chckIndx(i_536871049, 0, (s_805310549).length - 1)], -2147483648, 2147483647);
              i_536871049 = addInt(i_536871049, 1);
            }
            }}}}}
            r_805310563 = result_536871050;
            result_805310550.push(r_805310563);;
          }
      };
    };

  return result_805310550;

}

function toRunes_805313799(s_805313800) {
  var result_805313801 = [];

    result_805313801 = nimCopy(null, toRunes_805310548((s_805313800.slice(0, (s_805313800).length - 1 + 1))), NTI805313414);

  return result_805313801;

}

function getInputCodeFromSpecialKey_2046821532(specialKey_2046821533) {
      var Temporary1;

  var result_2046821534 = 0;

    var runes_2046821535 = toRunes_805313799(specialKey_2046821533);
    if (((runes_2046821535).length == 1)) {
    result_2046821534 = runes_2046821535[chckIndx(0, 0, (runes_2046821535).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2046821533)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2046821543 = [mnewString(0)];
        fmtRes_2046821543[0].push.apply(fmtRes_2046821543[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_738197675(fmtRes_2046821543, 0, specialKey_2046821533, []);
        fmtRes_2046821543[0].push.apply(fmtRes_2046821543[0], [39]);;
        log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2046821543[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2046821534 = Temporary1;
    }
    

  return result_2046821534;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_805306886(s_805306887, s_805306887_Idx, c_805306888) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_805306889 = (s_805306887[s_805306887_Idx]).length;
    var iHEX60gensym58_805306891 = c_805306888;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 127)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary1 = chckRange(addInt(pos_805306889, 1), 0, 2147483647), Temporary1)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary1; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary1; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(iHEX60gensym58_805306891, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 2047)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary2 = chckRange(addInt(pos_805306889, 2), 0, 2147483647), Temporary2)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary2; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary2; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 >> 6) | 192), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 1), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 65535)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary3 = chckRange(addInt(pos_805306889, 3), 0, 2147483647), Temporary3)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary3; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary3; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 >> 12) | 224), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 1), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 6) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 2), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 2097151)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary4 = chckRange(addInt(pos_805306889, 4), 0, 2147483647), Temporary4)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary4; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary4; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 >> 18) | 240), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 1), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 12) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 2), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 6) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 3), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 67108863)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary5 = chckRange(addInt(pos_805306889, 5), 0, 2147483647), Temporary5)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary5; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary5; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 >> 24) | 248), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 1), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 18) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 2), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 12) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 3), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 6) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 4), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_805306891, 2147483647)) {
    if (s_805306887[s_805306887_Idx].length < (Temporary6 = chckRange(addInt(pos_805306889, 6), 0, 2147483647), Temporary6)) { for (var i = s_805306887[s_805306887_Idx].length; i < Temporary6; ++i) s_805306887[s_805306887_Idx].push(0); }
         else {s_805306887[s_805306887_Idx].length = Temporary6; };
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 0), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 >> 30) | 252), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 1), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 24) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 2), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 18) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 3), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 12) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 4), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange((((iHEX60gensym58_805306891 >> 6) & 63) | 128), 0, 255);
    s_805306887[s_805306887_Idx][chckIndx(addInt(pos_805306889, 5), 0, (s_805306887[s_805306887_Idx]).length - 1)] = chckRange(((iHEX60gensym58_805306891 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function mustRehash_2046822946(t_2046822948) {
  var result_2046822949 = false;

    if (!((t_2046822948.counter < (t_2046822948.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2046822949 = ((mulInt((t_2046822948.data).length, 2) < mulInt(t_2046822948.counter, 3)) || (subInt((t_2046822948.data).length, t_2046822948.counter) < 4));

  return result_2046822949;

}

function rawInsert_2046823395(t_2046823399, data_2046823400, data_2046823400_Idx, key_2046823401, val_2046823402, hc_2046823403, h_2046823404) {
    data_2046823400[data_2046823400_Idx][chckIndx(h_2046823404, 0, (data_2046823400[data_2046823400_Idx]).length - 1)].Field1 = nimCopy(data_2046823400[data_2046823400_Idx][chckIndx(h_2046823404, 0, (data_2046823400[data_2046823400_Idx]).length - 1)].Field1, key_2046823401, NTI2046820382);
    data_2046823400[data_2046823400_Idx][chckIndx(h_2046823404, 0, (data_2046823400[data_2046823400_Idx]).length - 1)].Field2 = val_2046823402;
    data_2046823400[data_2046823400_Idx][chckIndx(h_2046823404, 0, (data_2046823400[data_2046823400_Idx]).length - 1)].Field0 = hc_2046823403;

  
}

function enlarge_2046823101(t_2046823104) {
    var n_2046823107 = [];
    n_2046823107 = new Array(chckRange(mulInt((t_2046823104.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2046823104.data).length, 2), 0, 2147483647) ; ++i) { n_2046823107[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2046823104.data; t_2046823104.data = n_2046823107; n_2046823107 = Temporary1;    Label2: {
      var i_2046823171 = 0;
      var colontmp__536871054 = 0;
      colontmp__536871054 = (n_2046823107).length - 1;
      var res_536871055 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871055 <= colontmp__536871054)) break Label4;
            i_2046823171 = res_536871055;
            var eh_2046823225 = n_2046823107[chckIndx(i_2046823171, 0, (n_2046823107).length - 1)].Field0;
            if (isFilled_1342177312(eh_2046823225)) {
            var j_2046823229 = (eh_2046823225 & (t_2046823104.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2046823104.data[chckIndx(j_2046823229, 0, (t_2046823104.data).length - 1)].Field0)) break Label6;
                  j_2046823229 = nextTry_1342177315(j_2046823229, (t_2046823104.data).length - 1);
                }
            };
            rawInsert_2046823395(t_2046823104, t_2046823104, "data", n_2046823107[chckIndx(i_2046823171, 0, (n_2046823107).length - 1)].Field1, n_2046823107[chckIndx(i_2046823171, 0, (n_2046823107).length - 1)].Field2, eh_2046823225, j_2046823229);
            }
            
            res_536871055 = addInt(res_536871055, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2046823564(t_2046823567, key_2046823568, hc_2046823569) {
  var result_2046823570 = 0;

  BeforeRet: {
    if (((t_2046823567.data).length == 0)) {
    result_2046823570 = -1;
    break BeforeRet;
    }
    
    var h_2046823621 = (hc_2046823569 & (t_2046823567.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2046823567.data[chckIndx(h_2046823621, 0, (t_2046823567.data).length - 1)].Field0)) break Label2;
          if (((t_2046823567.data[chckIndx(h_2046823621, 0, (t_2046823567.data).length - 1)].Field0 == hc_2046823569) && SetEq(t_2046823567.data[chckIndx(h_2046823621, 0, (t_2046823567.data).length - 1)].Field1, key_2046823568))) {
          result_2046823570 = h_2046823621;
          break BeforeRet;
          }
          
          h_2046823621 = nextTry_1342177315(h_2046823621, (t_2046823567.data).length - 1);
        }
    };
    result_2046823570 = subInt(-1, h_2046823621);
  };

  return result_2046823570;

}

function HEX5BHEX5DHEX3D_2046822773(t_2046822776, key_2046822777, val_2046822778) {
    if (((t_2046822776.data).length == 0)) {
    var correctSizeHEX60gensym32_2046822827 = slotsNeeded_1342177323(32);
    t_2046822776.counter = 0;
    t_2046822776.data = new Array(chckRange(correctSizeHEX60gensym32_2046822827, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2046822827, 0, 2147483647) ; ++i) { t_2046822776.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2046822832 = [0];
    var index_2046822839 = rawGet_2046820937(t_2046822776, key_2046822777, hc_2046822832, 0);
    if ((0 <= index_2046822839)) {
    t_2046822776.data[chckIndx(index_2046822839, 0, (t_2046822776.data).length - 1)].Field2 = val_2046822778;
    }
    else {
      if (((t_2046822776.data).length == 0)) {
      var correctSizeHEX60gensym35_2046822941 = slotsNeeded_1342177323(32);
      t_2046822776.counter = 0;
      t_2046822776.data = new Array(chckRange(correctSizeHEX60gensym35_2046822941, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2046822941, 0, 2147483647) ; ++i) { t_2046822776.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2046822946(t_2046822776)) {
      enlarge_2046823101(t_2046822776);
      index_2046822839 = rawGetKnownHC_2046823564(t_2046822776, key_2046822777, hc_2046822832[0]);
      }
      
      index_2046822839 = subInt(-1, index_2046822839);
      rawInsert_2046823395(t_2046822776, t_2046822776, "data", key_2046822777, val_2046822778, hc_2046822832[0], index_2046822839);
      t_2046822776.counter = addInt(t_2046822776.counter, 1);
    }
    

  
}

function mustRehash_2046821810(t_2046821812) {
  var result_2046821813 = false;

    if (!((t_2046821812.counter < (t_2046821812.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2046821813 = ((mulInt((t_2046821812.data).length, 2) < mulInt(t_2046821812.counter, 3)) || (subInt((t_2046821812.data).length, t_2046821812.counter) < 4));

  return result_2046821813;

}

function rawInsert_2046822259(t_2046822263, data_2046822264, data_2046822264_Idx, key_2046822265, val_2046822266, hc_2046822267, h_2046822268) {
    data_2046822264[data_2046822264_Idx][chckIndx(h_2046822268, 0, (data_2046822264[data_2046822264_Idx]).length - 1)].Field1 = key_2046822265;
    data_2046822264[data_2046822264_Idx][chckIndx(h_2046822268, 0, (data_2046822264[data_2046822264_Idx]).length - 1)].Field2 = nimCopy(data_2046822264[data_2046822264_Idx][chckIndx(h_2046822268, 0, (data_2046822264[data_2046822264_Idx]).length - 1)].Field2, val_2046822266, NTI2046820383);
    data_2046822264[data_2046822264_Idx][chckIndx(h_2046822268, 0, (data_2046822264[data_2046822264_Idx]).length - 1)].Field0 = hc_2046822267;

  
}

function enlarge_2046821965(t_2046821968) {
    var n_2046821971 = [];
    n_2046821971 = new Array(chckRange(mulInt((t_2046821968.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2046821968.data).length, 2), 0, 2147483647) ; ++i) { n_2046821971[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2046821968.data; t_2046821968.data = n_2046821971; n_2046821971 = Temporary1;    Label2: {
      var i_2046822035 = 0;
      var colontmp__536871060 = 0;
      colontmp__536871060 = (n_2046821971).length - 1;
      var res_536871061 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871061 <= colontmp__536871060)) break Label4;
            i_2046822035 = res_536871061;
            var eh_2046822089 = n_2046821971[chckIndx(i_2046822035, 0, (n_2046821971).length - 1)].Field0;
            if (isFilled_1342177312(eh_2046822089)) {
            var j_2046822093 = (eh_2046822089 & (t_2046821968.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2046821968.data[chckIndx(j_2046822093, 0, (t_2046821968.data).length - 1)].Field0)) break Label6;
                  j_2046822093 = nextTry_1342177315(j_2046822093, (t_2046821968.data).length - 1);
                }
            };
            rawInsert_2046822259(t_2046821968, t_2046821968, "data", n_2046821971[chckIndx(i_2046822035, 0, (n_2046821971).length - 1)].Field1, n_2046821971[chckIndx(i_2046822035, 0, (n_2046821971).length - 1)].Field2, eh_2046822089, j_2046822093);
            }
            
            res_536871061 = addInt(res_536871061, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2046822437(t_2046822440, key_2046822441, hc_2046822442) {
  var result_2046822443 = 0;

  BeforeRet: {
    if (((t_2046822440.data).length == 0)) {
    result_2046822443 = -1;
    break BeforeRet;
    }
    
    var h_2046822494 = (hc_2046822442 & (t_2046822440.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2046822440.data[chckIndx(h_2046822494, 0, (t_2046822440.data).length - 1)].Field0)) break Label2;
          if (((t_2046822440.data[chckIndx(h_2046822494, 0, (t_2046822440.data).length - 1)].Field0 == hc_2046822442) && (t_2046822440.data[chckIndx(h_2046822494, 0, (t_2046822440.data).length - 1)].Field1 == key_2046822441))) {
          result_2046822443 = h_2046822494;
          break BeforeRet;
          }
          
          h_2046822494 = nextTry_1342177315(h_2046822494, (t_2046822440.data).length - 1);
        }
    };
    result_2046822443 = subInt(-1, h_2046822494);
  };

  return result_2046822443;

}

function HEX5BHEX5DHEX3D_2046821637(t_2046821640, key_2046821641, val_2046821642) {
    if (((t_2046821640.data).length == 0)) {
    var correctSizeHEX60gensym20_2046821691 = slotsNeeded_1342177323(32);
    t_2046821640.counter = 0;
    t_2046821640.data = new Array(chckRange(correctSizeHEX60gensym20_2046821691, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2046821691, 0, 2147483647) ; ++i) { t_2046821640.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2046821696 = [0];
    var index_2046821703 = rawGet_2046820507(t_2046821640, key_2046821641, hc_2046821696, 0);
    if ((0 <= index_2046821703)) {
    t_2046821640.data[chckIndx(index_2046821703, 0, (t_2046821640.data).length - 1)].Field2 = nimCopy(t_2046821640.data[chckIndx(index_2046821703, 0, (t_2046821640.data).length - 1)].Field2, val_2046821642, NTI2046820383);
    }
    else {
      if (((t_2046821640.data).length == 0)) {
      var correctSizeHEX60gensym23_2046821805 = slotsNeeded_1342177323(32);
      t_2046821640.counter = 0;
      t_2046821640.data = new Array(chckRange(correctSizeHEX60gensym23_2046821805, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2046821805, 0, 2147483647) ; ++i) { t_2046821640.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2046821810(t_2046821640)) {
      enlarge_2046821965(t_2046821640);
      index_2046821703 = rawGetKnownHC_2046822437(t_2046821640, key_2046821641, hc_2046821696[0]);
      }
      
      index_2046821703 = subInt(-1, index_2046821703);
      rawInsert_2046822259(t_2046821640, t_2046821640, "data", key_2046821641, val_2046821642, hc_2046821696[0], index_2046821703);
      t_2046821640.counter = addInt(t_2046821640.counter, 1);
    }
    

  
}

function linkState_2046821544(dfa_2046821545, dfa_2046821545_Idx, currentState_2046821546, nextState_2046821547, inputCode_2046821548, mods_2046821549) {
    if (!(contains_2046820494(dfa_2046821545[dfa_2046821545_Idx].states[chckIndx(currentState_2046821546, 0, (dfa_2046821545[dfa_2046821545_Idx].states).length - 1)].inputs, inputCode_2046821548))) {
    HEX5BHEX5DHEX3D_2046821637(dfa_2046821545[dfa_2046821545_Idx].states[chckIndx(currentState_2046821546, 0, (dfa_2046821545[dfa_2046821545_Idx].states).length - 1)].inputs, inputCode_2046821548, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2046822773(HEX5BHEX5D_2046820802(dfa_2046821545[dfa_2046821545_Idx].states[chckIndx(currentState_2046821546, 0, (dfa_2046821545[dfa_2046821545_Idx].states).length - 1)].inputs, inputCode_2046821548).next, mods_2046821549, nextState_2046821547);

  
}

function createOrUpdateState_2046823806(dfa_2046823807, dfa_2046823807_Idx, currentState_2046823808, inputCode_2046823809, mods_2046823810) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2046823811 = 0;

  BeforeRet: {
    if (contains_2046820494(dfa_2046823807[dfa_2046823807_Idx].states[chckIndx(currentState_2046823808, 0, (dfa_2046823807[dfa_2046823807_Idx].states).length - 1)].inputs, inputCode_2046823809)) {
    if (contains_2046820924(HEX5BHEX5D_2046820802(dfa_2046823807[dfa_2046823807_Idx].states[chckIndx(currentState_2046823808, 0, (dfa_2046823807[dfa_2046823807_Idx].states).length - 1)].inputs, inputCode_2046823809).next, mods_2046823810)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2046821348(HEX5BHEX5D_2046820802(dfa_2046823807[dfa_2046823807_Idx].states[chckIndx(currentState_2046823808, 0, (dfa_2046823807[dfa_2046823807_Idx].states).length - 1)].inputs, inputCode_2046823809).next, mods_2046823810), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2046823807[dfa_2046823807_Idx].states.push({isTerminal: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2046822773(HEX5BHEX5D_2046820802(dfa_2046823807[dfa_2046823807_Idx].states[chckIndx(currentState_2046823808, 0, (dfa_2046823807[dfa_2046823807_Idx].states).length - 1)].inputs, inputCode_2046823809).next, mods_2046823810, subInt((dfa_2046823807[dfa_2046823807_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2046823807[dfa_2046823807_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2046823807[dfa_2046823807_Idx].states.push({isTerminal: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2046823807[dfa_2046823807_Idx].states).length, 1);
    }
    
    var nextState_2046824202 = Temporary1;
    linkState_2046821544(dfa_2046823807, dfa_2046823807_Idx, currentState_2046823808, nextState_2046824202, inputCode_2046823809, mods_2046823810);
    result_2046823811 = nextState_2046824202;
    break BeforeRet;
  };

  return result_2046823811;

}

function binarySearch_805307433(c_805307434, tab_805307435, len_805307436, stride_805307437) {
  var result_805307438 = 0;

  BeforeRet: {
    var n_805307439 = len_805307436;
    var t_805307440 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_805307439)) break Label2;
          var m_805307441 = divInt(n_805307439, 2);
          var p_805307442 = addInt(t_805307440, mulInt(m_805307441, stride_805307437));
          if ((((tab_805307435[chckIndx(p_805307442, 0, (tab_805307435).length - 1)]) | 0) <= c_805307434)) {
          t_805307440 = p_805307442;
          n_805307439 = subInt(n_805307439, m_805307441);
          }
          else {
            n_805307439 = m_805307441;
          }
          
        }
    };
    if ((!((n_805307439 == 0)) && (((tab_805307435[chckIndx(t_805307440, 0, (tab_805307435).length - 1)]) | 0) <= c_805307434))) {
    result_805307438 = t_805307440;
    break BeforeRet;
    }
    
    result_805307438 = -1;
    break BeforeRet;
  };

  return result_805307438;

}

function nucisLower(c_805307544) {
  var result_805307545 = false;

  BeforeRet: {
    var c_805307546 = c_805307544;
    var p_805307554 = binarySearch_805307433(c_805307546, toUpperRanges_805307345, 46, 3);
    if ((((0 <= p_805307554) && (((toUpperRanges_805307345[chckIndx(p_805307554, 0, (toUpperRanges_805307345).length - 1)]) | 0) <= c_805307546)) && (c_805307546 <= ((toUpperRanges_805307345[chckIndx(addInt(p_805307554, 1), 0, (toUpperRanges_805307345).length - 1)]) | 0)))) {
    result_805307545 = true;
    break BeforeRet;
    }
    
    p_805307554 = binarySearch_805307433(c_805307546, toUpperSinglets_805307346, 624, 2);
    if (((0 <= p_805307554) && (c_805307546 == ((toUpperSinglets_805307346[chckIndx(p_805307554, 0, (toUpperSinglets_805307346).length - 1)]) | 0)))) {
    result_805307545 = true;
    break BeforeRet;
    }
    
  };

  return result_805307545;

}

function nuctoLower(c_805307444) {
  var result_805307445 = 0;

  BeforeRet: {
    var c_805307446 = c_805307444;
    var p_805307455 = binarySearch_805307433(c_805307446, toLowerRanges_805307343, 45, 3);
    if ((((0 <= p_805307455) && (((toLowerRanges_805307343[chckIndx(p_805307455, 0, (toLowerRanges_805307343).length - 1)]) | 0) <= c_805307446)) && (c_805307446 <= ((toLowerRanges_805307343[chckIndx(addInt(p_805307455, 1), 0, (toLowerRanges_805307343).length - 1)]) | 0)))) {
    result_805307445 = subInt(addInt(c_805307446, ((toLowerRanges_805307343[chckIndx(addInt(p_805307455, 2), 0, (toLowerRanges_805307343).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_805307455 = binarySearch_805307433(c_805307446, toLowerSinglets_805307344, 610, 2);
    if (((0 <= p_805307455) && (c_805307446 == ((toLowerSinglets_805307344[chckIndx(p_805307455, 0, (toLowerSinglets_805307344).length - 1)]) | 0)))) {
    result_805307445 = subInt(addInt(c_805307446, ((toLowerSinglets_805307344[chckIndx(addInt(p_805307455, 1), 0, (toLowerSinglets_805307344).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_805307445 = c_805307446;
    break BeforeRet;
  };

  return result_805307445;

}

function nuctoUpper(c_805307492) {
  var result_805307493 = 0;

  BeforeRet: {
    var c_805307494 = c_805307492;
    var p_805307503 = binarySearch_805307433(c_805307494, toUpperRanges_805307345, 46, 3);
    if ((((0 <= p_805307503) && (((toUpperRanges_805307345[chckIndx(p_805307503, 0, (toUpperRanges_805307345).length - 1)]) | 0) <= c_805307494)) && (c_805307494 <= ((toUpperRanges_805307345[chckIndx(addInt(p_805307503, 1), 0, (toUpperRanges_805307345).length - 1)]) | 0)))) {
    result_805307493 = subInt(addInt(c_805307494, ((toUpperRanges_805307345[chckIndx(addInt(p_805307503, 2), 0, (toUpperRanges_805307345).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_805307503 = binarySearch_805307433(c_805307494, toUpperSinglets_805307346, 624, 2);
    if (((0 <= p_805307503) && (c_805307494 == ((toUpperSinglets_805307346[chckIndx(p_805307503, 0, (toUpperSinglets_805307346).length - 1)]) | 0)))) {
    result_805307493 = subInt(addInt(c_805307494, ((toUpperSinglets_805307346[chckIndx(addInt(p_805307503, 1), 0, (toUpperSinglets_805307346).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_805307493 = c_805307494;
    break BeforeRet;
  };

  return result_805307493;

}

function handleNextInput_2046824212(dfa_2046824213, dfa_2046824213_Idx, input_2046824214, function_2046824215, index_2046824216, currentState_2046824217) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;

  BeforeRet: {
    var state_2046824224 = 0;
    var mods_2046824225 = nimCopy(null, ConstSet115, NTI2046820382);
    var specialKey_2046824226 = [[]];
    var next_2046824233 = [];
    if (((input_2046824214).length <= index_2046824216)) {
    dfa_2046824213[dfa_2046824213_Idx].states[chckIndx(currentState_2046824217, 0, (dfa_2046824213[dfa_2046824213_Idx].states).length - 1)].isTerminal = true;
    dfa_2046824213[dfa_2046824213_Idx].states[chckIndx(currentState_2046824217, 0, (dfa_2046824213[dfa_2046824213_Idx].states).length - 1)].function = nimCopy(null, function_2046824215, NTI33554449);
    break BeforeRet;
    }
    
    Label1: {
      var i_2046824244 = 0;
      var colontmp__536871039 = 0;
      colontmp__536871039 = (input_2046824214).length;
      var i_536871040 = index_2046824216;
      Label2: {
          Label3: while (true) {
          if (!(i_536871040 < colontmp__536871039)) break Label3;
            i_2046824244 = i_536871040;
            Label4: {
              var rune_2046824245 = input_2046824214[chckIndx(i_2046824244, 0, (input_2046824214).length - 1)];
              if (isAscii_2046820429(rune_2046824245)) {
              Temporary5 = chckRange(rune_2046824245, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2046824246 = Temporary5;
              if (!((0 < i_2046824244) && isAscii_2046820429(input_2046824214[chckIndx(subInt(i_2046824244, 1), 0, (input_2046824214).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2046824214[chckIndx(subInt(i_2046824244, 1), 0, (input_2046824214).length - 1)], 0, 255) == 92);              }              var isEscaped_2046824247 = Temporary6;
              if ((!(isEscaped_2046824247) && (ascii_2046824246 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2046824247) && (ascii_2046824246 == 60))) {
              state_2046824224 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2046824247) && (ascii_2046824246 == 62))) {
              if (!((state_2046824224 == 1))) {
              log_1191182436(logger_721420488[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2046824253 = getInputCodeFromSpecialKey_2046821532(specialKey_2046824226[0]);
              state_2046824224 = 0;
              specialKey_2046824226[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2046824253;
              }
              else {
                if ((state_2046824224 == 1)) {
                if ((!(isEscaped_2046824247) && (ascii_2046824246 == 45))) {
                mods_2046824225 = nimCopy(mods_2046824225, ConstSet116, NTI2046820382);
                Label9: {
                  var m_2046824258 = 0;
                  var i_536871036 = 0;
                  var L_536871037 = (specialKey_2046824226[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_536871036 < L_536871037)) break Label11;
                        m_2046824258 = specialKey_2046824226[0][chckIndx(i_536871036, 0, (specialKey_2046824226[0]).length - 1)];
                        switch (m_2046824258) {
                        case 67:
                          mods_2046824225 = nimCopy(mods_2046824225, SetPlus(mods_2046824225, ConstSet117), NTI2046820382);
                          break;
                        case 83:
                          mods_2046824225 = nimCopy(mods_2046824225, SetPlus(mods_2046824225, ConstSet118), NTI2046820382);
                          break;
                        case 65:
                          mods_2046824225 = nimCopy(mods_2046824225, SetPlus(mods_2046824225, ConstSet119), NTI2046820382);
                          break;
                        default: 
                          var fmtRes_2046824276 = mnewString(0);
                          fmtRes_2046824276.push.apply(fmtRes_2046824276, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2046824276, m_2046824258);;
                          fmtRes_2046824276.push.apply(fmtRes_2046824276, [39]);;
                          log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2046824276, NTI33554449)]);
                          break;
                        }
                        i_536871036 = addInt(i_536871036, 1);
                        if (!(((specialKey_2046824226[0]).length == L_536871037))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2046824226[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_805306886(specialKey_2046824226, 0, rune_2046824245);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2046824225 = nimCopy(mods_2046824225, ConstSet120, NTI2046820382);
                Temporary8 = rune_2046824245;
                }
                
              Temporary7 = Temporary8;
              }
              }
              var inputCode_2046824277 = Temporary7;
              if (!((inputCode_2046824277 == 0))) {
              var nextState_2046824278 = createOrUpdateState_2046823806(dfa_2046824213, dfa_2046824213_Idx, currentState_2046824217, inputCode_2046824277, mods_2046824225);
              next_2046824233.push({Field0: addInt(i_2046824244, 1), Field1: nextState_2046824278});;
              if (((0 < inputCode_2046824277) && (SetEq(mods_2046824225, ConstSet121) || SetEq(mods_2046824225, ConstSet122)))) {
              var rune_2046824293 = chckRange(inputCode_2046824277, -2147483648, 2147483647);
              var bIsLower_2046824294 = nucisLower(rune_2046824293);
              if (!(bIsLower_2046824294)) {
              linkState_2046821544(dfa_2046824213, dfa_2046824213_Idx, currentState_2046824217, nextState_2046824278, nuctoLower(rune_2046824293), SetPlus(mods_2046824225, ConstSet123));
              linkState_2046821544(dfa_2046824213, dfa_2046824213_Idx, currentState_2046824217, nextState_2046824278, inputCode_2046824277, SetPlus(mods_2046824225, ConstSet124));
              }
              
              if ((bIsLower_2046824294 && (mods_2046824225[1] != undefined))) {
              linkState_2046821544(dfa_2046824213, dfa_2046824213_Idx, currentState_2046824217, nextState_2046824278, nuctoUpper(rune_2046824293), SetMinus(mods_2046824225, ConstSet125));
              linkState_2046821544(dfa_2046824213, dfa_2046824213_Idx, currentState_2046824217, nextState_2046824278, nuctoUpper(rune_2046824293), mods_2046824225);
              }
              
              }
              
              break Label1;
              }
              
            };
            i_536871040 = addInt(i_536871040, 1);
          }
      };
    };
    Label12: {
      var n_2046824334 = {Field0: 0, Field1: 0};
      var i_536871044 = 0;
      var L_536871045 = (next_2046824233).length;
      Label13: {
          Label14: while (true) {
          if (!(i_536871044 < L_536871045)) break Label14;
            n_2046824334 = next_2046824233[chckIndx(i_536871044, 0, (next_2046824233).length - 1)];
            handleNextInput_2046824212(dfa_2046824213, dfa_2046824213_Idx, input_2046824214, function_2046824215, n_2046824334.Field0, n_2046824334.Field1);
            i_536871044 = addInt(i_536871044, 1);
            if (!(((next_2046824233).length == L_536871045))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function buildDFA_2046824371(commands_2046824372) {
  var result_2046824373 = [null];

    result_2046824373[0] = ({states: []});
    result_2046824373[0].states.push({isTerminal: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2046824381 = 0;
    Label1: {
      var command_2046824404 = {Field0: [], Field1: []};
      var i_536871030 = 0;
      var L_536871031 = (commands_2046824372).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871030 < L_536871031)) break Label3;
            command_2046824404 = commands_2046824372[chckIndx(i_536871030, 0, (commands_2046824372).length - 1)];
            currentState_2046824381 = 0;
            var input_2046824405 = nimCopy(null, command_2046824404["Field0"], NTI33554449);
            var function_2046824406 = nimCopy(null, command_2046824404["Field1"], NTI33554449);
            if ((0 < (input_2046824405).length)) {
            handleNextInput_2046824212(result_2046824373, 0, toRunes_805313799(input_2046824405), function_2046824406, 0, 0);
            }
            
            i_536871030 = addInt(i_536871030, 1);
            if (!(((commands_2046824372).length == L_536871031))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2046824373[0];

}

function len_2080374896(t_2080374899) {
  var result_2080374900 = 0;

    result_2080374900 = t_2080374899.counter;

  return result_2080374900;

}

function buildDFA_2080374845(config_2080374846) {
  var result_2080374847 = null;

  BeforeRet: {
    var resultHEX60gensym2_2080375127 = [];
    Label1: {
      var xHEX60gensym2_2080375128 = {Field0: [], Field1: []};
      var L_536871022 = len_2080374896(config_2080374846.commands);
      Label2: {
        var h_536871024 = 0;
        var colontmp__536871025 = 0;
        colontmp__536871025 = (config_2080374846.commands.data).length - 1;
        var res_536871026 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536871026 <= colontmp__536871025)) break Label4;
              h_536871024 = res_536871026;
              if (isFilled_1342177312(config_2080374846.commands.data[chckIndx(h_536871024, 0, (config_2080374846.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2080375128 = nimCopy(xHEX60gensym2_2080375128, {Field0: nimCopy(null, config_2080374846.commands.data[chckIndx(h_536871024, 0, (config_2080374846.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2080374846.commands.data[chckIndx(h_536871024, 0, (config_2080374846.commands.data).length - 1)].Field2, NTI33554449)}, NTI2080374819);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2080375128, NTI2080374819);
              resultHEX60gensym2_2080375127.push(Temporary5);;
              if (!((len_2080374896(config_2080374846.commands) == L_536871022))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536871026 = addInt(res_536871026, 1);
            }
        };
      };
    };
    result_2080374847 = buildDFA_2046824371(resultHEX60gensym2_2080375127);
    break BeforeRet;
  };

  return result_2080374847;

}

function dfa_2080375133(handler_2080375134) {
  var result_2080375135 = null;

  BeforeRet: {
    if ((handler_2080375134.revision < handler_2080375134.config.revision)) {
    handler_2080375134.dfaInternal = buildDFA_2080374845(handler_2080375134.config);
    handler_2080375134.revision = handler_2080375134.config.revision;
    }
    
    result_2080375135 = handler_2080375134.dfaInternal;
    break BeforeRet;
  };

  return result_2080375135;

}

function nuctoUTF8(c_805306762) {
  var result_805306763 = [];

    result_805306763 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_805306765 = c_805306762;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 127)) {
    if (result_805306763.length < 1) { for (var i = result_805306763.length; i < 1; ++i) result_805306763.push(0); }
         else {result_805306763.length = 1; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(iHEX60gensym21_805306765, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 2047)) {
    if (result_805306763.length < 2) { for (var i = result_805306763.length; i < 2; ++i) result_805306763.push(0); }
         else {result_805306763.length = 2; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 >> 6) | 192), 0, 255);
    result_805306763[chckIndx(1, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 65535)) {
    if (result_805306763.length < 3) { for (var i = result_805306763.length; i < 3; ++i) result_805306763.push(0); }
         else {result_805306763.length = 3; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 >> 12) | 224), 0, 255);
    result_805306763[chckIndx(1, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 6) & 63) | 128), 0, 255);
    result_805306763[chckIndx(2, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 2097151)) {
    if (result_805306763.length < 4) { for (var i = result_805306763.length; i < 4; ++i) result_805306763.push(0); }
         else {result_805306763.length = 4; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 >> 18) | 240), 0, 255);
    result_805306763[chckIndx(1, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 12) & 63) | 128), 0, 255);
    result_805306763[chckIndx(2, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 6) & 63) | 128), 0, 255);
    result_805306763[chckIndx(3, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 67108863)) {
    if (result_805306763.length < 5) { for (var i = result_805306763.length; i < 5; ++i) result_805306763.push(0); }
         else {result_805306763.length = 5; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 >> 24) | 248), 0, 255);
    result_805306763[chckIndx(1, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 18) & 63) | 128), 0, 255);
    result_805306763[chckIndx(2, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 12) & 63) | 128), 0, 255);
    result_805306763[chckIndx(3, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 6) & 63) | 128), 0, 255);
    result_805306763[chckIndx(4, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_805306765, 2147483647)) {
    if (result_805306763.length < 6) { for (var i = result_805306763.length; i < 6; ++i) result_805306763.push(0); }
         else {result_805306763.length = 6; };
    result_805306763[chckIndx(0, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 >> 30) | 252), 0, 255);
    result_805306763[chckIndx(1, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 24) & 63) | 128), 0, 255);
    result_805306763[chckIndx(2, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 18) & 63) | 128), 0, 255);
    result_805306763[chckIndx(3, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 12) & 63) | 128), 0, 255);
    result_805306763[chckIndx(4, 0, (result_805306763).length - 1)] = chckRange((((iHEX60gensym21_805306765 >> 6) & 63) | 128), 0, 255);
    result_805306763[chckIndx(5, 0, (result_805306763).length - 1)] = chckRange(((iHEX60gensym21_805306765 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_805306763;

}

function HEX24_805307012(rune_805307013) {
  var result_805307014 = [];

    result_805307014 = nimCopy(null, nuctoUTF8(rune_805307013), NTI33554449);

  return result_805307014;

}

function inputAsString_2046821492(input_2046821493) {
    var Temporary1;

  var result_2046821494 = [];

    if (    input_2046821493 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2046821493 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2046821493 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2046821493 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2046821493 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2046821493 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2046821493 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2046821493 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2046821493 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2046821493 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2046821493 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2046821493 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2046821493 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2046821493 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2046821493 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2046821493 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2046821493 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2046821493 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2046821493 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2046821493 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2046821493 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2046821493 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2046821493 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2046821493 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2046821493 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2046821493 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2046821493) || [],[62] || []);
      }
    result_2046821494 = nimCopy(null, Temporary1, NTI33554449);

  return result_2046821494;

}

function inputToString_2046821495(input_2046821496, modifiers_2046821497) {
  var result_2046821498 = [];

    if ((!(SetEq(modifiers_2046821497, ConstSet128)) || (input_2046821496 < 0))) {
    result_2046821498.push.apply(result_2046821498, [60]);;
    }
    
    if ((modifiers_2046821497[0] != undefined)) {
    result_2046821498.push.apply(result_2046821498, [67]);;
    }
    
    if ((modifiers_2046821497[1] != undefined)) {
    result_2046821498.push.apply(result_2046821498, [83]);;
    }
    
    if ((modifiers_2046821497[2] != undefined)) {
    result_2046821498.push.apply(result_2046821498, [65]);;
    }
    
    if ((modifiers_2046821497[3] != undefined)) {
    result_2046821498.push.apply(result_2046821498, [77]);;
    }
    
    if (!(SetEq(modifiers_2046821497, ConstSet129))) {
    result_2046821498.push.apply(result_2046821498, [45]);;
    }
    
    if (((0 < input_2046821496) && (input_2046821496 <= 2147483647))) {
    var ch_2046821527 = chckRange(input_2046821496, -2147483648, 2147483647);
    result_2046821498.push.apply(result_2046821498, HEX24_805307012(ch_2046821527));;
    }
    else {
    result_2046821498.push.apply(result_2046821498, inputAsString_2046821492(input_2046821496));;
    }
    
    if ((!(SetEq(modifiers_2046821497, ConstSet130)) || (input_2046821496 < 0))) {
    result_2046821498.push.apply(result_2046821498, [62]);;
    }
    

  return result_2046821498;

}

function isTerminal_2046821484(dfa_2046821485, state_2046821486) {
  var result_2046821487 = false;

  BeforeRet: {
    result_2046821487 = dfa_2046821485.states[chckIndx(state_2046821486, 0, (dfa_2046821485.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2046821487;

}

function find_1627390035(a_1627390038, item_1627390039) {
  var result_1627390040 = 0;

  BeforeRet: {
    result_1627390040 = 0;
    Label1: {
      var i_1627390041 = 0;
      var i_536871071 = 0;
      var L_536871072 = (a_1627390038).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871071 < L_536871072)) break Label3;
            i_1627390041 = a_1627390038[chckIndx(i_536871071, 0, (a_1627390038).length - 1)];
            if ((i_1627390041 == item_1627390039)) {
            break BeforeRet;
            }
            
            result_1627390040 = addInt(result_1627390040, 1);
            i_536871071 = addInt(i_536871071, 1);
            if (!(((a_1627390038).length == L_536871072))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1627390040 = -1;
  };

  return result_1627390040;

}

function HEX5BHEX5D_872416507(s_872416510, x_872416511) {
  var result_872416512 = [];

    var a_872416514 = x_872416511.a;
    var L_872416516 = addInt(subInt(x_872416511.b, a_872416514), 1);
    result_872416512 = nimCopy(null, mnewString(chckRange(L_872416516, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_872416521 = 0;
      var i_536871075 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871075 < L_872416516)) break Label3;
            i_872416521 = i_536871075;
            result_872416512[chckIndx(i_872416521, 0, (result_872416512).length - 1)] = s_872416510[chckIndx(addInt(i_872416521, a_872416514), 0, (s_872416510).length - 1)];
            i_536871075 = addInt(i_536871075, 1);
          }
      };
    };

  return result_872416512;

}

function parseAction_2080376211(action_2080376212) {
  var result_2080376215 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2080376221 = find_1627390035(action_2080376212, 32);
    if ((spaceIndex_2080376221 == -1)) {
    var colontmp__536871066 = nimCopy(null, action_2080376212, NTI33554449);
    var colontmp__536871067 = [];
    result_2080376215 = nimCopy(result_2080376215, {Field0: nimCopy(null, colontmp__536871066, NTI33554449), Field1: nimCopy(null, colontmp__536871067, NTI33554449)}, NTI2080375503);
    break BeforeRet;
    }
    else {
      var colontmp__536871068 = HEX5BHEX5D_872416507(action_2080376212, HEX2EHEX2E_822083634(0, subInt(spaceIndex_2080376221, 1)));
      var colontmp__536871069 = HEX5BHEX5D_872416535(action_2080376212, HEX2EHEX2E_1056964704(addInt(spaceIndex_2080376221, 1), 1));
      result_2080376215 = nimCopy(result_2080376215, {Field0: nimCopy(null, colontmp__536871068, NTI33554449), Field1: nimCopy(null, colontmp__536871069, NTI33554449)}, NTI2080375503);
      break BeforeRet;
    }
    
  };

  return result_2080376215;

}

function getAction_2046821488(dfa_2046821489, state_2046821490) {
  var result_2046821491 = [];

  BeforeRet: {
    result_2046821491 = nimCopy(null, dfa_2046821489.states[chckIndx(state_2046821490, 0, (dfa_2046821489.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2046821491;

}

function handleEvent_2080376264(handler_2080376265, handler_2080376265_Idx, input_2080376266, modifiers_2080376267, handleUnknownAsInput_2080376268) {
  var result_2080376269 = 0;

  BeforeRet: {
    if (!((input_2080376266 == 0))) {
    var prevState_2080376270 = handler_2080376265[handler_2080376265_Idx].state;
    handler_2080376265[handler_2080376265_Idx].state = step_2046820446(dfa_2080375133(handler_2080376265[handler_2080376265_Idx]), handler_2080376265[handler_2080376265_Idx].state, input_2080376266, modifiers_2080376267);
    if ((handler_2080376265[handler_2080376265_Idx].state == 0)) {
    if ((prevState_2080376270 == 0)) {
    if ((((handleUnknownAsInput_2080376268 && (0 < input_2080376266)) && SetEq(SetPlus(modifiers_2080376267, ConstSet126), ConstSet127)) && !((handler_2080376265[handler_2080376265_Idx].handleInput == null)))) {
    result_2080376269 = handler_2080376265[handler_2080376265_Idx].handleInput(inputToString_2046821495(input_2080376266, ConstSet131));
    break BeforeRet;
    }
    
    result_2080376269 = 1;
    break BeforeRet;
    }
    else {
      result_2080376269 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2046821484(dfa_2080375133(handler_2080376265[handler_2080376265_Idx]), handler_2080376265[handler_2080376265_Idx].state)) {
    var colontmp__536871065 = parseAction_2080376211(getAction_2046821488(dfa_2080375133(handler_2080376265[handler_2080376265_Idx]), handler_2080376265[handler_2080376265_Idx].state));
    var action_2080376283 = nimCopy(null, colontmp__536871065["Field0"], NTI33554449);
    var arg_2080376284 = nimCopy(null, colontmp__536871065["Field1"], NTI33554449);
    handler_2080376265[handler_2080376265_Idx].state = 0;
    result_2080376269 = handler_2080376265[handler_2080376265_Idx].handleAction(action_2080376283, arg_2080376284);
    break BeforeRet;
    }
    else {
      result_2080376269 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2080376269 = 0;
      break BeforeRet;
    }
    
  };

  return result_2080376269;

}

function reset_2080376209(handler_2080376210, handler_2080376210_Idx) {
    handler_2080376210[handler_2080376210_Idx].state = 0;

  
}

function handleEvent_2080376324(handlers_2080376325, input_2080376326, modifiers_2080376327) {
            var Temporary4;

    var anyInProgress_2080376328 = anyInProgress_2080376298(handlers_2080376325);
    var allowHandlingUnknownAsInput_2080376329 = true;
    Label1: {
      var i_2080376338 = 0;
      var colontmp__536871001 = 0;
      colontmp__536871001 = (handlers_2080376325).length;
      var i_536871002 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871002 < colontmp__536871001)) break Label3;
            i_2080376338 = i_536871002;
            var handler_2080376342 = [handlers_2080376325[chckIndx(subInt(subInt((handlers_2080376325).length, i_2080376338), 1), 0, (handlers_2080376325).length - 1)]];
            if (((anyInProgress_2080376328 && !((handler_2080376342[0].state == 0))) || (!(anyInProgress_2080376328) && (handler_2080376342[0].state == 0)))) {
            Temporary4 = handleEvent_2080376264(handler_2080376342, 0, input_2080376326, modifiers_2080376327, allowHandlingUnknownAsInput_2080376329);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2080376343 = Temporary4;
            switch (response_2080376343) {
            case 3:
              allowHandlingUnknownAsInput_2080376329 = false;
              Label5: {
                var h_2080376365 = null;
                var i_536870998 = 0;
                var L_536870999 = (handlers_2080376325).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536870998 < L_536870999)) break Label7;
                      h_2080376365 = handlers_2080376325[chckIndx(i_536870998, 0, (handlers_2080376325).length - 1)];
                      var h_2080376366 = [h_2080376365];
                      reset_2080376209(h_2080376366, 0);
                      i_536870998 = addInt(i_536870998, 1);
                      if (!(((handlers_2080376325).length == L_536870999))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2080376329 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2080376342[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871002 = addInt(i_536871002, 1);
          }
      };
    };

  
}

function rawGet_1660947051(t_1660947054, key_1660947055, hc_1660947056, hc_1660947056_Idx) {
  var result_1660947057 = 0;

  BeforeRet: {
    hc_1660947056[hc_1660947056_Idx] = hash_1358954923(key_1660947055);
    if ((hc_1660947056[hc_1660947056_Idx] == 0)) {
    hc_1660947056[hc_1660947056_Idx] = 314159265;
    }
    
    if (((t_1660947054.data).length == 0)) {
    result_1660947057 = -1;
    break BeforeRet;
    }
    
    var h_1660947108 = (hc_1660947056[hc_1660947056_Idx] & (t_1660947054.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1660947054.data[chckIndx(h_1660947108, 0, (t_1660947054.data).length - 1)].Field0)) break Label2;
          if (((t_1660947054.data[chckIndx(h_1660947108, 0, (t_1660947054.data).length - 1)].Field0 == hc_1660947056[hc_1660947056_Idx]) && eqStrings(t_1660947054.data[chckIndx(h_1660947108, 0, (t_1660947054.data).length - 1)].Field2, key_1660947055))) {
          result_1660947057 = h_1660947108;
          break BeforeRet;
          }
          
          h_1660947108 = nextTry_1342177315(h_1660947108, (t_1660947054.data).length - 1);
        }
    };
    result_1660947057 = subInt(-1, h_1660947108);
  };

  return result_1660947057;

}

function getOrDefault_1660947829(t_1660947832, key_1660947833) {
  var result_1660947834 = null;

    var hcHEX60gensym59_1660947837 = [0];
    var indexHEX60gensym59_1660947844 = rawGet_1660947051(t_1660947832, key_1660947833, hcHEX60gensym59_1660947837, 0);
    if ((0 <= indexHEX60gensym59_1660947844)) {
    result_1660947834 = t_1660947832.data[chckIndx(indexHEX60gensym59_1660947844, 0, (t_1660947832.data).length - 1)].Field3;
    }
    

  return result_1660947834;

}

function HEX7BHEX7D_1660947748(node_1660947749, keys_1660947750) {
            var Temporary4;

  var result_1660947751 = null;

  BeforeRet: {
    result_1660947751 = node_1660947749;
    Label1: {
      var key_1660947755 = [];
      var i_536871079 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871079 < (keys_1660947750).length)) break Label3;
            key_1660947755 = keys_1660947750[chckIndx(i_536871079, 0, (keys_1660947750).length - 1)];
            if (((result_1660947751 == null) || !((result_1660947751.kind == 5)))) {
            result_1660947751 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1660947751;
            if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1660944387)); }
            result_1660947751 = getOrDefault_1660947829(Temporary4.fields, key_1660947755);
            i_536871079 = addInt(i_536871079, 1);
          }
      };
    };
  };

  return result_1660947751;

}

function substrEq_872415486(s_872415487, pos_872415488, substr_872415489) {
  var result_872415490 = false;

  BeforeRet: {
    var i_872415491 = 0;
    var length_872415492 = (substr_872415489).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_872415491 < length_872415492) && (addInt(pos_872415488, i_872415491) < (s_872415487).length)) && (s_872415487[chckIndx(addInt(pos_872415488, i_872415491), 0, (s_872415487).length - 1)] == substr_872415489[chckIndx(i_872415491, 0, (substr_872415489).length - 1)]))) break Label2;
          i_872415491 = addInt(i_872415491, 1);
        }
    };
    result_872415490 = (i_872415491 == length_872415492);
    break BeforeRet;
  };

  return result_872415490;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2583691671 = 0;
      colontmp__2583691671 = subInt(L_33557827, 1);
      var res_2583691672 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691672 <= colontmp__2583691671)) break Label3;
            i_33557832 = res_2583691672;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2583691672 = addInt(res_2583691672, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_872415804, sep_872415805, maxsplit_872415806) {
  var result_872415807 = [];

    if (!((0 < (sep_872415805).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_872415807 = nimCopy(null, [], NTI872415649);
    Label1: {
      var xHEX60gensym71_872415818 = [];
      var lastHEX60gensym40_536871085 = 0;
      var splitsHEX60gensym40_536871086 = maxsplit_872415806;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_536871085 <= (s_872415804).length)) break Label3;
            var firstHEX60gensym40_536871088 = lastHEX60gensym40_536871085;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_536871085 < (s_872415804).length) && !(substrEq_872415486(s_872415804, lastHEX60gensym40_536871085, sep_872415805)))) break Label5;
                  lastHEX60gensym40_536871085 = addInt(lastHEX60gensym40_536871085, 1);
                }
            };
            if ((splitsHEX60gensym40_536871086 == 0)) {
            lastHEX60gensym40_536871085 = (s_872415804).length;
            }
            
            xHEX60gensym71_872415818 = substr_33557821(s_872415804, firstHEX60gensym40_536871088, subInt(lastHEX60gensym40_536871085, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_872415818, NTI33554449);
            result_872415807.push(Temporary6);;
            if ((splitsHEX60gensym40_536871086 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_536871086 = subInt(splitsHEX60gensym40_536871086, 1);
            lastHEX60gensym40_536871085 = addInt(lastHEX60gensym40_536871085, (sep_872415805).length);
          }
      };
    };

  return result_872415807;

}

function getBool_1660944579(n_1660944580, default_1660944581) {
      var Temporary1;

  var result_1660944582 = false;

  BeforeRet: {
    if (((n_1660944580 == null) || !((n_1660944580.kind == 1)))) {
    result_1660944582 = default_1660944581;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1660944580;
      if (ConstSet133[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944582 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1660944582;

}

function getOption_2634028482(editor_2634028484, path_2634028485, default_2634028486) {
  var result_2634028492 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2634028484 == null)) {
      result_2634028492 = default_2634028486;
      break BeforeRet;
      }
      
      var nodeHEX60gensym97_2634028503 = HEX7BHEX7D_1660947748(editor_2634028484.options, nsuSplitString(path_2634028485, [46], -1));
      if ((nodeHEX60gensym97_2634028503 == null)) {
      result_2634028492 = default_2634028486;
      break BeforeRet;
      }
      
    };
    result_2634028492 = getBool_1660944579(nodeHEX60gensym97_2634028503, default_2634028486);
    break BeforeRet;
  };

  return result_2634028492;

}

function getContextWithMode_1325410552(self_1325410553, context_1325410554) {
  var result_1325410555 = [];

  BeforeRet: {
    result_1325410555 = nimCopy(null, (context_1325410554 || []).concat([46] || [],self_1325410553.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1325410555;

}

function add_2734694800(x_2734694802, x_2734694802_Idx, y_2734694803) {
    var Temporary1;

    var xl_2734694807 = (x_2734694802[x_2734694802_Idx]).length;
    if (x_2734694802[x_2734694802_Idx].length < (Temporary1 = chckRange(addInt(xl_2734694807, (y_2734694803).length), 0, 2147483647), Temporary1)) { for (var i = x_2734694802[x_2734694802_Idx].length ; i < Temporary1 ; ++i) x_2734694802[x_2734694802_Idx].push(null); }
               else { x_2734694802[x_2734694802_Idx].length = Temporary1; };
    Label2: {
      var i_2734694822 = 0;
      var colontmp__536871092 = 0;
      colontmp__536871092 = (y_2734694803).length - 1;
      var res_536871093 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871093 <= colontmp__536871092)) break Label4;
            i_2734694822 = res_536871093;
            x_2734694802[x_2734694802_Idx][chckIndx(addInt(xl_2734694807, i_2734694822), 0, (x_2734694802[x_2734694802_Idx]).length - 1)] = y_2734694803[chckIndx(i_2734694822, 0, (y_2734694803).length - 1)];
            res_536871093 = addInt(res_536871093, 1);
          }
      };
    };

  
}

function getCommandLineTextEditor_1325405317(self_1325405318) {
  var result_1325405319 = null;

    result_1325405319 = self_1325405318.commandLineTextEditor;

  return result_1325405319;

}

function currentEventHandlers_1325410743(self_1325410744) {
  var result_1325410745 = [[]];

    result_1325410745[0] = nimCopy(null, [self_1325410744.eventHandler], NTI2214592526);
    var modeOnTop_1325410759 = getOption_2634028482(self_1325410744, getContextWithMode_1325410552(self_1325410744, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1325410744.modeEventHandler == null)) && !(modeOnTop_1325410759))) {
    result_1325410745[0].push(self_1325410744.modeEventHandler);;
    }
    
    if (self_1325410744.commandLineMode) {
    add_2734694800(result_1325410745, 0, getEventHandlers_2181038147(getCommandLineTextEditor_1325405317(self_1325410744)));
    result_1325410745[0].push(self_1325410744.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1325410744.popups).length)) {
    add_2734694800(result_1325410745, 0, getEventHandlers_2231369751(self_1325410744.popups[chckIndx((self_1325410744.popups).length - 1, 0, (self_1325410744.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1325410744.currentView) && (self_1325410744.currentView < (self_1325410744.views).length))) {
    add_2734694800(result_1325410745, 0, getEventHandlers_2181038147(self_1325410744.views[chckIndx(self_1325410744.currentView, 0, (self_1325410744.views).length - 1)].editor));
    }
    }}
    if ((!((self_1325410744.modeEventHandler == null)) && modeOnTop_1325410759)) {
    result_1325410745[0].push(self_1325410744.modeEventHandler);;
    }
    

  return result_1325410745[0];

}

function handleKeyPress_1325405320(self_1325405321, input_1325405322, modifiers_1325405323) {
    handleEvent_2080376324(currentEventHandlers_1325410743(self_1325405321), input_1325405322, modifiers_1325405323);

  
}

function handleKeyRelease_1325405324(self_1325405325, input_1325405326, modifiers_1325405327) {
  
}

function nsuIsAlphaNumericChar(c_872415277) {
  var result_872415278 = false;

  BeforeRet: {
    result_872415278 = (ConstSet134[c_872415277] != undefined);
    break BeforeRet;
  };

  return result_872415278;

}

function handleRune_1325405328(self_1325405329, input_1325405330, modifiers_1325405331) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2046820429(input_1325405330)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1325405330, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1325405331;
    }
    else {
    Temporary1 = ConstSet135;
    }
    
    var modifiers_1325410960 = nimCopy(null, Temporary1, NTI2046820382);
    handleEvent_2080376324(currentEventHandlers_1325410743(self_1325405329), input_1325405330, modifiers_1325410960);

  
}

function subscribe_1325405471(event_1325405473, callback_1325405475) {
  var result_1325405476 = ({id: 0});

    result_1325405476 = nimCopy(result_1325405476, newId_2298478623(), NTI2298478595);
    event_1325405473.handlers.push({Field0: nimCopy(null, result_1325405476, NTI2298478595), Field1: callback_1325405475});;

  return result_1325405476;

}

function contains_2097152190(a_2097152191, b_2097152192) {
  var result_2097152193 = false;

  BeforeRet: {
    result_2097152193 = ((((a_2097152191.x <= b_2097152192.arr[chckIndx(0, 0, (b_2097152192.arr).length - 1)]) && (b_2097152192.arr[chckIndx(0, 0, (b_2097152192.arr).length - 1)] <= (a_2097152191.x + a_2097152191.w))) && (a_2097152191.y <= b_2097152192.arr[chckIndx(1, 0, (b_2097152192.arr).length - 1)])) && (b_2097152192.arr[chckIndx(1, 0, (b_2097152192.arr).length - 1)] <= (a_2097152191.y + a_2097152191.h)));
    break BeforeRet;
  };

  return result_2097152193;

}

function handleMousePress_1325405332(self_1325405333, button_1325405334, modifiers_1325405335, mousePosWindow_1325405336) {
  BeforeRet: {
    Label1: {
      var i_1325410814 = 0;
      var colontmp__536871096 = 0;
      colontmp__536871096 = (self_1325405333.popups).length - 1;
      var res_536871097 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871097 <= colontmp__536871096)) break Label3;
            i_1325410814 = res_536871097;
            var popup_1325410818 = self_1325405333.popups[chckIndx(subInt((self_1325405333.popups).length - 1, i_1325410814), 0, (self_1325405333.popups).length - 1)];
            if (contains_2097152190(popup_1325410818.lastBounds, mousePosWindow_1325405336)) {
            handleMousePress_2231369762(popup_1325410818, button_1325405334, mousePosWindow_1325405336);
            break BeforeRet;
            }
            
            res_536871097 = addInt(res_536871097, 1);
          }
      };
    };
    var rects_1325410822 = layoutViews_1325402630(self_1325405333.layout, self_1325405333.layout_props, self_1325405333.lastBounds, (self_1325405333.views).length);
    Label4: {
      var i_1325410855 = 0;
      var view_1325410856 = null;
      var i_536871101 = 0;
      var L_536871102 = (self_1325405333.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871101 < L_536871102)) break Label6;
            i_1325410855 = i_536871101;
            view_1325410856 = self_1325405333.views[chckIndx(i_536871101, 0, (self_1325405333.views).length - 1)];
            if (((rects_1325410822).length <= i_1325410855)) {
            break BeforeRet;
            }
            
            if (contains_2097152190(rects_1325410822[chckIndx(i_1325410855, 0, (rects_1325410822).length - 1)], mousePosWindow_1325405336)) {
            self_1325405333.currentView = i_1325410855;
            handleMousePress_2181038164(view_1325410856.editor, button_1325405334, mousePosWindow_1325405336);
            break BeforeRet;
            }
            
            i_536871101 = addInt(i_536871101, 1);
            if (!(((self_1325405333.views).length == L_536871102))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1325405337(self_1325405338, button_1325405339, modifiers_1325405340, mousePosWindow_1325405341) {
  BeforeRet: {
    Label1: {
      var i_1325410873 = 0;
      var colontmp__536871105 = 0;
      colontmp__536871105 = (self_1325405338.popups).length - 1;
      var res_536871106 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871106 <= colontmp__536871105)) break Label3;
            i_1325410873 = res_536871106;
            var popup_1325410877 = self_1325405338.popups[chckIndx(subInt((self_1325405338.popups).length - 1, i_1325410873), 0, (self_1325405338.popups).length - 1)];
            if (contains_2097152190(popup_1325410877.lastBounds, mousePosWindow_1325405341)) {
            handleMouseRelease_2231369767(popup_1325410877, button_1325405339, mousePosWindow_1325405341);
            break BeforeRet;
            }
            
            res_536871106 = addInt(res_536871106, 1);
          }
      };
    };
    var rects_1325410881 = layoutViews_1325402630(self_1325405338.layout, self_1325405338.layout_props, self_1325405338.lastBounds, (self_1325405338.views).length);
    Label4: {
      var i_1325410887 = 0;
      var view_1325410888 = null;
      var i_536871109 = 0;
      var L_536871110 = (self_1325405338.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871109 < L_536871110)) break Label6;
            i_1325410887 = i_536871109;
            view_1325410888 = self_1325405338.views[chckIndx(i_536871109, 0, (self_1325405338.views).length - 1)];
            if (((rects_1325410881).length <= i_1325410887)) {
            break BeforeRet;
            }
            
            if (((self_1325405338.currentView == i_1325410887) && contains_2097152190(rects_1325410881[chckIndx(i_1325410887, 0, (rects_1325410881).length - 1)], mousePosWindow_1325405341))) {
            handleMouseRelease_2181038169(view_1325410888.editor, button_1325405339, mousePosWindow_1325405341);
            break BeforeRet;
            }
            
            i_536871109 = addInt(i_536871109, 1);
            if (!(((self_1325405338.views).length == L_536871110))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1325405540(event_1325405542, callback_1325405544) {
  var result_1325405545 = ({id: 0});

    result_1325405545 = nimCopy(result_1325405545, newId_2298478623(), NTI2298478595);
    event_1325405542.handlers.push({Field0: nimCopy(null, result_1325405545, NTI2298478595), Field1: callback_1325405544});;

  return result_1325405545;

}

function handleMouseMove_1325405342(self_1325405343, mousePosWindow_1325405344, mousePosDelta_1325405345, modifiers_1325405346, buttons_1325405347) {
  BeforeRet: {
    Label1: {
      var i_1325410905 = 0;
      var colontmp__536871113 = 0;
      colontmp__536871113 = (self_1325405343.popups).length - 1;
      var res_536871114 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871114 <= colontmp__536871113)) break Label3;
            i_1325410905 = res_536871114;
            var popup_1325410909 = self_1325405343.popups[chckIndx(subInt((self_1325405343.popups).length - 1, i_1325410905), 0, (self_1325405343.popups).length - 1)];
            if (contains_2097152190(popup_1325410909.lastBounds, mousePosWindow_1325405344)) {
            handleMouseMove_2231369774(popup_1325410909, mousePosWindow_1325405344, mousePosDelta_1325405345, modifiers_1325405346, buttons_1325405347);
            break BeforeRet;
            }
            
            res_536871114 = addInt(res_536871114, 1);
          }
      };
    };
    var rects_1325410913 = layoutViews_1325402630(self_1325405343.layout, self_1325405343.layout_props, self_1325405343.lastBounds, (self_1325405343.views).length);
    Label4: {
      var i_1325410919 = 0;
      var view_1325410920 = null;
      var i_536871117 = 0;
      var L_536871118 = (self_1325405343.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871117 < L_536871118)) break Label6;
            i_1325410919 = i_536871117;
            view_1325410920 = self_1325405343.views[chckIndx(i_536871117, 0, (self_1325405343.views).length - 1)];
            if (((rects_1325410913).length <= i_1325410919)) {
            break BeforeRet;
            }
            
            if (((self_1325405343.currentView == i_1325410919) && contains_2097152190(rects_1325410913[chckIndx(i_1325410919, 0, (rects_1325410913).length - 1)], mousePosWindow_1325405344))) {
            handleMouseMove_2181038176(view_1325410920.editor, mousePosWindow_1325405344, mousePosDelta_1325405345, modifiers_1325405346, buttons_1325405347);
            break BeforeRet;
            }
            
            i_536871117 = addInt(i_536871117, 1);
            if (!(((self_1325405343.views).length == L_536871118))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1325405586(event_1325405588, callback_1325405590) {
  var result_1325405591 = ({id: 0});

    result_1325405591 = nimCopy(result_1325405591, newId_2298478623(), NTI2298478595);
    event_1325405588.handlers.push({Field0: nimCopy(null, result_1325405591, NTI2298478595), Field1: callback_1325405590});;

  return result_1325405591;

}

function handleScroll_1325405348(self_1325405349, scroll_1325405350, mousePosWindow_1325405351, modifiers_1325405352) {
  BeforeRet: {
    Label1: {
      var i_1325410936 = 0;
      var colontmp__536871121 = 0;
      colontmp__536871121 = (self_1325405349.popups).length - 1;
      var res_536871122 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871122 <= colontmp__536871121)) break Label3;
            i_1325410936 = res_536871122;
            var popup_1325410940 = self_1325405349.popups[chckIndx(subInt((self_1325405349.popups).length - 1, i_1325410936), 0, (self_1325405349.popups).length - 1)];
            if (contains_2097152190(popup_1325410940.lastBounds, mousePosWindow_1325405351)) {
            handleScroll_2231369757(popup_1325410940, scroll_1325405350, mousePosWindow_1325405351);
            break BeforeRet;
            }
            
            res_536871122 = addInt(res_536871122, 1);
          }
      };
    };
    Label4: {
      var i_1325410946 = 0;
      var view_1325410947 = null;
      var i_536871125 = 0;
      var L_536871126 = (self_1325405349.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871125 < L_536871126)) break Label6;
            i_1325410946 = i_536871125;
            view_1325410947 = self_1325405349.views[chckIndx(i_536871125, 0, (self_1325405349.views).length - 1)];
            if (contains_2097152190(view_1325410947.editor.lastContentBounds, mousePosWindow_1325405351)) {
            handleScroll_2181038159(view_1325410947.editor, scroll_1325405350, mousePosWindow_1325405351);
            break BeforeRet;
            }
            
            i_536871125 = addInt(i_536871125, 1);
            if (!(((self_1325405349.views).length == L_536871126))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1325405632(event_1325405634, callback_1325405636) {
  var result_1325405637 = ({id: 0});

    result_1325405637 = nimCopy(result_1325405637, newId_2298478623(), NTI2298478595);
    event_1325405634.handlers.push({Field0: nimCopy(null, result_1325405637, NTI2298478595), Field1: callback_1325405636});;

  return result_1325405637;

}

function initTable_1325405665(initialSize_1325405668) {
  var result_1325405669 = ({data: [], counter: 0});

    var correctSizeHEX60gensym52_1325405671 = slotsNeeded_1342177323(chckRange(initialSize_1325405668, 0, 2147483647));
    result_1325405669.counter = 0;
    result_1325405669.data = new Array(chckRange(correctSizeHEX60gensym52_1325405671, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym52_1325405671, 0, 2147483647) ; ++i) { result_1325405669.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1325405669;

}

function rawGet_1325402714(t_1325402717, key_1325402718, hc_1325402719, hc_1325402719_Idx) {
  var result_1325402720 = 0;

  BeforeRet: {
    hc_1325402719[hc_1325402719_Idx] = hash_1358954923(key_1325402718);
    if ((hc_1325402719[hc_1325402719_Idx] == 0)) {
    hc_1325402719[hc_1325402719_Idx] = 314159265;
    }
    
    if (((t_1325402717.data).length == 0)) {
    result_1325402720 = -1;
    break BeforeRet;
    }
    
    var h_1325402772 = (hc_1325402719[hc_1325402719_Idx] & (t_1325402717.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325402717.data[chckIndx(h_1325402772, 0, (t_1325402717.data).length - 1)].Field0)) break Label2;
          if (((t_1325402717.data[chckIndx(h_1325402772, 0, (t_1325402717.data).length - 1)].Field0 == hc_1325402719[hc_1325402719_Idx]) && eqStrings(t_1325402717.data[chckIndx(h_1325402772, 0, (t_1325402717.data).length - 1)].Field1, key_1325402718))) {
          result_1325402720 = h_1325402772;
          break BeforeRet;
          }
          
          h_1325402772 = nextTry_1342177315(h_1325402772, (t_1325402717.data).length - 1);
        }
    };
    result_1325402720 = subInt(-1, h_1325402772);
  };

  return result_1325402720;

}

function mustRehash_1325405907(t_1325405909) {
  var result_1325405910 = false;

    if (!((t_1325405909.counter < (t_1325405909.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1325405910 = ((mulInt((t_1325405909.data).length, 2) < mulInt(t_1325405909.counter, 3)) || (subInt((t_1325405909.data).length, t_1325405909.counter) < 4));

  return result_1325405910;

}

function rawInsert_1325406356(t_1325406360, data_1325406361, data_1325406361_Idx, key_1325406362, val_1325406363, hc_1325406364, h_1325406365) {
    data_1325406361[data_1325406361_Idx][chckIndx(h_1325406365, 0, (data_1325406361[data_1325406361_Idx]).length - 1)].Field1 = nimCopy(null, key_1325406362, NTI33554449);
    data_1325406361[data_1325406361_Idx][chckIndx(h_1325406365, 0, (data_1325406361[data_1325406361_Idx]).length - 1)].Field2 = val_1325406363;
    data_1325406361[data_1325406361_Idx][chckIndx(h_1325406365, 0, (data_1325406361[data_1325406361_Idx]).length - 1)].Field0 = hc_1325406364;

  
}

function enlarge_1325406062(t_1325406065) {
    var n_1325406068 = [];
    n_1325406068 = new Array(chckRange(mulInt((t_1325406065.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1325406065.data).length, 2), 0, 2147483647) ; ++i) { n_1325406068[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1325406065.data; t_1325406065.data = n_1325406068; n_1325406068 = Temporary1;    Label2: {
      var i_1325406132 = 0;
      var colontmp__536871135 = 0;
      colontmp__536871135 = (n_1325406068).length - 1;
      var res_536871136 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871136 <= colontmp__536871135)) break Label4;
            i_1325406132 = res_536871136;
            var eh_1325406186 = n_1325406068[chckIndx(i_1325406132, 0, (n_1325406068).length - 1)].Field0;
            if (isFilled_1342177312(eh_1325406186)) {
            var j_1325406190 = (eh_1325406186 & (t_1325406065.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_1325406065.data[chckIndx(j_1325406190, 0, (t_1325406065.data).length - 1)].Field0)) break Label6;
                  j_1325406190 = nextTry_1342177315(j_1325406190, (t_1325406065.data).length - 1);
                }
            };
            rawInsert_1325406356(t_1325406065, t_1325406065, "data", n_1325406068[chckIndx(i_1325406132, 0, (n_1325406068).length - 1)].Field1, n_1325406068[chckIndx(i_1325406132, 0, (n_1325406068).length - 1)].Field2, eh_1325406186, j_1325406190);
            }
            
            res_536871136 = addInt(res_536871136, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1325406534(t_1325406537, key_1325406538, hc_1325406539) {
  var result_1325406540 = 0;

  BeforeRet: {
    if (((t_1325406537.data).length == 0)) {
    result_1325406540 = -1;
    break BeforeRet;
    }
    
    var h_1325406591 = (hc_1325406539 & (t_1325406537.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325406537.data[chckIndx(h_1325406591, 0, (t_1325406537.data).length - 1)].Field0)) break Label2;
          if (((t_1325406537.data[chckIndx(h_1325406591, 0, (t_1325406537.data).length - 1)].Field0 == hc_1325406539) && eqStrings(t_1325406537.data[chckIndx(h_1325406591, 0, (t_1325406537.data).length - 1)].Field1, key_1325406538))) {
          result_1325406540 = h_1325406591;
          break BeforeRet;
          }
          
          h_1325406591 = nextTry_1342177315(h_1325406591, (t_1325406537.data).length - 1);
        }
    };
    result_1325406540 = subInt(-1, h_1325406591);
  };

  return result_1325406540;

}

function HEX5BHEX5DHEX3D_1325405734(t_1325405737, key_1325405738, val_1325405739) {
    if (((t_1325405737.data).length == 0)) {
    var correctSizeHEX60gensym55_1325405788 = slotsNeeded_1342177323(32);
    t_1325405737.counter = 0;
    t_1325405737.data = new Array(chckRange(correctSizeHEX60gensym55_1325405788, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym55_1325405788, 0, 2147483647) ; ++i) { t_1325405737.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1325405793 = [0];
    var index_1325405800 = rawGet_1325402714(t_1325405737, key_1325405738, hc_1325405793, 0);
    if ((0 <= index_1325405800)) {
    t_1325405737.data[chckIndx(index_1325405800, 0, (t_1325405737.data).length - 1)].Field2 = val_1325405739;
    }
    else {
      if (((t_1325405737.data).length == 0)) {
      var correctSizeHEX60gensym58_1325405902 = slotsNeeded_1342177323(32);
      t_1325405737.counter = 0;
      t_1325405737.data = new Array(chckRange(correctSizeHEX60gensym58_1325405902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_1325405902, 0, 2147483647) ; ++i) { t_1325405737.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1325405907(t_1325405737)) {
      enlarge_1325406062(t_1325405737);
      index_1325405800 = rawGetKnownHC_1325406534(t_1325405737, key_1325405738, hc_1325405793[0]);
      }
      
      index_1325405800 = subInt(-1, index_1325405800);
      rawInsert_1325406356(t_1325405737, t_1325405737, "data", key_1325405738, val_1325405739, hc_1325405793[0], index_1325405800);
      t_1325405737.counter = addInt(t_1325405737.counter, 1);
    }
    

  
}

function toTable_1325405660(pairs_1325405663) {
  var result_1325405664 = [({data: [], counter: 0})];

    result_1325405664[0] = nimCopy(result_1325405664[0], initTable_1325405665((pairs_1325405663).length), NTI1325400086);
    Label1: {
      var key_1325405692 = [];
      var val_1325405693 = 0.0;
      var i_536871130 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871130 < (pairs_1325405663).length)) break Label3;
            key_1325405692 = pairs_1325405663[chckIndx(i_536871130, 0, (pairs_1325405663).length - 1)]["Field0"];
            val_1325405693 = pairs_1325405663[chckIndx(i_536871130, 0, (pairs_1325405663).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1325405734(result_1325405664[0], key_1325405692, val_1325405693);
            i_536871130 = addInt(i_536871130, 1);
          }
      };
    };

  return result_1325405664[0];

}

function rawGet_2499806212(t_2499806215, key_2499806216, hc_2499806217, hc_2499806217_Idx) {
  var result_2499806218 = 0;

  BeforeRet: {
    hc_2499806217[hc_2499806217_Idx] = hash_1358954923(key_2499806216);
    if ((hc_2499806217[hc_2499806217_Idx] == 0)) {
    hc_2499806217[hc_2499806217_Idx] = 314159265;
    }
    
    if (((t_2499806215.data).length == 0)) {
    result_2499806218 = -1;
    break BeforeRet;
    }
    
    var h_2499806269 = (hc_2499806217[hc_2499806217_Idx] & (t_2499806215.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2499806215.data[chckIndx(h_2499806269, 0, (t_2499806215.data).length - 1)].Field0)) break Label2;
          if (((t_2499806215.data[chckIndx(h_2499806269, 0, (t_2499806215.data).length - 1)].Field0 == hc_2499806217[hc_2499806217_Idx]) && eqStrings(t_2499806215.data[chckIndx(h_2499806269, 0, (t_2499806215.data).length - 1)].Field1, key_2499806216))) {
          result_2499806218 = h_2499806269;
          break BeforeRet;
          }
          
          h_2499806269 = nextTry_1342177315(h_2499806269, (t_2499806215.data).length - 1);
        }
    };
    result_2499806218 = subInt(-1, h_2499806269);
  };

  return result_2499806218;

}

function mustRehash_2499806557(t_2499806559) {
  var result_2499806560 = false;

    if (!((t_2499806559.counter < (t_2499806559.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2499806560 = ((mulInt((t_2499806559.data).length, 2) < mulInt(t_2499806559.counter, 3)) || (subInt((t_2499806559.data).length, t_2499806559.counter) < 4));

  return result_2499806560;

}

function rawInsert_2499807006(t_2499807010, data_2499807011, data_2499807011_Idx, key_2499807012, val_2499807013, hc_2499807014, h_2499807015) {
    data_2499807011[data_2499807011_Idx][chckIndx(h_2499807015, 0, (data_2499807011[data_2499807011_Idx]).length - 1)].Field1 = nimCopy(null, key_2499807012, NTI33554449);
    data_2499807011[data_2499807011_Idx][chckIndx(h_2499807015, 0, (data_2499807011[data_2499807011_Idx]).length - 1)].Field2 = nimCopy(data_2499807011[data_2499807011_Idx][chckIndx(h_2499807015, 0, (data_2499807011[data_2499807011_Idx]).length - 1)].Field2, val_2499807013, NTI2382364675);
    data_2499807011[data_2499807011_Idx][chckIndx(h_2499807015, 0, (data_2499807011[data_2499807011_Idx]).length - 1)].Field0 = hc_2499807014;

  
}

function enlarge_2499806712(t_2499806715) {
    var n_2499806718 = [];
    n_2499806718 = new Array(chckRange(mulInt((t_2499806715.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2499806715.data).length, 2), 0, 2147483647) ; ++i) { n_2499806718[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2499806715.data; t_2499806715.data = n_2499806718; n_2499806718 = Temporary1;    Label2: {
      var i_2499806782 = 0;
      var colontmp__536871142 = 0;
      colontmp__536871142 = (n_2499806718).length - 1;
      var res_536871143 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871143 <= colontmp__536871142)) break Label4;
            i_2499806782 = res_536871143;
            var eh_2499806836 = n_2499806718[chckIndx(i_2499806782, 0, (n_2499806718).length - 1)].Field0;
            if (isFilled_1342177312(eh_2499806836)) {
            var j_2499806840 = (eh_2499806836 & (t_2499806715.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2499806715.data[chckIndx(j_2499806840, 0, (t_2499806715.data).length - 1)].Field0)) break Label6;
                  j_2499806840 = nextTry_1342177315(j_2499806840, (t_2499806715.data).length - 1);
                }
            };
            rawInsert_2499807006(t_2499806715, t_2499806715, "data", n_2499806718[chckIndx(i_2499806782, 0, (n_2499806718).length - 1)].Field1, n_2499806718[chckIndx(i_2499806782, 0, (n_2499806718).length - 1)].Field2, eh_2499806836, j_2499806840);
            }
            
            res_536871143 = addInt(res_536871143, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2499807175(t_2499807178, key_2499807179, hc_2499807180) {
  var result_2499807181 = 0;

  BeforeRet: {
    if (((t_2499807178.data).length == 0)) {
    result_2499807181 = -1;
    break BeforeRet;
    }
    
    var h_2499807232 = (hc_2499807180 & (t_2499807178.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2499807178.data[chckIndx(h_2499807232, 0, (t_2499807178.data).length - 1)].Field0)) break Label2;
          if (((t_2499807178.data[chckIndx(h_2499807232, 0, (t_2499807178.data).length - 1)].Field0 == hc_2499807180) && eqStrings(t_2499807178.data[chckIndx(h_2499807232, 0, (t_2499807178.data).length - 1)].Field1, key_2499807179))) {
          result_2499807181 = h_2499807232;
          break BeforeRet;
          }
          
          h_2499807232 = nextTry_1342177315(h_2499807232, (t_2499807178.data).length - 1);
        }
    };
    result_2499807181 = subInt(-1, h_2499807232);
  };

  return result_2499807181;

}

function HEX5BHEX5DHEX3D_2499806151(t_2499806154, key_2499806155, val_2499806156) {
    if (((t_2499806154.data).length == 0)) {
    var correctSizeHEX60gensym23_2499806206 = slotsNeeded_1342177323(32);
    t_2499806154.counter = 0;
    t_2499806154.data = new Array(chckRange(correctSizeHEX60gensym23_2499806206, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2499806206, 0, 2147483647) ; ++i) { t_2499806154.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2499806211 = [0];
    var index_2499806450 = rawGet_2499806212(t_2499806154, key_2499806155, hc_2499806211, 0);
    if ((0 <= index_2499806450)) {
    t_2499806154.data[chckIndx(index_2499806450, 0, (t_2499806154.data).length - 1)].Field2 = nimCopy(t_2499806154.data[chckIndx(index_2499806450, 0, (t_2499806154.data).length - 1)].Field2, val_2499806156, NTI2382364675);
    }
    else {
      if (((t_2499806154.data).length == 0)) {
      var correctSizeHEX60gensym28_2499806552 = slotsNeeded_1342177323(32);
      t_2499806154.counter = 0;
      t_2499806154.data = new Array(chckRange(correctSizeHEX60gensym28_2499806552, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2499806552, 0, 2147483647) ; ++i) { t_2499806154.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2499806557(t_2499806154)) {
      enlarge_2499806712(t_2499806154);
      index_2499806450 = rawGetKnownHC_2499807175(t_2499806154, key_2499806155, hc_2499806211[0]);
      }
      
      index_2499806450 = subInt(-1, index_2499806450);
      rawInsert_2499807006(t_2499806154, t_2499806154, "data", key_2499806155, val_2499806156, hc_2499806211[0], index_2499806450);
      t_2499806154.counter = addInt(t_2499806154.counter, 1);
    }
    

  
}

function nsuStartsWith(s_872416682, prefix_872416683) {
  var result_872416684 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_872416689 = (prefix_872416683).length;
    var sLenHEX60gensym146_872416690 = (s_872416682).length;
    var iHEX60gensym146_872416691 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_872416689 <= iHEX60gensym146_872416691)) {
          result_872416684 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_872416690 <= iHEX60gensym146_872416691) || !((s_872416682[chckIndx(iHEX60gensym146_872416691, 0, (s_872416682).length - 1)] == prefix_872416683[chckIndx(iHEX60gensym146_872416691, 0, (prefix_872416683).length - 1)])))) {
          result_872416684 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_872416691 = addInt(iHEX60gensym146_872416691, 1);
        }
    };
  };

  return result_872416684;

}

function c2n_2365587644(hex_2365587645, i_2365587646) {
  var result_2365587647 = 0;

  BeforeRet: {
    var c_2365587651 = hex_2365587645[chckIndx(i_2365587646, 0, (hex_2365587645).length - 1)];
    if (    c_2365587651 >= 48 && c_2365587651 <= 57    ){      result_2365587647 = subInt(c_2365587651, 48);
      break BeforeRet;
      }
    else if (    c_2365587651 >= 97 && c_2365587651 <= 102    ){      result_2365587647 = subInt(addInt(10, c_2365587651), 97);
      break BeforeRet;
      }
    else if (    c_2365587651 >= 65 && c_2365587651 <= 70    ){      result_2365587647 = subInt(addInt(10, c_2365587651), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2382364693, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2365587647;

}

function parseHex_2365587698(hex_2365587699) {
  var result_2365587700 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2365587699).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2365587700.r = (addInt(mulInt(c2n_2365587644(hex_2365587699, 0), 16), c2n_2365587644(hex_2365587699, 1)) / 255.0);
    result_2365587700.g = (addInt(mulInt(c2n_2365587644(hex_2365587699, 2), 16), c2n_2365587644(hex_2365587699, 3)) / 255.0);
    result_2365587700.b = (addInt(mulInt(c2n_2365587644(hex_2365587699, 4), 16), c2n_2365587644(hex_2365587699, 5)) / 255.0);
    result_2365587700.a = 1.0;

  return result_2365587700;

}

function parseHexAlpha_2365587789(hex_2365587790) {
  var result_2365587791 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2365587790).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2365587791.r = (addInt(mulInt(c2n_2365587644(hex_2365587790, 0), 16), c2n_2365587644(hex_2365587790, 1)) / 255.0);
    result_2365587791.g = (addInt(mulInt(c2n_2365587644(hex_2365587790, 2), 16), c2n_2365587644(hex_2365587790, 3)) / 255.0);
    result_2365587791.b = (addInt(mulInt(c2n_2365587644(hex_2365587790, 4), 16), c2n_2365587644(hex_2365587790, 5)) / 255.0);
    result_2365587791.a = (addInt(mulInt(c2n_2365587644(hex_2365587790, 6), 16), c2n_2365587644(hex_2365587790, 7)) / 255.0);

  return result_2365587791;

}

function parseHtmlHexTiny_2365587899(hex_2365587900) {
  var result_2365587901 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2365587900[chckIndx(0, 0, (hex_2365587900).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2382364693, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2365587900).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2365587901.r = (c2n_2365587644(hex_2365587900, 1) / 15.0);
    result_2365587901.g = (c2n_2365587644(hex_2365587900, 2) / 15.0);
    result_2365587901.b = (c2n_2365587644(hex_2365587900, 3) / 15.0);
    result_2365587901.a = 1.0;

  return result_2365587901;

}

function parseHex_872416223(s_872416225, number_872416226, number_872416226_Idx, maxLen_872416227) {
    var Temporary1;

  var result_872416228 = 0;

    var i_872416229 = 0;
    var output_872416230 = 0;
    var foundDigit_872416231 = false;
    if ((maxLen_872416227 == 0)) {
    Temporary1 = (s_872416225).length;
    }
    else {
    Temporary1 = addInt(i_872416229, maxLen_872416227);
    }
    
    var last_872416238 = nimMin((s_872416225).length, Temporary1);
    if ((((addInt(i_872416229, 1) < last_872416238) && (s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)] == 48)) && (ConstSet136[s_872416225[chckIndx(addInt(i_872416229, 1), 0, (s_872416225).length - 1)]] != undefined))) {
    i_872416229 = addInt(i_872416229, 2);
    }
    else {
    if (((i_872416229 < last_872416238) && (s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)] == 35))) {
    i_872416229 = addInt(i_872416229, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_872416229 < last_872416238)) break Label3;
          switch (s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_872416230 = ((output_872416230 << 4) | subInt(s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)], 48));
            foundDigit_872416231 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_872416230 = ((output_872416230 << 4) | addInt(subInt(s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)], 97), 10));
            foundDigit_872416231 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_872416230 = ((output_872416230 << 4) | addInt(subInt(s_872416225[chckIndx(i_872416229, 0, (s_872416225).length - 1)], 65), 10));
            foundDigit_872416231 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_872416229 = addInt(i_872416229, 1);
        }
    };
    if (foundDigit_872416231) {
    number_872416226[number_872416226_Idx] = output_872416230;
    result_872416228 = i_872416229;
    }
    

  return result_872416228;

}

function parseHex_872416216(s_872416218, number_872416219, number_872416219_Idx, start_872416220, maxLen_872416221) {
  var result_872416222 = 0;

    result_872416222 = parseHex_872416223((s_872416218.slice(start_872416220, (s_872416218).length - 1 + 1)), number_872416219, number_872416219_Idx, maxLen_872416221);

  return result_872416222;

}

function nsuParseHexInt(s_872416214) {
  var result_872416215 = [0];

    result_872416215[0] = 0;
    var L_872416288 = parseHex_872416216(s_872416214, result_872416215, 0, 0, 0);
    if ((!((L_872416288 == (s_872416214).length)) || (L_872416288 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_872416214 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_872416215[0];

}

function HEX5BHEX5D_2365587738(s_2365587741, x_2365587742) {
  var result_2365587743 = [];

    var a_2365587745 = subInt((s_2365587741).length, x_2365587742.a);
    var L_2365587747 = addInt(subInt(subInt((s_2365587741).length, x_2365587742.b), a_2365587745), 1);
    result_2365587743 = nimCopy(null, mnewString(chckRange(L_2365587747, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2365587752 = 0;
      var i_536871148 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871148 < L_2365587747)) break Label3;
            i_2365587752 = i_536871148;
            result_2365587743[chckIndx(i_2365587752, 0, (result_2365587743).length - 1)] = s_2365587741[chckIndx(addInt(i_2365587752, a_2365587745), 0, (s_2365587741).length - 1)];
            i_536871148 = addInt(i_536871148, 1);
          }
      };
    };

  return result_2365587743;

}

function HEX2EHEX2E_2365587711(a_2365587714, b_2365587715) {
  var result_2365587718 = ({a: 0, b: 0});

    result_2365587718 = nimCopy(result_2365587718, {a: a_2365587714, b: b_2365587715}, NTI2365587613);

  return result_2365587718;

}

function parseHexVar_2499805231(text_2499805232) {
    var Temporary1;

  var result_2499805233 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2499805232, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2499805234 = Temporary1;
    if (((text_2499805232).length == addInt(6, offset_2499805234))) {
    result_2499805233 = nimCopy(result_2499805233, parseHex_2365587698(HEX5BHEX5D_872416535(text_2499805232, HEX2EHEX2E_1056964704(offset_2499805234, 1))), NTI2382364675);
    break BeforeRet;
    }
    else {
    if (((text_2499805232).length == addInt(8, offset_2499805234))) {
    result_2499805233 = nimCopy(result_2499805233, parseHexAlpha_2365587789(HEX5BHEX5D_872416535(text_2499805232, HEX2EHEX2E_1056964704(offset_2499805234, 1))), NTI2382364675);
    break BeforeRet;
    }
    else {
    if (((text_2499805232).length == addInt(3, offset_2499805234))) {
    result_2499805233 = nimCopy(result_2499805233, parseHtmlHexTiny_2365587899(([35] || []).concat(HEX5BHEX5D_872416535(text_2499805232, HEX2EHEX2E_1056964704(offset_2499805234, 1)) || [])), NTI2382364675);
    break BeforeRet;
    }
    else {
    if (((text_2499805232).length == addInt(4, offset_2499805234))) {
    result_2499805233 = nimCopy(result_2499805233, parseHtmlHexTiny_2365587899(([35] || []).concat(HEX5BHEX5D_872416535(text_2499805232, HEX2EHEX2E_1056964704(offset_2499805234, 2)) || [])), NTI2382364675);
    result_2499805233.a = (nsuParseHexInt(HEX5BHEX5D_2365587738(text_2499805232, HEX2EHEX2E_2365587711(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2499805232, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2499805233 = nimCopy(result_2499805233, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2382364675);
    break BeforeRet;
  };

  return result_2499805233;

}

function rawGet_2499805448(t_2499805451, key_2499805452, hc_2499805453, hc_2499805453_Idx) {
  var result_2499805454 = 0;

  BeforeRet: {
    hc_2499805453[hc_2499805453_Idx] = hash_1358954923(key_2499805452);
    if ((hc_2499805453[hc_2499805453_Idx] == 0)) {
    hc_2499805453[hc_2499805453_Idx] = 314159265;
    }
    
    if (((t_2499805451.data).length == 0)) {
    result_2499805454 = -1;
    break BeforeRet;
    }
    
    var h_2499805506 = (hc_2499805453[hc_2499805453_Idx] & (t_2499805451.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2499805451.data[chckIndx(h_2499805506, 0, (t_2499805451.data).length - 1)].Field0)) break Label2;
          if (((t_2499805451.data[chckIndx(h_2499805506, 0, (t_2499805451.data).length - 1)].Field0 == hc_2499805453[hc_2499805453_Idx]) && eqStrings(t_2499805451.data[chckIndx(h_2499805506, 0, (t_2499805451.data).length - 1)].Field1, key_2499805452))) {
          result_2499805454 = h_2499805506;
          break BeforeRet;
          }
          
          h_2499805506 = nextTry_1342177315(h_2499805506, (t_2499805451.data).length - 1);
        }
    };
    result_2499805454 = subInt(-1, h_2499805506);
  };

  return result_2499805454;

}

function mustRehash_2499807722(t_2499807724) {
  var result_2499807725 = false;

    if (!((t_2499807724.counter < (t_2499807724.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2499807725 = ((mulInt((t_2499807724.data).length, 2) < mulInt(t_2499807724.counter, 3)) || (subInt((t_2499807724.data).length, t_2499807724.counter) < 4));

  return result_2499807725;

}

function rawInsert_2499808171(t_2499808175, data_2499808176, data_2499808176_Idx, key_2499808177, val_2499808178, hc_2499808179, h_2499808180) {
    data_2499808176[data_2499808176_Idx][chckIndx(h_2499808180, 0, (data_2499808176[data_2499808176_Idx]).length - 1)].Field1 = nimCopy(null, key_2499808177, NTI33554449);
    data_2499808176[data_2499808176_Idx][chckIndx(h_2499808180, 0, (data_2499808176[data_2499808176_Idx]).length - 1)].Field2 = nimCopy(data_2499808176[data_2499808176_Idx][chckIndx(h_2499808180, 0, (data_2499808176[data_2499808176_Idx]).length - 1)].Field2, val_2499808178, NTI2499805188);
    data_2499808176[data_2499808176_Idx][chckIndx(h_2499808180, 0, (data_2499808176[data_2499808176_Idx]).length - 1)].Field0 = hc_2499808179;

  
}

function enlarge_2499807877(t_2499807880) {
    var n_2499807883 = [];
    n_2499807883 = new Array(chckRange(mulInt((t_2499807880.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2499807880.data).length, 2), 0, 2147483647) ; ++i) { n_2499807883[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2499807880.data; t_2499807880.data = n_2499807883; n_2499807883 = Temporary1;    Label2: {
      var i_2499807947 = 0;
      var colontmp__536871153 = 0;
      colontmp__536871153 = (n_2499807883).length - 1;
      var res_536871154 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871154 <= colontmp__536871153)) break Label4;
            i_2499807947 = res_536871154;
            var eh_2499808001 = n_2499807883[chckIndx(i_2499807947, 0, (n_2499807883).length - 1)].Field0;
            if (isFilled_1342177312(eh_2499808001)) {
            var j_2499808005 = (eh_2499808001 & (t_2499807880.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2499807880.data[chckIndx(j_2499808005, 0, (t_2499807880.data).length - 1)].Field0)) break Label6;
                  j_2499808005 = nextTry_1342177315(j_2499808005, (t_2499807880.data).length - 1);
                }
            };
            rawInsert_2499808171(t_2499807880, t_2499807880, "data", n_2499807883[chckIndx(i_2499807947, 0, (n_2499807883).length - 1)].Field1, n_2499807883[chckIndx(i_2499807947, 0, (n_2499807883).length - 1)].Field2, eh_2499808001, j_2499808005);
            }
            
            res_536871154 = addInt(res_536871154, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2499808340(t_2499808343, key_2499808344, hc_2499808345) {
  var result_2499808346 = 0;

  BeforeRet: {
    if (((t_2499808343.data).length == 0)) {
    result_2499808346 = -1;
    break BeforeRet;
    }
    
    var h_2499808397 = (hc_2499808345 & (t_2499808343.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2499808343.data[chckIndx(h_2499808397, 0, (t_2499808343.data).length - 1)].Field0)) break Label2;
          if (((t_2499808343.data[chckIndx(h_2499808397, 0, (t_2499808343.data).length - 1)].Field0 == hc_2499808345) && eqStrings(t_2499808343.data[chckIndx(h_2499808397, 0, (t_2499808343.data).length - 1)].Field1, key_2499808344))) {
          result_2499808346 = h_2499808397;
          break BeforeRet;
          }
          
          h_2499808397 = nextTry_1342177315(h_2499808397, (t_2499808343.data).length - 1);
        }
    };
    result_2499808346 = subInt(-1, h_2499808397);
  };

  return result_2499808346;

}

function HEX5BHEX5DHEX3D_2499807549(t_2499807552, key_2499807553, val_2499807554) {
    if (((t_2499807552.data).length == 0)) {
    var correctSizeHEX60gensym37_2499807603 = slotsNeeded_1342177323(32);
    t_2499807552.counter = 0;
    t_2499807552.data = new Array(chckRange(correctSizeHEX60gensym37_2499807603, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2499807603, 0, 2147483647) ; ++i) { t_2499807552.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2499807608 = [0];
    var index_2499807615 = rawGet_2499805448(t_2499807552, key_2499807553, hc_2499807608, 0);
    if ((0 <= index_2499807615)) {
    t_2499807552.data[chckIndx(index_2499807615, 0, (t_2499807552.data).length - 1)].Field2 = nimCopy(t_2499807552.data[chckIndx(index_2499807615, 0, (t_2499807552.data).length - 1)].Field2, val_2499807554, NTI2499805188);
    }
    else {
      if (((t_2499807552.data).length == 0)) {
      var correctSizeHEX60gensym40_2499807717 = slotsNeeded_1342177323(32);
      t_2499807552.counter = 0;
      t_2499807552.data = new Array(chckRange(correctSizeHEX60gensym40_2499807717, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2499807717, 0, 2147483647) ; ++i) { t_2499807552.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2499807722(t_2499807552)) {
      enlarge_2499807877(t_2499807552);
      index_2499807615 = rawGetKnownHC_2499808340(t_2499807552, key_2499807553, hc_2499807608[0]);
      }
      
      index_2499807615 = subInt(-1, index_2499807615);
      rawInsert_2499808171(t_2499807552, t_2499807552, "data", key_2499807553, val_2499807554, hc_2499807608[0], index_2499807615);
      t_2499807552.counter = addInt(t_2499807552.counter, 1);
    }
    

  
}

function some_2499806034(val_2499806036) {
  var result_2499806037 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2499806037.has = true;
    result_2499806037.val = nimCopy(result_2499806037.val, val_2499806036, NTI2382364675);

  return result_2499806037;

}

function defaultTheme_2499808846() {
  var result_2499808847 = null;

    result_2499808847 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2499808847.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2499808847.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2499805231([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2499805231([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2499805231([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2499805231([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2499805231([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2499805231([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2499805231([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2499805231([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2499805231([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499806151(result_2499808847.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2499805231([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2499807549(result_2499808847.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2499806034(parseHexVar_2499805231([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet137, NTI2499805207), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2499808847;

}

function loadFromFile_2499808842(path_2499808843) {
  var result_2499808845 = ({val: null});

  return result_2499808845;

}

function isSome_1325405270(self_1325405272) {
  var result_1325405273 = false;

    result_1325405273 = !((self_1325405272.val == null));

  return result_1325405273;

}

function isNone_1325405298(self_1325405300) {
  var result_1325405301 = false;

    result_1325405301 = (self_1325405300.val == null);

  return result_1325405301;

}

function get_1325405290(self_1325405292) {
  var result_1325405293 = null;

    if (isNone_1325405298(self_1325405292)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1325405293 = self_1325405292["val"];

  return result_1325405293;

}

function setTheme_1325405260(self_1325405261, path_1325405262) {
      var Temporary1;

      var oHEX60gensym50_1325405265 = loadFromFile_2499808842(path_1325405262);
      if (!isSome_1325405270(oHEX60gensym50_1325405265)) Temporary1 = false; else {        var theme_1325405316 = get_1325405290(oHEX60gensym50_1325405265);
        Temporary1 = true;      }    if (Temporary1) {
    self_1325405261.theme = theme_1325405316;
    }
    

  
}

function rawGet_1828716889(t_1828716892, key_1828716893, hc_1828716894, hc_1828716894_Idx) {
  var result_1828716895 = 0;

  BeforeRet: {
    hc_1828716894[hc_1828716894_Idx] = hash_1358954923(key_1828716893);
    if ((hc_1828716894[hc_1828716894_Idx] == 0)) {
    hc_1828716894[hc_1828716894_Idx] = 314159265;
    }
    
    if (((t_1828716892.data).length == 0)) {
    result_1828716895 = -1;
    break BeforeRet;
    }
    
    var h_1828716947 = (hc_1828716894[hc_1828716894_Idx] & (t_1828716892.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1828716892.data[chckIndx(h_1828716947, 0, (t_1828716892.data).length - 1)].Field0)) break Label2;
          if (((t_1828716892.data[chckIndx(h_1828716947, 0, (t_1828716892.data).length - 1)].Field0 == hc_1828716894[hc_1828716894_Idx]) && eqStrings(t_1828716892.data[chckIndx(h_1828716947, 0, (t_1828716892.data).length - 1)].Field1, key_1828716893))) {
          result_1828716895 = h_1828716947;
          break BeforeRet;
          }
          
          h_1828716947 = nextTry_1342177315(h_1828716947, (t_1828716892.data).length - 1);
        }
    };
    result_1828716895 = subInt(-1, h_1828716947);
  };

  return result_1828716895;

}

function mustRehash_1828717337(t_1828717339) {
  var result_1828717340 = false;

    if (!((t_1828717339.counter < (t_1828717339.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1828717340 = ((mulInt((t_1828717339.data).length, 2) < mulInt(t_1828717339.counter, 3)) || (subInt((t_1828717339.data).length, t_1828717339.counter) < 4));

  return result_1828717340;

}

function rawInsert_1828717786(t_1828717790, data_1828717791, data_1828717791_Idx, key_1828717792, val_1828717793, hc_1828717794, h_1828717795) {
    data_1828717791[data_1828717791_Idx][chckIndx(h_1828717795, 0, (data_1828717791[data_1828717791_Idx]).length - 1)].Field1 = nimCopy(null, key_1828717792, NTI33554449);
    data_1828717791[data_1828717791_Idx][chckIndx(h_1828717795, 0, (data_1828717791[data_1828717791_Idx]).length - 1)].Field2 = nimCopy(null, val_1828717793, NTI33554449);
    data_1828717791[data_1828717791_Idx][chckIndx(h_1828717795, 0, (data_1828717791[data_1828717791_Idx]).length - 1)].Field0 = hc_1828717794;

  
}

function enlarge_1828717492(t_1828717495) {
    var n_1828717498 = [];
    n_1828717498 = new Array(chckRange(mulInt((t_1828717495.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1828717495.data).length, 2), 0, 2147483647) ; ++i) { n_1828717498[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1828717495.data; t_1828717495.data = n_1828717498; n_1828717498 = Temporary1;    Label2: {
      var i_1828717562 = 0;
      var colontmp__536871159 = 0;
      colontmp__536871159 = (n_1828717498).length - 1;
      var res_536871160 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871160 <= colontmp__536871159)) break Label4;
            i_1828717562 = res_536871160;
            var eh_1828717616 = n_1828717498[chckIndx(i_1828717562, 0, (n_1828717498).length - 1)].Field0;
            if (isFilled_1342177312(eh_1828717616)) {
            var j_1828717620 = (eh_1828717616 & (t_1828717495.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_1828717495.data[chckIndx(j_1828717620, 0, (t_1828717495.data).length - 1)].Field0)) break Label6;
                  j_1828717620 = nextTry_1342177315(j_1828717620, (t_1828717495.data).length - 1);
                }
            };
            rawInsert_1828717786(t_1828717495, t_1828717495, "data", n_1828717498[chckIndx(i_1828717562, 0, (n_1828717498).length - 1)].Field1, n_1828717498[chckIndx(i_1828717562, 0, (n_1828717498).length - 1)].Field2, eh_1828717616, j_1828717620);
            }
            
            res_536871160 = addInt(res_536871160, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1828717955(t_1828717958, key_1828717959, hc_1828717960) {
  var result_1828717961 = 0;

  BeforeRet: {
    if (((t_1828717958.data).length == 0)) {
    result_1828717961 = -1;
    break BeforeRet;
    }
    
    var h_1828718012 = (hc_1828717960 & (t_1828717958.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1828717958.data[chckIndx(h_1828718012, 0, (t_1828717958.data).length - 1)].Field0)) break Label2;
          if (((t_1828717958.data[chckIndx(h_1828718012, 0, (t_1828717958.data).length - 1)].Field0 == hc_1828717960) && eqStrings(t_1828717958.data[chckIndx(h_1828718012, 0, (t_1828717958.data).length - 1)].Field1, key_1828717959))) {
          result_1828717961 = h_1828718012;
          break BeforeRet;
          }
          
          h_1828718012 = nextTry_1342177315(h_1828718012, (t_1828717958.data).length - 1);
        }
    };
    result_1828717961 = subInt(-1, h_1828718012);
  };

  return result_1828717961;

}

function HEX5BHEX5DHEX3D_1828717164(t_1828717167, key_1828717168, val_1828717169) {
    if (((t_1828717167.data).length == 0)) {
    var correctSizeHEX60gensym8_1828717218 = slotsNeeded_1342177323(32);
    t_1828717167.counter = 0;
    t_1828717167.data = new Array(chckRange(correctSizeHEX60gensym8_1828717218, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1828717218, 0, 2147483647) ; ++i) { t_1828717167.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1828717223 = [0];
    var index_1828717230 = rawGet_1828716889(t_1828717167, key_1828717168, hc_1828717223, 0);
    if ((0 <= index_1828717230)) {
    t_1828717167.data[chckIndx(index_1828717230, 0, (t_1828717167.data).length - 1)].Field2 = nimCopy(null, val_1828717169, NTI33554449);
    }
    else {
      if (((t_1828717167.data).length == 0)) {
      var correctSizeHEX60gensym11_1828717332 = slotsNeeded_1342177323(32);
      t_1828717167.counter = 0;
      t_1828717167.data = new Array(chckRange(correctSizeHEX60gensym11_1828717332, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1828717332, 0, 2147483647) ; ++i) { t_1828717167.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1828717337(t_1828717167)) {
      enlarge_1828717492(t_1828717167);
      index_1828717230 = rawGetKnownHC_1828717955(t_1828717167, key_1828717168, hc_1828717223[0]);
      }
      
      index_1828717230 = subInt(-1, index_1828717230);
      rawInsert_1828717786(t_1828717167, t_1828717167, "data", key_1828717168, val_1828717169, hc_1828717223[0], index_1828717230);
      t_1828717167.counter = addInt(t_1828717167.counter, 1);
    }
    

  
}

function addCommand_2080375164(config_2080375165, keys_2080375166, action_2080375167) {
    HEX5BHEX5DHEX3D_1828717164(config_2080375165.commands, keys_2080375166, action_2080375167);
    config_2080375165.revision = addInt(config_2080375165.revision, 1);

  
}

function rawGet_1325403508(t_1325403511, key_1325403512, hc_1325403513, hc_1325403513_Idx) {
  var result_1325403514 = 0;

  BeforeRet: {
    hc_1325403513[hc_1325403513_Idx] = hash_1358954923(key_1325403512);
    if ((hc_1325403513[hc_1325403513_Idx] == 0)) {
    hc_1325403513[hc_1325403513_Idx] = 314159265;
    }
    
    if (((t_1325403511.data).length == 0)) {
    result_1325403514 = -1;
    break BeforeRet;
    }
    
    var h_1325403566 = (hc_1325403513[hc_1325403513_Idx] & (t_1325403511.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325403511.data[chckIndx(h_1325403566, 0, (t_1325403511.data).length - 1)].Field0)) break Label2;
          if (((t_1325403511.data[chckIndx(h_1325403566, 0, (t_1325403511.data).length - 1)].Field0 == hc_1325403513[hc_1325403513_Idx]) && eqStrings(t_1325403511.data[chckIndx(h_1325403566, 0, (t_1325403511.data).length - 1)].Field1, key_1325403512))) {
          result_1325403514 = h_1325403566;
          break BeforeRet;
          }
          
          h_1325403566 = nextTry_1342177315(h_1325403566, (t_1325403511.data).length - 1);
        }
    };
    result_1325403514 = subInt(-1, h_1325403566);
  };

  return result_1325403514;

}

function hasKey_1325403501(t_1325403504, key_1325403505) {
  var result_1325403506 = false;

    var hc_1325403507 = [0];
    result_1325403506 = (0 <= rawGet_1325403508(t_1325403504, key_1325403505, hc_1325403507, 0));

  return result_1325403506;

}

function contains_1325403495(t_1325403498, key_1325403499) {
  var result_1325403500 = false;

  BeforeRet: {
    result_1325403500 = hasKey_1325403501(t_1325403498, key_1325403499);
    break BeforeRet;
  };

  return result_1325403500;

}

function mustRehash_1325403960(t_1325403962) {
  var result_1325403963 = false;

    if (!((t_1325403962.counter < (t_1325403962.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1325403963 = ((mulInt((t_1325403962.data).length, 2) < mulInt(t_1325403962.counter, 3)) || (subInt((t_1325403962.data).length, t_1325403962.counter) < 4));

  return result_1325403963;

}

function rawInsert_1325404409(t_1325404413, data_1325404414, data_1325404414_Idx, key_1325404415, val_1325404416, hc_1325404417, h_1325404418) {
    data_1325404414[data_1325404414_Idx][chckIndx(h_1325404418, 0, (data_1325404414[data_1325404414_Idx]).length - 1)].Field1 = nimCopy(null, key_1325404415, NTI33554449);
    data_1325404414[data_1325404414_Idx][chckIndx(h_1325404418, 0, (data_1325404414[data_1325404414_Idx]).length - 1)].Field2 = val_1325404416;
    data_1325404414[data_1325404414_Idx][chckIndx(h_1325404418, 0, (data_1325404414[data_1325404414_Idx]).length - 1)].Field0 = hc_1325404417;

  
}

function enlarge_1325404115(t_1325404118) {
    var n_1325404121 = [];
    n_1325404121 = new Array(chckRange(mulInt((t_1325404118.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1325404118.data).length, 2), 0, 2147483647) ; ++i) { n_1325404121[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1325404118.data; t_1325404118.data = n_1325404121; n_1325404121 = Temporary1;    Label2: {
      var i_1325404185 = 0;
      var colontmp__536871166 = 0;
      colontmp__536871166 = (n_1325404121).length - 1;
      var res_536871167 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871167 <= colontmp__536871166)) break Label4;
            i_1325404185 = res_536871167;
            var eh_1325404239 = n_1325404121[chckIndx(i_1325404185, 0, (n_1325404121).length - 1)].Field0;
            if (isFilled_1342177312(eh_1325404239)) {
            var j_1325404243 = (eh_1325404239 & (t_1325404118.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_1325404118.data[chckIndx(j_1325404243, 0, (t_1325404118.data).length - 1)].Field0)) break Label6;
                  j_1325404243 = nextTry_1342177315(j_1325404243, (t_1325404118.data).length - 1);
                }
            };
            rawInsert_1325404409(t_1325404118, t_1325404118, "data", n_1325404121[chckIndx(i_1325404185, 0, (n_1325404121).length - 1)].Field1, n_1325404121[chckIndx(i_1325404185, 0, (n_1325404121).length - 1)].Field2, eh_1325404239, j_1325404243);
            }
            
            res_536871167 = addInt(res_536871167, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1325404578(t_1325404581, key_1325404582, hc_1325404583) {
  var result_1325404584 = 0;

  BeforeRet: {
    if (((t_1325404581.data).length == 0)) {
    result_1325404584 = -1;
    break BeforeRet;
    }
    
    var h_1325404635 = (hc_1325404583 & (t_1325404581.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325404581.data[chckIndx(h_1325404635, 0, (t_1325404581.data).length - 1)].Field0)) break Label2;
          if (((t_1325404581.data[chckIndx(h_1325404635, 0, (t_1325404581.data).length - 1)].Field0 == hc_1325404583) && eqStrings(t_1325404581.data[chckIndx(h_1325404635, 0, (t_1325404581.data).length - 1)].Field1, key_1325404582))) {
          result_1325404584 = h_1325404635;
          break BeforeRet;
          }
          
          h_1325404635 = nextTry_1342177315(h_1325404635, (t_1325404581.data).length - 1);
        }
    };
    result_1325404584 = subInt(-1, h_1325404635);
  };

  return result_1325404584;

}

function HEX5BHEX5DHEX3D_1325403787(t_1325403790, key_1325403791, val_1325403792) {
    if (((t_1325403790.data).length == 0)) {
    var correctSizeHEX60gensym32_1325403841 = slotsNeeded_1342177323(32);
    t_1325403790.counter = 0;
    t_1325403790.data = new Array(chckRange(correctSizeHEX60gensym32_1325403841, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_1325403841, 0, 2147483647) ; ++i) { t_1325403790.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1325403846 = [0];
    var index_1325403853 = rawGet_1325403508(t_1325403790, key_1325403791, hc_1325403846, 0);
    if ((0 <= index_1325403853)) {
    t_1325403790.data[chckIndx(index_1325403853, 0, (t_1325403790.data).length - 1)].Field2 = val_1325403792;
    }
    else {
      if (((t_1325403790.data).length == 0)) {
      var correctSizeHEX60gensym35_1325403955 = slotsNeeded_1342177323(32);
      t_1325403790.counter = 0;
      t_1325403790.data = new Array(chckRange(correctSizeHEX60gensym35_1325403955, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_1325403955, 0, 2147483647) ; ++i) { t_1325403790.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1325403960(t_1325403790)) {
      enlarge_1325404115(t_1325403790);
      index_1325403853 = rawGetKnownHC_1325404578(t_1325403790, key_1325403791, hc_1325403846[0]);
      }
      
      index_1325403853 = subInt(-1, index_1325403853);
      rawInsert_1325404409(t_1325403790, t_1325403790, "data", key_1325403791, val_1325403792, hc_1325403846[0], index_1325403853);
      t_1325403790.counter = addInt(t_1325403790.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2080374821(context_2080374822) {
  var result_2080374823 = null;

    result_2080374823 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2080374823.handleActions = true;
    result_2080374823.handleInputs = false;
    result_2080374823.context = nimCopy(null, context_2080374822, NTI33554449);

  return result_2080374823;

}

function raiseKeyError_1660947325(key_1660947327) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1660947327 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1325404869(t_1325404872, key_1325404873) {
  var result_1325404874 = null;
  var result_1325404874_Idx = 0;

    var hcHEX60gensym22_1325404875 = [0];
    var indexHEX60gensym22_1325404882 = rawGet_1325403508(t_1325404872, key_1325404873, hcHEX60gensym22_1325404875, 0);
    if ((0 <= indexHEX60gensym22_1325404882)) {
    result_1325404874 = t_1325404872.data[chckIndx(indexHEX60gensym22_1325404882, 0, (t_1325404872.data).length - 1)]; result_1325404874_Idx = "Field2";
    }
    else {
    raiseKeyError_1660947325(key_1325404873);
    }
    

  return [result_1325404874, result_1325404874_Idx];

}

function getEventHandlerConfig_1325403449(self_1325403450, context_1325403451) {
    var Temporary1;

  var result_1325403452 = null;

  BeforeRet: {
    if (!(contains_1325403495(self_1325403450.eventHandlerConfigs, context_1325403451))) {
    HEX5BHEX5DHEX3D_1325403787(self_1325403450.eventHandlerConfigs, context_1325403451, newEventHandlerConfig_2080374821(context_1325403451));
    }
    
    result_1325403452 = (Temporary1 = HEX5BHEX5D_1325404869(self_1325403450.eventHandlerConfigs, context_1325403451), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1325403452;

}

function initOrderedTable_1660944485(initialSize_1660944488) {
  var result_1660944489 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1660944491 = slotsNeeded_1342177323(chckRange(initialSize_1660944488, 0, 2147483647));
    result_1660944489.counter = 0;
    result_1660944489.data = new Array(chckRange(correctSizeHEX60gensym0_1660944491, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1660944491, 0, 2147483647) ; ++i) { result_1660944489.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1660944489.first = -1;
    result_1660944489.last = -1;

  return result_1660944489;

}

function newJObject_1660944483() {
  var result_1660944484 = null;

    result_1660944484 = {kind: 5, fields: initOrderedTable_1660944485(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1660944484;

}

function invalidFormatString_872417551(formatstr_872417552) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_872417552 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1124073473(c_1124073474) {
  var result_1124073475 = 0;

    if ((ConstSet141[c_1124073474] != undefined)) {
    result_1124073475 = chckRange(addInt(c_1124073474, 32), 0, 255);
    }
    else {
      result_1124073475 = c_1124073474;
    }
    

  return result_1124073475;

}

function nsuCmpIgnoreStyle(a_872415443, b_872415444) {
          var Temporary7;
          var Temporary8;

  var result_872415445 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_872415454 = (a_872415443).length;
    var bLenHEX60gensym24_872415455 = (b_872415444).length;
    var iHEX60gensym24_872415456 = 0;
    var jHEX60gensym24_872415457 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_872415456 < aLenHEX60gensym24_872415454) && (a_872415443[iHEX60gensym24_872415456] == 95))) break Label4;
                iHEX60gensym24_872415456 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_872415457 < bLenHEX60gensym24_872415455) && (b_872415444[jHEX60gensym24_872415457] == 95))) break Label6;
                jHEX60gensym24_872415457 += 1;
              }
          };
          if ((iHEX60gensym24_872415456 < aLenHEX60gensym24_872415454)) {
          Temporary7 = toLowerAscii_1124073473(a_872415443[iHEX60gensym24_872415456]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_872415468 = Temporary7;
          if ((jHEX60gensym24_872415457 < bLenHEX60gensym24_872415455)) {
          Temporary8 = toLowerAscii_1124073473(b_872415444[jHEX60gensym24_872415457]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_872415469 = Temporary8;
          result_872415445 = (aaHEX60gensym24_872415468 - bbHEX60gensym24_872415469);
          if (!((result_872415445 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_872415454 <= iHEX60gensym24_872415456)) {
          if ((bLenHEX60gensym24_872415455 <= jHEX60gensym24_872415457)) {
          result_872415445 = 0;
          break BeforeRet;
          }
          
          result_872415445 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_872415455 <= jHEX60gensym24_872415457)) {
          result_872415445 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_872415456 += 1;
          jHEX60gensym24_872415457 += 1;
        }
    };
  };

  return result_872415445;

}

function findNormalized_872417538(x_872417539, inArray_872417540) {
  var result_872417541 = 0;

  BeforeRet: {
    var i_872417542 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_872417542 < (inArray_872417540).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_872417539, inArray_872417540[chckIndx(i_872417542, 0, (inArray_872417540).length - 1)]) == 0)) {
          result_872417541 = i_872417542;
          break BeforeRet;
          }
          
          i_872417542 = addInt(i_872417542, 2);
        }
    };
    result_872417541 = -1;
    break BeforeRet;
  };

  return result_872417541;

}

function nsuAddf(s_872417555, s_872417555_Idx, formatstr_872417556, a_872417557) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_872417559 = 0;
    var num_872417560 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_872417559 < (formatstr_872417556).length)) break Label2;
          if (((formatstr_872417556[chckIndx(i_872417559, 0, (formatstr_872417556).length - 1)] == 36) && (addInt(i_872417559, 1) < (formatstr_872417556).length))) {
          switch (formatstr_872417556[chckIndx(addInt(i_872417559, 1), 0, (formatstr_872417556).length - 1)]) {
          case 35:
            if (((a_872417557).length - 1 < num_872417560)) {
            invalidFormatString_872417551(formatstr_872417556);
            }
            
            s_872417555[s_872417555_Idx].push.apply(s_872417555[s_872417555_Idx], a_872417557[chckIndx(num_872417560, 0, (a_872417557).length - 1)]);;
            i_872417559 = addInt(i_872417559, 2);
            num_872417560 = addInt(num_872417560, 1);
            break;
          case 36:
            addChar(s_872417555[s_872417555_Idx], 36);;
            i_872417559 = addInt(i_872417559, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_872417579 = 0;
            i_872417559 = addInt(i_872417559, 1);
            var negative_872417585 = (formatstr_872417556[chckIndx(i_872417559, 0, (formatstr_872417556).length - 1)] == 45);
            if (negative_872417585) {
            i_872417559 = addInt(i_872417559, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_872417559 < (formatstr_872417556).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet138[formatstr_872417556[chckIndx(i_872417559, 0, (formatstr_872417556).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_872417579 = subInt(addInt(mulInt(j_872417579, 10), formatstr_872417556[chckIndx(i_872417559, 0, (formatstr_872417556).length - 1)]), 48);
                  i_872417559 = addInt(i_872417559, 1);
                }
            };
            if (!(negative_872417585)) {
            Temporary6 = subInt(j_872417579, 1);
            }
            else {
            Temporary6 = subInt((a_872417557).length, j_872417579);
            }
            
            var idx_872417610 = Temporary6;
            if (((idx_872417610 < 0) || ((a_872417557).length - 1 < idx_872417610))) {
            invalidFormatString_872417551(formatstr_872417556);
            }
            
            s_872417555[s_872417555_Idx].push.apply(s_872417555[s_872417555_Idx], a_872417557[chckIndx(idx_872417610, 0, (a_872417557).length - 1)]);;
            break;
          case 123:
            var j_872417614 = addInt(i_872417559, 2);
            var k_872417615 = 0;
            var negative_872417616 = (formatstr_872417556[chckIndx(j_872417614, 0, (formatstr_872417556).length - 1)] == 45);
            if (negative_872417616) {
            j_872417614 = addInt(j_872417614, 1);
            }
            
            var isNumber_872417622 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_872417614 < (formatstr_872417556).length) && !((ConstSet139[formatstr_872417556[chckIndx(j_872417614, 0, (formatstr_872417556).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet140[formatstr_872417556[chckIndx(j_872417614, 0, (formatstr_872417556).length - 1)]] != undefined)) {
                  k_872417615 = subInt(addInt(mulInt(k_872417615, 10), formatstr_872417556[chckIndx(j_872417614, 0, (formatstr_872417556).length - 1)]), 48);
                  if ((isNumber_872417622 == 0)) {
                  isNumber_872417622 = 1;
                  }
                  
                  }
                  else {
                    isNumber_872417622 = -1;
                  }
                  
                  j_872417614 = addInt(j_872417614, 1);
                }
            };
            if ((isNumber_872417622 == 1)) {
            if (!(negative_872417616)) {
            Temporary9 = subInt(k_872417615, 1);
            }
            else {
            Temporary9 = subInt((a_872417557).length, k_872417615);
            }
            
            var idx_872417645 = Temporary9;
            if (((idx_872417645 < 0) || ((a_872417557).length - 1 < idx_872417645))) {
            invalidFormatString_872417551(formatstr_872417556);
            }
            
            s_872417555[s_872417555_Idx].push.apply(s_872417555[s_872417555_Idx], a_872417557[chckIndx(idx_872417645, 0, (a_872417557).length - 1)]);;
            }
            else {
              var x_872417649 = findNormalized_872417538(substr_33557821(formatstr_872417556, addInt(i_872417559, 2), subInt(j_872417614, 1)), a_872417557);
              if (((0 <= x_872417649) && (x_872417649 < (a_872417557).length - 1))) {
              s_872417555[s_872417555_Idx].push.apply(s_872417555[s_872417555_Idx], a_872417557[chckIndx(addInt(x_872417649, 1), 0, (a_872417557).length - 1)]);;
              }
              else {
              invalidFormatString_872417551(formatstr_872417556);
              }
              
            }
            
            i_872417559 = addInt(j_872417614, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_872417653 = addInt(i_872417559, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_872417653 < (formatstr_872417556).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet142[formatstr_872417556[chckIndx(j_872417653, 0, (formatstr_872417556).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_872417653 = addInt(j_872417653, 1);
                }
            };
            var x_872417663 = findNormalized_872417538(substr_33557821(formatstr_872417556, addInt(i_872417559, 1), subInt(j_872417653, 1)), a_872417557);
            if (((0 <= x_872417663) && (x_872417663 < (a_872417557).length - 1))) {
            s_872417555[s_872417555_Idx].push.apply(s_872417555[s_872417555_Idx], a_872417557[chckIndx(addInt(x_872417663, 1), 0, (a_872417557).length - 1)]);;
            }
            else {
            invalidFormatString_872417551(formatstr_872417556);
            }
            
            i_872417559 = j_872417653;
            break;
          default: 
            invalidFormatString_872417551(formatstr_872417556);
            break;
          }
          }
          else {
            addChar(s_872417555[s_872417555_Idx], formatstr_872417556[chckIndx(i_872417559, 0, (formatstr_872417556).length - 1)]);;
            i_872417559 = addInt(i_872417559, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_872417673, a_872417674) {
  var result_872417675 = [[]];

    result_872417675[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_872417675, 0, formatstr_872417673, a_872417674);

  return result_872417675[0];

}

function newJArray_1660944514() {
  var result_1660944515 = null;

    result_1660944515 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1660944515;

}

function ssClose_1694499846(s_1694499847) {
    var s_1694499848 = s_1694499847;
    s_1694499848.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1694499525(s_1694499526) {
  var result_1694499527 = false;

  BeforeRet: {
    var s_1694499528 = s_1694499526;
    result_1694499527 = ((s_1694499528.data).length <= s_1694499528.pos);
    break BeforeRet;
  };

  return result_1694499527;

}

function clamp_1694499551(x_1694499553, a_1694499554, b_1694499555) {
  var result_1694499556 = 0;

  BeforeRet: {
    if ((x_1694499553 < a_1694499554)) {
    result_1694499556 = a_1694499554;
    break BeforeRet;
    }
    
    if ((b_1694499555 < x_1694499553)) {
    result_1694499556 = b_1694499555;
    break BeforeRet;
    }
    
    result_1694499556 = x_1694499553;
    break BeforeRet;
  };

  return result_1694499556;

}

function ssSetPosition_1694499547(s_1694499548, pos_1694499549) {
    var s_1694499550 = s_1694499548;
    s_1694499550.pos = clamp_1694499551(pos_1694499549, 0, (s_1694499550.data).length);

  
}

function ssGetPosition_1694499557(s_1694499558) {
  var result_1694499559 = 0;

  BeforeRet: {
    var s_1694499560 = s_1694499558;
    result_1694499559 = s_1694499560.pos;
    break BeforeRet;
  };

  return result_1694499559;

}

function HEX5BHEX5DHEX3D_872416399(s_872416402, s_872416402_Idx, x_872416403, b_872416404) {
    var a_872416406 = x_872416403.a;
    var L_872416408 = addInt(subInt(x_872416403.b, a_872416406), 1);
    if ((L_872416408 == (b_872416404).length)) {
    Label1: {
      var i_872416413 = 0;
      var i_536871186 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871186 < L_872416408)) break Label3;
            i_872416413 = i_536871186;
            s_872416402[s_872416402_Idx][chckIndx(addInt(i_872416413, a_872416406), 0, (s_872416402[s_872416402_Idx]).length - 1)] = b_872416404[chckIndx(i_872416413, 0, (b_872416404).length - 1)];
            i_536871186 = addInt(i_536871186, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_872416419 = subInt((b_872416404).length, nimMax(0, L_872416408));
      var newLenHEX60gensym109_872416420 = addInt((s_872416402[s_872416402_Idx]).length, shiftHEX60gensym109_872416419);
      if ((0 < shiftHEX60gensym109_872416419)) {
      if (s_872416402[s_872416402_Idx].length < chckRange(newLenHEX60gensym109_872416420, 0, 2147483647)) { for (var i = s_872416402[s_872416402_Idx].length; i < chckRange(newLenHEX60gensym109_872416420, 0, 2147483647); ++i) s_872416402[s_872416402_Idx].push(0); }
         else {s_872416402[s_872416402_Idx].length = chckRange(newLenHEX60gensym109_872416420, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_872416426 = 0;
        var colontmp__536871189 = 0;
        var colontmp__536871190 = 0;
        colontmp__536871189 = subInt(newLenHEX60gensym109_872416420, 1);
        colontmp__536871190 = addInt(a_872416406, (b_872416404).length);
        var res_536871191 = colontmp__536871189;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__536871190 <= res_536871191)) break Label6;
              iHEX60gensym109_872416426 = res_536871191;
              s_872416402[s_872416402_Idx][chckIndx(iHEX60gensym109_872416426, 0, (s_872416402[s_872416402_Idx]).length - 1)] = s_872416402[s_872416402_Idx][chckIndx(subInt(iHEX60gensym109_872416426, shiftHEX60gensym109_872416419), 0, (s_872416402[s_872416402_Idx]).length - 1)];
              res_536871191 = subInt(res_536871191, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_872416432 = 0;
          var colontmp__536871194 = 0;
          var colontmp__536871195 = 0;
          colontmp__536871194 = addInt(a_872416406, (b_872416404).length);
          colontmp__536871195 = subInt(newLenHEX60gensym109_872416420, 1);
          var res_536871196 = colontmp__536871194;
          Label8: {
              Label9: while (true) {
              if (!(res_536871196 <= colontmp__536871195)) break Label9;
                iHEX60gensym109_872416432 = res_536871196;
                s_872416402[s_872416402_Idx][chckIndx(iHEX60gensym109_872416432, 0, (s_872416402[s_872416402_Idx]).length - 1)] = s_872416402[s_872416402_Idx][chckIndx(subInt(iHEX60gensym109_872416432, shiftHEX60gensym109_872416419), 0, (s_872416402[s_872416402_Idx]).length - 1)];
                res_536871196 = addInt(res_536871196, 1);
              }
          };
        };
        if (s_872416402[s_872416402_Idx].length < chckRange(newLenHEX60gensym109_872416420, 0, 2147483647)) { for (var i = s_872416402[s_872416402_Idx].length; i < chckRange(newLenHEX60gensym109_872416420, 0, 2147483647); ++i) s_872416402[s_872416402_Idx].push(0); }
         else {s_872416402[s_872416402_Idx].length = chckRange(newLenHEX60gensym109_872416420, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_872416437 = 0;
        var colontmp__536871199 = 0;
        colontmp__536871199 = (b_872416404).length;
        var i_536871200 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_536871200 < colontmp__536871199)) break Label12;
              iHEX60gensym109_872416437 = i_536871200;
              s_872416402[s_872416402_Idx][chckIndx(addInt(a_872416406, iHEX60gensym109_872416437), 0, (s_872416402[s_872416402_Idx]).length - 1)] = b_872416404[chckIndx(iHEX60gensym109_872416437, 0, (b_872416404).length - 1)];
              i_536871200 = addInt(i_536871200, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1694499561(s_1694499562, buffer_1694499563, buffer_1694499563_Idx, slice_1694499565) {
  var result_1694499566 = 0;

    var s_1694499567 = s_1694499562;
    result_1694499566 = nimMin(subInt(addInt(slice_1694499565.b, 1), slice_1694499565.a), subInt((s_1694499567.data).length, s_1694499567.pos));
    if ((0 < result_1694499566)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_872416399(buffer_1694499563, buffer_1694499563_Idx, HEX2EHEX2E_822083634(slice_1694499565.a, subInt(addInt(slice_1694499565.a, result_1694499566), 1)), HEX5BHEX5D_872416507(s_1694499567.data, HEX2EHEX2E_822083634(s_1694499567.pos, subInt(addInt(s_1694499567.pos, result_1694499566), 1))));
    s_1694499567.pos = addInt(s_1694499567.pos, result_1694499566);
    }
    else {
      result_1694499566 = 0;
    }
    

  return result_1694499566;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function ssReadData_1694499663(s_1694499664, buffer_1694499665, buffer_1694499665_Idx, bufLen_1694499666) {
  var result_1694499667 = 0;

    var s_1694499668 = s_1694499664;
    result_1694499667 = nimMin(bufLen_1694499666, subInt((s_1694499668.data).length, s_1694499668.pos));
    if ((0 < result_1694499667)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_872416399(buffer_1694499665, buffer_1694499665_Idx, HEX2EHEX2E_822083634(0, subInt(result_1694499667, 1)), HEX5BHEX5D_872416507(s_1694499668.data, HEX2EHEX2E_822083634(s_1694499668.pos, subInt(addInt(s_1694499668.pos, result_1694499667), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1694499668.pos = addInt(s_1694499668.pos, result_1694499667);
    }
    else {
      result_1694499667 = 0;
    }
    

  return result_1694499667;

}

function ssPeekData_1694499738(s_1694499739, buffer_1694499740, buffer_1694499740_Idx, bufLen_1694499741) {
  var result_1694499742 = 0;

    var s_1694499743 = s_1694499739;
    result_1694499742 = nimMin(bufLen_1694499741, subInt((s_1694499743.data).length, s_1694499743.pos));
    if ((0 < result_1694499742)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_872416399(buffer_1694499740, buffer_1694499740_Idx, HEX2EHEX2E_822083634(0, subInt(result_1694499742, 1)), HEX5BHEX5D_872416507(s_1694499743.data, HEX2EHEX2E_822083634(s_1694499743.pos, subInt(addInt(s_1694499743.pos, result_1694499742), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1694499742 = 0;
    }
    

  return result_1694499742;

}

function ssWriteData_1694499790(s_1694499791, buffer_1694499792, buffer_1694499792_Idx, bufLen_1694499793) {
    var Temporary1;

  BeforeRet: {
    var s_1694499794 = s_1694499791;
    if ((bufLen_1694499793 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1694499794.data).length < addInt(s_1694499794.pos, bufLen_1694499793))) {
    if (s_1694499794.data.length < (Temporary1 = chckRange(addInt(s_1694499794.pos, bufLen_1694499793), 0, 2147483647), Temporary1)) { for (var i = s_1694499794.data.length; i < Temporary1; ++i) s_1694499794.data.push(0); }
         else {s_1694499794.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_872416399(s_1694499794, "data", HEX2EHEX2E_822083634(s_1694499794.pos, subInt(addInt(s_1694499794.pos, bufLen_1694499793), 1)), HEX5BHEX5D_872416507(buffer_1694499792[buffer_1694499792_Idx], HEX2EHEX2E_822083634(0, subInt(bufLen_1694499793, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1694499794.pos = addInt(s_1694499794.pos, bufLen_1694499793);
  };

  
}

function newStringStream_1694499849(s_1694499850) {
  var result_1694499851 = null;

    result_1694499851 = ({m_type: NTI1694499294, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1694499851.data = nimCopy(null, s_1694499850, NTI33554449);
    result_1694499851.pos = 0;
    result_1694499851.closeImpl = ssClose_1694499846;
    result_1694499851.atEndImpl = ssAtEnd_1694499525;
    result_1694499851.setPositionImpl = ssSetPosition_1694499547;
    result_1694499851.getPositionImpl = ssGetPosition_1694499557;
    result_1694499851.readDataStrImpl = ssReadDataStr_1694499561;
    result_1694499851.readDataImpl = ssReadData_1694499663;
    result_1694499851.peekDataImpl = ssPeekData_1694499738;
    result_1694499851.writeDataImpl = ssWriteData_1694499790;

  return result_1694499851;

}

function readData_1694498894(s_1694498895, buffer_1694498896, buffer_1694498896_Idx, bufLen_1694498897) {
  var result_1694498898 = 0;

    result_1694498898 = s_1694498895.readDataImpl(s_1694498895, buffer_1694498896, buffer_1694498896_Idx, bufLen_1694498897);

  return result_1694498898;

}

function readDataStr_1694498900(s_1694498901, buffer_1694498902, buffer_1694498902_Idx, slice_1694498904) {
  var result_1694498905 = 0;

    if (!((s_1694498901.readDataStrImpl == null))) {
    result_1694498905 = s_1694498901.readDataStrImpl(s_1694498901, buffer_1694498902, buffer_1694498902_Idx, slice_1694498904);
    }
    else {
      result_1694498905 = readData_1694498894(s_1694498901, buffer_1694498902[buffer_1694498902_Idx], chckIndx(slice_1694498904.a, 0, (buffer_1694498902[buffer_1694498902_Idx]).length - 1), subInt(addInt(slice_1694498904.b, 1), slice_1694498904.a));
    }
    

  return result_1694498905;

}

function fillBuffer_1677721616(L_1677721617) {
              var Temporary8;

    var charsRead_1677721618 = 0;
    var toCopy_1677721619 = 0;
    var s_1677721620 = 0;
    var oldBufLen_1677721621 = 0;
    if (!((addInt(L_1677721617.sentinel, 1) <= (L_1677721617.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1677721619 = subInt((L_1677721617.buf).length, addInt(L_1677721617.sentinel, 1));
    if (!((0 <= toCopy_1677721619))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1677721619)) {
    Label1: {
      var i_1677721636 = 0;
      var i_536871203 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871203 < toCopy_1677721619)) break Label3;
            i_1677721636 = i_536871203;
            L_1677721617.buf[chckIndx(i_1677721636, 0, (L_1677721617.buf).length - 1)] = L_1677721617.buf[chckIndx(addInt(addInt(L_1677721617.sentinel, 1), i_1677721636), 0, (L_1677721617.buf).length - 1)];
            i_536871203 = addInt(i_536871203, 1);
          }
      };
    };
    }
    
    charsRead_1677721618 = readDataStr_1694498900(L_1677721617.input, L_1677721617, "buf", HEX2EHEX2E_822083634(toCopy_1677721619, subInt(addInt(addInt(toCopy_1677721619, L_1677721617.sentinel), 1), 1)));
    s_1677721620 = addInt(toCopy_1677721619, charsRead_1677721618);
    if ((charsRead_1677721618 < addInt(L_1677721617.sentinel, 1))) {
    L_1677721617.buf[chckIndx(s_1677721620, 0, (L_1677721617.buf).length - 1)] = 0;
    L_1677721617.sentinel = s_1677721620;
    }
    else {
      s_1677721620 = subInt(s_1677721620, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1677721620 < (L_1677721617.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1677721620) && !((L_1677721617.refillChars[L_1677721617.buf[chckIndx(s_1677721620, 0, (L_1677721617.buf).length - 1)]] != undefined)))) break Label7;
                  s_1677721620 = subInt(s_1677721620, 1);
                }
            };
            if ((0 <= s_1677721620)) {
            L_1677721617.sentinel = s_1677721620;
            break Label4;
            }
            else {
              oldBufLen_1677721621 = (L_1677721617.buf).length;
              if (L_1677721617.buf.length < (Temporary8 = chckRange(mulInt((L_1677721617.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1677721617.buf.length; i < Temporary8; ++i) L_1677721617.buf.push(0); }
         else {L_1677721617.buf.length = Temporary8; };
              charsRead_1677721618 = readDataStr_1694498900(L_1677721617.input, L_1677721617, "buf", HEX2EHEX2E_822083634(oldBufLen_1677721621, subInt((L_1677721617.buf).length, 1)));
              if ((charsRead_1677721618 < oldBufLen_1677721621)) {
              L_1677721617.buf[chckIndx(addInt(oldBufLen_1677721621, charsRead_1677721618), 0, (L_1677721617.buf).length - 1)] = 0;
              L_1677721617.sentinel = addInt(oldBufLen_1677721621, charsRead_1677721618);
              break Label4;
              }
              
              s_1677721620 = subInt((L_1677721617.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1677721732(L_1677721733) {
    if ((((L_1677721733.buf[chckIndx(0, 0, (L_1677721733.buf).length - 1)] == 239) && (L_1677721733.buf[chckIndx(1, 0, (L_1677721733.buf).length - 1)] == 187)) && (L_1677721733.buf[chckIndx(2, 0, (L_1677721733.buf).length - 1)] == 191))) {
    L_1677721733.bufpos = addInt(L_1677721733.bufpos, 3);
    L_1677721733.lineStart = addInt(L_1677721733.lineStart, 3);
    }
    

  
}

function open_1677721744(L_1677721745, input_1677721746, bufLen_1677721747, refillChars_1677721748) {
    if (!((0 < bufLen_1677721747))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1677721746 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1677721745.input = input_1677721746;
    L_1677721745.bufpos = 0;
    L_1677721745.offsetBase = 0;
    L_1677721745.refillChars = nimCopy(L_1677721745.refillChars, refillChars_1677721748, NTI1677721605);
    L_1677721745.buf = nimCopy(null, mnewString(chckRange(bufLen_1677721747, 0, 2147483647)), NTI33554449);
    L_1677721745.sentinel = subInt(bufLen_1677721747, 1);
    L_1677721745.lineStart = 0;
    L_1677721745.lineNumber = 1;
    fillBuffer_1677721616(L_1677721745);
    skipUtf8Bom_1677721732(L_1677721745);

  
}

function open_1728053345(my_1728053346, input_1728053347, filename_1728053348, rawStringLiterals_1728053349) {
    open_1677721744(my_1728053346, input_1728053347, 8192, ConstSet143);
    my_1728053346.filename = nimCopy(null, filename_1728053348, NTI33554449);
    my_1728053346.state = nimCopy(null, [1], NTI1728053295);
    my_1728053346.kind = 0;
    my_1728053346.a = nimCopy(null, [], NTI33554449);
    my_1728053346.rawStringLiterals = rawStringLiterals_1728053349;

  
}

function fillBaseLexer_1677721678(L_1677721679, pos_1677721680) {
  var result_1677721681 = 0;

    if (!((pos_1677721680 <= L_1677721679.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1677721680 < L_1677721679.sentinel)) {
    result_1677721681 = addInt(pos_1677721680, 1);
    }
    else {
      fillBuffer_1677721616(L_1677721679);
      L_1677721679.offsetBase = addInt(L_1677721679.offsetBase, pos_1677721680);
      L_1677721679.bufpos = 0;
      result_1677721681 = 0;
    }
    

  return result_1677721681;

}

function handleCR_1677721691(L_1677721692, pos_1677721693) {
  var result_1677721694 = 0;

    if (!((L_1677721692.buf[chckIndx(pos_1677721693, 0, (L_1677721692.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1677721692.lineNumber = addInt(L_1677721692.lineNumber, 1);
    result_1677721694 = fillBaseLexer_1677721678(L_1677721692, pos_1677721693);
    if ((L_1677721692.buf[chckIndx(result_1677721694, 0, (L_1677721692.buf).length - 1)] == 10)) {
    result_1677721694 = fillBaseLexer_1677721678(L_1677721692, result_1677721694);
    }
    
    L_1677721692.lineStart = result_1677721694;

  return result_1677721694;

}

function handleLF_1677721705(L_1677721706, pos_1677721707) {
  var result_1677721708 = 0;

    if (!((L_1677721706.buf[chckIndx(pos_1677721707, 0, (L_1677721706.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1677721706.lineNumber = addInt(L_1677721706.lineNumber, 1);
    result_1677721708 = fillBaseLexer_1677721678(L_1677721706, pos_1677721707);
    L_1677721706.lineStart = result_1677721708;

  return result_1677721708;

}

function skip_1728053585(my_1728053586) {
    var pos_1728053587 = my_1728053586.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1728053586.buf[chckIndx(pos_1728053587, 0, (my_1728053586.buf).length - 1)]) {
          case 47:
            if ((my_1728053586.buf[chckIndx(addInt(pos_1728053587, 1), 0, (my_1728053586.buf).length - 1)] == 47)) {
            pos_1728053587 = addInt(pos_1728053587, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1728053586.buf[chckIndx(pos_1728053587, 0, (my_1728053586.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1728053587 = handleCR_1677721691(my_1728053586, pos_1728053587);
                    break Label3;
                    break;
                  case 10:
                    pos_1728053587 = handleLF_1677721705(my_1728053586, pos_1728053587);
                    break Label3;
                    break;
                  default: 
                    pos_1728053587 = addInt(pos_1728053587, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1728053586.buf[chckIndx(addInt(pos_1728053587, 1), 0, (my_1728053586.buf).length - 1)] == 42)) {
            pos_1728053587 = addInt(pos_1728053587, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1728053586.buf[chckIndx(pos_1728053587, 0, (my_1728053586.buf).length - 1)]) {
                  case 0:
                    my_1728053586.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1728053587 = handleCR_1677721691(my_1728053586, pos_1728053587);
                    break;
                  case 10:
                    pos_1728053587 = handleLF_1677721705(my_1728053586, pos_1728053587);
                    break;
                  case 42:
                    pos_1728053587 = addInt(pos_1728053587, 1);
                    if ((my_1728053586.buf[chckIndx(pos_1728053587, 0, (my_1728053586.buf).length - 1)] == 47)) {
                    pos_1728053587 = addInt(pos_1728053587, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1728053587 = addInt(pos_1728053587, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1728053587 = addInt(pos_1728053587, 1);
            break;
          case 13:
            pos_1728053587 = handleCR_1677721691(my_1728053586, pos_1728053587);
            break;
          case 10:
            pos_1728053587 = handleLF_1677721705(my_1728053586, pos_1728053587);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1728053586.bufpos = pos_1728053587;

  
}

function parseNumber_1728053623(my_1728053624) {
    var pos_1728053625 = my_1728053624.bufpos;
    if ((my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)] == 45)) {
    addChar(my_1728053624.a, 45);;
    pos_1728053625 = addInt(pos_1728053625, 1);
    }
    
    if ((my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)] == 46)) {
    my_1728053624.a.push.apply(my_1728053624.a, [48,46]);;
    pos_1728053625 = addInt(pos_1728053625, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet144[my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1728053624.a, my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]);;
            pos_1728053625 = addInt(pos_1728053625, 1);
          }
      };
      if ((my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)] == 46)) {
      addChar(my_1728053624.a, 46);;
      pos_1728053625 = addInt(pos_1728053625, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet145[my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1728053624.a, my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]);;
          pos_1728053625 = addInt(pos_1728053625, 1);
        }
    };
    if ((ConstSet146[my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]] != undefined)) {
    addChar(my_1728053624.a, my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]);;
    pos_1728053625 = addInt(pos_1728053625, 1);
    if ((ConstSet147[my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]] != undefined)) {
    addChar(my_1728053624.a, my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]);;
    pos_1728053625 = addInt(pos_1728053625, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet148[my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1728053624.a, my_1728053624.buf[chckIndx(pos_1728053625, 0, (my_1728053624.buf).length - 1)]);;
          pos_1728053625 = addInt(pos_1728053625, 1);
        }
    };
    }
    
    my_1728053624.bufpos = pos_1728053625;

  
}

function nsuFindCharSet(s_872416935, chars_872416936, start_872416937, last_872416938) {
    var Temporary1;

  var result_872416939 = 0;

  BeforeRet: {
    result_872416939 = -1;
    if ((last_872416938 < 0)) {
    Temporary1 = (s_872416935).length - 1;
    }
    else {
    Temporary1 = last_872416938;
    }
    
    var last_872416940 = Temporary1;
    Label2: {
      var i_872416945 = 0;
      var colontmp__536871214 = 0;
      colontmp__536871214 = start_872416937;
      var res_536871215 = colontmp__536871214;
      Label3: {
          Label4: while (true) {
          if (!(res_536871215 <= last_872416940)) break Label4;
            i_872416945 = res_536871215;
            if ((chars_872416936[s_872416935[chckIndx(i_872416945, 0, (s_872416935).length - 1)]] != undefined)) {
            result_872416939 = i_872416945;
            break BeforeRet;
            }
            
            res_536871215 = addInt(res_536871215, 1);
          }
      };
    };
  };

  return result_872416939;

}

function contains_872417097(s_872417098, chars_872417099) {
  var result_872417100 = false;

  BeforeRet: {
    result_872417100 = (0 <= nsuFindCharSet(s_872417098, chars_872417099, 0, -1));
    break BeforeRet;
  };

  return result_872417100;

}

function handleHexChar_1744830465(c_1744830466, x_1744830467, x_1744830467_Idx) {
  var result_1744830468 = false;

    result_1744830468 = true;
    switch (c_1744830466) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1744830467[x_1744830467_Idx] = ((x_1744830467[x_1744830467_Idx] << 4) | subInt(c_1744830466, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1744830467[x_1744830467_Idx] = ((x_1744830467[x_1744830467_Idx] << 4) | addInt(subInt(c_1744830466, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1744830467[x_1744830467_Idx] = ((x_1744830467[x_1744830467_Idx] << 4) | addInt(subInt(c_1744830466, 65), 10));
      break;
    default: 
      result_1744830468 = false;
      break;
    }

  return result_1744830468;

}

function parseEscapedUTF16_1728053467(buf_1728053468, pos_1728053469, pos_1728053469_Idx) {
  var result_1728053470 = [0];

  BeforeRet: {
    result_1728053470[0] = 0;
    Label1: {
      var __1728053475 = 0;
      var res_536871222 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871222 <= 3)) break Label3;
            __1728053475 = res_536871222;
            if (handleHexChar_1744830465(buf_1728053468.charCodeAt(chckIndx(pos_1728053469[pos_1728053469_Idx], 0, (buf_1728053468).length - 1)), result_1728053470, 0)) {
            pos_1728053469[pos_1728053469_Idx] = addInt(pos_1728053469[pos_1728053469_Idx], 1);
            }
            else {
              result_1728053470[0] = -1;
              break BeforeRet;
            }
            
            res_536871222 = addInt(res_536871222, 1);
          }
      };
    };
  };

  return result_1728053470[0];

}

function parseString_1728053481(my_1728053482) {
  var result_1728053483 = 0;

    result_1728053483 = 2;
    var pos_1728053484 = [addInt(my_1728053482.bufpos, 1)];
    if (my_1728053482.rawStringLiterals) {
    addChar(my_1728053482.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1728053482.buf[chckIndx(pos_1728053484[0], 0, (my_1728053482.buf).length - 1)]) {
          case 0:
            my_1728053482.err = 7;
            result_1728053483 = 0;
            break Label1;
            break;
          case 34:
            if (my_1728053482.rawStringLiterals) {
            addChar(my_1728053482.a, 34);;
            }
            
            pos_1728053484[0] = addInt(pos_1728053484[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1728053482.rawStringLiterals) {
            addChar(my_1728053482.a, 92);;
            }
            
            switch (my_1728053482.buf[chckIndx(addInt(pos_1728053484[0], 1), 0, (my_1728053482.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1728053482.a, my_1728053482.buf[chckIndx(addInt(pos_1728053484[0], 1), 0, (my_1728053482.buf).length - 1)]);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 98:
              addChar(my_1728053482.a, 8);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 102:
              addChar(my_1728053482.a, 12);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 110:
              addChar(my_1728053482.a, 10);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 114:
              addChar(my_1728053482.a, 13);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 116:
              addChar(my_1728053482.a, 9);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 118:
              addChar(my_1728053482.a, 11);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              break;
            case 117:
              if (my_1728053482.rawStringLiterals) {
              addChar(my_1728053482.a, 117);;
              }
              
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              var pos2_1728053530 = pos_1728053484[0];
              var r_1728053531 = parseEscapedUTF16_1728053467(toJSStr(my_1728053482.buf), pos_1728053484, 0);
              if ((r_1728053531 < 0)) {
              my_1728053482.err = 1;
              break Label1;
              }
              
              if (((r_1728053531 & 64512) == 55296)) {
              if ((!((my_1728053482.buf[chckIndx(pos_1728053484[0], 0, (my_1728053482.buf).length - 1)] == 92)) || !((my_1728053482.buf[chckIndx(addInt(pos_1728053484[0], 1), 0, (my_1728053482.buf).length - 1)] == 117)))) {
              my_1728053482.err = 1;
              break Label1;
              }
              
              pos_1728053484[0] = addInt(pos_1728053484[0], 2);
              var s_1728053537 = parseEscapedUTF16_1728053467(toJSStr(my_1728053482.buf), pos_1728053484, 0);
              if ((((s_1728053537 & 64512) == 56320) && (0 < s_1728053537))) {
              r_1728053531 = addInt(65536, ((subInt(r_1728053531, 55296) << 10) | subInt(s_1728053537, 56320)));
              }
              else {
                my_1728053482.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1728053482.rawStringLiterals) {
              var length_1728053542 = subInt(pos_1728053484[0], pos2_1728053530);
              Label3: {
                var i_1728053547 = 0;
                var res_536871219 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_536871219 <= length_1728053542)) break Label5;
                      i_1728053547 = res_536871219;
                      if ((ConstSet150[my_1728053482.buf[chckIndx(pos2_1728053530, 0, (my_1728053482.buf).length - 1)]] != undefined)) {
                      addChar(my_1728053482.a, my_1728053482.buf[chckIndx(pos2_1728053530, 0, (my_1728053482.buf).length - 1)]);;
                      pos2_1728053530 = addInt(pos2_1728053530, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_536871219 = addInt(res_536871219, 1);
                    }
                };
              };
              }
              else {
              my_1728053482.a.push.apply(my_1728053482.a, nuctoUTF8(((r_1728053531) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1728053482.a, my_1728053482.buf[chckIndx(pos_1728053484[0], 0, (my_1728053482.buf).length - 1)]);;
              pos_1728053484[0] = addInt(pos_1728053484[0], 1);
              break;
            }
            break;
          case 13:
            pos_1728053484[0] = handleCR_1677721691(my_1728053482, pos_1728053484[0]);
            addChar(my_1728053482.a, 13);;
            break;
          case 10:
            pos_1728053484[0] = handleLF_1677721705(my_1728053482, pos_1728053484[0]);
            addChar(my_1728053482.a, 10);;
            break;
          default: 
            addChar(my_1728053482.a, my_1728053482.buf[chckIndx(pos_1728053484[0], 0, (my_1728053482.buf).length - 1)]);;
            pos_1728053484[0] = addInt(pos_1728053484[0], 1);
            break;
          }
        }
    };
    my_1728053482.bufpos = pos_1728053484[0];

  return result_1728053483;

}

function parseName_1728053686(my_1728053687) {
    var pos_1728053688 = my_1728053687.bufpos;
    if ((ConstSet151[my_1728053687.buf[chckIndx(pos_1728053688, 0, (my_1728053687.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet152[my_1728053687.buf[chckIndx(pos_1728053688, 0, (my_1728053687.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1728053687.a, my_1728053687.buf[chckIndx(pos_1728053688, 0, (my_1728053687.buf).length - 1)]);;
          pos_1728053688 = addInt(pos_1728053688, 1);
        }
    };
    }
    
    my_1728053687.bufpos = pos_1728053688;

  
}

function getTok_1728053702(my_1728053703) {
  var result_1728053704 = 0;

    if (my_1728053703.a.length < 0) { for (var i = my_1728053703.a.length; i < 0; ++i) my_1728053703.a.push(0); }
         else {my_1728053703.a.length = 0; };
    skip_1728053585(my_1728053703);
    switch (my_1728053703.buf[chckIndx(my_1728053703.bufpos, 0, (my_1728053703.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1728053623(my_1728053703);
      if (contains_872417097(my_1728053703.a, ConstSet149)) {
      result_1728053704 = 4;
      }
      else {
        result_1728053704 = 3;
      }
      
      break;
    case 34:
      result_1728053704 = parseString_1728053481(my_1728053703);
      break;
    case 91:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 10;
      break;
    case 123:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 8;
      break;
    case 93:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 11;
      break;
    case 125:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 9;
      break;
    case 44:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 13;
      break;
    case 58:
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 12;
      break;
    case 0:
      result_1728053704 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1728053686(my_1728053703);
      switch (toJSStr(my_1728053703.a)) {
      case "null":
        result_1728053704 = 7;
        break;
      case "true":
        result_1728053704 = 5;
        break;
      case "false":
        result_1728053704 = 6;
        break;
      default: 
        result_1728053704 = 0;
        break;
      }
      break;
    default: 
      my_1728053703.bufpos = addInt(my_1728053703.bufpos, 1);
      result_1728053704 = 0;
      break;
    }
    my_1728053703.tok = result_1728053704;

  return result_1728053704;

}

function newJRawNumber_1660944469(s_1660944470) {
  var result_1660944471 = null;

    result_1660944471 = {kind: 4, str: nimCopy(null, s_1660944470, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944471;

}

function newJInt_1660944472(n_1660944473) {
  var result_1660944474 = null;

    result_1660944474 = {kind: 2, num: n_1660944473, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944474;

}

function parseBiggestInt_788529935(s_788529936, number_788529937, number_788529937_Idx, start_788529938) {
  var result_788529939 = 0;

    result_788529939 = npuParseBiggestInt((s_788529936.slice(start_788529938, (s_788529936).length - 1 + 1)), number_788529937, number_788529937_Idx);

  return result_788529939;

}

function nsuParseBiggestInt(s_872416090) {
  var result_872416091 = [0];

    result_872416091[0] = 0;
    var L_872416092 = parseBiggestInt_788529935(s_872416090, result_872416091, 0, 0);
    if ((!((L_872416092 == (s_872416090).length)) || (L_872416092 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_872416090 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_872416091[0];

}

function newJFloat_1660944475(n_1660944476) {
  var result_1660944477 = null;

    result_1660944477 = {kind: 3, fnum: n_1660944476, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944477;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_536871235 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871235 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_536871235];
            addChar(str_33557214, x_33557228);;
            i_536871235 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_788529682, number_788529683, number_788529683_Idx) {
  var result_788529684 = 0;

    var bf_788529685 = [0.0];
    result_788529684 = nimParseBiggestFloat(s_788529682, bf_788529685, 0);
    if (!((result_788529684 == 0))) {
    number_788529683[number_788529683_Idx] = bf_788529685[0];
    }
    

  return result_788529684;

}

function parseFloat_788529965(s_788529966, number_788529967, number_788529967_Idx, start_788529968) {
  var result_788529969 = 0;

    result_788529969 = npuParseFloat((s_788529966.slice(start_788529968, (s_788529966).length - 1 + 1)), number_788529967, number_788529967_Idx);

  return result_788529969;

}

function nsuParseFloat(s_872416105) {
  var result_872416106 = [0.0];

    result_872416106[0] = 0.0;
    var L_872416107 = parseFloat_788529965(s_872416105, result_872416106, 0, 0);
    if ((!((L_872416107 == (s_872416105).length)) || (L_872416107 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_872416105 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_872416106[0];

}

function newJBool_1660944478(b_1660944479) {
  var result_1660944480 = null;

    result_1660944480 = {kind: 1, bval: b_1660944479, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944480;

}

function newJNull_1660944481() {
  var result_1660944482 = null;

    result_1660944482 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944482;

}

function getLine_1728053445(my_1728053446) {
  var result_1728053447 = 0;

    result_1728053447 = my_1728053446.lineNumber;

  return result_1728053447;

}

function getColNumber_1677721763(L_1677721764, pos_1677721765) {
  var result_1677721766 = 0;

    result_1677721766 = absInt(subInt(pos_1677721765, L_1677721764.lineStart));

  return result_1677721766;

}

function getColumn_1728053442(my_1728053443) {
  var result_1728053444 = 0;

    result_1728053444 = getColNumber_1677721763(my_1728053443, my_1728053443.bufpos);

  return result_1728053444;

}

function errorMsgExpected_1728053463(my_1728053464, e_1728053465) {
  var result_1728053466 = [];

    result_1728053466 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1728053464.filename, NTI33554449), HEX24_369098760(getLine_1728053445(my_1728053464)), HEX24_369098760(getColumn_1728053442(my_1728053464)), (e_1728053465 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1728053466;

}

function raiseParseErr_1728053864(p_1728053865, msg_1728053866) {
    raiseException({message: errorMsgExpected_1728053463(p_1728053865, msg_1728053866), parent: null, m_type: NTI1728053257, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1728053886(p_1728053887, tok_1728053888) {
    if ((p_1728053887.tok == tok_1728053888)) {
    var _ = getTok_1728053702(p_1728053887);
    }
    else {
    raiseParseErr_1728053864(p_1728053887, tokToStr_1728053326[chckIndx(tok_1728053888, 0, (tokToStr_1728053326).length - 1)]);
    }
    

  
}

function rawGet_1660944760(t_1660944763, key_1660944764, hc_1660944765, hc_1660944765_Idx) {
  var result_1660944766 = 0;

  BeforeRet: {
    hc_1660944765[hc_1660944765_Idx] = hash_1358954923(key_1660944764);
    if ((hc_1660944765[hc_1660944765_Idx] == 0)) {
    hc_1660944765[hc_1660944765_Idx] = 314159265;
    }
    
    if (((t_1660944763.data).length == 0)) {
    result_1660944766 = -1;
    break BeforeRet;
    }
    
    var h_1660944817 = (hc_1660944765[hc_1660944765_Idx] & (t_1660944763.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1660944763.data[chckIndx(h_1660944817, 0, (t_1660944763.data).length - 1)].Field0)) break Label2;
          if (((t_1660944763.data[chckIndx(h_1660944817, 0, (t_1660944763.data).length - 1)].Field0 == hc_1660944765[hc_1660944765_Idx]) && eqStrings(t_1660944763.data[chckIndx(h_1660944817, 0, (t_1660944763.data).length - 1)].Field2, key_1660944764))) {
          result_1660944766 = h_1660944817;
          break BeforeRet;
          }
          
          h_1660944817 = nextTry_1342177315(h_1660944817, (t_1660944763.data).length - 1);
        }
    };
    result_1660944766 = subInt(-1, h_1660944817);
  };

  return result_1660944766;

}

function mustRehash_1660945096(t_1660945098) {
  var result_1660945099 = false;

    if (!((t_1660945098.counter < (t_1660945098.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1660945099 = ((mulInt((t_1660945098.data).length, 2) < mulInt(t_1660945098.counter, 3)) || (subInt((t_1660945098.data).length, t_1660945098.counter) < 4));

  return result_1660945099;

}

function rawInsert_1660945674(t_1660945677, data_1660945678, data_1660945678_Idx, key_1660945679, val_1660945680, hc_1660945681, h_1660945682) {
    data_1660945678[data_1660945678_Idx][chckIndx(h_1660945682, 0, (data_1660945678[data_1660945678_Idx]).length - 1)].Field2 = nimCopy(null, key_1660945679, NTI33554449);
    data_1660945678[data_1660945678_Idx][chckIndx(h_1660945682, 0, (data_1660945678[data_1660945678_Idx]).length - 1)].Field3 = val_1660945680;
    data_1660945678[data_1660945678_Idx][chckIndx(h_1660945682, 0, (data_1660945678[data_1660945678_Idx]).length - 1)].Field0 = hc_1660945681;
    data_1660945678[data_1660945678_Idx][chckIndx(h_1660945682, 0, (data_1660945678[data_1660945678_Idx]).length - 1)].Field1 = -1;
    if ((t_1660945677.first < 0)) {
    t_1660945677.first = h_1660945682;
    }
    
    if ((0 <= t_1660945677.last)) {
    data_1660945678[data_1660945678_Idx][chckIndx(t_1660945677.last, 0, (data_1660945678[data_1660945678_Idx]).length - 1)].Field1 = h_1660945682;
    }
    
    t_1660945677.last = h_1660945682;

  
}

function enlarge_1660945259(t_1660945262) {
          var Temporary6;
          var Temporary7;

    var n_1660945265 = [];
    n_1660945265 = new Array(chckRange(mulInt((t_1660945262.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1660945262.data).length, 2), 0, 2147483647) ; ++i) { n_1660945265[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1660945317 = t_1660945262.first;
    t_1660945262.first = -1;
    t_1660945262.last = -1;
    var Temporary1 = t_1660945262.data; t_1660945262.data = n_1660945265; n_1660945265 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1660945317)) break Label3;
          var nxt_1660945375 = n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field1;
          var eh_1660945429 = n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field0;
          if (isFilled_1342177312(eh_1660945429)) {
          var j_1660945433 = (eh_1660945429 & (t_1660945262.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1342177312(t_1660945262.data[chckIndx(j_1660945433, 0, (t_1660945262.data).length - 1)].Field0)) break Label5;
                j_1660945433 = nextTry_1342177315(j_1660945433, (t_1660945262.data).length - 1);
              }
          };
          Temporary6 = n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field2;
          n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field2 = genericReset(n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field3;
          n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field3 = genericReset(n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field3, NTI1660944388);
          rawInsert_1660945674(t_1660945262, t_1660945262, "data", Temporary6, Temporary7, n_1660945265[chckIndx(h_1660945317, 0, (n_1660945265).length - 1)].Field0, j_1660945433);
          }
          
          h_1660945317 = nxt_1660945375;
        }
    };

  
}

function rawGetKnownHC_1660945956(t_1660945959, key_1660945960, hc_1660945961) {
  var result_1660945962 = 0;

  BeforeRet: {
    if (((t_1660945959.data).length == 0)) {
    result_1660945962 = -1;
    break BeforeRet;
    }
    
    var h_1660946013 = (hc_1660945961 & (t_1660945959.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1660945959.data[chckIndx(h_1660946013, 0, (t_1660945959.data).length - 1)].Field0)) break Label2;
          if (((t_1660945959.data[chckIndx(h_1660946013, 0, (t_1660945959.data).length - 1)].Field0 == hc_1660945961) && eqStrings(t_1660945959.data[chckIndx(h_1660946013, 0, (t_1660945959.data).length - 1)].Field2, key_1660945960))) {
          result_1660945962 = h_1660946013;
          break BeforeRet;
          }
          
          h_1660946013 = nextTry_1342177315(h_1660946013, (t_1660945959.data).length - 1);
        }
    };
    result_1660945962 = subInt(-1, h_1660946013);
  };

  return result_1660945962;

}

function HEX5BHEX5DHEX3D_1660944691(t_1660944694, key_1660944695, val_1660944696) {
    if (((t_1660944694.data).length == 0)) {
    var correctSizeHEX60gensym13_1660944746 = slotsNeeded_1342177323(32);
    t_1660944694.counter = 0;
    t_1660944694.data = new Array(chckRange(correctSizeHEX60gensym13_1660944746, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1660944746, 0, 2147483647) ; ++i) { t_1660944694.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1660944694.first = -1;
    t_1660944694.last = -1;
    }
    
    var hc_1660944751 = [0];
    var index_1660944989 = rawGet_1660944760(t_1660944694, key_1660944695, hc_1660944751, 0);
    if ((0 <= index_1660944989)) {
    t_1660944694.data[chckIndx(index_1660944989, 0, (t_1660944694.data).length - 1)].Field3 = val_1660944696;
    }
    else {
      if (((t_1660944694.data).length == 0)) {
      var correctSizeHEX60gensym18_1660945091 = slotsNeeded_1342177323(32);
      t_1660944694.counter = 0;
      t_1660944694.data = new Array(chckRange(correctSizeHEX60gensym18_1660945091, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1660945091, 0, 2147483647) ; ++i) { t_1660944694.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1660944694.first = -1;
      t_1660944694.last = -1;
      }
      
      if (mustRehash_1660945096(t_1660944694)) {
      enlarge_1660945259(t_1660944694);
      index_1660944989 = rawGetKnownHC_1660945956(t_1660944694, key_1660944695, hc_1660944751[0]);
      }
      
      index_1660944989 = subInt(-1, index_1660944989);
      rawInsert_1660945674(t_1660944694, t_1660944694, "data", key_1660944695, val_1660944696, hc_1660944751[0], index_1660944989);
      t_1660944694.counter = addInt(t_1660944694.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1660946335(obj_1660946336, key_1660946337, val_1660946338) {
    var Temporary1;

    if (!((obj_1660946336.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1660946336;
    if (ConstSet161[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    HEX5BHEX5DHEX3D_1660944691(Temporary1.fields, key_1660946337, val_1660946338);

  
}

function add_1660944622(father_1660944623, child_1660944624) {
    var Temporary1;

    if (!((father_1660944623.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1660944623;
    if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    Temporary1.elems.push(child_1660944624);;

  
}

function parseJson_1660949643(p_1660949644, rawIntegers_1660949645, rawFloats_1660949646, depth_1660949647) {
      var Temporary1;

  var result_1660949648 = null;

    switch (p_1660949644.tok) {
    case 2:
      result_1660949648 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1660949648;
      if (ConstSet153[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      Temporary1.str = p_1660949644.a;
      p_1660949644.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 3:
      if (rawIntegers_1660949645) {
      result_1660949648 = newJRawNumber_1660944469(p_1660949644.a);
      }
      else {
++excHandler;
        try {
        result_1660949648 = newJInt_1660944472(nsuParseBiggestInt(p_1660949644.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1660949648 = newJRawNumber_1660944469(p_1660949644.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 4:
      if (rawFloats_1660949646) {
      result_1660949648 = newJRawNumber_1660944469(p_1660949644.a);
      }
      else {
++excHandler;
        try {
        result_1660949648 = newJFloat_1660944475(nsuParseFloat(p_1660949644.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1660949648 = newJRawNumber_1660944469(p_1660949644.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 5:
      result_1660949648 = newJBool_1660944478(true);
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 6:
      result_1660949648 = newJBool_1660944478(false);
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 7:
      result_1660949648 = newJNull_1660944481();
      var _ = getTok_1728053702(p_1660949644);
      break;
    case 8:
      if ((1000 < depth_1660949647)) {
      raiseParseErr_1728053864(p_1660949644, [125]);
      }
      
      result_1660949648 = newJObject_1660944483();
      var _ = getTok_1728053702(p_1660949644);
      Label4: {
          Label5: while (true) {
          if (!!((p_1660949644.tok == 9))) break Label5;
            if (!((p_1660949644.tok == 2))) {
            raiseParseErr_1728053864(p_1660949644, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1660949657 = nimCopy(null, p_1660949644.a, NTI33554449);
            var _ = getTok_1728053702(p_1660949644);
            eat_1728053886(p_1660949644, 12);
            var val_1660949658 = parseJson_1660949643(p_1660949644, rawIntegers_1660949645, rawFloats_1660949646, addInt(depth_1660949647, 1));
            HEX5BHEX5DHEX3D_1660946335(result_1660949648, key_1660949657, val_1660949658);
            if (!((p_1660949644.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1728053702(p_1660949644);
          }
      };
      eat_1728053886(p_1660949644, 9);
      break;
    case 10:
      if ((1000 < depth_1660949647)) {
      raiseParseErr_1728053864(p_1660949644, [93]);
      }
      
      result_1660949648 = newJArray_1660944514();
      var _ = getTok_1728053702(p_1660949644);
      Label6: {
          Label7: while (true) {
          if (!!((p_1660949644.tok == 11))) break Label7;
            add_1660944622(result_1660949648, parseJson_1660949643(p_1660949644, rawIntegers_1660949645, rawFloats_1660949646, addInt(depth_1660949647, 1)));
            if (!((p_1660949644.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1728053702(p_1660949644);
          }
      };
      eat_1728053886(p_1660949644, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1728053864(p_1660949644, [123]);
      break;
    }

  return result_1660949648;

}

function close_1694498873(s_1694498874) {
    if ((!((s_1694498874 == null)) && !((s_1694498874.closeImpl == null)))) {
    s_1694498874.closeImpl(s_1694498874);
    }
    

  
}

function close_1677721614(L_1677721615) {
    close_1694498873(L_1677721615.input);

  
}

function close_1728053399(my_1728053400) {
    close_1677721614(my_1728053400);

  
}

function isSome_2634035669(self_2634035671) {
  var result_2634035672 = false;

    result_2634035672 = !((self_2634035671.val == null));

  return result_2634035672;

}

function some_2634035405(val_2634035407) {
  var result_2634035408 = ({val: null});

    if (!(!((val_2634035407 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2634035408.val = val_2634035407;

  return result_2634035408;

}

function HEX25_1660946211(n_1660946212) {
  var result_1660946213 = null;

    result_1660946213 = {kind: 2, num: n_1660946212, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660946213;

}

function HEX25_1660946201(s_1660946202) {
  var result_1660946203 = null;

    result_1660946203 = {kind: 4, str: nimCopy(null, s_1660946202, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660946203;

}

function toJson_1845494346(a_1845494348, opt_1845494349) {
  var result_1845494350 = null;

    result_1845494350 = HEX25_1660946201(a_1845494348);

  return result_1845494350;

}

function symbolName_1325407516(a_1325407518) {
  var result_1325407519 = [];

    result_1325407519 = nimCopy(null, names_1325407521[chckIndx(subInt(a_1325407518, 0), 0, (names_1325407521).length - 1)], NTI33554449);

  return result_1325407519;

}

function toJson_1325407500(a_1325407502, opt_1325407503) {
    var Temporary1;

  var result_1325407504 = null;

    switch (opt_1325407503.enumMode) {
    case 0:
      Temporary1 = HEX25_1660946211(a_1325407502);
      break;
    case 1:
      Temporary1 = toJson_1845494346(symbolName_1325407516(a_1325407502), opt_1325407503);
      break;
    case 2:
      Temporary1 = toJson_1845494346(reprEnum(a_1325407502, NTI2197815313), opt_1325407503);
      break;
    }
    result_1325407504 = Temporary1;

  return result_1325407504;

}

function getBackend_1325407447(self_1325407448) {
  var result_1325407449 = 0;

  BeforeRet: {
    result_1325407449 = self_1325407448.backend;
    break BeforeRet;
  };

  return result_1325407449;

}

function none_1325407414() {
  var result_1325407420 = ({val: null});

  return result_1325407420;

}

function some_1325407421(val_1325407423) {
  var result_1325407424 = ({val: null});

    if (!(!((val_1325407423 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1325407424.val = val_1325407423;

  return result_1325407424;

}

function getEditor_1325407405() {
  var result_1325407410 = ({val: null});

  BeforeRet: {
    if ((gEditor_1325400204[0] == null)) {
    result_1325407410 = nimCopy(result_1325407410, none_1325407414(), NTI1325404020);
    break BeforeRet;
    }
    
    result_1325407410 = nimCopy(result_1325407410, some_1325407421(gEditor_1325400204[0]), NTI1325404020);
    break BeforeRet;
  };

  return result_1325407410;

}

function isNone_1325407457(self_1325407459) {
  var result_1325407460 = false;

    result_1325407460 = (self_1325407459.val == null);

  return result_1325407460;

}

function get_1325407477(self_1325407479) {
  var result_1325407480 = null;

    if (isNone_1325407457(self_1325407479)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1325407480 = self_1325407479["val"];

  return result_1325407480;

}

function getBackendScript_1325407450() {
  var result_1325407451 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym81_1325407452 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym81_1325407452)) {
      break BeforeRet;
      }
      
    };
    result_1325407451 = getBackend_1325407447(get_1325407477(rHEX60gensym81_1325407452));
  };

  return result_1325407451;

}

function initToJsonOptions_1845493794() {
  var result_1845493795 = ({enumMode: 0, jsonNodeMode: 0});

    result_1845493795 = nimCopy(result_1845493795, {enumMode: 0, jsonNodeMode: 0}, NTI1845493768);

  return result_1845493795;

}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getBackendApi_1325407498(HEX3Atmp_1325407444) {
  var result_1325407499 = null;

  BeforeRet: {
    result_1325407499 = newJNull_1660944481();
++excHandler;
    try {
    result_1325407499 = toJson_1325407500(getBackendScript_1325407450(), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym84_1325407597 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1325407602 = [mnewString(0)];
    fmtRes_1325407602[0].push.apply(fmtRes_1325407602[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407602, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym84_1325407597 || [],fmtRes_1325407602[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325407499;

}

function setHandleInputs_2080375136(config_2080375137, value_2080375138) {
    config_2080375137.handleInputs = value_2080375138;
    config_2080375137.revision = addInt(config_2080375137.revision, 1);

  
}

function setHandleInputs_1325407611(self_1325407612, context_1325407613, value_1325407614) {
    setHandleInputs_2080375136(getEventHandlerConfig_1325403449(self_1325407612, context_1325407613), value_1325407614);

  
}

function setHandleInputsScript_1325407615(context_1325407616, value_1325407617) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym91_1325407618 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym91_1325407618)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1325407611(get_1325407477(rHEX60gensym91_1325407618), context_1325407616, value_1325407617);
  };

  
}

function HEX3DHEX3D_1660946475(x_1660946477, y_1660946478) {
  var result_1660946479 = false;

  BeforeRet: {
    var sameObject_1660946487 = false;
    sameObject_1660946487 = x_1660946477 === y_1660946478
    if (sameObject_1660946487) {
    result_1660946479 = true;
    break BeforeRet;
    }
    
    if (!(((x_1660946477).length == (y_1660946478).length))) {
    result_1660946479 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1660946501 = 0;
      var colontmp__536871253 = 0;
      colontmp__536871253 = subInt((x_1660946477).length, 1);
      var res_536871254 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871254 <= colontmp__536871253)) break Label3;
            i_1660946501 = res_536871254;
            if (!(HEX3DHEX3D_1660946458(x_1660946477[chckIndx(i_1660946501, 0, (x_1660946477).length - 1)], y_1660946478[chckIndx(i_1660946501, 0, (y_1660946478).length - 1)]))) {
            result_1660946479 = false;
            break BeforeRet;
            }
            
            res_536871254 = addInt(res_536871254, 1);
          }
      };
    };
    result_1660946479 = true;
    break BeforeRet;
  };

  return result_1660946479;

}

function len_1660946546(t_1660946549) {
  var result_1660946550 = 0;

    result_1660946550 = t_1660946549.counter;

  return result_1660946550;

}

function hasKey_1660946970(t_1660946973, key_1660946974) {
  var result_1660946975 = false;

    var hc_1660946976 = [0];
    result_1660946975 = (0 <= rawGet_1660944760(t_1660946973, key_1660946974, hc_1660946976, 0));

  return result_1660946975;

}

function HEX5BHEX5D_1660947044(t_1660947047, key_1660947048) {
  var result_1660947049 = null;
  var result_1660947049_Idx = 0;

    var hcHEX60gensym89_1660947050 = [0];
    var indexHEX60gensym89_1660947271 = rawGet_1660947051(t_1660947047, key_1660947048, hcHEX60gensym89_1660947050, 0);
    if ((0 <= indexHEX60gensym89_1660947271)) {
    result_1660947049 = t_1660947047.data[chckIndx(indexHEX60gensym89_1660947271, 0, (t_1660947047.data).length - 1)]; result_1660947049_Idx = "Field3";
    }
    else {
    raiseKeyError_1660947325(key_1660947048);
    }
    

  return [result_1660947049, result_1660947049_Idx];

}

function HEX3DHEX3D_1660946458(a_1660946459, b_1660946460) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1660946461 = false;

  BeforeRet: {
    if ((a_1660946459 == null)) {
    if ((b_1660946460 == null)) {
    result_1660946461 = true;
    break BeforeRet;
    }
    
    result_1660946461 = false;
    break BeforeRet;
    }
    else {
    if (((b_1660946460 == null) || !((a_1660946459.kind == b_1660946460.kind)))) {
    result_1660946461 = false;
    break BeforeRet;
    }
    else {
      switch (a_1660946459.kind) {
      case 4:
        var Temporary1 = a_1660946459;
        if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
        var Temporary2 = b_1660946460;
        if (ConstSet164[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
        result_1660946461 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1660946459;
        if (ConstSet165[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1660944387)); }
        var Temporary4 = b_1660946460;
        if (ConstSet166[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1660944387)); }
        result_1660946461 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1660946459;
        if (ConstSet167[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1660944387)); }
        var Temporary6 = b_1660946460;
        if (ConstSet168[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1660944387)); }
        result_1660946461 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1660946459;
        if (ConstSet169[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1660944387)); }
        var Temporary8 = b_1660946460;
        if (ConstSet170[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1660944387)); }
        result_1660946461 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1660946461 = true;
        break;
      case 6:
        var Temporary9 = a_1660946459;
        if (ConstSet171[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1660944387)); }
        var Temporary10 = b_1660946460;
        if (ConstSet172[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1660944387)); }
        result_1660946461 = HEX3DHEX3D_1660946475(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1660946459;
          if (ConstSet173[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1660944387)); }
          var Temporary12 = b_1660946460;
          if (ConstSet174[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1660944387)); }
        if (!((len_1660946546(Temporary11.fields) == len_1660946546(Temporary12.fields)))) {
        result_1660946461 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1660946928 = [];
          var val_1660946929 = null;
          var colontmp__536871246 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1660946459;
          if (ConstSet175[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1660944387)); }
          colontmp__536871246 = nimCopy(colontmp__536871246, Temporary14.fields, NTI1660944398);
          var L_536871248 = len_1660946546(colontmp__536871246);
          if ((0 < colontmp__536871246.counter)) {
          var h_536871249 = colontmp__536871246.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_536871249)) break Label16;
                var nxt_536871251 = colontmp__536871246.data[chckIndx(h_536871249, 0, (colontmp__536871246.data).length - 1)].Field1;
                if (isFilled_1342177312(colontmp__536871246.data[chckIndx(h_536871249, 0, (colontmp__536871246.data).length - 1)].Field0)) {
                key_1660946928 = colontmp__536871246.data[chckIndx(h_536871249, 0, (colontmp__536871246.data).length - 1)].Field2;
                val_1660946929 = colontmp__536871246.data[chckIndx(h_536871249, 0, (colontmp__536871246.data).length - 1)].Field3;
                  var Temporary17 = b_1660946460;
                  if (ConstSet176[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1660944387)); }
                if (!(hasKey_1660946970(Temporary17.fields, key_1660946928))) {
                result_1660946461 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1660946460;
                  if (ConstSet177[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1660944387)); }
                if (!(HEX3DHEX3D_1660946458((Temporary19 = HEX5BHEX5D_1660947044(Temporary18.fields, key_1660946928), Temporary19)[0][Temporary19[1]], val_1660946929))) {
                result_1660946461 = false;
                break BeforeRet;
                }
                
                if (!((len_1660946546(colontmp__536871246) == L_536871248))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_536871249 = nxt_536871251;
              }
          };
          }
          
        };
        result_1660946461 = true;
        break;
      }
    }
    }
  };

  return result_1660946461;

}

function raiseJsonException_1845493929(condStr_1845493930, msg_1845493931) {
    raiseException({message: (condStr_1845493930 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1845493931 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1627390004(s_1627390006, s_1627390006_Idx, x_1627390007) {
    s_1627390006[s_1627390006_Idx].push.apply(s_1627390006[s_1627390006_Idx], [34]);;
    Label1: {
      var c_1627390008 = 0;
      var i_536871257 = 0;
      var L_536871258 = (x_1627390007).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871257 < L_536871258)) break Label3;
            c_1627390008 = x_1627390007[chckIndx(i_536871257, 0, (x_1627390007).length - 1)];
            if ((c_1627390008 <= 127)) {
            addEscapedChar_33557761(s_1627390006, s_1627390006_Idx, c_1627390008);
            }
            else {
            addChar(s_1627390006[s_1627390006_Idx], c_1627390008);;
            }
            
            i_536871257 = addInt(i_536871257, 1);
            if (!(((x_1627390007).length == L_536871258))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1627390006[s_1627390006_Idx].push.apply(s_1627390006[s_1627390006_Idx], [34]);;

  
}

function len_1660947415(n_1660947416) {
      var Temporary1;
      var Temporary2;

  var result_1660947417 = 0;

    switch (n_1660947416.kind) {
    case 6:
      var Temporary1 = n_1660947416;
      if (ConstSet178[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660947417 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1660947416;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
      result_1660947417 = len_1660946546(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1660947417;

}

function toHexImpl_872416004(x_872416005, len_872416006, handleNegative_872416007) {
  var result_872416008 = [];

    var n_872416010 = x_872416005;
    result_872416008 = nimCopy(null, mnewString(len_872416006), NTI33554449);
    Label1: {
      var j_872416016 = 0;
      var colontmp__536871277 = 0;
      colontmp__536871277 = subInt(len_872416006, 1);
      var res_536871278 = colontmp__536871277;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_536871278)) break Label3;
            j_872416016 = res_536871278;
            result_872416008[chckIndx(j_872416016, 0, (result_872416008).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_872416010 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_872416010 = (n_872416010 >>> 4);
            if (((n_872416010 == 0) && handleNegative_872416007)) {
            n_872416010 = 4294967295;
            }
            
            res_536871278 = subInt(res_536871278, 1);
          }
      };
    };

  return result_872416008;

}

function toHex_872417262(x_872417264, len_872417265) {
  var result_872417266 = [];

    result_872417266 = nimCopy(null, toHexImpl_872416004((x_872417264 >>> 0), len_872417265, (x_872417264 < 0)), NTI33554449);

  return result_872417266;

}

function escapeJsonUnquoted_1660948778(s_1660948779, result_1660948780, result_1660948780_Idx) {
    Label1: {
      var c_1660948781 = 0;
      var i_536871273 = 0;
      var L_536871274 = (s_1660948779).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871273 < L_536871274)) break Label3;
            c_1660948781 = s_1660948779[chckIndx(i_536871273, 0, (s_1660948779).length - 1)];
            switch (c_1660948781) {
            case 10:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,110]);;
              break;
            case 8:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,98]);;
              break;
            case 12:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,102]);;
              break;
            case 9:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,116]);;
              break;
            case 11:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,114]);;
              break;
            case 34:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1660948781) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], ([92,117,48,48] || []).concat(toHex_872417262(c_1660948781, 2) || []));;
              break;
            case 92:
              result_1660948780[result_1660948780_Idx].push.apply(result_1660948780[result_1660948780_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1660948780[result_1660948780_Idx], c_1660948781);;
              break;
            }
            i_536871273 = addInt(i_536871273, 1);
            if (!(((s_1660948779).length == L_536871274))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1660948799(s_1660948800, result_1660948801, result_1660948801_Idx) {
    result_1660948801[result_1660948801_Idx].push.apply(result_1660948801[result_1660948801_Idx], [34]);;
    escapeJsonUnquoted_1660948778(s_1660948800, result_1660948801, result_1660948801_Idx);
    result_1660948801[result_1660948801_Idx].push.apply(result_1660948801[result_1660948801_Idx], [34]);;

  
}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function toUgly_1660948809(result_1660948810, result_1660948810_Idx, node_1660948811) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1660948812 = false;
    switch (node_1660948811.kind) {
    case 6:
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [91]);;
      Label1: {
        var child_1660948816 = null;
        var colontmp__536871261 = [];
        var Temporary2 = node_1660948811;
        if (ConstSet180[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
        colontmp__536871261 = Temporary2.elems;
        var i_536871263 = 0;
        var L_536871264 = (colontmp__536871261).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536871263 < L_536871264)) break Label4;
              child_1660948816 = colontmp__536871261[chckIndx(i_536871263, 0, (colontmp__536871261).length - 1)];
              if (comma_1660948812) {
              result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [44]);;
              }
              else {
                comma_1660948812 = true;
              }
              
              toUgly_1660948809(result_1660948810, result_1660948810_Idx, child_1660948816);
              i_536871263 = addInt(i_536871263, 1);
              if (!(((colontmp__536871261).length == L_536871264))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [93]);;
      break;
    case 5:
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [123]);;
      Label5: {
        var key_1660948821 = [];
        var value_1660948822 = null;
        var colontmp__536871267 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1660948811;
        if (ConstSet181[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1660944387)); }
        colontmp__536871267 = nimCopy(colontmp__536871267, Temporary6.fields, NTI1660944398);
        var L_536871268 = len_1660946546(colontmp__536871267);
        if ((0 < colontmp__536871267.counter)) {
        var h_536871269 = colontmp__536871267.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_536871269)) break Label8;
              var nxt_536871271 = colontmp__536871267.data[chckIndx(h_536871269, 0, (colontmp__536871267.data).length - 1)].Field1;
              if (isFilled_1342177312(colontmp__536871267.data[chckIndx(h_536871269, 0, (colontmp__536871267.data).length - 1)].Field0)) {
              key_1660948821 = colontmp__536871267.data[chckIndx(h_536871269, 0, (colontmp__536871267.data).length - 1)].Field2;
              value_1660948822 = colontmp__536871267.data[chckIndx(h_536871269, 0, (colontmp__536871267.data).length - 1)].Field3;
              if (comma_1660948812) {
              result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [44]);;
              }
              else {
                comma_1660948812 = true;
              }
              
              escapeJson_1660948799(key_1660948821, result_1660948810, result_1660948810_Idx);
              result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [58]);;
              toUgly_1660948809(result_1660948810, result_1660948810_Idx, value_1660948822);
              if (!((len_1660946546(colontmp__536871267) == L_536871268))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_536871269 = nxt_536871271;
            }
        };
        }
        
      };
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [125]);;
      break;
    case 4:
      if (node_1660948811.isUnquoted) {
      var Temporary9 = node_1660948811;
      if (ConstSet182[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1660944387)); }
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1660948811;
        if (ConstSet183[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1660944387)); }
      escapeJson_1660948799(Temporary10.str, result_1660948810, result_1660948810_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1660948811;
      if (ConstSet184[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1660944387)); }
      addInt_301990087(result_1660948810, result_1660948810_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1660948811;
      if (ConstSet185[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1660944387)); }
      addFloat_33557340(result_1660948810, result_1660948810_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1660948811;
        if (ConstSet186[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1660944387)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], Temporary13);;
      break;
    case 0:
      result_1660948810[result_1660948810_Idx].push.apply(result_1660948810[result_1660948810_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1660948913(node_1660948914) {
  var result_1660948915 = [[]];

    result_1660948915[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1660948809(result_1660948915, 0, node_1660948914);

  return result_1660948915[0];

}

function addQuoted_1845494221(s_1845494223, s_1845494223_Idx, x_1845494224) {
    s_1845494223[s_1845494223_Idx].push.apply(s_1845494223[s_1845494223_Idx], HEX24_1660948913(x_1845494224));;

  
}

function HEX24_1845494177(x_1845494179) {
  var result_1845494180 = [[]];

    result_1845494180[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym27_1845494191 = 0;
    if ((0 < countHEX60gensym27_1845494191)) {
    result_1845494180[0].push.apply(result_1845494180[0], [44,32]);;
    }
    
    countHEX60gensym27_1845494191 += 1;
    addQuoted_1627390004(result_1845494180, 0, x_1845494179["Field0"]);
    if ((0 < countHEX60gensym27_1845494191)) {
    result_1845494180[0].push.apply(result_1845494180[0], [44,32]);;
    }
    
    countHEX60gensym27_1845494191 += 1;
    if ((x_1845494179["Field1"] == null)) {
    result_1845494180[0].push.apply(result_1845494180[0], [110,105,108]);;
    }
    else {
    addQuoted_1845494221(result_1845494180, 0, x_1845494179["Field1"]);
    }
    
    if ((countHEX60gensym27_1845494191 == 1)) {
    result_1845494180[0].push.apply(result_1845494180[0], [44]);;
    }
    
    result_1845494180[0].push.apply(result_1845494180[0], [41]);;

  return result_1845494180[0];

}

function addQuoted_1660949887(s_1660949889, s_1660949889_Idx, x_1660949890) {
    s_1660949889[s_1660949889_Idx].push.apply(s_1660949889[s_1660949889_Idx], reprEnum(x_1660949890, NTI1660944387));;

  
}

function collectionToString_1660949854(x_1660949856, prefix_1660949857, separator_1660949858, suffix_1660949859) {
  var result_1660949860 = [[]];

    result_1660949860[0] = nimCopy(null, prefix_1660949857, NTI33554449);
    var firstElement_1660949861 = true;
    Label1: {
      var value_1660949883 = 0;
      var i_536871282 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871282 <= 6)) break Label3;
            if ((x_1660949856[i_536871282] != undefined)) {
            value_1660949883 = i_536871282;
            if (firstElement_1660949861) {
            firstElement_1660949861 = false;
            }
            else {
            result_1660949860[0].push.apply(result_1660949860[0], separator_1660949858);;
            }
            
            addQuoted_1660949887(result_1660949860, 0, value_1660949883);
            }
            
            i_536871282 += 1;
          }
      };
    };
    result_1660949860[0].push.apply(result_1660949860[0], suffix_1660949859);;

  return result_1660949860[0];

}

function HEX24_1660949850(x_1660949852) {
  var result_1660949853 = [];

    result_1660949853 = nimCopy(null, collectionToString_1660949854(x_1660949852, [123], [44,32], [125]), NTI33554449);

  return result_1660949853;

}

function initFromJson_1660949771(dst_1660949772, dst_1660949772_Idx, jsonNode_1660949773, jsonPath_1660949774, jsonPath_1660949774_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1660946458(jsonNode_1660949773, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1660949774[jsonPath_1660949774_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet187[jsonNode_1660949773.kind] != undefined))) {
    var msgHEX60gensym99_1660949908 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1660949850(ConstSet188), nimCopy(null, jsonPath_1660949774[jsonPath_1660949774_Idx], NTI33554449), reprEnum(jsonNode_1660949773.kind, NTI1660944387)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1660949908, NTI33554449), parent: null, m_type: NTI1728053256, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1660949773.kind == 0)) {
    dst_1660949772[dst_1660949772_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1660949773;
      if (ConstSet189[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      dst_1660949772[dst_1660949772_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1845494319(node_1845494322) {
  var result_1845494324 = [[]];

    var jsonPath_1845494325 = [[]];
    result_1845494324[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1660949771(result_1845494324, 0, node_1845494322, jsonPath_1845494325, 0);

  return result_1845494324[0];

}

function fromJson_1845494304(a_1845494306, a_1845494306_Idx, b_1845494307, opt_1845494308) {
    if (!(!(HEX3DHEX3D_1660946458(b_1845494307, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [115,116,114,105,110,103], Field1: b_1845494307}));
    }
    
    a_1845494306[a_1845494306_Idx] = nimCopy(null, to_1845494319(b_1845494307), NTI33554449);

  
}

function jsonTo_1845494298(b_1845494300, opt_1845494302) {
  var result_1845494303 = [[]];

    fromJson_1845494304(result_1845494303, 0, b_1845494300, opt_1845494302);

  return result_1845494303[0];

}

function HEX5BHEX5D_1660947548(node_1660947549, index_1660947550) {
    var Temporary1;
    var Temporary2;

  var result_1660947551 = null;

  BeforeRet: {
    if (!(!((node_1660947549 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1660947549.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1660947549;
    if (ConstSet190[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    result_1660947551 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1660947550, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1660947551;

}

function initFromJson_1660949775(dst_1660949776, dst_1660949776_Idx, jsonNode_1660949777, jsonPath_1660949778, jsonPath_1660949778_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1660946458(jsonNode_1660949777, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1660949778[jsonPath_1660949778_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet191[jsonNode_1660949777.kind] != undefined))) {
    var msgHEX60gensym103_1660949948 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1660949850(ConstSet192), nimCopy(null, jsonPath_1660949778[jsonPath_1660949778_Idx], NTI33554449), reprEnum(jsonNode_1660949777.kind, NTI1660944387)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1660949948, NTI33554449), parent: null, m_type: NTI1728053256, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1660949777;
    if (ConstSet193[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    dst_1660949776[dst_1660949776_Idx] = Temporary1.bval;

  
}

function to_2634029852(node_2634029855) {
  var result_2634029857 = [false];

    var jsonPath_2634029858 = [[]];
    result_2634029857[0] = false;
    initFromJson_1660949775(result_2634029857, 0, node_2634029855, jsonPath_2634029858, 0);

  return result_2634029857[0];

}

function fromJson_2634029841(a_2634029843, a_2634029843_Idx, b_2634029844, opt_2634029845) {
    if (!(!(HEX3DHEX3D_1660946458(b_2634029844, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [98,111,111,108], Field1: b_2634029844}));
    }
    
    a_2634029843[a_2634029843_Idx] = to_2634029852(b_2634029844);

  
}

function jsonTo_2634029835(b_2634029837, opt_2634029839) {
  var result_2634029840 = [false];

    fromJson_2634029841(result_2634029840, 0, b_2634029837, opt_2634029839);

  return result_2634029840[0];

}

function setHandleInputsApi_1325407641(HEX3Atmp_1325407608) {
  var result_1325407642 = null;

    result_1325407642 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1325407615(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407608, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407608, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym93_1325407653 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1325407658 = [mnewString(0)];
    fmtRes_1325407658[0].push.apply(fmtRes_1325407658[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407658, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym93_1325407653 || [],fmtRes_1325407658[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325407642;

}

function setHandleActions_2080375143(config_2080375144, value_2080375145) {
    config_2080375144.handleActions = value_2080375145;
    config_2080375144.revision = addInt(config_2080375144.revision, 1);

  
}

function setHandleActions_1325407667(self_1325407668, context_1325407669, value_1325407670) {
    setHandleActions_2080375143(getEventHandlerConfig_1325403449(self_1325407668, context_1325407669), value_1325407670);

  
}

function setHandleActionsScript_1325407671(context_1325407672, value_1325407673) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym98_1325407674 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym98_1325407674)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1325407667(get_1325407477(rHEX60gensym98_1325407674), context_1325407672, value_1325407673);
  };

  
}

function setHandleActionsApi_1325407697(HEX3Atmp_1325407664) {
  var result_1325407698 = null;

    result_1325407698 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1325407671(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407664, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407664, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym100_1325407709 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1325407714 = [mnewString(0)];
    fmtRes_1325407714[0].push.apply(fmtRes_1325407714[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407714, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym100_1325407709 || [],fmtRes_1325407714[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325407698;

}

function setConsumeAllActions_2080375150(config_2080375151, value_2080375152) {
    config_2080375151.consumeAllActions = value_2080375152;
    config_2080375151.revision = addInt(config_2080375151.revision, 1);

  
}

function setConsumeAllActions_1325407723(self_1325407724, context_1325407725, value_1325407726) {
    setConsumeAllActions_2080375150(getEventHandlerConfig_1325403449(self_1325407724, context_1325407725), value_1325407726);

  
}

function setConsumeAllActionsScript_1325407727(context_1325407728, value_1325407729) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym105_1325407730 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym105_1325407730)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1325407723(get_1325407477(rHEX60gensym105_1325407730), context_1325407728, value_1325407729);
  };

  
}

function setConsumeAllActionsApi_1325407753(HEX3Atmp_1325407720) {
  var result_1325407754 = null;

    result_1325407754 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1325407727(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407720, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407720, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym107_1325407765 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1325407770 = [mnewString(0)];
    fmtRes_1325407770[0].push.apply(fmtRes_1325407770[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407770, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym107_1325407765 || [],fmtRes_1325407770[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325407754;

}

function setConsumeAllInput_2080375157(config_2080375158, value_2080375159) {
    config_2080375158.consumeAllInput = value_2080375159;
    config_2080375158.revision = addInt(config_2080375158.revision, 1);

  
}

function setConsumeAllInput_1325407779(self_1325407780, context_1325407781, value_1325407782) {
    setConsumeAllInput_2080375157(getEventHandlerConfig_1325403449(self_1325407780, context_1325407781), value_1325407782);

  
}

function setConsumeAllInputScript_1325407783(context_1325407784, value_1325407785) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym112_1325407786 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym112_1325407786)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1325407779(get_1325407477(rHEX60gensym112_1325407786), context_1325407784, value_1325407785);
  };

  
}

function setConsumeAllInputApi_1325407809(HEX3Atmp_1325407776) {
  var result_1325407810 = null;

    result_1325407810 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1325407783(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407776, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407776, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym114_1325407821 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1325407826 = [mnewString(0)];
    fmtRes_1325407826[0].push.apply(fmtRes_1325407826[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407826, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym114_1325407821 || [],fmtRes_1325407826[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325407810;

}

function HEX25_1660946227(b_1660946228) {
  var result_1660946229 = null;

    result_1660946229 = {kind: 1, bval: b_1660946228, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660946229;

}

function toJson_2634033362(a_2634033364, opt_2634033365) {
  var result_2634033366 = null;

    result_2634033366 = HEX25_1660946227(a_2634033364);

  return result_2634033366;

}

function getFlag_1325403251(self_1325403252, flag_1325403253, default_1325403254) {
  var result_1325407839 = false;

  BeforeRet: {
    result_1325407839 = getOption_2634028482(self_1325403252, flag_1325403253, default_1325403254);
    break BeforeRet;
  };

  return result_1325407839;

}

function getFlagScript2_1325407849(flag_1325407850, default_1325407851) {
  var result_1325407852 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym119_1325407853 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym119_1325407853)) {
      break BeforeRet;
      }
      
    };
    result_1325407852 = getFlag_1325403251(get_1325407477(rHEX60gensym119_1325407853), flag_1325407850, default_1325407851);
  };

  return result_1325407852;

}

function getFlagApi2_1325407876(HEX3Atmp_1325407832) {
      var Temporary4;

  var result_1325407877 = null;

  BeforeRet: {
    result_1325407877 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_1325407832))) {
      Temporary4 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407832, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1325407877 = toJson_2634033362(getFlagScript2_1325407849(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407832, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym122_1325407892 = [103,101,116,70,108,97,103];
    var fmtRes_1325407897 = [mnewString(0)];
    fmtRes_1325407897[0].push.apply(fmtRes_1325407897[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325407897, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym122_1325407892 || [],fmtRes_1325407897[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325407877;

}

function HEX5BHEX5D_2634033769(s_2634033773, x_2634033774) {
  var result_2634033775 = [];

    var a_2634033777 = x_2634033774.a;
    var L_2634033782 = addInt(subInt(subInt((s_2634033773).length, x_2634033774.b), a_2634033777), 1);
    result_2634033775 = new Array(chckRange(L_2634033782, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2634033782, 0, 2147483647) ; ++i) { result_2634033775[i] = []; }    Label1: {
      var i_2634033791 = 0;
      var i_536871306 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871306 < L_2634033782)) break Label3;
            i_2634033791 = i_536871306;
            result_2634033775[chckIndx(i_2634033791, 0, (result_2634033775).length - 1)] = nimCopy(null, s_2634033773[chckIndx(addInt(i_2634033791, a_2634033777), 0, (s_2634033773).length - 1)], NTI33554449);
            i_536871306 = addInt(i_536871306, 1);
          }
      };
    };

  return result_2634033775;

}

function contains_1660947644(node_1660947645, key_1660947646) {
    var Temporary1;

  var result_1660947647 = false;

    if (!((node_1660947645.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1660947645;
    if (ConstSet194[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    result_1660947647 = hasKey_1660946970(Temporary1.fields, key_1660947646);

  return result_1660947647;

}

function HEX5BHEX5D_1660947469(node_1660947470, name_1660947471) {
    var Temporary1;
    var Temporary2;

  var result_1660947472 = null;

    if (!(!((node_1660947470 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1660947470.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1660947470;
    if (ConstSet195[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    result_1660947472 = (Temporary2 = HEX5BHEX5D_1660947044(Temporary1.fields, name_1660947471), Temporary2)[0][Temporary2[1]];

  return result_1660947472;

}

function HEX5BHEX5D_2600469248(s_2600469250, i_2600469251) {
  var result_2600469252 = [];

    result_2600469252 = nimCopy(null, s_2600469250[chckIndx(subInt((s_2600469250).length, i_2600469251), 0, (s_2600469250).length - 1)], NTI33554449);

  return result_2600469252;

}

function setOption_1325407910(editor_1325407912, path_1325407913, value_1325407914) {
  BeforeRet: {
    Label1: {
      if ((editor_1325407912 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym131_1325407929 = nsuSplitString(path_1325407913, [46], -1);
      var nodeHEX60gensym131_1325407930 = editor_1325407912.options;
      Label2: {
        var keyHEX60gensym131_1325407949 = [];
        var colontmp__536871301 = [];
        colontmp__536871301 = HEX5BHEX5D_2634033769(pathItemsHEX60gensym131_1325407929, HEX2EHEX2E_1056964704(0, 2));
        var i_536871302 = 0;
        var L_536871303 = (colontmp__536871301).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536871302 < L_536871303)) break Label4;
              keyHEX60gensym131_1325407949 = colontmp__536871301[chckIndx(i_536871302, 0, (colontmp__536871301).length - 1)];
              if (!((nodeHEX60gensym131_1325407930.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1660947644(nodeHEX60gensym131_1325407930, keyHEX60gensym131_1325407949))) {
              HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym131_1325407930, keyHEX60gensym131_1325407949, newJObject_1660944483());
              }
              
              nodeHEX60gensym131_1325407930 = HEX5BHEX5D_1660947469(nodeHEX60gensym131_1325407930, keyHEX60gensym131_1325407949);
              i_536871302 = addInt(i_536871302, 1);
              if (!(((colontmp__536871301).length == L_536871303))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym131_1325407930 == null) || !((nodeHEX60gensym131_1325407930.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym131_1325407930, HEX5BHEX5D_2600469248(pathItemsHEX60gensym131_1325407929, 1), newJBool_1660944478(value_1325407914));
    };
  };

  
}

function setFlag_1325403328(self_1325403329, flag_1325403330, value_1325403331) {
    setOption_1325407910(self_1325403329, flag_1325403330, value_1325403331);

  
}

function setFlagScript2_1325407965(flag_1325407966, value_1325407967) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym128_1325407968 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym128_1325407968)) {
      break BeforeRet;
      }
      
    };
    setFlag_1325403328(get_1325407477(rHEX60gensym128_1325407968), flag_1325407966, value_1325407967);
  };

  
}

function setFlagApi2_1325407991(HEX3Atmp_1325407903) {
  var result_1325407992 = null;

    result_1325407992 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1325407965(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325407903, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_1325407903, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym130_1325408003 = [115,101,116,70,108,97,103];
    var fmtRes_1325408008 = [mnewString(0)];
    fmtRes_1325408008[0].push.apply(fmtRes_1325408008[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408008, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym130_1325408003 || [],fmtRes_1325408008[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325407992;

}

function toggleFlag_1325403332(self_1325403333, flag_1325403334) {
    setFlag_1325403328(self_1325403333, flag_1325403334, !(getFlag_1325403251(self_1325403333, flag_1325403334, false)));

  
}

function toggleFlagScript_1325408020(flag_1325408021) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym139_1325408022 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym139_1325408022)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1325403332(get_1325407477(rHEX60gensym139_1325408022), flag_1325408021);
  };

  
}

function toggleFlagApi_1325408045(HEX3Atmp_1325408014) {
  var result_1325408046 = null;

    result_1325408046 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1325408020(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325408014, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym141_1325408052 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1325408057 = [mnewString(0)];
    fmtRes_1325408057[0].push.apply(fmtRes_1325408057[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408057, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym141_1325408052 || [],fmtRes_1325408057[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408046;

}

function setOption_1325408066(self_1325408067, option_1325408068, value_1325408069) {
  BeforeRet: {
    if ((self_1325408067 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1325408073 = nsuSplitString(option_1325408068, [46], -1);
    var node_1325408074 = self_1325408067.options;
    Label1: {
      var key_1325408093 = [];
      var colontmp__536871314 = [];
      colontmp__536871314 = HEX5BHEX5D_2634033769(pathItems_1325408073, HEX2EHEX2E_1056964704(0, 2));
      var i_536871315 = 0;
      var L_536871316 = (colontmp__536871314).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871315 < L_536871316)) break Label3;
            key_1325408093 = colontmp__536871314[chckIndx(i_536871315, 0, (colontmp__536871314).length - 1)];
            if (!((node_1325408074.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1660947644(node_1325408074, key_1325408093))) {
            HEX5BHEX5DHEX3D_1660946335(node_1325408074, key_1325408093, newJObject_1660944483());
            }
            
            node_1325408074 = HEX5BHEX5D_1660947469(node_1325408074, key_1325408093);
            i_536871315 = addInt(i_536871315, 1);
            if (!(((colontmp__536871314).length == L_536871316))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1325408074 == null) || !((node_1325408074.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1660946335(node_1325408074, HEX5BHEX5D_2600469248(pathItems_1325408073, 1), value_1325408069);
  };

  
}

function setOptionScript_1325408109(option_1325408110, value_1325408111) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym146_1325408112 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym146_1325408112)) {
      break BeforeRet;
      }
      
    };
    setOption_1325408066(get_1325407477(rHEX60gensym146_1325408112), option_1325408110, value_1325408111);
  };

  
}

function setOptionApi_1325408135(HEX3Atmp_1325408063) {
  var result_1325408136 = null;

    result_1325408136 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1325408109(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325408063, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1660947548(HEX3Atmp_1325408063, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym148_1325408142 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1325408147 = [mnewString(0)];
    fmtRes_1325408147[0].push.apply(fmtRes_1325408147[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408147, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym148_1325408142 || [],fmtRes_1325408147[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408136;

}

function quit_1325408156(self_1325408157) {
    self_1325408157.closeRequested = true;

  
}

function quitScript_1325408158() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym156_1325408159 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym156_1325408159)) {
      break BeforeRet;
      }
      
    };
    quit_1325408156(get_1325407477(rHEX60gensym156_1325408159));
  };

  
}

function quitApi_1325408182(HEX3Atmp_1325408153) {
  var result_1325408183 = null;

    result_1325408183 = newJNull_1660944481();
++excHandler;
    try {
    quitScript_1325408158();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym158_1325408184 = [113,117,105,116];
    var fmtRes_1325408189 = [mnewString(0)];
    fmtRes_1325408189[0].push.apply(fmtRes_1325408189[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408189, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym158_1325408184 || [],fmtRes_1325408189[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408183;

}

function changeFontSize_1325408198(self_1325408199, amount_1325408200) {
    fontSizeHEX3D_2332033152(self_1325408199.platform, (fontSize_2332033160(self_1325408199.platform) + amount_1325408200));

  
}

function changeFontSizeScript_1325408201(amount_1325408202) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym162_1325408203 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym162_1325408203)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1325408198(get_1325407477(rHEX60gensym162_1325408203), amount_1325408202);
  };

  
}

function initFromJson_2634031023(dst_2634031025, dst_2634031025_Idx, jsonNode_2634031026, jsonPath_2634031027, jsonPath_2634031027_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2634031026.kind == 4)) {
    var Temporary1 = jsonNode_2634031026;
    if (ConstSet196[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2634031032 = NaN;
      dst_2634031025[dst_2634031025_Idx] = b_2634031032;
      break;
    case "inf":
      var b_2634031033 = Infinity;
      dst_2634031025[dst_2634031025_Idx] = b_2634031033;
      break;
    case "-inf":
      var b_2634031034 = -Infinity;
      dst_2634031025[dst_2634031025_Idx] = b_2634031034;
      break;
    default: 
      var Temporary2 = jsonNode_2634031026;
      if (ConstSet197[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1728053256, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1660946458(jsonNode_2634031026, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2634031027[jsonPath_2634031027_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet198[jsonNode_2634031026.kind] != undefined))) {
      var msgHEX60gensym273_2634031048 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1660949850(ConstSet199), nimCopy(null, jsonPath_2634031027[jsonPath_2634031027_Idx], NTI33554449), reprEnum(jsonNode_2634031026.kind, NTI1660944387)]);
      raiseException({message: nimCopy(null, msgHEX60gensym273_2634031048, NTI33554449), parent: null, m_type: NTI1728053256, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2634031026.kind == 3)) {
      var Temporary3 = jsonNode_2634031026;
      if (ConstSet200[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1660944387)); }
      dst_2634031025[dst_2634031025_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2634031026;
        if (ConstSet201[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1660944387)); }
        dst_2634031025[dst_2634031025_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2634031012(node_2634031015) {
  var result_2634031017 = [0.0];

    var jsonPath_2634031018 = [[]];
    result_2634031017[0] = 0.0;
    initFromJson_2634031023(result_2634031017, 0, node_2634031015, jsonPath_2634031018, 0);

  return result_2634031017[0];

}

function fromJson_2634030997(a_2634030999, a_2634030999_Idx, b_2634031000, opt_2634031001) {
    if (!(!(HEX3DHEX3D_1660946458(b_2634031000, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [102,108,111,97,116,51,50], Field1: b_2634031000}));
    }
    
    a_2634030999[a_2634030999_Idx] = to_2634031012(b_2634031000);

  
}

function jsonTo_2634030991(b_2634030993, opt_2634030995) {
  var result_2634030996 = [0.0];

    fromJson_2634030997(result_2634030996, 0, b_2634030993, opt_2634030995);

  return result_2634030996[0];

}

function changeFontSizeApi_1325408226(HEX3Atmp_1325408195) {
  var result_1325408227 = null;

    result_1325408227 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1325408201(jsonTo_2634030991(HEX5BHEX5D_1660947548(HEX3Atmp_1325408195, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym164_1325408233 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1325408238 = [mnewString(0)];
    fmtRes_1325408238[0].push.apply(fmtRes_1325408238[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408238, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym164_1325408233 || [],fmtRes_1325408238[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408227;

}

function mgetOrPut_1325408277(t_1325408280, key_1325408281, val_1325408282) {
  var result_1325408283 = null;
  var result_1325408283_Idx = 0;

    if (((t_1325408280.data).length == 0)) {
    var correctSizeHEX60gensym173_1325408332 = slotsNeeded_1342177323(32);
    t_1325408280.counter = 0;
    t_1325408280.data = new Array(chckRange(correctSizeHEX60gensym173_1325408332, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym173_1325408332, 0, 2147483647) ; ++i) { t_1325408280.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1325408337 = [0];
    var index_1325408344 = rawGet_1325402714(t_1325408280, key_1325408281, hc_1325408337, 0);
    if ((index_1325408344 < 0)) {
    if (((t_1325408280.data).length == 0)) {
    var correctSizeHEX60gensym176_1325408393 = slotsNeeded_1342177323(32);
    t_1325408280.counter = 0;
    t_1325408280.data = new Array(chckRange(correctSizeHEX60gensym176_1325408393, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym176_1325408393, 0, 2147483647) ; ++i) { t_1325408280.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1325405907(t_1325408280)) {
    enlarge_1325406062(t_1325408280);
    index_1325408344 = rawGetKnownHC_1325406534(t_1325408280, key_1325408281, hc_1325408337[0]);
    }
    
    index_1325408344 = subInt(-1, index_1325408344);
    rawInsert_1325406356(t_1325408280, t_1325408280, "data", key_1325408281, val_1325408282, hc_1325408337[0], index_1325408344);
    t_1325408280.counter = addInt(t_1325408280.counter, 1);
    }
    
    result_1325408283 = t_1325408280.data[chckIndx(index_1325408344, 0, (t_1325408280.data).length - 1)]; result_1325408283_Idx = "Field2";

  return [result_1325408283, result_1325408283_Idx];

}

function changeLayoutProp_1325408247(self_1325408248, prop_1325408249, change_1325408250) {
    var Temporary1;

    HEX2BHEX3D_2113929327((Temporary1 = mgetOrPut_1325408277(self_1325408248.layout_props.props, prop_1325408249, 0.0), Temporary1)[0], Temporary1[1], change_1325408250);

  
}

function changeLayoutPropScript_1325408500(prop_1325408501, change_1325408502) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym169_1325408503 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym169_1325408503)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1325408247(get_1325407477(rHEX60gensym169_1325408503), prop_1325408501, change_1325408502);
  };

  
}

function changeLayoutPropApi_1325408526(HEX3Atmp_1325408244) {
  var result_1325408527 = null;

    result_1325408527 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1325408500(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325408244, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030991(HEX5BHEX5D_1660947548(HEX3Atmp_1325408244, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym171_1325408538 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1325408543 = [mnewString(0)];
    fmtRes_1325408543[0].push.apply(fmtRes_1325408543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym171_1325408538 || [],fmtRes_1325408543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408527;

}

function toggleStatusBarLocation_1325408552(self_1325408553) {
    self_1325408553.statusBarOnTop = !(self_1325408553.statusBarOnTop);

  
}

function toggleStatusBarLocationScript_1325408554() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym180_1325408555 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym180_1325408555)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1325408552(get_1325407477(rHEX60gensym180_1325408555));
  };

  
}

function toggleStatusBarLocationApi_1325408578(HEX3Atmp_1325408549) {
  var result_1325408579 = null;

    result_1325408579 = newJNull_1660944481();
++excHandler;
    try {
    toggleStatusBarLocationScript_1325408554();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym182_1325408580 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1325408585 = [mnewString(0)];
    fmtRes_1325408585[0].push.apply(fmtRes_1325408585[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408585, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym182_1325408580 || [],fmtRes_1325408585[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408579;

}

function createEditorForDocument_1325403255(self_1325403256, document_1325403257) {
  var result_1325403258 = null;

  BeforeRet: {
    Label1: {
      var editor_1325403281 = null;
      var i_536871328 = 0;
      var L_536871329 = (self_1325403256.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871328 < L_536871329)) break Label3;
            editor_1325403281 = self_1325403256.editor_defaults[chckIndx(i_536871328, 0, (self_1325403256.editor_defaults).length - 1)];
            if (canEdit_2181038114(editor_1325403281, document_1325403257)) {
            result_1325403258 = createWithDocument_2181038129(editor_1325403281, document_1325403257);
            break BeforeRet;
            }
            
            i_536871328 = addInt(i_536871328, 1);
            if (!(((self_1325403256.editor_defaults).length == L_536871329))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1191182436(logger_721420488[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2164260870(document_1325403257) || [])]);
    result_1325403258 = null;
    break BeforeRet;
  };

  return result_1325403258;

}

function createView_1325403374(self_1325403375, document_1325403376) {
    var editor_1325403377 = createEditorForDocument_1325403255(self_1325403375, document_1325403376);
    injectDependencies_1325402171(editor_1325403377, self_1325403375);
    var view_1325403378 = {document: document_1325403376, editor: editor_1325403377};
    self_1325403375.views.push(view_1325403378);;
    self_1325403375.currentView = subInt((self_1325403375.views).length, 1);

  
}

function initTreesitter_2634024379(self_2634024380) {
  
}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function nossplitFile(path_1459618046) {
            var Temporary4;

  var result_1459618050 = {Field0: [], Field1: [], Field2: []};

    var namePos_1459618051 = 0;
    var dotPos_1459618052 = 0;
    Label1: {
      var i_1459618059 = 0;
      var colontmp__536871332 = 0;
      colontmp__536871332 = subInt((path_1459618046).length, 1);
      var res_536871333 = colontmp__536871332;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_536871333)) break Label3;
            i_1459618059 = res_536871333;
            if (((ConstSet202[path_1459618046[chckIndx(i_1459618059, 0, (path_1459618046).length - 1)]] != undefined) || (i_1459618059 == 0))) {
            if ((ConstSet203[path_1459618046[chckIndx(i_1459618059, 0, (path_1459618046).length - 1)]] != undefined)) {
            if ((1 <= i_1459618059)) {
            Temporary4 = subInt(i_1459618059, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1459618050.Field0 = nimCopy(null, substr_33557821(path_1459618046, 0, Temporary4), NTI33554449);
            namePos_1459618051 = addInt(i_1459618059, 1);
            }
            
            if ((i_1459618059 < dotPos_1459618052)) {
            result_1459618050.Field1 = nimCopy(null, substr_33557821(path_1459618046, namePos_1459618051, subInt(dotPos_1459618052, 1)), NTI33554449);
            result_1459618050.Field2 = nimCopy(null, substr_33557833(path_1459618046, dotPos_1459618052), NTI33554449);
            }
            else {
              result_1459618050.Field1 = nimCopy(null, substr_33557833(path_1459618046, namePos_1459618051), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1459618046[chckIndx(i_1459618059, 0, (path_1459618046).length - 1)] == 46) && (0 < i_1459618059)) && (i_1459618059 < subInt((path_1459618046).length, 1))) && !((ConstSet204[path_1459618046[chckIndx(subInt(i_1459618059, 1), 0, (path_1459618046).length - 1)]] != undefined))) && !((path_1459618046[chckIndx(addInt(i_1459618059, 1), 0, (path_1459618046).length - 1)] == 46))) && (dotPos_1459618052 == 0))) {
            dotPos_1459618052 = i_1459618059;
            }
            }
            res_536871333 = subInt(res_536871333, 1);
          }
      };
    };

  return result_1459618050;

}

function none_2717909073() {
  var result_2717909080 = ({val: [], has: false});

  return result_2717909080;

}

function some_2717909082(val_2717909084) {
  var result_2717909085 = ({val: [], has: false});

    result_2717909085.has = true;
    result_2717909085.val = nimCopy(null, val_2717909084, NTI33554449);

  return result_2717909085;

}

function getLanguageForFile_2717909041(filename_2717909042) {
    var Temporary1;

  var result_2717909048 = ({val: [], has: false});

  BeforeRet: {
    var extension_2717909049 = nimCopy(null, nossplitFile(filename_2717909042).Field2, NTI33554449);
    if ((0 < (extension_2717909049).length)) {
    extension_2717909049 = nimCopy(null, HEX5BHEX5D_872416535(extension_2717909049, HEX2EHEX2E_1056964704(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2717909049)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2717909072 = [mnewString(0)];
      fmtRes_2717909072[0].push.apply(fmtRes_2717909072[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_738197675(fmtRes_2717909072, 0, extension_2717909049, []);
      fmtRes_2717909072[0].push.apply(fmtRes_2717909072[0], [39]);;
      log_1191182436(logger_721420488[0], 4, [nimCopy(null, fmtRes_2717909072[0], NTI33554449)]);
      result_2717909048 = nimCopy(result_2717909048, none_2717909073(), NTI2717909028);
      break BeforeRet;
      break;
    }
    var languageId_2717909081 = nimCopy(null, Temporary1, NTI33554449);
    result_2717909048 = nimCopy(result_2717909048, some_2717909082(languageId_2717909081), NTI2717909028);
    break BeforeRet;
  };

  return result_2717909048;

}

function isSome_2952790607(self_2952790609) {
  var result_2952790610 = false;

    result_2952790610 = self_2952790609.has;

  return result_2952790610;

}

function isNone_2952790632(self_2952790634) {
  var result_2952790635 = false;

    result_2952790635 = !(self_2952790634.has);

  return result_2952790635;

}

function get_2952790624(self_2952790626) {
  var result_2952790627 = [];

    if (isNone_2952790632(self_2952790626)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952790627 = self_2952790626["val"];

  return result_2952790627;

}

function nsuFindChar(s_872416914, sub_872416915, start_872416916, last_872416917) {
    var Temporary1;

  var result_872416918 = 0;

  BeforeRet: {
    result_872416918 = -1;
    if ((last_872416917 < 0)) {
    Temporary1 = (s_872416914).length - 1;
    }
    else {
    Temporary1 = last_872416917;
    }
    
    var last_872416919 = Temporary1;
    Label2: {
      var iHEX60gensym176_872416933 = 0;
      var colontmp__536871342 = 0;
      colontmp__536871342 = start_872416916;
      var res_536871343 = colontmp__536871342;
      Label3: {
          Label4: while (true) {
          if (!(res_536871343 <= last_872416919)) break Label4;
            iHEX60gensym176_872416933 = res_536871343;
            if ((s_872416914[chckIndx(iHEX60gensym176_872416933, 0, (s_872416914).length - 1)] == sub_872416915)) {
            result_872416918 = iHEX60gensym176_872416933;
            break BeforeRet;
            }
            
            res_536871343 = addInt(res_536871343, 1);
          }
      };
    };
  };

  return result_872416918;

}

function fill_872416850(a_872416852, value_872416853) {
    var xHEX60gensym172_872416859 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_872416859 <= (a_872416852).length - 1)) break Label2;
          a_872416852[chckIndx(xHEX60gensym172_872416859, 0, (a_872416852).length - 1)] = value_872416853;
          xHEX60gensym172_872416859 = addInt(xHEX60gensym172_872416859, 1);
        }
    };

  
}

function nsuInitSkipTable(a_872416847, sub_872416848) {
    var m_872416849 = (sub_872416848).length;
    fill_872416850(a_872416847, m_872416849);
    Label1: {
      var i_872416869 = 0;
      var colontmp__536871346 = 0;
      colontmp__536871346 = subInt(m_872416849, 1);
      var i_536871347 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871347 < colontmp__536871346)) break Label3;
            i_872416869 = i_536871347;
            a_872416847[chckIndx(sub_872416848[chckIndx(i_872416869, 0, (sub_872416848).length - 1)], 0, (a_872416847).length - 1)] = subInt(subInt(m_872416849, 1), i_872416869);
            i_536871347 = addInt(i_536871347, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_872416889) {
  var result_872416890 = [new Int32Array(256)];

    nsuInitSkipTable(result_872416890[0], sub_872416889);

  return result_872416890[0];

}

function nsuFindStrA(a_872416892, s_872416893, sub_872416894, start_872416895, last_872416896) {
    var Temporary1;

  var result_872416897 = 0;

  BeforeRet: {
    if ((last_872416896 < 0)) {
    Temporary1 = (s_872416893).length - 1;
    }
    else {
    Temporary1 = last_872416896;
    }
    
    var last_872416898 = Temporary1;
    var subLast_872416899 = subInt((sub_872416894).length, 1);
    if ((subLast_872416899 == -1)) {
    result_872416897 = start_872416895;
    break BeforeRet;
    }
    
    result_872416897 = -1;
    var skip_872416900 = start_872416895;
    Label2: {
        Label3: while (true) {
        if (!(subLast_872416899 <= subInt(last_872416898, skip_872416900))) break Label3;
          var i_872416901 = subLast_872416899;
          Label4: {
              Label5: while (true) {
              if (!(s_872416893[chckIndx(addInt(skip_872416900, i_872416901), 0, (s_872416893).length - 1)] == sub_872416894[chckIndx(i_872416901, 0, (sub_872416894).length - 1)])) break Label5;
                if ((i_872416901 == 0)) {
                result_872416897 = skip_872416900;
                break BeforeRet;
                }
                
                i_872416901 = subInt(i_872416901, 1);
              }
          };
          skip_872416900 = addInt(skip_872416900, a_872416892[chckIndx(s_872416893[chckIndx(addInt(skip_872416900, subLast_872416899), 0, (s_872416893).length - 1)], 0, (a_872416892).length - 1)]);
        }
    };
  };

  return result_872416897;

}

function nsuReplaceStr(s_872417102, sub_872417103, by_872417104) {
  var result_872417105 = [];

    result_872417105 = nimCopy(null, [], NTI33554449);
    var subLen_872417106 = (sub_872417103).length;
    if ((subLen_872417106 == 0)) {
    result_872417105 = nimCopy(null, s_872417102, NTI33554449);
    }
    else {
    if ((subLen_872417106 == 1)) {
    var c_872417107 = sub_872417103[chckIndx(0, 0, (sub_872417103).length - 1)];
    var last_872417108 = (s_872417102).length - 1;
    var i_872417109 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_872417110 = nsuFindChar(s_872417102, c_872417107, chckRange(i_872417109, 0, 2147483647), last_872417108);
          if ((j_872417110 < 0)) {
          break Label1;
          }
          
          result_872417105.push.apply(result_872417105, substr_33557821(s_872417102, i_872417109, subInt(j_872417110, 1)));;
          result_872417105.push.apply(result_872417105, by_872417104);;
          i_872417109 = addInt(j_872417110, subLen_872417106);
        }
    };
    result_872417105.push.apply(result_872417105, substr_33557833(s_872417102, i_872417109));;
    }
    else {
      var a_872417111 = nsuInitNewSkipTable(sub_872417103);
      var last_872417112 = (s_872417102).length - 1;
      var i_872417113 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_872417114 = nsuFindStrA(a_872417111, s_872417102, sub_872417103, chckRange(i_872417113, 0, 2147483647), last_872417112);
            if ((j_872417114 < 0)) {
            break Label3;
            }
            
            result_872417105.push.apply(result_872417105, substr_33557821(s_872417102, i_872417113, subInt(j_872417114, 1)));;
            result_872417105.push.apply(result_872417105, by_872417104);;
            i_872417113 = addInt(j_872417114, subLen_872417106);
          }
      };
      result_872417105.push.apply(result_872417105, substr_33557833(s_872417102, i_872417113));;
    }
    }

  return result_872417105;

}

function parseString_2717909096(self_2717909097, text_2717909098, oldTree_2717909110) {
  var result_2717909111 = null;

  return result_2717909111;

}

function none_2717909103() {
  var result_2717909109 = ({val: null});

  return result_2717909109;

}

function nsuSplitLines(s_872415911, keepEol_872415912) {
            var Temporary6;

  var result_872415913 = [];

    result_872415913 = nimCopy(null, [], NTI872415757);
    Label1: {
      var xHEX60gensym75_872415919 = [];
      var first_536871355 = 0;
      var last_536871356 = 0;
      var eolpos_536871357 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_536871356 < (s_872415911).length) && !((ConstSet205[s_872415911[chckIndx(last_536871356, 0, (s_872415911).length - 1)]] != undefined)))) break Label5;
                  last_536871356 = addInt(last_536871356, 1);
                }
            };
            eolpos_536871357 = last_536871356;
            if ((last_536871356 < (s_872415911).length)) {
            if ((s_872415911[chckIndx(last_536871356, 0, (s_872415911).length - 1)] == 10)) {
            last_536871356 = addInt(last_536871356, 1);
            }
            else {
            if ((s_872415911[chckIndx(last_536871356, 0, (s_872415911).length - 1)] == 13)) {
            last_536871356 = addInt(last_536871356, 1);
            if (((last_536871356 < (s_872415911).length) && (s_872415911[chckIndx(last_536871356, 0, (s_872415911).length - 1)] == 10))) {
            last_536871356 = addInt(last_536871356, 1);
            }
            
            }
            }
            }
            
            if (keepEol_872415912) {
            Temporary6 = subInt(last_536871356, 1);
            }
            else {
            Temporary6 = subInt(eolpos_536871357, 1);
            }
            
            xHEX60gensym75_872415919 = substr_33557821(s_872415911, first_536871355, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_872415919, NTI33554449);
            result_872415913.push(Temporary7);;
            if ((eolpos_536871357 == last_536871356)) {
            break Label2;
            }
            
            first_536871355 = last_536871356;
          }
      };
    };

  return result_872415913;

}

function invoke_2634023868(event_2634023870, arg_2634023871) {
    Label1: {
      var h_2634023894 = {Field0: ({id: 0}), Field1: null};
      var i_536871362 = 0;
      var L_536871363 = (event_2634023870.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871362 < L_536871363)) break Label3;
            h_2634023894 = event_2634023870.handlers[chckIndx(i_536871362, 0, (event_2634023870.handlers).length - 1)];
            h_2634023894.Field1(arg_2634023871);
            i_536871362 = addInt(i_536871362, 1);
            if (!(((event_2634023870.handlers).length == L_536871363))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function contentHEX3D_2634023814(self_2634023815, value_2634023816) {
    if (self_2634023815.singleLine) {
    self_2634023815.lines = nimCopy(null, [nsuReplaceStr(value_2634023816, [10], [])], NTI1593835635);
    if (((self_2634023815.lines).length == 0)) {
    self_2634023815.lines = nimCopy(null, [[]], NTI1593835635);
    }
    
    if (!((self_2634023815.tsParser == null))) {
    self_2634023815.currentTree = parseString_2717909096(self_2634023815.tsParser, self_2634023815.lines[chckIndx(0, 0, (self_2634023815.lines).length - 1)], none_2717909103());
    }
    
    }
    else {
      self_2634023815.lines = nimCopy(null, nsuSplitLines(value_2634023816, false), NTI872415746);
      if (((self_2634023815.lines).length == 0)) {
      self_2634023815.lines = nimCopy(null, [[]], NTI1593835635);
      }
      
      if (!((self_2634023815.tsParser == null))) {
      self_2634023815.currentTree = parseString_2717909096(self_2634023815.tsParser, value_2634023816, none_2717909103());
      }
      
    }
    
    self_2634023815.version = addInt(self_2634023815.version, 1);
    invoke_2634023868(self_2634023815.textChanged, self_2634023815);

  
}

function newTextDocument_2952790593(filename_2952790595, content_2952790596) {
  var result_2952790597 = null;

    result_2952790597 = ({m_type: NTI2634023047, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, currentTree: null, highlightQuery: null, languageServer: ({val: null})});
    var self_2952790601 = result_2952790597;
    self_2952790601.filename = nimCopy(null, filename_2952790595, NTI33554449);
    self_2952790601.currentTree = null;
    initTreesitter_2634024379(self_2952790601);
    var language_2952790602 = getLanguageForFile_2717909041(filename_2952790595);
    if (isSome_2952790607(language_2952790602)) {
    self_2952790601.languageId = nimCopy(null, get_2952790624(language_2952790602), NTI33554449);
    }
    
    contentHEX3D_2634023814(self_2952790601, content_2952790596);

  return result_2952790597;

}

function createView_1325408594(self_1325408595) {
    createView_1325403374(self_1325408595, newTextDocument_2952790593([], []));

  
}

function createViewScript_1325408600() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym185_1325408601 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym185_1325408601)) {
      break BeforeRet;
      }
      
    };
    createView_1325408594(get_1325407477(rHEX60gensym185_1325408601));
  };

  
}

function createViewApi_1325408624(HEX3Atmp_1325408591) {
  var result_1325408625 = null;

    result_1325408625 = newJNull_1660944481();
++excHandler;
    try {
    createViewScript_1325408600();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_1325408626 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1325408631 = [mnewString(0)];
    fmtRes_1325408631[0].push.apply(fmtRes_1325408631[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408631, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_1325408626 || [],fmtRes_1325408631[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408625;

}

function createView_1325403335(self_1325403336, editor_1325403337) {
    var view_1325403338 = {document: null, editor: editor_1325403337};
    self_1325403336.views.push(view_1325403338);;
    self_1325403336.currentView = subInt((self_1325403336.views).length, 1);

  
}

function newEditorId_2197815611() {
  var result_2197815612 = 0;

    result_2197815612 = nextEditorId_2197815610[0];
    nextEditorId_2197815610[0] = addInt(nextEditorId_2197815610[0], 1);

  return result_2197815612;

}

function init_2181038099(self_2181038100) {
    self_2181038100.id = newEditorId_2197815611();
    self_2181038100.renderHeader = true;
    self_2181038100.fillAvailableSpace = true;

  
}

function newKeybindAutocompletion_2214592533() {
  var result_2214592534 = null;

    result_2214592534 = {m_type: NTI2214592516, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false};
    init_2181038099(result_2214592534);

  return result_2214592534;

}

function createKeybindAutocompleteView_1325408640(self_1325408641) {
    createView_1325403335(self_1325408641, newKeybindAutocompletion_2214592533());

  
}

function createKeybindAutocompleteViewScript_1325408642() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym190_1325408643 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym190_1325408643)) {
      break BeforeRet;
      }
      
    };
    createKeybindAutocompleteView_1325408640(get_1325407477(rHEX60gensym190_1325408643));
  };

  
}

function createKeybindAutocompleteViewApi_1325408666(HEX3Atmp_1325408637) {
  var result_1325408667 = null;

    result_1325408667 = newJNull_1660944481();
++excHandler;
    try {
    createKeybindAutocompleteViewScript_1325408642();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym192_1325408668 = [99,114,101,97,116,101,75,101,121,98,105,110,100,65,117,116,111,99,111,109,112,108,101,116,101,86,105,101,119];
    var fmtRes_1325408673 = [mnewString(0)];
    fmtRes_1325408673[0].push.apply(fmtRes_1325408673[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408673, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym192_1325408668 || [],fmtRes_1325408673[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408667;

}

function delete_1325408684(x_1325408686, x_1325408686_Idx, i_1325408687) {
    x_1325408686[x_1325408686_Idx].splice(i_1325408687, 1);

  
}

function closeCurrentView_1325408682(self_1325408683) {
    unregister_2181038154(self_1325408683.views[chckIndx(self_1325408683.currentView, 0, (self_1325408683.views).length - 1)].editor);
    delete_1325408684(self_1325408683, "views", chckRange(self_1325408683.currentView, 0, 2147483647));
    self_1325408683.currentView = clamp_1694499551(self_1325408683.currentView, 0, subInt((self_1325408683.views).length, 1));

  
}

function closeCurrentViewScript_1325408714() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym195_1325408715 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym195_1325408715)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1325408682(get_1325407477(rHEX60gensym195_1325408715));
  };

  
}

function closeCurrentViewApi_1325408738(HEX3Atmp_1325408679) {
  var result_1325408739 = null;

    result_1325408739 = newJNull_1660944481();
++excHandler;
    try {
    closeCurrentViewScript_1325408714();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym197_1325408740 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1325408745 = [mnewString(0)];
    fmtRes_1325408745[0].push.apply(fmtRes_1325408745[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408745, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym197_1325408740 || [],fmtRes_1325408745[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408739;

}

function insert_1325408767(x_1325408769, x_1325408769_Idx, item_1325408770, i_1325408771) {
    var it_1325408791 = null;
    x_1325408769[x_1325408769_Idx] = x_1325408769[x_1325408769_Idx] || []; x_1325408769[x_1325408769_Idx].splice(i_1325408771, 0, it_1325408791);
    x_1325408769[x_1325408769_Idx][chckIndx(i_1325408771, 0, (x_1325408769[x_1325408769_Idx]).length - 1)] = item_1325408770;

  
}

function moveCurrentViewToTop_1325408754(self_1325408755) {
    if ((0 < (self_1325408755.views).length)) {
    var view_1325408762 = self_1325408755.views[chckIndx(self_1325408755.currentView, 0, (self_1325408755.views).length - 1)];
    delete_1325408684(self_1325408755, "views", chckRange(self_1325408755.currentView, 0, 2147483647));
    insert_1325408767(self_1325408755, "views", view_1325408762, 0);
    }
    
    self_1325408755.currentView = 0;

  
}

function moveCurrentViewToTopScript_1325408792() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym202_1325408793 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym202_1325408793)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1325408754(get_1325407477(rHEX60gensym202_1325408793));
  };

  
}

function moveCurrentViewToTopApi_1325408816(HEX3Atmp_1325408751) {
  var result_1325408817 = null;

    result_1325408817 = newJNull_1660944481();
++excHandler;
    try {
    moveCurrentViewToTopScript_1325408792();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym204_1325408818 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1325408823 = [mnewString(0)];
    fmtRes_1325408823[0].push.apply(fmtRes_1325408823[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408823, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym204_1325408818 || [],fmtRes_1325408823[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408817;

}

function nextView_1325408832(self_1325408833) {
    var Temporary1;

    if (((self_1325408833.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1325408833.currentView, 1), (self_1325408833.views).length);
    }
    
    self_1325408833.currentView = Temporary1;

  
}

function nextViewScript_1325408840() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym210_1325408841 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym210_1325408841)) {
      break BeforeRet;
      }
      
    };
    nextView_1325408832(get_1325407477(rHEX60gensym210_1325408841));
  };

  
}

function nextViewApi_1325408864(HEX3Atmp_1325408829) {
  var result_1325408865 = null;

    result_1325408865 = newJNull_1660944481();
++excHandler;
    try {
    nextViewScript_1325408840();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym212_1325408866 = [110,101,120,116,86,105,101,119];
    var fmtRes_1325408871 = [mnewString(0)];
    fmtRes_1325408871[0].push.apply(fmtRes_1325408871[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408871, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym212_1325408866 || [],fmtRes_1325408871[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408865;

}

function prevView_1325408880(self_1325408881) {
    var Temporary1;

    if (((self_1325408881.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1325408881.currentView, (self_1325408881.views).length), 1), (self_1325408881.views).length);
    }
    
    self_1325408881.currentView = Temporary1;

  
}

function prevViewScript_1325408891() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym215_1325408892 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym215_1325408892)) {
      break BeforeRet;
      }
      
    };
    prevView_1325408880(get_1325407477(rHEX60gensym215_1325408892));
  };

  
}

function prevViewApi_1325408915(HEX3Atmp_1325408877) {
  var result_1325408916 = null;

    result_1325408916 = newJNull_1660944481();
++excHandler;
    try {
    prevViewScript_1325408891();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym217_1325408917 = [112,114,101,118,86,105,101,119];
    var fmtRes_1325408922 = [mnewString(0)];
    fmtRes_1325408922[0].push.apply(fmtRes_1325408922[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408922, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym217_1325408917 || [],fmtRes_1325408922[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408916;

}

function moveCurrentViewPrev_1325408931(self_1325408932) {
    if ((0 < (self_1325408932.views).length)) {
    var view_1325408939 = self_1325408932.views[chckIndx(self_1325408932.currentView, 0, (self_1325408932.views).length - 1)];
    var index_1325408946 = modInt(subInt(addInt(self_1325408932.currentView, (self_1325408932.views).length), 1), (self_1325408932.views).length);
    delete_1325408684(self_1325408932, "views", chckRange(self_1325408932.currentView, 0, 2147483647));
    insert_1325408767(self_1325408932, "views", view_1325408939, chckRange(index_1325408946, 0, 2147483647));
    self_1325408932.currentView = index_1325408946;
    }
    

  
}

function moveCurrentViewPrevScript_1325408956() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym220_1325408957 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym220_1325408957)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1325408931(get_1325407477(rHEX60gensym220_1325408957));
  };

  
}

function moveCurrentViewPrevApi_1325408980(HEX3Atmp_1325408928) {
  var result_1325408981 = null;

    result_1325408981 = newJNull_1660944481();
++excHandler;
    try {
    moveCurrentViewPrevScript_1325408956();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym222_1325408982 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1325408987 = [mnewString(0)];
    fmtRes_1325408987[0].push.apply(fmtRes_1325408987[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325408987, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym222_1325408982 || [],fmtRes_1325408987[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325408981;

}

function moveCurrentViewNext_1325408996(self_1325408997) {
    if ((0 < (self_1325408997.views).length)) {
    var view_1325409004 = self_1325408997.views[chckIndx(self_1325408997.currentView, 0, (self_1325408997.views).length - 1)];
    var index_1325409008 = modInt(addInt(self_1325408997.currentView, 1), (self_1325408997.views).length);
    delete_1325408684(self_1325408997, "views", chckRange(self_1325408997.currentView, 0, 2147483647));
    insert_1325408767(self_1325408997, "views", view_1325409004, chckRange(index_1325409008, 0, 2147483647));
    self_1325408997.currentView = index_1325409008;
    }
    

  
}

function moveCurrentViewNextScript_1325409018() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym226_1325409019 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym226_1325409019)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1325408996(get_1325407477(rHEX60gensym226_1325409019));
  };

  
}

function moveCurrentViewNextApi_1325409042(HEX3Atmp_1325408993) {
  var result_1325409043 = null;

    result_1325409043 = newJNull_1660944481();
++excHandler;
    try {
    moveCurrentViewNextScript_1325409018();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym228_1325409044 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1325409049 = [mnewString(0)];
    fmtRes_1325409049[0].push.apply(fmtRes_1325409049[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409049, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym228_1325409044 || [],fmtRes_1325409049[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409043;

}

function setLayout_1325409058(self_1325409059, layout_1325409060) {
    var Temporary1;

    switch (toJSStr(layout_1325409060)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1325400075};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1325400076};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1325400077};
      break;
    default: 
      Temporary1 = {m_type: NTI1325400075};
      break;
    }
    self_1325409059.layout = Temporary1;

  
}

function setLayoutScript_1325409097(layout_1325409098) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym233_1325409099 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym233_1325409099)) {
      break BeforeRet;
      }
      
    };
    setLayout_1325409058(get_1325407477(rHEX60gensym233_1325409099), layout_1325409098);
  };

  
}

function setLayoutApi_1325409122(HEX3Atmp_1325409055) {
  var result_1325409123 = null;

    result_1325409123 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1325409097(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409055, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym235_1325409129 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1325409134 = [mnewString(0)];
    fmtRes_1325409134[0].push.apply(fmtRes_1325409134[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409134, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym235_1325409129 || [],fmtRes_1325409134[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409123;

}

function nsuJoinSep(a_872416807, sep_872416808) {
  var result_872416809 = [];

    if ((0 < (a_872416807).length)) {
    var L_872416816 = mulInt((sep_872416808).length, subInt((a_872416807).length, 1));
    Label1: {
      var i_872416824 = 0;
      var colontmp__536871388 = 0;
      colontmp__536871388 = (a_872416807).length - 1;
      var res_536871389 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871389 <= colontmp__536871388)) break Label3;
            i_872416824 = res_536871389;
            L_872416816 = addInt(L_872416816, (a_872416807[chckIndx(i_872416824, 0, (a_872416807).length - 1)]).length);
            res_536871389 = addInt(res_536871389, 1);
          }
      };
    };
    result_872416809 = nimCopy(null, mnewString(0), NTI33554449);
    result_872416809.push.apply(result_872416809, a_872416807[chckIndx(0, 0, (a_872416807).length - 1)]);;
    Label4: {
      var i_872416837 = 0;
      var colontmp__536871392 = 0;
      colontmp__536871392 = (a_872416807).length - 1;
      var res_536871393 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_536871393 <= colontmp__536871392)) break Label6;
            i_872416837 = res_536871393;
            result_872416809.push.apply(result_872416809, sep_872416808);;
            result_872416809.push.apply(result_872416809, a_872416807[chckIndx(i_872416837, 0, (a_872416807).length - 1)]);;
            res_536871393 = addInt(res_536871393, 1);
          }
      };
    };
    }
    else {
      result_872416809 = nimCopy(null, [], NTI33554449);
    }
    

  return result_872416809;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2634023933(self_2634023934, value_2634023935) {
    if (self_2634023934.singleLine) {
    self_2634023934.lines = nimCopy(null, [nsuJoinSep(value_2634023935, [])], NTI1593835635);
    }
    else {
      Label1: {
        var iHEX60gensym21_2634023997 = 0;
        var resultHEX60gensym21_2634024004 = newSeq_503316959(chckRange((value_2634023935).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym21_2634024008 = [];
          var i_536871384 = 0;
          var L_536871385 = (value_2634023935).length;
          Label3: {
              Label4: while (true) {
              if (!(i_536871384 < L_536871385)) break Label4;
                itHEX60gensym21_2634024008 = value_2634023935[chckIndx(i_536871384, 0, (value_2634023935).length - 1)];
                resultHEX60gensym21_2634024004[chckIndx(iHEX60gensym21_2634023997, 0, (resultHEX60gensym21_2634024004).length - 1)] = nimCopy(null, itHEX60gensym21_2634024008, NTI33554449);
                iHEX60gensym21_2634023997 = addInt(iHEX60gensym21_2634023997, 1);
                i_536871384 = addInt(i_536871384, 1);
                if (!(((value_2634023935).length == L_536871385))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2634023934.lines = nimCopy(null, resultHEX60gensym21_2634024004, NTI503316776);
    }
    
    if (((self_2634023934.lines).length == 0)) {
    self_2634023934.lines = nimCopy(null, [[]], NTI1593835635);
    }
    
    var strValue_2634024020 = nsuJoinSep(value_2634023935, [10]);
    if (!((self_2634023934.tsParser == null))) {
    self_2634023934.currentTree = parseString_2717909096(self_2634023934.tsParser, strValue_2634024020, none_2717909103());
    }
    
    self_2634023934.version = addInt(self_2634023934.version, 1);
    invoke_2634023868(self_2634023934.textChanged, self_2634023934);

  
}

function commandLine_1325409143(self_1325409144, initialValue_1325409145) {
    contentHEX3D_2634023933(getCommandLineTextEditor_1325405317(self_1325409144).document, [nimCopy(null, initialValue_1325409145, NTI33554449)]);
    self_1325409144.commandLineMode = true;

  
}

function commandLineScript_1325409150(initialValue_1325409151) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym239_1325409152 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym239_1325409152)) {
      break BeforeRet;
      }
      
    };
    commandLine_1325409143(get_1325407477(rHEX60gensym239_1325409152), initialValue_1325409151);
  };

  
}

function commandLineApi_1325409175(HEX3Atmp_1325409140) {
      var Temporary3;

  var result_1325409176 = null;

    result_1325409176 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1660947415(HEX3Atmp_1325409140))) {
      Temporary3 = jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409140, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1325409150(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym241_1325409182 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1325409187 = [mnewString(0)];
    fmtRes_1325409187[0].push.apply(fmtRes_1325409187[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409187, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym241_1325409182 || [],fmtRes_1325409187[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409176;

}

function exitCommandLine_1325409196(self_1325409197) {
    contentHEX3D_2634023933(getCommandLineTextEditor_1325405317(self_1325409197).document, [[]]);
    self_1325409197.commandLineMode = false;

  
}

function exitCommandLineScript_1325409202() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_1325409203 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym245_1325409203)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1325409196(get_1325407477(rHEX60gensym245_1325409203));
  };

  
}

function exitCommandLineApi_1325409226(HEX3Atmp_1325409193) {
  var result_1325409227 = null;

    result_1325409227 = newJNull_1660944481();
++excHandler;
    try {
    exitCommandLineScript_1325409202();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym247_1325409228 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1325409233 = [mnewString(0)];
    fmtRes_1325409233[0].push.apply(fmtRes_1325409233[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409233, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym247_1325409228 || [],fmtRes_1325409233[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409227;

}

function content_2634024055(document_2634024056) {
  var result_2634024057 = [];

  BeforeRet: {
    result_2634024057 = nimCopy(null, document_2634024056.lines, NTI2634023048);
    break BeforeRet;
  };

  return result_2634024057;

}

function executeCommandLine_1325409242(self_1325409243) {
  var result_1325409244 = false;

  BeforeRet: {
    self_1325409243.commandLineMode = false;
    var colontmp__536871397 = parseAction_2080376211(nsuJoinSep(content_2634024055(getCommandLineTextEditor_1325405317(self_1325409243).document), []));
    var action_1325409245 = nimCopy(null, colontmp__536871397["Field0"], NTI33554449);
    var arg_1325409246 = nimCopy(null, colontmp__536871397["Field1"], NTI33554449);
    contentHEX3D_2634023933(getCommandLineTextEditor_1325405317(self_1325409243).document, [[]]);
    result_1325409244 = handleAction_1325403247(self_1325409243, action_1325409245, arg_1325409246);
    break BeforeRet;
  };

  return result_1325409244;

}

function executeCommandLineScript_1325409251() {
  var result_1325409252 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym250_1325409253 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym250_1325409253)) {
      break BeforeRet;
      }
      
    };
    result_1325409252 = executeCommandLine_1325409242(get_1325407477(rHEX60gensym250_1325409253));
  };

  return result_1325409252;

}

function executeCommandLineApi_1325409276(HEX3Atmp_1325409239) {
  var result_1325409277 = null;

  BeforeRet: {
    result_1325409277 = newJNull_1660944481();
++excHandler;
    try {
    result_1325409277 = toJson_2634033362(executeCommandLineScript_1325409251(), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym253_1325409282 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1325409287 = [mnewString(0)];
    fmtRes_1325409287[0].push.apply(fmtRes_1325409287[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409287, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym253_1325409282 || [],fmtRes_1325409287[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325409277;

}

function openFile_1325409296(self_1325409297, path_1325409298) {
  
}

function openFileScript_1325409299(path_1325409300) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym257_1325409301 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym257_1325409301)) {
      break BeforeRet;
      }
      
    };
    openFile_1325409296(get_1325407477(rHEX60gensym257_1325409301), path_1325409300);
  };

  
}

function openFileApi_1325409324(HEX3Atmp_1325409293) {
  var result_1325409325 = null;

    result_1325409325 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    openFileScript_1325409299(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409293, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym259_1325409331 = [111,112,101,110,70,105,108,101];
    var fmtRes_1325409336 = [mnewString(0)];
    fmtRes_1325409336[0].push.apply(fmtRes_1325409336[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409336, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym259_1325409331 || [],fmtRes_1325409336[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409325;

}

function writeFile_1325409345(self_1325409346, path_1325409347) {
    if ((((0 <= self_1325409346.currentView) && (self_1325409346.currentView < (self_1325409346.views).length)) && !((self_1325409346.views[chckIndx(self_1325409346.currentView, 0, (self_1325409346.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2164260875(self_1325409346.views[chckIndx(self_1325409346.currentView, 0, (self_1325409346.views).length - 1)].document, path_1325409347);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1325409359 = [mnewString(0)];
    fmtRes_1325409359[0].push.apply(fmtRes_1325409359[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_738197675(fmtRes_1325409359, 0, path_1325409347, []);
    fmtRes_1325409359[0].push.apply(fmtRes_1325409359[0], [39,58,32]);;
    formatValue_738197675(fmtRes_1325409359, 0, getCurrentExceptionMsg_33556469(), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_1325409359[0], NTI33554449)]);
    log_1191182436(logger_721420488[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    

  
}

function writeFileScript_1325409360(path_1325409361) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym263_1325409362 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym263_1325409362)) {
      break BeforeRet;
      }
      
    };
    writeFile_1325409345(get_1325407477(rHEX60gensym263_1325409362), path_1325409361);
  };

  
}

function writeFileApi_1325409385(HEX3Atmp_1325409342) {
      var Temporary3;

  var result_1325409386 = null;

    result_1325409386 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1660947415(HEX3Atmp_1325409342))) {
      Temporary3 = jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409342, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    writeFileScript_1325409360(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym265_1325409392 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1325409397 = [mnewString(0)];
    fmtRes_1325409397[0].push.apply(fmtRes_1325409397[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409397, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym265_1325409392 || [],fmtRes_1325409397[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409386;

}

function loadFile_1325409406(self_1325409407, path_1325409408) {
    if ((((0 <= self_1325409407.currentView) && (self_1325409407.currentView < (self_1325409407.views).length)) && !((self_1325409407.views[chckIndx(self_1325409407.currentView, 0, (self_1325409407.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2164260879(self_1325409407.views[chckIndx(self_1325409407.currentView, 0, (self_1325409407.views).length - 1)].document, path_1325409408);
    handleDocumentChanged_2181038151(self_1325409407.views[chckIndx(self_1325409407.currentView, 0, (self_1325409407.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1325409420 = [mnewString(0)];
    fmtRes_1325409420[0].push.apply(fmtRes_1325409420[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_738197675(fmtRes_1325409420, 0, path_1325409408, []);
    fmtRes_1325409420[0].push.apply(fmtRes_1325409420[0], [39,58,32]);;
    formatValue_738197675(fmtRes_1325409420, 0, getCurrentExceptionMsg_33556469(), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_1325409420[0], NTI33554449)]);
    log_1191182436(logger_721420488[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    

  
}

function loadFileScript_1325409421(path_1325409422) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym273_1325409423 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym273_1325409423)) {
      break BeforeRet;
      }
      
    };
    loadFile_1325409406(get_1325407477(rHEX60gensym273_1325409423), path_1325409422);
  };

  
}

function loadFileApi_1325409446(HEX3Atmp_1325409403) {
      var Temporary3;

  var result_1325409447 = null;

    result_1325409447 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1660947415(HEX3Atmp_1325409403))) {
      Temporary3 = jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409403, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1325409421(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym275_1325409453 = [108,111,97,100,70,105,108,101];
    var fmtRes_1325409458 = [mnewString(0)];
    fmtRes_1325409458[0].push.apply(fmtRes_1325409458[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409458, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym275_1325409453 || [],fmtRes_1325409458[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409447;

}

function loadTheme_1325409467(self_1325409468, name_1325409469) {
      var Temporary1;

      var fmtRes_1325409474 = [mnewString(0)];
      fmtRes_1325409474[0].push.apply(fmtRes_1325409474[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_738197675(fmtRes_1325409474, 0, name_1325409469, []);
      fmtRes_1325409474[0].push.apply(fmtRes_1325409474[0], [46,106,115,111,110]);;
      var oHEX60gensym287_1325409477 = loadFromFile_2499808842(fmtRes_1325409474[0]);
      if (!isSome_1325405270(oHEX60gensym287_1325409477)) Temporary1 = false; else {        var theme_1325409500 = get_1325405290(oHEX60gensym287_1325409477);
        Temporary1 = true;      }    if (Temporary1) {
    self_1325409468.theme = theme_1325409500;
    }
    else {
      var fmtRes_1325409505 = [mnewString(0)];
      fmtRes_1325409505[0].push.apply(fmtRes_1325409505[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_738197675(fmtRes_1325409505, 0, name_1325409469, []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_1325409505[0], NTI33554449)]);
    }
    

  
}

function loadThemeScript_1325409506(name_1325409507) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym283_1325409508 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym283_1325409508)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1325409467(get_1325407477(rHEX60gensym283_1325409508), name_1325409507);
  };

  
}

function loadThemeApi_1325409531(HEX3Atmp_1325409464) {
  var result_1325409532 = null;

    result_1325409532 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1325409506(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409464, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym285_1325409538 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1325409543 = [mnewString(0)];
    fmtRes_1325409543[0].push.apply(fmtRes_1325409543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym285_1325409538 || [],fmtRes_1325409543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409532;

}

function toSelection_2197815789(cursor_2197815790) {
  var result_2197815791 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__536871408 = nimCopy(null, cursor_2197815790, NTI2197815305);
    var colontmp__536871409 = nimCopy(null, cursor_2197815790, NTI2197815305);
    result_2197815791 = nimCopy(result_2197815791, {Field0: nimCopy(null, colontmp__536871408, NTI2197815305), Field1: nimCopy(null, colontmp__536871409, NTI2197815305)}, NTI2197815307);

  return result_2197815791;

}

function subscribe_2634035865(event_2634035867, callback_2634035869) {
  var result_2634035870 = ({id: 0});

    result_2634035870 = nimCopy(result_2634035870, newId_2298478623(), NTI2298478595);
    event_2634035867.handlers.push({Field0: nimCopy(null, result_2634035870, NTI2298478595), Field1: callback_2634035869});;

  return result_2634035870;

}

function HEX3DHEX3D_2197815369(x_2197815371, y_2197815372) {
  var result_2197815373 = false;

  BeforeRet: {
    if (!((x_2197815371["Field0"] == y_2197815372["Field0"]))) {
    result_2197815373 = false;
    break BeforeRet;
    }
    
    if (!((x_2197815371["Field1"] == y_2197815372["Field1"]))) {
    result_2197815373 = false;
    break BeforeRet;
    }
    
    result_2197815373 = true;
    break BeforeRet;
  };

  return result_2197815373;

}

function HEX3DHEX3D_2197815359(x_2197815361, y_2197815362) {
  var result_2197815363 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2197815369(x_2197815361["Field0"], y_2197815362["Field0"]))) {
    result_2197815363 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2197815369(x_2197815361["Field1"], y_2197815362["Field1"]))) {
    result_2197815363 = false;
    break BeforeRet;
    }
    
    result_2197815363 = true;
    break BeforeRet;
  };

  return result_2197815363;

}

function HEX3DHEX3D_2634023654(x_2634023656, y_2634023657) {
  var result_2634023658 = false;

  BeforeRet: {
    var sameObject_2634023665 = false;
    sameObject_2634023665 = x_2634023656 === y_2634023657
    if (sameObject_2634023665) {
    result_2634023658 = true;
    break BeforeRet;
    }
    
    if (!(((x_2634023656).length == (y_2634023657).length))) {
    result_2634023658 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2634023679 = 0;
      var colontmp__536871411 = 0;
      colontmp__536871411 = subInt((x_2634023656).length, 1);
      var res_536871412 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871412 <= colontmp__536871411)) break Label3;
            i_2634023679 = res_536871412;
            if (!(HEX3DHEX3D_2197815359(x_2634023656[chckIndx(i_2634023679, 0, (x_2634023656).length - 1)], y_2634023657[chckIndx(i_2634023679, 0, (y_2634023657).length - 1)]))) {
            result_2634023658 = false;
            break BeforeRet;
            }
            
            res_536871412 = addInt(res_536871412, 1);
          }
      };
    };
    result_2634023658 = true;
    break BeforeRet;
  };

  return result_2634023658;

}

function newSeq_2634023444(len_2634023446) {
  var result_2634023447 = [];

    result_2634023447 = new Array(len_2634023446); for (var i = 0 ; i < len_2634023446 ; ++i) { result_2634023447[i] = []; }
  return result_2634023447;

}

function expandIfNeeded_2634023434(deq_2634023436) {
              var Temporary5;
    var Temporary6;

    if ((deq_2634023436.mask == 0)) {
    var correctSizeHEX60gensym9_2634023438 = nextPowerOfTwo_889192653(4);
    deq_2634023436.mask = subInt(correctSizeHEX60gensym9_2634023438, 1);
    deq_2634023436.data = new Array(chckRange(correctSizeHEX60gensym9_2634023438, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2634023438, 0, 2147483647) ; ++i) { deq_2634023436.data[i] = []; }    }
    
    var cap_2634023443 = addInt(deq_2634023436.mask, 1);
    if ((cap_2634023443 <= deq_2634023436.count)) {
    var n_2634023461 = newSeq_2634023444(chckRange(mulInt(cap_2634023443, 2), 0, 2147483647));
    var i_2634023462 = 0;
    Label1: {
      var x_2634023472 = null;
      var x_2634023472_Idx = 0;
      var i_536871418 = deq_2634023436.head;
      Label2: {
        var c_536871420 = 0;
        var i_536871421 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536871421 < deq_2634023436.count)) break Label4;
              c_536871420 = i_536871421;
              x_2634023472 = deq_2634023436.data; x_2634023472_Idx = chckIndx(i_536871418, 0, (deq_2634023436.data).length - 1);
              Temporary5 = x_2634023472[x_2634023472_Idx];
              x_2634023472[x_2634023472_Idx] = genericReset(x_2634023472[x_2634023472_Idx], NTI2197815315);
              n_2634023461[chckIndx(i_2634023462, 0, (n_2634023461).length - 1)] = nimCopy(null, Temporary5, NTI2197815315);
              i_2634023462 = addInt(i_2634023462, 1);
              i_536871418 = (addInt(i_536871418, 1) & deq_2634023436.mask);
              i_536871421 = addInt(i_536871421, 1);
            }
        };
      };
    };
    Temporary6 = n_2634023461;
    n_2634023461 = genericReset(n_2634023461, NTI2634023297);
    deq_2634023436.data = nimCopy(null, Temporary6, NTI2634023297);
    deq_2634023436.mask = subInt(mulInt(cap_2634023443, 2), 1);
    deq_2634023436.tail = deq_2634023436.count;
    deq_2634023436.head = 0;
    }
    

  
}

function addLast_2634023425(deq_2634023427, item_2634023428) {
    expandIfNeeded_2634023434(deq_2634023427);
    deq_2634023427.count = addInt(deq_2634023427.count, 1);
    deq_2634023427.data[chckIndx(deq_2634023427.tail, 0, (deq_2634023427.data).length - 1)] = nimCopy(null, item_2634023428, NTI2197815315);
    deq_2634023427.tail = (addInt(deq_2634023427.tail, 1) & deq_2634023427.mask);

  
}

function len_2634023564(deq_2634023566) {
  var result_2634023567 = 0;

    result_2634023567 = deq_2634023566.count;

  return result_2634023567;

}

function popFirst_2634023625(deq_2634023627) {
    var Temporary1;

  var result_2634023628 = [];

    if ((deq_2634023627.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2634023627.count = subInt(deq_2634023627.count, 1);
    Temporary1 = deq_2634023627.data[chckIndx(deq_2634023627.head, 0, (deq_2634023627.data).length - 1)];
    deq_2634023627.data[chckIndx(deq_2634023627.head, 0, (deq_2634023627.data).length - 1)] = genericReset(deq_2634023627.data[chckIndx(deq_2634023627.head, 0, (deq_2634023627.data).length - 1)], NTI2197815315);
    result_2634023628 = nimCopy(null, Temporary1, NTI2197815315);
    deq_2634023627.head = (addInt(deq_2634023627.head, 1) & deq_2634023627.mask);

  return result_2634023628;

}

function any_2197815729(s_2197815731, pred_2197815733) {
  var result_2197815734 = false;

  BeforeRet: {
    Label1: {
      var i_2197815747 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871432 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871432 < (s_2197815731).length)) break Label3;
            i_2197815747 = s_2197815731[chckIndx(i_536871432, 0, (s_2197815731).length - 1)];
            if (pred_2197815733(i_2197815747)) {
            result_2197815734 = true;
            break BeforeRet;
            }
            
            i_536871432 = addInt(i_536871432, 1);
          }
      };
    };
    result_2197815734 = false;
  };

  return result_2197815734;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2197815639(x_2197815641, y_2197815642) {
  var result_2197815643 = false;

  BeforeRet: {
    var c_2197815653 = cmp_33557727(x_2197815641["Field0"], y_2197815642["Field0"]);
    if ((c_2197815653 < 0)) {
    result_2197815643 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815653)) {
    result_2197815643 = false;
    break BeforeRet;
    }
    
    var c_2197815658 = cmp_33557727(x_2197815641["Field1"], y_2197815642["Field1"]);
    if ((c_2197815658 < 0)) {
    result_2197815643 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815658)) {
    result_2197815643 = false;
    break BeforeRet;
    }
    
    result_2197815643 = true;
    break BeforeRet;
  };

  return result_2197815643;

}

function contains_2197815687(selection_2197815688, other_2197815689) {
  var result_2197815690 = false;

    result_2197815690 = (HEX3CHEX3D_2197815639(selection_2197815688.Field0, other_2197815689.Field0) && HEX3CHEX3D_2197815639(other_2197815689.Field1, selection_2197815688.Field1));

  return result_2197815690;

}

function contains_2197815766(self_2197815767, other_2197815768) {
    other_2197815768 = nimCopy(null, other_2197815768, NTI2197815307);
    
function HEX3Aanonymous_2197815770(s_2197815773) {
      var result_2197815776 = false;

        result_2197815776 = contains_2197815687(s_2197815773, other_2197815768);

      return result_2197815776;

    }

  var result_2197815769 = false;

    result_2197815769 = any_2197815729(self_2197815767, HEX3Aanonymous_2197815770);

  return result_2197815769;

}

function deduplicate_2634023356(s_2634023358, isSorted_2634023359) {
  var result_2634023360 = [];

    result_2634023360 = nimCopy(null, [], NTI2634023243);
    if ((0 < (s_2634023358).length)) {
    if (isSorted_2634023359) {
    var prev_2634023368 = nimCopy(null, s_2634023358[chckIndx(0, 0, (s_2634023358).length - 1)], NTI2197815307);
    var Temporary1 = nimCopy(null, prev_2634023368, NTI2197815307);
    result_2634023360.push(Temporary1);;
    Label2: {
      var i_2634023380 = 0;
      var colontmp__536871424 = 0;
      colontmp__536871424 = (s_2634023358).length - 1;
      var res_536871425 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_536871425 <= colontmp__536871424)) break Label4;
            i_2634023380 = res_536871425;
            if (!(HEX3DHEX3D_2197815359(s_2634023358[chckIndx(i_2634023380, 0, (s_2634023358).length - 1)], prev_2634023368))) {
            prev_2634023368 = nimCopy(prev_2634023368, s_2634023358[chckIndx(i_2634023380, 0, (s_2634023358).length - 1)], NTI2197815307);
            var Temporary5 = nimCopy(null, prev_2634023368, NTI2197815307);
            result_2634023360.push(Temporary5);;
            }
            
            res_536871425 = addInt(res_536871425, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2634023392 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_536871429 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_536871429 < (s_2634023358).length)) break Label8;
              itm_2634023392 = s_2634023358[chckIndx(i_536871429, 0, (s_2634023358).length - 1)];
              if (!(contains_2197815766(result_2634023360, itm_2634023392))) {
              var Temporary9 = nimCopy(null, itm_2634023392, NTI2197815307);
              result_2634023360.push(Temporary9);;
              }
              
              i_536871429 = addInt(i_536871429, 1);
            }
        };
      };
    }
    
    }
    

  return result_2634023360;

}

function map_2634023334(s_2634023337, op_2634023339) {
  var result_2634023340 = [];

    result_2634023340 = new Array(chckRange((s_2634023337).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2634023337).length, 0, 2147483647) ; ++i) { result_2634023340[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2634023355 = 0;
      var colontmp__536871435 = 0;
      colontmp__536871435 = (s_2634023337).length;
      var i_536871436 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871436 < colontmp__536871435)) break Label3;
            i_2634023355 = i_536871436;
            result_2634023340[chckIndx(i_2634023355, 0, (result_2634023340).length - 1)] = nimCopy(result_2634023340[chckIndx(i_2634023355, 0, (result_2634023340).length - 1)], op_2634023339(s_2634023337[chckIndx(i_2634023355, 0, (s_2634023337).length - 1)]), NTI2197815307);
            i_536871436 = addInt(i_536871436, 1);
          }
      };
    };

  return result_2634023340;

}

function lineLength_2634023272(self_2634023273, line_2634023274) {
  var result_2634023275 = 0;

  BeforeRet: {
    if ((line_2634023274 < (self_2634023273.lines).length)) {
    result_2634023275 = (self_2634023273.lines[chckIndx(line_2634023274, 0, (self_2634023273.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2634023275 = 0;
    break BeforeRet;
  };

  return result_2634023275;

}

function clampCursor_2634023286(self_2634023287, cursor_2634023288) {
  var result_2634023289 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2634023290 = nimCopy(null, cursor_2634023288, NTI2197815305);
    if (((self_2634023287.lines).length == 0)) {
    var colontmp__536871440 = 0;
    var colontmp__536871441 = 0;
    result_2634023289 = nimCopy(result_2634023289, {Field0: colontmp__536871440, Field1: colontmp__536871441}, NTI2197815305);
    break BeforeRet;
    }
    
    cursor_2634023290.Field0 = clamp_1694499551(cursor_2634023290.Field0, 0, subInt((self_2634023287.lines).length, 1));
    cursor_2634023290.Field1 = clamp_1694499551(cursor_2634023290.Field1, 0, lineLength_2634023272(self_2634023287, cursor_2634023290.Field0));
    result_2634023289 = nimCopy(result_2634023289, cursor_2634023290, NTI2197815305);
    break BeforeRet;
  };

  return result_2634023289;

}

function clampSelection_2634023311(self_2634023312, selection_2634023313) {
  var result_2634023314 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__536871438 = clampCursor_2634023286(self_2634023312, selection_2634023313.Field0);
    var colontmp__536871439 = clampCursor_2634023286(self_2634023312, selection_2634023313.Field1);
    result_2634023314 = nimCopy(result_2634023314, {Field0: nimCopy(null, colontmp__536871438, NTI2197815305), Field1: nimCopy(null, colontmp__536871439, NTI2197815305)}, NTI2197815307);

  return result_2634023314;

}

function clampAndMergeSelections_2634023319(self_2634023320, selections_2634023321) {
    
function HEX3Aanonymous_2634023323(s_2634023330) {
      var result_2634023333 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2634023333 = nimCopy(result_2634023333, clampSelection_2634023311(self_2634023320, s_2634023330), NTI2197815307);

      return result_2634023333;

    }

  var result_2634023322 = [];

    result_2634023322 = nimCopy(null, deduplicate_2634023356(map_2634023334(selections_2634023321, HEX3Aanonymous_2634023323), false), NTI2634023232);

  return result_2634023322;

}

function clampAndMergeSelections_2634023397(self_2634023398, selections_2634023399) {
  var result_2634023400 = [];

    result_2634023400 = nimCopy(null, clampAndMergeSelections_2634023319(self_2634023398.document, selections_2634023399), NTI2197815315);

  return result_2634023400;

}

function selectionsHEX3D_2634023651(self_2634023652, selections_2634023653) {
  BeforeRet: {
    if (HEX3DHEX3D_2634023654(self_2634023652.selectionsInternal, selections_2634023653)) {
    break BeforeRet;
    }
    
    addLast_2634023425(self_2634023652.selectionHistory, self_2634023652.selectionsInternal);
    if ((100 < len_2634023564(self_2634023652.selectionHistory))) {
    var _ = popFirst_2634023625(self_2634023652.selectionHistory);
    }
    
    self_2634023652.selectionsInternal = nimCopy(null, clampAndMergeSelections_2634023397(self_2634023652, selections_2634023653), NTI2197815315);
    if (((self_2634023652.selectionsInternal).length == 0)) {
    self_2634023652.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2197815789({Field0: 0, Field1: 0}), NTI2197815307)], NTI2634023412);
    }
    
    self_2634023652.dirty = true;
  };

  
}

function clampSelection_2634023812(self_2634023813) {
    selectionsHEX3D_2634023651(self_2634023813, clampAndMergeSelections_2634023397(self_2634023813, self_2634023813.selectionsInternal));
    self_2634023813.dirty = true;

  
}

function isNone_2634025368(self_2634025370) {
  var result_2634025371 = false;

    result_2634025371 = !(self_2634025370.has);

  return result_2634025371;

}

function clear_2634025418(t_2634025421) {
    Label1: {
      var i_2634025479 = 0;
      var colontmp__536871449 = 0;
      colontmp__536871449 = (t_2634025421.data).length;
      var i_536871450 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871450 < colontmp__536871449)) break Label3;
            i_2634025479 = i_536871450;
            t_2634025421.data[chckIndx(i_2634025479, 0, (t_2634025421.data).length - 1)].Field0 = 0;
            t_2634025421.data[chckIndx(i_2634025479, 0, (t_2634025421.data).length - 1)].Field1 = 0;
            t_2634025421.data[chckIndx(i_2634025479, 0, (t_2634025421.data).length - 1)].Field2 = nimCopy(null, [], NTI2634023143);
            i_536871450 = addInt(i_536871450, 1);
          }
      };
    };
    t_2634025421.counter = 0;

  
}

function findBounds_2684354563(text_2684354564, regex_2684354565, start_2684354566) {
  var result_2684354569 = {Field0: 0, Field1: 0};

  return result_2684354569;

}

function get_2634025979(self_2634025981) {
  var result_2634025982 = null;

  BeforeRet: {
    if (isNone_2634025368(self_2634025981)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634025982 = self_2634025981.val;
    break BeforeRet;
  };

  return result_2634025982;

}

function rawGet_2634026126(t_2634026129, key_2634026130, hc_2634026131, hc_2634026131_Idx) {
  var result_2634026132 = 0;

  BeforeRet: {
    hc_2634026131[hc_2634026131_Idx] = hash_1358954668(key_2634026130);
    if ((hc_2634026131[hc_2634026131_Idx] == 0)) {
    hc_2634026131[hc_2634026131_Idx] = 314159265;
    }
    
    if (((t_2634026129.data).length == 0)) {
    result_2634026132 = -1;
    break BeforeRet;
    }
    
    var h_2634026191 = (hc_2634026131[hc_2634026131_Idx] & (t_2634026129.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2634026129.data[chckIndx(h_2634026191, 0, (t_2634026129.data).length - 1)].Field0)) break Label2;
          if (((t_2634026129.data[chckIndx(h_2634026191, 0, (t_2634026129.data).length - 1)].Field0 == hc_2634026131[hc_2634026131_Idx]) && (t_2634026129.data[chckIndx(h_2634026191, 0, (t_2634026129.data).length - 1)].Field1 == key_2634026130))) {
          result_2634026132 = h_2634026191;
          break BeforeRet;
          }
          
          h_2634026191 = nextTry_1342177315(h_2634026191, (t_2634026129.data).length - 1);
        }
    };
    result_2634026132 = subInt(-1, h_2634026191);
  };

  return result_2634026132;

}

function mustRehash_2634026564(t_2634026566) {
  var result_2634026567 = false;

    if (!((t_2634026566.counter < (t_2634026566.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2634026567 = ((mulInt((t_2634026566.data).length, 2) < mulInt(t_2634026566.counter, 3)) || (subInt((t_2634026566.data).length, t_2634026566.counter) < 4));

  return result_2634026567;

}

function rawInsert_2634027113(t_2634027117, data_2634027118, data_2634027118_Idx, key_2634027119, val_2634027120, hc_2634027121, h_2634027122) {
    data_2634027118[data_2634027118_Idx][chckIndx(h_2634027122, 0, (data_2634027118[data_2634027118_Idx]).length - 1)].Field1 = key_2634027119;
    data_2634027118[data_2634027118_Idx][chckIndx(h_2634027122, 0, (data_2634027118[data_2634027118_Idx]).length - 1)].Field2 = nimCopy(null, val_2634027120, NTI2634023143);
    data_2634027118[data_2634027118_Idx][chckIndx(h_2634027122, 0, (data_2634027118[data_2634027118_Idx]).length - 1)].Field0 = hc_2634027121;

  
}

function enlarge_2634026734(t_2634026737) {
    var n_2634026740 = [];
    n_2634026740 = new Array(chckRange(mulInt((t_2634026737.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2634026737.data).length, 2), 0, 2147483647) ; ++i) { n_2634026740[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2634026737.data; t_2634026737.data = n_2634026740; n_2634026740 = Temporary1;    Label2: {
      var i_2634026809 = 0;
      var colontmp__536871455 = 0;
      colontmp__536871455 = (n_2634026740).length - 1;
      var res_536871456 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871456 <= colontmp__536871455)) break Label4;
            i_2634026809 = res_536871456;
            var eh_2634026883 = n_2634026740[chckIndx(i_2634026809, 0, (n_2634026740).length - 1)].Field0;
            if (isFilled_1342177312(eh_2634026883)) {
            var j_2634026887 = (eh_2634026883 & (t_2634026737.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2634026737.data[chckIndx(j_2634026887, 0, (t_2634026737.data).length - 1)].Field0)) break Label6;
                  j_2634026887 = nextTry_1342177315(j_2634026887, (t_2634026737.data).length - 1);
                }
            };
            rawInsert_2634027113(t_2634026737, t_2634026737, "data", n_2634026740[chckIndx(i_2634026809, 0, (n_2634026740).length - 1)].Field1, n_2634026740[chckIndx(i_2634026809, 0, (n_2634026740).length - 1)].Field2, eh_2634026883, j_2634026887);
            }
            
            res_536871456 = addInt(res_536871456, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2634027342(t_2634027345, key_2634027346, hc_2634027347) {
  var result_2634027348 = 0;

  BeforeRet: {
    if (((t_2634027345.data).length == 0)) {
    result_2634027348 = -1;
    break BeforeRet;
    }
    
    var h_2634027404 = (hc_2634027347 & (t_2634027345.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2634027345.data[chckIndx(h_2634027404, 0, (t_2634027345.data).length - 1)].Field0)) break Label2;
          if (((t_2634027345.data[chckIndx(h_2634027404, 0, (t_2634027345.data).length - 1)].Field0 == hc_2634027347) && (t_2634027345.data[chckIndx(h_2634027404, 0, (t_2634027345.data).length - 1)].Field1 == key_2634027346))) {
          result_2634027348 = h_2634027404;
          break BeforeRet;
          }
          
          h_2634027404 = nextTry_1342177315(h_2634027404, (t_2634027345.data).length - 1);
        }
    };
    result_2634027348 = subInt(-1, h_2634027404);
  };

  return result_2634027348;

}

function HEX5BHEX5DHEX3D_2634026061(t_2634026064, key_2634026065, val_2634026066) {
    if (((t_2634026064.data).length == 0)) {
    var correctSizeHEX60gensym79_2634026120 = slotsNeeded_1342177323(32);
    t_2634026064.counter = 0;
    t_2634026064.data = new Array(chckRange(correctSizeHEX60gensym79_2634026120, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym79_2634026120, 0, 2147483647) ; ++i) { t_2634026064.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2634026125 = [0];
    var index_2634026432 = rawGet_2634026126(t_2634026064, key_2634026065, hc_2634026125, 0);
    if ((0 <= index_2634026432)) {
    t_2634026064.data[chckIndx(index_2634026432, 0, (t_2634026064.data).length - 1)].Field2 = nimCopy(null, val_2634026066, NTI2634023143);
    }
    else {
      if (((t_2634026064.data).length == 0)) {
      var correctSizeHEX60gensym84_2634026559 = slotsNeeded_1342177323(32);
      t_2634026064.counter = 0;
      t_2634026064.data = new Array(chckRange(correctSizeHEX60gensym84_2634026559, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym84_2634026559, 0, 2147483647) ; ++i) { t_2634026064.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2634026564(t_2634026064)) {
      enlarge_2634026734(t_2634026064);
      index_2634026432 = rawGetKnownHC_2634027342(t_2634026064, key_2634026065, hc_2634026125[0]);
      }
      
      index_2634026432 = subInt(-1, index_2634026432);
      rawInsert_2634027113(t_2634026064, t_2634026064, "data", key_2634026065, val_2634026066, hc_2634026125[0], index_2634026432);
      t_2634026064.counter = addInt(t_2634026064.counter, 1);
    }
    

  
}

function del_2634027685(t_2634027688, key_2634027689) {
    var hc_2634027690 = [0];
    var i_2634027697 = rawGet_2634026126(t_2634027688, key_2634027689, hc_2634027690, 0);
    var mskHEX60gensym36_2634027701 = (t_2634027688.data).length - 1;
    if ((0 <= i_2634027697)) {
    t_2634027688.counter = subInt(t_2634027688.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2634027708 = i_2634027697;
            var rHEX60gensym36_2634027709 = jHEX60gensym36_2634027708;
            t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)].Field0 = 0;
            t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)].Field1 = 0;
            t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)].Field2 = nimCopy(null, [], NTI2634023143);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2634027697 = (addInt(i_2634027697, 1) & mskHEX60gensym36_2634027701);
                  if (isEmpty_1342177309(t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2634027709 = (t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)].Field0 & mskHEX60gensym36_2634027701);
                  if (!(((((rHEX60gensym36_2634027709 <= i_2634027697) && (jHEX60gensym36_2634027708 < rHEX60gensym36_2634027709)) || ((jHEX60gensym36_2634027708 < rHEX60gensym36_2634027709) && (i_2634027697 < jHEX60gensym36_2634027708))) || ((i_2634027697 < jHEX60gensym36_2634027708) && (rHEX60gensym36_2634027709 <= i_2634027697))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2634027688.data[chckIndx(jHEX60gensym36_2634027708, 0, (t_2634027688.data).length - 1)] = nimCopy(t_2634027688.data[chckIndx(jHEX60gensym36_2634027708, 0, (t_2634027688.data).length - 1)], t_2634027688.data[chckIndx(i_2634027697, 0, (t_2634027688.data).length - 1)], NTI2634023155);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2634025362(self_2634025363) {
  BeforeRet: {
    if (isNone_2634025368(self_2634025363.searchRegex)) {
    clear_2634025418(self_2634025363.searchResults);
    self_2634025363.dirty = true;
    break BeforeRet;
    }
    
    Label1: {
      var i_2634025959 = 0;
      var line_2634025960 = [];
      var i_536871445 = 0;
      var L_536871446 = (self_2634025363.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871445 < L_536871446)) break Label3;
            i_2634025959 = i_536871445;
            line_2634025960 = self_2634025363.document.lines[chckIndx(i_536871445, 0, (self_2634025363.document.lines).length - 1)];
            var selections_2634025965 = [];
            var start_2634025966 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2634025966 < (line_2634025960).length)) break Label5;
                  var bounds_2634026000 = findBounds_2684354563(line_2634025960, get_2634025979(self_2634025363.searchRegex), start_2634025966);
                  if ((bounds_2634026000.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2634025965.push({Field0: {Field0: i_2634025959, Field1: bounds_2634026000.Field0}, Field1: {Field0: i_2634025959, Field1: addInt(bounds_2634026000.Field1, 1)}});;
                  start_2634025966 = addInt(bounds_2634026000.Field1, 1);
                }
            };
            if ((0 < (selections_2634025965).length)) {
            HEX5BHEX5DHEX3D_2634026061(self_2634025363.searchResults, i_2634025959, selections_2634025965);
            }
            else {
            del_2634027685(self_2634025363.searchResults, i_2634025959);
            }
            
            i_536871445 = addInt(i_536871445, 1);
            if (!(((self_2634025363.document.lines).length == L_536871446))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    self_2634025363.dirty = true;
  };

  
}

function handleTextDocumentTextChanged_2634035833(self_2634035834) {
    clampSelection_2634023812(self_2634035834);
    updateSearchResults_2634025362(self_2634035834);
    self_2634035834.dirty = true;

  
}

function newTextEditor_2634035835(document_2634035836, ed_2634035837) {
    
function HEX3Aanonymous_2634035862(__2634035863) {
        handleTextDocumentTextChanged_2634035833(editor_2634035843);

      
    }

  var result_2634035838 = null;

  BeforeRet: {
    var editor_2634035843 = {eventHandler: null, document: document_2634035836, selectionsInternal: [nimCopy(null, toSelection_2197815789({Field0: 0, Field1: 0}), NTI2197815307)], m_type: NTI2634023118, editor: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false};
    init_2181038099(editor_2634035843);
    if (((editor_2634035843.document.lines).length == 0)) {
    editor_2634035843.document.lines = nimCopy(null, [[]], NTI1593835635);
    }
    
    injectDependencies_1325402171(editor_2634035843, ed_2634035837);
    var _ = subscribe_2634035865(document_2634035836.textChanged, HEX3Aanonymous_2634035862);
    result_2634035838 = editor_2634035843;
    break BeforeRet;
  };

  return result_2634035838;

}

function getModeConfig_2634028932(self_2634028933, mode_2634028934) {
  var result_2634028935 = null;

  BeforeRet: {
    result_2634028935 = getEventHandlerConfig_1325403449(self_2634028933.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2634028934 || []));
    break BeforeRet;
  };

  return result_2634028935;

}

function handleUnknownDocumentEditorAction_1325403241(self_1325403242, editor_1325403243, action_1325403244, args_1325403245) {
  var result_1325403246 = 0;

  BeforeRet: {
    result_1325403246 = 0;
    break BeforeRet;
  };

  return result_1325403246;

}

function insert_2634035640(x_2634035642, x_2634035642_Idx, item_2634035643, i_2634035644) {
    var it_2634035664 = null;
    x_2634035642[x_2634035642_Idx] = x_2634035642[x_2634035642_Idx] || []; x_2634035642[x_2634035642_Idx].splice(i_2634035644, 0, it_2634035664);
    x_2634035642[x_2634035642_Idx][chckIndx(i_2634035644, 0, (x_2634035642[x_2634035642_Idx]).length - 1)] = item_2634035643;

  
}

function newJString_1660944426(s_1660944427) {
  var result_1660944428 = null;

    result_1660944428 = {kind: 4, str: nimCopy(null, s_1660944427, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1660944428;

}

function toJson_2634028939(self_2634028940, opt_2634028941) {
  var result_2634028942 = null;

    result_2634028942 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_2634028942, [116,121,112,101], newJString_1660944426([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1660946335(result_2634028942, [105,100], newJInt_1660944472(self_2634028940.id));

  return result_2634028942;

}

function none_2634028836() {
  var result_2634028842 = ({val: null});

  return result_2634028842;

}

function rawGet_1325400318(t_1325400321, key_1325400322, hc_1325400323, hc_1325400323_Idx) {
  var result_1325400324 = 0;

  BeforeRet: {
    hc_1325400323[hc_1325400323_Idx] = hash_1358954668(key_1325400322);
    if ((hc_1325400323[hc_1325400323_Idx] == 0)) {
    hc_1325400323[hc_1325400323_Idx] = 314159265;
    }
    
    if (((t_1325400321.data).length == 0)) {
    result_1325400324 = -1;
    break BeforeRet;
    }
    
    var h_1325400378 = (hc_1325400323[hc_1325400323_Idx] & (t_1325400321.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325400321.data[chckIndx(h_1325400378, 0, (t_1325400321.data).length - 1)].Field0)) break Label2;
          if (((t_1325400321.data[chckIndx(h_1325400378, 0, (t_1325400321.data).length - 1)].Field0 == hc_1325400323[hc_1325400323_Idx]) && (t_1325400321.data[chckIndx(h_1325400378, 0, (t_1325400321.data).length - 1)].Field1 == key_1325400322))) {
          result_1325400324 = h_1325400378;
          break BeforeRet;
          }
          
          h_1325400378 = nextTry_1342177315(h_1325400378, (t_1325400321.data).length - 1);
        }
    };
    result_1325400324 = subInt(-1, h_1325400378);
  };

  return result_1325400324;

}

function hasKey_1325405004(t_1325405007, key_1325405008) {
  var result_1325405009 = false;

    var hc_1325405010 = [0];
    result_1325405009 = (0 <= rawGet_1325400318(t_1325405007, key_1325405008, hc_1325405010, 0));

  return result_1325405009;

}

function contains_1325404998(t_1325405001, key_1325405002) {
  var result_1325405003 = false;

  BeforeRet: {
    result_1325405003 = hasKey_1325405004(t_1325405001, key_1325405002);
    break BeforeRet;
  };

  return result_1325405003;

}

function some_1325405150(val_1325405152) {
  var result_1325405153 = ({val: null});

    if (!(!((val_1325405152 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1325405153.val = val_1325405152;

  return result_1325405153;

}

function HEX5BHEX5D_1325405070(t_1325405073, key_1325405074) {
  var result_1325405075 = null;
  var result_1325405075_Idx = 0;

    var hcHEX60gensym22_1325405076 = [0];
    var indexHEX60gensym22_1325405083 = rawGet_1325400318(t_1325405073, key_1325405074, hcHEX60gensym22_1325405076, 0);
    if ((0 <= indexHEX60gensym22_1325405083)) {
    result_1325405075 = t_1325405073.data[chckIndx(indexHEX60gensym22_1325405083, 0, (t_1325405073.data).length - 1)]; result_1325405075_Idx = "Field2";
    }
    else {
    raiseKeyError_1325405137(key_1325405074);
    }
    

  return [result_1325405075, result_1325405075_Idx];

}

function none_1325405166() {
  var result_1325405172 = ({val: null});

  return result_1325405172;

}

function getEditorForId_1325404948(self_1325404949, id_1325404950) {
    var Temporary1;

  var result_1325404955 = ({val: null});

  BeforeRet: {
    if (contains_1325404998(self_1325404949.editors, id_1325404950)) {
    result_1325404955 = nimCopy(result_1325404955, some_1325405150((Temporary1 = HEX5BHEX5D_1325405070(self_1325404949.editors, id_1325404950), Temporary1)[0][Temporary1[1]]), NTI1325402635);
    break BeforeRet;
    }
    
    if ((self_1325404949.commandLineTextEditor.id == id_1325404950)) {
    result_1325404955 = nimCopy(result_1325404955, some_1325405150(self_1325404949.commandLineTextEditor), NTI1325402635);
    break BeforeRet;
    }
    
    result_1325404955 = nimCopy(result_1325404955, none_1325405166(), NTI1325402635);
    break BeforeRet;
  };

  return result_1325404955;

}

function isSome_2634028850(self_2634028852) {
  var result_2634028853 = false;

    result_2634028853 = !((self_2634028852.val == null));

  return result_2634028853;

}

function isNone_2634028878(self_2634028880) {
  var result_2634028881 = false;

    result_2634028881 = (self_2634028880.val == null);

  return result_2634028881;

}

function get_2634028870(self_2634028872) {
  var result_2634028873 = null;

    if (isNone_2634028878(self_2634028872)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634028873 = self_2634028872["val"];

  return result_2634028873;

}

function some_2634028895(val_2634028897) {
  var result_2634028898 = ({val: null});

    if (!(!((val_2634028897 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2634028898.val = val_2634028897;

  return result_2634028898;

}

function getTextDocumentEditor_2634028826(wrapper_2634028827) {
      var Temporary1;

  var result_2634028832 = ({val: null});

  BeforeRet: {
    if ((gEditor_1325400204[0] == null)) {
    result_2634028832 = nimCopy(result_2634028832, none_2634028836(), NTI2634026335);
    break BeforeRet;
    }
    
      var oHEX60gensym102_2634028845 = getEditorForId_1325404948(gEditor_1325400204[0], wrapper_2634028827.id);
      if (!isSome_2634028850(oHEX60gensym102_2634028845)) Temporary1 = false; else {        var editor_2634028887 = get_2634028870(oHEX60gensym102_2634028845);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2634028887.m_type, NTI2634023118)) {
    result_2634028832 = nimCopy(result_2634028832, some_2634028895(editor_2634028887), NTI2634026335);
    break BeforeRet;
    }
    
    }
    
    result_2634028832 = nimCopy(result_2634028832, none_2634028836(), NTI2634026335);
    break BeforeRet;
  };

  return result_2634028832;

}

function isNone_2634029170(self_2634029172) {
  var result_2634029173 = false;

    result_2634029173 = (self_2634029172.val == null);

  return result_2634029173;

}

function get_2634029190(self_2634029192) {
  var result_2634029193 = null;

    if (isNone_2634029170(self_2634029192)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634029193 = self_2634029192["val"];

  return result_2634029193;

}

function setModeScript_2634029162(self_2634029163, mode_2634029164) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym113_2634029165 = getTextDocumentEditor_2634028826(self_2634029163);
      if (isNone_2634029170(rHEX60gensym113_2634029165)) {
      break BeforeRet;
      }
      
    };
    setMode_2634029095(get_2634029190(rHEX60gensym113_2634029165), mode_2634029164);
  };

  
}

function initFromJson_2634028976(dst_2634028978, dst_2634028978_Idx, jsonNode_2634028979, jsonPath_2634028980, jsonPath_2634028980_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1660946458(jsonNode_2634028979, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2634028980[jsonPath_2634028980_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet207[jsonNode_2634028979.kind] != undefined))) {
    var msgHEX60gensym107_2634028997 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1660949850(ConstSet208), nimCopy(null, jsonPath_2634028980[jsonPath_2634028980_Idx], NTI33554449), reprEnum(jsonNode_2634028979.kind, NTI1660944387)]);
    raiseException({message: nimCopy(null, msgHEX60gensym107_2634028997, NTI33554449), parent: null, m_type: NTI1728053256, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2634028979;
    if (ConstSet209[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    dst_2634028978[dst_2634028978_Idx] = Temporary1.num;

  
}

function to_2634028965(node_2634028968) {
  var result_2634028970 = [0];

    var jsonPath_2634028971 = [[]];
    result_2634028970[0] = 0;
    initFromJson_2634028976(result_2634028970, 0, node_2634028968, jsonPath_2634028971, 0);

  return result_2634028970[0];

}

function fromJson_2634028952(a_2634028954, a_2634028954_Idx, b_2634028955, opt_2634028956) {
    if (!(!(HEX3DHEX3D_1660946458(b_2634028955, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [105,110,116], Field1: b_2634028955}));
    }
    
    a_2634028954[a_2634028954_Idx] = to_2634028965(b_2634028955);

  
}

function jsonTo_2634028946(b_2634028948, opt_2634028950) {
  var result_2634028951 = [0];

    fromJson_2634028952(result_2634028951, 0, b_2634028948, opt_2634028950);

  return result_2634028951[0];

}

function fromJsonHook_2634028943(t_2634028944, jsonNode_2634028945) {
    t_2634028944.id = jsonTo_2634028946(HEX5BHEX5D_1660947469(jsonNode_2634028945, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2634029219(a_2634029221, b_2634029222, opt_2634029223) {
    if (!(!(HEX3DHEX3D_1660946458(b_2634029222, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2634029222}));
    }
    
    fromJsonHook_2634028943(a_2634029221, b_2634029222);

  
}

function jsonTo_2634029213(b_2634029215, opt_2634029217) {
  var result_2634029218 = [({id: 0})];

    fromJson_2634029219(result_2634029218[0], b_2634029215, opt_2634029217);

  return result_2634029218[0];

}

function setModeApi_2634029211(HEX3Atmp_2634029082) {
  var result_2634029212 = null;

    result_2634029212 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2634029162(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029082, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634029082, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym115_2634029235 = [115,101,116,77,111,100,101];
    var fmtRes_2634029240 = [mnewString(0)];
    fmtRes_2634029240[0].push.apply(fmtRes_2634029240[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029240, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym115_2634029235 || [],fmtRes_2634029240[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634029212;

}

function mode_2634029272(self_2634029273) {
  var result_2634029274 = [];

  BeforeRet: {
    result_2634029274 = nimCopy(null, self_2634029273.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2634029274;

}

function modeScript_2634029275(self_2634029276) {
  var result_2634029277 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym124_2634029278 = getTextDocumentEditor_2634028826(self_2634029276);
      if (isNone_2634029170(rHEX60gensym124_2634029278)) {
      break BeforeRet;
      }
      
    };
    result_2634029277 = nimCopy(null, mode_2634029272(get_2634029190(rHEX60gensym124_2634029278)), NTI33554449);
  };

  return result_2634029277;

}

function modeApi_2634029301(HEX3Atmp_2634029269) {
  var result_2634029302 = null;

  BeforeRet: {
    result_2634029302 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    result_2634029302 = toJson_1845494346(modeScript_2634029275(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029269, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym127_2634029312 = [109,111,100,101];
    var fmtRes_2634029317 = [mnewString(0)];
    fmtRes_2634029317[0].push.apply(fmtRes_2634029317[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029317, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym127_2634029312 || [],fmtRes_2634029317[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634029302;

}

function getContextWithMode_2634028476(self_2634028477, context_2634028478) {
  var result_2634029329 = [];

  BeforeRet: {
    result_2634029329 = nimCopy(null, (context_2634028478 || []).concat([46] || [],self_2634028477.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2634029329;

}

function getContextWithModeScript_2634029330(self_2634029331, context_2634029332) {
  var result_2634029333 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym131_2634029334 = getTextDocumentEditor_2634028826(self_2634029331);
      if (isNone_2634029170(rHEX60gensym131_2634029334)) {
      break BeforeRet;
      }
      
    };
    result_2634029333 = nimCopy(null, getContextWithMode_2634028476(get_2634029190(rHEX60gensym131_2634029334), context_2634029332), NTI33554449);
  };

  return result_2634029333;

}

function getContextWithModeApi_2634029357(HEX3Atmp_2634029323) {
  var result_2634029358 = null;

  BeforeRet: {
    result_2634029358 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2634029358 = toJson_1845494346(getContextWithModeScript_2634029330(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029323, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634029323, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym134_2634029373 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2634029378 = [mnewString(0)];
    fmtRes_2634029378[0].push.apply(fmtRes_2634029378[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029378, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym134_2634029373 || [],fmtRes_2634029378[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634029358;

}

function nimIdentNormalize_872415353(s_872415354) {
  var result_872415355 = [];

  BeforeRet: {
    result_872415355 = nimCopy(null, mnewString(chckRange((s_872415354).length, 0, 2147483647)), NTI33554449);
    if (((s_872415354).length == 0)) {
    break BeforeRet;
    }
    
    result_872415355[chckIndx(0, 0, (result_872415355).length - 1)] = s_872415354[chckIndx(0, 0, (s_872415354).length - 1)];
    var j_872415356 = 1;
    Label1: {
      var i_872415361 = 0;
      var colontmp__1845494270 = 0;
      colontmp__1845494270 = subInt((s_872415354).length, 1);
      var res_1845494271 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1845494271 <= colontmp__1845494270)) break Label3;
            i_872415361 = res_1845494271;
            if ((ConstSet210[s_872415354[chckIndx(i_872415361, 0, (s_872415354).length - 1)]] != undefined)) {
            result_872415355[chckIndx(j_872415356, 0, (result_872415355).length - 1)] = chckRange(addInt(s_872415354[chckIndx(i_872415361, 0, (s_872415354).length - 1)], 32), 0, 255);
            j_872415356 = addInt(j_872415356, 1);
            }
            else {
            if (!((s_872415354[chckIndx(i_872415361, 0, (s_872415354).length - 1)] == 95))) {
            result_872415355[chckIndx(j_872415356, 0, (result_872415355).length - 1)] = s_872415354[chckIndx(i_872415361, 0, (s_872415354).length - 1)];
            j_872415356 = addInt(j_872415356, 1);
            }
            }
            res_1845494271 = addInt(res_1845494271, 1);
          }
      };
    };
    if (!((j_872415356 == (s_872415354).length))) {
    if (result_872415355.length < chckRange(j_872415356, 0, 2147483647)) { for (var i = result_872415355.length; i < chckRange(j_872415356, 0, 2147483647); ++i) result_872415355.push(0); }
         else {result_872415355.length = chckRange(j_872415356, 0, 2147483647); };
    }
    
  };

  return result_872415355;

}

function parseEnum_2634028537(s_2634028539, default_2634028540) {
    var Temporary1;

  var result_2634028541 = 0;

    switch (toJSStr(nimIdentNormalize_872415353(s_2634028539))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2634028540;
      break;
    }
    result_2634028541 = Temporary1;

  return result_2634028541;

}

function getStr_1660944538(n_1660944539, default_1660944540) {
      var Temporary1;

  var result_1660944541 = [];

  BeforeRet: {
    if (((n_1660944539 == null) || !((n_1660944539.kind == 4)))) {
    result_1660944541 = nimCopy(null, default_1660944540, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1660944539;
      if (ConstSet211[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944541 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1660944541;

}

function getOption_2634028511(editor_2634028513, path_2634028514, default_2634028515) {
  var result_2634028521 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2634028513 == null)) {
      result_2634028521 = default_2634028515;
      break BeforeRet;
      }
      
      var nodeHEX60gensym98_2634028533 = HEX7BHEX7D_1660947748(editor_2634028513.options, nsuSplitString(path_2634028514, [46], -1));
      if ((nodeHEX60gensym98_2634028533 == null)) {
      result_2634028521 = default_2634028515;
      break BeforeRet;
      }
      
    };
    result_2634028521 = parseEnum_2634028537(getStr_1660944538(nodeHEX60gensym98_2634028533, []), default_2634028515);
    break BeforeRet;
  };

  return result_2634028521;

}

function selection_2634023404(self_2634023405) {
  var result_2634023406 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2634023406 = nimCopy(result_2634023406, self_2634023405.selectionsInternal[chckIndx((self_2634023405.selectionsInternal).length - 1, 0, (self_2634023405.selectionsInternal).length - 1)], NTI2197815307);

  return result_2634023406;

}

function getCursor_2634028507(self_2634028508, cursor_2634028509) {
  var result_2634028510 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2634028509) {
    case 0:
      var configCursor_2634028571 = getOption_2634028511(self_2634028508.editor, getContextWithMode_2634028476(self_2634028508, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2634028510 = nimCopy(result_2634028510, getCursor_2634028507(self_2634028508, configCursor_2634028571), NTI2197815305);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2634028510 = nimCopy(result_2634028510, selection_2634023404(self_2634028508).Field1, NTI2197815305);
      break BeforeRet;
      break;
    case 2:
      result_2634028510 = nimCopy(result_2634028510, selection_2634023404(self_2634028508).Field0, NTI2197815305);
      break BeforeRet;
      break;
    }
  };

  return result_2634028510;

}

function updateTargetColumn_2634029387(self_2634029388, cursor_2634029389) {
    self_2634029388.targetColumn = getCursor_2634028507(self_2634029388, cursor_2634029389).Field1;

  
}

function updateTargetColumnScript_2634029390(self_2634029391, cursor_2634029392) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym138_2634029393 = getTextDocumentEditor_2634028826(self_2634029391);
      if (isNone_2634029170(rHEX60gensym138_2634029393)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2634029387(get_2634029190(rHEX60gensym138_2634029393), cursor_2634029392);
  };

  
}

function getBiggestInt_1660944561(n_1660944562, default_1660944563) {
      var Temporary1;

  var result_1660944564 = 0;

  BeforeRet: {
    if (((n_1660944562 == null) || !((n_1660944562.kind == 2)))) {
    result_1660944564 = default_1660944563;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1660944562;
      if (ConstSet212[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944564 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1660944564;

}

function parseEnum_2634029441(s_2634029443) {
    var Temporary1;

  var result_2634029444 = 0;

    switch (toJSStr(nimIdentNormalize_872415353(s_2634029443))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2634029443 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2634029444 = Temporary1;

  return result_2634029444;

}

function spaces_872416366(n_872416367) {
  var result_872416368 = [];

    result_872416368 = nimCopy(null, nsuRepeatChar(32, n_872416367), NTI33554449);

  return result_872416368;

}

function indent_1660948767(s_1660948768, s_1660948768_Idx, i_1660948769) {
    s_1660948768[s_1660948768_Idx].push.apply(s_1660948768[s_1660948768_Idx], spaces_872416366(chckRange(i_1660948769, 0, 2147483647)));;

  
}

function nl_1660948775(s_1660948776, s_1660948776_Idx, ml_1660948777) {
    var Temporary1;

    if (ml_1660948777) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1660948776[s_1660948776_Idx].push.apply(s_1660948776[s_1660948776_Idx], Temporary1);;

  
}

function newIndent_1660948770(curr_1660948771, indent_1660948772, ml_1660948773) {
  var result_1660948774 = 0;

  BeforeRet: {
    if (ml_1660948773) {
    result_1660948774 = addInt(curr_1660948771, indent_1660948772);
    break BeforeRet;
    }
    else {
      result_1660948774 = indent_1660948772;
      break BeforeRet;
    }
    
  };

  return result_1660948774;

}

function toPretty_1660948827(result_1660948828, result_1660948828_Idx, node_1660948829, indent_1660948830, ml_1660948831, lstArr_1660948832, currIndent_1660948833) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1660948829.kind) {
    case 5:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
        var Temporary1 = node_1660948829;
        if (ConstSet213[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      if ((0 < len_1660946546(Temporary1.fields))) {
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [123]);;
      nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
      var i_1660948882 = 0;
      Label2: {
        var key_1660948887 = [];
        var val_1660948888 = null;
        var colontmp__536871483 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1660948829;
        if (ConstSet214[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1660944387)); }
        colontmp__536871483 = nimCopy(colontmp__536871483, Temporary3.fields, NTI1660944398);
        var L_536871484 = len_1660946546(colontmp__536871483);
        if ((0 < colontmp__536871483.counter)) {
        var h_536871485 = colontmp__536871483.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_536871485)) break Label5;
              var nxt_536871487 = colontmp__536871483.data[chckIndx(h_536871485, 0, (colontmp__536871483.data).length - 1)].Field1;
              if (isFilled_1342177312(colontmp__536871483.data[chckIndx(h_536871485, 0, (colontmp__536871483.data).length - 1)].Field0)) {
              key_1660948887 = colontmp__536871483.data[chckIndx(h_536871485, 0, (colontmp__536871483.data).length - 1)].Field2;
              val_1660948888 = colontmp__536871483.data[chckIndx(h_536871485, 0, (colontmp__536871483.data).length - 1)].Field3;
              if ((0 < i_1660948882)) {
              result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [44]);;
              nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
              }
              
              i_1660948882 = addInt(i_1660948882, 1);
              indent_1660948767(result_1660948828, result_1660948828_Idx, newIndent_1660948770(currIndent_1660948833, indent_1660948830, ml_1660948831));
              escapeJson_1660948799(key_1660948887, result_1660948828, result_1660948828_Idx);
              result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [58,32]);;
              toPretty_1660948827(result_1660948828, result_1660948828_Idx, val_1660948888, indent_1660948830, ml_1660948831, false, newIndent_1660948770(currIndent_1660948833, indent_1660948830, ml_1660948831));
              if (!((len_1660946546(colontmp__536871483) == L_536871484))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_536871485 = nxt_536871487;
            }
        };
        }
        
      };
      nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [125]);;
      }
      else {
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
      toUgly_1660948809(result_1660948828, result_1660948828_Idx, node_1660948829);
      break;
    case 2:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
      var Temporary6 = node_1660948829;
      if (ConstSet215[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1660944387)); }
      addInt_301990087(result_1660948828, result_1660948828_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
      var Temporary7 = node_1660948829;
      if (ConstSet216[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1660944387)); }
      addFloat_33557340(result_1660948828, result_1660948828_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
        var Temporary9 = node_1660948829;
        if (ConstSet217[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1660944387)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
        var Temporary10 = node_1660948829;
        if (ConstSet218[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1660944387)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [91]);;
      nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
      Label11: {
        var i_1660948908 = 0;
        var colontmp__536871489 = 0;
        var Temporary12 = node_1660948829;
        if (ConstSet219[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1660944387)); }
        colontmp__536871489 = subInt((Temporary12.elems).length, 1);
        var res_536871490 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_536871490 <= colontmp__536871489)) break Label14;
              i_1660948908 = res_536871490;
              if ((0 < i_1660948908)) {
              result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [44]);;
              nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
              }
              
              var Temporary15 = node_1660948829;
              if (ConstSet220[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1660944387)); }
              toPretty_1660948827(result_1660948828, result_1660948828_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1660948908, 0, (Temporary16).length - 1)], indent_1660948830, ml_1660948831, true, newIndent_1660948770(currIndent_1660948833, indent_1660948830, ml_1660948831));
              res_536871490 = addInt(res_536871490, 1);
            }
        };
      };
      nl_1660948775(result_1660948828, result_1660948828_Idx, ml_1660948831);
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [93]);;
      }
      else {
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1660948832) {
      indent_1660948767(result_1660948828, result_1660948828_Idx, currIndent_1660948833);
      }
      
      result_1660948828[result_1660948828_Idx].push.apply(result_1660948828[result_1660948828_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1660948909(node_1660948910, indent_1660948911) {
  var result_1660948912 = [[]];

    result_1660948912[0] = nimCopy(null, [], NTI33554449);
    toPretty_1660948827(result_1660948912, 0, node_1660948910, indent_1660948911, true, false, 0);

  return result_1660948912[0];

}

function fromJson_2634029429(a_2634029431, a_2634029431_Idx, b_2634029432, opt_2634029433) {
    if (!(!(HEX3DHEX3D_1660946458(b_2634029432, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2634029432}));
    }
    
    switch (b_2634029432.kind) {
    case 2:
      a_2634029431[a_2634029431_Idx] = chckRange(getBiggestInt_1660944561(b_2634029432, 0), 0, 4);
      break;
    case 4:
      a_2634029431[a_2634029431_Idx] = parseEnum_2634029441(getStr_1660944538(b_2634029432, []));
      break;
    default: 
      if (true) {
      var fmtRes_2634029469 = [mnewString(0)];
      fmtRes_2634029469[0].push.apply(fmtRes_2634029469[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_738197675(fmtRes_2634029469, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2634029469[0].push.apply(fmtRes_2634029469[0], [32,103,111,116,32]);;
      formatValue_738197675(fmtRes_2634029469, 0, pretty_1660948909(b_2634029432, 2), []);
      raiseJsonException_1845493929([102,97,108,115,101], fmtRes_2634029469[0]);
      }
      
      break;
    }

  
}

function jsonTo_2634029423(b_2634029425, opt_2634029427) {
  var result_2634029428 = [0];

    fromJson_2634029429(result_2634029428, 0, b_2634029425, opt_2634029427);

  return result_2634029428[0];

}

function updateTargetColumnApi_2634029416(HEX3Atmp_2634029384) {
  var result_2634029417 = null;

    result_2634029417 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2634029390(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029384, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634029384, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym140_2634029473 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2634029478 = [mnewString(0)];
    fmtRes_2634029478[0].push.apply(fmtRes_2634029478[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029478, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym140_2634029473 || [],fmtRes_2634029478[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634029417;

}

function clampSelection_2634023315(self_2634023316, selection_2634023317) {
  var result_2634023318 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2634023318 = nimCopy(result_2634023318, clampSelection_2634023311(self_2634023316.document, selection_2634023317), NTI2197815307);

  return result_2634023318;

}

function selectionHEX3D_2634023410(self_2634023411, selection_2634023412) {
  BeforeRet: {
    if ((((self_2634023411.selectionsInternal).length == 1) && HEX3DHEX3D_2197815359(self_2634023411.selectionsInternal[chckIndx(0, 0, (self_2634023411.selectionsInternal).length - 1)], selection_2634023412))) {
    break BeforeRet;
    }
    
    addLast_2634023425(self_2634023411.selectionHistory, self_2634023411.selectionsInternal);
    if ((100 < len_2634023564(self_2634023411.selectionHistory))) {
    var _ = popFirst_2634023625(self_2634023411.selectionHistory);
    }
    
    self_2634023411.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2634023315(self_2634023411, selection_2634023412), NTI2197815307)], NTI2634023412);
    self_2634023411.dirty = true;
  };

  
}

function invertSelection_2634029487(self_2634029488) {
    selectionHEX3D_2634023410(self_2634029488, {Field0: nimCopy(null, selection_2634023404(self_2634029488).Field1, NTI2197815305), Field1: nimCopy(null, selection_2634023404(self_2634029488).Field0, NTI2197815305)});

  
}

function invertSelectionScript_2634029489(self_2634029490) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym149_2634029491 = getTextDocumentEditor_2634028826(self_2634029490);
      if (isNone_2634029170(rHEX60gensym149_2634029491)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2634029487(get_2634029190(rHEX60gensym149_2634029491));
  };

  
}

function invertSelectionApi_2634029514(HEX3Atmp_2634029484) {
  var result_2634029515 = null;

    result_2634029515 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2634029489(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029484, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym151_2634029521 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2634029526 = [mnewString(0)];
    fmtRes_2634029526[0].push.apply(fmtRes_2634029526[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029526, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym151_2634029521 || [],fmtRes_2634029526[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634029515;

}

function toJson_2634029911(a_2634029913, opt_2634029914) {
  var result_2634029915 = null;

    result_2634029915 = HEX25_1660946211(a_2634029913);

  return result_2634029915;

}

function toJson_2634029898(a_2634029900, opt_2634029901) {
  var result_2634029902 = null;

    result_2634029902 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_2634029902, [108,105,110,101], toJson_2634029911(a_2634029900["Field0"], opt_2634029901));
    HEX5BHEX5DHEX3D_1660946335(result_2634029902, [99,111,108,117,109,110], toJson_2634029911(a_2634029900["Field1"], opt_2634029901));

  return result_2634029902;

}

function toJson_2634029885(a_2634029887, opt_2634029888) {
  var result_2634029889 = null;

    result_2634029889 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_2634029889, [102,105,114,115,116], toJson_2634029898(a_2634029887["Field0"], opt_2634029888));
    HEX5BHEX5DHEX3D_1660946335(result_2634029889, [108,97,115,116], toJson_2634029898(a_2634029887["Field1"], opt_2634029888));

  return result_2634029889;

}

function toJson_2634029873(a_2634029875, opt_2634029876) {
  var result_2634029877 = null;

    result_2634029877 = newJArray_1660944514();
    Label1: {
      var ai_2634029884 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871502 = 0;
      var L_536871503 = (a_2634029875).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871502 < L_536871503)) break Label3;
            ai_2634029884 = a_2634029875[chckIndx(i_536871502, 0, (a_2634029875).length - 1)];
            add_1660944622(result_2634029877, toJson_2634029885(ai_2634029884, opt_2634029876));
            i_536871502 = addInt(i_536871502, 1);
            if (!(((a_2634029875).length == L_536871503))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2634029877;

}

function HEX40_2634024571(a_2634024573) {
  var result_2634024574 = [];

    result_2634024574 = new Array(chckRange((a_2634024573).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2634024573).length, 0, 2147483647) ; ++i) { result_2634024574[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2634024589 = 0;
      var colontmp__536871525 = 0;
      colontmp__536871525 = subInt((a_2634024573).length, 1);
      var res_536871526 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871526 <= colontmp__536871525)) break Label3;
            i_2634024589 = res_536871526;
            result_2634024574[chckIndx(i_2634024589, 0, (result_2634024574).length - 1)] = nimCopy(result_2634024574[chckIndx(i_2634024589, 0, (result_2634024574).length - 1)], a_2634024573[chckIndx(i_2634024589, 0, (a_2634024573).length - 1)], NTI2197815307);
            res_536871526 = addInt(res_536871526, 1);
          }
      };
    };

  return result_2634024574;

}

function byteOffset_2634024551(self_2634024552, cursor_2634024553) {
  var result_2634024554 = 0;

    result_2634024554 = cursor_2634024553.Field1;
    Label1: {
      var i_2634024559 = 0;
      var i_536871529 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871529 < cursor_2634024553.Field0)) break Label3;
            i_2634024559 = i_536871529;
            result_2634024554 = addInt(result_2634024554, addInt((self_2634024552.lines[chckIndx(i_2634024559, 0, (self_2634024552.lines).length - 1)]).length, 1));
            i_536871529 = addInt(i_536871529, 1);
          }
      };
    };

  return result_2634024554;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2634024994(x_2634024996, x_2634024996_Idx, item_2634024997, i_2634024998) {
    var it_2634025018 = [];
    x_2634024996[x_2634024996_Idx] = x_2634024996[x_2634024996_Idx] || []; x_2634024996[x_2634024996_Idx].splice(i_2634024998, 0, it_2634025018);
    x_2634024996[x_2634024996_Idx][chckIndx(i_2634024998, 0, (x_2634024996[x_2634024996_Idx]).length - 1)] = nimCopy(null, item_2634024997, NTI33554449);

  
}

function delete_872416581(s_872416582, s_872416582_Idx, slice_872416584) {
    if (!((((slice_872416584.a < (s_872416582[s_872416582_Idx]).length) && (0 <= slice_872416584.a)) && (slice_872416584.b < (s_872416582[s_872416582_Idx]).length)))) {
    raiseException({message: HEX24_872416587({Field0: nimCopy(null, slice_872416584, NTI822083608), Field1: (s_872416582[s_872416582_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_872416584.a <= slice_872416584.b)) {
    var i_872416647 = slice_872416584.a;
    var j_872416648 = addInt(slice_872416584.b, 1);
    var newLen_872416649 = addInt(subInt((s_872416582[s_872416582_Idx]).length, j_872416648), i_872416647);
    Label1: {
        Label2: while (true) {
        if (!(i_872416647 < newLen_872416649)) break Label2;
          s_872416582[s_872416582_Idx][chckIndx(i_872416647, 0, (s_872416582[s_872416582_Idx]).length - 1)] = s_872416582[s_872416582_Idx][chckIndx(j_872416648, 0, (s_872416582[s_872416582_Idx]).length - 1)];
          i_872416647 = addInt(i_872416647, 1);
          j_872416648 = addInt(j_872416648, 1);
        }
    };
    if (s_872416582[s_872416582_Idx].length < chckRange(newLen_872416649, 0, 2147483647)) { for (var i = s_872416582[s_872416582_Idx].length; i < chckRange(newLen_872416649, 0, 2147483647); ++i) s_872416582[s_872416582_Idx].push(0); }
         else {s_872416582[s_872416582_Idx].length = chckRange(newLen_872416649, 0, 2147483647); };
    }
    

  
}

function add_2197815813(cursor_2197815814, selection_2197815815) {
  var result_2197815816 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2197815639(cursor_2197815814, selection_2197815815.Field0)) {
    result_2197815816 = nimCopy(result_2197815816, cursor_2197815814, NTI2197815305);
    break BeforeRet;
    }
    
    if ((selection_2197815815.Field0.Field0 == selection_2197815815.Field1.Field0)) {
    if ((cursor_2197815814.Field0 == selection_2197815815.Field0.Field0)) {
    var colontmp__536871537 = cursor_2197815814.Field0;
    var colontmp__536871538 = addInt(cursor_2197815814.Field1, subInt(selection_2197815815.Field1.Field1, selection_2197815815.Field0.Field1));
    result_2197815816 = nimCopy(result_2197815816, {Field0: colontmp__536871537, Field1: colontmp__536871538}, NTI2197815305);
    break BeforeRet;
    }
    else {
      result_2197815816 = nimCopy(result_2197815816, cursor_2197815814, NTI2197815305);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2197815814.Field0 == selection_2197815815.Field0.Field0)) {
    var colontmp__536871539 = selection_2197815815.Field1.Field0;
    var colontmp__536871540 = addInt(selection_2197815815.Field1.Field1, subInt(cursor_2197815814.Field1, selection_2197815815.Field0.Field1));
    result_2197815816 = nimCopy(result_2197815816, {Field0: colontmp__536871539, Field1: colontmp__536871540}, NTI2197815305);
    break BeforeRet;
    }
    else {
      var colontmp__536871541 = addInt(cursor_2197815814.Field0, subInt(selection_2197815815.Field1.Field0, selection_2197815815.Field0.Field0));
      var colontmp__536871542 = cursor_2197815814.Field1;
      result_2197815816 = nimCopy(result_2197815816, {Field0: colontmp__536871541, Field1: colontmp__536871542}, NTI2197815305);
      break BeforeRet;
    }
    }
  };

  return result_2197815816;

}

function add_2197815821(self_2197815822, other_2197815823) {
  var result_2197815824 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__536871535 = add_2197815813(self_2197815822.Field0, other_2197815823);
    var colontmp__536871536 = add_2197815813(self_2197815822.Field1, other_2197815823);
    result_2197815824 = nimCopy(result_2197815824, {Field0: nimCopy(null, colontmp__536871535, NTI2197815305), Field1: nimCopy(null, colontmp__536871536, NTI2197815305)}, NTI2197815307);
    break BeforeRet;
  };

  return result_2197815824;

}

function invoke_2634025077(event_2634025079, arg_2634025080) {
    Label1: {
      var h_2634025103 = {Field0: ({id: 0}), Field1: null};
      var i_536871545 = 0;
      var L_536871546 = (event_2634025079.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871545 < L_536871546)) break Label3;
            h_2634025103 = event_2634025079.handlers[chckIndx(i_536871545, 0, (event_2634025079.handlers).length - 1)];
            h_2634025103.Field1(arg_2634025080);
            i_536871545 = addInt(i_536871545, 1);
            if (!(((event_2634025079.handlers).length == L_536871546))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyTextChanged_2634024523(self_2634024524) {
    invoke_2634023868(self_2634024524.textChanged, self_2634024524);

  
}

function insert_2634024929(self_2634024930, selections_2634024931, oldSelection_2634024932, text_2634024933, notify_2634024934, record_2634024935, autoIndent_2634024936) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2634024937 = [];

    var newEmptyLines_2634024938 = [];
    result_2634024937 = nimCopy(null, clampAndMergeSelections_2634023319(self_2634024930, selections_2634024931), NTI2197815315);
    var undoOp_2634024946 = {kind: 2, children: [], oldSelection: HEX40_2634024571(oldSelection_2634024932), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2634024952 = 0;
      var selection_2634024953 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871521 = 0;
      var L_536871522 = (result_2634024937).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871521 < L_536871522)) break Label3;
            i_2634024952 = i_536871521;
            selection_2634024953 = nimCopy(selection_2634024953, result_2634024937[chckIndx(i_536871521, 0, (result_2634024937).length - 1)], NTI2197815307);
            var oldCursor_2634024954 = nimCopy(null, selection_2634024953.Field1, NTI2197815305);
            var cursor_2634024955 = nimCopy(null, selection_2634024953.Field1, NTI2197815305);
            var startByte_2634024956 = byteOffset_2634024551(self_2634024930, cursor_2634024955);
            var lineCounter_2634024957 = 0;
            if (self_2634024930.singleLine) {
            var text_2634024958 = nsuReplaceStr(text_2634024933, [10], [32]);
            if (((self_2634024930.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2634024958, NTI33554449);
            self_2634024930.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2634024930.lines, chckIndx(0, 0, (self_2634024930.lines).length - 1), text_2634024958, chckRange(cursor_2634024955.Field1, 0, 2147483647));
            }
            
            cursor_2634024955.Field1 = addInt(cursor_2634024955.Field1, (text_2634024958).length);
            }
            else {
              Label5: {
                var line_2634024970 = [];
                var first_536871510 = 0;
                var last_536871511 = 0;
                var eolpos_536871512 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_536871511 < (text_2634024933).length) && !((ConstSet221[text_2634024933[chckIndx(last_536871511, 0, (text_2634024933).length - 1)]] != undefined)))) break Label9;
                            last_536871511 = addInt(last_536871511, 1);
                          }
                      };
                      eolpos_536871512 = last_536871511;
                      if ((last_536871511 < (text_2634024933).length)) {
                      if ((text_2634024933[chckIndx(last_536871511, 0, (text_2634024933).length - 1)] == 10)) {
                      last_536871511 = addInt(last_536871511, 1);
                      }
                      else {
                      if ((text_2634024933[chckIndx(last_536871511, 0, (text_2634024933).length - 1)] == 13)) {
                      last_536871511 = addInt(last_536871511, 1);
                      if (((last_536871511 < (text_2634024933).length) && (text_2634024933[chckIndx(last_536871511, 0, (text_2634024933).length - 1)] == 10))) {
                      last_536871511 = addInt(last_536871511, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_536871511, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_536871512, 1);
                      }
                      
                      line_2634024970 = substr_33557821(text_2634024933, first_536871510, Temporary10);
                      try {
                      if ((0 < lineCounter_2634024957)) {
                      insert_2634024994(self_2634024930, "lines", HEX5BHEX5D_872416535(self_2634024930.lines[chckIndx(cursor_2634024955.Field0, 0, (self_2634024930.lines).length - 1)], HEX2EHEX2E_1056964704(cursor_2634024955.Field1, 1)), chckRange(addInt(cursor_2634024955.Field0, 1), 0, 2147483647));
                      newEmptyLines_2634024938.push(addInt(cursor_2634024955.Field0, 1));;
                      if ((cursor_2634024955.Field1 < lineLength_2634023272(self_2634024930, cursor_2634024955.Field0))) {
                      delete_872416581(self_2634024930.lines, chckIndx(cursor_2634024955.Field0, 0, (self_2634024930.lines).length - 1), HEX2EHEX2E_822083634(cursor_2634024955.Field1, subInt(lineLength_2634023272(self_2634024930, cursor_2634024955.Field0), 1)));
                      }
                      
                      var colontmp__536871508 = addInt(cursor_2634024955.Field0, 1);
                      var colontmp__536871509 = 0;
                      cursor_2634024955 = nimCopy(cursor_2634024955, {Field0: colontmp__536871508, Field1: colontmp__536871509}, NTI2197815305);
                      }
                      
                      if ((0 < (line_2634024970).length)) {
                      insert_33557745(self_2634024930.lines, chckIndx(cursor_2634024955.Field0, 0, (self_2634024930.lines).length - 1), line_2634024970, chckRange(cursor_2634024955.Field1, 0, 2147483647));
                      cursor_2634024955.Field1 = addInt(cursor_2634024955.Field1, (line_2634024970).length);
                      }
                      
                      if ((eolpos_536871512 == last_536871511)) {
                      break Label6;
                      }
                      
                      first_536871510 = last_536871511;
                      } finally {
                      lineCounter_2634024957 = addInt(lineCounter_2634024957, 1);
                      }
                    }
                };
              };
            }
            
            result_2634024937[chckIndx(i_2634024952, 0, (result_2634024937).length - 1)] = nimCopy(result_2634024937[chckIndx(i_2634024952, 0, (result_2634024937).length - 1)], toSelection_2197815789(cursor_2634024955), NTI2197815307);
            Label12: {
              var k_2634025045 = 0;
              var colontmp__536871516 = 0;
              var colontmp__536871517 = 0;
              colontmp__536871516 = addInt(i_2634024952, 1);
              colontmp__536871517 = (result_2634024937).length - 1;
              var res_536871518 = colontmp__536871516;
              Label13: {
                  Label14: while (true) {
                  if (!(res_536871518 <= colontmp__536871517)) break Label14;
                    k_2634025045 = res_536871518;
                    result_2634024937[chckIndx(k_2634025045, 0, (result_2634024937).length - 1)] = nimCopy(result_2634024937[chckIndx(k_2634025045, 0, (result_2634024937).length - 1)], add_2197815821(result_2634024937[chckIndx(k_2634025045, 0, (result_2634024937).length - 1)], {Field0: nimCopy(null, oldCursor_2634024954, NTI2197815305), Field1: nimCopy(null, cursor_2634024955, NTI2197815305)}), NTI2197815307);
                    res_536871518 = addInt(res_536871518, 1);
                  }
              };
            };
            self_2634024930.version = addInt(self_2634024930.version, 1);
            if (record_2634024935) {
            var Temporary15 = undoOp_2634024946;
            if (ConstSet222[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2634022915)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2634024954, NTI2197815305), Field1: nimCopy(null, cursor_2634024955, NTI2197815305)}, NTI2197815307), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2634024934) {
            invoke_2634025077(self_2634024930.textInserted, {Field0: self_2634024930, Field1: nimCopy(null, oldCursor_2634024954, NTI2197815305), Field2: nimCopy(null, text_2634024933, NTI33554449)});
            }
            
            i_536871521 = addInt(i_536871521, 1);
            if (!(((result_2634024937).length == L_536871522))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2634024934) {
    notifyTextChanged_2634024523(self_2634024930);
    }
    
      if (!record_2634024935) Temporary16 = false; else {        var Temporary17 = undoOp_2634024946;
        if (ConstSet223[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2634022915)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2634024930.undoOps.push(undoOp_2634024946);;
    self_2634024930.redoOps = nimCopy(null, [], NTI2634024038);
    }
    

  return result_2634024937;

}

function selections_2634023401(self_2634023402) {
  var result_2634023403 = [];

    result_2634023403 = nimCopy(null, self_2634023402.selectionsInternal, NTI2197815315);

  return result_2634023403;

}

function insert_2634029535(self_2634029536, selections_2634029537, text_2634029538, notify_2634029539, record_2634029540, autoIndent_2634029541) {
  var result_2634029542 = [];

  BeforeRet: {
    result_2634029542 = nimCopy(null, insert_2634024929(self_2634029536.document, selections_2634029537, selections_2634023401(self_2634029536), text_2634029538, notify_2634029539, record_2634029540, autoIndent_2634029541), NTI2634024267);
    break BeforeRet;
  };

  return result_2634029542;

}

function insertScript_2634029543(self_2634029544, selections_2634029545, text_2634029546, notify_2634029547, record_2634029548, autoIndent_2634029549) {
  var result_2634029550 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym159_2634029551 = getTextDocumentEditor_2634028826(self_2634029544);
      if (isNone_2634029170(rHEX60gensym159_2634029551)) {
      break BeforeRet;
      }
      
    };
    result_2634029550 = nimCopy(null, insert_2634029535(get_2634029190(rHEX60gensym159_2634029551), selections_2634029545, text_2634029546, notify_2634029547, record_2634029548, autoIndent_2634029549), NTI2634026873);
  };

  return result_2634029550;

}

function getElems_1660944607(n_1660944608, default_1660944613) {
      var Temporary1;

  var result_1660944614 = [];

  BeforeRet: {
    if (((n_1660944608 == null) || !((n_1660944608.kind == 6)))) {
    result_1660944614 = nimCopy(null, default_1660944613, NTI1660944520);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1660944608;
      if (ConstSet224[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944614 = nimCopy(null, Temporary1.elems, NTI1660944406);
      break BeforeRet;
    }
    
  };

  return result_1660944614;

}

function hasKey_1660947586(node_1660947587, key_1660947588) {
    var Temporary1;

  var result_1660947589 = false;

    if (!((node_1660947587.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1660947587;
    if (ConstSet225[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    result_1660947589 = hasKey_1660946970(Temporary1.fields, key_1660947588);

  return result_1660947589;

}

function fromJson_2634029696(a_2634029698, b_2634029699, opt_2634029700) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1660946458(b_2634029699, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [67,117,114,115,111,114], Field1: b_2634029699}));
    }
    
    if (!((b_2634029699.kind == 5))) {
    raiseJsonException_1845493929([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2634029699.kind, NTI1660944387));
    }
    
    var numHEX60gensym23_2634029726 = 0;
    var numMatchedHEX60gensym23_2634029727 = 0;
    numHEX60gensym23_2634029726 = addInt(numHEX60gensym23_2634029726, 1);
    if (hasKey_1660947586(b_2634029699, [108,105,110,101])) {
    numMatchedHEX60gensym23_2634029727 = addInt(numMatchedHEX60gensym23_2634029727, 1);
    fromJson_2634028952(a_2634029698, "Field0", HEX5BHEX5D_1660947469(b_2634029699, [108,105,110,101]), opt_2634029700);
    }
    else {
    if (opt_2634029700.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1845493929([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1660948909(b_2634029699, 2)]));
      }
      
    }
    }
    numHEX60gensym23_2634029726 = addInt(numHEX60gensym23_2634029726, 1);
    if (hasKey_1660947586(b_2634029699, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym23_2634029727 = addInt(numMatchedHEX60gensym23_2634029727, 1);
    fromJson_2634028952(a_2634029698, "Field1", HEX5BHEX5D_1660947469(b_2634029699, [99,111,108,117,109,110]), opt_2634029700);
    }
    else {
    if (opt_2634029700.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1845493929([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1660948909(b_2634029699, 2)]));
      }
      
    }
    }
    if ((opt_2634029700.allowExtraKeys && opt_2634029700.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2634029700.allowExtraKeys) {
    if (!((numHEX60gensym23_2634029726 == numMatchedHEX60gensym23_2634029727))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,51,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,51,96,32]);
    }
    
    Temporary1 = (numHEX60gensym23_2634029726 == numMatchedHEX60gensym23_2634029727);
    }
    else {
    if (opt_2634029700.allowMissingKeys) {
    Temporary1 = (len_1660947415(b_2634029699) == numMatchedHEX60gensym23_2634029727);
    }
    else {
    Temporary1 = ((len_1660947415(b_2634029699) == numHEX60gensym23_2634029726) && (numHEX60gensym23_2634029726 == numMatchedHEX60gensym23_2634029727));
    }
    }}
    var okHEX60gensym23_2634029788 = Temporary1;
    if (!(okHEX60gensym23_2634029788)) {
    raiseJsonException_1845493929([111,107,96,103,101,110,115,121,109,50,51], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1660947415(b_2634029699)), HEX24_369098760(numHEX60gensym23_2634029726), [67,117,114,115,111,114], pretty_1660948909(b_2634029699, 2)]));
    }
    

  
}

function fromJson_2634029642(a_2634029644, b_2634029645, opt_2634029646) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1660946458(b_2634029645, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2634029645}));
    }
    
    if (!((b_2634029645.kind == 5))) {
    raiseJsonException_1845493929([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2634029645.kind, NTI1660944387));
    }
    
    var numHEX60gensym23_2634029672 = 0;
    var numMatchedHEX60gensym23_2634029673 = 0;
    numHEX60gensym23_2634029672 = addInt(numHEX60gensym23_2634029672, 1);
    if (hasKey_1660947586(b_2634029645, [102,105,114,115,116])) {
    numMatchedHEX60gensym23_2634029673 = addInt(numMatchedHEX60gensym23_2634029673, 1);
    fromJson_2634029696(a_2634029644["Field0"], HEX5BHEX5D_1660947469(b_2634029645, [102,105,114,115,116]), opt_2634029646);
    }
    else {
    if (opt_2634029646.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1845493929([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1660948909(b_2634029645, 2)]));
      }
      
    }
    }
    numHEX60gensym23_2634029672 = addInt(numHEX60gensym23_2634029672, 1);
    if (hasKey_1660947586(b_2634029645, [108,97,115,116])) {
    numMatchedHEX60gensym23_2634029673 = addInt(numMatchedHEX60gensym23_2634029673, 1);
    fromJson_2634029696(a_2634029644["Field1"], HEX5BHEX5D_1660947469(b_2634029645, [108,97,115,116]), opt_2634029646);
    }
    else {
    if (opt_2634029646.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1845493929([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1660948909(b_2634029645, 2)]));
      }
      
    }
    }
    if ((opt_2634029646.allowExtraKeys && opt_2634029646.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2634029646.allowExtraKeys) {
    if (!((numHEX60gensym23_2634029672 == numMatchedHEX60gensym23_2634029673))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,51,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,51,96,32]);
    }
    
    Temporary1 = (numHEX60gensym23_2634029672 == numMatchedHEX60gensym23_2634029673);
    }
    else {
    if (opt_2634029646.allowMissingKeys) {
    Temporary1 = (len_1660947415(b_2634029645) == numMatchedHEX60gensym23_2634029673);
    }
    else {
    Temporary1 = ((len_1660947415(b_2634029645) == numHEX60gensym23_2634029672) && (numHEX60gensym23_2634029672 == numMatchedHEX60gensym23_2634029673));
    }
    }}
    var okHEX60gensym23_2634029826 = Temporary1;
    if (!(okHEX60gensym23_2634029826)) {
    raiseJsonException_1845493929([111,107,96,103,101,110,115,121,109,50,51], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1660947415(b_2634029645)), HEX24_369098760(numHEX60gensym23_2634029672), [83,101,108,101,99,116,105,111,110], pretty_1660948909(b_2634029645, 2)]));
    }
    

  
}

function fromJson_2634029587(a_2634029589, a_2634029589_Idx, b_2634029590, opt_2634029591) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1660946458(b_2634029590, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2634029590}));
    }
    
    if (a_2634029589[a_2634029589_Idx].length < (Temporary1 = chckRange(len_1660947415(b_2634029590), 0, 2147483647), Temporary1)) { for (var i = a_2634029589[a_2634029589_Idx].length ; i < Temporary1 ; ++i) a_2634029589[a_2634029589_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2634029589[a_2634029589_Idx].length = Temporary1; };
    Label2: {
      var i_2634029640 = 0;
      var val_2634029641 = null;
      var colontmp__536871549 = [];
      colontmp__536871549 = getElems_1660944607(b_2634029590, []);
      var i_536871551 = 0;
      var L_536871552 = (colontmp__536871549).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871551 < L_536871552)) break Label4;
            i_2634029640 = i_536871551;
            val_2634029641 = colontmp__536871549[chckIndx(i_536871551, 0, (colontmp__536871549).length - 1)];
            fromJson_2634029642(a_2634029589[a_2634029589_Idx][chckIndx(i_2634029640, 0, (a_2634029589[a_2634029589_Idx]).length - 1)], val_2634029641, opt_2634029591);
            i_536871551 = addInt(i_536871551, 1);
            if (!(((colontmp__536871549).length == L_536871552))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2634029581(b_2634029583, opt_2634029585) {
  var result_2634029586 = [[]];

    fromJson_2634029587(result_2634029586, 0, b_2634029583, opt_2634029585);

  return result_2634029586[0];

}

function insertApi_2634029574(HEX3Atmp_2634029532) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2634029575 = null;

  BeforeRet: {
    result_2634029575 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1660947415(HEX3Atmp_2634029532))) {
      Temporary6 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1660947415(HEX3Atmp_2634029532))) {
      Temporary8 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1660947415(HEX3Atmp_2634029532))) {
      Temporary10 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2634029575 = toJson_2634029873(insertScript_2634029543(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029581(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634029532, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym162_2634029929 = [105,110,115,101,114,116];
    var fmtRes_2634029934 = [mnewString(0)];
    fmtRes_2634029934[0].push.apply(fmtRes_2634029934[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634029934, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym162_2634029929 || [],fmtRes_2634029934[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634029575;

}

function isEmpty_2197815668(selection_2197815669) {
  var result_2197815670 = false;

    result_2197815670 = HEX3DHEX3D_2197815369(selection_2197815669.Field0, selection_2197815669.Field1);

  return result_2197815670;

}

function HEX3E_2197815627(a_2197815628, b_2197815629) {
  var result_2197815630 = false;

  BeforeRet: {
    if ((b_2197815629.Field0 < a_2197815628.Field0)) {
    result_2197815630 = true;
    break BeforeRet;
    }
    else {
    if (((a_2197815628.Field0 == b_2197815629.Field0) && (b_2197815629.Field1 < a_2197815628.Field1))) {
    result_2197815630 = true;
    break BeforeRet;
    }
    else {
      result_2197815630 = false;
      break BeforeRet;
    }
    }
  };

  return result_2197815630;

}

function isBackwards_2197815659(selection_2197815660) {
  var result_2197815661 = false;

  BeforeRet: {
    result_2197815661 = HEX3E_2197815627(selection_2197815660.Field0, selection_2197815660.Field1);
    break BeforeRet;
  };

  return result_2197815661;

}

function normalized_2197815662(selection_2197815663) {
  var result_2197815664 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2197815659(selection_2197815663)) {
    var colontmp__536871569 = nimCopy(null, selection_2197815663.Field1, NTI2197815305);
    var colontmp__536871570 = nimCopy(null, selection_2197815663.Field0, NTI2197815305);
    result_2197815664 = nimCopy(result_2197815664, {Field0: nimCopy(null, colontmp__536871569, NTI2197815305), Field1: nimCopy(null, colontmp__536871570, NTI2197815305)}, NTI2197815307);
    break BeforeRet;
    }
    else {
      result_2197815664 = nimCopy(result_2197815664, selection_2197815663, NTI2197815307);
      break BeforeRet;
    }
    
  };

  return result_2197815664;

}

function contentString_2634024061(self_2634024062, selection_2634024063) {
  var result_2634024064 = [];

  BeforeRet: {
    var colontmp__536871575 = normalized_2197815662(selection_2634024063);
    var first_2634024065 = nimCopy(null, colontmp__536871575["Field0"], NTI2197815305);
    var last_2634024066 = nimCopy(null, colontmp__536871575["Field1"], NTI2197815305);
    if ((first_2634024065.Field0 == last_2634024066.Field0)) {
    result_2634024064 = nimCopy(null, HEX5BHEX5D_872416507(self_2634024062.lines[chckIndx(first_2634024065.Field0, 0, (self_2634024062.lines).length - 1)], HEX2EHEX2E_822083634(first_2634024065.Field1, subInt(last_2634024066.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2634024064 = nimCopy(null, HEX5BHEX5D_872416535(self_2634024062.lines[chckIndx(first_2634024065.Field0, 0, (self_2634024062.lines).length - 1)], HEX2EHEX2E_1056964704(first_2634024065.Field1, 1)), NTI33554449);
    Label1: {
      var i_2634024113 = 0;
      var colontmp__536871572 = 0;
      colontmp__536871572 = addInt(first_2634024065.Field0, 1);
      var i_536871573 = colontmp__536871572;
      Label2: {
          Label3: while (true) {
          if (!(i_536871573 < last_2634024066.Field0)) break Label3;
            i_2634024113 = i_536871573;
            result_2634024064.push.apply(result_2634024064, [10]);;
            result_2634024064.push.apply(result_2634024064, self_2634024062.lines[chckIndx(i_2634024113, 0, (self_2634024062.lines).length - 1)]);;
            i_536871573 = addInt(i_536871573, 1);
          }
      };
    };
    result_2634024064.push.apply(result_2634024064, [10]);;
    result_2634024064.push.apply(result_2634024064, HEX5BHEX5D_872416507(self_2634024062.lines[chckIndx(last_2634024066.Field0, 0, (self_2634024062.lines).length - 1)], HEX2EHEX2E_822083634(0, subInt(last_2634024066.Field1, 1))));;
  };

  return result_2634024064;

}

function delete_2634024680(s_2634024682, s_2634024682_Idx, slice_2634024683) {
    if (!((((slice_2634024683.a < (s_2634024682[s_2634024682_Idx]).length) && (0 <= slice_2634024683.a)) && (slice_2634024683.b < (s_2634024682[s_2634024682_Idx]).length)))) {
    raiseException({message: HEX24_872416587({Field0: nimCopy(null, slice_2634024683, NTI822083608), Field1: (s_2634024682[s_2634024682_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2634024683.a <= slice_2634024683.b)) {
    var n_2634024730 = addInt(subInt(slice_2634024683.b, slice_2634024683.a), 1);
    var first_2634024731 = slice_2634024683.a;
    s_2634024682[s_2634024682_Idx].splice(first_2634024731, n_2634024730);
    }
    

  
}

function subtract_2197815797(cursor_2197815798, selection_2197815799) {
  var result_2197815800 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2197815639(cursor_2197815798, selection_2197815799.Field0)) {
    result_2197815800 = nimCopy(result_2197815800, cursor_2197815798, NTI2197815305);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2197815639(cursor_2197815798, selection_2197815799.Field1)) {
    result_2197815800 = nimCopy(result_2197815800, selection_2197815799.Field0, NTI2197815305);
    break BeforeRet;
    }
    
    if ((cursor_2197815798.Field0 == selection_2197815799.Field1.Field0)) {
    if ((selection_2197815799.Field0.Field0 == selection_2197815799.Field1.Field0)) {
    var colontmp__536871580 = cursor_2197815798.Field0;
    var colontmp__536871581 = subInt(cursor_2197815798.Field1, subInt(selection_2197815799.Field1.Field1, selection_2197815799.Field0.Field1));
    result_2197815800 = nimCopy(result_2197815800, {Field0: colontmp__536871580, Field1: colontmp__536871581}, NTI2197815305);
    break BeforeRet;
    }
    else {
      var colontmp__536871582 = selection_2197815799.Field0.Field0;
      var colontmp__536871583 = addInt(selection_2197815799.Field0.Field1, subInt(cursor_2197815798.Field1, selection_2197815799.Field1.Field1));
      result_2197815800 = nimCopy(result_2197815800, {Field0: colontmp__536871582, Field1: colontmp__536871583}, NTI2197815305);
      break BeforeRet;
    }
    
    }
    
    var colontmp__536871584 = subInt(cursor_2197815798.Field0, subInt(selection_2197815799.Field1.Field0, selection_2197815799.Field0.Field0));
    var colontmp__536871585 = cursor_2197815798.Field1;
    result_2197815800 = nimCopy(result_2197815800, {Field0: colontmp__536871584, Field1: colontmp__536871585}, NTI2197815305);
    break BeforeRet;
  };

  return result_2197815800;

}

function subtract_2197815809(self_2197815810, other_2197815811) {
  var result_2197815812 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__536871578 = subtract_2197815797(self_2197815810.Field0, other_2197815811);
    var colontmp__536871579 = subtract_2197815797(self_2197815810.Field1, other_2197815811);
    result_2197815812 = nimCopy(result_2197815812, {Field0: nimCopy(null, colontmp__536871578, NTI2197815305), Field1: nimCopy(null, colontmp__536871579, NTI2197815305)}, NTI2197815307);
    break BeforeRet;
  };

  return result_2197815812;

}

function invoke_2634024771(event_2634024773, arg_2634024774) {
    Label1: {
      var h_2634024797 = {Field0: ({id: 0}), Field1: null};
      var i_536871588 = 0;
      var L_536871589 = (event_2634024773.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871588 < L_536871589)) break Label3;
            h_2634024797 = event_2634024773.handlers[chckIndx(i_536871588, 0, (event_2634024773.handlers).length - 1)];
            h_2634024797.Field1(arg_2634024774);
            i_536871588 = addInt(i_536871588, 1);
            if (!(((event_2634024773.handlers).length == L_536871589))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2634024564(self_2634024565, selections_2634024566, oldSelection_2634024567, notify_2634024568, record_2634024569) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2634024570 = [];

    result_2634024570 = nimCopy(null, clampAndMergeSelections_2634023319(self_2634024565, selections_2634024566), NTI2197815315);
    var undoOp_2634024594 = {kind: 2, children: [], oldSelection: HEX40_2634024571(oldSelection_2634024567), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2634024627 = 0;
      var selection_2634024628 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871566 = 0;
      var L_536871567 = (result_2634024570).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871566 < L_536871567)) break Label3;
            i_2634024627 = i_536871566;
            selection_2634024628 = nimCopy(selection_2634024628, result_2634024570[chckIndx(i_536871566, 0, (result_2634024570).length - 1)], NTI2197815307);
            Label4: {
              if (isEmpty_2197815668(selection_2634024628)) {
              break Label4;
              }
              
              var selection_2634024629 = normalized_2197815662(selection_2634024628);
              var startByte_2634024630 = byteOffset_2634024551(self_2634024565, selection_2634024629.Field0);
              var endByte_2634024631 = byteOffset_2634024551(self_2634024565, selection_2634024629.Field1);
              var deletedText_2634024632 = contentString_2634024061(self_2634024565, selection_2634024629);
              var colontmp__536871576 = normalized_2197815662(selection_2634024629);
              var first_2634024633 = nimCopy(null, colontmp__536871576["Field0"], NTI2197815305);
              var last_2634024634 = nimCopy(null, colontmp__536871576["Field1"], NTI2197815305);
              if ((first_2634024633.Field0 == last_2634024634.Field0)) {
              delete_872416581(self_2634024565.lines, chckIndx(last_2634024634.Field0, 0, (self_2634024565.lines).length - 1), HEX2EHEX2E_822083634(first_2634024633.Field1, subInt(last_2634024634.Field1, 1)));
              }
              else {
                if ((first_2634024633.Field1 < lineLength_2634023272(self_2634024565, first_2634024633.Field0))) {
                delete_872416581(self_2634024565.lines, chckIndx(first_2634024633.Field0, 0, (self_2634024565.lines).length - 1), HEX2EHEX2E_822083634(first_2634024633.Field1, subInt(lineLength_2634023272(self_2634024565, first_2634024633.Field0), 1)));
                }
                
                self_2634024565.lines[chckIndx(first_2634024633.Field0, 0, (self_2634024565.lines).length - 1)].push.apply(self_2634024565.lines[chckIndx(first_2634024633.Field0, 0, (self_2634024565.lines).length - 1)], HEX5BHEX5D_872416535(self_2634024565.lines[chckIndx(last_2634024634.Field0, 0, (self_2634024565.lines).length - 1)], HEX2EHEX2E_1056964704(last_2634024634.Field1, 1)));;
                delete_2634024680(self_2634024565, "lines", HEX2EHEX2E_822083634(addInt(first_2634024633.Field0, 1), last_2634024634.Field0));
              }
              
              result_2634024570[chckIndx(i_2634024627, 0, (result_2634024570).length - 1)] = nimCopy(result_2634024570[chckIndx(i_2634024627, 0, (result_2634024570).length - 1)], toSelection_2197815789(selection_2634024629.Field0), NTI2197815307);
              Label5: {
                var k_2634024739 = 0;
                var colontmp__536871562 = 0;
                var colontmp__536871563 = 0;
                colontmp__536871562 = addInt(i_2634024627, 1);
                colontmp__536871563 = (result_2634024570).length - 1;
                var res_536871564 = colontmp__536871562;
                Label6: {
                    Label7: while (true) {
                    if (!(res_536871564 <= colontmp__536871563)) break Label7;
                      k_2634024739 = res_536871564;
                      result_2634024570[chckIndx(k_2634024739, 0, (result_2634024570).length - 1)] = nimCopy(result_2634024570[chckIndx(k_2634024739, 0, (result_2634024570).length - 1)], subtract_2197815809(result_2634024570[chckIndx(k_2634024739, 0, (result_2634024570).length - 1)], selection_2634024629), NTI2197815307);
                      res_536871564 = addInt(res_536871564, 1);
                    }
                };
              };
              self_2634024565.version = addInt(self_2634024565.version, 1);
              if (record_2634024569) {
              var Temporary8 = undoOp_2634024594;
              if (ConstSet226[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2634022915)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2634024629.Field0, NTI2197815305), text: nimCopy(null, deletedText_2634024632, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2634024568) {
              invoke_2634024771(self_2634024565.textDeleted, {Field0: self_2634024565, Field1: nimCopy(null, selection_2634024629, NTI2197815307)});
              }
              
            };
            i_536871566 = addInt(i_536871566, 1);
            if (!(((result_2634024570).length == L_536871567))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2634024568) {
    notifyTextChanged_2634024523(self_2634024565);
    }
    
      if (!record_2634024569) Temporary9 = false; else {        var Temporary10 = undoOp_2634024594;
        if (ConstSet227[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2634022915)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2634024565.undoOps.push(undoOp_2634024594);;
    self_2634024565.redoOps = nimCopy(null, [], NTI2634024038);
    }
    

  return result_2634024570;

}

function delete_2634029943(self_2634029944, selections_2634029945, notify_2634029946, record_2634029947) {
  var result_2634029948 = [];

  BeforeRet: {
    result_2634029948 = nimCopy(null, delete_2634024564(self_2634029944.document, selections_2634029945, selections_2634023401(self_2634029944), notify_2634029946, record_2634029947), NTI2634024009);
    break BeforeRet;
  };

  return result_2634029948;

}

function deleteScript_2634029949(self_2634029950, selections_2634029951, notify_2634029952, record_2634029953) {
  var result_2634029954 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym189_2634029955 = getTextDocumentEditor_2634028826(self_2634029950);
      if (isNone_2634029170(rHEX60gensym189_2634029955)) {
      break BeforeRet;
      }
      
    };
    result_2634029954 = nimCopy(null, delete_2634029943(get_2634029190(rHEX60gensym189_2634029955), selections_2634029951, notify_2634029952, record_2634029953), NTI2634027358);
  };

  return result_2634029954;

}

function deleteApi_2634029978(HEX3Atmp_2634029940) {
      var Temporary5;
      var Temporary7;

  var result_2634029979 = null;

  BeforeRet: {
    result_2634029979 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634029940))) {
      Temporary5 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634029940, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634029940))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634029940, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2634029979 = toJson_2634029873(deleteScript_2634029949(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634029940, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029581(HEX5BHEX5D_1660947548(HEX3Atmp_2634029940, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym192_2634030004 = [100,101,108,101,116,101];
    var fmtRes_2634030009 = [mnewString(0)];
    fmtRes_2634030009[0].push.apply(fmtRes_2634030009[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030009, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym192_2634030004 || [],fmtRes_2634030009[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634029979;

}

function popLast_2634030129(deq_2634030131) {
    var Temporary1;

  var result_2634030132 = [];

    if ((deq_2634030131.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2634030131.count = subInt(deq_2634030131.count, 1);
    deq_2634030131.tail = (subInt(deq_2634030131.tail, 1) & deq_2634030131.mask);
    Temporary1 = deq_2634030131.data[chckIndx(deq_2634030131.tail, 0, (deq_2634030131.data).length - 1)];
    deq_2634030131.data[chckIndx(deq_2634030131.tail, 0, (deq_2634030131.data).length - 1)] = genericReset(deq_2634030131.data[chckIndx(deq_2634030131.tail, 0, (deq_2634030131.data).length - 1)], NTI2197815315);
    result_2634030132 = nimCopy(null, Temporary1, NTI2197815315);

  return result_2634030132;

}

function addFirst_2634030148(deq_2634030150, item_2634030151) {
    expandIfNeeded_2634023434(deq_2634030150);
    deq_2634030150.count = addInt(deq_2634030150.count, 1);
    deq_2634030150.head = (subInt(deq_2634030150.head, 1) & deq_2634030150.mask);
    deq_2634030150.data[chckIndx(deq_2634030150.head, 0, (deq_2634030150.data).length - 1)] = nimCopy(null, item_2634030151, NTI2197815315);

  
}

function totalLineHeight_2332033177(self_2332033178) {
  var result_2332033179 = 0.0;

    result_2332033179 = (lineHeight_2332033170(self_2332033178) + lineDistance_2332033165(self_2332033178));

  return result_2332033179;

}

function getFloat_1660944572(n_1660944573, default_1660944574) {
      var Temporary1;
      var Temporary2;

  var result_1660944575 = 0.0;

  BeforeRet: {
    if ((n_1660944573 == null)) {
    result_1660944575 = default_1660944574;
    break BeforeRet;
    }
    
    switch (n_1660944573.kind) {
    case 3:
      var Temporary1 = n_1660944573;
      if (ConstSet228[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944575 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1660944573;
      if (ConstSet229[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
      result_1660944575 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1660944575 = default_1660944574;
      break BeforeRet;
      break;
    }
  };

  return result_1660944575;

}

function getOption_2634028431(editor_2634028433, path_2634028434, default_2634028435) {
  var result_2634028441 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2634028433 == null)) {
      result_2634028441 = default_2634028435;
      break BeforeRet;
      }
      
      var nodeHEX60gensym95_2634028454 = HEX7BHEX7D_1660947748(editor_2634028433.options, nsuSplitString(path_2634028434, [46], -1));
      if ((nodeHEX60gensym95_2634028454 == null)) {
      result_2634028441 = default_2634028435;
      break BeforeRet;
      }
      
    };
    result_2634028441 = getFloat_1660944572(nodeHEX60gensym95_2634028454, default_2634028435);
    break BeforeRet;
  };

  return result_2634028441;

}

function clamp_2466250905(x_2466250907, a_2466250908, b_2466250909) {
  var result_2466250910 = 0.0;

  BeforeRet: {
    if ((x_2466250907 < a_2466250908)) {
    result_2466250910 = a_2466250908;
    break BeforeRet;
    }
    
    if ((b_2466250909 < x_2466250907)) {
    result_2466250910 = b_2466250909;
    break BeforeRet;
    }
    
    result_2466250910 = x_2466250907;
    break BeforeRet;
  };

  return result_2466250910;

}

function scrollToCursor_2634028423(self_2634028424, cursor_2634028425, keepVerticalOffset_2634028426) {
    var Temporary1;

    var targetLine_2634028427 = cursor_2634028425.Field0;
    if (!((self_2634028424.editor.platform == null))) {
    Temporary1 = totalLineHeight_2332033177(self_2634028424.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2332033170(self_2634028424.editor.platform) + getOption_2634028431(self_2634028424.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2634028458 = Temporary1;
    if (keepVerticalOffset_2634028426) {
    var currentLineY_2634028459 = ((subInt(selection_2634023404(self_2634028424).Field1.Field0, self_2634028424.previousBaseIndex) * totalLineHeight_2634028458) + self_2634028424.scrollOffset);
    self_2634028424.previousBaseIndex = targetLine_2634028427;
    self_2634028424.scrollOffset = currentLineY_2634028459;
    }
    else {
      var targetLineY_2634028460 = ((subInt(targetLine_2634028427, self_2634028424.previousBaseIndex) * totalLineHeight_2634028458) + self_2634028424.scrollOffset);
      var margin_2634028475 = clamp_2466250905(getOption_2634028431(self_2634028424.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2634028424.lastContentBounds.h * 0.5) - (totalLineHeight_2634028458 * 0.5)));
      if ((targetLineY_2634028460 < margin_2634028475)) {
      self_2634028424.scrollOffset = margin_2634028475;
      self_2634028424.previousBaseIndex = targetLine_2634028427;
      }
      else {
      if (((self_2634028424.lastContentBounds.h - margin_2634028475) < (targetLineY_2634028460 + totalLineHeight_2634028458))) {
      self_2634028424.scrollOffset = ((self_2634028424.lastContentBounds.h - margin_2634028475) - totalLineHeight_2634028458);
      self_2634028424.previousBaseIndex = targetLine_2634028427;
      }
      }
    }
    
    self_2634028424.dirty = true;

  
}

function selectPrev_2634030018(self_2634030019) {
    if ((0 < len_2634023564(self_2634030019.selectionHistory))) {
    var selection_2634030142 = popLast_2634030129(self_2634030019.selectionHistory);
    addFirst_2634030148(self_2634030019.selectionHistory, selections_2634023401(self_2634030019));
    self_2634030019.selectionsInternal = nimCopy(null, selection_2634030142, NTI2197815315);
    }
    
    scrollToCursor_2634028423(self_2634030019, selection_2634023404(self_2634030019).Field1, false);

  
}

function selectPrevScript_2634030165(self_2634030166) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym197_2634030167 = getTextDocumentEditor_2634028826(self_2634030166);
      if (isNone_2634029170(rHEX60gensym197_2634030167)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2634030018(get_2634029190(rHEX60gensym197_2634030167));
  };

  
}

function selectPrevApi_2634030190(HEX3Atmp_2634030015) {
  var result_2634030191 = null;

    result_2634030191 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2634030165(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030015, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym199_2634030197 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2634030202 = [mnewString(0)];
    fmtRes_2634030202[0].push.apply(fmtRes_2634030202[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030202, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym199_2634030197 || [],fmtRes_2634030202[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030191;

}

function selectNext_2634030211(self_2634030212) {
    if ((0 < len_2634023564(self_2634030212.selectionHistory))) {
    var selection_2634030325 = popFirst_2634023625(self_2634030212.selectionHistory);
    addLast_2634023425(self_2634030212.selectionHistory, selections_2634023401(self_2634030212));
    self_2634030212.selectionsInternal = nimCopy(null, selection_2634030325, NTI2197815315);
    }
    
    scrollToCursor_2634028423(self_2634030212, selection_2634023404(self_2634030212).Field1, false);

  
}

function selectNextScript_2634030335(self_2634030336) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym205_2634030337 = getTextDocumentEditor_2634028826(self_2634030336);
      if (isNone_2634029170(rHEX60gensym205_2634030337)) {
      break BeforeRet;
      }
      
    };
    selectNext_2634030211(get_2634029190(rHEX60gensym205_2634030337));
  };

  
}

function selectNextApi_2634030360(HEX3Atmp_2634030208) {
  var result_2634030361 = null;

    result_2634030361 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2634030335(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030208, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym207_2634030367 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2634030372 = [mnewString(0)];
    fmtRes_2634030372[0].push.apply(fmtRes_2634030372[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030372, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym207_2634030367 || [],fmtRes_2634030372[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030361;

}

function re_2684354575(text_2684354576) {
  var result_2684354577 = ({});

  return result_2684354577;

}

function matchLen_2684354570(text_2684354571, regex_2684354572, start_2684354573) {
  var result_2684354574 = 0;

  return result_2684354574;

}

function selectInside_2634030381(self_2634030382, cursor_2634030383) {
    var regex_2634030384 = re_2684354575([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2634030385 = cursor_2634030383.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2634030385) && (matchLen_2684354570(self_2634030382.document.lines[chckIndx(cursor_2634030383.Field0, 0, (self_2634030382.document.lines).length - 1)], regex_2634030384, subInt(first_2634030385, 1)) == 1))) break Label2;
          first_2634030385 = subInt(first_2634030385, 1);
        }
    };
    var last_2634030390 = cursor_2634030383.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2634030390 < (self_2634030382.document.lines[chckIndx(cursor_2634030383.Field0, 0, (self_2634030382.document.lines).length - 1)]).length) && (matchLen_2684354570(self_2634030382.document.lines[chckIndx(cursor_2634030383.Field0, 0, (self_2634030382.document.lines).length - 1)], regex_2634030384, last_2634030390) == 1))) break Label4;
          last_2634030390 = addInt(last_2634030390, 1);
        }
    };
    selectionHEX3D_2634023410(self_2634030382, {Field0: {Field0: cursor_2634030383.Field0, Field1: first_2634030385}, Field1: {Field0: cursor_2634030383.Field0, Field1: last_2634030390}});

  
}

function selectInsideScript_2634030404(self_2634030405, cursor_2634030406) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym212_2634030407 = getTextDocumentEditor_2634028826(self_2634030405);
      if (isNone_2634029170(rHEX60gensym212_2634030407)) {
      break BeforeRet;
      }
      
    };
    selectInside_2634030381(get_2634029190(rHEX60gensym212_2634030407), cursor_2634030406);
  };

  
}

function jsonTo_2634030437(b_2634030439, opt_2634030441) {
  var result_2634030442 = [{Field0: 0, Field1: 0}];

    fromJson_2634029696(result_2634030442[0], b_2634030439, opt_2634030441);

  return result_2634030442[0];

}

function selectInsideApi_2634030430(HEX3Atmp_2634030378) {
  var result_2634030431 = null;

    result_2634030431 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2634030404(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030378, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030437(HEX5BHEX5D_1660947548(HEX3Atmp_2634030378, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym214_2634030448 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2634030453 = [mnewString(0)];
    fmtRes_2634030453[0].push.apply(fmtRes_2634030453[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030453, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym214_2634030448 || [],fmtRes_2634030453[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030431;

}

function selectInsideCurrent_2634030462(self_2634030463) {
    selectInside_2634030381(self_2634030463, selection_2634023404(self_2634030463).Field1);

  
}

function selectInsideCurrentScript_2634030464(self_2634030465) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym218_2634030466 = getTextDocumentEditor_2634028826(self_2634030465);
      if (isNone_2634029170(rHEX60gensym218_2634030466)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2634030462(get_2634029190(rHEX60gensym218_2634030466));
  };

  
}

function selectInsideCurrentApi_2634030489(HEX3Atmp_2634030459) {
  var result_2634030490 = null;

    result_2634030490 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2634030464(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030459, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym220_2634030496 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2634030501 = [mnewString(0)];
    fmtRes_2634030501[0].push.apply(fmtRes_2634030501[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030501, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym220_2634030496 || [],fmtRes_2634030501[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030490;

}

function lineLength_2634023279(self_2634023280, line_2634023281) {
  var result_2634023282 = 0;

  BeforeRet: {
    if ((line_2634023281 < (self_2634023280.document.lines).length)) {
    result_2634023282 = (self_2634023280.document.lines[chckIndx(line_2634023281, 0, (self_2634023280.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2634023282 = 0;
    break BeforeRet;
  };

  return result_2634023282;

}

function selectLine_2634030510(self_2634030511, line_2634030512) {
    selectionHEX3D_2634023410(self_2634030511, {Field0: {Field0: line_2634030512, Field1: 0}, Field1: {Field0: line_2634030512, Field1: lineLength_2634023279(self_2634030511, line_2634030512)}});

  
}

function selectLineScript_2634030513(self_2634030514, line_2634030515) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym224_2634030516 = getTextDocumentEditor_2634028826(self_2634030514);
      if (isNone_2634029170(rHEX60gensym224_2634030516)) {
      break BeforeRet;
      }
      
    };
    selectLine_2634030510(get_2634029190(rHEX60gensym224_2634030516), line_2634030515);
  };

  
}

function selectLineApi_2634030539(HEX3Atmp_2634030507) {
  var result_2634030540 = null;

    result_2634030540 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2634030513(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030507, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634030507, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym226_2634030551 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2634030556 = [mnewString(0)];
    fmtRes_2634030556[0].push.apply(fmtRes_2634030556[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030556, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym226_2634030551 || [],fmtRes_2634030556[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030540;

}

function selectLineCurrent_2634030565(self_2634030566) {
    selectLine_2634030510(self_2634030566, selection_2634023404(self_2634030566).Field1.Field0);

  
}

function selectLineCurrentScript_2634030567(self_2634030568) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym229_2634030569 = getTextDocumentEditor_2634028826(self_2634030568);
      if (isNone_2634029170(rHEX60gensym229_2634030569)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2634030565(get_2634029190(rHEX60gensym229_2634030569));
  };

  
}

function selectLineCurrentApi_2634030592(HEX3Atmp_2634030562) {
  var result_2634030593 = null;

    result_2634030593 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2634030567(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030562, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym231_2634030599 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2634030604 = [mnewString(0)];
    fmtRes_2634030604[0].push.apply(fmtRes_2634030604[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030604, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym231_2634030599 || [],fmtRes_2634030604[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030593;

}

function selectParentTs_2634030613(self_2634030614, selection_2634030615) {
  
}

function selectParentTsScript_2634030616(self_2634030617, selection_2634030618) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym235_2634030619 = getTextDocumentEditor_2634028826(self_2634030617);
      if (isNone_2634029170(rHEX60gensym235_2634030619)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2634030613(get_2634029190(rHEX60gensym235_2634030619), selection_2634030618);
  };

  
}

function jsonTo_2634030649(b_2634030651, opt_2634030653) {
  var result_2634030654 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2634029642(result_2634030654[0], b_2634030651, opt_2634030653);

  return result_2634030654[0];

}

function selectParentTsApi_2634030642(HEX3Atmp_2634030610) {
  var result_2634030643 = null;

    result_2634030643 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2634030616(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030610, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030649(HEX5BHEX5D_1660947548(HEX3Atmp_2634030610, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym237_2634030660 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2634030665 = [mnewString(0)];
    fmtRes_2634030665[0].push.apply(fmtRes_2634030665[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030665, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym237_2634030660 || [],fmtRes_2634030665[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030643;

}

function selectParentCurrentTs_2634030674(self_2634030675) {
    selectParentTs_2634030613(self_2634030675, selection_2634023404(self_2634030675));

  
}

function selectParentCurrentTsScript_2634030676(self_2634030677) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym240_2634030678 = getTextDocumentEditor_2634028826(self_2634030677);
      if (isNone_2634029170(rHEX60gensym240_2634030678)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2634030674(get_2634029190(rHEX60gensym240_2634030678));
  };

  
}

function selectParentCurrentTsApi_2634030701(HEX3Atmp_2634030671) {
  var result_2634030702 = null;

    result_2634030702 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2634030676(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030671, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym242_2634030708 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2634030713 = [mnewString(0)];
    fmtRes_2634030713[0].push.apply(fmtRes_2634030713[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030713, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym242_2634030708 || [],fmtRes_2634030713[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030702;

}

function newSeq_2197815442(len_2197815444) {
  var result_2197815445 = [];

    result_2197815445 = new Array(len_2197815444); for (var i = 0 ; i < len_2197815444 ; ++i) { result_2197815445[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2197815445;

}

function HEX2A_1040187400(x_1040187401, order_1040187402) {
  var result_1040187403 = 0;

    var y_1040187408 = subInt(order_1040187402, 1);
    result_1040187403 = subInt((x_1040187401 ^ y_1040187408), y_1040187408);

  return result_1040187403;

}

function mergeAlt_2197815471(a_2197815473, b_2197815474, lo_2197815475, m_2197815476, hi_2197815477, cmp_2197815480, order_2197815481) {
  BeforeRet: {
    if ((HEX2A_1040187400(cmp_2197815480(a_2197815473[chckIndx(m_2197815476, 0, (a_2197815473).length - 1)], a_2197815473[chckIndx(addInt(m_2197815476, 1), 0, (a_2197815473).length - 1)]), order_2197815481) <= 0)) {
    break BeforeRet;
    }
    
    var j_2197815482 = lo_2197815475;
    if (!((j_2197815482 <= m_2197815476))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2197815488 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2197815482 <= m_2197815476)) break Label2;
          b_2197815474[chckIndx(bb_2197815488, 0, (b_2197815474).length - 1)] = nimCopy(b_2197815474[chckIndx(bb_2197815488, 0, (b_2197815474).length - 1)], a_2197815473[chckIndx(j_2197815482, 0, (a_2197815473).length - 1)], NTI2197815307);
          bb_2197815488 = addInt(bb_2197815488, 1);
          j_2197815482 = addInt(j_2197815482, 1);
        }
    };
    var i_2197815499 = 0;
    var k_2197815500 = lo_2197815475;
    Label3: {
        Label4: while (true) {
        if (!((k_2197815500 < j_2197815482) && (j_2197815482 <= hi_2197815477))) break Label4;
          if ((HEX2A_1040187400(cmp_2197815480(b_2197815474[chckIndx(i_2197815499, 0, (b_2197815474).length - 1)], a_2197815473[chckIndx(j_2197815482, 0, (a_2197815473).length - 1)]), order_2197815481) <= 0)) {
          a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)] = nimCopy(a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)], b_2197815474[chckIndx(i_2197815499, 0, (b_2197815474).length - 1)], NTI2197815307);
          i_2197815499 = addInt(i_2197815499, 1);
          }
          else {
            a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)] = nimCopy(a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)], a_2197815473[chckIndx(j_2197815482, 0, (a_2197815473).length - 1)], NTI2197815307);
            j_2197815482 = addInt(j_2197815482, 1);
          }
          
          k_2197815500 = addInt(k_2197815500, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2197815500 < j_2197815482)) break Label6;
          a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)] = nimCopy(a_2197815473[chckIndx(k_2197815500, 0, (a_2197815473).length - 1)], b_2197815474[chckIndx(i_2197815499, 0, (b_2197815474).length - 1)], NTI2197815307);
          k_2197815500 = addInt(k_2197815500, 1);
          i_2197815499 = addInt(i_2197815499, 1);
        }
    };
  };

  
}

function sort_2197815430(a_2197815432, cmp_2197815435, order_2197815436) {
    var n_2197815441 = (a_2197815432).length;
    var b_2197815468 = newSeq_2197815442(chckRange(divInt(n_2197815441, 2), 0, 2147483647));
    var s_2197815469 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2197815469 < n_2197815441)) break Label2;
          var m_2197815470 = subInt(subInt(n_2197815441, 1), s_2197815469);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2197815470)) break Label4;
                mergeAlt_2197815471(a_2197815432, b_2197815468, nimMax(addInt(subInt(m_2197815470, s_2197815469), 1), 0), m_2197815470, addInt(m_2197815470, s_2197815469), cmp_2197815435, order_2197815436);
                m_2197815470 = subInt(m_2197815470, mulInt(s_2197815469, 2));
              }
          };
          s_2197815469 = mulInt(s_2197815469, 2);
        }
    };

  
}

function sorted_2197815572(a_2197815574, cmp_2197815577, order_2197815578) {
  var result_2197815579 = [];

    result_2197815579 = nimCopy(null, newSeq_2197815442(chckRange((a_2197815574).length, 0, 2147483647)), NTI2197815355);
    Label1: {
      var i_2197815593 = 0;
      var colontmp__536871617 = 0;
      colontmp__536871617 = (a_2197815574).length - 1;
      var res_536871618 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871618 <= colontmp__536871617)) break Label3;
            i_2197815593 = res_536871618;
            result_2197815579[chckIndx(i_2197815593, 0, (result_2197815579).length - 1)] = nimCopy(result_2197815579[chckIndx(i_2197815593, 0, (result_2197815579).length - 1)], a_2197815574[chckIndx(i_2197815593, 0, (a_2197815574).length - 1)], NTI2197815307);
            res_536871618 = addInt(res_536871618, 1);
          }
      };
    };
    sort_2197815430(result_2197815579, cmp_2197815577, order_2197815578);

  return result_2197815579;

}

function HEX3C_2197815402(x_2197815404, y_2197815405) {
  var result_2197815406 = false;

  BeforeRet: {
    var c_2197815416 = cmp_33557727(x_2197815404["Field0"], y_2197815405["Field0"]);
    if ((c_2197815416 < 0)) {
    result_2197815406 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815416)) {
    result_2197815406 = false;
    break BeforeRet;
    }
    
    var c_2197815421 = cmp_33557727(x_2197815404["Field1"], y_2197815405["Field1"]);
    if ((c_2197815421 < 0)) {
    result_2197815406 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815421)) {
    result_2197815406 = false;
    break BeforeRet;
    }
    
    result_2197815406 = false;
    break BeforeRet;
  };

  return result_2197815406;

}

function cmp_2197815393(x_2197815395, y_2197815396) {
  var result_2197815397 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2197815369(x_2197815395, y_2197815396)) {
    result_2197815397 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2197815402(x_2197815395, y_2197815396)) {
    result_2197815397 = -1;
    break BeforeRet;
    }
    
    result_2197815397 = 1;
    break BeforeRet;
  };

  return result_2197815397;

}

function HEX3C_2197815383(x_2197815385, y_2197815386) {
  var result_2197815387 = false;

  BeforeRet: {
    var c_2197815422 = cmp_2197815393(x_2197815385["Field0"], y_2197815386["Field0"]);
    if ((c_2197815422 < 0)) {
    result_2197815387 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815422)) {
    result_2197815387 = false;
    break BeforeRet;
    }
    
    var c_2197815427 = cmp_2197815393(x_2197815385["Field1"], y_2197815386["Field1"]);
    if ((c_2197815427 < 0)) {
    result_2197815387 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2197815427)) {
    result_2197815387 = false;
    break BeforeRet;
    }
    
    result_2197815387 = false;
    break BeforeRet;
  };

  return result_2197815387;

}

function cmp_2197815354(x_2197815356, y_2197815357) {
  var result_2197815358 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2197815359(x_2197815356, y_2197815357)) {
    result_2197815358 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2197815383(x_2197815356, y_2197815357)) {
    result_2197815358 = -1;
    break BeforeRet;
    }
    
    result_2197815358 = 1;
    break BeforeRet;
  };

  return result_2197815358;

}

function sorted_2197815561(a_2197815563, order_2197815564) {
  var result_2197815565 = [];

    result_2197815565 = nimCopy(null, sorted_2197815572(a_2197815563, cmp_2197815354, order_2197815564), NTI2197815435);

  return result_2197815565;

}

function normalized_2197815558(self_2197815559) {
  var result_2197815560 = [];

  BeforeRet: {
    result_2197815560 = nimCopy(null, sorted_2197815561(self_2197815559, 1), NTI2197815426);
    break BeforeRet;
  };

  return result_2197815560;

}

function edit_2634025138(self_2634025139, selections_2634025140, oldSelection_2634025141, text_2634025142, notify_2634025143) {
    
function HEX3Aanonymous_2634025145(s_2634025153) {
      var result_2634025156 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2634025156 = nimCopy(result_2634025156, normalized_2197815662(s_2634025153), NTI2197815307);

      return result_2634025156;

    }

  var result_2634025144 = [];

    var selections_2634025164 = map_2634023334(selections_2634025140, HEX3Aanonymous_2634025145);
    result_2634025144 = nimCopy(null, delete_2634024564(self_2634025139, selections_2634025164, oldSelection_2634025141, false, true), NTI2634024009);
    result_2634025144 = nimCopy(null, insert_2634024929(self_2634025139, result_2634025144, oldSelection_2634025141, text_2634025142, true, true, true), NTI2634024267);

  return result_2634025144;

}

function none_2634024484() {
  var result_2634024490 = ({val: null});

  return result_2634024490;

}
async function getLanguageServer_2634034670(self_2634034671) {
  var result_2634034675 = null;

  BeforeRet: {
    result_2634034675 = none_2634024484();
    break BeforeRet;
  };

  return result_2634034675;

}

function isNone_2634024466(self_2634024468) {
  var result_2634024469 = false;

    result_2634024469 = (self_2634024468.val == null);

  return result_2634024469;

}

function isSome_2634024438(self_2634024440) {
  var result_2634024441 = false;

    result_2634024441 = !((self_2634024440.val == null));

  return result_2634024441;

}

function get_2634034745(self_2634034747) {
  var result_2634034748 = null;

    if (isNone_2634024466(self_2634034747)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634034748 = self_2634034747["val"];

  return result_2634034748;

}
async function getCompletionsAsync_2634030718(self_2634030719) {
  var result_2634034837 = null;

  BeforeRet: {
    var languageServer_2634034847 = (await getLanguageServer_2634034670(self_2634030719));
    if (isNone_2634024466(languageServer_2634034847)) {
    result_2634034837 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2634024438(languageServer_2634034847)) {
    var completions_2634034881 = (await getCompletions_2667577396(get_2634034745(languageServer_2634034847), self_2634030719.document.languageId, self_2634030719.document.filename, selection_2634023404(self_2634030719).Field1));
    self_2634030719.completions = nimCopy(null, completions_2634034881, NTI2667577384);
    self_2634030719.selectedCompletion = clamp_1694499551(self_2634030719.selectedCompletion, 0, (self_2634030719.completions).length - 1);
    if (((self_2634030719.completions).length == 0)) {
    self_2634030719.showCompletions = false;
    }
    else {
      self_2634030719.showCompletions = true;
    }
    
    self_2634030719.dirty = true;
    }
    
    result_2634034837 = undefined;
    break BeforeRet;
  };

  return result_2634034837;

}

function insertText_2634030725(self_2634030726, text_2634030727) {
  BeforeRet: {
    if ((self_2634030726.document.singleLine && eqStrings(text_2634030727, [10]))) {
    break BeforeRet;
    }
    
    var selections_2634030728 = normalized_2197815558(selections_2634023401(self_2634030726));
    selectionsHEX3D_2634023651(self_2634030726, edit_2634025138(self_2634030726.document, selections_2634023401(self_2634030726), selections_2634023401(self_2634030726), text_2634030727, true));
    updateTargetColumn_2634029387(self_2634030726, 3);
    if ((eqStrings(text_2634030727, [46]) || eqStrings(text_2634030727, [44]))) {
    self_2634030726.showCompletions = true;
    var _ = getCompletionsAsync_2634030718(self_2634030726);
    }
    else {
    if (self_2634030726.showCompletions) {
    var _ = getCompletionsAsync_2634030718(self_2634030726);
    }
    }
  };

  
}

function insertTextScript_2634030729(self_2634030730, text_2634030731) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym247_2634030732 = getTextDocumentEditor_2634028826(self_2634030730);
      if (isNone_2634029170(rHEX60gensym247_2634030732)) {
      break BeforeRet;
      }
      
    };
    insertText_2634030725(get_2634029190(rHEX60gensym247_2634030732), text_2634030731);
  };

  
}

function insertTextApi_2634030755(HEX3Atmp_2634030722) {
  var result_2634030756 = null;

    result_2634030756 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2634030729(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030722, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634030722, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym249_2634030767 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2634030772 = [mnewString(0)];
    fmtRes_2634030772[0].push.apply(fmtRes_2634030772[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030772, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym249_2634030767 || [],fmtRes_2634030772[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030756;

}

function none_2634025233() {
  var result_2634025240 = ({val: [], has: false});

  return result_2634025240;

}

function pop_2634025244(s_2634025246, s_2634025246_Idx) {
  var result_2634025247 = null;

    var L_2634025251 = subInt((s_2634025246[s_2634025246_Idx]).length, 1);
    result_2634025247 = s_2634025246[s_2634025246_Idx][chckIndx(L_2634025251, 0, (s_2634025246[s_2634025246_Idx]).length - 1)];
    if (s_2634025246[s_2634025246_Idx].length < chckRange(L_2634025251, 0, 2147483647)) { for (var i = s_2634025246[s_2634025246_Idx].length ; i < chckRange(L_2634025251, 0, 2147483647) ; ++i) s_2634025246[s_2634025246_Idx].push(null); }
               else { s_2634025246[s_2634025246_Idx].length = chckRange(L_2634025251, 0, 2147483647); };

  return result_2634025247;

}

function some_2634025257(val_2634025259) {
  var result_2634025260 = ({val: [], has: false});

    result_2634025260.has = true;
    result_2634025260.val = nimCopy(null, val_2634025259, NTI2634024447);

  return result_2634025260;

}

function doUndo_2634025174(document_2634025175, op_2634025176, oldSelection_2634025177, useOldSelection_2634025178, redoOps_2634025179, redoOps_2634025179_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2634025180 = [];

    switch (op_2634025176.kind) {
    case 0:
      var Temporary1 = op_2634025176;
      if (ConstSet230[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2634022915)); }
      var text_2634025181 = contentString_2634024061(document_2634025175, Temporary1.selection);
      var Temporary2 = op_2634025176;
      if (ConstSet231[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2634022915)); }
      result_2634025180 = nimCopy(null, delete_2634024564(document_2634025175, [nimCopy(null, Temporary2.selection, NTI2197815307)], op_2634025176.oldSelection, true, false), NTI2634024009);
      var Temporary3 = op_2634025176;
      if (ConstSet232[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2634022915)); }
      redoOps_2634025179[redoOps_2634025179_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2197815305), text: nimCopy(null, text_2634025181, NTI33554449), oldSelection: HEX40_2634024571(oldSelection_2634025177), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2634025176;
      if (ConstSet233[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2634022915)); }
      var Temporary5 = op_2634025176;
      if (ConstSet234[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2634022915)); }
      var selections_2634025189 = insert_2634024929(document_2634025175, [nimCopy(null, toSelection_2197815789(Temporary4.cursor), NTI2197815307)], op_2634025176.oldSelection, Temporary5.text, true, false, false);
      result_2634025180 = nimCopy(null, selections_2634025189, NTI2634024267);
      var Temporary6 = op_2634025176;
      if (ConstSet235[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2634022915)); }
      redoOps_2634025179[redoOps_2634025179_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2197815305), Field1: nimCopy(null, selections_2634025189[chckIndx(0, 0, (selections_2634025189).length - 1)].Field1, NTI2197815305)}, NTI2197815307), oldSelection: HEX40_2634024571(oldSelection_2634025177), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2634025180 = nimCopy(null, op_2634025176.oldSelection, NTI2634022919);
      var redoOp_2634025200 = {kind: 2, oldSelection: HEX40_2634024571(oldSelection_2634025177), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2634025209 = 0;
        var colontmp__536871628 = 0;
        var Temporary8 = op_2634025176;
        if (ConstSet236[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2634022915)); }
        colontmp__536871628 = (Temporary8.children).length - 1;
        var res_536871629 = colontmp__536871628;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_536871629)) break Label10;
              i_2634025209 = res_536871629;
              var Temporary11 = op_2634025176;
              if (ConstSet237[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2634022915)); }
              var Temporary13 = redoOp_2634025200;
              if (ConstSet238[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2634022915)); }
              var _ = doUndo_2634025174(document_2634025175, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2634025209, 0, (Temporary12).length - 1)], oldSelection_2634025177, useOldSelection_2634025178, Temporary13, "children");
              res_536871629 = subInt(res_536871629, 1);
            }
        };
      };
      redoOps_2634025179[redoOps_2634025179_Idx].push(redoOp_2634025200);;
      break;
    }
    if (useOldSelection_2634025178) {
    result_2634025180 = nimCopy(null, op_2634025176.oldSelection, NTI2634022919);
    }
    

  return result_2634025180;

}

function undo_2634025223(document_2634025224, oldSelection_2634025225, useOldSelection_2634025226) {
  var result_2634025232 = ({val: [], has: false});

  BeforeRet: {
    result_2634025232 = nimCopy(result_2634025232, none_2634025233(), NTI2634024522);
    if (((document_2634025224.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2634025256 = pop_2634025244(document_2634025224, "undoOps");
    result_2634025232 = nimCopy(result_2634025232, some_2634025257(doUndo_2634025174(document_2634025224, op_2634025256, oldSelection_2634025225, useOldSelection_2634025226, document_2634025224, "redoOps")), NTI2634024522);
    break BeforeRet;
  };

  return result_2634025232;

}

function isSome_2634030790(self_2634030792) {
  var result_2634030793 = false;

    result_2634030793 = self_2634030792.has;

  return result_2634030793;

}

function isNone_2634030815(self_2634030817) {
  var result_2634030818 = false;

    result_2634030818 = !(self_2634030817.has);

  return result_2634030818;

}

function get_2634030807(self_2634030809) {
  var result_2634030810 = [];

    if (isNone_2634030815(self_2634030809)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634030810 = self_2634030809["val"];

  return result_2634030810;

}

function undo_2634030781(self_2634030782) {
      var Temporary1;

      var oHEX60gensym257_2634030785 = undo_2634025223(self_2634030782.document, selections_2634023401(self_2634030782), true);
      if (!isSome_2634030790(oHEX60gensym257_2634030785)) Temporary1 = false; else {        var selections_2634030830 = nimCopy(null, get_2634030807(oHEX60gensym257_2634030785), NTI2634024517);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2634023651(self_2634030782, selections_2634030830);
    }
    

  
}

function undoScript_2634030831(self_2634030832) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym254_2634030833 = getTextDocumentEditor_2634028826(self_2634030832);
      if (isNone_2634029170(rHEX60gensym254_2634030833)) {
      break BeforeRet;
      }
      
    };
    undo_2634030781(get_2634029190(rHEX60gensym254_2634030833));
  };

  
}

function undoApi_2634030856(HEX3Atmp_2634030778) {
  var result_2634030857 = null;

    result_2634030857 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2634030831(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030778, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym256_2634030863 = [117,110,100,111];
    var fmtRes_2634030868 = [mnewString(0)];
    fmtRes_2634030868[0].push.apply(fmtRes_2634030868[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030868, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym256_2634030863 || [],fmtRes_2634030868[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030857;

}

function doRedo_2634025271(document_2634025272, op_2634025273, oldSelection_2634025274, useOldSelection_2634025275, undoOps_2634025276, undoOps_2634025276_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2634025277 = [];

    switch (op_2634025273.kind) {
    case 0:
      var Temporary1 = op_2634025273;
      if (ConstSet239[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2634022915)); }
      var text_2634025278 = contentString_2634024061(document_2634025272, Temporary1.selection);
      var Temporary2 = op_2634025273;
      if (ConstSet240[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2634022915)); }
      result_2634025277 = nimCopy(null, delete_2634024564(document_2634025272, [nimCopy(null, Temporary2.selection, NTI2197815307)], op_2634025273.oldSelection, true, false), NTI2634024009);
      var Temporary3 = op_2634025273;
      if (ConstSet241[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2634022915)); }
      undoOps_2634025276[undoOps_2634025276_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2197815305), text: nimCopy(null, text_2634025278, NTI33554449), oldSelection: HEX40_2634024571(oldSelection_2634025274), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2634025273;
      if (ConstSet242[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2634022915)); }
      var Temporary5 = op_2634025273;
      if (ConstSet243[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2634022915)); }
      var Temporary6 = op_2634025273;
      if (ConstSet244[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2634022915)); }
      result_2634025277 = nimCopy(null, insert_2634024929(document_2634025272, [nimCopy(null, toSelection_2197815789(Temporary4.cursor), NTI2197815307)], [nimCopy(null, toSelection_2197815789(Temporary5.cursor), NTI2197815307)], Temporary6.text, true, false, false), NTI2634024267);
      var Temporary7 = op_2634025273;
      if (ConstSet245[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2634022915)); }
      undoOps_2634025276[undoOps_2634025276_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2197815305), Field1: nimCopy(null, result_2634025277[chckIndx(0, 0, (result_2634025277).length - 1)].Field1, NTI2197815305)}, NTI2197815307), oldSelection: HEX40_2634024571(oldSelection_2634025274), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2634025277 = nimCopy(null, op_2634025273.oldSelection, NTI2634022919);
      var undoOp_2634025296 = {kind: 2, oldSelection: HEX40_2634024571(oldSelection_2634025274), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2634025305 = 0;
        var colontmp__536871634 = 0;
        var Temporary9 = op_2634025273;
        if (ConstSet246[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2634022915)); }
        colontmp__536871634 = (Temporary9.children).length - 1;
        var res_536871635 = colontmp__536871634;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_536871635)) break Label11;
              i_2634025305 = res_536871635;
              var Temporary12 = op_2634025273;
              if (ConstSet247[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2634022915)); }
              var Temporary14 = undoOp_2634025296;
              if (ConstSet248[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2634022915)); }
              var _ = doRedo_2634025271(document_2634025272, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2634025305, 0, (Temporary13).length - 1)], oldSelection_2634025274, useOldSelection_2634025275, Temporary14, "children");
              res_536871635 = subInt(res_536871635, 1);
            }
        };
      };
      undoOps_2634025276[undoOps_2634025276_Idx].push(undoOp_2634025296);;
      break;
    }
    if (useOldSelection_2634025275) {
    result_2634025277 = nimCopy(null, op_2634025273.oldSelection, NTI2634022919);
    }
    

  return result_2634025277;

}

function redo_2634025310(document_2634025311, oldSelection_2634025312, useOldSelection_2634025313) {
  var result_2634025315 = ({val: [], has: false});

  BeforeRet: {
    result_2634025315 = nimCopy(result_2634025315, none_2634025233(), NTI2634024522);
    if (((document_2634025311.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2634025329 = pop_2634025244(document_2634025311, "redoOps");
    result_2634025315 = nimCopy(result_2634025315, some_2634025257(doRedo_2634025271(document_2634025311, op_2634025329, oldSelection_2634025312, useOldSelection_2634025313, document_2634025311, "undoOps")), NTI2634024522);
    break BeforeRet;
  };

  return result_2634025315;

}

function redo_2634030877(self_2634030878) {
      var Temporary1;

      var oHEX60gensym264_2634030881 = redo_2634025310(self_2634030878.document, selections_2634023401(self_2634030878), true);
      if (!isSome_2634030790(oHEX60gensym264_2634030881)) Temporary1 = false; else {        var selections_2634030904 = nimCopy(null, get_2634030807(oHEX60gensym264_2634030881), NTI2634024517);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2634023651(self_2634030878, selections_2634030904);
    }
    

  
}

function redoScript_2634030905(self_2634030906) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym261_2634030907 = getTextDocumentEditor_2634028826(self_2634030906);
      if (isNone_2634029170(rHEX60gensym261_2634030907)) {
      break BeforeRet;
      }
      
    };
    redo_2634030877(get_2634029190(rHEX60gensym261_2634030907));
  };

  
}

function redoApi_2634030930(HEX3Atmp_2634030874) {
  var result_2634030931 = null;

    result_2634030931 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2634030905(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030874, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym263_2634030937 = [114,101,100,111];
    var fmtRes_2634030942 = [mnewString(0)];
    fmtRes_2634030942[0].push.apply(fmtRes_2634030942[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634030942, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym263_2634030937 || [],fmtRes_2634030942[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030931;

}

function HEX2BHEX3D_872417520(x_872417522, x_872417522_Idx, y_872417523) {
    x_872417522[x_872417522_Idx] = (x_872417522[x_872417522_Idx] + y_872417523);

  
}

function scrollText_2634030951(self_2634030952, amount_2634030953) {
    HEX2BHEX3D_872417520(self_2634030952, "scrollOffset", amount_2634030953);
    self_2634030952.dirty = true;

  
}

function scrollTextScript_2634030958(self_2634030959, amount_2634030960) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym268_2634030961 = getTextDocumentEditor_2634028826(self_2634030959);
      if (isNone_2634029170(rHEX60gensym268_2634030961)) {
      break BeforeRet;
      }
      
    };
    scrollText_2634030951(get_2634029190(rHEX60gensym268_2634030961), amount_2634030960);
  };

  
}

function scrollTextApi_2634030984(HEX3Atmp_2634030948) {
  var result_2634030985 = null;

    result_2634030985 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2634030958(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634030948, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030991(HEX5BHEX5D_1660947548(HEX3Atmp_2634030948, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym270_2634031054 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2634031059 = [mnewString(0)];
    fmtRes_2634031059[0].push.apply(fmtRes_2634031059[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031059, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym270_2634031054 || [],fmtRes_2634031059[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634030985;

}

function clampCursor_2634023307(self_2634023308, cursor_2634023309) {
  var result_2634023310 = {Field0: 0, Field1: 0};

    result_2634023310 = nimCopy(result_2634023310, clampCursor_2634023286(self_2634023308.document, cursor_2634023309), NTI2197815305);

  return result_2634023310;

}

function doMoveCursorColumn_2634028372(self_2634028373, cursor_2634028374, offset_2634028375) {
  var result_2634028376 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2634028377 = nimCopy(null, cursor_2634028374, NTI2197815305);
    var column_2634028378 = addInt(cursor_2634028377.Field1, offset_2634028375);
    if ((column_2634028378 < 0)) {
    if ((0 < cursor_2634028377.Field0)) {
    cursor_2634028377.Field0 = subInt(cursor_2634028377.Field0, 1);
    cursor_2634028377.Field1 = lineLength_2634023279(self_2634028373, cursor_2634028377.Field0);
    }
    else {
      cursor_2634028377.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2634023279(self_2634028373, cursor_2634028377.Field0) < column_2634028378)) {
    if ((cursor_2634028377.Field0 < subInt((self_2634028373.document.lines).length, 1))) {
    cursor_2634028377.Field0 = addInt(cursor_2634028377.Field0, 1);
    cursor_2634028377.Field1 = 0;
    }
    else {
      cursor_2634028377.Field1 = lineLength_2634023279(self_2634028373, cursor_2634028377.Field0);
    }
    
    }
    else {
      cursor_2634028377.Field1 = column_2634028378;
    }
    }
    result_2634028376 = nimCopy(result_2634028376, clampCursor_2634023307(self_2634028373, cursor_2634028377), NTI2197815305);
    break BeforeRet;
  };

  return result_2634028376;

}

function HEX26_2634031078(x_2634031080, y_2634031081) {
  var result_2634031082 = [];

    result_2634031082 = new Array(chckRange(addInt((x_2634031080).length, (y_2634031081).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2634031080).length, (y_2634031081).length), 0, 2147483647) ; ++i) { result_2634031082[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2634031100 = 0;
      var colontmp__536871643 = 0;
      colontmp__536871643 = subInt((x_2634031080).length, 1);
      var res_536871644 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871644 <= colontmp__536871643)) break Label3;
            i_2634031100 = res_536871644;
            result_2634031082[chckIndx(i_2634031100, 0, (result_2634031082).length - 1)] = nimCopy(result_2634031082[chckIndx(i_2634031100, 0, (result_2634031082).length - 1)], x_2634031080[chckIndx(i_2634031100, 0, (x_2634031080).length - 1)], NTI2197815307);
            res_536871644 = addInt(res_536871644, 1);
          }
      };
    };
    Label4: {
      var i_2634031108 = 0;
      var colontmp__536871647 = 0;
      colontmp__536871647 = subInt((y_2634031081).length, 1);
      var res_536871648 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536871648 <= colontmp__536871647)) break Label6;
            i_2634031108 = res_536871648;
            result_2634031082[chckIndx(addInt(i_2634031108, (x_2634031080).length), 0, (result_2634031082).length - 1)] = nimCopy(result_2634031082[chckIndx(addInt(i_2634031108, (x_2634031080).length), 0, (result_2634031082).length - 1)], y_2634031081[chckIndx(i_2634031108, 0, (y_2634031081).length - 1)], NTI2197815307);
            res_536871648 = addInt(res_536871648, 1);
          }
      };
    };

  return result_2634031082;

}

function duplicateLastSelection_2634031068(self_2634031069) {
    var Temporary1;

    var newSelection_2634031073 = toSelection_2197815789(doMoveCursorColumn_2634028372(self_2634031069, (Temporary1 = selections_2634023401(self_2634031069), Temporary1)[chckIndx((selections_2634023401(self_2634031069)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2634023651(self_2634031069, HEX26_2634031078(selections_2634023401(self_2634031069), [nimCopy(null, newSelection_2634031073, NTI2197815307)]));

  
}

function duplicateLastSelectionScript_2634031112(self_2634031113) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym279_2634031114 = getTextDocumentEditor_2634028826(self_2634031113);
      if (isNone_2634029170(rHEX60gensym279_2634031114)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2634031068(get_2634029190(rHEX60gensym279_2634031114));
  };

  
}

function duplicateLastSelectionApi_2634031137(HEX3Atmp_2634031065) {
  var result_2634031138 = null;

    result_2634031138 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2634031112(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031065, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym281_2634031144 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2634031149 = [mnewString(0)];
    fmtRes_2634031149[0].push.apply(fmtRes_2634031149[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031149, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym281_2634031144 || [],fmtRes_2634031149[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634031138;

}

function doMoveCursorLine_2634028382(self_2634028383, cursor_2634028384, offset_2634028385) {
  var result_2634028386 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2634028387 = nimCopy(null, cursor_2634028384, NTI2197815305);
    var line_2634028388 = addInt(cursor_2634028387.Field0, offset_2634028385);
    if ((line_2634028388 < 0)) {
    var colontmp__536871652 = 0;
    var colontmp__536871653 = cursor_2634028387.Field1;
    cursor_2634028387 = nimCopy(cursor_2634028387, {Field0: colontmp__536871652, Field1: colontmp__536871653}, NTI2197815305);
    }
    else {
    if (((self_2634028383.document.lines).length <= line_2634028388)) {
    var colontmp__536871654 = subInt((self_2634028383.document.lines).length, 1);
    var colontmp__536871655 = cursor_2634028387.Field1;
    cursor_2634028387 = nimCopy(cursor_2634028387, {Field0: colontmp__536871654, Field1: colontmp__536871655}, NTI2197815305);
    }
    else {
      cursor_2634028387.Field0 = line_2634028388;
      cursor_2634028387.Field1 = self_2634028383.targetColumn;
    }
    }
    result_2634028386 = nimCopy(result_2634028386, clampCursor_2634023307(self_2634028383, cursor_2634028387), NTI2197815305);
    break BeforeRet;
  };

  return result_2634028386;

}

function addCursorBelow_2634031158(self_2634031159) {
    var Temporary1;

    var newCursor_2634031163 = toSelection_2197815789(doMoveCursorLine_2634028382(self_2634031159, (Temporary1 = selections_2634023401(self_2634031159), Temporary1)[chckIndx((selections_2634023401(self_2634031159)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2197815766(selections_2634023401(self_2634031159), newCursor_2634031163))) {
    selectionsHEX3D_2634023651(self_2634031159, HEX26_2634031078(selections_2634023401(self_2634031159), [nimCopy(null, newCursor_2634031163, NTI2197815307)]));
    }
    

  
}

function addCursorBelowScript_2634031172(self_2634031173) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym284_2634031174 = getTextDocumentEditor_2634028826(self_2634031173);
      if (isNone_2634029170(rHEX60gensym284_2634031174)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2634031158(get_2634029190(rHEX60gensym284_2634031174));
  };

  
}

function addCursorBelowApi_2634031197(HEX3Atmp_2634031155) {
  var result_2634031198 = null;

    result_2634031198 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2634031172(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031155, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym286_2634031204 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2634031209 = [mnewString(0)];
    fmtRes_2634031209[0].push.apply(fmtRes_2634031209[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031209, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym286_2634031204 || [],fmtRes_2634031209[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634031198;

}

function addCursorAbove_2634031218(self_2634031219) {
    var Temporary1;

    var newCursor_2634031223 = toSelection_2197815789(doMoveCursorLine_2634028382(self_2634031219, (Temporary1 = selections_2634023401(self_2634031219), Temporary1)[chckIndx((selections_2634023401(self_2634031219)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2197815766(selections_2634023401(self_2634031219), newCursor_2634031223))) {
    selectionsHEX3D_2634023651(self_2634031219, HEX26_2634031078(selections_2634023401(self_2634031219), [nimCopy(null, newCursor_2634031223, NTI2197815307)]));
    }
    

  
}

function addCursorAboveScript_2634031232(self_2634031233) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym289_2634031234 = getTextDocumentEditor_2634028826(self_2634031233);
      if (isNone_2634029170(rHEX60gensym289_2634031234)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2634031218(get_2634029190(rHEX60gensym289_2634031234));
  };

  
}

function addCursorAboveApi_2634031257(HEX3Atmp_2634031215) {
  var result_2634031258 = null;

    result_2634031258 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2634031232(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031215, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym291_2634031264 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2634031269 = [mnewString(0)];
    fmtRes_2634031269[0].push.apply(fmtRes_2634031269[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031269, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym291_2634031264 || [],fmtRes_2634031269[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634031258;

}

function hasKey_2634031343(t_2634031346, key_2634031347) {
  var result_2634031348 = false;

    var hc_2634031349 = [0];
    result_2634031348 = (0 <= rawGet_2634026126(t_2634031346, key_2634031347, hc_2634031349, 0));

  return result_2634031348;

}

function contains_2634031337(t_2634031340, key_2634031341) {
  var result_2634031342 = false;

  BeforeRet: {
    result_2634031342 = hasKey_2634031343(t_2634031340, key_2634031341);
    break BeforeRet;
  };

  return result_2634031342;

}

function HEX5BHEX5D_2634031429(t_2634031432, key_2634031433) {
  var result_2634031434 = null;
  var result_2634031434_Idx = 0;

    var hcHEX60gensym22_2634031435 = [0];
    var indexHEX60gensym22_2634031442 = rawGet_2634026126(t_2634031432, key_2634031433, hcHEX60gensym22_2634031435, 0);
    if ((0 <= indexHEX60gensym22_2634031442)) {
    result_2634031434 = t_2634031432.data[chckIndx(indexHEX60gensym22_2634031442, 0, (t_2634031432.data).length - 1)]; result_2634031434_Idx = "Field2";
    }
    else {
    raiseKeyError_1325405137(key_2634031433);
    }
    

  return [result_2634031434, result_2634031434_Idx];

}

function HEX3C_2197815623(a_2197815624, b_2197815625) {
  var result_2197815626 = false;

  BeforeRet: {
    if ((a_2197815624.Field0 < b_2197815625.Field0)) {
    result_2197815626 = true;
    break BeforeRet;
    }
    else {
    if (((a_2197815624.Field0 == b_2197815625.Field0) && (a_2197815624.Field1 < b_2197815625.Field1))) {
    result_2197815626 = true;
    break BeforeRet;
    }
    else {
      result_2197815626 = false;
      break BeforeRet;
    }
    }
  };

  return result_2197815626;

}

function getPrevFindResult_2634028405(self_2634028406, cursor_2634028407, offset_2634028408) {
            var Temporary4;

  var result_2634031282 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2634031283 = 0;
    Label1: {
      var line_2634031289 = 0;
      var res_536871667 = cursor_2634028407.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_536871667)) break Label3;
            line_2634031289 = res_536871667;
            if (contains_2634031337(self_2634028406.searchResults, line_2634031289)) {
            var selections_2634031519 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2634031429(self_2634028406.searchResults, line_2634031289), Temporary4)[0][Temporary4[1]], NTI2634023143);
            Label5: {
              var k_2634031528 = 0;
              var colontmp__536871664 = 0;
              colontmp__536871664 = (selections_2634031519).length - 1;
              var res_536871665 = colontmp__536871664;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_536871665)) break Label7;
                    k_2634031528 = res_536871665;
                    if (HEX3C_2197815623(selections_2634031519[chckIndx(k_2634031528, 0, (selections_2634031519).length - 1)].Field1, cursor_2634028407)) {
                    if ((i_2634031283 == offset_2634028408)) {
                    result_2634031282 = nimCopy(result_2634031282, selections_2634031519[chckIndx(k_2634031528, 0, (selections_2634031519).length - 1)], NTI2197815307);
                    break BeforeRet;
                    }
                    
                    i_2634031283 = addInt(i_2634031283, 1);
                    }
                    
                    res_536871665 = subInt(res_536871665, 1);
                  }
              };
            };
            }
            
            res_536871667 = subInt(res_536871667, 1);
          }
      };
    };
    result_2634031282 = nimCopy(result_2634031282, toSelection_2197815789(cursor_2634028407), NTI2197815307);
    break BeforeRet;
  };

  return result_2634031282;

}

function getPrevFindResultScript_2634031534(self_2634031535, cursor_2634031536, offset_2634031537) {
  var result_2634031538 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym296_2634031539 = getTextDocumentEditor_2634028826(self_2634031535);
      if (isNone_2634029170(rHEX60gensym296_2634031539)) {
      break BeforeRet;
      }
      
    };
    result_2634031538 = nimCopy(result_2634031538, getPrevFindResult_2634028405(get_2634029190(rHEX60gensym296_2634031539), cursor_2634031536, offset_2634031537), NTI2197815307);
  };

  return result_2634031538;

}

function getPrevFindResultApi_2634031562(HEX3Atmp_2634031275) {
      var Temporary5;

  var result_2634031563 = null;

  BeforeRet: {
    result_2634031563 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634031275))) {
      Temporary5 = jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634031275, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2634031563 = toJson_2634029885(getPrevFindResultScript_2634031534(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031275, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030437(HEX5BHEX5D_1660947548(HEX3Atmp_2634031275, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym299_2634031583 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2634031588 = [mnewString(0)];
    fmtRes_2634031588[0].push.apply(fmtRes_2634031588[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031588, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym299_2634031583 || [],fmtRes_2634031588[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634031563;

}

function getNextFindResult_2634028409(self_2634028410, cursor_2634028411, offset_2634028412) {
              var Temporary5;

  var result_2634031601 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2634031602 = 0;
    Label1: {
      var line_2634031610 = 0;
      var colontmp__536871679 = 0;
      colontmp__536871679 = (self_2634028410.document.lines).length - 1;
      var res_536871680 = cursor_2634028411.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871680 <= colontmp__536871679)) break Label3;
            line_2634031610 = res_536871680;
            if (contains_2634031337(self_2634028410.searchResults, line_2634031610)) {
            Label4: {
              var selection_2634031744 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__536871675 = [];
              colontmp__536871675 = (Temporary5 = HEX5BHEX5D_2634031429(self_2634028410.searchResults, line_2634031610), Temporary5)[0][Temporary5[1]];
              var i_536871676 = 0;
              var L_536871677 = (colontmp__536871675).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_536871676 < L_536871677)) break Label7;
                    selection_2634031744 = colontmp__536871675[chckIndx(i_536871676, 0, (colontmp__536871675).length - 1)];
                    if (HEX3C_2197815623(cursor_2634028411, selection_2634031744.Field0)) {
                    if ((i_2634031602 == offset_2634028412)) {
                    result_2634031601 = nimCopy(result_2634031601, selection_2634031744, NTI2197815307);
                    break BeforeRet;
                    }
                    
                    i_2634031602 = addInt(i_2634031602, 1);
                    }
                    
                    i_536871676 = addInt(i_536871676, 1);
                    if (!(((colontmp__536871675).length == L_536871677))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_536871680 = addInt(res_536871680, 1);
          }
      };
    };
    result_2634031601 = nimCopy(result_2634031601, toSelection_2197815789(cursor_2634028411), NTI2197815307);
    break BeforeRet;
  };

  return result_2634031601;

}

function getNextFindResultScript_2634031750(self_2634031751, cursor_2634031752, offset_2634031753) {
  var result_2634031754 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym305_2634031755 = getTextDocumentEditor_2634028826(self_2634031751);
      if (isNone_2634029170(rHEX60gensym305_2634031755)) {
      break BeforeRet;
      }
      
    };
    result_2634031754 = nimCopy(result_2634031754, getNextFindResult_2634028409(get_2634029190(rHEX60gensym305_2634031755), cursor_2634031752, offset_2634031753), NTI2197815307);
  };

  return result_2634031754;

}

function getNextFindResultApi_2634031778(HEX3Atmp_2634031594) {
      var Temporary5;

  var result_2634031779 = null;

  BeforeRet: {
    result_2634031779 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634031594))) {
      Temporary5 = jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634031594, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2634031779 = toJson_2634029885(getNextFindResultScript_2634031750(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031594, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030437(HEX5BHEX5D_1660947548(HEX3Atmp_2634031594, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym308_2634031799 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2634031804 = [mnewString(0)];
    fmtRes_2634031804[0].push.apply(fmtRes_2634031804[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031804, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym308_2634031799 || [],fmtRes_2634031804[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634031779;

}

function addNextFindResultToSelection_2634031813(self_2634031814) {
    selectionsHEX3D_2634023651(self_2634031814, HEX26_2634031078(selections_2634023401(self_2634031814), [nimCopy(null, getNextFindResult_2634028409(self_2634031814, selection_2634023404(self_2634031814).Field1, 0), NTI2197815307)]));

  
}

function addNextFindResultToSelectionScript_2634031823(self_2634031824) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym312_2634031825 = getTextDocumentEditor_2634028826(self_2634031824);
      if (isNone_2634029170(rHEX60gensym312_2634031825)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2634031813(get_2634029190(rHEX60gensym312_2634031825));
  };

  
}

function addNextFindResultToSelectionApi_2634031848(HEX3Atmp_2634031810) {
  var result_2634031849 = null;

    result_2634031849 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2634031823(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031810, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym314_2634031855 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2634031860 = [mnewString(0)];
    fmtRes_2634031860[0].push.apply(fmtRes_2634031860[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031860, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym314_2634031855 || [],fmtRes_2634031860[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634031849;

}

function addPrevFindResultToSelection_2634031869(self_2634031870) {
    selectionsHEX3D_2634023651(self_2634031870, HEX26_2634031078(selections_2634023401(self_2634031870), [nimCopy(null, getPrevFindResult_2634028405(self_2634031870, selection_2634023404(self_2634031870).Field0, 0), NTI2197815307)]));

  
}

function addPrevFindResultToSelectionScript_2634031879(self_2634031880) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym317_2634031881 = getTextDocumentEditor_2634028826(self_2634031880);
      if (isNone_2634029170(rHEX60gensym317_2634031881)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2634031869(get_2634029190(rHEX60gensym317_2634031881));
  };

  
}

function addPrevFindResultToSelectionApi_2634031904(HEX3Atmp_2634031866) {
  var result_2634031905 = null;

    result_2634031905 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2634031879(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031866, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym319_2634031911 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2634031916 = [mnewString(0)];
    fmtRes_2634031916[0].push.apply(fmtRes_2634031916[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634031916, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym319_2634031911 || [],fmtRes_2634031916[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634031905;

}

function len_2634031985(t_2634031988) {
  var result_2634031989 = 0;

    result_2634031989 = t_2634031988.counter;

  return result_2634031989;

}

function setAllFindResultToSelection_2634031925(self_2634031926) {
    var selections_2634031931 = [];
    Label1: {
      var searchResults_2634032203 = [];
      var L_536871697 = len_2634031985(self_2634031926.searchResults);
      Label2: {
        var h_536871699 = 0;
        var colontmp__536871700 = 0;
        colontmp__536871700 = (self_2634031926.searchResults.data).length - 1;
        var res_536871701 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536871701 <= colontmp__536871700)) break Label4;
              h_536871699 = res_536871701;
              if (isFilled_1342177312(self_2634031926.searchResults.data[chckIndx(h_536871699, 0, (self_2634031926.searchResults.data).length - 1)].Field0)) {
              searchResults_2634032203 = self_2634031926.searchResults.data[chckIndx(h_536871699, 0, (self_2634031926.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2634032207 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_536871690 = 0;
                var L_536871691 = (searchResults_2634032203).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536871690 < L_536871691)) break Label7;
                      s_2634032207 = searchResults_2634032203[chckIndx(i_536871690, 0, (searchResults_2634032203).length - 1)];
                      var Temporary8 = nimCopy(null, s_2634032207, NTI2197815307);
                      selections_2634031931.push(Temporary8);;
                      i_536871690 = addInt(i_536871690, 1);
                      if (!(((searchResults_2634032203).length == L_536871691))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2634031985(self_2634031926.searchResults) == L_536871697))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536871701 = addInt(res_536871701, 1);
            }
        };
      };
    };
    selectionsHEX3D_2634023651(self_2634031926, selections_2634031931);

  
}

function setAllFindResultToSelectionScript_2634032221(self_2634032222) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym322_2634032223 = getTextDocumentEditor_2634028826(self_2634032222);
      if (isNone_2634029170(rHEX60gensym322_2634032223)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2634031925(get_2634029190(rHEX60gensym322_2634032223));
  };

  
}

function setAllFindResultToSelectionApi_2634032246(HEX3Atmp_2634031922) {
  var result_2634032247 = null;

    result_2634032247 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2634032221(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634031922, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym324_2634032253 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2634032258 = [mnewString(0)];
    fmtRes_2634032258[0].push.apply(fmtRes_2634032258[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032258, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym324_2634032253 || [],fmtRes_2634032258[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032247;

}

function map_2634028627(s_2634028630, op_2634028632) {
  var result_2634028633 = [];

    result_2634028633 = new Array(chckRange((s_2634028630).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2634028630).length, 0, 2147483647) ; ++i) { result_2634028633[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2634028648 = 0;
      var colontmp__536871721 = 0;
      colontmp__536871721 = (s_2634028630).length;
      var i_536871722 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871722 < colontmp__536871721)) break Label3;
            i_2634028648 = i_536871722;
            result_2634028633[chckIndx(i_2634028648, 0, (result_2634028633).length - 1)] = nimCopy(result_2634028633[chckIndx(i_2634028648, 0, (result_2634028633).length - 1)], op_2634028632(s_2634028630[chckIndx(i_2634028648, 0, (s_2634028630).length - 1)]), NTI2634026184);
            i_536871722 = addInt(i_536871722, 1);
          }
      };
    };

  return result_2634028633;

}

function moveCursor_2634028572(self_2634028573, cursor_2634028574, movement_2634028579, offset_2634028580, all_2634028581) {
      
function HEX3Aanonymous_2634028592(s_2634028599) {
        var result_2634028602 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2634028602 = nimCopy(result_2634028602, toSelection_2197815789(movement_2634028579(self_2634028573, s_2634028599.Field1, offset_2634028580)), NTI2197815307);

        return result_2634028602;

      }
      
function HEX3Aanonymous_2634028616(s_2634028623) {
        var result_2634028626 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__536871708 = movement_2634028579(self_2634028573, s_2634028623.Field0, offset_2634028580);
          var colontmp__536871709 = nimCopy(null, s_2634028623.Field1, NTI2197815305);
          result_2634028626 = nimCopy(result_2634028626, {Field0: nimCopy(null, colontmp__536871708, NTI2197815305), Field1: nimCopy(null, colontmp__536871709, NTI2197815305)}, NTI2634026184);

        return result_2634028626;

      }
      
function HEX3Aanonymous_2634028659(s_2634028666) {
        var result_2634028669 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__536871712 = nimCopy(null, s_2634028666.Field0, NTI2197815305);
          var colontmp__536871713 = movement_2634028579(self_2634028573, s_2634028666.Field1, offset_2634028580);
          result_2634028669 = nimCopy(result_2634028669, {Field0: nimCopy(null, colontmp__536871712, NTI2197815305), Field1: nimCopy(null, colontmp__536871713, NTI2197815305)}, NTI2634026226);

        return result_2634028669;

      }
      
function HEX3Aanonymous_2634028686(s_2634028693) {
        var result_2634028696 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__536871716 = nimCopy(null, s_2634028693.Field1, NTI2197815305);
          var colontmp__536871717 = movement_2634028579(self_2634028573, s_2634028693.Field1, offset_2634028580);
          result_2634028696 = nimCopy(result_2634028696, {Field0: nimCopy(null, colontmp__536871716, NTI2197815305), Field1: nimCopy(null, colontmp__536871717, NTI2197815305)}, NTI2634026258);

        return result_2634028696;

      }

    switch (cursor_2634028574) {
    case 0:
      var configCursor_2634028591 = getOption_2634028511(self_2634028573.editor, getContextWithMode_2634028476(self_2634028573, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2634028572(self_2634028573, configCursor_2634028591, movement_2634028579, offset_2634028580, all_2634028581);
      break;
    case 1:
      if (all_2634028581) {
      selectionsHEX3D_2634023651(self_2634028573, map_2634023334(selections_2634023401(self_2634028573), HEX3Aanonymous_2634028592));
      }
      else {
        var selections_2634028609 = selections_2634023401(self_2634028573);
        selections_2634028609[chckIndx((selections_2634028609).length - 1, 0, (selections_2634028609).length - 1)] = nimCopy(selections_2634028609[chckIndx((selections_2634028609).length - 1, 0, (selections_2634028609).length - 1)], toSelection_2197815789(movement_2634028579(self_2634028573, selections_2634028609[chckIndx((selections_2634028609).length - 1, 0, (selections_2634028609).length - 1)].Field1, offset_2634028580)), NTI2197815307);
        selectionsHEX3D_2634023651(self_2634028573, selections_2634028609);
      }
      
      scrollToCursor_2634028423(self_2634028573, selection_2634023404(self_2634028573).Field1, false);
      break;
    case 2:
      if (all_2634028581) {
      selectionsHEX3D_2634023651(self_2634028573, map_2634028627(selections_2634023401(self_2634028573), HEX3Aanonymous_2634028616));
      }
      else {
        var selections_2634028649 = selections_2634023401(self_2634028573);
        var colontmp__536871710 = movement_2634028579(self_2634028573, selections_2634028649[chckIndx((selections_2634028649).length - 1, 0, (selections_2634028649).length - 1)].Field0, offset_2634028580);
        var colontmp__536871711 = nimCopy(null, selections_2634028649[chckIndx((selections_2634028649).length - 1, 0, (selections_2634028649).length - 1)].Field1, NTI2197815305);
        selections_2634028649[chckIndx((selections_2634028649).length - 1, 0, (selections_2634028649).length - 1)] = nimCopy(selections_2634028649[chckIndx((selections_2634028649).length - 1, 0, (selections_2634028649).length - 1)], {Field0: nimCopy(null, colontmp__536871710, NTI2197815305), Field1: nimCopy(null, colontmp__536871711, NTI2197815305)}, NTI2197815307);
        selectionsHEX3D_2634023651(self_2634028573, selections_2634028649);
      }
      
      scrollToCursor_2634028423(self_2634028573, selection_2634023404(self_2634028573).Field0, false);
      break;
    case 3:
      if (all_2634028581) {
      selectionsHEX3D_2634023651(self_2634028573, map_2634028627(selections_2634023401(self_2634028573), HEX3Aanonymous_2634028659));
      }
      else {
        var selections_2634028676 = selections_2634023401(self_2634028573);
        var colontmp__536871714 = nimCopy(null, selections_2634028676[chckIndx((selections_2634028676).length - 1, 0, (selections_2634028676).length - 1)].Field0, NTI2197815305);
        var colontmp__536871715 = movement_2634028579(self_2634028573, selections_2634028676[chckIndx((selections_2634028676).length - 1, 0, (selections_2634028676).length - 1)].Field1, offset_2634028580);
        selections_2634028676[chckIndx((selections_2634028676).length - 1, 0, (selections_2634028676).length - 1)] = nimCopy(selections_2634028676[chckIndx((selections_2634028676).length - 1, 0, (selections_2634028676).length - 1)], {Field0: nimCopy(null, colontmp__536871714, NTI2197815305), Field1: nimCopy(null, colontmp__536871715, NTI2197815305)}, NTI2197815307);
        selectionsHEX3D_2634023651(self_2634028573, selections_2634028676);
      }
      
      scrollToCursor_2634028423(self_2634028573, selection_2634023404(self_2634028573).Field1, false);
      break;
    case 4:
      if (all_2634028581) {
      selectionsHEX3D_2634023651(self_2634028573, map_2634028627(selections_2634023401(self_2634028573), HEX3Aanonymous_2634028686));
      }
      else {
        var selections_2634028703 = selections_2634023401(self_2634028573);
        var colontmp__536871718 = nimCopy(null, selections_2634028703[chckIndx((selections_2634028703).length - 1, 0, (selections_2634028703).length - 1)].Field1, NTI2197815305);
        var colontmp__536871719 = movement_2634028579(self_2634028573, selections_2634028703[chckIndx((selections_2634028703).length - 1, 0, (selections_2634028703).length - 1)].Field1, offset_2634028580);
        selections_2634028703[chckIndx((selections_2634028703).length - 1, 0, (selections_2634028703).length - 1)] = nimCopy(selections_2634028703[chckIndx((selections_2634028703).length - 1, 0, (selections_2634028703).length - 1)], {Field0: nimCopy(null, colontmp__536871718, NTI2197815305), Field1: nimCopy(null, colontmp__536871719, NTI2197815305)}, NTI2197815307);
        selectionsHEX3D_2634023651(self_2634028573, selections_2634028703);
      }
      
      scrollToCursor_2634028423(self_2634028573, selection_2634023404(self_2634028573).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2634032267(self_2634032268, distance_2634032269, cursor_2634032270, all_2634032271) {
    moveCursor_2634028572(self_2634032268, cursor_2634032270, doMoveCursorColumn_2634028372, distance_2634032269, all_2634032271);
    updateTargetColumn_2634029387(self_2634032268, cursor_2634032270);

  
}

function moveCursorColumnScript_2634032290(self_2634032291, distance_2634032292, cursor_2634032293, all_2634032294) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym332_2634032295 = getTextDocumentEditor_2634028826(self_2634032291);
      if (isNone_2634029170(rHEX60gensym332_2634032295)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2634032267(get_2634029190(rHEX60gensym332_2634032295), distance_2634032292, cursor_2634032293, all_2634032294);
  };

  
}

function moveCursorColumnApi_2634032318(HEX3Atmp_2634032264) {
      var Temporary5;
      var Temporary7;

  var result_2634032319 = null;

    result_2634032319 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634032264))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032264, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634032264))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032264, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2634032290(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032264, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634032264, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym334_2634032340 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2634032345 = [mnewString(0)];
    fmtRes_2634032345[0].push.apply(fmtRes_2634032345[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032345, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym334_2634032340 || [],fmtRes_2634032345[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032319;

}

function moveCursorLine_2634032354(self_2634032355, distance_2634032356, cursor_2634032357, all_2634032358) {
    moveCursor_2634028572(self_2634032355, cursor_2634032357, doMoveCursorLine_2634028382, distance_2634032356, all_2634032358);

  
}

function moveCursorLineScript_2634032359(self_2634032360, distance_2634032361, cursor_2634032362, all_2634032363) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym342_2634032364 = getTextDocumentEditor_2634028826(self_2634032360);
      if (isNone_2634029170(rHEX60gensym342_2634032364)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2634032354(get_2634029190(rHEX60gensym342_2634032364), distance_2634032361, cursor_2634032362, all_2634032363);
  };

  
}

function moveCursorLineApi_2634032387(HEX3Atmp_2634032351) {
      var Temporary5;
      var Temporary7;

  var result_2634032388 = null;

    result_2634032388 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634032351))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032351, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634032351))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032351, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2634032359(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032351, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634032351, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym344_2634032409 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2634032414 = [mnewString(0)];
    fmtRes_2634032414[0].push.apply(fmtRes_2634032414[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032414, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym344_2634032409 || [],fmtRes_2634032414[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032388;

}

function doMoveCursorHome_2634028395(self_2634028396, cursor_2634028397, offset_2634028398) {
  var result_2634028399 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__536871733 = cursor_2634028397.Field0;
    var colontmp__536871734 = 0;
    result_2634028399 = nimCopy(result_2634028399, {Field0: colontmp__536871733, Field1: colontmp__536871734}, NTI2197815305);
    break BeforeRet;
  };

  return result_2634028399;

}

function moveCursorHome_2634032423(self_2634032424, cursor_2634032425, all_2634032426) {
    moveCursor_2634028572(self_2634032424, cursor_2634032425, doMoveCursorHome_2634028395, 0, all_2634032426);
    updateTargetColumn_2634029387(self_2634032424, cursor_2634032425);

  
}

function moveCursorHomeScript_2634032427(self_2634032428, cursor_2634032429, all_2634032430) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym351_2634032431 = getTextDocumentEditor_2634028826(self_2634032428);
      if (isNone_2634029170(rHEX60gensym351_2634032431)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2634032423(get_2634029190(rHEX60gensym351_2634032431), cursor_2634032429, all_2634032430);
  };

  
}

function moveCursorHomeApi_2634032454(HEX3Atmp_2634032420) {
      var Temporary4;
      var Temporary6;

  var result_2634032455 = null;

    result_2634032455 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_2634032420))) {
      Temporary4 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032420, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1660947415(HEX3Atmp_2634032420))) {
      Temporary6 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032420, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2634032427(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032420, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym353_2634032471 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2634032476 = [mnewString(0)];
    fmtRes_2634032476[0].push.apply(fmtRes_2634032476[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032476, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym353_2634032471 || [],fmtRes_2634032476[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032455;

}

function doMoveCursorEnd_2634028400(self_2634028401, cursor_2634028402, offset_2634028403) {
  var result_2634028404 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__536871739 = cursor_2634028402.Field0;
    var colontmp__536871740 = lineLength_2634023272(self_2634028401.document, cursor_2634028402.Field0);
    result_2634028404 = nimCopy(result_2634028404, {Field0: colontmp__536871739, Field1: colontmp__536871740}, NTI2197815305);
    break BeforeRet;
  };

  return result_2634028404;

}

function moveCursorEnd_2634032485(self_2634032486, cursor_2634032487, all_2634032488) {
    moveCursor_2634028572(self_2634032486, cursor_2634032487, doMoveCursorEnd_2634028400, 0, all_2634032488);
    updateTargetColumn_2634029387(self_2634032486, cursor_2634032487);

  
}

function moveCursorEndScript_2634032489(self_2634032490, cursor_2634032491, all_2634032492) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym360_2634032493 = getTextDocumentEditor_2634028826(self_2634032490);
      if (isNone_2634029170(rHEX60gensym360_2634032493)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2634032485(get_2634029190(rHEX60gensym360_2634032493), cursor_2634032491, all_2634032492);
  };

  
}

function moveCursorEndApi_2634032516(HEX3Atmp_2634032482) {
      var Temporary4;
      var Temporary6;

  var result_2634032517 = null;

    result_2634032517 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_2634032482))) {
      Temporary4 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032482, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1660947415(HEX3Atmp_2634032482))) {
      Temporary6 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032482, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2634032489(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032482, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym362_2634032533 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2634032538 = [mnewString(0)];
    fmtRes_2634032538[0].push.apply(fmtRes_2634032538[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032538, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym362_2634032533 || [],fmtRes_2634032538[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032517;

}

function getLine_2634023265(self_2634023266, line_2634023267) {
  var result_2634023268 = [];

  BeforeRet: {
    if ((line_2634023267 < (self_2634023266.lines).length)) {
    result_2634023268 = nimCopy(null, self_2634023266.lines[chckIndx(line_2634023267, 0, (self_2634023266.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2634023268 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2634023268;

}

function nsuFindStr(s_872416951, sub_872416952, start_872416953, last_872416954) {
  var result_872416955 = 0;

  BeforeRet: {
    if ((subInt((s_872416951).length, start_872416953) < (sub_872416952).length)) {
    result_872416955 = -1;
    break BeforeRet;
    }
    
    if (((sub_872416952).length == 1)) {
    result_872416955 = nsuFindChar(s_872416951, sub_872416952[chckIndx(0, 0, (sub_872416952).length - 1)], start_872416953, last_872416954);
    break BeforeRet;
    }
    
    result_872416955 = nsuFindStrA(nsuInitNewSkipTable(sub_872416952), s_872416951, sub_872416952, start_872416953, last_872416954);
  };

  return result_872416955;

}

function moveCursorTo_2634032547(self_2634032548, str_2634032549, cursor_2634032550, all_2634032551) {
    str_2634032549 = nimCopy(null, str_2634032549, NTI33554449);
    
function doMoveCursorTo_2634032552(self_2634032553, cursor_2634032554, offset_2634032555) {
      var result_2634032556 = {Field0: 0, Field1: 0};

        var line_2634032557 = getLine_2634023265(self_2634032553.document, cursor_2634032554.Field0);
        result_2634032556 = nimCopy(result_2634032556, cursor_2634032554, NTI2197815305);
        var index_2634032558 = nsuFindStr(line_2634032557, str_2634032549, chckRange(addInt(cursor_2634032554.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2634032558)) {
        var colontmp__536871746 = cursor_2634032554.Field0;
        var colontmp__536871747 = index_2634032558;
        result_2634032556 = nimCopy(result_2634032556, {Field0: colontmp__536871746, Field1: colontmp__536871747}, NTI2197815305);
        }
        

      return result_2634032556;

    }

    moveCursor_2634028572(self_2634032548, cursor_2634032550, doMoveCursorTo_2634032552, 0, all_2634032551);
    updateTargetColumn_2634029387(self_2634032548, cursor_2634032550);

  
}

function moveCursorToScript_2634032559(self_2634032560, str_2634032561, cursor_2634032562, all_2634032563) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym370_2634032564 = getTextDocumentEditor_2634028826(self_2634032560);
      if (isNone_2634029170(rHEX60gensym370_2634032564)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2634032547(get_2634029190(rHEX60gensym370_2634032564), str_2634032561, cursor_2634032562, all_2634032563);
  };

  
}

function moveCursorToApi_2634032587(HEX3Atmp_2634032544) {
      var Temporary5;
      var Temporary7;

  var result_2634032588 = null;

    result_2634032588 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634032544))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032544, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634032544))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032544, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2634032559(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032544, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634032544, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym372_2634032609 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2634032614 = [mnewString(0)];
    fmtRes_2634032614[0].push.apply(fmtRes_2634032614[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032614, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym372_2634032609 || [],fmtRes_2634032614[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032588;

}

function moveCursorBefore_2634032623(self_2634032624, str_2634032625, cursor_2634032626, all_2634032627) {
    str_2634032625 = nimCopy(null, str_2634032625, NTI33554449);
    
function doMoveCursorBefore_2634032628(self_2634032629, cursor_2634032630, offset_2634032631) {
      var result_2634032632 = {Field0: 0, Field1: 0};

        var line_2634032633 = getLine_2634023265(self_2634032629.document, cursor_2634032630.Field0);
        result_2634032632 = nimCopy(result_2634032632, cursor_2634032630, NTI2197815305);
        var index_2634032634 = nsuFindStr(line_2634032633, str_2634032625, chckRange(cursor_2634032630.Field1, 0, 2147483647), -1);
        if ((0 < index_2634032634)) {
        var colontmp__536871753 = cursor_2634032630.Field0;
        var colontmp__536871754 = subInt(index_2634032634, 1);
        result_2634032632 = nimCopy(result_2634032632, {Field0: colontmp__536871753, Field1: colontmp__536871754}, NTI2197815305);
        }
        

      return result_2634032632;

    }

    moveCursor_2634028572(self_2634032624, cursor_2634032626, doMoveCursorBefore_2634032628, 0, all_2634032627);
    updateTargetColumn_2634029387(self_2634032624, cursor_2634032626);

  
}

function moveCursorBeforeScript_2634032635(self_2634032636, str_2634032637, cursor_2634032638, all_2634032639) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym381_2634032640 = getTextDocumentEditor_2634028826(self_2634032636);
      if (isNone_2634029170(rHEX60gensym381_2634032640)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2634032623(get_2634029190(rHEX60gensym381_2634032640), str_2634032637, cursor_2634032638, all_2634032639);
  };

  
}

function moveCursorBeforeApi_2634032663(HEX3Atmp_2634032620) {
      var Temporary5;
      var Temporary7;

  var result_2634032664 = null;

    result_2634032664 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634032620))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032620, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634032620))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032620, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2634032635(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032620, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634032620, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym383_2634032685 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2634032690 = [mnewString(0)];
    fmtRes_2634032690[0].push.apply(fmtRes_2634032690[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032690, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym383_2634032685 || [],fmtRes_2634032690[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032664;

}

function doMoveCursorNextFindResult_2634028418(self_2634028419, cursor_2634028420, offset_2634028421) {
  var result_2634028422 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2634028422 = nimCopy(result_2634028422, getNextFindResult_2634028409(self_2634028419, cursor_2634028420, offset_2634028421).Field0, NTI2197815305);
    break BeforeRet;
  };

  return result_2634028422;

}

function moveCursorNextFindResult_2634032699(self_2634032700, cursor_2634032701, all_2634032702) {
    moveCursor_2634028572(self_2634032700, cursor_2634032701, doMoveCursorNextFindResult_2634028418, 0, all_2634032702);
    updateTargetColumn_2634029387(self_2634032700, cursor_2634032701);

  
}

function moveCursorNextFindResultScript_2634032703(self_2634032704, cursor_2634032705, all_2634032706) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym391_2634032707 = getTextDocumentEditor_2634028826(self_2634032704);
      if (isNone_2634029170(rHEX60gensym391_2634032707)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2634032699(get_2634029190(rHEX60gensym391_2634032707), cursor_2634032705, all_2634032706);
  };

  
}

function moveCursorNextFindResultApi_2634032730(HEX3Atmp_2634032696) {
      var Temporary4;
      var Temporary6;

  var result_2634032731 = null;

    result_2634032731 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_2634032696))) {
      Temporary4 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032696, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1660947415(HEX3Atmp_2634032696))) {
      Temporary6 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032696, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2634032703(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032696, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym393_2634032747 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2634032752 = [mnewString(0)];
    fmtRes_2634032752[0].push.apply(fmtRes_2634032752[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032752, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym393_2634032747 || [],fmtRes_2634032752[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032731;

}

function doMoveCursorPrevFindResult_2634028413(self_2634028414, cursor_2634028415, offset_2634028416) {
  var result_2634028417 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2634028417 = nimCopy(result_2634028417, getPrevFindResult_2634028405(self_2634028414, cursor_2634028415, offset_2634028416).Field0, NTI2197815305);
    break BeforeRet;
  };

  return result_2634028417;

}

function moveCursorPrevFindResult_2634032761(self_2634032762, cursor_2634032763, all_2634032764) {
    moveCursor_2634028572(self_2634032762, cursor_2634032763, doMoveCursorPrevFindResult_2634028413, 0, all_2634032764);
    updateTargetColumn_2634029387(self_2634032762, cursor_2634032763);

  
}

function moveCursorPrevFindResultScript_2634032765(self_2634032766, cursor_2634032767, all_2634032768) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym400_2634032769 = getTextDocumentEditor_2634028826(self_2634032766);
      if (isNone_2634029170(rHEX60gensym400_2634032769)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2634032761(get_2634029190(rHEX60gensym400_2634032769), cursor_2634032767, all_2634032768);
  };

  
}

function moveCursorPrevFindResultApi_2634032792(HEX3Atmp_2634032758) {
      var Temporary4;
      var Temporary6;

  var result_2634032793 = null;

    result_2634032793 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_2634032758))) {
      Temporary4 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032758, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1660947415(HEX3Atmp_2634032758))) {
      Temporary6 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634032758, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2634032765(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032758, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym402_2634032809 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2634032814 = [mnewString(0)];
    fmtRes_2634032814[0].push.apply(fmtRes_2634032814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym402_2634032809 || [],fmtRes_2634032814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032793;

}

function scrollToCursor_2634028936(self_2634028937, cursor_2634028938) {
    scrollToCursor_2634028423(self_2634028937, getCursor_2634028507(self_2634028937, cursor_2634028938), false);

  
}

function scrollToCursorScript_2634032826(self_2634032827, cursor_2634032828) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym408_2634032829 = getTextDocumentEditor_2634028826(self_2634032827);
      if (isNone_2634029170(rHEX60gensym408_2634032829)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2634028936(get_2634029190(rHEX60gensym408_2634032829), cursor_2634032828);
  };

  
}

function scrollToCursorApi_2634032852(HEX3Atmp_2634032820) {
      var Temporary4;

  var result_2634032853 = null;

    result_2634032853 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1660947415(HEX3Atmp_2634032820))) {
      Temporary4 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634032820, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2634032826(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032820, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym410_2634032864 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2634032869 = [mnewString(0)];
    fmtRes_2634032869[0].push.apply(fmtRes_2634032869[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032869, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym410_2634032864 || [],fmtRes_2634032869[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032853;

}

function reloadTreesitter_2634032878(self_2634032879) {
    log_1191182436(logger_721420488[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    initTreesitter_2634024379(self_2634032879.document);

  
}

function reloadTreesitterScript_2634032880(self_2634032881) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym414_2634032882 = getTextDocumentEditor_2634028826(self_2634032881);
      if (isNone_2634029170(rHEX60gensym414_2634032882)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2634032878(get_2634029190(rHEX60gensym414_2634032882));
  };

  
}

function reloadTreesitterApi_2634032905(HEX3Atmp_2634032875) {
  var result_2634032906 = null;

    result_2634032906 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2634032880(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032875, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym416_2634032912 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2634032917 = [mnewString(0)];
    fmtRes_2634032917[0].push.apply(fmtRes_2634032917[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032917, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym416_2634032912 || [],fmtRes_2634032917[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032906;

}

function deleteLeft_2634032926(self_2634032927) {
    var selections_2634032928 = selections_2634023401(self_2634032927);
    Label1: {
      var i_2634032934 = 0;
      var selection_2634032935 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871773 = 0;
      var L_536871774 = (selections_2634032928).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871773 < L_536871774)) break Label3;
            i_2634032934 = i_536871773;
            selection_2634032935 = nimCopy(selection_2634032935, selections_2634032928[chckIndx(i_536871773, 0, (selections_2634032928).length - 1)], NTI2197815307);
            if (isEmpty_2197815668(selection_2634032935)) {
            var colontmp__536871771 = doMoveCursorColumn_2634028372(self_2634032927, selection_2634032935.Field0, -1);
            var colontmp__536871772 = nimCopy(null, selection_2634032935.Field0, NTI2197815305);
            selections_2634032928[chckIndx(i_2634032934, 0, (selections_2634032928).length - 1)] = nimCopy(selections_2634032928[chckIndx(i_2634032934, 0, (selections_2634032928).length - 1)], {Field0: nimCopy(null, colontmp__536871771, NTI2197815305), Field1: nimCopy(null, colontmp__536871772, NTI2197815305)}, NTI2197815307);
            }
            
            i_536871773 = addInt(i_536871773, 1);
            if (!(((selections_2634032928).length == L_536871774))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2634023651(self_2634032927, delete_2634024564(self_2634032927.document, selections_2634032928, selections_2634023401(self_2634032927), true, true));
    updateTargetColumn_2634029387(self_2634032927, 3);

  
}

function deleteLeftScript_2634032936(self_2634032937) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym419_2634032938 = getTextDocumentEditor_2634028826(self_2634032937);
      if (isNone_2634029170(rHEX60gensym419_2634032938)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2634032926(get_2634029190(rHEX60gensym419_2634032938));
  };

  
}

function deleteLeftApi_2634032961(HEX3Atmp_2634032923) {
  var result_2634032962 = null;

    result_2634032962 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2634032936(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032923, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym421_2634032968 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2634032973 = [mnewString(0)];
    fmtRes_2634032973[0].push.apply(fmtRes_2634032973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634032973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym421_2634032968 || [],fmtRes_2634032973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634032962;

}

function deleteRight_2634032982(self_2634032983) {
    var selections_2634032984 = selections_2634023401(self_2634032983);
    Label1: {
      var i_2634032990 = 0;
      var selection_2634032991 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871781 = 0;
      var L_536871782 = (selections_2634032984).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871781 < L_536871782)) break Label3;
            i_2634032990 = i_536871781;
            selection_2634032991 = nimCopy(selection_2634032991, selections_2634032984[chckIndx(i_536871781, 0, (selections_2634032984).length - 1)], NTI2197815307);
            if (isEmpty_2197815668(selection_2634032991)) {
            var colontmp__536871779 = nimCopy(null, selection_2634032991.Field0, NTI2197815305);
            var colontmp__536871780 = doMoveCursorColumn_2634028372(self_2634032983, selection_2634032991.Field0, 1);
            selections_2634032984[chckIndx(i_2634032990, 0, (selections_2634032984).length - 1)] = nimCopy(selections_2634032984[chckIndx(i_2634032990, 0, (selections_2634032984).length - 1)], {Field0: nimCopy(null, colontmp__536871779, NTI2197815305), Field1: nimCopy(null, colontmp__536871780, NTI2197815305)}, NTI2197815307);
            }
            
            i_536871781 = addInt(i_536871781, 1);
            if (!(((selections_2634032984).length == L_536871782))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2634023651(self_2634032983, delete_2634024564(self_2634032983.document, selections_2634032984, selections_2634023401(self_2634032983), true, true));
    updateTargetColumn_2634029387(self_2634032983, 3);

  
}

function deleteRightScript_2634032992(self_2634032993) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym424_2634032994 = getTextDocumentEditor_2634028826(self_2634032993);
      if (isNone_2634029170(rHEX60gensym424_2634032994)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2634032982(get_2634029190(rHEX60gensym424_2634032994));
  };

  
}

function deleteRightApi_2634033017(HEX3Atmp_2634032979) {
  var result_2634033018 = null;

    result_2634033018 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2634032992(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634032979, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym426_2634033024 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2634033029 = [mnewString(0)];
    fmtRes_2634033029[0].push.apply(fmtRes_2634033029[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033029, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym426_2634033024 || [],fmtRes_2634033029[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033018;

}

function getCommandCount_2634033038(self_2634033039) {
  var result_2634033040 = 0;

  BeforeRet: {
    result_2634033040 = self_2634033039.commandCount;
    break BeforeRet;
  };

  return result_2634033040;

}

function getCommandCountScript_2634033041(self_2634033042) {
  var result_2634033043 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym429_2634033044 = getTextDocumentEditor_2634028826(self_2634033042);
      if (isNone_2634029170(rHEX60gensym429_2634033044)) {
      break BeforeRet;
      }
      
    };
    result_2634033043 = getCommandCount_2634033038(get_2634029190(rHEX60gensym429_2634033044));
  };

  return result_2634033043;

}

function getCommandCountApi_2634033067(HEX3Atmp_2634033035) {
  var result_2634033068 = null;

  BeforeRet: {
    result_2634033068 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    result_2634033068 = toJson_2634029911(getCommandCountScript_2634033041(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033035, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym432_2634033078 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2634033083 = [mnewString(0)];
    fmtRes_2634033083[0].push.apply(fmtRes_2634033083[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033083, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym432_2634033078 || [],fmtRes_2634033083[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634033068;

}

function setCommandCount_2634033092(self_2634033093, count_2634033094) {
    self_2634033093.commandCount = count_2634033094;

  
}

function setCommandCountScript_2634033095(self_2634033096, count_2634033097) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym436_2634033098 = getTextDocumentEditor_2634028826(self_2634033096);
      if (isNone_2634029170(rHEX60gensym436_2634033098)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2634033092(get_2634029190(rHEX60gensym436_2634033098), count_2634033097);
  };

  
}

function setCommandCountApi_2634033121(HEX3Atmp_2634033089) {
  var result_2634033122 = null;

    result_2634033122 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2634033095(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033089, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634033089, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym438_2634033133 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2634033138 = [mnewString(0)];
    fmtRes_2634033138[0].push.apply(fmtRes_2634033138[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033138, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym438_2634033133 || [],fmtRes_2634033138[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033122;

}

function setCommandCountRestore_2634033147(self_2634033148, count_2634033149) {
    self_2634033148.commandCountRestore = count_2634033149;

  
}

function setCommandCountRestoreScript_2634033150(self_2634033151, count_2634033152) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym442_2634033153 = getTextDocumentEditor_2634028826(self_2634033151);
      if (isNone_2634029170(rHEX60gensym442_2634033153)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2634033147(get_2634029190(rHEX60gensym442_2634033153), count_2634033152);
  };

  
}

function setCommandCountRestoreApi_2634033176(HEX3Atmp_2634033144) {
  var result_2634033177 = null;

    result_2634033177 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2634033150(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033144, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634033144, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym444_2634033188 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2634033193 = [mnewString(0)];
    fmtRes_2634033193[0].push.apply(fmtRes_2634033193[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033193, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym444_2634033188 || [],fmtRes_2634033193[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033177;

}

function updateCommandCount_2634033202(self_2634033203, digit_2634033204) {
    self_2634033203.commandCount = addInt(mulInt(self_2634033203.commandCount, 10), digit_2634033204);

  
}

function updateCommandCountScript_2634033205(self_2634033206, digit_2634033207) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym448_2634033208 = getTextDocumentEditor_2634028826(self_2634033206);
      if (isNone_2634029170(rHEX60gensym448_2634033208)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2634033202(get_2634029190(rHEX60gensym448_2634033208), digit_2634033207);
  };

  
}

function updateCommandCountApi_2634033231(HEX3Atmp_2634033199) {
  var result_2634033232 = null;

    result_2634033232 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2634033205(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033199, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634033199, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2634033243 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2634033248 = [mnewString(0)];
    fmtRes_2634033248[0].push.apply(fmtRes_2634033248[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033248, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2634033243 || [],fmtRes_2634033248[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033232;

}

function setFlag_2634033257(self_2634033258, name_2634033259, value_2634033260) {
    setFlag_1325403328(self_2634033258.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2634033259 || []), value_2634033260);
    self_2634033258.dirty = true;

  
}

function setFlagScript_2634033261(self_2634033262, name_2634033263, value_2634033264) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym455_2634033265 = getTextDocumentEditor_2634028826(self_2634033262);
      if (isNone_2634029170(rHEX60gensym455_2634033265)) {
      break BeforeRet;
      }
      
    };
    setFlag_2634033257(get_2634029190(rHEX60gensym455_2634033265), name_2634033263, value_2634033264);
  };

  
}

function setFlagApi_2634033288(HEX3Atmp_2634033254) {
  var result_2634033289 = null;

    result_2634033289 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2634033261(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033254, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634033254, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634033254, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym457_2634033305 = [115,101,116,70,108,97,103];
    var fmtRes_2634033310 = [mnewString(0)];
    fmtRes_2634033310[0].push.apply(fmtRes_2634033310[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033310, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym457_2634033305 || [],fmtRes_2634033310[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033289;

}

function getFlag_2634033319(self_2634033320, name_2634033321) {
  var result_2634033322 = false;

  BeforeRet: {
    result_2634033322 = getFlag_1325403251(self_2634033320.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2634033321 || []), false);
    break BeforeRet;
  };

  return result_2634033322;

}

function getFlagScript_2634033323(self_2634033324, name_2634033325) {
  var result_2634033326 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym461_2634033327 = getTextDocumentEditor_2634028826(self_2634033324);
      if (isNone_2634029170(rHEX60gensym461_2634033327)) {
      break BeforeRet;
      }
      
    };
    result_2634033326 = getFlag_2634033319(get_2634029190(rHEX60gensym461_2634033327), name_2634033325);
  };

  return result_2634033326;

}

function getFlagApi_2634033350(HEX3Atmp_2634033316) {
  var result_2634033351 = null;

  BeforeRet: {
    result_2634033351 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2634033351 = toJson_2634033362(getFlagScript_2634033323(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033316, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634033316, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym464_2634033371 = [103,101,116,70,108,97,103];
    var fmtRes_2634033376 = [mnewString(0)];
    fmtRes_2634033376[0].push.apply(fmtRes_2634033376[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033376, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym464_2634033371 || [],fmtRes_2634033376[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634033351;

}

function runAction_2634033385(self_2634033386, action_2634033387, args_2634033388) {
  var result_2634033389 = false;

  BeforeRet: {
    result_2634033389 = (handleActionInternal_2634023258(self_2634033386, action_2634033387, args_2634033388) == 3);
    break BeforeRet;
  };

  return result_2634033389;

}

function runActionScript_2634033395(self_2634033396, action_2634033397, args_2634033398) {
  var result_2634033399 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym469_2634033400 = getTextDocumentEditor_2634028826(self_2634033396);
      if (isNone_2634029170(rHEX60gensym469_2634033400)) {
      break BeforeRet;
      }
      
    };
    result_2634033399 = runAction_2634033385(get_2634029190(rHEX60gensym469_2634033400), action_2634033397, args_2634033398);
  };

  return result_2634033399;

}

function runActionApi_2634033423(HEX3Atmp_2634033382) {
  var result_2634033424 = null;

  BeforeRet: {
    result_2634033424 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2634033424 = toJson_2634033362(runActionScript_2634033395(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033382, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634033382, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1660947548(HEX3Atmp_2634033382, 2)), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym472_2634033439 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2634033444 = [mnewString(0)];
    fmtRes_2634033444[0].push.apply(fmtRes_2634033444[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033444, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym472_2634033439 || [],fmtRes_2634033444[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634033424;

}

function charCategory_2634033449(c_2634033450) {
  var result_2634033451 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2634033450) || (c_2634033450 == 95))) {
    result_2634033451 = 0;
    break BeforeRet;
    }
    
    if (((c_2634033450 == 32) || (c_2634033450 == 9))) {
    result_2634033451 = 1;
    break BeforeRet;
    }
    
    result_2634033451 = 2;
    break BeforeRet;
  };

  return result_2634033451;

}

function findWordBoundary_2634033456(self_2634033457, cursor_2634033458) {
  var result_2634033459 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2634033460 = getLine_2634023265(self_2634033457.document, cursor_2634033458.Field0);
    result_2634033459 = nimCopy(result_2634033459, toSelection_2197815789(cursor_2634033458), NTI2197815307);
    if ((result_2634033459.Field0.Field1 == (line_2634033460).length)) {
    result_2634033459.Field0.Field1 = subInt(result_2634033459.Field0.Field1, 1);
    result_2634033459.Field1.Field1 = subInt(result_2634033459.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2634033459.Field0.Field1) && (result_2634033459.Field0.Field1 < (line_2634033460).length))) break Label2;
          var leftCategory_2634033471 = charCategory_2634033449(line_2634033460[chckIndx(subInt(result_2634033459.Field0.Field1, 1), 0, (line_2634033460).length - 1)]);
          var rightCategory_2634033472 = charCategory_2634033449(line_2634033460[chckIndx(result_2634033459.Field0.Field1, 0, (line_2634033460).length - 1)]);
          if (!((leftCategory_2634033471 == rightCategory_2634033472))) {
          break Label1;
          }
          
          result_2634033459.Field0.Field1 = subInt(result_2634033459.Field0.Field1, 1);
        }
    };
    if ((result_2634033459.Field1.Field1 < (line_2634033460).length)) {
    result_2634033459.Field1.Field1 = addInt(result_2634033459.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2634033459.Field1.Field1) && (result_2634033459.Field1.Field1 < (line_2634033460).length))) break Label4;
          var leftCategory_2634033481 = charCategory_2634033449(line_2634033460[chckIndx(subInt(result_2634033459.Field1.Field1, 1), 0, (line_2634033460).length - 1)]);
          var rightCategory_2634033482 = charCategory_2634033449(line_2634033460[chckIndx(result_2634033459.Field1.Field1, 0, (line_2634033460).length - 1)]);
          if (!((leftCategory_2634033481 == rightCategory_2634033482))) {
          break Label3;
          }
          
          result_2634033459.Field1.Field1 = addInt(result_2634033459.Field1.Field1, 1);
        }
    };

  return result_2634033459;

}

function findWordBoundaryScript_2634033487(self_2634033488, cursor_2634033489) {
  var result_2634033490 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym476_2634033491 = getTextDocumentEditor_2634028826(self_2634033488);
      if (isNone_2634029170(rHEX60gensym476_2634033491)) {
      break BeforeRet;
      }
      
    };
    result_2634033490 = nimCopy(result_2634033490, findWordBoundary_2634033456(get_2634029190(rHEX60gensym476_2634033491), cursor_2634033489), NTI2197815307);
  };

  return result_2634033490;

}

function findWordBoundaryApi_2634033514(HEX3Atmp_2634033453) {
  var result_2634033515 = null;

  BeforeRet: {
    result_2634033515 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2634033515 = toJson_2634029885(findWordBoundaryScript_2634033487(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033453, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030437(HEX5BHEX5D_1660947548(HEX3Atmp_2634033453, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym479_2634033530 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2634033535 = [mnewString(0)];
    fmtRes_2634033535[0].push.apply(fmtRes_2634033535[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033535, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym479_2634033530 || [],fmtRes_2634033535[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634033515;

}

function min_2197815631(a_2197815632, b_2197815633) {
  var result_2197815634 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2197815623(a_2197815632, b_2197815633)) {
    result_2197815634 = nimCopy(result_2197815634, a_2197815632, NTI2197815305);
    break BeforeRet;
    }
    
    result_2197815634 = nimCopy(result_2197815634, b_2197815633, NTI2197815305);
    break BeforeRet;
  };

  return result_2197815634;

}

function max_2197815635(a_2197815636, b_2197815637) {
  var result_2197815638 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2197815639(b_2197815637, a_2197815636)) {
    result_2197815638 = nimCopy(result_2197815638, a_2197815636, NTI2197815305);
    break BeforeRet;
    }
    
    result_2197815638 = nimCopy(result_2197815638, b_2197815637, NTI2197815305);
    break BeforeRet;
  };

  return result_2197815638;

}

function or_2197815783(a_2197815784, b_2197815785) {
  var result_2197815786 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2197815787 = normalized_2197815662(a_2197815784);
    var bn_2197815788 = normalized_2197815662(b_2197815785);
    var colontmp__536871859 = min_2197815631(an_2197815787.Field0, bn_2197815788.Field0);
    var colontmp__536871860 = max_2197815635(an_2197815787.Field1, bn_2197815788.Field1);
    result_2197815786 = nimCopy(result_2197815786, {Field0: nimCopy(null, colontmp__536871859, NTI2197815305), Field1: nimCopy(null, colontmp__536871860, NTI2197815305)}, NTI2197815307);
    break BeforeRet;
  };

  return result_2197815786;

}

function reverse_2197815665(selection_2197815666) {
  var result_2197815667 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__536871861 = nimCopy(null, selection_2197815666.Field1, NTI2197815305);
    var colontmp__536871862 = nimCopy(null, selection_2197815666.Field0, NTI2197815305);
    result_2197815667 = nimCopy(result_2197815667, {Field0: nimCopy(null, colontmp__536871861, NTI2197815305), Field1: nimCopy(null, colontmp__536871862, NTI2197815305)}, NTI2197815307);

  return result_2197815667;

}

function getSelectionForMove_2634033544(self_2634033545, cursor_2634033546, move_2634033547, count_2634033548) {
  var result_2634033549 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2634033547)) {
    case "word":
      result_2634033549 = nimCopy(result_2634033549, findWordBoundary_2634033456(self_2634033545, cursor_2634033546), NTI2197815307);
      Label1: {
        var __2634033554 = 0;
        var i_536871817 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_536871817 < count_2634033548)) break Label3;
              __2634033554 = i_536871817;
              result_2634033549 = nimCopy(result_2634033549, or_2197815783(or_2197815783(result_2634033549, findWordBoundary_2634033456(self_2634033545, result_2634033549.Field1)), findWordBoundary_2634033456(self_2634033545, result_2634033549.Field0)), NTI2197815307);
              i_536871817 = addInt(i_536871817, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2634033555 = getLine_2634023265(self_2634033545.document, cursor_2634033546.Field0);
      result_2634033549 = nimCopy(result_2634033549, findWordBoundary_2634033456(self_2634033545, cursor_2634033546), NTI2197815307);
      if (((cursor_2634033546.Field1 == 0) && (0 < cursor_2634033546.Field0))) {
      var colontmp__536871819 = subInt(cursor_2634033546.Field0, 1);
      var colontmp__536871820 = (getLine_2634023265(self_2634033545.document, subInt(cursor_2634033546.Field0, 1))).length;
      result_2634033549.Field0 = nimCopy(result_2634033549.Field0, {Field0: colontmp__536871819, Field1: colontmp__536871820}, NTI2197815305);
      }
      
      if (((cursor_2634033546.Field1 == (line_2634033555).length) && (cursor_2634033546.Field0 < subInt((self_2634033545.document.lines).length, 1)))) {
      var colontmp__536871821 = addInt(cursor_2634033546.Field0, 1);
      var colontmp__536871822 = 0;
      result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871821, Field1: colontmp__536871822}, NTI2197815305);
      }
      
      Label4: {
        var __2634033563 = 0;
        var i_536871828 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_536871828 < count_2634033548)) break Label6;
              __2634033563 = i_536871828;
              result_2634033549 = nimCopy(result_2634033549, or_2197815783(or_2197815783(result_2634033549, findWordBoundary_2634033456(self_2634033545, result_2634033549.Field1)), findWordBoundary_2634033456(self_2634033545, result_2634033549.Field0)), NTI2197815307);
              var line_2634033564 = getLine_2634023265(self_2634033545.document, result_2634033549.Field1.Field0);
              if (((result_2634033549.Field0.Field1 == 0) && (0 < result_2634033549.Field0.Field0))) {
              var colontmp__536871824 = subInt(result_2634033549.Field0.Field0, 1);
              var colontmp__536871825 = (getLine_2634023265(self_2634033545.document, subInt(result_2634033549.Field0.Field0, 1))).length;
              result_2634033549.Field0 = nimCopy(result_2634033549.Field0, {Field0: colontmp__536871824, Field1: colontmp__536871825}, NTI2197815305);
              }
              
              if (((result_2634033549.Field1.Field1 == (line_2634033564).length) && (result_2634033549.Field1.Field0 < subInt((self_2634033545.document.lines).length, 1)))) {
              var colontmp__536871826 = addInt(result_2634033549.Field1.Field0, 1);
              var colontmp__536871827 = 0;
              result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871826, Field1: colontmp__536871827}, NTI2197815305);
              }
              
              i_536871828 = addInt(i_536871828, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2634033549 = nimCopy(result_2634033549, reverse_2197815665(getSelectionForMove_2634033544(self_2634033545, {Field0: cursor_2634033546.Field0, Field1: nimMax(0, subInt(cursor_2634033546.Field1, 1))}, [119,111,114,100], count_2634033548)), NTI2197815307);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2634033549 = nimCopy(result_2634033549, reverse_2197815665(getSelectionForMove_2634033544(self_2634033545, {Field0: cursor_2634033546.Field0, Field1: nimMax(0, subInt(cursor_2634033546.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2634033548)), NTI2197815307);
      break BeforeRet;
      break;
    case "line":
      var colontmp__536871830 = {Field0: cursor_2634033546.Field0, Field1: 0};
      var colontmp__536871831 = {Field0: cursor_2634033546.Field0, Field1: (getLine_2634023265(self_2634033545.document, cursor_2634033546.Field0)).length};
      result_2634033549 = nimCopy(result_2634033549, {Field0: nimCopy(null, colontmp__536871830, NTI2197815305), Field1: nimCopy(null, colontmp__536871831, NTI2197815305)}, NTI2197815307);
      break;
    case "line-next":
      var colontmp__536871832 = {Field0: cursor_2634033546.Field0, Field1: 0};
      var colontmp__536871833 = {Field0: cursor_2634033546.Field0, Field1: (getLine_2634023265(self_2634033545.document, cursor_2634033546.Field0)).length};
      result_2634033549 = nimCopy(result_2634033549, {Field0: nimCopy(null, colontmp__536871832, NTI2197815305), Field1: nimCopy(null, colontmp__536871833, NTI2197815305)}, NTI2197815307);
      if ((addInt(result_2634033549.Field1.Field0, 1) < (self_2634033545.document.lines).length)) {
      var colontmp__536871834 = addInt(result_2634033549.Field1.Field0, 1);
      var colontmp__536871835 = 0;
      result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871834, Field1: colontmp__536871835}, NTI2197815305);
      }
      
      Label7: {
        var __2634033575 = 0;
        var i_536871839 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_536871839 < count_2634033548)) break Label9;
              __2634033575 = i_536871839;
              result_2634033549 = nimCopy(result_2634033549, or_2197815783(result_2634033549, {Field0: {Field0: result_2634033549.Field1.Field0, Field1: 0}, Field1: {Field0: result_2634033549.Field1.Field0, Field1: (getLine_2634023265(self_2634033545.document, result_2634033549.Field1.Field0)).length}}), NTI2197815307);
              if ((addInt(result_2634033549.Field1.Field0, 1) < (self_2634033545.document.lines).length)) {
              var colontmp__536871837 = addInt(result_2634033549.Field1.Field0, 1);
              var colontmp__536871838 = 0;
              result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871837, Field1: colontmp__536871838}, NTI2197815305);
              }
              
              i_536871839 = addInt(i_536871839, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__536871841 = 0;
      var colontmp__536871842 = 0;
      result_2634033549.Field0 = nimCopy(result_2634033549.Field0, {Field0: colontmp__536871841, Field1: colontmp__536871842}, NTI2197815305);
      var line_2634033582 = subInt((self_2634033545.document.lines).length, 1);
      var colontmp__536871843 = line_2634033582;
      var colontmp__536871844 = (getLine_2634023265(self_2634033545.document, line_2634033582)).length;
      result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871843, Field1: colontmp__536871844}, NTI2197815305);
      break;
    case "prev-find-result":
      result_2634033549 = nimCopy(result_2634033549, getPrevFindResult_2634028405(self_2634033545, cursor_2634033546, count_2634033548), NTI2197815307);
      break;
    case "next-find-result":
      result_2634033549 = nimCopy(result_2634033549, getNextFindResult_2634028409(self_2634033545, cursor_2634033546, count_2634033548), NTI2197815307);
      break;
    default: 
      if (nsuStartsWith(move_2634033547, [109,111,118,101,45,116,111,32])) {
      var str_2634033601 = HEX5BHEX5D_872416535(move_2634033547, HEX2EHEX2E_1056964704(8, 1));
      var line_2634033602 = getLine_2634023265(self_2634033545.document, cursor_2634033546.Field0);
      result_2634033549 = nimCopy(result_2634033549, toSelection_2197815789(cursor_2634033546), NTI2197815307);
      var index_2634033603 = nsuFindStr(line_2634033602, str_2634033601, chckRange(cursor_2634033546.Field1, 0, 2147483647), -1);
      if ((0 <= index_2634033603)) {
      var colontmp__536871845 = cursor_2634033546.Field0;
      var colontmp__536871846 = addInt(index_2634033603, 1);
      result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871845, Field1: colontmp__536871846}, NTI2197815305);
      }
      
      Label10: {
        var __2634033608 = 0;
        var i_536871850 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_536871850 < count_2634033548)) break Label12;
              __2634033608 = i_536871850;
              var index_2634033609 = nsuFindStr(line_2634033602, str_2634033601, chckRange(result_2634033549.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2634033609)) {
              var colontmp__536871848 = result_2634033549.Field1.Field0;
              var colontmp__536871849 = addInt(index_2634033609, 1);
              result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871848, Field1: colontmp__536871849}, NTI2197815305);
              }
              
              i_536871850 = addInt(i_536871850, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2634033547, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2634033628 = HEX5BHEX5D_872416535(move_2634033547, HEX2EHEX2E_1056964704(12, 1));
      var line_2634033629 = getLine_2634023265(self_2634033545.document, cursor_2634033546.Field0);
      result_2634033549 = nimCopy(result_2634033549, toSelection_2197815789(cursor_2634033546), NTI2197815307);
      var index_2634033630 = nsuFindStr(line_2634033629, str_2634033628, chckRange(addInt(cursor_2634033546.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2634033630)) {
      var colontmp__536871852 = cursor_2634033546.Field0;
      var colontmp__536871853 = index_2634033630;
      result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871852, Field1: colontmp__536871853}, NTI2197815305);
      }
      
      Label13: {
        var __2634033635 = 0;
        var i_536871857 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_536871857 < count_2634033548)) break Label15;
              __2634033635 = i_536871857;
              var index_2634033636 = nsuFindStr(line_2634033629, str_2634033628, chckRange(addInt(result_2634033549.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2634033636)) {
              var colontmp__536871855 = result_2634033549.Field1.Field0;
              var colontmp__536871856 = index_2634033636;
              result_2634033549.Field1 = nimCopy(result_2634033549.Field1, {Field0: colontmp__536871855, Field1: colontmp__536871856}, NTI2197815305);
              }
              
              i_536871857 = addInt(i_536871857, 1);
            }
        };
      };
      }
      else {
        result_2634033549 = nimCopy(result_2634033549, toSelection_2197815789(cursor_2634033546), NTI2197815307);
        var fmtRes_2634033641 = [mnewString(0)];
        fmtRes_2634033641[0].push.apply(fmtRes_2634033641[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_738197675(fmtRes_2634033641, 0, move_2634033547, []);
        fmtRes_2634033641[0].push.apply(fmtRes_2634033641[0], [39]);;
        log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2634033641[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2634033549;

}

function getSelectionForMoveScript_2634033642(self_2634033643, cursor_2634033644, move_2634033645, count_2634033646) {
  var result_2634033647 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym489_2634033648 = getTextDocumentEditor_2634028826(self_2634033643);
      if (isNone_2634029170(rHEX60gensym489_2634033648)) {
      break BeforeRet;
      }
      
    };
    result_2634033647 = nimCopy(result_2634033647, getSelectionForMove_2634033544(get_2634029190(rHEX60gensym489_2634033648), cursor_2634033644, move_2634033645, count_2634033646), NTI2197815307);
  };

  return result_2634033647;

}

function getSelectionForMoveApi_2634033671(HEX3Atmp_2634033541) {
      var Temporary6;

  var result_2634033672 = null;

  BeforeRet: {
    result_2634033672 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1660947415(HEX3Atmp_2634033541))) {
      Temporary6 = jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634033541, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2634033672 = toJson_2634029885(getSelectionForMoveScript_2634033642(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033541, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030437(HEX5BHEX5D_1660947548(HEX3Atmp_2634033541, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634033541, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym492_2634033697 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2634033702 = [mnewString(0)];
    fmtRes_2634033702[0].push.apply(fmtRes_2634033702[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033702, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym492_2634033697 || [],fmtRes_2634033702[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2634033672;

}

function setOption_2634033739(editor_2634033741, path_2634033742, value_2634033743) {
  BeforeRet: {
    Label1: {
      if ((editor_2634033741 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym511_2634033758 = nsuSplitString(path_2634033742, [46], -1);
      var nodeHEX60gensym511_2634033759 = editor_2634033741.options;
      Label2: {
        var keyHEX60gensym511_2634033795 = [];
        var colontmp__536871868 = [];
        colontmp__536871868 = HEX5BHEX5D_2634033769(pathItemsHEX60gensym511_2634033758, HEX2EHEX2E_1056964704(0, 2));
        var i_536871869 = 0;
        var L_536871870 = (colontmp__536871868).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536871869 < L_536871870)) break Label4;
              keyHEX60gensym511_2634033795 = colontmp__536871868[chckIndx(i_536871869, 0, (colontmp__536871868).length - 1)];
              if (!((nodeHEX60gensym511_2634033759.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1660947644(nodeHEX60gensym511_2634033759, keyHEX60gensym511_2634033795))) {
              HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym511_2634033759, keyHEX60gensym511_2634033795, newJObject_1660944483());
              }
              
              nodeHEX60gensym511_2634033759 = HEX5BHEX5D_1660947469(nodeHEX60gensym511_2634033759, keyHEX60gensym511_2634033795);
              i_536871869 = addInt(i_536871869, 1);
              if (!(((colontmp__536871868).length == L_536871870))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym511_2634033759 == null) || !((nodeHEX60gensym511_2634033759.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym511_2634033759, HEX5BHEX5D_2600469248(pathItemsHEX60gensym511_2634033758, 1), newJInt_1660944472(value_2634033743));
    };
  };

  
}

function getOption_2634033811(editor_2634033813, path_2634033814, default_2634033815) {
  var result_2634033820 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2634033813 == null)) {
      result_2634033820 = nimCopy(null, default_2634033815, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym516_2634033833 = HEX7BHEX7D_1660947748(editor_2634033813.options, nsuSplitString(path_2634033814, [46], -1));
      if ((nodeHEX60gensym516_2634033833 == null)) {
      result_2634033820 = nimCopy(null, default_2634033815, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2634033820 = nimCopy(null, getStr_1660944538(nodeHEX60gensym516_2634033833, default_2634033815), NTI33554449);
    break BeforeRet;
  };

  return result_2634033820;

}

function getInt_1660944550(n_1660944551, default_1660944552) {
      var Temporary1;

  var result_1660944553 = 0;

  BeforeRet: {
    if (((n_1660944551 == null) || !((n_1660944551.kind == 2)))) {
    result_1660944553 = default_1660944552;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1660944551;
      if (ConstSet249[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
      result_1660944553 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1660944553;

}

function getOption_2634033837(editor_2634033839, path_2634033840, default_2634033841) {
  var result_2634033846 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2634033839 == null)) {
      result_2634033846 = default_2634033841;
      break BeforeRet;
      }
      
      var nodeHEX60gensym517_2634033858 = HEX7BHEX7D_1660947748(editor_2634033839.options, nsuSplitString(path_2634033840, [46], -1));
      if ((nodeHEX60gensym517_2634033858 == null)) {
      result_2634033846 = default_2634033841;
      break BeforeRet;
      }
      
    };
    result_2634033846 = getInt_1660944550(nodeHEX60gensym517_2634033858, default_2634033841);
    break BeforeRet;
  };

  return result_2634033846;

}

function setOption_2634033871(editor_2634033873, path_2634033874, value_2634033875) {
  BeforeRet: {
    Label1: {
      if ((editor_2634033873 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym518_2634033891 = nsuSplitString(path_2634033874, [46], -1);
      var nodeHEX60gensym518_2634033892 = editor_2634033873.options;
      Label2: {
        var keyHEX60gensym518_2634033911 = [];
        var colontmp__536871876 = [];
        colontmp__536871876 = HEX5BHEX5D_2634033769(pathItemsHEX60gensym518_2634033891, HEX2EHEX2E_1056964704(0, 2));
        var i_536871877 = 0;
        var L_536871878 = (colontmp__536871876).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536871877 < L_536871878)) break Label4;
              keyHEX60gensym518_2634033911 = colontmp__536871876[chckIndx(i_536871877, 0, (colontmp__536871876).length - 1)];
              if (!((nodeHEX60gensym518_2634033892.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1660947644(nodeHEX60gensym518_2634033892, keyHEX60gensym518_2634033911))) {
              HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym518_2634033892, keyHEX60gensym518_2634033911, newJObject_1660944483());
              }
              
              nodeHEX60gensym518_2634033892 = HEX5BHEX5D_1660947469(nodeHEX60gensym518_2634033892, keyHEX60gensym518_2634033911);
              i_536871877 = addInt(i_536871877, 1);
              if (!(((colontmp__536871876).length == L_536871878))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym518_2634033892 == null) || !((nodeHEX60gensym518_2634033892.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym518_2634033892, HEX5BHEX5D_2600469248(pathItemsHEX60gensym518_2634033891, 1), newJString_1660944426(value_2634033875));
    };
  };

  
}

function setMove_2634033736(self_2634033737, args_2634033738) {
    setOption_2634033739(self_2634033737.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2634033038(self_2634033737));
    setMode_2634029095(self_2634033737, getOption_2634033811(self_2634033737.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2634033092(self_2634033737, getOption_2634033837(self_2634033737.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2634033385(self_2634033737, getOption_2634033811(self_2634033737.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2634033738);
    setOption_2634033871(self_2634033737.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveScript_2634033927(self_2634033928, args_2634033929) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym508_2634033930 = getTextDocumentEditor_2634028826(self_2634033928);
      if (isNone_2634029170(rHEX60gensym508_2634033930)) {
      break BeforeRet;
      }
      
    };
    setMove_2634033736(get_2634029190(rHEX60gensym508_2634033930), args_2634033929);
  };

  
}

function HEX5BHEX5D_2634033967(a_2634033970, x_2634033971) {
  var result_2634033972 = null;

    if (!((a_2634033970.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2634033972 = newJArray_1660944514();
    var xa_2634033983 = x_2634033971.a;
    var L_2634033985 = addInt(subInt(subInt(len_1660947415(a_2634033970), x_2634033971.b), xa_2634033983), 1);
    Label1: {
      var i_2634033990 = 0;
      var i_536871881 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871881 < L_2634033985)) break Label3;
            i_2634033990 = i_536871881;
            add_1660944622(result_2634033972, HEX5BHEX5D_1660947548(a_2634033970, addInt(i_2634033990, xa_2634033983)));
            i_536871881 = addInt(i_536871881, 1);
          }
      };
    };

  return result_2634033972;

}

function setMoveApi_2634033953(HEX3Atmp_2634033733) {
  var result_2634033954 = null;

    result_2634033954 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2634033927(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634033733, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2634033967(HEX3Atmp_2634033733, HEX2EHEX2E_1056964704(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym510_2634033991 = [115,101,116,77,111,118,101];
    var fmtRes_2634033996 = [mnewString(0)];
    fmtRes_2634033996[0].push.apply(fmtRes_2634033996[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634033996, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym510_2634033991 || [],fmtRes_2634033996[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634033954;

}

function deleteMove_2634034005(self_2634034006, move_2634034007, which_2634034008, all_2634034009) {
    move_2634034007 = nimCopy(null, move_2634034007, NTI33554449);
    
function HEX3Aanonymous_2634034021(s_2634034028) {
        var Temporary1;

      var result_2634034031 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2634034020) {
        Temporary1 = getSelectionForMove_2634033544(self_2634034006, s_2634034028.Field1, move_2634034007, count_2634034019);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2634034028.Field1, NTI2197815305), Field1: nimCopy(null, getSelectionForMove_2634033544(self_2634034006, s_2634034028.Field1, move_2634034007, count_2634034019).Field1, NTI2197815305)};
        }
        
        result_2634034031 = nimCopy(result_2634034031, Temporary1, NTI2197815307);

      return result_2634034031;

    }

    var count_2634034019 = getOption_2634033837(self_2634034006.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2634034020 = getFlag_2634033319(self_2634034006, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2634034038 = map_2634023334(selections_2634023401(self_2634034006), HEX3Aanonymous_2634034021);
    selectionsHEX3D_2634023651(self_2634034006, delete_2634024564(self_2634034006.document, selections_2634034038, selections_2634023401(self_2634034006), true, true));
    scrollToCursor_2634028936(self_2634034006, 3);
    updateTargetColumn_2634029387(self_2634034006, 3);

  
}

function deleteMoveScript_2634034040(self_2634034041, move_2634034042, which_2634034043, all_2634034044) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym532_2634034045 = getTextDocumentEditor_2634028826(self_2634034041);
      if (isNone_2634029170(rHEX60gensym532_2634034045)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2634034005(get_2634029190(rHEX60gensym532_2634034045), move_2634034042, which_2634034043, all_2634034044);
  };

  
}

function deleteMoveApi_2634034068(HEX3Atmp_2634034002) {
      var Temporary5;
      var Temporary7;

  var result_2634034069 = null;

    result_2634034069 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034002))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634034002, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634034002))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634034002, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2634034040(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034002, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034002, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym534_2634034090 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2634034095 = [mnewString(0)];
    fmtRes_2634034095[0].push.apply(fmtRes_2634034095[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034095, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym534_2634034090 || [],fmtRes_2634034095[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034069;

}

function mapAllOrLast_2634034127(self_2634034129, all_2634034130, p_2634034132) {
    
function HEX3Aanonymous_2634034134(s_2634034141) {
      var result_2634034144 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2634034144 = nimCopy(result_2634034144, p_2634034132(s_2634034141), NTI2197815307);

      return result_2634034144;

    }

  var result_2634034133 = [];

    if (all_2634034130) {
    result_2634034133 = nimCopy(null, map_2634023334(self_2634034129, HEX3Aanonymous_2634034134), NTI2634023218);
    }
    else {
      result_2634034133 = nimCopy(null, self_2634034129, NTI2634030781);
      if ((0 < (result_2634034133).length)) {
      result_2634034133[chckIndx((result_2634034133).length - 1, 0, (result_2634034133).length - 1)] = nimCopy(result_2634034133[chckIndx((result_2634034133).length - 1, 0, (result_2634034133).length - 1)], p_2634034132(result_2634034133[chckIndx((result_2634034133).length - 1, 0, (result_2634034133).length - 1)]), NTI2197815307);
      }
      
    }
    

  return result_2634034133;

}

function selectMove_2634034104(self_2634034105, move_2634034106, which_2634034107, all_2634034108) {
    move_2634034106 = nimCopy(null, move_2634034106, NTI33554449);
    
function HEX3Aanonymous_2634034119(s_2634034122) {
      var result_2634034125 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2634034125 = nimCopy(result_2634034125, getSelectionForMove_2634033544(self_2634034105, s_2634034122.Field1, move_2634034106, count_2634034118), NTI2197815307);

      return result_2634034125;

    }

    var count_2634034118 = getOption_2634033837(self_2634034105.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2634023651(self_2634034105, mapAllOrLast_2634034127(selections_2634023401(self_2634034105), all_2634034108, HEX3Aanonymous_2634034119));
    scrollToCursor_2634028936(self_2634034105, 3);
    updateTargetColumn_2634029387(self_2634034105, 3);

  
}

function selectMoveScript_2634034164(self_2634034165, move_2634034166, which_2634034167, all_2634034168) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym542_2634034169 = getTextDocumentEditor_2634028826(self_2634034165);
      if (isNone_2634029170(rHEX60gensym542_2634034169)) {
      break BeforeRet;
      }
      
    };
    selectMove_2634034104(get_2634029190(rHEX60gensym542_2634034169), move_2634034166, which_2634034167, all_2634034168);
  };

  
}

function selectMoveApi_2634034192(HEX3Atmp_2634034101) {
      var Temporary5;
      var Temporary7;

  var result_2634034193 = null;

    result_2634034193 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034101))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634034101, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634034101))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634034101, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2634034164(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034101, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034101, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym544_2634034214 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2634034219 = [mnewString(0)];
    fmtRes_2634034219[0].push.apply(fmtRes_2634034219[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034219, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym544_2634034214 || [],fmtRes_2634034219[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034193;

}

function changeMove_2634034228(self_2634034229, move_2634034230, which_2634034231, all_2634034232) {
    move_2634034230 = nimCopy(null, move_2634034230, NTI33554449);
    
function HEX3Aanonymous_2634034244(s_2634034251) {
        var Temporary1;

      var result_2634034254 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2634034243) {
        Temporary1 = getSelectionForMove_2634033544(self_2634034229, s_2634034251.Field1, move_2634034230, count_2634034242);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2634034251.Field1, NTI2197815305), Field1: nimCopy(null, getSelectionForMove_2634033544(self_2634034229, s_2634034251.Field1, move_2634034230, count_2634034242).Field1, NTI2197815305)};
        }
        
        result_2634034254 = nimCopy(result_2634034254, Temporary1, NTI2197815307);

      return result_2634034254;

    }

    var count_2634034242 = getOption_2634033837(self_2634034229.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2634034243 = getFlag_2634033319(self_2634034229, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2634034261 = map_2634023334(selections_2634023401(self_2634034229), HEX3Aanonymous_2634034244);
    selectionsHEX3D_2634023651(self_2634034229, delete_2634024564(self_2634034229.document, selections_2634034261, selections_2634023401(self_2634034229), true, true));
    scrollToCursor_2634028936(self_2634034229, 3);
    updateTargetColumn_2634029387(self_2634034229, 3);

  
}

function changeMoveScript_2634034263(self_2634034264, move_2634034265, which_2634034266, all_2634034267) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym553_2634034268 = getTextDocumentEditor_2634028826(self_2634034264);
      if (isNone_2634029170(rHEX60gensym553_2634034268)) {
      break BeforeRet;
      }
      
    };
    changeMove_2634034228(get_2634029190(rHEX60gensym553_2634034268), move_2634034265, which_2634034266, all_2634034267);
  };

  
}

function changeMoveApi_2634034291(HEX3Atmp_2634034225) {
      var Temporary5;
      var Temporary7;

  var result_2634034292 = null;

    result_2634034292 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034225))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634034225, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634034225))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634034225, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2634034263(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034225, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034225, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym555_2634034313 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2634034318 = [mnewString(0)];
    fmtRes_2634034318[0].push.apply(fmtRes_2634034318[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034318, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym555_2634034313 || [],fmtRes_2634034318[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034292;

}

function toSelection_2197815792(cursor_2197815793, default_2197815794, which_2197815795) {
  var result_2197815796 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2197815795) {
    case 0:
      result_2197815796 = nimCopy(result_2197815796, default_2197815794, NTI2197815307);
      break BeforeRet;
      break;
    case 1:
      var colontmp__536871903 = nimCopy(null, cursor_2197815793, NTI2197815305);
      var colontmp__536871904 = nimCopy(null, cursor_2197815793, NTI2197815305);
      result_2197815796 = nimCopy(result_2197815796, {Field0: nimCopy(null, colontmp__536871903, NTI2197815305), Field1: nimCopy(null, colontmp__536871904, NTI2197815305)}, NTI2197815307);
      break BeforeRet;
      break;
    case 2:
      var colontmp__536871905 = nimCopy(null, cursor_2197815793, NTI2197815305);
      var colontmp__536871906 = nimCopy(null, default_2197815794.Field1, NTI2197815305);
      result_2197815796 = nimCopy(result_2197815796, {Field0: nimCopy(null, colontmp__536871905, NTI2197815305), Field1: nimCopy(null, colontmp__536871906, NTI2197815305)}, NTI2197815307);
      break BeforeRet;
      break;
    case 3:
      var colontmp__536871907 = nimCopy(null, default_2197815794.Field0, NTI2197815305);
      var colontmp__536871908 = nimCopy(null, cursor_2197815793, NTI2197815305);
      result_2197815796 = nimCopy(result_2197815796, {Field0: nimCopy(null, colontmp__536871907, NTI2197815305), Field1: nimCopy(null, colontmp__536871908, NTI2197815305)}, NTI2197815307);
      break BeforeRet;
      break;
    case 4:
      var colontmp__536871909 = nimCopy(null, default_2197815794.Field1, NTI2197815305);
      var colontmp__536871910 = nimCopy(null, cursor_2197815793, NTI2197815305);
      result_2197815796 = nimCopy(result_2197815796, {Field0: nimCopy(null, colontmp__536871909, NTI2197815305), Field1: nimCopy(null, colontmp__536871910, NTI2197815305)}, NTI2197815307);
      break BeforeRet;
      break;
    }
  };

  return result_2197815796;

}

function cursor_2634033718(self_2634033719, selection_2634033720, which_2634033721) {
  var result_2634033722 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2634033721) {
    case 0:
      result_2634033722 = nimCopy(result_2634033722, cursor_2634033718(self_2634033719, selection_2634033720, getOption_2634028511(self_2634033719.editor, getContextWithMode_2634028476(self_2634033719, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2197815305);
      break BeforeRet;
      break;
    case 1:
      result_2634033722 = nimCopy(result_2634033722, selection_2634033720.Field1, NTI2197815305);
      break BeforeRet;
      break;
    case 2:
      result_2634033722 = nimCopy(result_2634033722, selection_2634033720.Field0, NTI2197815305);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2634033722 = nimCopy(result_2634033722, selection_2634033720.Field1, NTI2197815305);
      break BeforeRet;
      break;
    }
  };

  return result_2634033722;

}

function moveLast_2634034327(self_2634034328, move_2634034329, which_2634034330, all_2634034331) {
      move_2634034329 = nimCopy(null, move_2634034329, NTI33554449);
      
function HEX3Aanonymous_2634034332(s_2634034335) {
        var result_2634034338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2634034338 = nimCopy(result_2634034338, toSelection_2197815792(getSelectionForMove_2634033544(self_2634034328, cursor_2634033718(self_2634034328, s_2634034335, which_2634034330), move_2634034329, 0).Field1, s_2634034335, getOption_2634028511(self_2634034328.editor, getContextWithMode_2634028476(self_2634034328, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2197815307);

        return result_2634034338;

      }
      
function HEX3Aanonymous_2634034355(s_2634034358) {
        var result_2634034361 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2634034361 = nimCopy(result_2634034361, toSelection_2197815792(getSelectionForMove_2634033544(self_2634034328, cursor_2634033718(self_2634034328, s_2634034358, which_2634034330), move_2634034329, 0).Field1, s_2634034358, which_2634034330), NTI2197815307);

        return result_2634034361;

      }

    switch (which_2634034330) {
    case 0:
      selectionsHEX3D_2634023651(self_2634034328, mapAllOrLast_2634034127(selections_2634023401(self_2634034328), all_2634034331, HEX3Aanonymous_2634034332));
      break;
    default: 
      selectionsHEX3D_2634023651(self_2634034328, mapAllOrLast_2634034127(selections_2634023401(self_2634034328), all_2634034331, HEX3Aanonymous_2634034355));
      break;
    }
    scrollToCursor_2634028936(self_2634034328, which_2634034330);
    updateTargetColumn_2634029387(self_2634034328, which_2634034330);

  
}

function moveLastScript_2634034369(self_2634034370, move_2634034371, which_2634034372, all_2634034373) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym563_2634034374 = getTextDocumentEditor_2634028826(self_2634034370);
      if (isNone_2634029170(rHEX60gensym563_2634034374)) {
      break BeforeRet;
      }
      
    };
    moveLast_2634034327(get_2634029190(rHEX60gensym563_2634034374), move_2634034371, which_2634034372, all_2634034373);
  };

  
}

function moveLastApi_2634034397(HEX3Atmp_2634034324) {
      var Temporary5;
      var Temporary7;

  var result_2634034398 = null;

    result_2634034398 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034324))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634034324, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634034324))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634034324, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveLastScript_2634034369(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034324, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034324, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_2634034419 = [109,111,118,101,76,97,115,116];
    var fmtRes_2634034424 = [mnewString(0)];
    fmtRes_2634034424[0].push.apply(fmtRes_2634034424[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034424, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_2634034419 || [],fmtRes_2634034424[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034398;

}

function moveFirst_2634034433(self_2634034434, move_2634034435, which_2634034436, all_2634034437) {
      move_2634034435 = nimCopy(null, move_2634034435, NTI33554449);
      
function HEX3Aanonymous_2634034438(s_2634034441) {
        var result_2634034444 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2634034444 = nimCopy(result_2634034444, toSelection_2197815792(getSelectionForMove_2634033544(self_2634034434, cursor_2634033718(self_2634034434, s_2634034441, which_2634034436), move_2634034435, 0).Field0, s_2634034441, getOption_2634028511(self_2634034434.editor, getContextWithMode_2634028476(self_2634034434, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2197815307);

        return result_2634034444;

      }
      
function HEX3Aanonymous_2634034461(s_2634034464) {
        var result_2634034467 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2634034467 = nimCopy(result_2634034467, toSelection_2197815792(getSelectionForMove_2634033544(self_2634034434, cursor_2634033718(self_2634034434, s_2634034464, which_2634034436), move_2634034435, 0).Field0, s_2634034464, which_2634034436), NTI2197815307);

        return result_2634034467;

      }

    switch (which_2634034436) {
    case 0:
      selectionsHEX3D_2634023651(self_2634034434, mapAllOrLast_2634034127(selections_2634023401(self_2634034434), all_2634034437, HEX3Aanonymous_2634034438));
      break;
    default: 
      selectionsHEX3D_2634023651(self_2634034434, mapAllOrLast_2634034127(selections_2634023401(self_2634034434), all_2634034437, HEX3Aanonymous_2634034461));
      break;
    }
    scrollToCursor_2634028936(self_2634034434, which_2634034436);
    updateTargetColumn_2634029387(self_2634034434, which_2634034436);

  
}

function moveFirstScript_2634034475(self_2634034476, move_2634034477, which_2634034478, all_2634034479) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym573_2634034480 = getTextDocumentEditor_2634028826(self_2634034476);
      if (isNone_2634029170(rHEX60gensym573_2634034480)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2634034433(get_2634029190(rHEX60gensym573_2634034480), move_2634034477, which_2634034478, all_2634034479);
  };

  
}

function moveFirstApi_2634034503(HEX3Atmp_2634034430) {
      var Temporary5;
      var Temporary7;

  var result_2634034504 = null;

    result_2634034504 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034430))) {
      Temporary5 = jsonTo_2634029423(HEX5BHEX5D_1660947548(HEX3Atmp_2634034430, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1660947415(HEX3Atmp_2634034430))) {
      Temporary7 = jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2634034430, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveFirstScript_2634034475(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034430, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034430, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym575_2634034525 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2634034530 = [mnewString(0)];
    fmtRes_2634034530[0].push.apply(fmtRes_2634034530[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034530, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym575_2634034525 || [],fmtRes_2634034530[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034504;

}

function some_2634034542(val_2634034544) {
  var result_2634034545 = ({val: ({}), has: false});

    result_2634034545.has = true;
    result_2634034545.val = nimCopy(result_2634034545.val, val_2634034544, NTI2684354563);

  return result_2634034545;

}

function setSearchQuery_2634034539(self_2634034540, query_2634034541) {
    self_2634034540.searchQuery = nimCopy(null, query_2634034541, NTI33554449);
    self_2634034540.searchRegex = nimCopy(self_2634034540.searchRegex, some_2634034542(re_2684354575(query_2634034541)), NTI2634023132);
    updateSearchResults_2634025362(self_2634034540);

  
}

function setSearchQueryScript_2634034556(self_2634034557, query_2634034558) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2634034559 = getTextDocumentEditor_2634028826(self_2634034557);
      if (isNone_2634029170(rHEX60gensym581_2634034559)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2634034539(get_2634029190(rHEX60gensym581_2634034559), query_2634034558);
  };

  
}

function setSearchQueryApi_2634034582(HEX3Atmp_2634034536) {
  var result_2634034583 = null;

    result_2634034583 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2634034556(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034536, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034536, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_2634034594 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2634034599 = [mnewString(0)];
    fmtRes_2634034599[0].push.apply(fmtRes_2634034599[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034599, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_2634034594 || [],fmtRes_2634034599[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034583;

}

function setSearchQueryFromMove_2634034608(self_2634034609, move_2634034610, count_2634034611) {
    var selection_2634034612 = getSelectionForMove_2634033544(self_2634034609, selection_2634023404(self_2634034609).Field1, move_2634034610, count_2634034611);
    selectionHEX3D_2634023410(self_2634034609, selection_2634034612);
    setSearchQuery_2634034539(self_2634034609, contentString_2634024061(self_2634034609.document, selection_2634034612));

  
}

function setSearchQueryFromMoveScript_2634034613(self_2634034614, move_2634034615, count_2634034616) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym588_2634034617 = getTextDocumentEditor_2634028826(self_2634034614);
      if (isNone_2634029170(rHEX60gensym588_2634034617)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2634034608(get_2634029190(rHEX60gensym588_2634034617), move_2634034615, count_2634034616);
  };

  
}

function setSearchQueryFromMoveApi_2634034640(HEX3Atmp_2634034605) {
      var Temporary5;

  var result_2634034641 = null;

    result_2634034641 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1660947415(HEX3Atmp_2634034605))) {
      Temporary5 = jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2634034605, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2634034613(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034605, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2634034605, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym590_2634034657 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2634034662 = [mnewString(0)];
    fmtRes_2634034662[0].push.apply(fmtRes_2634034662[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034662, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym590_2634034657 || [],fmtRes_2634034662[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034641;

}

function isSome_2634034775(self_2634034777) {
  var result_2634034778 = false;

    result_2634034778 = self_2634034777.has;

  return result_2634034778;

}

function isNone_2634034800(self_2634034802) {
  var result_2634034803 = false;

    result_2634034803 = !(self_2634034802.has);

  return result_2634034803;

}

function get_2634034792(self_2634034794) {
  var result_2634034795 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2634034800(self_2634034794)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634034795 = self_2634034794.val;

  return result_2634034795;

}
async function gotoDefinitionAsync_2634034705(self_2634034706) {
  var result_2634034708 = null;

  BeforeRet: {
    var languageServer_2634034718 = (await getLanguageServer_2634034670(self_2634034706));
    if (isNone_2634024466(languageServer_2634034718)) {
    result_2634034708 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2634024438(languageServer_2634034718)) {
    var definition_2634034770 = (await getDefinition_2667577386(get_2634034745(languageServer_2634034718), self_2634034706.document.filename, selection_2634023404(self_2634034706).Field1));
    if (isSome_2634034775(definition_2634034770)) {
    selectionHEX3D_2634023410(self_2634034706, toSelection_2197815789(get_2634034792(definition_2634034770).location));
    }
    
    }
    
    result_2634034708 = undefined;
    break BeforeRet;
  };

  return result_2634034708;

}

function gotoDefinition_2634034925(self_2634034926) {
    var _ = gotoDefinitionAsync_2634034705(self_2634034926);

  
}

function gotoDefinitionScript_2634034927(self_2634034928) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym607_2634034929 = getTextDocumentEditor_2634028826(self_2634034928);
      if (isNone_2634029170(rHEX60gensym607_2634034929)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2634034925(get_2634029190(rHEX60gensym607_2634034929));
  };

  
}

function gotoDefinitionApi_2634034952(HEX3Atmp_2634034922) {
  var result_2634034953 = null;

    result_2634034953 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2634034927(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034922, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym609_2634034959 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2634034964 = [mnewString(0)];
    fmtRes_2634034964[0].push.apply(fmtRes_2634034964[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634034964, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym609_2634034959 || [],fmtRes_2634034964[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634034953;

}

function getCompletions_2634034973(self_2634034974) {
    var _ = getCompletionsAsync_2634030718(self_2634034974);

  
}

function getCompletionsScript_2634034975(self_2634034976) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym613_2634034977 = getTextDocumentEditor_2634028826(self_2634034976);
      if (isNone_2634029170(rHEX60gensym613_2634034977)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2634034973(get_2634029190(rHEX60gensym613_2634034977));
  };

  
}

function getCompletionsApi_2634035000(HEX3Atmp_2634034970) {
  var result_2634035001 = null;

    result_2634035001 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2634034975(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634034970, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym615_2634035007 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2634035012 = [mnewString(0)];
    fmtRes_2634035012[0].push.apply(fmtRes_2634035012[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634035012, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym615_2634035007 || [],fmtRes_2634035012[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634035001;

}

function hideCompletions_2634035021(self_2634035022) {
    self_2634035022.showCompletions = false;
    self_2634035022.dirty = true;

  
}

function hideCompletionsScript_2634035023(self_2634035024) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym619_2634035025 = getTextDocumentEditor_2634028826(self_2634035024);
      if (isNone_2634029170(rHEX60gensym619_2634035025)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2634035021(get_2634029190(rHEX60gensym619_2634035025));
  };

  
}

function hideCompletionsApi_2634035048(HEX3Atmp_2634035018) {
  var result_2634035049 = null;

    result_2634035049 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2634035023(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634035018, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2634035055 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2634035060 = [mnewString(0)];
    fmtRes_2634035060[0].push.apply(fmtRes_2634035060[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634035060, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2634035055 || [],fmtRes_2634035060[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634035049;

}

function selectPrevCompletion_2634035069(self_2634035070) {
    if ((0 < (self_2634035070.completions).length)) {
    self_2634035070.selectedCompletion = clamp_1694499551(subInt(self_2634035070.selectedCompletion, 1), 0, subInt((self_2634035070.completions).length, 1));
    }
    else {
      self_2634035070.selectedCompletion = 0;
    }
    
    self_2634035070.dirty = true;

  
}

function selectPrevCompletionScript_2634035085(self_2634035086) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym624_2634035087 = getTextDocumentEditor_2634028826(self_2634035086);
      if (isNone_2634029170(rHEX60gensym624_2634035087)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2634035069(get_2634029190(rHEX60gensym624_2634035087));
  };

  
}

function selectPrevCompletionApi_2634035110(HEX3Atmp_2634035066) {
  var result_2634035111 = null;

    result_2634035111 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2634035085(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634035066, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym626_2634035117 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2634035122 = [mnewString(0)];
    fmtRes_2634035122[0].push.apply(fmtRes_2634035122[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634035122, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym626_2634035117 || [],fmtRes_2634035122[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634035111;

}

function selectNextCompletion_2634035131(self_2634035132) {
    if ((0 < (self_2634035132.completions).length)) {
    self_2634035132.selectedCompletion = clamp_1694499551(addInt(self_2634035132.selectedCompletion, 1), 0, subInt((self_2634035132.completions).length, 1));
    }
    else {
      self_2634035132.selectedCompletion = 0;
    }
    
    self_2634035132.dirty = true;

  
}

function selectNextCompletionScript_2634035147(self_2634035148) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym630_2634035149 = getTextDocumentEditor_2634028826(self_2634035148);
      if (isNone_2634029170(rHEX60gensym630_2634035149)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2634035131(get_2634029190(rHEX60gensym630_2634035149));
  };

  
}

function selectNextCompletionApi_2634035172(HEX3Atmp_2634035128) {
  var result_2634035173 = null;

    result_2634035173 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2634035147(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634035128, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym632_2634035179 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2634035184 = [mnewString(0)];
    fmtRes_2634035184[0].push.apply(fmtRes_2634035184[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634035184, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym632_2634035179 || [],fmtRes_2634035184[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634035173;

}

function HEX24_2197815617(cursor_2197815618) {
  var result_2197815619 = [];

  BeforeRet: {
    result_2197815619 = nimCopy(null, (HEX24_369098760(cursor_2197815618.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2197815618.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2197815619;

}

function addQuoted_2634035259(s_2634035261, s_2634035261_Idx, x_2634035262) {
    s_2634035261[s_2634035261_Idx].push.apply(s_2634035261[s_2634035261_Idx], HEX24_2197815617(x_2634035262));;

  
}

function addQuoted_2634035288(s_2634035290, s_2634035290_Idx, x_2634035291) {
    s_2634035290[s_2634035290_Idx].push.apply(s_2634035290[s_2634035290_Idx], reprEnum(x_2634035291, NTI2667577349));;

  
}

function HEX24_2634035209(x_2634035211) {
  var result_2634035212 = [[]];

    result_2634035212[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym641_2634035223 = 0;
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [110,97,109,101]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_1627390004(result_2634035212, 0, x_2634035211.name);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [115,99,111,112,101]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_1627390004(result_2634035212, 0, x_2634035211.scope);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [108,111,99,97,116,105,111,110]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_2634035259(result_2634035212, 0, x_2634035211.location);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [102,105,108,101,110,97,109,101]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_1627390004(result_2634035212, 0, x_2634035211.filename);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [107,105,110,100]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_2634035288(result_2634035212, 0, x_2634035211.kind);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [116,121,112]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_1627390004(result_2634035212, 0, x_2634035211.typ);
    if ((0 < countHEX60gensym641_2634035223)) {
    result_2634035212[0].push.apply(result_2634035212[0], [44,32]);;
    }
    
    result_2634035212[0].push.apply(result_2634035212[0], [100,111,99]);;
    result_2634035212[0].push.apply(result_2634035212[0], [58,32]);;
    countHEX60gensym641_2634035223 += 1;
    addQuoted_1627390004(result_2634035212, 0, x_2634035211.doc);
    result_2634035212[0].push.apply(result_2634035212[0], [41]);;

  return result_2634035212[0];

}

function formatValue_2634035204(result_2634035206, result_2634035206_Idx, value_2634035207, specifier_2634035208) {
    formatValue_738197675(result_2634035206, result_2634035206_Idx, HEX24_2634035209(value_2634035207), specifier_2634035208);

  
}

function applySelectedCompletion_2634035193(self_2634035194) {
  BeforeRet: {
    if (!(self_2634035194.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2634035194.completions).length - 1 < self_2634035194.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2634035198 = nimCopy(null, self_2634035194.completions[chckIndx(self_2634035194.selectedCompletion, 0, (self_2634035194.completions).length - 1)], NTI2667577352);
    var fmtRes_2634035203 = [mnewString(0)];
    fmtRes_2634035203[0].push.apply(fmtRes_2634035203[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2634035204(fmtRes_2634035203, 0, com_2634035198, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2634035203[0], NTI33554449)]);
    var cursor_2634035321 = nimCopy(null, selection_2634023404(self_2634035194).Field1, NTI2197815305);
    if ((cursor_2634035321.Field1 == 0)) {
    selectionsHEX3D_2634023651(self_2634035194, insert_2634024929(self_2634035194.document, [nimCopy(null, toSelection_2197815789(cursor_2634035321), NTI2197815307)], selections_2634023401(self_2634035194), com_2634035198.name, true, true, false));
    }
    else {
      var line_2634035322 = getLine_2634023265(self_2634035194.document, cursor_2634035321.Field0);
      var column_2634035323 = cursor_2634035321.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2634035323)) break Label2;
            switch (line_2634035322[chckIndx(subInt(column_2634035323, 1), 0, (line_2634035322).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2634035323 = subInt(column_2634035323, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2634023651(self_2634035194, edit_2634025138(self_2634035194.document, [nimCopy(null, {Field0: {Field0: cursor_2634035321.Field0, Field1: column_2634035323}, Field1: nimCopy(null, cursor_2634035321, NTI2197815305)}, NTI2634031855)], selections_2634023401(self_2634035194), com_2634035198.name, true));
    }
    
  };

  
}

function applySelectedCompletionScript_2634035337(self_2634035338) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym636_2634035339 = getTextDocumentEditor_2634028826(self_2634035338);
      if (isNone_2634029170(rHEX60gensym636_2634035339)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2634035193(get_2634029190(rHEX60gensym636_2634035339));
  };

  
}

function applySelectedCompletionApi_2634035362(HEX3Atmp_2634035190) {
  var result_2634035363 = null;

    result_2634035363 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2634035337(jsonTo_2634029213(HEX5BHEX5D_1660947548(HEX3Atmp_2634035190, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym638_2634035369 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2634035374 = [mnewString(0)];
    fmtRes_2634035374[0].push.apply(fmtRes_2634035374[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2634035374, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym638_2634035369 || [],fmtRes_2634035374[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2634035363;

}

function none_2634035601() {
  var result_2634035607 = ({val: null});

  return result_2634035607;

}

function dispatch_2634035399(command_2634035398, arg_2634035397) {
    var Temporary1;

  var result_2634035404 = ({val: null});

    switch (toJSStr(command_2634035398)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2634035405(setModeApi_2634029211(arg_2634035397));
      break;
    case "mode":
      Temporary1 = some_2634035405(modeApi_2634029301(arg_2634035397));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2634035405(getContextWithModeApi_2634029357(arg_2634035397));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2634035405(updateTargetColumnApi_2634029416(arg_2634035397));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2634035405(invertSelectionApi_2634029514(arg_2634035397));
      break;
    case "insert":
      Temporary1 = some_2634035405(insertApi_2634029574(arg_2634035397));
      break;
    case "delete":
      Temporary1 = some_2634035405(deleteApi_2634029978(arg_2634035397));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2634035405(selectPrevApi_2634030190(arg_2634035397));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2634035405(selectNextApi_2634030360(arg_2634035397));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2634035405(selectInsideApi_2634030430(arg_2634035397));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2634035405(selectInsideCurrentApi_2634030489(arg_2634035397));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2634035405(selectLineApi_2634030539(arg_2634035397));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2634035405(selectLineCurrentApi_2634030592(arg_2634035397));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2634035405(selectParentTsApi_2634030642(arg_2634035397));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2634035405(selectParentCurrentTsApi_2634030701(arg_2634035397));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2634035405(insertTextApi_2634030755(arg_2634035397));
      break;
    case "undo":
      Temporary1 = some_2634035405(undoApi_2634030856(arg_2634035397));
      break;
    case "redo":
      Temporary1 = some_2634035405(redoApi_2634030930(arg_2634035397));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2634035405(scrollTextApi_2634030984(arg_2634035397));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2634035405(duplicateLastSelectionApi_2634031137(arg_2634035397));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2634035405(addCursorBelowApi_2634031197(arg_2634035397));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2634035405(addCursorAboveApi_2634031257(arg_2634035397));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2634035405(getPrevFindResultApi_2634031562(arg_2634035397));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2634035405(getNextFindResultApi_2634031778(arg_2634035397));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2634035405(addNextFindResultToSelectionApi_2634031848(arg_2634035397));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2634035405(addPrevFindResultToSelectionApi_2634031904(arg_2634035397));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2634035405(setAllFindResultToSelectionApi_2634032246(arg_2634035397));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2634035405(moveCursorColumnApi_2634032318(arg_2634035397));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2634035405(moveCursorLineApi_2634032387(arg_2634035397));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2634035405(moveCursorHomeApi_2634032454(arg_2634035397));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2634035405(moveCursorEndApi_2634032516(arg_2634035397));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2634035405(moveCursorToApi_2634032587(arg_2634035397));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2634035405(moveCursorBeforeApi_2634032663(arg_2634035397));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2634035405(moveCursorNextFindResultApi_2634032730(arg_2634035397));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2634035405(moveCursorPrevFindResultApi_2634032792(arg_2634035397));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2634035405(scrollToCursorApi_2634032852(arg_2634035397));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2634035405(reloadTreesitterApi_2634032905(arg_2634035397));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2634035405(deleteLeftApi_2634032961(arg_2634035397));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2634035405(deleteRightApi_2634033017(arg_2634035397));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2634035405(getCommandCountApi_2634033067(arg_2634035397));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2634035405(setCommandCountApi_2634033121(arg_2634035397));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2634035405(setCommandCountRestoreApi_2634033176(arg_2634035397));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2634035405(updateCommandCountApi_2634033231(arg_2634035397));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2634035405(setFlagApi_2634033288(arg_2634035397));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2634035405(getFlagApi_2634033350(arg_2634035397));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2634035405(runActionApi_2634033423(arg_2634035397));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2634035405(findWordBoundaryApi_2634033514(arg_2634035397));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2634035405(getSelectionForMoveApi_2634033671(arg_2634035397));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2634035405(setMoveApi_2634033953(arg_2634035397));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2634035405(deleteMoveApi_2634034068(arg_2634035397));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2634035405(selectMoveApi_2634034192(arg_2634035397));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2634035405(changeMoveApi_2634034291(arg_2634035397));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2634035405(moveLastApi_2634034397(arg_2634035397));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2634035405(moveFirstApi_2634034503(arg_2634035397));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2634035405(setSearchQueryApi_2634034582(arg_2634035397));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2634035405(setSearchQueryFromMoveApi_2634034640(arg_2634035397));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2634035405(gotoDefinitionApi_2634034952(arg_2634035397));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2634035405(getCompletionsApi_2634035000(arg_2634035397));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2634035405(hideCompletionsApi_2634035048(arg_2634035397));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2634035405(selectPrevCompletionApi_2634035110(arg_2634035397));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2634035405(selectNextCompletionApi_2634035172(arg_2634035397));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2634035405(applySelectedCompletionApi_2634035362(arg_2634035397));
      break;
    default: 
      Temporary1 = none_2634035601();
      break;
    }
    result_2634035404 = nimCopy(result_2634035404, Temporary1, NTI2634031918);

  return result_2634035404;

}

function isNone_2634035686(self_2634035688) {
  var result_2634035689 = false;

    result_2634035689 = (self_2634035688.val == null);

  return result_2634035689;

}

function handleActionInternal_2634023258(self_2634023259, action_2634023260, args_2634023261) {
    var Temporary3;

  var result_2634035621 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1325403241(self_2634023259.editor, self_2634023259, action_2634023260, args_2634023261) == 3)) {
    self_2634023259.commandCount = subInt(self_2634023259.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2634023259.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1325403241(self_2634023259.editor, self_2634023259, action_2634023260, args_2634023261) == 3))) {
          break Label1;
          }
          
          self_2634023259.commandCount = subInt(self_2634023259.commandCount, 1);
        }
    };
    self_2634023259.commandCount = self_2634023259.commandCountRestore;
    self_2634023259.commandCountRestore = 0;
    result_2634035621 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2634023261;
    if (ConstSet206[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1660944387)); }
    insert_2634035640(Temporary3, "elems", toJson_2634028939({id: self_2634023259.id}, initToJsonOptions_1845493794()), 0);
    if (isSome_2634035669(dispatch_2634035399(action_2634023260, args_2634023261))) {
    self_2634023259.commandCount = subInt(self_2634023259.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2634023259.commandCount)) break Label5;
          if (isNone_2634035686(dispatch_2634035399(action_2634023260, args_2634023261))) {
          break Label4;
          }
          
          self_2634023259.commandCount = subInt(self_2634023259.commandCount, 1);
        }
    };
    self_2634023259.commandCount = self_2634023259.commandCountRestore;
    self_2634023259.commandCountRestore = 0;
    result_2634035621 = 3;
    break BeforeRet;
    }
    
    result_2634035621 = 1;
    break BeforeRet;
  };

  return result_2634035621;

}

function collectionToString_2634035737(x_2634035739, prefix_2634035740, separator_2634035741, suffix_2634035742) {
  var result_2634035743 = [[]];

    result_2634035743[0] = nimCopy(null, prefix_2634035740, NTI33554449);
    var firstElement_2634035744 = true;
    Label1: {
      var value_2634035748 = [];
      var i_536871937 = 0;
      var L_536871938 = (x_2634035739).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871937 < L_536871938)) break Label3;
            value_2634035748 = x_2634035739[i_536871937];
            if (firstElement_2634035744) {
            firstElement_2634035744 = false;
            }
            else {
            result_2634035743[0].push.apply(result_2634035743[0], separator_2634035741);;
            }
            
            addQuoted_1627390004(result_2634035743, 0, value_2634035748);
            i_536871937 += 1;
            if (!(((x_2634035739).length == L_536871938))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2634035743[0].push.apply(result_2634035743[0], suffix_2634035742);;

  return result_2634035743[0];

}

function HEX24_2634035733(x_2634035735) {
  var result_2634035736 = [];

    result_2634035736 = nimCopy(null, collectionToString_2634035737(x_2634035735, [64,91], [44,32], [93]), NTI33554449);

  return result_2634035736;

}

function handleAction_2634023254(self_2634023255, action_2634023256, arg_2634023257) {
  var result_2634035703 = 0;

  BeforeRet: {
    var fmtRes_2634035709 = [mnewString(0)];
    fmtRes_2634035709[0].push.apply(fmtRes_2634035709[0], [104,97,110,100,108,101,65,99,116,105,111,110,32]);;
    formatValue_738197675(fmtRes_2634035709, 0, action_2634023256, []);
    fmtRes_2634035709[0].push.apply(fmtRes_2634035709[0], [44,32]);;
    formatValue_738197675(fmtRes_2634035709, 0, arg_2634023257, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2634035709[0], NTI33554449)]);
    try {
    var args_2634035756 = newJArray_1660944514();
++excHandler;
    try {
    Label3: {
      var a_2634035757 = null;
      var colontmp__536871463 = null;
      colontmp__536871463 = newStringStream_1694499849(arg_2634023257);
      var p_536871464 = [({m_type: NTI1728053255, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1728053345(p_536871464[0], colontmp__536871463, [], false);
      try {
      var _ = getTok_1728053702(p_536871464[0]);
      Label5: {
          Label6: while (true) {
          if (!!((p_536871464[0].tok == 1))) break Label6;
            a_2634035757 = parseJson_1660949643(p_536871464[0], false, false, 0);
            add_1660944622(args_2634035756, a_2634035757);
          }
      };
      } finally {
      close_1728053399(p_536871464[0]);
      }
    };
    result_2634035703 = handleActionInternal_2634023258(self_2634023255, action_2634023256, args_2634035756);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2634035762 = [mnewString(0)];
    fmtRes_2634035762[0].push.apply(fmtRes_2634035762[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_738197675(fmtRes_2634035762, 0, action_2634023256, []);
    fmtRes_2634035762[0].push.apply(fmtRes_2634035762[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_738197675(fmtRes_2634035762, 0, arg_2634023257, []);
    fmtRes_2634035762[0].push.apply(fmtRes_2634035762[0], [39]);;
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2634035762[0], NTI33554449)]);
    result_2634035703 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    rawEcho(HEX24_2634035733(content_2634024055(self_2634023255.document)));
    }
  };

  return result_2634035703;

}

function rawGet_1325402232(t_1325402235, key_1325402236, hc_1325402237, hc_1325402237_Idx) {
  var result_1325402238 = 0;

  BeforeRet: {
    hc_1325402237[hc_1325402237_Idx] = hash_1358954923(key_1325402236);
    if ((hc_1325402237[hc_1325402237_Idx] == 0)) {
    hc_1325402237[hc_1325402237_Idx] = 314159265;
    }
    
    if (((t_1325402235.data).length == 0)) {
    result_1325402238 = -1;
    break BeforeRet;
    }
    
    var h_1325402290 = (hc_1325402237[hc_1325402237_Idx] & (t_1325402235.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325402235.data[chckIndx(h_1325402290, 0, (t_1325402235.data).length - 1)].Field0)) break Label2;
          if (((t_1325402235.data[chckIndx(h_1325402290, 0, (t_1325402235.data).length - 1)].Field0 == hc_1325402237[hc_1325402237_Idx]) && eqStrings(t_1325402235.data[chckIndx(h_1325402290, 0, (t_1325402235.data).length - 1)].Field1, key_1325402236))) {
          result_1325402238 = h_1325402290;
          break BeforeRet;
          }
          
          h_1325402290 = nextTry_1342177315(h_1325402290, (t_1325402235.data).length - 1);
        }
    };
    result_1325402238 = subInt(-1, h_1325402290);
  };

  return result_1325402238;

}

function hasKey_1325402225(t_1325402228, key_1325402229) {
  var result_1325402230 = false;

    var hc_1325402231 = [0];
    result_1325402230 = (0 <= rawGet_1325402232(t_1325402228, key_1325402229, hc_1325402231, 0));

  return result_1325402230;

}

function contains_1325402219(t_1325402222, key_1325402223) {
  var result_1325402224 = false;

  BeforeRet: {
    result_1325402224 = hasKey_1325402225(t_1325402222, key_1325402223);
    break BeforeRet;
  };

  return result_1325402224;

}

function HEX5BHEX5D_1325402524(t_1325402527, key_1325402528) {
  var result_1325402529 = null;
  var result_1325402529_Idx = 0;

    var hcHEX60gensym22_1325402530 = [0];
    var indexHEX60gensym22_1325402537 = rawGet_1325402232(t_1325402527, key_1325402528, hcHEX60gensym22_1325402530, 0);
    if ((0 <= indexHEX60gensym22_1325402537)) {
    result_1325402529 = t_1325402527.data[chckIndx(indexHEX60gensym22_1325402537, 0, (t_1325402527.data).length - 1)]; result_1325402529_Idx = "Field2";
    }
    else {
    raiseKeyError_1660947325(key_1325402528);
    }
    

  return [result_1325402529, result_1325402529_Idx];

}

function invokeCallback_1325402172(self_1325402173, context_1325402174, args_1325402175) {
    var Temporary1;

  var result_1325402176 = false;

  BeforeRet: {
    if (!(contains_1325402219(self_1325402173.callbacks, context_1325402174))) {
    result_1325402176 = false;
    break BeforeRet;
    }
    
    var id_1325402594 = (Temporary1 = HEX5BHEX5D_1325402524(self_1325402173.callbacks, context_1325402174), Temporary1)[0][Temporary1[1]];
  };

  return result_1325402176;

}

function handleInput_2634023262(self_2634023263, input_2634023264) {
  var result_2634035766 = 0;

  BeforeRet: {
    if (invokeCallback_1325402172(self_2634023263.editor, getContextWithMode_2634028476(self_2634023263, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1660944426(input_2634023264))) {
    result_2634035766 = 3;
    break BeforeRet;
    }
    
    insertText_2634030725(self_2634023263, input_2634023264);
    result_2634035766 = 3;
    break BeforeRet;
  };

  return result_2634035766;

}

function setMode_2634029095(self_2634029096, mode_2634029097) {
        
function HEX3Aanonymous_2634029123(actionHEX60gensym117HEX60gensym118_2634029124, argHEX60gensym117HEX60gensym118_2634029125) {
          var result_2634029126 = 0;

          BeforeRet: {
            if (handlerHEX60gensym117_2634029111.config.handleActions) {
            var action_2634029127 = nimCopy(null, actionHEX60gensym117HEX60gensym118_2634029124, NTI33554449);
            var arg_2634029128 = nimCopy(null, argHEX60gensym117HEX60gensym118_2634029125, NTI33554449);
            var responseHEX60gensym117HEX60gensym118_2634029129 = handleAction_2634023254(self_2634029096, action_2634029127, arg_2634029128);
            if (handlerHEX60gensym117_2634029111.config.consumeAllActions) {
            result_2634029126 = 3;
            break BeforeRet;
            }
            
            result_2634029126 = responseHEX60gensym117HEX60gensym118_2634029129;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym117_2634029111.config.consumeAllActions) {
            result_2634029126 = 3;
            break BeforeRet;
            }
            else {
              result_2634029126 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2634029126;

        }
        
function HEX3Aanonymous_2634029131(inputHEX60gensym117HEX60gensym119_2634029132) {
          var result_2634029133 = 0;

          BeforeRet: {
            if (handlerHEX60gensym117_2634029111.config.handleInputs) {
            var input_2634029134 = nimCopy(null, inputHEX60gensym117HEX60gensym119_2634029132, NTI33554449);
            result_2634029133 = handleInput_2634023262(self_2634029096, input_2634029134);
            break BeforeRet;
            }
            else {
              result_2634029133 = 1;
              break BeforeRet;
            }
            
          };

          return result_2634029133;

        }

  BeforeRet: {
    if (eqStrings(mode_2634029097, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2634029102 = [mnewString(0)];
    fmtRes_2634029102[0].push.apply(fmtRes_2634029102[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_738197675(fmtRes_2634029102, 0, mode_2634029097, []);
    fmtRes_2634029102[0].push.apply(fmtRes_2634029102[0], [39]);;
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2634029102[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2634029097).length == 0)) {
    self_2634029096.modeEventHandler = null;
    }
    else {
      var config_2634029103 = getModeConfig_2634028932(self_2634029096, mode_2634029097);
      Label1: {
        var handlerHEX60gensym117_2634029111 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym117_2634029111.config = config_2634029103;
        handlerHEX60gensym117_2634029111.dfaInternal = buildDFA_2080374845(config_2634029103);
        handlerHEX60gensym117_2634029111.handleAction = HEX3Aanonymous_2634029123;
        handlerHEX60gensym117_2634029111.handleInput = HEX3Aanonymous_2634029131;
      };
      self_2634029096.modeEventHandler = handlerHEX60gensym117_2634029111;
    }
    
    self_2634029096.currentMode = nimCopy(null, mode_2634029097, NTI33554449);
    self_2634029096.dirty = true;
  };

  
}

function some_2952790647(val_2952790649) {
  var result_2952790650 = ({val: 0, has: false});

    result_2952790650.has = true;
    result_2952790650.val = val_2952790649;

  return result_2952790650;

}

function updateCompletions_3003121708(self_3003121709) {
    var text_3003121710 = nsuJoinSep(content_2634024055(self_3003121709.textEditor.document), []);
    self_3003121709.completions = nimCopy(null, self_3003121709.getCompletions(self_3003121709, text_3003121710), NTI3003121676);
    if ((0 < (self_3003121709.completions).length)) {
    self_3003121709.selected = clamp_1694499551(self_3003121709.selected, 0, subInt((self_3003121709.completions).length, 1));
    }
    else {
      self_3003121709.selected = 0;
    }
    

  
}

function handleTextChanged_3003122248(self_3003122249) {
    updateCompletions_3003121708(self_3003122249);
    self_3003122249.selected = 0;

  
}

function handleUnknownPopupAction_1325403235(self_1325403236, popup_1325403237, action_1325403238, arg_1325403239) {
  var result_1325403240 = 0;

  BeforeRet: {
    result_1325403240 = 0;
    break BeforeRet;
  };

  return result_1325403240;

}

function toJson_3003121914(self_3003121915, opt_3003121916) {
  var result_3003121917 = null;

    result_3003121917 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_3003121917, [116,121,112,101], newJString_1660944426([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1660946335(result_3003121917, [105,100], newJInt_1660944472(self_3003121915.id));

  return result_3003121917;

}

function pop_1325403419(s_1325403421, s_1325403421_Idx) {
  var result_1325403422 = null;

    var L_1325403426 = subInt((s_1325403421[s_1325403421_Idx]).length, 1);
    result_1325403422 = s_1325403421[s_1325403421_Idx][chckIndx(L_1325403426, 0, (s_1325403421[s_1325403421_Idx]).length - 1)];
    if (s_1325403421[s_1325403421_Idx].length < chckRange(L_1325403426, 0, 2147483647)) { for (var i = s_1325403421[s_1325403421_Idx].length ; i < chckRange(L_1325403426, 0, 2147483647) ; ++i) s_1325403421[s_1325403421_Idx].push(null); }
               else { s_1325403421[s_1325403421_Idx].length = chckRange(L_1325403426, 0, 2147483647); };

  return result_1325403422;

}

function popPopup_1325403402(self_1325403403, popup_1325403404) {
    if (((0 < (self_1325403403.popups).length) && (self_1325403403.popups[chckIndx((self_1325403403.popups).length - 1, 0, (self_1325403403.popups).length - 1)] == popup_1325403404))) {
    var _ = pop_1325403419(self_1325403403, "popups");
    }
    

  
}

function accept_3003121930(self_3003121931) {
    if ((self_3003121931.selected < (self_3003121931.completions).length)) {
    self_3003121931.handleItemConfirmed(self_3003121931.completions[chckIndx(self_3003121931.selected, 0, (self_3003121931.completions).length - 1)]);
    }
    
    popPopup_1325403402(self_3003121931.editor, self_3003121931);

  
}

function none_3003121818() {
  var result_3003121824 = ({val: null});

  return result_3003121824;

}

function some_1325405212(val_1325405214) {
  var result_1325405215 = ({val: null});

    if (!(!((val_1325405214 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1325405215.val = val_1325405214;

  return result_1325405215;

}

function none_1325405225() {
  var result_1325405231 = ({val: null});

  return result_1325405231;

}

function getPopupForId_1325405182(self_1325405183, id_1325405184) {
  var result_1325405189 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1325405211 = null;
      var i_536871948 = 0;
      var L_536871949 = (self_1325405183.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871948 < L_536871949)) break Label3;
            popup_1325405211 = self_1325405183.popups[chckIndx(i_536871948, 0, (self_1325405183.popups).length - 1)];
            if ((popup_1325405211.id == id_1325405184)) {
            result_1325405189 = nimCopy(result_1325405189, some_1325405212(popup_1325405211), NTI1325402767);
            break BeforeRet;
            }
            
            i_536871948 = addInt(i_536871948, 1);
            if (!(((self_1325405183.popups).length == L_536871949))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1325405189 = nimCopy(result_1325405189, none_1325405225(), NTI1325402767);
    break BeforeRet;
  };

  return result_1325405189;

}

function isSome_3003121832(self_3003121834) {
  var result_3003121835 = false;

    result_3003121835 = !((self_3003121834.val == null));

  return result_3003121835;

}

function isNone_3003121860(self_3003121862) {
  var result_3003121863 = false;

    result_3003121863 = (self_3003121862.val == null);

  return result_3003121863;

}

function get_3003121852(self_3003121854) {
  var result_3003121855 = null;

    if (isNone_3003121860(self_3003121854)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003121855 = self_3003121854["val"];

  return result_3003121855;

}

function some_3003121877(val_3003121879) {
  var result_3003121880 = ({val: null});

    if (!(!((val_3003121879 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121880.val = val_3003121879;

  return result_3003121880;

}

function getSelectorPopup_3003121808(wrapper_3003121809) {
      var Temporary1;

  var result_3003121814 = ({val: null});

  BeforeRet: {
    if ((gEditor_1325400204[0] == null)) {
    result_3003121814 = nimCopy(result_3003121814, none_3003121818(), NTI3003121774);
    break BeforeRet;
    }
    
      var oHEX60gensym4_3003121827 = getPopupForId_1325405182(gEditor_1325400204[0], wrapper_3003121809.id);
      if (!isSome_3003121832(oHEX60gensym4_3003121827)) Temporary1 = false; else {        var editor_3003121869 = get_3003121852(oHEX60gensym4_3003121827);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3003121869.m_type, NTI3003121670)) {
    result_3003121814 = nimCopy(result_3003121814, some_3003121877(editor_3003121869), NTI3003121774);
    break BeforeRet;
    }
    
    }
    
    result_3003121814 = nimCopy(result_3003121814, none_3003121818(), NTI3003121774);
    break BeforeRet;
  };

  return result_3003121814;

}

function isNone_3003121944(self_3003121946) {
  var result_3003121947 = false;

    result_3003121947 = (self_3003121946.val == null);

  return result_3003121947;

}

function get_3003121964(self_3003121966) {
  var result_3003121967 = null;

    if (isNone_3003121944(self_3003121966)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003121967 = self_3003121966["val"];

  return result_3003121967;

}

function acceptScript_3003121937(self_3003121938) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym9_3003121939 = getSelectorPopup_3003121808(self_3003121938);
      if (isNone_3003121944(rHEX60gensym9_3003121939)) {
      break BeforeRet;
      }
      
    };
    accept_3003121930(get_3003121964(rHEX60gensym9_3003121939));
  };

  
}

function fromJsonHook_3003121918(t_3003121919, jsonNode_3003121920) {
    t_3003121919.id = jsonTo_2634028946(HEX5BHEX5D_1660947469(jsonNode_3003121920, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3003121993(a_3003121995, b_3003121996, opt_3003121997) {
    if (!(!(HEX3DHEX3D_1660946458(b_3003121996, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3003121996}));
    }
    
    fromJsonHook_3003121918(a_3003121995, b_3003121996);

  
}

function jsonTo_3003121987(b_3003121989, opt_3003121991) {
  var result_3003121992 = [({id: 0})];

    fromJson_3003121993(result_3003121992[0], b_3003121989, opt_3003121991);

  return result_3003121992[0];

}

function acceptApi_3003121985(HEX3Atmp_3003121927) {
  var result_3003121986 = null;

    result_3003121986 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3003121937(jsonTo_3003121987(HEX5BHEX5D_1660947548(HEX3Atmp_3003121927, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym11_3003122004 = [97,99,99,101,112,116];
    var fmtRes_3003122009 = [mnewString(0)];
    fmtRes_3003122009[0].push.apply(fmtRes_3003122009[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_3003122009, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym11_3003122004 || [],fmtRes_3003122009[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3003121986;

}

function cancel_3003122027(self_3003122028) {
    if (!((self_3003122028.handleCanceled == null))) {
    self_3003122028.handleCanceled();
    }
    
    popPopup_1325403402(self_3003122028.editor, self_3003122028);

  
}

function cancelScript_3003122035(self_3003122036) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym16_3003122037 = getSelectorPopup_3003121808(self_3003122036);
      if (isNone_3003121944(rHEX60gensym16_3003122037)) {
      break BeforeRet;
      }
      
    };
    cancel_3003122027(get_3003121964(rHEX60gensym16_3003122037));
  };

  
}

function cancelApi_3003122060(HEX3Atmp_3003122024) {
  var result_3003122061 = null;

    result_3003122061 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3003122035(jsonTo_3003121987(HEX5BHEX5D_1660947548(HEX3Atmp_3003122024, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym18_3003122067 = [99,97,110,99,101,108];
    var fmtRes_3003122072 = [mnewString(0)];
    fmtRes_3003122072[0].push.apply(fmtRes_3003122072[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_3003122072, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym18_3003122067 || [],fmtRes_3003122072[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3003122061;

}

function prev_3003122081(self_3003122082) {
    var Temporary1;

    if (((self_3003122082.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3003122082.selected, (self_3003122082.completions).length), 1), (self_3003122082.completions).length);
    }
    
    self_3003122082.selected = Temporary1;
    if (((0 < (self_3003122082.completions).length) && !((self_3003122082.handleItemSelected == null)))) {
    self_3003122082.handleItemSelected(self_3003122082.completions[chckIndx(self_3003122082.selected, 0, (self_3003122082.completions).length - 1)]);
    }
    

  
}

function prevScript_3003122101(self_3003122102) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym22_3003122103 = getSelectorPopup_3003121808(self_3003122102);
      if (isNone_3003121944(rHEX60gensym22_3003122103)) {
      break BeforeRet;
      }
      
    };
    prev_3003122081(get_3003121964(rHEX60gensym22_3003122103));
  };

  
}

function prevApi_3003122126(HEX3Atmp_3003122078) {
  var result_3003122127 = null;

    result_3003122127 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3003122101(jsonTo_3003121987(HEX5BHEX5D_1660947548(HEX3Atmp_3003122078, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym24_3003122133 = [112,114,101,118];
    var fmtRes_3003122138 = [mnewString(0)];
    fmtRes_3003122138[0].push.apply(fmtRes_3003122138[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_3003122138, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym24_3003122133 || [],fmtRes_3003122138[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3003122127;

}

function next_3003122147(self_3003122148) {
    var Temporary1;

    if (((self_3003122148.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3003122148.selected, 1), (self_3003122148.completions).length);
    }
    
    self_3003122148.selected = Temporary1;
    if (((0 < (self_3003122148.completions).length) && !((self_3003122148.handleItemSelected == null)))) {
    self_3003122148.handleItemSelected(self_3003122148.completions[chckIndx(self_3003122148.selected, 0, (self_3003122148.completions).length - 1)]);
    }
    

  
}

function nextScript_3003122164(self_3003122165) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym29_3003122166 = getSelectorPopup_3003121808(self_3003122165);
      if (isNone_3003121944(rHEX60gensym29_3003122166)) {
      break BeforeRet;
      }
      
    };
    next_3003122147(get_3003121964(rHEX60gensym29_3003122166));
  };

  
}

function nextApi_3003122189(HEX3Atmp_3003122144) {
  var result_3003122190 = null;

    result_3003122190 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3003122164(jsonTo_3003121987(HEX5BHEX5D_1660947548(HEX3Atmp_3003122144, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym31_3003122196 = [110,101,120,116];
    var fmtRes_3003122201 = [mnewString(0)];
    fmtRes_3003122201[0].push.apply(fmtRes_3003122201[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_3003122201, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym31_3003122196 || [],fmtRes_3003122201[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3003122190;

}

function dispatch_3003122209(command_3003122208, arg_3003122207) {
    var Temporary1;

  var result_3003122211 = ({val: null});

    switch (toJSStr(command_3003122208)) {
    case "accept":
      Temporary1 = some_2634035405(acceptApi_3003121985(arg_3003122207));
      break;
    case "cancel":
      Temporary1 = some_2634035405(cancelApi_3003122060(arg_3003122207));
      break;
    case "prev":
      Temporary1 = some_2634035405(prevApi_3003122126(arg_3003122207));
      break;
    case "next":
      Temporary1 = some_2634035405(nextApi_3003122189(arg_3003122207));
      break;
    default: 
      Temporary1 = none_2634035601();
      break;
    }
    result_3003122211 = nimCopy(result_3003122211, Temporary1, NTI2634031918);

  return result_3003122211;

}

function handleAction_3003122230(self_3003122231, action_3003122232, arg_3003122233) {
  var result_3003122234 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1325403235(self_3003122231.editor, self_3003122231, action_3003122232, arg_3003122233) == 3)) {
    result_3003122234 = 3;
    break BeforeRet;
    }
    
    var args_3003122239 = newJArray_1660944514();
    add_1660944622(args_3003122239, toJson_3003121914({id: self_3003122231.id}, initToJsonOptions_1845493794()));
    Label1: {
      var a_3003122240 = null;
      var colontmp__536871941 = null;
      colontmp__536871941 = newStringStream_1694499849(arg_3003122233);
      var p_536871942 = [({m_type: NTI1728053255, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1728053345(p_536871942[0], colontmp__536871941, [], false);
      try {
      var _ = getTok_1728053702(p_536871942[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871942[0].tok == 1))) break Label4;
            a_3003122240 = parseJson_1660949643(p_536871942[0], false, false, 0);
            add_1660944622(args_3003122239, a_3003122240);
          }
      };
      } finally {
      close_1728053399(p_536871942[0]);
      }
    };
    if (isSome_2634035669(dispatch_3003122209(action_3003122232, args_3003122239))) {
    result_3003122234 = 3;
    break BeforeRet;
    }
    
    result_3003122234 = 1;
    break BeforeRet;
  };

  return result_3003122234;

}

function newSelectorPopup_3003122337(editor_3003122338, getCompletions_3003122342) {
    
function HEX3Aanonymous_3003122363(doc_3003122364) {
        handleTextChanged_3003122248(popup_3003122344);

      
    }
      
function HEX3Aanonymous_3003122390(actionHEX60gensym44HEX60gensym45_3003122391, argHEX60gensym44HEX60gensym45_3003122392) {
        var result_3003122393 = 0;

        BeforeRet: {
          if (handlerHEX60gensym44_3003122378.config.handleActions) {
          var action_3003122394 = nimCopy(null, actionHEX60gensym44HEX60gensym45_3003122391, NTI33554449);
          var arg_3003122395 = nimCopy(null, argHEX60gensym44HEX60gensym45_3003122392, NTI33554449);
          var responseHEX60gensym44HEX60gensym45_3003122396 = handleAction_3003122230(popup_3003122344, action_3003122394, arg_3003122395);
          if (handlerHEX60gensym44_3003122378.config.consumeAllActions) {
          result_3003122393 = 3;
          break BeforeRet;
          }
          
          result_3003122393 = responseHEX60gensym44HEX60gensym45_3003122396;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym44_3003122378.config.consumeAllActions) {
          result_3003122393 = 3;
          break BeforeRet;
          }
          else {
            result_3003122393 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3003122393;

      }
      
function HEX3Aanonymous_3003122398(inputHEX60gensym44HEX60gensym46_3003122399) {
        var result_3003122400 = 0;

        BeforeRet: {
          if (handlerHEX60gensym44_3003122378.config.handleInputs) {
          var input_3003122401 = nimCopy(null, inputHEX60gensym44HEX60gensym46_3003122399, NTI33554449);
          result_3003122400 = 1;
          break BeforeRet;
          }
          else {
            result_3003122400 = 1;
            break BeforeRet;
          }
          
        };

        return result_3003122400;

      }

  var result_3003122343 = null;

  BeforeRet: {
    var popup_3003122344 = {editor: editor_3003122338, m_type: NTI3003121670, textEditor: null, selected: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};
    popup_3003122344.textEditor = newTextEditor_2634035835(newTextDocument_2952790593([], []), editor_3003122338);
    setMode_2634029095(popup_3003122344.textEditor, [105,110,115,101,114,116]);
    popup_3003122344.textEditor.renderHeader = false;
    popup_3003122344.textEditor.lineNumbers = nimCopy(popup_3003122344.textEditor.lineNumbers, some_2952790647(0), NTI2634023162);
    popup_3003122344.textEditor.document.singleLine = true;
    var _ = subscribe_2634035865(popup_3003122344.textEditor.document.textChanged, HEX3Aanonymous_3003122363);
    popup_3003122344.getCompletions = getCompletions_3003122342;
    Label1: {
      var handlerHEX60gensym44_3003122378 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym44_3003122378.config = getEventHandlerConfig_1325403449(editor_3003122338, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym44_3003122378.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(editor_3003122338, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym44_3003122378.handleAction = HEX3Aanonymous_3003122390;
      handlerHEX60gensym44_3003122378.handleInput = HEX3Aanonymous_3003122398;
    };
    popup_3003122344.eventHandler = handlerHEX60gensym44_3003122378;
    updateCompletions_3003121708(popup_3003122344);
    if (((0 < (popup_3003122344.completions).length) && !((popup_3003122344.handleItemSelected == null)))) {
    popup_3003122344.handleItemSelected(popup_3003122344.completions[chckIndx(0, 0, (popup_3003122344.completions).length - 1)]);
    }
    
    result_3003122343 = popup_3003122344;
    break BeforeRet;
  };

  return result_3003122343;

}

function pop_1593835659(s_1593835661, s_1593835661_Idx) {
  var result_1593835662 = [];

    var L_1593835666 = subInt((s_1593835661[s_1593835661_Idx]).length, 1);
    result_1593835662 = nimCopy(null, s_1593835661[s_1593835661_Idx][chckIndx(L_1593835666, 0, (s_1593835661[s_1593835661_Idx]).length - 1)], NTI33554449);
    if (s_1593835661[s_1593835661_Idx].length < chckRange(L_1593835666, 0, 2147483647)) { for (var i = s_1593835661[s_1593835661_Idx].length ; i < chckRange(L_1593835666, 0, 2147483647) ; ++i) s_1593835661[s_1593835661_Idx].push([]); }
               else { s_1593835661[s_1593835661_Idx].length = chckRange(L_1593835666, 0, 2147483647); };

  return result_1593835662;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1459617810(path_1459617811, path_1459617811_Idx, trailingSep_1459617812) {
  BeforeRet: {
    if (((path_1459617811[path_1459617811_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1459617813 = (path_1459617811[path_1459617811_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1459617813)) break Label2;
          if ((ConstSet252[path_1459617811[path_1459617811_Idx][chckIndx(subInt(i_1459617813, 1), 0, (path_1459617811[path_1459617811_Idx]).length - 1)]] != undefined)) {
          i_1459617813 = subInt(i_1459617813, 1);
          }
          else {
          if ((((path_1459617811[path_1459617811_Idx][chckIndx(subInt(i_1459617813, 1), 0, (path_1459617811[path_1459617811_Idx]).length - 1)] == 46) && (2 <= i_1459617813)) && (ConstSet253[path_1459617811[path_1459617811_Idx][chckIndx(subInt(i_1459617813, 2), 0, (path_1459617811[path_1459617811_Idx]).length - 1)]] != undefined))) {
          i_1459617813 = subInt(i_1459617813, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1459617812) {
    if (path_1459617811[path_1459617811_Idx].length < chckRange(i_1459617813, 0, 2147483647)) { for (var i = path_1459617811[path_1459617811_Idx].length; i < chckRange(i_1459617813, 0, 2147483647); ++i) path_1459617811[path_1459617811_Idx].push(0); }
         else {path_1459617811[path_1459617811_Idx].length = chckRange(i_1459617813, 0, 2147483647); };
    addChar(path_1459617811[path_1459617811_Idx], 47);;
    }
    else {
    if ((0 < i_1459617813)) {
    if (path_1459617811[path_1459617811_Idx].length < chckRange(i_1459617813, 0, 2147483647)) { for (var i = path_1459617811[path_1459617811_Idx].length; i < chckRange(i_1459617813, 0, 2147483647); ++i) path_1459617811[path_1459617811_Idx].push(0); }
         else {path_1459617811[path_1459617811_Idx].length = chckRange(i_1459617813, 0, 2147483647); };
    }
    else {
      path_1459617811[path_1459617811_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1476395014(it_1476395015, x_1476395016) {
  var result_1476395017 = false;

    result_1476395017 = (it_1476395015.i < (x_1476395016).length);

  return result_1476395017;

}

function next_1476395018(it_1476395019, x_1476395020) {
  var result_1476395021 = {Field0: 0, Field1: 0};

    it_1476395019.prev = it_1476395019.i;
    if ((!(it_1476395019.notFirst) && (ConstSet255[x_1476395020[chckIndx(it_1476395019.i, 0, (x_1476395020).length - 1)]] != undefined))) {
    it_1476395019.i = addInt(it_1476395019.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1476395019.i < (x_1476395020).length) && !((ConstSet256[x_1476395020[chckIndx(it_1476395019.i, 0, (x_1476395020).length - 1)]] != undefined)))) break Label2;
            it_1476395019.i = addInt(it_1476395019.i, 1);
          }
      };
    }
    
    if ((it_1476395019.prev < it_1476395019.i)) {
    var colontmp__536872019 = it_1476395019.prev;
    var colontmp__536872020 = subInt(it_1476395019.i, 1);
    result_1476395021 = nimCopy(result_1476395021, {Field0: colontmp__536872019, Field1: colontmp__536872020}, NTI1476395015);
    }
    else {
    if (hasNext_1476395014(it_1476395019, x_1476395020)) {
    result_1476395021 = nimCopy(result_1476395021, next_1476395018(it_1476395019, x_1476395020), NTI1476395015);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1476395019.i < (x_1476395020).length) && (ConstSet257[x_1476395020[chckIndx(it_1476395019.i, 0, (x_1476395020).length - 1)]] != undefined))) break Label4;
          it_1476395019.i = addInt(it_1476395019.i, 1);
        }
    };
    it_1476395019.notFirst = true;

  return result_1476395021;

}

function isSlash_1476395074(x_1476395075, bounds_1476395076) {
  var result_1476395077 = false;

    result_1476395077 = ((bounds_1476395076["Field1"] == bounds_1476395076["Field0"]) && (ConstSet258[x_1476395075[chckIndx(bounds_1476395076["Field0"], 0, (x_1476395075).length - 1)]] != undefined));

  return result_1476395077;

}

function isDotDot_1476395070(x_1476395071, bounds_1476395072) {
  var result_1476395073 = false;

    result_1476395073 = (((bounds_1476395072["Field1"] == addInt(bounds_1476395072["Field0"], 1)) && (x_1476395071[chckIndx(bounds_1476395072["Field0"], 0, (x_1476395071).length - 1)] == 46)) && (x_1476395071[chckIndx(addInt(bounds_1476395072["Field0"], 1), 0, (x_1476395071).length - 1)] == 46));

  return result_1476395073;

}

function isDot_1476395066(x_1476395067, bounds_1476395068) {
  var result_1476395069 = false;

    result_1476395069 = ((bounds_1476395068["Field1"] == bounds_1476395068["Field0"]) && (x_1476395067[chckIndx(bounds_1476395068["Field0"], 0, (x_1476395067).length - 1)] == 46));

  return result_1476395069;

}

function addNormalizePath_1476395082(x_1476395083, result_1476395084, result_1476395084_Idx, state_1476395085, state_1476395085_Idx, dirSep_1476395086) {
          var Temporary7;

    var it_1476395087 = [({i: 0, prev: 0, notFirst: false})];
    it_1476395087[0].notFirst = (0 < (state_1476395085[state_1476395085_Idx] >> 1));
    if (it_1476395087[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1476395087[0].i < (x_1476395083).length) && (ConstSet254[x_1476395083[chckIndx(it_1476395087[0].i, 0, (x_1476395083).length - 1)]] != undefined))) break Label2;
          it_1476395087[0].i = addInt(it_1476395087[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1476395014(it_1476395087[0], x_1476395083)) break Label4;
          var b_1476395101 = next_1476395018(it_1476395087[0], x_1476395083);
          if ((((state_1476395085[state_1476395085_Idx] >> 1) == 0) && isSlash_1476395074(x_1476395083, b_1476395101))) {
          if ((((result_1476395084[result_1476395084_Idx]).length == 0) || !((ConstSet259[result_1476395084[result_1476395084_Idx][chckIndx(subInt((result_1476395084[result_1476395084_Idx]).length, 1), 0, (result_1476395084[result_1476395084_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1476395084[result_1476395084_Idx], dirSep_1476395086);;
          }
          
          state_1476395085[state_1476395085_Idx] = (state_1476395085[state_1476395085_Idx] | 1);
          }
          else {
          if (isDotDot_1476395070(x_1476395083, b_1476395101)) {
          if ((1 <= (state_1476395085[state_1476395085_Idx] >> 1))) {
          var d_1476395114 = (result_1476395084[result_1476395084_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1476395085[state_1476395085_Idx] & 1) < subInt(d_1476395114, 1)) && !((ConstSet260[result_1476395084[result_1476395084_Idx][chckIndx(subInt(d_1476395114, 1), 0, (result_1476395084[result_1476395084_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1476395114 = subInt(d_1476395114, 1);
              }
          };
          if ((0 < d_1476395114)) {
          if (result_1476395084[result_1476395084_Idx].length < (Temporary7 = chckRange(subInt(d_1476395114, 1), 0, 2147483647), Temporary7)) { for (var i = result_1476395084[result_1476395084_Idx].length; i < Temporary7; ++i) result_1476395084[result_1476395084_Idx].push(0); }
         else {result_1476395084[result_1476395084_Idx].length = Temporary7; };
          state_1476395085[state_1476395085_Idx] = subInt(state_1476395085[state_1476395085_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1476395084[result_1476395084_Idx]).length) && !((ConstSet261[result_1476395084[result_1476395084_Idx][chckIndx(subInt((result_1476395084[result_1476395084_Idx]).length, 1), 0, (result_1476395084[result_1476395084_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1476395084[result_1476395084_Idx], dirSep_1476395086);;
            }
            
            result_1476395084[result_1476395084_Idx].push.apply(result_1476395084[result_1476395084_Idx], substr_33557821(x_1476395083, b_1476395101["Field0"], b_1476395101["Field1"]));;
          }
          
          }
          else {
          if (isDot_1476395066(x_1476395083, b_1476395101)) {
          }
          else {
          if ((b_1476395101["Field0"] <= b_1476395101["Field1"])) {
          if (((0 < (result_1476395084[result_1476395084_Idx]).length) && !((ConstSet262[result_1476395084[result_1476395084_Idx][chckIndx(subInt((result_1476395084[result_1476395084_Idx]).length, 1), 0, (result_1476395084[result_1476395084_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1476395084[result_1476395084_Idx], dirSep_1476395086);;
          }
          
          result_1476395084[result_1476395084_Idx].push.apply(result_1476395084[result_1476395084_Idx], substr_33557821(x_1476395083, b_1476395101["Field0"], b_1476395101["Field1"]));;
          state_1476395085[state_1476395085_Idx] = addInt(state_1476395085[state_1476395085_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1476395084[result_1476395084_Idx], []) && !(eqStrings(x_1476395083, [])))) {
    result_1476395084[result_1476395084_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1459617839(result_1459617840, result_1459617840_Idx, state_1459617841, state_1459617841_Idx, tail_1459617842) {
    var Temporary1;

    var trailingSep_1459617851 = (((0 < (tail_1459617842).length) && (ConstSet250[HEX5BHEX5D_33557562(tail_1459617842, 1)] != undefined)) || (((tail_1459617842).length == 0) && ((0 < (result_1459617840[result_1459617840_Idx]).length) && (ConstSet251[(Temporary1 = HEX5BHEX5D_33557595(result_1459617840, result_1459617840_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1459617810(result_1459617840, result_1459617840_Idx, false);
    addNormalizePath_1476395082(tail_1459617842, result_1459617840, result_1459617840_Idx, state_1459617841, state_1459617841_Idx, 47);
    normalizePathEnd_1459617810(result_1459617840, result_1459617840_Idx, trailingSep_1459617851);

  
}

function nosjoinPath(head_1459617853, tail_1459617854) {
  var result_1459617855 = [[]];

    result_1459617855[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1459617856 = [0];
    joinPathImpl_1459617839(result_1459617855, 0, state_1459617856, 0, head_1459617853);
    joinPathImpl_1459617839(result_1459617855, 0, state_1459617856, 0, tail_1459617854);

  return result_1459617855[0];

}

function HEX2F_1459617878(head_1459617879, tail_1459617880) {
  var result_1459617881 = [];

    result_1459617881 = nimCopy(null, nosjoinPath(head_1459617879, tail_1459617880), NTI33554449);

  return result_1459617881;

}

function staticWalkDir_1593835556(dir_1593835557, relative_1593835558) {
  var result_1593835561 = [];

  return result_1593835561;

}

function nsuEndsWith(s_872416702, suffix_872416703) {
  var result_872416704 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_872416710 = (suffix_872416703).length;
    var sLenHEX60gensym153_872416711 = (s_872416702).length;
    var iHEX60gensym153_872416712 = 0;
    var jHEX60gensym153_872416713 = subInt(sLenHEX60gensym153_872416711, suffixLenHEX60gensym153_872416710);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_872416712, jHEX60gensym153_872416713)) && (addInt(iHEX60gensym153_872416712, jHEX60gensym153_872416713) < sLenHEX60gensym153_872416711))) break Label2;
          if (!((s_872416702[chckIndx(addInt(iHEX60gensym153_872416712, jHEX60gensym153_872416713), 0, (s_872416702).length - 1)] == suffix_872416703[chckIndx(iHEX60gensym153_872416712, 0, (suffix_872416703).length - 1)]))) {
          result_872416704 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_872416712 = addInt(iHEX60gensym153_872416712, 1);
        }
    };
    if ((suffixLenHEX60gensym153_872416710 <= iHEX60gensym153_872416712)) {
    result_872416704 = true;
    break BeforeRet;
    }
    
  };

  return result_872416704;

}

function nuctoLowerStr(s_805308562) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_805308563 = [];

    result_805308563 = nimCopy(null, mnewString(chckRange((s_805308562).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_805308570 = 0;
    var resultIndexHEX60gensym252_805308571 = 0;
    var runeHEX60gensym252_805308572 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_805308570 < (s_805308562).length)) break Label2;
          if ((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] <= 127)) {
          runeHEX60gensym252_805308572 = chckRange(s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          else {
          if (((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_805308570 <= subInt((s_805308562).length, 2))) {
          runeHEX60gensym252_805308572 = chckRange((((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] & 31) << 6) | (s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 1), 0, (s_805308562).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 2);
          }
          else {
            runeHEX60gensym252_805308572 = 65533;
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          
          }
          else {
          if (((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_805308570 <= subInt((s_805308562).length, 3))) {
          runeHEX60gensym252_805308572 = chckRange(((((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] & 15) << 12) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 1), 0, (s_805308562).length - 1)] & 63) << 6)) | (s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 2), 0, (s_805308562).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 3);
          }
          else {
            runeHEX60gensym252_805308572 = 65533;
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          
          }
          else {
          if (((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_805308570 <= subInt((s_805308562).length, 4))) {
          runeHEX60gensym252_805308572 = chckRange((((((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] & 7) << 18) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 1), 0, (s_805308562).length - 1)] & 63) << 12)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 2), 0, (s_805308562).length - 1)] & 63) << 6)) | (s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 3), 0, (s_805308562).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 4);
          }
          else {
            runeHEX60gensym252_805308572 = 65533;
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          
          }
          else {
          if (((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_805308570 <= subInt((s_805308562).length, 5))) {
          runeHEX60gensym252_805308572 = chckRange(((((((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] & 3) << 24) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 1), 0, (s_805308562).length - 1)] & 63) << 18)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 2), 0, (s_805308562).length - 1)] & 63) << 12)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 3), 0, (s_805308562).length - 1)] & 63) << 6)) | (s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 4), 0, (s_805308562).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 5);
          }
          else {
            runeHEX60gensym252_805308572 = 65533;
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          
          }
          else {
          if (((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_805308570 <= subInt((s_805308562).length, 6))) {
          runeHEX60gensym252_805308572 = chckRange((((((((s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)] & 1) << 30) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 1), 0, (s_805308562).length - 1)] & 63) << 24)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 2), 0, (s_805308562).length - 1)] & 63) << 18)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 3), 0, (s_805308562).length - 1)] & 63) << 12)) | ((s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 4), 0, (s_805308562).length - 1)] & 63) << 6)) | (s_805308562[chckIndx(addInt(iHEX60gensym252_805308570, 5), 0, (s_805308562).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 6);
          }
          else {
            runeHEX60gensym252_805308572 = 65533;
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          
          }
          else {
            runeHEX60gensym252_805308572 = chckRange(s_805308562[chckIndx(iHEX60gensym252_805308570, 0, (s_805308562).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_805308570 = addInt(iHEX60gensym252_805308570, 1);
          }
          }}}}}
          runeHEX60gensym252_805308572 = nuctoLower(runeHEX60gensym252_805308572);
          var iHEX60gensym274_805308813 = runeHEX60gensym252_805308572;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 127)) {
          if (result_805308563.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 1), 0, 2147483647), Temporary3)) { for (var i = result_805308563.length; i < Temporary3; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary3; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(iHEX60gensym274_805308813, 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 2047)) {
          if (result_805308563.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 2), 0, 2147483647), Temporary4)) { for (var i = result_805308563.length; i < Temporary4; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary4; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 >> 6) | 192), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 1), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 65535)) {
          if (result_805308563.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 3), 0, 2147483647), Temporary5)) { for (var i = result_805308563.length; i < Temporary5; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary5; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 >> 12) | 224), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 1), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 6) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 2), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 2097151)) {
          if (result_805308563.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 4), 0, 2147483647), Temporary6)) { for (var i = result_805308563.length; i < Temporary6; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary6; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 >> 18) | 240), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 1), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 12) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 2), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 6) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 3), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 67108863)) {
          if (result_805308563.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 5), 0, 2147483647), Temporary7)) { for (var i = result_805308563.length; i < Temporary7; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary7; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 >> 24) | 248), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 1), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 18) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 2), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 12) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 3), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 6) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 4), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_805308813, 2147483647)) {
          if (result_805308563.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_805308571, 6), 0, 2147483647), Temporary8)) { for (var i = result_805308563.length; i < Temporary8; ++i) result_805308563.push(0); }
         else {result_805308563.length = Temporary8; };
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 0), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 >> 30) | 252), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 1), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 24) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 2), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 18) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 3), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 12) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 4), 0, (result_805308563).length - 1)] = chckRange((((iHEX60gensym274_805308813 >> 6) & 63) | 128), 0, 255);
          result_805308563[chckIndx(addInt(resultIndexHEX60gensym252_805308571, 5), 0, (result_805308563).length - 1)] = chckRange(((iHEX60gensym274_805308813 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_805308571 = addInt(resultIndexHEX60gensym252_805308571, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_805308563;

}

function toLower_805313775(s_805313776) {
  var result_805313777 = [];

    result_805313777 = nimCopy(null, nuctoLowerStr((s_805313776.slice(0, (s_805313776).length - 1 + 1))), NTI33554449);

  return result_805313777;

}

function mergeAlt_2013266062(a_2013266064, b_2013266065, lo_2013266066, m_2013266067, hi_2013266068, cmp_2013266071, order_2013266072) {
  BeforeRet: {
    if ((HEX2A_1040187400(cmp_2013266071(a_2013266064[chckIndx(m_2013266067, 0, (a_2013266064).length - 1)], a_2013266064[chckIndx(addInt(m_2013266067, 1), 0, (a_2013266064).length - 1)]), order_2013266072) <= 0)) {
    break BeforeRet;
    }
    
    var j_2013266073 = lo_2013266066;
    if (!((j_2013266073 <= m_2013266067))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2013266079 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2013266073 <= m_2013266067)) break Label2;
          b_2013266065[chckIndx(bb_2013266079, 0, (b_2013266065).length - 1)] = a_2013266064[chckIndx(j_2013266073, 0, (a_2013266064).length - 1)];
          bb_2013266079 = addInt(bb_2013266079, 1);
          j_2013266073 = addInt(j_2013266073, 1);
        }
    };
    var i_2013266090 = 0;
    var k_2013266091 = lo_2013266066;
    Label3: {
        Label4: while (true) {
        if (!((k_2013266091 < j_2013266073) && (j_2013266073 <= hi_2013266068))) break Label4;
          if ((HEX2A_1040187400(cmp_2013266071(b_2013266065[chckIndx(i_2013266090, 0, (b_2013266065).length - 1)], a_2013266064[chckIndx(j_2013266073, 0, (a_2013266064).length - 1)]), order_2013266072) <= 0)) {
          a_2013266064[chckIndx(k_2013266091, 0, (a_2013266064).length - 1)] = b_2013266065[chckIndx(i_2013266090, 0, (b_2013266065).length - 1)];
          i_2013266090 = addInt(i_2013266090, 1);
          }
          else {
            a_2013266064[chckIndx(k_2013266091, 0, (a_2013266064).length - 1)] = a_2013266064[chckIndx(j_2013266073, 0, (a_2013266064).length - 1)];
            j_2013266073 = addInt(j_2013266073, 1);
          }
          
          k_2013266091 = addInt(k_2013266091, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2013266091 < j_2013266073)) break Label6;
          a_2013266064[chckIndx(k_2013266091, 0, (a_2013266064).length - 1)] = b_2013266065[chckIndx(i_2013266090, 0, (b_2013266065).length - 1)];
          k_2013266091 = addInt(k_2013266091, 1);
          i_2013266090 = addInt(i_2013266090, 1);
        }
    };
  };

  
}

function sort_2013266045(a_2013266047, cmp_2013266050, order_2013266051) {
    var n_2013266055 = (a_2013266047).length;
    var b_2013266059 = newSeq_503316959(chckRange(divInt(n_2013266055, 2), 0, 2147483647));
    var s_2013266060 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2013266060 < n_2013266055)) break Label2;
          var m_2013266061 = subInt(subInt(n_2013266055, 1), s_2013266060);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2013266061)) break Label4;
                mergeAlt_2013266062(a_2013266047, b_2013266059, nimMax(addInt(subInt(m_2013266061, s_2013266060), 1), 0), m_2013266061, addInt(m_2013266061, s_2013266060), cmp_2013266050, order_2013266051);
                m_2013266061 = subInt(m_2013266061, mulInt(s_2013266060, 2));
              }
          };
          s_2013266060 = mulInt(s_2013266060, 2);
        }
    };

  
}

function sorted_2013266023(a_2013266025, cmp_2013266028, order_2013266029) {
  var result_2013266030 = [];

    result_2013266030 = nimCopy(null, newSeq_503316959(chckRange((a_2013266025).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_2013266044 = 0;
      var colontmp__2583691772 = 0;
      colontmp__2583691772 = (a_2013266025).length - 1;
      var res_2583691773 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691773 <= colontmp__2583691772)) break Label3;
            i_2013266044 = res_2583691773;
            result_2013266030[chckIndx(i_2013266044, 0, (result_2013266030).length - 1)] = nimCopy(null, a_2013266025[chckIndx(i_2013266044, 0, (a_2013266025).length - 1)], NTI33554449);
            res_2583691773 = addInt(res_2583691773, 1);
          }
      };
    };
    sort_2013266045(result_2013266030, cmp_2013266028, order_2013266029);

  return result_2013266030;

}

function cmp_2013266016(x_2013266018, y_2013266019) {
  var result_2013266020 = 0;

  BeforeRet: {
    if (eqStrings(x_2013266018, y_2013266019)) {
    result_2013266020 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_2013266018, y_2013266019) < 0)) {
    result_2013266020 = -1;
    break BeforeRet;
    }
    
    result_2013266020 = 1;
    break BeforeRet;
  };

  return result_2013266020;

}

function sorted_2013266011(a_2013266013, order_2013266014) {
  var result_2013266015 = [];

    result_2013266015 = nimCopy(null, sorted_2013266023(a_2013266013, cmp_2013266016, order_2013266014), NTI2013265996);

  return result_2013266015;

}

function newSeq_2013265936(len_2013265938) {
  var result_2013265939 = [];

    result_2013265939 = new Array(len_2013265938); for (var i = 0 ; i < len_2013265938 ; ++i) { result_2013265939[i] = []; }
  return result_2013265939;

}

function newSeq_2013265971(len_2013265973) {
  var result_2013265974 = [];

    result_2013265974 = new Array(len_2013265973); for (var i = 0 ; i < len_2013265973 ; ++i) { result_2013265974[i] = 0; }
  return result_2013265974;

}

function levenshtein_ratio_and_distance_2013265923(s_2013265924, t_2013265925, ratio_calc_2013265926) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_2013265927 = 0.0;

  BeforeRet: {
    var rows_2013265928 = addInt((s_2013265924).length, 1);
    var cols_2013265929 = addInt((t_2013265925).length, 1);
    var distance_2013265930 = [];
    var cost_2013265931 = 0;
    distance_2013265930 = nimCopy(null, newSeq_2013265936(chckRange(rows_2013265928, 0, 2147483647)), NTI2013265936);
    Label1: {
      var i_2013265966 = 0;
      var i_536872028 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872028 < rows_2013265928)) break Label3;
            i_2013265966 = i_536872028;
            distance_2013265930[chckIndx(i_2013265966, 0, (distance_2013265930).length - 1)] = nimCopy(null, newSeq_2013265971(chckRange(cols_2013265929, 0, 2147483647)), NTI2013265963);
            i_536872028 = addInt(i_536872028, 1);
          }
      };
    };
    Label4: {
      var i_2013265983 = 0;
      var i_536872034 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_536872034 < rows_2013265928)) break Label6;
            i_2013265983 = i_536872034;
            Label7: {
              var k_2013265988 = 0;
              var i_536872032 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_536872032 < cols_2013265929)) break Label9;
                    k_2013265988 = i_536872032;
                    distance_2013265930[chckIndx(i_2013265983, 0, (distance_2013265930).length - 1)][chckIndx(0, 0, (distance_2013265930[chckIndx(i_2013265983, 0, (distance_2013265930).length - 1)]).length - 1)] = i_2013265983;
                    distance_2013265930[chckIndx(0, 0, (distance_2013265930).length - 1)][chckIndx(k_2013265988, 0, (distance_2013265930[chckIndx(0, 0, (distance_2013265930).length - 1)]).length - 1)] = k_2013265988;
                    i_536872032 = addInt(i_536872032, 1);
                  }
              };
            };
            i_536872034 = addInt(i_536872034, 1);
          }
      };
    };
    Label10: {
      var col_2013265993 = 0;
      var i_536872040 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_536872040 < cols_2013265929)) break Label12;
            col_2013265993 = i_536872040;
            Label13: {
              var row_2013265998 = 0;
              var i_536872038 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_536872038 < rows_2013265928)) break Label15;
                    row_2013265998 = i_536872038;
                    if ((s_2013265924[chckIndx(subInt(row_2013265998, 1), 0, (s_2013265924).length - 1)] == t_2013265925[chckIndx(subInt(col_2013265993, 1), 0, (t_2013265925).length - 1)])) {
                    cost_2013265931 = 0;
                    }
                    else {
                      if (ratio_calc_2013265926) {
                      cost_2013265931 = 2;
                      }
                      else {
                        cost_2013265931 = 1;
                      }
                      
                    }
                    
                    distance_2013265930[chckIndx(row_2013265998, 0, (distance_2013265930).length - 1)][chckIndx(col_2013265993, 0, (distance_2013265930[chckIndx(row_2013265998, 0, (distance_2013265930).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_2013265930[chckIndx(subInt(row_2013265998, 1), 0, (distance_2013265930).length - 1)], Temporary16)[chckIndx(col_2013265993, 0, (Temporary16).length - 1)], 1), addInt(distance_2013265930[chckIndx(row_2013265998, 0, (distance_2013265930).length - 1)][chckIndx(subInt(col_2013265993, 1), 0, (distance_2013265930[chckIndx(row_2013265998, 0, (distance_2013265930).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_2013265930[chckIndx(subInt(row_2013265998, 1), 0, (distance_2013265930).length - 1)], Temporary17)[chckIndx(subInt(col_2013265993, 1), 0, (Temporary17).length - 1)], cost_2013265931));
                    i_536872038 = addInt(i_536872038, 1);
                  }
              };
            };
            i_536872040 = addInt(i_536872040, 1);
          }
      };
    };
    var dst_2013265999 = (Temporary18 = distance_2013265930[chckIndx(subInt(rows_2013265928, 1), 0, (distance_2013265930).length - 1)], Temporary18)[chckIndx(subInt(cols_2013265929, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_2013265926) {
    result_2013265927 = (subInt(addInt((s_2013265924).length, (t_2013265925).length), dst_2013265999) / addInt((s_2013265924).length, (t_2013265925).length));
    break BeforeRet;
    }
    else {
      result_2013265927 = dst_2013265999;
      break BeforeRet;
    }
    
  };

  return result_2013265927;

}

function fuzzyMatch_2013266000(s1_2013266001, s2_2013266002) {
  var result_2013266003 = 0.0;

  BeforeRet: {
    if (((s2_2013266002).length < (s1_2013266001).length)) {
    result_2013266003 = levenshtein_ratio_and_distance_2013265923(s2_2013266002, s1_2013266001, true);
    break BeforeRet;
    }
    
    result_2013266003 = levenshtein_ratio_and_distance_2013265923(s1_2013266001, s2_2013266002, true);
    break BeforeRet;
  };

  return result_2013266003;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_2013266004(s1_2013266005, s2_2013266006, withSubstring_2013266007) {
  var result_2013266008 = 0.0;

  BeforeRet: {
    var str1_2013266009 = [];
    var str2_2013266010 = [];
    str1_2013266009 = nimCopy(null, toLower_805313775(s1_2013266005), NTI33554449);
    str2_2013266010 = nimCopy(null, toLower_805313775(s2_2013266006), NTI33554449);
    str1_2013266009 = nimCopy(null, nsuJoinSep(sorted_2013266011(nsuSplitString(str1_2013266009, [32], -1), 1), [32]), NTI33554449);
    str2_2013266010 = nimCopy(null, nsuJoinSep(sorted_2013266011(nsuSplitString(str2_2013266010, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_2013266009, str2_2013266010)) {
    result_2013266008 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_2013266009).length == (str2_2013266010).length)) {
    result_2013266008 = fuzzyMatch_2013266000(str1_2013266009, str2_2013266010);
    break BeforeRet;
    }
    
    var shorter_2013266144 = [];
    var longer_2013266145 = [];
    if (((str1_2013266009).length < (str2_2013266010).length)) {
    shorter_2013266144 = nimCopy(null, str1_2013266009, NTI33554449);
    longer_2013266145 = nimCopy(null, str2_2013266010, NTI33554449);
    }
    else {
      shorter_2013266144 = nimCopy(null, str2_2013266010, NTI33554449);
      longer_2013266145 = nimCopy(null, str1_2013266009, NTI33554449);
    }
    
    var tmpRes_2013266146 = fuzzyMatch_2013266000(shorter_2013266144, longer_2013266145);
    if (withSubstring_2013266007) {
    var lengthDiff_2013266147 = subInt((longer_2013266145).length, (shorter_2013266144).length);
    var subMatch_2013266148 = 0.0;
    Label1: {
      var i_2013266153 = 0;
      var res_536872024 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872024 <= lengthDiff_2013266147)) break Label3;
            i_2013266153 = res_536872024;
            subMatch_2013266148 = fuzzyMatch_2013266000(shorter_2013266144, HEX5BHEX5D_872416507(longer_2013266145, HEX2EHEX2E_822083634(i_2013266153, subInt(addInt(i_2013266153, (shorter_2013266144).length), 1))));
            tmpRes_2013266146 = max_33555646(tmpRes_2013266146, subMatch_2013266148);
            res_536872024 = addInt(res_536872024, 1);
          }
      };
    };
    }
    
    result_2013266008 = tmpRes_2013266146;
    break BeforeRet;
  };

  return result_2013266008;

}

function newSeq_1325409623(len_1325409625) {
  var result_1325409626 = [];

    result_1325409626 = new Array(len_1325409625); for (var i = 0 ; i < len_1325409625 ; ++i) { result_1325409626[i] = null; }
  return result_1325409626;

}

function mergeAlt_1325409634(a_1325409636, b_1325409637, lo_1325409638, m_1325409639, hi_1325409640, cmp_1325409643, order_1325409644) {
  BeforeRet: {
    if ((HEX2A_1040187400(cmp_1325409643(a_1325409636[chckIndx(m_1325409639, 0, (a_1325409636).length - 1)], a_1325409636[chckIndx(addInt(m_1325409639, 1), 0, (a_1325409636).length - 1)]), order_1325409644) <= 0)) {
    break BeforeRet;
    }
    
    var j_1325409645 = lo_1325409638;
    if (!((j_1325409645 <= m_1325409639))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1325409651 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1325409645 <= m_1325409639)) break Label2;
          b_1325409637[chckIndx(bb_1325409651, 0, (b_1325409637).length - 1)] = a_1325409636[chckIndx(j_1325409645, 0, (a_1325409636).length - 1)];
          bb_1325409651 = addInt(bb_1325409651, 1);
          j_1325409645 = addInt(j_1325409645, 1);
        }
    };
    var i_1325409662 = 0;
    var k_1325409663 = lo_1325409638;
    Label3: {
        Label4: while (true) {
        if (!((k_1325409663 < j_1325409645) && (j_1325409645 <= hi_1325409640))) break Label4;
          if ((HEX2A_1040187400(cmp_1325409643(b_1325409637[chckIndx(i_1325409662, 0, (b_1325409637).length - 1)], a_1325409636[chckIndx(j_1325409645, 0, (a_1325409636).length - 1)]), order_1325409644) <= 0)) {
          a_1325409636[chckIndx(k_1325409663, 0, (a_1325409636).length - 1)] = b_1325409637[chckIndx(i_1325409662, 0, (b_1325409637).length - 1)];
          i_1325409662 = addInt(i_1325409662, 1);
          }
          else {
            a_1325409636[chckIndx(k_1325409663, 0, (a_1325409636).length - 1)] = a_1325409636[chckIndx(j_1325409645, 0, (a_1325409636).length - 1)];
            j_1325409645 = addInt(j_1325409645, 1);
          }
          
          k_1325409663 = addInt(k_1325409663, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1325409663 < j_1325409645)) break Label6;
          a_1325409636[chckIndx(k_1325409663, 0, (a_1325409636).length - 1)] = b_1325409637[chckIndx(i_1325409662, 0, (b_1325409637).length - 1)];
          k_1325409663 = addInt(k_1325409663, 1);
          i_1325409662 = addInt(i_1325409662, 1);
        }
    };
  };

  
}

function sort_1325409611(a_1325409613, cmp_1325409616, order_1325409617) {
    var n_1325409622 = (a_1325409613).length;
    var b_1325409631 = newSeq_1325409623(chckRange(divInt(n_1325409622, 2), 0, 2147483647));
    var s_1325409632 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1325409632 < n_1325409622)) break Label2;
          var m_1325409633 = subInt(subInt(n_1325409622, 1), s_1325409632);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1325409633)) break Label4;
                mergeAlt_1325409634(a_1325409613, b_1325409631, nimMax(addInt(subInt(m_1325409633, s_1325409632), 1), 0), m_1325409633, addInt(m_1325409633, s_1325409632), cmp_1325409616, order_1325409617);
                m_1325409633 = subInt(m_1325409633, mulInt(s_1325409632, 2));
              }
          };
          s_1325409632 = mulInt(s_1325409632, 2);
        }
    };

  
}

function cmp_2734702155(x_2734702157, y_2734702158) {
  var result_2734702159 = 0;

  BeforeRet: {
    if ((x_2734702157 == y_2734702158)) {
    result_2734702159 = 0;
    break BeforeRet;
    }
    
    if ((x_2734702157 < y_2734702158)) {
    result_2734702159 = -1;
    break BeforeRet;
    }
    
    result_2734702159 = 1;
    break BeforeRet;
  };

  return result_2734702159;

}

function init_2231369742(self_2231369743) {
    self_2231369743.id = newEditorId_2197815611();

  
}

function pushPopup_1325403386(self_1325403387, popup_1325403388) {
    init_2231369742(popup_1325403388);
    self_1325403387.popups.push(popup_1325403388);;

  
}

function chooseTheme_1325409552(self_1325409553) {
    
function HEX3Aanonymous_1325409555(popup_1325409556, text_1325409557) {
                          var Temporary9;
        
function HEX3Aanonymous_1325409571(a_1325409598, b_1325409599) {
          var result_1325409604 = 0;

            result_1325409604 = cmp_2734702155(a_1325409598.score, b_1325409599.score);

          return result_1325409604;

        }

      var result_1325409558 = [];

        Label1: {
          var file_1325409559 = [];
          var stack_536871987 = [[[]]];
          var checkDir_536871988 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_536871987[0]).length)) break Label3;
                var d_536871990 = pop_1593835659(stack_536871987, 0);
                Label4: {
                  var k_536871992 = 0;
                  var p_536871993 = [];
                  var colontmp__536871994 = [];
                  colontmp__536871994 = HEX2F_1459617878([46,47,116,104,101,109,101,115], d_536871990);
                  Label5: {
                    var k_536872004 = 0;
                    var v_536872005 = [];
                    var colontmp__536872006 = [];
                    colontmp__536872006 = staticWalkDir_1593835556(colontmp__536871994, true);
                    var i_536872007 = 0;
                    var L_536872008 = (colontmp__536872006).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_536872007 < L_536872008)) break Label7;
                          k_536872004 = colontmp__536872006[chckIndx(i_536872007, 0, (colontmp__536872006).length - 1)]["Field0"];
                          v_536872005 = colontmp__536872006[chckIndx(i_536872007, 0, (colontmp__536872006).length - 1)]["Field1"];
                          k_536871992 = k_536872004;
                          p_536871993 = v_536872005;
                          var rel_536872010 = HEX2F_1459617878(d_536871990, p_536871993);
                          if (((ConstSet263[k_536871992] != undefined) && (ConstSet264[k_536871992] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_536872010, NTI33554449);
                          stack_536871987[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet265[k_536871992] != undefined)) {
                          if (true) {
                          Temporary9 = rel_536872010;
                          }
                          else {
                          Temporary9 = HEX2F_1459617878([46,47,116,104,101,109,101,115], rel_536872010);
                          }
                          
                          file_1325409559 = Temporary9;
                          if (nsuEndsWith(file_1325409559, [46,106,115,111,110])) {
                          var name_536872011 = nimCopy(null, nossplitFile(file_1325409559).Field1, NTI33554449);
                          var score_536872012 = fuzzyMatchSmart_2013266004(text_1325409557, name_536872011, true);
                          var fmtRes_536872013 = [mnewString(0)];
                          fmtRes_536872013[0].push.apply(fmtRes_536872013[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_738197675(fmtRes_536872013, 0, file_1325409559, []);
                          result_1325409558.push({name: nimCopy(null, name_536872011, NTI33554449), path: nimCopy(null, fmtRes_536872013[0], NTI33554449), score: score_536872012, m_type: NTI1325402822});;
                          }
                          
                          }
                          
                          i_536872007 = addInt(i_536872007, 1);
                          if (!(((colontmp__536872006).length == L_536872008))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_536871988 = false;
              }
          };
        };
        sort_1325409611(result_1325409558, HEX3Aanonymous_1325409571, 0);

      return result_1325409558;

    }
    
function HEX3Aanonymous_1325409731(item_1325409732) {
          var Temporary1;

          var oHEX60gensym297_1325409735 = loadFromFile_2499808842(item_1325409732.path);
          if (!isSome_1325405270(oHEX60gensym297_1325409735)) Temporary1 = false; else {            var theme_1325409758 = get_1325405290(oHEX60gensym297_1325409735);
            Temporary1 = true;          }        if (Temporary1) {
        self_1325409553.theme = theme_1325409758;
        }
        

      
    }
    
function HEX3Aanonymous_1325409759(item_1325409760) {
          var Temporary1;

          var oHEX60gensym298_1325409763 = loadFromFile_2499808842(item_1325409760.path);
          if (!isSome_1325405270(oHEX60gensym298_1325409763)) Temporary1 = false; else {            var theme_1325409786 = get_1325405290(oHEX60gensym298_1325409763);
            Temporary1 = true;          }        if (Temporary1) {
        self_1325409553.theme = theme_1325409786;
        }
        

      
    }
    
function HEX3Aanonymous_1325409787() {
          var Temporary1;

          var oHEX60gensym299_1325409790 = loadFromFile_2499808842(originalTheme_1325409554);
          if (!isSome_1325405270(oHEX60gensym299_1325409790)) Temporary1 = false; else {            var theme_1325409813 = get_1325405290(oHEX60gensym299_1325409790);
            Temporary1 = true;          }        if (Temporary1) {
        self_1325409553.theme = theme_1325409813;
        }
        

      
    }

    var originalTheme_1325409554 = nimCopy(null, self_1325409553.theme.path, NTI33554449);
    var popup_1325409730 = newSelectorPopup_3003122337(self_1325409553, HEX3Aanonymous_1325409555);
    popup_1325409730.handleItemSelected = HEX3Aanonymous_1325409731;
    popup_1325409730.handleItemConfirmed = HEX3Aanonymous_1325409759;
    popup_1325409730.handleCanceled = HEX3Aanonymous_1325409787;
    pushPopup_1325403386(self_1325409553, popup_1325409730);

  
}

function chooseThemeScript_1325409832() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym291_1325409833 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym291_1325409833)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1325409552(get_1325407477(rHEX60gensym291_1325409833));
  };

  
}

function chooseThemeApi_1325409856(HEX3Atmp_1325409549) {
  var result_1325409857 = null;

    result_1325409857 = newJNull_1660944481();
++excHandler;
    try {
    chooseThemeScript_1325409832();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym293_1325409858 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1325409863 = [mnewString(0)];
    fmtRes_1325409863[0].push.apply(fmtRes_1325409863[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409863, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym293_1325409858 || [],fmtRes_1325409863[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409857;

}

function chooseFile_1325409872(self_1325409873, view_1325409874) {
    
function HEX3Aanonymous_1325409875(popup_1325409876, text_1325409877) {
                          var Temporary9;
        
function HEX3Aanonymous_1325409891(a_1325409918, b_1325409919) {
          var result_1325409924 = 0;

            result_1325409924 = cmp_2734702155(a_1325409918.score, b_1325409919.score);

          return result_1325409924;

        }

      var result_1325409878 = [];

        Label1: {
          var file_1325409879 = [];
          var stack_536872050 = [[[]]];
          var checkDir_536872051 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_536872050[0]).length)) break Label3;
                var d_536872053 = pop_1593835659(stack_536872050, 0);
                Label4: {
                  var k_536872055 = 0;
                  var p_536872056 = [];
                  var colontmp__536872057 = [];
                  colontmp__536872057 = HEX2F_1459617878([46], d_536872053);
                  Label5: {
                    var k_536872067 = 0;
                    var v_536872068 = [];
                    var colontmp__536872069 = [];
                    colontmp__536872069 = staticWalkDir_1593835556(colontmp__536872057, true);
                    var i_536872070 = 0;
                    var L_536872071 = (colontmp__536872069).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_536872070 < L_536872071)) break Label7;
                          k_536872067 = colontmp__536872069[chckIndx(i_536872070, 0, (colontmp__536872069).length - 1)]["Field0"];
                          v_536872068 = colontmp__536872069[chckIndx(i_536872070, 0, (colontmp__536872069).length - 1)]["Field1"];
                          k_536872055 = k_536872067;
                          p_536872056 = v_536872068;
                          var rel_536872073 = HEX2F_1459617878(d_536872053, p_536872056);
                          if (((ConstSet266[k_536872055] != undefined) && (ConstSet267[k_536872055] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_536872073, NTI33554449);
                          stack_536872050[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet268[k_536872055] != undefined)) {
                          if (true) {
                          Temporary9 = rel_536872073;
                          }
                          else {
                          Temporary9 = HEX2F_1459617878([46], rel_536872073);
                          }
                          
                          file_1325409879 = Temporary9;
                          var name_536872074 = nimCopy(null, nossplitFile(file_1325409879).Field1, NTI33554449);
                          var score_536872075 = fuzzyMatchSmart_2013266004(text_1325409877, name_536872074, true);
                          var fmtRes_536872076 = [mnewString(0)];
                          fmtRes_536872076[0].push.apply(fmtRes_536872076[0], [46,47]);;
                          formatValue_738197675(fmtRes_536872076, 0, file_1325409879, []);
                          result_1325409878.push({path: nimCopy(null, fmtRes_536872076[0], NTI33554449), score: score_536872075, m_type: NTI1325402824});;
                          }
                          
                          i_536872070 = addInt(i_536872070, 1);
                          if (!(((colontmp__536872069).length == L_536872071))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_536872051 = false;
              }
          };
        };
        sort_1325409611(result_1325409878, HEX3Aanonymous_1325409891, 0);

      return result_1325409878;

    }
    view_1325409874 = nimCopy(null, view_1325409874, NTI33554449);
    
function HEX3Aanonymous_1325409948(item_1325409949) {
        switch (toJSStr(view_1325409874)) {
        case "current":
          loadFile_1325409406(self_1325409873, item_1325409949.path);
          break;
        case "new":
          openFile_1325409296(self_1325409873, item_1325409949.path);
          break;
        default: 
          var fmtRes_1325409954 = [mnewString(0)];
          fmtRes_1325409954[0].push.apply(fmtRes_1325409954[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_738197675(fmtRes_1325409954, 0, view_1325409874, []);
          log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_1325409954[0], NTI33554449)]);
          break;
        }

      
    }

    var popup_1325409947 = newSelectorPopup_3003122337(self_1325409873, HEX3Aanonymous_1325409875);
    popup_1325409947.handleItemConfirmed = HEX3Aanonymous_1325409948;
    pushPopup_1325403386(self_1325409873, popup_1325409947);

  
}

function chooseFileScript_1325409955(view_1325409956) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym303_1325409957 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym303_1325409957)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1325409872(get_1325407477(rHEX60gensym303_1325409957), view_1325409956);
  };

  
}

function chooseFileApi_1325409980(HEX3Atmp_1325409869) {
      var Temporary3;

  var result_1325409981 = null;

    result_1325409981 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1660947415(HEX3Atmp_1325409869))) {
      Temporary3 = jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325409869, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1325409955(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym305_1325409987 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1325409992 = [mnewString(0)];
    fmtRes_1325409992[0].push.apply(fmtRes_1325409992[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325409992, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym305_1325409987 || [],fmtRes_1325409992[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325409981;

}

function reloadConfig_1325410001(self_1325410002) {
  
}

function reloadConfigScript_1325410003() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym311_1325410004 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym311_1325410004)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1325410001(get_1325407477(rHEX60gensym311_1325410004));
  };

  
}

function reloadConfigApi_1325410027(HEX3Atmp_1325409998) {
  var result_1325410028 = null;

    result_1325410028 = newJNull_1660944481();
++excHandler;
    try {
    reloadConfigScript_1325410003();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym313_1325410029 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1325410034 = [mnewString(0)];
    fmtRes_1325410034[0].push.apply(fmtRes_1325410034[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410034, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym313_1325410029 || [],fmtRes_1325410034[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325410028;

}

function logOptions_1325410043(self_1325410044) {
    log_1191182436(logger_721420488[0], 2, [pretty_1660948909(self_1325410044.options, 2)]);

  
}

function logOptionsScript_1325410045() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym316_1325410046 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym316_1325410046)) {
      break BeforeRet;
      }
      
    };
    logOptions_1325410043(get_1325407477(rHEX60gensym316_1325410046));
  };

  
}

function logOptionsApi_1325410069(HEX3Atmp_1325410040) {
  var result_1325410070 = null;

    result_1325410070 = newJNull_1660944481();
++excHandler;
    try {
    logOptionsScript_1325410045();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym318_1325410071 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1325410076 = [mnewString(0)];
    fmtRes_1325410076[0].push.apply(fmtRes_1325410076[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410076, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym318_1325410071 || [],fmtRes_1325410076[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325410070;

}

function clear_2080375813(t_2080375816) {
    Label1: {
      var i_2080375868 = 0;
      var colontmp__536872082 = 0;
      colontmp__536872082 = (t_2080375816.data).length;
      var i_536872083 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872083 < colontmp__536872082)) break Label3;
            i_2080375868 = i_536872083;
            t_2080375816.data[chckIndx(i_2080375868, 0, (t_2080375816.data).length - 1)].Field0 = 0;
            t_2080375816.data[chckIndx(i_2080375868, 0, (t_2080375816.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2080375816.data[chckIndx(i_2080375868, 0, (t_2080375816.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_536872083 = addInt(i_536872083, 1);
          }
      };
    };
    t_2080375816.counter = 0;

  
}

function clearCommands_2080375771(config_2080375772) {
    clear_2080375813(config_2080375772.commands);
    config_2080375772.revision = addInt(config_2080375772.revision, 1);

  
}

function clearCommands_1325410085(self_1325410086, context_1325410087) {
    clearCommands_2080375771(getEventHandlerConfig_1325403449(self_1325410086, context_1325410087));

  
}

function clearCommandsScript_1325410088(context_1325410089) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym322_1325410090 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym322_1325410090)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1325410085(get_1325407477(rHEX60gensym322_1325410090), context_1325410089);
  };

  
}

function clearCommandsApi_1325410113(HEX3Atmp_1325410082) {
  var result_1325410114 = null;

    result_1325410114 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1325410088(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325410082, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym324_1325410120 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1325410125 = [mnewString(0)];
    fmtRes_1325410125[0].push.apply(fmtRes_1325410125[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410125, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym324_1325410120 || [],fmtRes_1325410125[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325410114;

}

function toJson_1325410389(a_1325410391, opt_1325410392) {
  var result_1325410393 = null;

    result_1325410393 = newJArray_1660944514();
    Label1: {
      var ai_1325410400 = 0;
      var i_536872086 = 0;
      var L_536872087 = (a_1325410391).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872086 < L_536872087)) break Label3;
            ai_1325410400 = a_1325410391[chckIndx(i_536872086, 0, (a_1325410391).length - 1)];
            add_1660944622(result_1325410393, toJson_2634029911(ai_1325410400, opt_1325410392));
            i_536872086 = addInt(i_536872086, 1);
            if (!(((a_1325410391).length == L_536872087))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1325410393;

}

function len_1325407195(t_1325407198) {
  var result_1325407199 = 0;

    result_1325407199 = t_1325407198.counter;

  return result_1325407199;

}

function getAllEditors_1325410134(self_1325410135) {
  var result_1325410136 = [];

    Label1: {
      var id_1325410357 = 0;
      var L_536872095 = len_1325407195(self_1325410135.editors);
      Label2: {
        var h_536872097 = 0;
        var colontmp__536872098 = 0;
        colontmp__536872098 = (self_1325410135.editors.data).length - 1;
        var res_536872099 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872099 <= colontmp__536872098)) break Label4;
              h_536872097 = res_536872099;
              if (isFilled_1342177312(self_1325410135.editors.data[chckIndx(h_536872097, 0, (self_1325410135.editors.data).length - 1)].Field0)) {
              id_1325410357 = self_1325410135.editors.data[chckIndx(h_536872097, 0, (self_1325410135.editors.data).length - 1)]["Field1"];
              result_1325410136.push(id_1325410357);;
              if (!((len_1325407195(self_1325410135.editors) == L_536872095))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872099 = addInt(res_536872099, 1);
            }
        };
      };
    };

  return result_1325410136;

}

function getAllEditorsScript_1325410362() {
  var result_1325410363 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym327_1325410364 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym327_1325410364)) {
      break BeforeRet;
      }
      
    };
    result_1325410363 = nimCopy(null, getAllEditors_1325410134(get_1325407477(rHEX60gensym327_1325410364)), NTI1325406467);
  };

  return result_1325410363;

}

function getAllEditorsApi_1325410387(HEX3Atmp_1325410131) {
  var result_1325410388 = null;

  BeforeRet: {
    result_1325410388 = newJNull_1660944481();
++excHandler;
    try {
    result_1325410388 = toJson_1325410389(getAllEditorsScript_1325410362(), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym330_1325410405 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1325410410 = [mnewString(0)];
    fmtRes_1325410410[0].push.apply(fmtRes_1325410410[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410410, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym330_1325410405 || [],fmtRes_1325410410[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325410388;

}

function getModeConfig_1325410415(self_1325410416, mode_1325410417) {
  var result_1325410418 = null;

  BeforeRet: {
    result_1325410418 = getEventHandlerConfig_1325403449(self_1325410416, ([101,100,105,116,111,114,46] || []).concat(mode_1325410417 || []));
    break BeforeRet;
  };

  return result_1325410418;

}

function setMode_1325410423(self_1325410424, mode_1325410425) {
        
function HEX3Aanonymous_1325410446(actionHEX60gensym339HEX60gensym340_1325410447, argHEX60gensym339HEX60gensym340_1325410448) {
            var Temporary1;

          var result_1325410449 = 0;

          BeforeRet: {
            if (handlerHEX60gensym339_1325410434.config.handleActions) {
            var action_1325410450 = nimCopy(null, actionHEX60gensym339HEX60gensym340_1325410447, NTI33554449);
            var arg_1325410451 = nimCopy(null, argHEX60gensym339HEX60gensym340_1325410448, NTI33554449);
            if (handleAction_1325403247(self_1325410424, action_1325410450, arg_1325410451)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym339HEX60gensym340_1325410452 = Temporary1;
            if (handlerHEX60gensym339_1325410434.config.consumeAllActions) {
            result_1325410449 = 3;
            break BeforeRet;
            }
            
            result_1325410449 = responseHEX60gensym339HEX60gensym340_1325410452;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym339_1325410434.config.consumeAllActions) {
            result_1325410449 = 3;
            break BeforeRet;
            }
            else {
              result_1325410449 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1325410449;

        }
        
function HEX3Aanonymous_1325410454(inputHEX60gensym339HEX60gensym341_1325410455) {
          var result_1325410456 = 0;

          BeforeRet: {
            if (handlerHEX60gensym339_1325410434.config.handleInputs) {
            var input_1325410457 = nimCopy(null, inputHEX60gensym339HEX60gensym341_1325410455, NTI33554449);
            result_1325410456 = 1;
            break BeforeRet;
            }
            else {
              result_1325410456 = 1;
              break BeforeRet;
            }
            
          };

          return result_1325410456;

        }

    if (((mode_1325410425).length == 0)) {
    self_1325410424.modeEventHandler = null;
    }
    else {
      var config_1325410426 = getModeConfig_1325410415(self_1325410424, mode_1325410425);
      Label1: {
        var handlerHEX60gensym339_1325410434 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym339_1325410434.config = config_1325410426;
        handlerHEX60gensym339_1325410434.dfaInternal = buildDFA_2080374845(config_1325410426);
        handlerHEX60gensym339_1325410434.handleAction = HEX3Aanonymous_1325410446;
        handlerHEX60gensym339_1325410434.handleInput = HEX3Aanonymous_1325410454;
      };
      self_1325410424.modeEventHandler = handlerHEX60gensym339_1325410434;
    }
    
    self_1325410424.currentMode = nimCopy(null, mode_1325410425, NTI33554449);

  
}

function setModeScript22_1325410458(mode_1325410459) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym336_1325410460 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym336_1325410460)) {
      break BeforeRet;
      }
      
    };
    setMode_1325410423(get_1325407477(rHEX60gensym336_1325410460), mode_1325410459);
  };

  
}

function setModeApi22_1325410483(HEX3Atmp_1325410420) {
  var result_1325410484 = null;

    result_1325410484 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1325410458(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325410420, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym338_1325410490 = [115,101,116,77,111,100,101];
    var fmtRes_1325410495 = [mnewString(0)];
    fmtRes_1325410495[0].push.apply(fmtRes_1325410495[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410495, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym338_1325410490 || [],fmtRes_1325410495[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325410484;

}

function mode_1325410504(self_1325410505) {
  var result_1325410506 = [];

  BeforeRet: {
    result_1325410506 = nimCopy(null, self_1325410505.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1325410506;

}

function modeScript22_1325410507() {
  var result_1325410508 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym344_1325410509 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym344_1325410509)) {
      break BeforeRet;
      }
      
    };
    result_1325410508 = nimCopy(null, mode_1325410504(get_1325407477(rHEX60gensym344_1325410509)), NTI33554449);
  };

  return result_1325410508;

}

function modeApi22_1325410532(HEX3Atmp_1325410501) {
  var result_1325410533 = null;

  BeforeRet: {
    result_1325410533 = newJNull_1660944481();
++excHandler;
    try {
    result_1325410533 = toJson_1845494346(modeScript22_1325410507(), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym347_1325410538 = [109,111,100,101];
    var fmtRes_1325410543 = [mnewString(0)];
    fmtRes_1325410543[0].push.apply(fmtRes_1325410543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym347_1325410538 || [],fmtRes_1325410543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325410533;

}

function getContextWithModeScript22_1325410556(context_1325410557) {
  var result_1325410558 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym351_1325410559 = getEditor_1325407405();
      if (isNone_1325407457(rHEX60gensym351_1325410559)) {
      break BeforeRet;
      }
      
    };
    result_1325410558 = nimCopy(null, getContextWithMode_1325410552(get_1325407477(rHEX60gensym351_1325410559), context_1325410557), NTI33554449);
  };

  return result_1325410558;

}

function getContextWithModeApi22_1325410582(HEX3Atmp_1325410549) {
  var result_1325410583 = null;

  BeforeRet: {
    result_1325410583 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    result_1325410583 = toJson_1845494346(getContextWithModeScript22_1325410556(jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_1325410549, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym354_1325410593 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1325410598 = [mnewString(0)];
    fmtRes_1325410598[0].push.apply(fmtRes_1325410598[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_1325410598, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym354_1325410593 || [],fmtRes_1325410598[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1325410583;

}

function dispatch_1325410606(command_1325410605, arg_1325410604) {
    var Temporary1;

  var result_1325410608 = ({val: null});

    switch (toJSStr(command_1325410605)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2634035405(getBackendApi_1325407498(arg_1325410604));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2634035405(setHandleInputsApi_1325407641(arg_1325410604));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2634035405(setHandleActionsApi_1325407697(arg_1325410604));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2634035405(setConsumeAllActionsApi_1325407753(arg_1325410604));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2634035405(setConsumeAllInputApi_1325407809(arg_1325410604));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2634035405(getFlagApi2_1325407876(arg_1325410604));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2634035405(setFlagApi2_1325407991(arg_1325410604));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2634035405(toggleFlagApi_1325408045(arg_1325410604));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2634035405(setOptionApi_1325408135(arg_1325410604));
      break;
    case "quit":
      Temporary1 = some_2634035405(quitApi_1325408182(arg_1325410604));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2634035405(changeFontSizeApi_1325408226(arg_1325410604));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2634035405(changeLayoutPropApi_1325408526(arg_1325410604));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2634035405(toggleStatusBarLocationApi_1325408578(arg_1325410604));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2634035405(createViewApi_1325408624(arg_1325410604));
      break;
    case "createKeybindAutocompleteView":
    case "create-keybind-autocomplete-view":
      Temporary1 = some_2634035405(createKeybindAutocompleteViewApi_1325408666(arg_1325410604));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2634035405(closeCurrentViewApi_1325408738(arg_1325410604));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2634035405(moveCurrentViewToTopApi_1325408816(arg_1325410604));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2634035405(nextViewApi_1325408864(arg_1325410604));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2634035405(prevViewApi_1325408915(arg_1325410604));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2634035405(moveCurrentViewPrevApi_1325408980(arg_1325410604));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2634035405(moveCurrentViewNextApi_1325409042(arg_1325410604));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2634035405(setLayoutApi_1325409122(arg_1325410604));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2634035405(commandLineApi_1325409175(arg_1325410604));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2634035405(exitCommandLineApi_1325409226(arg_1325410604));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2634035405(executeCommandLineApi_1325409276(arg_1325410604));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2634035405(openFileApi_1325409324(arg_1325410604));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2634035405(writeFileApi_1325409385(arg_1325410604));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2634035405(loadFileApi_1325409446(arg_1325410604));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2634035405(loadThemeApi_1325409531(arg_1325410604));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2634035405(chooseThemeApi_1325409856(arg_1325410604));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2634035405(chooseFileApi_1325409980(arg_1325410604));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2634035405(reloadConfigApi_1325410027(arg_1325410604));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2634035405(logOptionsApi_1325410069(arg_1325410604));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2634035405(clearCommandsApi_1325410113(arg_1325410604));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2634035405(getAllEditorsApi_1325410387(arg_1325410604));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2634035405(setModeApi22_1325410483(arg_1325410604));
      break;
    case "mode":
      Temporary1 = some_2634035405(modeApi22_1325410532(arg_1325410604));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2634035405(getContextWithModeApi22_1325410582(arg_1325410604));
      break;
    default: 
      Temporary1 = none_2634035601();
      break;
    }
    result_1325410608 = nimCopy(result_1325410608, Temporary1, NTI2634031918);

  return result_1325410608;

}

function handleAction_1325403247(self_1325403248, action_1325403249, arg_1325403250) {
  var result_1325410733 = false;

  BeforeRet: {
    log_1191182436(logger_721420488[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1325403249, NTI33554449), nimCopy(null, arg_1325403250, NTI33554449)])]);
    var args_1325410734 = newJArray_1660944514();
    Label1: {
      var a_1325410735 = null;
      var colontmp__536871171 = null;
      colontmp__536871171 = newStringStream_1694499849(arg_1325403250);
      var p_536871173 = [({m_type: NTI1728053255, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1728053345(p_536871173[0], colontmp__536871171, [], false);
      try {
      var _ = getTok_1728053702(p_536871173[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536871173[0].tok == 1))) break Label4;
            a_1325410735 = parseJson_1660949643(p_536871173[0], false, false, 0);
            add_1660944622(args_1325410734, a_1325410735);
          }
      };
      } finally {
      close_1728053399(p_536871173[0]);
      }
    };
    result_1325410733 = isSome_2634035669(dispatch_1325410606(action_1325403249, args_1325410734));
    break BeforeRet;
  };

  return result_1325410733;

}

function newEditor_1325405353(backend_1325405354, platform_1325405355) {
    
function HEX3Aanonymous_1325405372(event_1325405375) {
        handleKeyPress_1325405320(self_1325405357, event_1325405375.Field0, event_1325405375.Field1);

      
    }
    
function HEX3Aanonymous_1325405418(event_1325405421) {
        handleKeyRelease_1325405324(self_1325405357, event_1325405421.Field0, event_1325405421.Field1);

      
    }
    
function HEX3Aanonymous_1325405441(event_1325405444) {
        handleRune_1325405328(self_1325405357, event_1325405444.Field0, event_1325405444.Field1);

      
    }
    
function HEX3Aanonymous_1325405464(event_1325405467) {
        handleMousePress_1325405332(self_1325405357, event_1325405467.Field0, event_1325405467.Field1, event_1325405467.Field2);

      
    }
    
function HEX3Aanonymous_1325405510(event_1325405513) {
        handleMouseRelease_1325405337(self_1325405357, event_1325405513.Field0, event_1325405513.Field1, event_1325405513.Field2);

      
    }
    
function HEX3Aanonymous_1325405533(event_1325405536) {
        handleMouseMove_1325405342(self_1325405357, event_1325405536.Field0, event_1325405536.Field1, event_1325405536.Field2, event_1325405536.Field3);

      
    }
    
function HEX3Aanonymous_1325405579(event_1325405582) {
        handleScroll_1325405348(self_1325405357, event_1325405582.Field1, event_1325405582.Field0, event_1325405582.Field2);

      
    }
    
function HEX3Aanonymous_1325405625() {
        self_1325405357.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1325406813(actionHEX60gensym66HEX60gensym67_1325406814, argHEX60gensym66HEX60gensym67_1325406815) {
          var Temporary1;

        var result_1325406816 = 0;

        BeforeRet: {
          if (handlerHEX60gensym66_1325406801.config.handleActions) {
          var action_1325406817 = nimCopy(null, actionHEX60gensym66HEX60gensym67_1325406814, NTI33554449);
          var arg_1325406818 = nimCopy(null, argHEX60gensym66HEX60gensym67_1325406815, NTI33554449);
          if (handleAction_1325403247(self_1325405357, action_1325406817, arg_1325406818)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym66HEX60gensym67_1325406819 = Temporary1;
          if (handlerHEX60gensym66_1325406801.config.consumeAllActions) {
          result_1325406816 = 3;
          break BeforeRet;
          }
          
          result_1325406816 = responseHEX60gensym66HEX60gensym67_1325406819;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym66_1325406801.config.consumeAllActions) {
          result_1325406816 = 3;
          break BeforeRet;
          }
          else {
            result_1325406816 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1325406816;

      }
      
function HEX3Aanonymous_1325406821(inputHEX60gensym66HEX60gensym68_1325406822) {
        var result_1325406823 = 0;

        BeforeRet: {
          if (handlerHEX60gensym66_1325406801.config.handleInputs) {
          var input_1325406824 = nimCopy(null, inputHEX60gensym66HEX60gensym68_1325406822, NTI33554449);
          result_1325406823 = 1;
          break BeforeRet;
          }
          else {
            result_1325406823 = 1;
            break BeforeRet;
          }
          
        };

        return result_1325406823;

      }
      
function HEX3Aanonymous_1325406844(actionHEX60gensym69HEX60gensym70_1325406845, argHEX60gensym69HEX60gensym70_1325406846) {
          var Temporary1;

        var result_1325406847 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_1325406832.config.handleActions) {
          var action_1325406848 = nimCopy(null, actionHEX60gensym69HEX60gensym70_1325406845, NTI33554449);
          var arg_1325406849 = nimCopy(null, argHEX60gensym69HEX60gensym70_1325406846, NTI33554449);
          if (handleAction_1325403247(self_1325405357, action_1325406848, arg_1325406849)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym69HEX60gensym70_1325406850 = Temporary1;
          if (handlerHEX60gensym69_1325406832.config.consumeAllActions) {
          result_1325406847 = 3;
          break BeforeRet;
          }
          
          result_1325406847 = responseHEX60gensym69HEX60gensym70_1325406850;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym69_1325406832.config.consumeAllActions) {
          result_1325406847 = 3;
          break BeforeRet;
          }
          else {
            result_1325406847 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1325406847;

      }
      
function HEX3Aanonymous_1325406852(inputHEX60gensym69HEX60gensym71_1325406853) {
        var result_1325406854 = 0;

        BeforeRet: {
          if (handlerHEX60gensym69_1325406832.config.handleInputs) {
          var input_1325406855 = nimCopy(null, inputHEX60gensym69HEX60gensym71_1325406853, NTI33554449);
          result_1325406854 = 1;
          break BeforeRet;
          }
          else {
            result_1325406854 = 1;
            break BeforeRet;
          }
          
        };

        return result_1325406854;

      }

  var result_1325405356 = null;

  BeforeRet: {
    var self_1325405357 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    gEditor_1325400204[0] = self_1325405357;
    self_1325405357.platform = platform_1325405355;
    self_1325405357.backend = backend_1325405354;
    self_1325405357.statusBarOnTop = false;
    if (!((platform_1325405355 == null))) {
    var _ = subscribe_1325405379(platform_1325405355.onKeyPress, HEX3Aanonymous_1325405372);
    var _ = subscribe_1325405379(platform_1325405355.onKeyRelease, HEX3Aanonymous_1325405418);
    var _ = subscribe_1325405379(platform_1325405355.onRune, HEX3Aanonymous_1325405441);
    var _ = subscribe_1325405471(platform_1325405355.onMousePress, HEX3Aanonymous_1325405464);
    var _ = subscribe_1325405471(platform_1325405355.onMouseRelease, HEX3Aanonymous_1325405510);
    var _ = subscribe_1325405540(platform_1325405355.onMouseMove, HEX3Aanonymous_1325405533);
    var _ = subscribe_1325405586(platform_1325405355.onScroll, HEX3Aanonymous_1325405579);
    var _ = subscribe_1325405632(platform_1325405355.onCloseRequested, HEX3Aanonymous_1325405625);
    }
    
    self_1325405357.timer = nimCopy(self_1325405357.timer, startTimer_2248146975(), NTI2248146964);
    self_1325405357.frameTimer = nimCopy(self_1325405357.frameTimer, startTimer_2248146975(), NTI2248146964);
    self_1325405357.layout = {m_type: NTI1325400075};
    self_1325405357.layout_props = {props: toTable_1325405660([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2332033152(self_1325405357.platform, 20.0);
    self_1325405357.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1325405357.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1325405357.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1325405357.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1325405357.editor_defaults = nimCopy(null, [{m_type: NTI2634023118, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false}, {m_type: NTI2734687781, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({id: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false}], NTI1325403646);
    self_1325405357.theme = defaultTheme_2499808846();
    setTheme_1325405260(self_1325405357, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1325405357.currentView = 0;
    addCommand_2080375164(getEventHandlerConfig_1325403449(self_1325405357, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2080375164(getEventHandlerConfig_1325403449(self_1325405357, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1325405357.options = newJObject_1660944483();
    Label1: {
      var handlerHEX60gensym66_1325406801 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym66_1325406801.config = getEventHandlerConfig_1325403449(self_1325405357, [101,100,105,116,111,114]);
      handlerHEX60gensym66_1325406801.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(self_1325405357, [101,100,105,116,111,114]));
      handlerHEX60gensym66_1325406801.handleAction = HEX3Aanonymous_1325406813;
      handlerHEX60gensym66_1325406801.handleInput = HEX3Aanonymous_1325406821;
    };
    self_1325405357.eventHandler = handlerHEX60gensym66_1325406801;
    Label2: {
      var handlerHEX60gensym69_1325406832 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym69_1325406832.config = getEventHandlerConfig_1325403449(self_1325405357, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym69_1325406832.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(self_1325405357, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym69_1325406832.handleAction = HEX3Aanonymous_1325406844;
      handlerHEX60gensym69_1325406832.handleInput = HEX3Aanonymous_1325406852;
    };
    self_1325405357.commandLineEventHandler = handlerHEX60gensym69_1325406832;
    self_1325405357.commandLineMode = false;
    self_1325405357.commandLineTextEditor = newTextEditor_2634035835(newTextDocument_2952790593([], []), self_1325405357);
    self_1325405357.commandLineTextEditor.renderHeader = false;
    self_1325405357.commandLineTextEditor.lineNumbers = nimCopy(self_1325405357.commandLineTextEditor.lineNumbers, some_2952790647(0), NTI2634023162);
    getCommandLineTextEditor_1325405317(self_1325405357).hideCursorWhenInactive = true;
    var state_1325406863 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
    result_1325405356 = self_1325405357;
    break BeforeRet;
  };

  return result_1325405356;

}

function getVarType_1660949693(x_1660949694, isRawNumber_1660949695, isRawNumber_1660949695_Idx) {
        var Temporary1;

  var result_1660949696 = 0;

  BeforeRet: {
    result_1660949696 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1660949694)))) {
    case "[object Array]":
      result_1660949696 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1660949696 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1660949694)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1660949694) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1660949694)) {
      result_1660949696 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1660949695[isRawNumber_1660949695_Idx] = true;
        result_1660949696 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1660949696 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1660949696 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1660949696 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1660949696 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1660949696;

}

function len_1660949714(x_1660949715) {
  var result_1660949716 = 0;

          result_1660949716 = x_1660949715.length;
    

  return result_1660949716;

}

function convertObject_1660949717(x_1660949718) {
  var result_1660949719 = null;

    var isRawNumber_1660949720 = [false];
    switch (getVarType_1660949693(x_1660949718, isRawNumber_1660949720, 0)) {
    case 6:
      result_1660949719 = newJArray_1660944514();
      Label1: {
        var i_1660949725 = 0;
        var colontmp__536872108 = 0;
        colontmp__536872108 = len_1660949714(x_1660949718);
        var i_536872109 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_536872109 < colontmp__536872108)) break Label3;
              i_1660949725 = i_536872109;
              add_1660944622(result_1660949719, convertObject_1660949717(x_1660949718[i_1660949725]));
              i_536872109 = addInt(i_536872109, 1);
            }
        };
      };
      break;
    case 5:
      result_1660949719 = newJObject_1660944483();
      for (var property in x_1660949718) {
        if (x_1660949718.hasOwnProperty(property)) {
      
      var nimProperty_1660949726 = null;
      var nimValue_1660949727 = null;
      nimProperty_1660949726 = property; nimValue_1660949727 = x_1660949718[property];
      HEX5BHEX5DHEX3D_1660946335(result_1660949719, cstrToNimstr(nimProperty_1660949726), convertObject_1660949717(nimValue_1660949727));
      }}
      break;
    case 2:
      result_1660949719 = newJInt_1660944472((x_1660949718));
      break;
    case 3:
      result_1660949719 = newJFloat_1660944475((x_1660949718));
      break;
    case 4:
      if (isRawNumber_1660949720[0]) {
      var value_1660949736 = null;
      value_1660949736 = x_1660949718.toString();
      result_1660949719 = newJRawNumber_1660944469(cstrToNimstr(value_1660949736));
      }
      else {
        result_1660949719 = newJString_1660944426(cstrToNimstr((x_1660949718)));
      }
      
      break;
    case 1:
      result_1660949719 = newJBool_1660944478((x_1660949718));
      break;
    case 0:
      result_1660949719 = newJNull_1660944481();
      break;
    }

  return result_1660949719;

}

function parseJson_1660949745(buffer_1660949746) {
  var result_1660949747 = null;

  BeforeRet: {
    result_1660949747 = convertObject_1660949717(JSON.parse(toJSStr(buffer_1660949746)));
    break BeforeRet;
  };

  return result_1660949747;

}

function fromJsonHook_2499805991(color_2499805992, jsonNode_2499805993) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2499805993.kind == 0)) {
    color_2499805992 = nimCopy(color_2499805992, parseHex_2365587698([48,48,48,48,48,48]), NTI2382364675);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2499805993;
    if (ConstSet270[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    color_2499805992 = nimCopy(color_2499805992, parseHexVar_2499805231(Temporary1.str), NTI2382364675);
  };

  
}

function fromJson_2499806023(a_2499806025, b_2499806026, opt_2499806027) {
    if (!(!(HEX3DHEX3D_1660946458(b_2499806026, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [67,111,108,111,114], Field1: b_2499806026}));
    }
    
    fromJsonHook_2499805991(a_2499806025, b_2499806026);

  
}

function jsonTo_2499806017(b_2499806019, opt_2499806021) {
  var result_2499806022 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2499806023(result_2499806022[0], b_2499806019, opt_2499806021);

  return result_2499806022[0];

}

function hasKey_2499805441(t_2499805444, key_2499805445) {
  var result_2499805446 = false;

    var hc_2499805447 = [0];
    result_2499805446 = (0 <= rawGet_2499805448(t_2499805444, key_2499805445, hc_2499805447, 0));

  return result_2499805446;

}

function contains_2499805435(t_2499805438, key_2499805439) {
  var result_2499805440 = false;

  BeforeRet: {
    result_2499805440 = hasKey_2499805441(t_2499805438, key_2499805439);
    break BeforeRet;
  };

  return result_2499805440;

}

function none_2499806047() {
  var result_2499806054 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2499806054;

}

function HEX5BHEX5D_2499805740(t_2499805743, key_2499805744) {
  var result_2499805745 = null;

    var hcHEX60gensym22_2499805746 = [0];
    var indexHEX60gensym22_2499805753 = rawGet_2499805448(t_2499805743, key_2499805744, hcHEX60gensym22_2499805746, 0);
    if ((0 <= indexHEX60gensym22_2499805753)) {
    result_2499805745 = t_2499805743.data[chckIndx(indexHEX60gensym22_2499805753, 0, (t_2499805743.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1660947325(key_2499805744);
    }
    

  return result_2499805745;

}

function contains_872417093(s_872417094, sub_872417095) {
  var result_872417096 = false;

  BeforeRet: {
    result_872417096 = (0 <= nsuFindStr(s_872417094, sub_872417095, 0, -1));
    break BeforeRet;
  };

  return result_872417096;

}

function fromJsonHook_2499805998(style_2499805999, jsonNode_2499806000) {
    var Temporary1;

    style_2499805999 = nimCopy(style_2499805999, ConstSet275, NTI2499805699);
    var Temporary1 = jsonNode_2499806000;
    if (ConstSet276[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1660944387)); }
    var text_2499806001 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_872417093(text_2499806001, [105,116,97,108,105,99])) {
    style_2499805999[0] = true;
    }
    
    if (contains_872417093(text_2499806001, [98,111,108,100])) {
    style_2499805999[2] = true;
    }
    
    if (contains_872417093(text_2499806001, [117,110,100,101,114,108,105,110,101])) {
    style_2499805999[1] = true;
    }
    

  
}

function fromJson_2499806061(a_2499806063, b_2499806064, opt_2499806065) {
    if (!(!(HEX3DHEX3D_1660946458(b_2499806064, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2499806064}));
    }
    
    fromJsonHook_2499805998(a_2499806063, b_2499806064);

  
}

function jsonTo_2499806055(b_2499806057, opt_2499806059) {
  var result_2499806060 = [{}];

    fromJson_2499806061(result_2499806060[0], b_2499806057, opt_2499806059);

  return result_2499806060[0];

}

function jsonToTheme_2499806081(json_2499806082, opt_2499806083) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2499806084 = null;

    result_2499806084 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2499806084.name = nimCopy(null, jsonTo_1845494298(HEX5BHEX5D_1660947469(json_2499806082, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1660947586(json_2499806082, [116,121,112,101])) {
    result_2499806084.typ = nimCopy(null, jsonTo_1845494298(HEX5BHEX5D_1660947469(json_2499806082, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1660947586(json_2499806082, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2499806084.colorSpace = nimCopy(null, jsonTo_1845494298(HEX5BHEX5D_1660947469(json_2499806082, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1660947586(json_2499806082, [99,111,108,111,114,115])) {
    Label1: {
      var key_2499806104 = [];
      var value_2499806105 = null;
      var colontmp__536872112 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1660947469(json_2499806082, [99,111,108,111,114,115]);
      if (ConstSet269[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1660944387)); }
      colontmp__536872112 = nimCopy(colontmp__536872112, Temporary2.fields, NTI1660944398);
      var L_536872113 = len_1660946546(colontmp__536872112);
      if ((0 < colontmp__536872112.counter)) {
      var h_536872114 = colontmp__536872112.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536872114)) break Label4;
            var nxt_536872116 = colontmp__536872112.data[chckIndx(h_536872114, 0, (colontmp__536872112.data).length - 1)].Field1;
            if (isFilled_1342177312(colontmp__536872112.data[chckIndx(h_536872114, 0, (colontmp__536872112.data).length - 1)].Field0)) {
            var colontmp__536872118 = nimCopy(null, {Field0: nimCopy(null, colontmp__536872112.data[chckIndx(h_536872114, 0, (colontmp__536872112.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536872112.data[chckIndx(h_536872114, 0, (colontmp__536872112.data).length - 1)].Field3}, NTI1660945593);
            key_2499806104 = colontmp__536872118["Field0"];
            value_2499806105 = colontmp__536872118["Field1"];
            HEX5BHEX5DHEX3D_2499806151(result_2499806084.colors, key_2499806104, jsonTo_2499806017(value_2499806105, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1660946546(colontmp__536872112) == L_536872113))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536872114 = nxt_536872116;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1660947586(json_2499806082, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2499807416 = null;
      var colontmp__536872129 = [];
      var Temporary6 = HEX5BHEX5D_1660947469(json_2499806082, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet271[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1660944387)); }
      colontmp__536872129 = Temporary6.elems;
      var i_536872130 = 0;
      var L_536872131 = (colontmp__536872129).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872130 < L_536872131)) break Label8;
            item_2499807416 = colontmp__536872129[chckIndx(i_536872130, 0, (colontmp__536872129).length - 1)];
            var scopes_2499807421 = [];
            if (hasKey_1660947586(item_2499807416, [115,99,111,112,101])) {
            var scope_2499807422 = HEX5BHEX5D_1660947469(item_2499807416, [115,99,111,112,101]);
            if ((scope_2499807422.kind == 4)) {
            var Temporary9 = scope_2499807422;
            if (ConstSet272[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1660944387)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2499807421.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2499807434 = null;
                var colontmp__536872121 = [];
                var Temporary12 = scope_2499807422;
                if (ConstSet273[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1660944387)); }
                colontmp__536872121 = Temporary12.elems;
                var i_536872122 = 0;
                var L_536872123 = (colontmp__536872121).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536872122 < L_536872123)) break Label14;
                      scopeName_2499807434 = colontmp__536872121[chckIndx(i_536872122, 0, (colontmp__536872121).length - 1)];
                      var Temporary15 = scopeName_2499807434;
                      if (ConstSet274[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1660944387)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2499807421.push(Temporary16);;
                      i_536872122 = addInt(i_536872122, 1);
                      if (!(((colontmp__536872121).length == L_536872123))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2499807421.push([46]);;
            }
            
            var settings_2499807443 = HEX5BHEX5D_1660947469(item_2499807416, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2499807447 = [];
              var i_536872126 = 0;
              var L_536872127 = (scopes_2499807421).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536872126 < L_536872127)) break Label19;
                    scope_2499807447 = scopes_2499807421[chckIndx(i_536872126, 0, (scopes_2499807421).length - 1)];
                    if (!(contains_2499805435(result_2499806084.tokenColors, scope_2499807447))) {
                    HEX5BHEX5DHEX3D_2499807549(result_2499806084.tokenColors, scope_2499807447, {foreground: none_2499806047(), background: none_2499806047(), fontStyle: {}});
                    }
                    
                    if (hasKey_1660947586(settings_2499807443, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).foreground = nimCopy(HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).foreground, some_2499806034(jsonTo_2499806017(HEX5BHEX5D_1660947469(settings_2499807443, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2499805196);
                    }
                    
                    if (hasKey_1660947586(settings_2499807443, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).background = nimCopy(HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).background, some_2499806034(jsonTo_2499806017(HEX5BHEX5D_1660947469(settings_2499807443, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2499805196);
                    }
                    
                    if (hasKey_1660947586(settings_2499807443, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).fontStyle = nimCopy(HEX5BHEX5D_2499805740(result_2499806084.tokenColors, scope_2499807447).fontStyle, jsonTo_2499806055(HEX5BHEX5D_1660947469(settings_2499807443, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2499805207);
                    }
                    
                    i_536872126 = addInt(i_536872126, 1);
                    if (!(((scopes_2499807421).length == L_536872127))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872130 = addInt(i_536872130, 1);
            if (!(((colontmp__536872129).length == L_536872131))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2499806084;

}

function some_2499808801(val_2499808803) {
  var result_2499808804 = ({val: null});

    if (!(!((val_2499808803 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2499808804.val = val_2499808803;

  return result_2499808804;

}

function none_2499808826() {
  var result_2499808832 = ({val: null});

  return result_2499808832;

}

function loadFromString_2499808791(input_2499808792, path_2499808793) {
  var result_2499808798 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2499808799 = parseJson_1660949745(input_2499808792);
    var newTheme_2499808800 = jsonToTheme_2499806081(json_2499808799, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2499808800.path = nimCopy(null, path_2499808793, NTI33554449);
    result_2499808798 = nimCopy(result_2499808798, some_2499808801(newTheme_2499808800), NTI2499807172);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2499808819 = [mnewString(0)];
    fmtRes_2499808819[0].push.apply(fmtRes_2499808819[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_738197675(fmtRes_2499808819, 0, path_2499808793, []);
    fmtRes_2499808819[0].push.apply(fmtRes_2499808819[0], [58,32]);;
    formatValue_738197675(fmtRes_2499808819, 0, getCurrentExceptionMsg_33556469(), []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2499808819[0], NTI33554449)]);
    var fmtRes_2499808825 = [mnewString(0)];
    formatValue_738197675(fmtRes_2499808825, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2499808825[0], NTI33554449)]);
    result_2499808798 = nimCopy(result_2499808798, none_2499808826(), NTI2499807172);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2499808798;

}
  var Temporary115;
var rend_536870951 = [new_536870933()];
init_2332033140(rend_536870951[0]);
var ed_536870952 = [newEditor_1325405353(2, rend_536870951[0])];
  var oHEX60gensym0_536870956 = loadFromString_2499808791(makeNimstrLit("{\x0A\x0A\x0A\x09\"$schema\": \"vscode://schemas/color-theme\",\x0A\x09\"name\": \"Shades of Purple\",\x0A\x09\"type\": \"dark\",\x0A\x09\"colors\": {\x0A\x0A\x0A\x09\x09\"activityBar.background\": \"#28284E\",\x0A\x09\x09\"activityBar.border\": \"#222244\",\x0A\x09\x09\"activityBar.dropBackground\": \"#222145\",\x0A\x09\x09\"activityBar.foreground\": \"#FFFFFF\",\x0A\x09\x09\"activityBar.inactiveForeground\": \"#A599E9\",\x0A\x09\x09\"activityBarBadge.background\": \"#FAD000\",\x0A\x09\x09\"activityBarBadge.foreground\": \"#1E1E3F\",\x0A\x09\x09\"activityBar.activeBorder\": \"#6943ff62\",\x0A\x09\x09\"activityBar.activeBackground\": \"#222244\",\x0A\x0A\x0A\x09\x09\"debugIcon.startForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.continueForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.disconnectForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.pauseForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.restartForeground\": \"#3AD900\",\x0A\x09\x09\"debugIcon.stepBackForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.stepIntoForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.stepOutForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.stepOverForeground\": \"#FAD000\",\x0A\x09\x09\"debugIcon.stopForeground\": \"#EC3A37F5\",\x0A\x0A\x0A\x0A\x09\x09\"sideBar.background\": \"#222244\",\x0A\x09\x09\"sideBar.border\": \"#25254B\",\x0A\x09\x09\"sideBar.foreground\": \"#A599E9\",\x0A\x09\x09\"sideBarSectionHeader.background\": \"#1E1E3F\",\x0A\x09\x09\"sideBarSectionHeader.foreground\": \"#A599E9\",\x0A\x09\x09\"sideBarTitle.foreground\": \"#A599E9\",\x0A\x09\x09\"sideBarSectionHeader.border\": \"#1E1E3F\",\x0A\x0A\x0A\x0A\x09\x09\"badge.background\": \"#FAD000\",\x0A\x09\x09\"badge.foreground\": \"#1E1E3F\",\x0A\x0A\x0A\x0A\x09\x09\"button.background\": \"#FAD000\",\x0A\x09\x09\"button.foreground\": \"#222244\",\x0A\x09\x09\"button.hoverBackground\": \"#B362FF\",\x0A\x0A\x0A\x0A\x09\x09\"contrastActiveBorder\": \"#FFFFFF00\",\x0A\x09\x09\"contrastBorder\": \"#FFFFFF00\",\x0A\x0A\x0A\x0A\x0A\x09\x09\"descriptionForeground\": \"#A599E9\",\x0A\x09\x09\"selection.background\": \"#B362FF\",\x0A\x0A\x0A\x0A\x09\x09\"dropdown.background\": \"#1E1E3F\",\x0A\x09\x09\"dropdown.border\": \"#1E1E3F\",\x0A\x09\x09\"dropdown.foreground\": \"#FFFFFF\",\x0A\x0A\x0A\x0A\x09\x09\"editor.background\": \"#2D2B55\",\x0A\x09\x09\"editor.foreground\": \"#FFFFFF\",\x0A\x09\x09\"editorLineNumber.foreground\": \"#A599E9\",\x0A\x09\x09\"editorCursor.foreground\": \"#FAD000\",\x0A\x0A\x0A\x09\x09\"editor.selectionBackground\": \"#B362FF88\",\x0A\x09\x09\"editor.inactiveSelectionBackground\": \"#7580B8C0\",\x0A\x09\x09\"editor.selectionHighlightBackground\": \"#7E46DF46\",\x0A\x09\x09\"editor.linkedEditingBackground\": \"#7E46DFAA\",\x0A\x09\x09\"editor.wordHighlightBackground\": \"#FFFFFF0D\",\x0A\x09\x09\"editor.wordHighlightStrongBackground\": \"#FFFFFF0D\",\x0A\x09\x09\"editor.findMatchBackground\": \"#ff7300ab\",\x0A\x09\x09\"editor.findMatchHighlightBackground\": \"#FFFF0336\",\x0A\x09\x09\"editor.findRangeHighlightBackground\": \"#FFFF0336\",\x0A\x09\x09\"editor.hoverHighlightBackground\": \"#FF730056\",\x0A\x09\x09\"editor.lineHighlightBackground\": \"#1F1F41\",\x0A\x09\x09\"editor.lineHighlightBorder\": \"#1F1F41\",\x0A\x09\x09\"editor.rangeHighlightBackground\": \"#1F1F41\",\x0A\x09\x09\"editorLink.activeForeground\": \"#A599E9\",\x0A\x09\x09\"editorIndentGuide.background\": \"#A599E90F\",\x0A\x09\x09\"editorIndentGuide.activeBackground\": \"#A599E942\",\x0A\x09\x09\"editorRuler.foreground\": \"#A599E91C\",\x0A\x09\x09\"editorOverviewRuler.border\": \"#A599E91C\",\x0A\x09\x09\"editorCodeLens.foreground\": \"#A599E9\",\x0A\x09\x09\"editorBracketMatch.background\": \"#AD70FC46\",\x0A\x09\x09\"editorBracketMatch.border\": \"#AD70FC46\",\x0A\x0A\x0A\x09\x09\"editorOverviewRuler.commonContentForeground\": \"#FFC60055\",\x0A\x09\x09\"editorOverviewRuler.currentContentForeground\": \"#EE3A4355\",\x0A\x09\x09\"editorOverviewRuler.incomingContentForeground\": \"#3AD90055\",\x0A\x0A\x0A\x0A\x09\x09\"editorError.foreground\": \"#EC3A37F5\",\x0A\x09\x09\"editorWarning.border\": \"#FFFFFF00\",\x0A\x09\x09\"editorWarning.foreground\": \"#FAD000\",\x0A\x0A\x0A\x09\x09\"editorGutter.background\": \"#28284E\",\x0A\x09\x09\"editorGutter.addedBackground\": \"#35AD68\",\x0A\x09\x09\"editorGutter.deletedBackground\": \"#EC3A37F5\",\x0A\x09\x09\"editorGutter.modifiedBackground\": \"#AD70FC46\",\x0A\x0A\x0A\x0A\x09\x09\"diffEditor.insertedTextBackground\": \"#00FF000E\",\x0A\x09\x09\"diffEditor.insertedTextBorder\": \"#00FF009A\",\x0A\x09\x09\"diffEditor.removedTextBackground\": \"#FF000D1A\",\x0A\x09\x09\"diffEditor.removedTextBorder\": \"#FF000D81\",\x0A\x0A\x0A\x0A\x09\x09\"editorGroup.border\": \"#222244\",\x0A\x09\x09\"editorGroup.dropBackground\": \"#222244D0\",\x0A\x0A\x0A\x09\x09\"editorGroupHeader.noTabsBackground\": \"#2D2B55\",\x0A\x09\x09\"editorGroupHeader.tabsBackground\": \"#2D2B55\",\x0A\x09\x09\"editorGroupHeader.tabsBorder\": \"#1F1F41\",\x0A\x0A\x0A\x09\x09\"tab.activeBackground\": \"#222244\",\x0A\x09\x09\"tab.activeForeground\": \"#FFFFFF\",\x0A\x09\x09\"tab.border\": \"#1E1E3F\",\x0A\x09\x09\"tab.activeBorder\": \"#FAD000\",\x0A\x09\x09\"tab.inactiveBackground\": \"#2D2B55\",\x0A\x09\x09\"tab.inactiveForeground\": \"#A599E9\",\x0A\x09\x09\"tab.unfocusedActiveForeground\": \"#A599E9\",\x0A\x09\x09\"tab.unfocusedInactiveForeground\": \"#A599E9\",\x0A\x09\x09\"tab.activeModifiedBorder\": \"#A599E9\",\x0A\x09\x09\"tab.inactiveModifiedBorder\": \"#A599E966\",\x0A\x09\x09\"tab.unfocusedActiveModifiedBorder\": \"#A599E966\",\x0A\x09\x09\"tab.unfocusedInactiveModifiedBorder\": \"#A599E966\",\x0A\x0A\x0A\x0A\x09\x09\"editorWidget.background\": \"#222244\",\x0A\x09\x09\"editorWidget.border\": \"#1F1F41\",\x0A\x09\x09\"editorHoverWidget.background\": \"#161633\",\x0A\x09\x09\"editorHoverWidget.border\": \"#161633\",\x0A\x09\x09\"editorSuggestWidget.background\": \"#1F1F41\",\x0A\x09\x09\"editorSuggestWidget.border\": \"#1F1F41\",\x0A\x09\x09\"editorSuggestWidget.foreground\": \"#A599E9\",\x0A\x09\x09\"editorSuggestWidget.highlightForeground\": \"#FAD000\",\x0A\x09\x09\"editorSuggestWidget.selectedBackground\": \"#2D2B55\",\x0A\x0A\x0A\x0A\x09\x09\"debugToolBar.background\": \"#1E1E3F\",\x0A\x0A\x09\x09\"debugExceptionWidget.background\": \"#1E1E3F\",\x0A\x09\x09\"debugExceptionWidget.border\": \"#A599E9\",\x0A\x0A\x0A\x09\x09\"editorMarkerNavigation.background\": \"#3B536433\",\x0A\x09\x09\"editorMarkerNavigationError.background\": \"#EC3A37F5\",\x0A\x09\x09\"editorMarkerNavigationWarning.background\": \"#FAD000\",\x0A\x0A\x0A\x09\x09\"editorWhitespace.foreground\": \"#FFFFFF1A\",\x0A\x09\x09\"errorForeground\": \"#EC3A37F5\",\x0A\x0A\x0A\x0A\x09\x09\"extensionButton.prominentBackground\": \"#5D37F0\",\x0A\x09\x09\"extensionButton.prominentForeground\": \"#FFFFFF\",\x0A\x09\x09\"extensionButton.prominentHoverBackground\": \"#FF9D00\",\x0A\x09\x09\"focusBorder\": \"#1E1E3F\",\x0A\x09\x09\"foreground\": \"#A599E9\",\x0A\x0A\x0A\x0A\x09\x09\"input.background\": \"#2D2B55\",\x0A\x09\x09\"input.border\": \"#1E1E3F\",\x0A\x09\x09\"input.foreground\": \"#FAD000\",\x0A\x09\x09\"input.placeholderForeground\": \"#A599E9\",\x0A\x09\x09\"inputOption.activeBorder\": \"#1E1E3F\",\x0A\x09\x09\"inputValidation.errorBackground\": \"#2D2B55\",\x0A\x09\x09\"inputValidation.errorBorder\": \"#FAD000\",\x0A\x09\x09\"inputValidation.infoBackground\": \"#2D2B55\",\x0A\x09\x09\"inputValidation.infoBorder\": \"#2D2B55\",\x0A\x09\x09\"inputValidation.warningBackground\": \"#2D2B55\",\x0A\x09\x09\"inputValidation.warningBorder\": \"#FAD000\",\x0A\x09\x09\"inputOption.activeBackground\": \"#5D37F0\",\x0A\x0A\x0A\x0A\x09\x09\"list.dropBackground\": \"#2D2B55\",\x0A\x09\x09\"list.activeSelectionBackground\": \"#2D2B55\",\x0A\x09\x09\"list.activeSelectionForeground\": \"#FFFFFF\",\x0A\x09\x09\"list.focusBackground\": \"#2D2B55\",\x0A\x09\x09\"list.focusForeground\": \"#FFFFFF\",\x0A\x09\x09\"list.highlightForeground\": \"#FAD000\",\x0A\x09\x09\"list.hoverBackground\": \"#2D2B55\",\x0A\x09\x09\"list.hoverForeground\": \"#CEC5FF\",\x0A\x09\x09\"list.inactiveSelectionBackground\": \"#2D2B55\",\x0A\x09\x09\"list.inactiveSelectionForeground\": \"#AAA\",\x0A\x0A\x0A\x09\x09\"merge.border\": \"#FFFFFF00\",\x0A\x09\x09\"merge.commonContentBackground\": \"#A599E981\",\x0A\x09\x09\"merge.commonHeaderBackground\": \"#A599E981\",\x0A\x09\x09\"merge.currentContentBackground\": \"#3ad90093\",\x0A\x09\x09\"merge.currentHeaderBackground\": \"#3ad90093\",\x0A\x09\x09\"merge.incomingContentBackground\": \"#ff730086\",\x0A\x09\x09\"merge.incomingHeaderBackground\": \"#ff730086\",\x0A\x0A\x0A\x09\x09\"notificationCenter.border\": \"#1E1E3F\",\x0A\x09\x09\"notificationCenterHeader.foreground\": \"#FFFFFF\",\x0A\x09\x09\"notificationCenterHeader.background\": \"#6943FF\",\x0A\x09\x09\"notificationToast.border\": \"#1E1E3F\",\x0A\x09\x09\"notifications.foreground\": \"#CEC5FF\",\x0A\x09\x09\"notifications.background\": \"#1E1E3F\",\x0A\x09\x09\"notifications.border\": \"#2D2B55\",\x0A\x09\x09\"notificationLink.foreground\": \"#FFFFFF\",\x0A\x0A\x0A\x0A\x09\x09\"panel.background\": \"#1E1E3F\",\x0A\x09\x09\"panel.border\": \"#FAD000\",\x0A\x09\x09\"panelTitle.activeBorder\": \"#FAD000\",\x0A\x09\x09\"panelTitle.activeForeground\": \"#FAD000\",\x0A\x09\x09\"panelTitle.inactiveForeground\": \"#A599E9\",\x0A\x0A\x0A\x0A\x09\x09\"peekView.border\": \"#FAD000\",\x0A\x09\x09\"peekViewEditor.background\": \"#1E1E3F\",\x0A\x09\x09\"peekViewEditor.matchHighlightBackground\": \"#19354900\",\x0A\x09\x09\"peekViewEditorGutter.background\": \"#191935\",\x0A\x09\x09\"peekViewResult.background\": \"#1E1E3F\",\x0A\x09\x09\"peekViewResult.fileForeground\": \"#AAA\",\x0A\x09\x09\"peekViewResult.lineForeground\": \"#FFFFFF\",\x0A\x09\x09\"peekViewResult.matchHighlightBackground\": \"#2D2B55\",\x0A\x09\x09\"peekViewResult.selectionBackground\": \"#2D2B55\",\x0A\x09\x09\"peekViewResult.selectionForeground\": \"#FFFFFF\",\x0A\x09\x09\"peekViewTitle.background\": \"#1F1F41\",\x0A\x09\x09\"peekViewTitleDescription.foreground\": \"#AAA\",\x0A\x09\x09\"peekViewTitleLabel.foreground\": \"#FAD000\",\x0A\x0A\x0A\x0A\x09\x09\"pickerGroup.border\": \"#1E1E3F\",\x0A\x09\x09\"pickerGroup.foreground\": \"#A599E9\",\x0A\x0A\x0A\x0A\x09\x09\"progressBar.background\": \"#FAD000\",\x0A\x0A\x0A\x0A\x09\x09\"scrollbar.shadow\": \"#a599e981\",\x0A\x09\x09\"scrollbarSlider.background\": \"#a599e981\",\x0A\x09\x09\"scrollbarSlider.hoverBackground\": \"#4D21FC\",\x0A\x09\x09\"scrollbarSlider.activeBackground\": \"#FAD000\",\x0A\x0A\x0A\x0A\x0A\x09\x09\"statusBar.border\": \"#1E1E3F\",\x0A\x09\x09\"statusBar.background\": \"#1E1E3F\",\x0A\x09\x09\"statusBar.foreground\": \"#A599E9\",\x0A\x09\x09\"statusBar.debuggingBackground\": \"#FAD000\",\x0A\x09\x09\"statusBar.debuggingForeground\": \"#1E1E3F\",\x0A\x09\x09\"statusBar.noFolderBackground\": \"#1E1E3F\",\x0A\x09\x09\"statusBar.noFolderForeground\": \"#A599E9\",\x0A\x09\x09\"statusBarItem.activeBackground\": \"#4D21FC\",\x0A\x09\x09\"statusBarItem.hoverBackground\": \"#4D21FC\",\x0A\x09\x09\"statusBarItem.prominentBackground\": \"#1E1E3F\",\x0A\x09\x09\"statusBarItem.prominentHoverBackground\": \"#2D2B55\",\x0A\x0A\x0A\x0A\x09\x09\"terminal.ansiBlack\": \"#000000\",\x0A\x09\x09\"terminal.ansiRed\": \"#EC3A37F5\",\x0A\x09\x09\"terminal.ansiGreen\": \"#3AD900\",\x0A\x09\x09\"terminal.ansiYellow\": \"#FAD000\",\x0A\x09\x09\"terminal.ansiBlue\": \"#6943FF\",\x0A\x09\x09\"terminal.ansiMagenta\": \"#FF2C70\",\x0A\x09\x09\"terminal.ansiCyan\": \"#80FCFF\",\x0A\x09\x09\"terminal.ansiWhite\": \"#FFFFFF\",\x0A\x09\x09\"terminal.ansiBrightBlack\": \"#5C5C61\",\x0A\x09\x09\"terminal.ansiBrightRed\": \"#EC3A37F5\",\x0A\x09\x09\"terminal.ansiBrightGreen\": \"#3AD900\",\x0A\x09\x09\"terminal.ansiBrightYellow\": \"#FAD000\",\x0A\x09\x09\"terminal.ansiBrightBlue\": \"#6943FF\",\x0A\x09\x09\"terminal.ansiBrightMagenta\": \"#FB94FF\",\x0A\x09\x09\"terminal.ansiBrightCyan\": \"#80FCFF\",\x0A\x09\x09\"terminal.ansiBrightWhite\": \"#FFFFFF\",\x0A\x09\x09\"terminal.background\": \"#1E1E3F\",\x0A\x09\x09\"terminal.foreground\": \"#FFFFFF\",\x0A\x09\x09\"terminalCursor.background\": \"#FAD000\",\x0A\x09\x09\"terminalCursor.foreground\": \"#FAD000\",\x0A\x0A\x0A\x0A\x09\x09\"gitDecoration.modifiedResourceForeground\": \"#FAD000\",\x0A\x09\x09\"gitDecoration.deletedResourceForeground\": \"#EC3A37F5\",\x0A\x09\x09\"gitDecoration.untrackedResourceForeground\": \"#3AD900\",\x0A\x09\x09\"gitDecoration.ignoredResourceForeground\": \"#A599E981\",\x0A\x09\x09\"gitDecoration.conflictingResourceForeground\": \"#FF7200\",\x0A\x0A\x0A\x0A\x09\x09\"textBlockQuote.background\": \"#1E1E3F\",\x0A\x09\x09\"textBlockQuote.border\": \"#6943FF\",\x0A\x09\x09\"textCodeBlock.background\": \"#1E1E3F\",\x0A\x09\x09\"textLink.activeForeground\": \"#B362FF\",\x0A\x09\x09\"textLink.foreground\": \"#B362FF\",\x0A\x09\x09\"textPreformat.foreground\": \"#FAD000\",\x0A\x09\x09\"textSeparator.foreground\": \"#1E1E3F\",\x0A\x0A\x0A\x0A\x09\x09\"titleBar.activeBackground\": \"#1E1E3F\",\x0A\x09\x09\"titleBar.activeForeground\": \"#FFFFFF\",\x0A\x09\x09\"titleBar.inactiveBackground\": \"#1E1E3F\",\x0A\x09\x09\"titleBar.inactiveForeground\": \"#A599E9\",\x0A\x09\x09\"walkThrough.embeddedEditorBackground\": \"#1E1E3F\",\x0A\x09\x09\"welcomePage.buttonBackground\": \"#1E1E3F\",\x0A\x09\x09\"welcomePage.buttonHoverBackground\": \"#262650\",\x0A\x09\x09\"widget.shadow\": \"#00000026\",\x0A\x0A\x0A\x0A\x09\x09\"breadcrumb.foreground\": \"#A599E9\",\x0A\x09\x09\"breadcrumb.focusForeground\": \"#FAD000\",\x0A\x09\x09\"breadcrumb.activeSelectionForeground\": \"#FFFFFF\",\x0A\x09\x09\"breadcrumbPicker.background\": \"#1E1E3F\",\x0A\x0A\x0A\x0A\x09\x09\"settings.headerForeground\": \"#FFFFFF\",\x0A\x09\x09\"settings.dropdownBackground\": \"#1E1E3F\",\x0A\x09\x09\"settings.checkboxBackground\": \"#1E1E3F\",\x0A\x09\x09\"settings.textInputBackground\": \"#1E1E3F\",\x0A\x09\x09\"settings.numberInputBackground\": \"#1E1E3F\",\x0A\x09\x09\"settings.dropdownForeground\": \"#E5E4FB\",\x0A\x09\x09\"settings.checkboxForeground\": \"#E5E4FB\",\x0A\x09\x09\"settings.textInputForeground\": \"#E5E4FB\",\x0A\x09\x09\"settings.numberInputForeground\": \"#E5E4FB\",\x0A\x09\x09\"settings.dropdownBorder\": \"#1E1E3F\",\x0A\x09\x09\"settings.checkboxBorder\": \"#1E1E3F\",\x0A\x09\x09\"settings.textInputBorder\": \"#1E1E3F\",\x0A\x09\x09\"settings.numberInputBorder\": \"#1E1E3F\",\x0A\x09\x09\"settings.dropdownListBorder\": \"#2D2B55\",\x0A\x09\x09\"settings.modifiedItemIndicator\": \"#FAD000\",\x0A\x0A\x0A\x09\x09\"menu.separatorBackground\": \"#A599E9\",\x0A\x0A\x0A\x09\x09\"editor.snippetTabstopHighlightBackground\": \"#6943ff62\",\x0A\x09\x09\"editor.snippetTabstopHighlightBorder\": \"#6943ff62\",\x0A\x09\x09\"editor.snippetFinalTabstopHighlightBackground\": \"#6943ff62\",\x0A\x09\x09\"editor.snippetFinalTabstopHighlightBorder\": \"#6943ff62\",\x0A\x0A\x0A\x09\x09\"listFilterWidget.background\": \"#2D2B55\",\x0A\x09\x09\"listFilterWidget.outline\": \"#2D2B55\",\x0A\x09\x09\"listFilterWidget.noMatchesOutline\": \"#EC3A37F5\"\x0A\x0A\x0A\x0A\x0A\x0A\x09},\x0A\x0A\x0A\x0A\x09\"tokenColors\": [\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[COMMENTS] \xE2\x80\x94 The main comments color\",\x0A\x09\x09\x09\"scope\": [\"comment\", \"punctuation.definition.comment\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#B362FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Entity] \xE2\x80\x94 The main Entity color\",\x0A\x09\x09\x09\"scope\": \"entity\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Constant] \xE2\x80\x94 The main constants color\",\x0A\x09\x09\x09\"scope\": \"constant\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF628C\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Keyword] \xE2\x80\x94 The main color for Keyword\",\x0A\x09\x09\x09\"scope\": [\"keyword, storage.type.class.js\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Meta] \xE2\x80\x94 The main color for Meta\",\x0A\x09\x09\x09\"scope\": \"meta\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[invalid] \xE2\x80\x94 The main color for invalid\",\x0A\x09\x09\x09\"scope\": \"invalid\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#EC3A37F5\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Meta Brace] \xE2\x80\x94 The main color for Meta Brace\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"meta.brace\",\x0A\x09\x09\x09\x09\"punctuation.definition.parameters.begin.js\",\x0A\x09\x09\x09\x09\"punctuation.definition.parameters.end.js\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Punctuation] \xE2\x80\x94 The main color for Punctuation\",\x0A\x09\x09\x09\"scope\": \"punctuation\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Punctuation] \xE2\x80\x94 Color for Punctuation Parameters\",\x0A\x09\x09\x09\"scope\": \"punctuation.definition.parameters\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Punctuation] \xE2\x80\x94 Color for Punctuation Template Expression\",\x0A\x09\x09\x09\"scope\": \"punctuation.definition.template-expression\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Storage] \xE2\x80\x94 The main color for Storage\",\x0A\x09\x09\x09\"scope\": \"storage\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Storage] \xE2\x80\x94 The color for Storage Type Arrow Function\",\x0A\x09\x09\x09\"scope\": \"storage.type.function.arrow\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[String]\",\x0A\x09\x09\x09\"scope\": [\"string\", \"punctuation.definition.string\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A5FF90\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[String] Template Color\",\x0A\x09\x09\x09\"scope\": [\"string.template\", \"punctuation.definition.string.template\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#3AD900\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Support]\",\x0A\x09\x09\x09\"scope\": \"support\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#80FFBB\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Support] Function Colors\",\x0A\x09\x09\x09\"scope\": \"support.function\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Support] Variable Property DOM Colors\",\x0A\x09\x09\x09\"scope\": \"support.variable.property.dom\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[Variable]\",\x0A\x09\x09\x09\"scope\": \"variable\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[INI] - Color for Entity\",\x0A\x09\x09\x09\"scope\": [\"source.ini entity\", \"meta.embedded.block.ini\", \"source.ini\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[INI] - Color for Keyword\",\x0A\x09\x09\x09\"scope\": [\"source.ini keyword\", \"keyword.other.definition.ini\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[INI] - Color for Punctuation Definition\",\x0A\x09\x09\x09\"scope\": [\"source.ini punctuation.definition\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[INI] - Color for Punctuation Separator\",\x0A\x09\x09\x09\"scope\": [\"source.ini punctuation.separator\", \"punctuation.separator.key-value.ini\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Entity\",\x0A\x09\x09\x09\"scope\": [\"source.css entity\", \"source.stylus entity\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#3AD900\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Class Selector\",\x0A\x09\x09\x09\"scope\": \"entity.other.attribute-name.class.css\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for ID Selector\",\x0A\x09\x09\x09\"scope\": [\"entity.other.attribute-name.id.css\", \"entity.other.attribute-name.pseudo-class.css\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFB454\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Element Selector\",\x0A\x09\x09\x09\"scope\": \"entity.name.tag\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Support\",\x0A\x09\x09\x09\"scope\": [\"source.css support\", \"entity.name.tag.css\", \"source.stylus support\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A5FF90\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Constant\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"source.css constant\",\x0A\x09\x09\x09\x09\"source.css support.constant\",\x0A\x09\x09\x09\x09\"source.stylus constant\",\x0A\x09\x09\x09\x09\"source.stylus support.constant\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for String\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"source.css string\",\x0A\x09\x09\x09\x09\"source.css punctuation.definition.string\",\x0A\x09\x09\x09\x09\"source.stylus string\",\x0A\x09\x09\x09\x09\"source.stylus punctuation.definition.string\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSS] - Color for Variable\",\x0A\x09\x09\x09\"scope\": [\"source.css variable\", \"source.stylus variable\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML] - Color for Entity Name\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"text.html.basic entity.name\",\x0A\x09\x09\x09\x09\"punctuation.definition.tag.html\",\x0A\x09\x09\x09\x09\"entity.name.tag.inline.any.html\",\x0A\x09\x09\x09\x09\"meta.tag.other.html\",\x0A\x09\x09\x09\x09\"meta.tag.inline.any.html\",\x0A\x09\x09\x09\x09\"punctuation.definition.tag.begin.html\",\x0A\x09\x09\x09\x09\"punctuation.definition.tag.end.html\",\x0A\x09\x09\x09\x09\"entity.name.tag\",\x0A\x09\x09\x09\x09\"meta.tag.other.html\",\x0A\x09\x09\x09\x09\"meta.tag.other.js\",\x0A\x09\x09\x09\x09\"meta.tag.other.tsx\",\x0A\x09\x09\x09\x09\"entity.name.tag.tsx\",\x0A\x09\x09\x09\x09\"entity.name.tag.js\",\x0A\x09\x09\x09\x09\"entity.name.tag\",\x0A\x09\x09\x09\x09\"meta.tag.js\",\x0A\x09\x09\x09\x09\"meta.tag.tsx\",\x0A\x09\x09\x09\x09\"meta.tag.html\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML] - Color for ID value\",\x0A\x09\x09\x09\"scope\": \"meta.toc-list.id.html\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A5FF90\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML] - Color for Entity Other\",\x0A\x09\x09\x09\"scope\": \"text.html.basic entity.other\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML] - Color for Script Tag\",\x0A\x09\x09\x09\"scope\": \"meta.tag.metadata.script.html entity.name.tag.html\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML] - Quotes. Different color to handle expanded selection\",\x0A\x09\x09\x09\"scope\": \"punctuation.definition.string.begin, punctuation.definition.string.end\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#92FC79\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[HTML/PUG] Equals Sign\",\x0A\x09\x09\x09\"scope\": [\"meta.tag.inline.any.html\", \"meta.tag.other\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JSON] - Color for Support\",\x0A\x09\x09\x09\"scope\": \"source.json support\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JSON] - Color for String\",\x0A\x09\x09\x09\"scope\": [\"source.json string\", \"source.json punctuation.definition.string\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#92FC79\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Color for Storage Type Function\",\x0A\x09\x09\x09\"scope\": \"source.js storage.type.function\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Color for Variable Language\",\x0A\x09\x09\x09\"scope\": \"variable.language, entity.name.type.class.js\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Color for Inherited Component\",\x0A\x09\x09\x09\"scope\": [\"entity.other.inherited-class\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Color for React Extends keyword\",\x0A\x09\x09\x09\"scope\": [\"storage.type.extends.js\", \"storage.type.class.jsdoc\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] \xE2\x80\x94 Docs Keywords\",\x0A\x09\x09\x09\"scope\": \"punctuation.definition.block.tag.jsdoc\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] \xE2\x80\x94 Doc Var Types\",\x0A\x09\x09\x09\"scope\": [\"variable.other.jsdoc\", \"entity.name.type.instance.jsdoc\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] \xE2\x80\x94 Var Types\",\x0A\x09\x09\x09\"scope\": [\"variable.other.constant\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT REACT] \xE2\x80\x94 JSX HTML\",\x0A\x09\x09\x09\"scope\": [\"punctuation.definition.tag.begin.js\", \"punctuation.definition.tag.end.js\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT REACT] \xE2\x80\x94 JSX HTML Children Text\",\x0A\x09\x09\x09\"scope\": \"meta.jsx.children.js\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] \xE2\x80\x94 Storage types\",\x0A\x09\x09\x09\"scope\": [\"storage.type\", \"storage.type.class\", \"storage.modifier\", \"keyword.control\", \"keyword.operator\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] \xE2\x80\x94 Docs Useless stuff\",\x0A\x09\x09\x09\"scope\": \"punctuation.definition.bracket.curly\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#494685\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"Typescript React Assignment Operator\",\x0A\x09\x09\x09\"scope\": [\"keyword.operator.assignment.tsx\", \"keyword.operator.assignment.jsx\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] Keyword Operator Assignment\",\x0A\x09\x09\x09\"scope\": \"keyword.operator.assignment\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] Typescript/React Children\",\x0A\x09\x09\x09\"scope\": \"meta.jsx.children.tsx\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Object keys\",\x0A\x09\x09\x09\"scope\": \"meta.object-literal.key.js\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#80FFBB\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"Typescript/React Classnames and Modules\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"entity.name.type.class.tsx\",\x0A\x09\x09\x09\x09\"entity.name.type.class.jsx\",\x0A\x09\x09\x09\x09\"variable.other.readwrite.alias.tsx\",\x0A\x09\x09\x09\x09\"variable.other.readwrite.tsx\",\x0A\x09\x09\x09\x09\"variable.other.readwrite.alias.ts\",\x0A\x09\x09\x09\x09\"variable.other.readwrite.alias.jsx\",\x0A\x09\x09\x09\x09\"variable.other.readwrite.alias.js\",\x0A\x09\x09\x09\x09\"variable.other.object.tsx\",\x0A\x09\x09\x09\x09\"variable.other.object.jsx\",\x0A\x09\x09\x09\x09\"variable.other.object\",\x0A\x09\x09\x09\x09\"support.class.component.tsx\",\x0A\x09\x09\x09\x09\"support.class.component.jsx\",\x0A\x09\x09\x09\x09\"entity.name.type.tsx\",\x0A\x09\x09\x09\x09\"entity.name.type.jsx\",\x0A\x09\x09\x09\x09\"variable.other.readwrite\",\x0A\x09\x09\x09\x09\"variable.other.object.js\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - .something\",\x0A\x09\x09\x09\"scope\": [\"variable.other.property\", \"variable.other.object.property\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Color for Text inside JSX\",\x0A\x09\x09\x09\"scope\": \"JSXNested\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JAVASCRIPT] - Parameters\",\x0A\x09\x09\x09\"scope\": [\"variable.parameter\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PYTHON] - Color for Self Argument\",\x0A\x09\x09\x09\"scope\": \"variable.parameter.function.language.special.self.python\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PYTHON] - Functions\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"meta.function-call.python\",\x0A\x09\x09\x09\x09\"meta.function-call.generic.python\",\x0A\x09\x09\x09\x09\"support.function.builtin.python\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TYPESCRIPT] - Color for Entity Name Type\",\x0A\x09\x09\x09\"scope\": \"source.ts entity.name.type\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#80FFBB\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TYPESCRIPT] - Color for Keyword\",\x0A\x09\x09\x09\"scope\": \"source.ts keyword\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TYPESCRIPT] - Color for Punctuation Parameters\",\x0A\x09\x09\x09\"scope\": \"source.ts punctuation.definition.parameters\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TYPESCRIPT] - Color for Punctuation Arrow Parameters\",\x0A\x09\x09\x09\"scope\": \"meta.arrow.ts punctuation.definition.parameters\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TYPESCRIPT] - Color for Storage\",\x0A\x09\x09\x09\"scope\": \"source.ts storage\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Heading Name Section\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"entity.name.section.markdown\",\x0A\x09\x09\x09\x09\"markup.heading.setext.1.markdown\",\x0A\x09\x09\x09\x09\"markup.heading.setext.2.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\",\x0A\x09\x09\x09\x09\"fontStyle\": \"bold\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Diff Code Inserted Block\",\x0A\x09\x09\x09\"scope\": [\"markup.inserted.diff\", \"punctuation.definition.inserted.diff\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#8efa00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Diff Deleted Code Block\",\x0A\x09\x09\x09\"scope\": [\"markup.deleted.diff\", \"punctuation.definition.deleted.diff\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#F16E6B\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Diff Meta text\",\x0A\x09\x09\x09\"scope\": [\"meta.embedded.block.diff\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Paragraph\",\x0A\x09\x09\x09\"scope\": \"meta.paragraph.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Comment Punctuation\",\x0A\x09\x09\x09\"scope\": [\"punctuation.definition.from-file.diff\", \"meta.diff.header.from-file\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#B362FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Text inside inline code block `code`\",\x0A\x09\x09\x09\"scope\": \"markup.inline.raw.string.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A599E9\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Quote Punctuation\",\x0A\x09\x09\x09\"scope\": \"beginning.punctuation.definition.quote.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Quote Paragraph\",\x0A\x09\x09\x09\"scope\": [\"markup.quote.markdown meta.paragraph.markdown\", \"punctuation.definition.quote.begin.markdown\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A599E9\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Separator\",\x0A\x09\x09\x09\"scope\": \"meta.separator.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Emphasis Bold\",\x0A\x09\x09\x09\"scope\": \"markup.bold.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"fontStyle\": \"bold\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Emphasis Italic\",\x0A\x09\x09\x09\"scope\": \"markup.italic.markdown\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"fontStyle\": \"italic\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Lists\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"beginning.punctuation.definition.list.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.list.begin.markdown\",\x0A\x09\x09\x09\x09\"markup.list.unnumbered.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Link/Image title string\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"string.other.link.description.title.markdown punctuation.definition.string.markdown\",\x0A\x09\x09\x09\x09\"meta.link.inline.markdown string.other.link.description.title.markdown\",\x0A\x09\x09\x09\x09\"string.other.link.description.title.markdown punctuation.definition.string.begin.markdown\",\x0A\x09\x09\x09\x09\"string.other.link.description.title.markdown punctuation.definition.string.end.markdown\",\x0A\x09\x09\x09\x09\"meta.image.inline.markdown string.other.link.description.title.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A5FF90\",\x0A\x09\x09\x09\x09\"fontStyle\": \"\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Link Title\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"meta.link.inline.markdown string.other.link.title.markdown\",\x0A\x09\x09\x09\x09\"meta.link.reference.markdown string.other.link.title.markdown\",\x0A\x09\x09\x09\x09\"meta.link.reference.def.markdown markup.underline.link.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\",\x0A\x09\x09\x09\x09\"fontStyle\": \"underline\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Link/Image Title\",\x0A\x09\x09\x09\"scope\": [\"markup.underline.link.markdown\", \"string.other.link.description.title.markdown\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A599E9\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Inline Code\",\x0A\x09\x09\x09\"scope\": [\"fenced_code.block.language\", \"markup.inline.raw.markdown\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - Color for Punctuation \xE2\x80\x94 Heading, `Code` and fenced ```code blocks```, **Bold**\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"punctuation.definition.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.raw.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.heading.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.bold.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.italic.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#494685\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - LINK Brackets\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"meta.link.inline.markdown punctuation.definition.string.begin.markdown\",\x0A\x09\x09\x09\x09\"meta.link.inline.markdown punctuation.definition.string.end.markdown\",\x0A\x09\x09\x09\x09\"meta.link.reference.markdown punctuation.definition.string.begin.markdown\",\x0A\x09\x09\x09\x09\"meta.link.reference.markdown punctuation.definition.string.end.markdown\",\x0A\x09\x09\x09\x09\"string.other.link.description.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - IMG LINK Brackets\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"meta.image.inline.markdown punctuation.definition.string.begin.markdown\",\x0A\x09\x09\x09\x09\"meta.image.inline.markdown punctuation.definition.string.end.markdown\",\x0A\x09\x09\x09\x09\"string.other.link.description.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[MARKDOWN] - LINK ALT URI\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"markup.underline.link.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.metadata.markdown\",\x0A\x09\x09\x09\x09\"markup.underline.link.image.markdown\",\x0A\x09\x09\x09\x09\"constant.other.reference.link.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.constant.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.constant.begin.markdown\",\x0A\x09\x09\x09\x09\"punctuation.definition.constant.end.markdown\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#A599E9\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PUG] - Color for Entity Name\",\x0A\x09\x09\x09\"scope\": \"text.jade entity.name\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PUG] - Types\",\x0A\x09\x09\x09\"scope\": [\"storage.type.function.pug\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PUG] - Var Params\",\x0A\x09\x09\x09\"scope\": [\"variable.parameter.function.js\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PUG] - Imports\",\x0A\x09\x09\x09\"scope\": [\"variable.control.import.include.pug\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#92FC79\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PUG] - Color for String Interpolated\",\x0A\x09\x09\x09\"scope\": \"text.jade string.interpolated\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[C#] - Color for Annotations\",\x0A\x09\x09\x09\"scope\": \"storage.type.cs\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[C#] - Color for Properties\",\x0A\x09\x09\x09\"scope\": \"entity.name.variable.property.cs\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[C#] - Color for Storage modifiers\",\x0A\x09\x09\x09\"scope\": \"storage.modifier.cs\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#80FFBB\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Color for Entity\",\x0A\x09\x09\x09\"scope\": [\"source.php entity\", \"variable.other.class.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Docs Keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.phpdoc.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Functions\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"entity.name.function.php\",\x0A\x09\x09\x09\x09\"support.function.basic_functions.php\",\x0A\x09\x09\x09\x09\"meta.function-call.php\",\x0A\x09\x09\x09\x09\"variable.other.property\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Variables\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"variable.other.php\",\x0A\x09\x09\x09\x09\"punctuation.definition.variable.php\",\x0A\x09\x09\x09\x09\"variable.other.global.php\",\x0A\x09\x09\x09\x09\"variable.language.this.php\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Color for Storage Modifiers\",\x0A\x09\x09\x09\"scope\": [\"storage.modifier.php\", \"keyword.other.namespace.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[YML] \xE2\x80\x94 KEYWORDS\",\x0A\x09\x09\x09\"scope\": [\"entity.name.tag.yaml\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[YML] \xE2\x80\x94 Punctuation\",\x0A\x09\x09\x09\"scope\": [\"punctuation.definition.block.sequence.item.yaml\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP] - Keywords for definition\",\x0A\x09\x09\x09\"scope\": [\"storage.type.function.php\", \"meta.function.parameters.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP Blade] - Keywords for definition\",\x0A\x09\x09\x09\"scope\": [\"keyword.blade\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP Blade] - Punctuation\",\x0A\x09\x09\x09\"scope\": [\"begin.bracket.round.blade.php\", \"end.bracket.round.blade.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[PHP Blade] - Construct\",\x0A\x09\x09\x09\"scope\": [\"support.function.construct.begin.blade\", \"support.function.construct.end.blade\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GO] - Keywords for definition\",\x0A\x09\x09\x09\"scope\": [\"keyword.package.go\", \"keyword.import.go\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GO] - Functions\",\x0A\x09\x09\x09\"scope\": [\"keyword.function.go\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GO] - Variables\",\x0A\x09\x09\x09\"scope\": [\"variable.other.assignment.go\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GO] - Punctuation\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"punctuation.definition.string.begin.go\",\x0A\x09\x09\x09\x09\"punctuation.definition.string.end.go\",\x0A\x09\x09\x09\x09\"support.function.go\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Interpolation Quoted Double & Block Inline\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"punctuation.section.embedded.end.ruby\",\x0A\x09\x09\x09\x09\"punctuation.section.embedded.begin.ruby\",\x0A\x09\x09\x09\x09\"punctuation.section.scope.begin.ruby\",\x0A\x09\x09\x09\x09\"punctuation.section.scope.end.ruby\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Constant\",\x0A\x09\x09\x09\"scope\": \"variable.other.constant.ruby\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#80FFBB\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Class\",\x0A\x09\x09\x09\"scope\": \"entity.name.type.class.ruby\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Variables\",\x0A\x09\x09\x09\"scope\": [\"variable.other.block.ruby\", \"variable.other.ruby\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Separators\",\x0A\x09\x09\x09\"scope\": \"punctuation.separator.other.ruby\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUBY] - Special Methods\",\x0A\x09\x09\x09\"scope\": \"keyword.other.special-method.ruby\",\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FFEE80\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SHELL] - Function Keyword\",\x0A\x09\x09\x09\"scope\": [\"storage.type.function.shell\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SHELL] - Var Other\",\x0A\x09\x09\x09\"scope\": [\"variable.other.special.shell\", \"punctuation.definition.variable.shell\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GRAPHQL] \xE2\x80\x94 Variable\",\x0A\x09\x09\x09\"scope\": [\"variable.graphql\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAEFA5\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[GRAPHQL] \xE2\x80\x94 Keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.operation.graphql\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SQL] Source\",\x0A\x09\x09\x09\"scope\": [\"source.sql\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SQL] \xE2\x80\x94 Keywords\",\x0A\x09\x09\x09\"scope\": [\"source.sql keyword.other\", \"support.function.mysqli.php\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAEFA5\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SQL] \xE2\x80\x94 Functions Used\",\x0A\x09\x09\x09\"scope\": [\"support.function.mysqli.php\", \"source.sql support.function\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SQL] \xE2\x80\x94 RegExp String\",\x0A\x09\x09\x09\"scope\": [\"string.regexp\", \"string.regexp keyword.other\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[SQL] \xE2\x80\x94 Other keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.DML.sql\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TOML] \xE2\x80\x94 SYNTAX\",\x0A\x09\x09\x09\"scope\": [\"punctuation.definition.table.array.toml\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TOML] \xE2\x80\x94 Other keywords\",\x0A\x09\x09\x09\"scope\": [\"entity.other.attribute-name.table.array.toml\", \"entity.other.attribute-name.table.toml\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[TOML] \xE2\x80\x94 Keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.key.toml\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[DOCKER] \xE2\x80\x94 Keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.special-method.dockerfile\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUST] \xE2\x80\x94 Keywords\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.rust\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[RUST] \xE2\x80\x94 Keyword Fn\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.fn.rust\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[ENV] \xE2\x80\x94 Keyword\",\x0A\x09\x09\x09\"scope\": [\"keyword.other.env\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[ENV] \xE2\x80\x94 Variable\",\x0A\x09\x09\x09\"scope\": [\"variable.other.env\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FAD000\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[ENV] \xE2\x80\x94 Source\",\x0A\x09\x09\x09\"scope\": [\"source.env\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#E1EFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[ENV] \xE2\x80\x94 Punctuation\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"keyword.other.template.begin.env\",\x0A\x09\x09\x09\x09\"keyword.other.template.end.env\",\x0A\x09\x09\x09\x09\"keyword.operator.assignment.env\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JS] \xE2\x80\x94 Double Destructure of Object\",\x0A\x09\x09\x09\"scope\": [\"variable.object.property\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#9EFFFF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[JS] \xE2\x80\x94 Regex\",\x0A\x09\x09\x09\"scope\": [\"string.regexp.js\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FB94FF\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[CSV] \xE2\x80\x94 Keyword 2\",\x0A\x09\x09\x09\"scope\": [\"keyword.rainbow2\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#FF9D00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"Deleted\",\x0A\x09\x09\x09\"scope\": [\"markup.deleted\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#F16E6B\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"Inserted\",\x0A\x09\x09\x09\"scope\": [\"markup.inserted\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"foreground\": \"#8efa00\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"Underline\",\x0A\x09\x09\x09\"scope\": [\"markup.underline\"],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"fontStyle\": \"underline\"\x0A\x09\x09\x09}\x0A\x09\x09},\x0A\x09\x09{\x0A\x09\x09\x09\"name\": \"[ITALICS] All the awesome italics live here.\",\x0A\x09\x09\x09\"scope\": [\x0A\x09\x09\x09\x09\"modifier\",\x0A\x09\x09\x09\x09\"this\",\x0A\x09\x09\x09\x09\"comment\",\x0A\x09\x09\x09\x09\"storage.modifier\",\x0A\x09\x09\x09\x09\"entity.other.attribute-name\",\x0A\x09\x09\x09\x09\"entity.other.attribute-name.html\",\x0A\x09\x09\x09\x09\"punctuation.definition.comment\",\x0A\x09\x09\x09\x09\"text.html.basic entity.other\",\x0A\x09\x09\x09\x09\"entity.other.attribute-name\",\x0A\x09\x09\x09\x09\"markup.quote.markdown meta.paragraph.markdown\",\x0A\x09\x09\x09\x09\"markup.italic.markdown\",\x0A\x09\x09\x09\x09\"text.jade entity.other.attribute-name.tag\",\x0A\x09\x09\x09\x09\"keyword.control.from\",\x0A\x09\x09\x09\x09\"entity.other.attribute-name.tag.pug\"\x0A\x09\x09\x09],\x0A\x09\x09\x09\"settings\": {\x0A\x09\x09\x09\x09\"fontStyle\": \"italic\"\x0A\x09\x09\x09}\x0A\x09\x09}\x0A\x09]\x0A}\x0A"), [115,116,114,105,110,103]);
  if (!isSome_1325405270(oHEX60gensym0_536870956)) Temporary115 = false; else {    var theme_536870979 = get_1325405290(oHEX60gensym0_536870956);
    Temporary115 = true;  }if (Temporary115) {
ed_536870952[0].theme = theme_536870979;
}

createView_1325403374(ed_536870952[0], newTextDocument_2952790593([97,98,115,121,116,114,101,101,95,98,114,111,119,115,101,114,46,104,116,109,108], makeNimstrLit("<html lang=\"en\">\x0A\x0A<head>\x0A    <meta charset=\"UTF-8\">\x0A    <meta name=\"viewport\" content=\"initial-scale=1.0\">\x0A    <title>Absytree</title>\x0A\x0A    <style>\x0A        body {\x0A            margin: 0;\x0A            font-family: \"Courier New\", monospace;\x0A            background: #222222;\x0A            color: #BBBBBB;\x0A        }\x0A\x0A        .code span {\x0A            vertical-align: top;\x0A            border-width: 1px;\x0A        }\x0A\x0A        .code a {\x0A            text-decoration: none;\x0A            vertical-align: top;\x0A            border-width: 1px;\x0A        }\x0A\x0A        .code div {\x0A            vertical-align: top;\x0A            border-width: 1px;\x0A        }\x0A\x0A        .widget {\x0A            position: absolute;\x0A            overflow: hidden;\x0A        }\x0A\x0A        #view {\x0A            overflow: hidden;\x0A        }\x0A\x0A        div {\x0A            /* border: 1px solid red; */\x0A        }\x0A    </style>\x0A</head>\x0A\x0A<body>\x0A    <div id=\"view\" style=\"width: 99%; height: 99%;\" tabindex=\"0\">\x0A\x0A    </div>\x0A    <script src=\"ast.js\"></script>\x0A</body>\x0A\x0A</html>")));
createView_1325403374(ed_536870952[0], newTextDocument_2952790593([97,98,115,121,116,114,101,101,95,106,115,46,110,105,109], makeNimstrLit("\x0Aimport compilation_config, custom_logger\x0A\x0Alogger.enableConsoleLogger()\x0A\x0Aimport std/[strformat, dom, unicode]\x0Aimport std/htmlgen as hg\x0Aimport util, editor, timer, platform/widget_builders, platform/platform, platform/browser_platform, custom_async, text_document, input, event, theme\x0Afrom scripting_api import Backend\x0A\x0A# Initialize renderer\x0Avar rend: BrowserPlatform = new BrowserPlatform\x0Arend.init()\x0A\x0Avar ed = newEditor(Backend.Browser, rend)\x0Aconst themeString = staticRead(\"../themes/Night Owl-Light-color-theme copy.json\")\x0Aif theme.loadFromString(themeString).getSome(theme):\x0A  ed.theme = theme\x0A\x0Aconst file1 = staticRead(\"../absytree_browser.html\")\x0Aconst file2 = staticRead(\"../src/absytree_js.nim\")\x0Aed.createView(newTextDocument(\"absytree_browser.html\", file1))\x0Aed.createView(newTextDocument(\"absytree_js.nim\", file2))\x0A\x0Avar frameTime = 0.0\x0Avar frameIndex = 0\x0A\x0Avar hasRequestedRerender = false\x0Aproc requestRender() =\x0A  if hasRequestedRerender:\x0A    return\x0A\x0A  discard window.requestAnimationFrame proc(time: float) =\x0A    # echo \"requestAnimationFrame \", time\x0A\x0A    hasRequestedRerender = false\x0A    defer: inc frameIndex\x0A\x0A    var layoutTime, updateTime, renderTime: float\x0A    block:\x0A      ed.frameTimer = startTimer()\x0A\x0A      let updateTimer = startTimer()\x0A      ed.updateWidgetTree(frameIndex)\x0A      updateTime = updateTimer.elapsed.ms\x0A\x0A      let layoutTimer = startTimer()\x0A      ed.layoutWidgetTree(rend.size, frameIndex)\x0A      layoutTime = layoutTimer.elapsed.ms\x0A\x0A      let renderTimer = startTimer()\x0A      rend.render(ed.widget, frameIndex)\x0A      renderTime = renderTimer.elapsed.ms\x0A\x0A      frameTime = ed.frameTimer.elapsed.ms\x0A\x0A    logger.log(lvlInfo, fmt\"Frame: {frameTime:>5.2}ms (u: {updateTime:>5.2}ms, l: {layoutTime:>5.2}ms, r: {renderTime:>5.2}ms)\")\x0A\x0Adiscard rend.onKeyPress.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onKeyRelease.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onRune.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onMousePress.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onMouseRelease.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onMouseMove.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onScroll.subscribe proc(event: auto): void = requestRender()\x0Adiscard rend.onCloseRequested.subscribe proc(_: auto) = requestRender()\x0Adiscard rend.onResized.subscribe proc(_: auto) = requestRender()\x0A\x0Ablock:\x0A  ed.setHandleInputs \"editor.text\", true\x0A  scriptSetOptionString \"editor.text.cursor.movement.\", \"both\"\x0A  scriptSetOptionBool \"editor.text.cursor.wide.\", false\x0A\x0A  scriptAddCommand \"editor.text\", \"<LEFT>\", \"move-cursor-column -1\"\x0A  scriptAddCommand \"editor.text\", \"<RIGHT>\", \"move-cursor-column 1\"\x0A  scriptAddCommand \"editor.text\", \"<C-d>\", \"delete-move \\\"line-next\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<C-LEFT>\", \"move-first \\\"word-line\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<C-RIGHT>\", \"move-last \\\"word-line\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<HOME>\", \"move-first \\\"line\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<END>\", \"move-last \\\"line\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<C-UP>\", \"scroll-text 20\"\x0A  scriptAddCommand \"editor.text\", \"<C-DOWN>\", \"scroll-text -20\"\x0A  scriptAddCommand \"editor.text\", \"<CS-LEFT>\", \"move-first \\\"word-line\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<CS-RIGHT>\", \"move-last \\\"word-line\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<UP>\", \"move-cursor-line -1\"\x0A  scriptAddCommand \"editor.text\", \"<DOWN>\", \"move-cursor-line 1\"\x0A  scriptAddCommand \"editor.text\", \"<C-HOME>\", \"move-first \\\"file\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<C-END>\", \"move-last \\\"file\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<CS-HOME>\", \"move-first \\\"file\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<CS-END>\", \"move-last \\\"file\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-LEFT>\", \"move-cursor-column -1 \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-RIGHT>\", \"move-cursor-column 1 \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-UP>\", \"move-cursor-line -1 \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-DOWN>\", \"move-cursor-line 1 \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-HOME>\", \"move-first \\\"line\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<S-END>\", \"move-last \\\"line\\\" \\\"last\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<CA-d>\", \"duplicate-last-selection\"\x0A  scriptAddCommand \"editor.text\", \"<CA-UP>\", \"add-cursor-above\"\x0A  scriptAddCommand \"editor.text\", \"<CA-DOWN>\", \"add-cursor-below\"\x0A  scriptAddCommand \"editor.text\", \"<BACKSPACE>\", \"delete-left\"\x0A  scriptAddCommand \"editor.text\", \"<DELETE>\", \"delete-right\"\x0A  scriptAddCommand \"editor.text\", \"<ENTER>\", \"insert-text \\\"\\n\\\"\"\x0A  scriptAddCommand \"editor.text\", \"<SPACE>\", \"insert-text \\\" \\\"\"\x0A  scriptAddCommand \"editor.text\", \"<C-l>\", \"select-line-current\"\x0A  scriptAddCommand \"editor.text\", \"<A-UP>\", \"select-parent-current-ts\"\x0A  scriptAddCommand \"editor.text\", \"<C-r>\", \"select-prev\"\x0A  scriptAddCommand \"editor.text\", \"<C-t>\", \"select-next\"\x0A  scriptAddCommand \"editor.text\", \"<C-n>\", \"invert-selection\"\x0A  scriptAddCommand \"editor.text\", \"<C-y>\", \"undo\"\x0A  scriptAddCommand \"editor.text\", \"<C-z>\", \"redo\"\x0A\x0ArequestRender()\x0A\x0Aed.shutdown()\x0Arend.deinit()\x0A")));
var frameTime_536870990 = [0.0];
var frameIndex_536870991 = [0];
var hasRequestedRerender_536870992 = [false];

function color_2382364744(r_2382364745, g_2382364746, b_2382364747, a_2382364748) {
  var result_2382364749 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2382364749 = nimCopy(result_2382364749, {r: r_2382364745, g: g_2382364746, b: b_2382364747, a: a_2382364748}, NTI2382364675);

  return result_2382364749;

}

function rawGet_3019899049(t_3019899052, key_3019899053, hc_3019899054, hc_3019899054_Idx) {
  var result_3019899055 = 0;

  BeforeRet: {
    hc_3019899054[hc_3019899054_Idx] = hash_1358954668(key_3019899053);
    if ((hc_3019899054[hc_3019899054_Idx] == 0)) {
    hc_3019899054[hc_3019899054_Idx] = 314159265;
    }
    
    if (((t_3019899052.data).length == 0)) {
    result_3019899055 = -1;
    break BeforeRet;
    }
    
    var h_3019899110 = (hc_3019899054[hc_3019899054_Idx] & (t_3019899052.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_3019899052.data[chckIndx(h_3019899110, 0, (t_3019899052.data).length - 1)].Field0)) break Label2;
          if (((t_3019899052.data[chckIndx(h_3019899110, 0, (t_3019899052.data).length - 1)].Field0 == hc_3019899054[hc_3019899054_Idx]) && (t_3019899052.data[chckIndx(h_3019899110, 0, (t_3019899052.data).length - 1)].Field1 == key_3019899053))) {
          result_3019899055 = h_3019899110;
          break BeforeRet;
          }
          
          h_3019899110 = nextTry_1342177315(h_3019899110, (t_3019899052.data).length - 1);
        }
    };
    result_3019899055 = subInt(-1, h_3019899110);
  };

  return result_3019899055;

}

function hasKey_3019899042(t_3019899045, key_3019899046) {
  var result_3019899047 = false;

    var hc_3019899048 = [0];
    result_3019899047 = (0 <= rawGet_3019899049(t_3019899045, key_3019899046, hc_3019899048, 0));

  return result_3019899047;

}

function contains_3019899036(t_3019899039, key_3019899040) {
  var result_3019899041 = false;

  BeforeRet: {
    result_3019899041 = hasKey_3019899042(t_3019899039, key_3019899040);
    break BeforeRet;
  };

  return result_3019899041;

}

function HEX5BHEX5D_3019899335(t_3019899338, key_3019899339) {
  var result_3019899340 = null;
  var result_3019899340_Idx = 0;

    var hcHEX60gensym22_3019899341 = [0];
    var indexHEX60gensym22_3019899348 = rawGet_3019899049(t_3019899338, key_3019899339, hcHEX60gensym22_3019899341, 0);
    if ((0 <= indexHEX60gensym22_3019899348)) {
    result_3019899340 = t_3019899338.data[chckIndx(indexHEX60gensym22_3019899348, 0, (t_3019899338.data).length - 1)]; result_3019899340_Idx = "Field2";
    }
    else {
    raiseKeyError_1325405137(key_3019899339);
    }
    

  return [result_3019899340, result_3019899340_Idx];

}

function mustRehash_3019899627(t_3019899629) {
  var result_3019899630 = false;

    if (!((t_3019899629.counter < (t_3019899629.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019899630 = ((mulInt((t_3019899629.data).length, 2) < mulInt(t_3019899629.counter, 3)) || (subInt((t_3019899629.data).length, t_3019899629.counter) < 4));

  return result_3019899630;

}

function rawInsert_3019900076(t_3019900080, data_3019900081, data_3019900081_Idx, key_3019900082, val_3019900083, hc_3019900084, h_3019900085) {
    data_3019900081[data_3019900081_Idx][chckIndx(h_3019900085, 0, (data_3019900081[data_3019900081_Idx]).length - 1)].Field1 = key_3019900082;
    data_3019900081[data_3019900081_Idx][chckIndx(h_3019900085, 0, (data_3019900081[data_3019900081_Idx]).length - 1)].Field2 = val_3019900083;
    data_3019900081[data_3019900081_Idx][chckIndx(h_3019900085, 0, (data_3019900081[data_3019900081_Idx]).length - 1)].Field0 = hc_3019900084;

  
}

function enlarge_3019899782(t_3019899785) {
    var n_3019899788 = [];
    n_3019899788 = new Array(chckRange(mulInt((t_3019899785.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019899785.data).length, 2), 0, 2147483647) ; ++i) { n_3019899788[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3019899785.data; t_3019899785.data = n_3019899788; n_3019899788 = Temporary1;    Label2: {
      var i_3019899852 = 0;
      var colontmp__536872470 = 0;
      colontmp__536872470 = (n_3019899788).length - 1;
      var res_536872471 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872471 <= colontmp__536872470)) break Label4;
            i_3019899852 = res_536872471;
            var eh_3019899906 = n_3019899788[chckIndx(i_3019899852, 0, (n_3019899788).length - 1)].Field0;
            if (isFilled_1342177312(eh_3019899906)) {
            var j_3019899910 = (eh_3019899906 & (t_3019899785.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_3019899785.data[chckIndx(j_3019899910, 0, (t_3019899785.data).length - 1)].Field0)) break Label6;
                  j_3019899910 = nextTry_1342177315(j_3019899910, (t_3019899785.data).length - 1);
                }
            };
            rawInsert_3019900076(t_3019899785, t_3019899785, "data", n_3019899788[chckIndx(i_3019899852, 0, (n_3019899788).length - 1)].Field1, n_3019899788[chckIndx(i_3019899852, 0, (n_3019899788).length - 1)].Field2, eh_3019899906, j_3019899910);
            }
            
            res_536872471 = addInt(res_536872471, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019900245(t_3019900248, key_3019900249, hc_3019900250) {
  var result_3019900251 = 0;

  BeforeRet: {
    if (((t_3019900248.data).length == 0)) {
    result_3019900251 = -1;
    break BeforeRet;
    }
    
    var h_3019900302 = (hc_3019900250 & (t_3019900248.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_3019900248.data[chckIndx(h_3019900302, 0, (t_3019900248.data).length - 1)].Field0)) break Label2;
          if (((t_3019900248.data[chckIndx(h_3019900302, 0, (t_3019900248.data).length - 1)].Field0 == hc_3019900250) && (t_3019900248.data[chckIndx(h_3019900302, 0, (t_3019900248.data).length - 1)].Field1 == key_3019900249))) {
          result_3019900251 = h_3019900302;
          break BeforeRet;
          }
          
          h_3019900302 = nextTry_1342177315(h_3019900302, (t_3019900248.data).length - 1);
        }
    };
    result_3019900251 = subInt(-1, h_3019900302);
  };

  return result_3019900251;

}

function HEX5BHEX5DHEX3D_3019899454(t_3019899457, key_3019899458, val_3019899459) {
    if (((t_3019899457.data).length == 0)) {
    var correctSizeHEX60gensym5_3019899508 = slotsNeeded_1342177323(32);
    t_3019899457.counter = 0;
    t_3019899457.data = new Array(chckRange(correctSizeHEX60gensym5_3019899508, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3019899508, 0, 2147483647) ; ++i) { t_3019899457.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3019899513 = [0];
    var index_3019899520 = rawGet_3019899049(t_3019899457, key_3019899458, hc_3019899513, 0);
    if ((0 <= index_3019899520)) {
    t_3019899457.data[chckIndx(index_3019899520, 0, (t_3019899457.data).length - 1)].Field2 = val_3019899459;
    }
    else {
      if (((t_3019899457.data).length == 0)) {
      var correctSizeHEX60gensym8_3019899622 = slotsNeeded_1342177323(32);
      t_3019899457.counter = 0;
      t_3019899457.data = new Array(chckRange(correctSizeHEX60gensym8_3019899622, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3019899622, 0, 2147483647) ; ++i) { t_3019899457.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3019899627(t_3019899457)) {
      enlarge_3019899782(t_3019899457);
      index_3019899520 = rawGetKnownHC_3019900245(t_3019899457, key_3019899458, hc_3019899513[0]);
      }
      
      index_3019899520 = subInt(-1, index_3019899520);
      rawInsert_3019900076(t_3019899457, t_3019899457, "data", key_3019899458, val_3019899459, hc_3019899513[0], index_3019899520);
      t_3019899457.counter = addInt(t_3019899457.counter, 1);
    }
    

  
}

function activeHEX3D_2181038101(self_2181038102, newActive_2181038103) {
    self_2181038102.dirty = (self_2181038102.dirty || !((newActive_2181038103 == self_2181038102.active)));
    self_2181038102.active = newActive_2181038103;

  
}

function HEX5BHEX5D_3019900499(s_3019900503, x_3019900504) {
  var result_3019900505 = [];

    var a_3019900507 = x_3019900504.a;
    var L_3019900513 = addInt(subInt(subInt((s_3019900503).length, x_3019900504.b), a_3019900507), 1);
    result_3019900505 = new Array(chckRange(L_3019900513, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3019900513, 0, 2147483647) ; ++i) { result_3019900505[i] = null; }    Label1: {
      var i_3019900522 = 0;
      var i_536872475 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872475 < L_3019900513)) break Label3;
            i_3019900522 = i_536872475;
            result_3019900505[chckIndx(i_3019900522, 0, (result_3019900505).length - 1)] = s_3019900503[chckIndx(addInt(i_3019900522, a_3019900507), 0, (s_3019900503).length - 1)];
            i_536872475 = addInt(i_536872475, 1);
          }
      };
    };

  return result_3019900505;

}

function find_3019900727(a_3019900730, item_3019900731) {
  var result_3019900732 = 0;

  BeforeRet: {
    result_3019900732 = 0;
    Label1: {
      var i_3019900745 = null;
      var i_536872479 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872479 < (a_3019900730).length)) break Label3;
            i_3019900745 = a_3019900730[chckIndx(i_536872479, 0, (a_3019900730).length - 1)];
            if ((i_3019900745 == item_3019900731)) {
            break BeforeRet;
            }
            
            result_3019900732 = addInt(result_3019900732, 1);
            i_536872479 = addInt(i_536872479, 1);
          }
      };
    };
    result_3019900732 = -1;
  };

  return result_3019900732;

}

function contains_3019900722(a_3019900724, item_3019900725) {
  var result_3019900726 = false;

  BeforeRet: {
    result_3019900726 = (0 <= find_3019900727(a_3019900724, item_3019900725));
    break BeforeRet;
  };

  return result_3019900726;

}

function and_2113929308(a_2113929309, b_2113929310) {
  var result_2113929311 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2113929311.x = max_33555642(a_2113929309.x, b_2113929310.x);
    result_2113929311.y = max_33555642(a_2113929309.y, b_2113929310.y);
    result_2113929311.w = (min_33555609((a_2113929309.x + a_2113929309.w), (b_2113929310.x + b_2113929310.w)) - result_2113929311.x);
    result_2113929311.h = (min_33555609((a_2113929309.y + a_2113929309.h), (b_2113929310.y + b_2113929310.h)) - result_2113929311.y);

  return result_2113929311;

}

function intersects_2097152185(a_2097152186, b_2097152187) {
  var result_2097152188 = false;

  BeforeRet: {
    var intersection_2097152189 = and_2113929308(a_2097152186, b_2097152187);
    result_2097152188 = ((0.0 < intersection_2097152189.w) && (0.0 < intersection_2097152189.h));
    break BeforeRet;
  };

  return result_2097152188;

}

function contains_2097152198(a_2097152199, b_2097152200) {
  var result_2097152201 = false;

  BeforeRet: {
    result_2097152201 = ((((a_2097152199.x <= b_2097152200.x) && ((b_2097152200.x + b_2097152200.w) <= (a_2097152199.x + a_2097152199.w))) && (a_2097152199.y <= b_2097152200.y)) && ((b_2097152200.y + b_2097152200.h) <= (a_2097152199.y + a_2097152199.h)));
    break BeforeRet;
  };

  return result_2097152201;

}

function invalidate_2348810471(self_2348810472, currentIndex_2348810473, rect_2348810474) {
  BeforeRet: {
    if ((!(intersects_2097152185(self_2348810472.lastBounds, rect_2348810474)) || ((currentIndex_2348810473 <= self_2348810472.lastInvalidation) && contains_2097152198(self_2348810472.lastInvalidationRect, rect_2348810474)))) {
    break BeforeRet;
    }
    
    self_2348810472.lastInvalidationRect = nimCopy(self_2348810472.lastInvalidationRect, and_2113929308(rect_2348810474, self_2348810472.lastBounds), NTI2113929221);
    self_2348810472.lastInvalidation = currentIndex_2348810473;
    if (isObj(self_2348810472.m_type, NTI2348810252)) {
    Label1: {
      var c_2348810484 = null;
      var colontmp__536872482 = [];
      colontmp__536872482 = self_2348810472.children;
      var i_536872483 = 0;
      var L_536872484 = (colontmp__536872482).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872483 < L_536872484)) break Label3;
            c_2348810484 = colontmp__536872482[chckIndx(i_536872483, 0, (colontmp__536872482).length - 1)];
            invalidate_2348810471(c_2348810484, currentIndex_2348810473, self_2348810472.lastInvalidationRect);
            i_536872483 = addInt(i_536872483, 1);
            if (!(((colontmp__536872482).length == L_536872484))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810472.m_type, NTI2348810254)) {
    Label4: {
      var c_2348810494 = null;
      var colontmp__536872487 = [];
      colontmp__536872487 = self_2348810472.children;
      var i_536872488 = 0;
      var L_536872489 = (colontmp__536872487).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872488 < L_536872489)) break Label6;
            c_2348810494 = colontmp__536872487[chckIndx(i_536872488, 0, (colontmp__536872487).length - 1)];
            invalidate_2348810471(c_2348810494, currentIndex_2348810473, self_2348810472.lastInvalidationRect);
            i_536872488 = addInt(i_536872488, 1);
            if (!(((colontmp__536872487).length == L_536872489))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810472.m_type, NTI2348810256)) {
    Label7: {
      var c_2348810504 = null;
      var colontmp__536872492 = [];
      colontmp__536872492 = self_2348810472.children;
      var i_536872493 = 0;
      var L_536872494 = (colontmp__536872492).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872493 < L_536872494)) break Label9;
            c_2348810504 = colontmp__536872492[chckIndx(i_536872493, 0, (colontmp__536872492).length - 1)];
            invalidate_2348810471(c_2348810504, currentIndex_2348810473, self_2348810472.lastInvalidationRect);
            i_536872493 = addInt(i_536872493, 1);
            if (!(((colontmp__536872492).length == L_536872494))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810472.m_type, NTI2348810258)) {
    Label10: {
      var c_2348810514 = null;
      var colontmp__536872497 = [];
      colontmp__536872497 = self_2348810472.children;
      var i_536872498 = 0;
      var L_536872499 = (colontmp__536872497).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536872498 < L_536872499)) break Label12;
            c_2348810514 = colontmp__536872497[chckIndx(i_536872498, 0, (colontmp__536872497).length - 1)];
            invalidate_2348810471(c_2348810514, currentIndex_2348810473, self_2348810472.lastInvalidationRect);
            i_536872498 = addInt(i_536872498, 1);
            if (!(((colontmp__536872497).length == L_536872499))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_2969567817(t_2969567820, key_2969567821) {
  var result_2969567822 = false;

    var hc_2969567823 = [0];
    result_2969567822 = (0 <= rawGet_2499806212(t_2969567820, key_2969567821, hc_2969567823, 0));

  return result_2969567822;

}

function contains_2969567811(t_2969567814, key_2969567815) {
  var result_2969567816 = false;

  BeforeRet: {
    result_2969567816 = hasKey_2969567817(t_2969567814, key_2969567815);
    break BeforeRet;
  };

  return result_2969567816;

}

function HEX5BHEX5D_2969567901(t_2969567904, key_2969567905) {
  var result_2969567906 = null;

    var hcHEX60gensym22_2969567907 = [0];
    var indexHEX60gensym22_2969567914 = rawGet_2499806212(t_2969567904, key_2969567905, hcHEX60gensym22_2969567907, 0);
    if ((0 <= indexHEX60gensym22_2969567914)) {
    result_2969567906 = t_2969567904.data[chckIndx(indexHEX60gensym22_2969567914, 0, (t_2969567904.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1660947325(key_2969567905);
    }
    

  return result_2969567906;

}

function max_872416994(x_872416996, y_872416997) {
    var Temporary1;

  var result_872416998 = 0;

    if ((y_872416997 <= x_872416996)) {
    Temporary1 = x_872416996;
    }
    else {
    Temporary1 = y_872416997;
    }
    
    result_872416998 = Temporary1;

  return result_872416998;

}

function nsuRFindStr(s_872416988, sub_872416989, start_872416990, last_872416991) {
    var Temporary1;
    var Temporary2;

  var result_872416992 = 0;

  BeforeRet: {
    if (((sub_872416989).length == 0)) {
    if ((last_872416991 < 0)) {
    Temporary1 = (s_872416988).length;
    }
    else {
    Temporary1 = last_872416991;
    }
    
    var rightIndex_872416993 = chckRange(Temporary1, 0, 2147483647);
    result_872416992 = max_872416994(start_872416990, rightIndex_872416993);
    break BeforeRet;
    }
    
    if ((subInt((s_872416988).length, start_872416990) < (sub_872416989).length)) {
    result_872416992 = -1;
    break BeforeRet;
    }
    
    if ((last_872416991 == -1)) {
    Temporary2 = (s_872416988).length - 1;
    }
    else {
    Temporary2 = last_872416991;
    }
    
    var last_872416999 = Temporary2;
    result_872416992 = 0;
    Label3: {
      var i_872417005 = 0;
      var colontmp__536872506 = 0;
      var colontmp__536872507 = 0;
      colontmp__536872506 = addInt(subInt(last_872416999, (sub_872416989).length), 1);
      colontmp__536872507 = start_872416990;
      var res_536872508 = colontmp__536872506;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536872507 <= res_536872508)) break Label5;
            i_872417005 = res_536872508;
            Label6: {
              var j_872417010 = 0;
              var colontmp__536872503 = 0;
              colontmp__536872503 = subInt((sub_872416989).length, 1);
              var res_536872504 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536872504 <= colontmp__536872503)) break Label8;
                    j_872417010 = res_536872504;
                    result_872416992 = i_872417005;
                    if (!((sub_872416989[chckIndx(j_872417010, 0, (sub_872416989).length - 1)] == s_872416988[chckIndx(addInt(i_872417005, j_872417010), 0, (s_872416988).length - 1)]))) {
                    result_872416992 = -1;
                    break Label6;
                    }
                    
                    res_536872504 = addInt(res_536872504, 1);
                  }
              };
            };
            if (!((result_872416992 == -1))) {
            break BeforeRet;
            }
            
            res_536872508 = subInt(res_536872508, 1);
          }
      };
    };
    result_872416992 = -1;
    break BeforeRet;
  };

  return result_872416992;

}

function getCascading_3053453415(table_3053453417, key_3053453418, default_3053453419) {
  var result_3053453420 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_2969567811(table_3053453417, key_3053453418)) {
    result_3053453420 = nimCopy(result_3053453420, HEX5BHEX5D_2969567901(table_3053453417, key_3053453418), NTI2382364675);
    break BeforeRet;
    }
    
    var index_3053453526 = nsuRFindStr(key_3053453418, [46], 0, -1);
    if (!((index_3053453526 == -1))) {
    result_3053453420 = nimCopy(result_3053453420, getCascading_3053453415(table_3053453417, HEX5BHEX5D_872416507(key_3053453418, HEX2EHEX2E_822083634(0, subInt(index_3053453526, 1))), default_3053453419), NTI2382364675);
    break BeforeRet;
    }
    
    result_3053453420 = nimCopy(result_3053453420, default_3053453419, NTI2382364675);
    break BeforeRet;
  };

  return result_3053453420;

}

function color_2466250785(c_2466250786) {
  var result_2466250787 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2466250787.r = (c_2466250786.r / 255.0);
    result_2466250787.g = (c_2466250786.g / 255.0);
    result_2466250787.b = (c_2466250786.b / 255.0);
    result_2466250787.a = 1.0;

  return result_2466250787;

}

function color_3053453404(theme_3053453406, name_3053453407, default_3053453408) {
  var result_3053453409 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3053453409 = nimCopy(result_3053453409, getCascading_3053453415(theme_3053453406.colors, name_3053453407, color_2466250785(default_3053453408)), NTI2382364675);
    break BeforeRet;
  };

  return result_3053453409;

}

function rgb_2382364759(r_2382364760, g_2382364761, b_2382364762) {
  var result_2382364763 = ({r: 0, g: 0, b: 0});

    result_2382364763 = nimCopy(result_2382364763, {r: r_2382364760, g: g_2382364761, b: b_2382364762}, NTI2382364676);

  return result_2382364763;

}

function HEX3DHEX3D_2348810308(x_2348810310, y_2348810311) {
  var result_2348810312 = false;

  BeforeRet: {
    if (!((x_2348810310.r == y_2348810311.r))) {
    result_2348810312 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810310.g == y_2348810311.g))) {
    result_2348810312 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810310.b == y_2348810311.b))) {
    result_2348810312 = false;
    break BeforeRet;
    }
    
    if (!((x_2348810310.a == y_2348810311.a))) {
    result_2348810312 = false;
    break BeforeRet;
    }
    
    result_2348810312 = true;
    break BeforeRet;
  };

  return result_2348810312;

}

function updateForegroundColor_2348810304(self_2348810305, color_2348810306, frameIndex_2348810307) {
    if (!(HEX3DHEX3D_2348810308(self_2348810305.foregroundColor, color_2348810306))) {
    self_2348810305.lastHierarchyChange = nimMax(self_2348810305.lastHierarchyChange, frameIndex_2348810307);
    }
    
    self_2348810305.foregroundColor = nimCopy(self_2348810305.foregroundColor, color_2348810306, NTI2382364675);

  
}

function updateLastHierarchyChangeFromChildren_2348810326(self_2348810327, currentIndex_2348810328) {
    if (isObj(self_2348810327.m_type, NTI2348810252)) {
    Label1: {
      var c_2348810358 = null;
      var colontmp__536872511 = [];
      colontmp__536872511 = self_2348810327.children;
      var i_536872512 = 0;
      var L_536872513 = (colontmp__536872511).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872512 < L_536872513)) break Label3;
            c_2348810358 = colontmp__536872511[chckIndx(i_536872512, 0, (colontmp__536872511).length - 1)];
            updateLastHierarchyChangeFromChildren_2348810326(c_2348810358, currentIndex_2348810328);
            self_2348810327.lastHierarchyChange = nimMax(nimMax(self_2348810327.lastHierarchyChange, c_2348810358.lastHierarchyChange), c_2348810358.lastBoundsChange);
            i_536872512 = addInt(i_536872512, 1);
            if (!(((colontmp__536872511).length == L_536872513))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810327.m_type, NTI2348810254)) {
    Label4: {
      var c_2348810369 = null;
      var colontmp__536872516 = [];
      colontmp__536872516 = self_2348810327.children;
      var i_536872517 = 0;
      var L_536872518 = (colontmp__536872516).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872517 < L_536872518)) break Label6;
            c_2348810369 = colontmp__536872516[chckIndx(i_536872517, 0, (colontmp__536872516).length - 1)];
            updateLastHierarchyChangeFromChildren_2348810326(c_2348810369, currentIndex_2348810328);
            self_2348810327.lastHierarchyChange = nimMax(nimMax(self_2348810327.lastHierarchyChange, c_2348810369.lastHierarchyChange), c_2348810369.lastBoundsChange);
            i_536872517 = addInt(i_536872517, 1);
            if (!(((colontmp__536872516).length == L_536872518))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810327.m_type, NTI2348810256)) {
    Label7: {
      var c_2348810380 = null;
      var colontmp__536872521 = [];
      colontmp__536872521 = self_2348810327.children;
      var i_536872522 = 0;
      var L_536872523 = (colontmp__536872521).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872522 < L_536872523)) break Label9;
            c_2348810380 = colontmp__536872521[chckIndx(i_536872522, 0, (colontmp__536872521).length - 1)];
            updateLastHierarchyChangeFromChildren_2348810326(c_2348810380, currentIndex_2348810328);
            self_2348810327.lastHierarchyChange = nimMax(nimMax(self_2348810327.lastHierarchyChange, c_2348810380.lastHierarchyChange), c_2348810380.lastBoundsChange);
            i_536872522 = addInt(i_536872522, 1);
            if (!(((colontmp__536872521).length == L_536872523))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810327.m_type, NTI2348810258)) {
    Label10: {
      var c_2348810391 = null;
      var colontmp__536872526 = [];
      colontmp__536872526 = self_2348810327.children;
      var i_536872527 = 0;
      var L_536872528 = (colontmp__536872526).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536872527 < L_536872528)) break Label12;
            c_2348810391 = colontmp__536872526[chckIndx(i_536872527, 0, (colontmp__536872526).length - 1)];
            updateLastHierarchyChangeFromChildren_2348810326(c_2348810391, currentIndex_2348810328);
            self_2348810327.lastHierarchyChange = nimMax(nimMax(self_2348810327.lastHierarchyChange, c_2348810391.lastHierarchyChange), c_2348810391.lastBoundsChange);
            i_536872527 = addInt(i_536872527, 1);
            if (!(((colontmp__536872526).length == L_536872528))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810327.m_type, NTI2348810260)) {
    if (!(eqStrings(self_2348810327.text, self_2348810327.lastRenderedText))) {
    self_2348810327.lastHierarchyChange = nimMax(self_2348810327.lastHierarchyChange, currentIndex_2348810328);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3019898898(self_3019898899, frameIndex_3019898900, statusBarWidget_3019898901) {
    var Temporary1;

    var statusWidget_3019898902 = null;
    var commandLineWidget_3019898903 = null;
    if (((statusBarWidget_3019898901.children).length == 0)) {
    statusWidget_3019898902 = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 0.5)}, NTI2348810251), lastHierarchyChange: frameIndex_3019898900, m_type: NTI2348810260, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3019898901.children.push(statusWidget_3019898902);;
    commandLineWidget_3019898903 = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.5), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), lastHierarchyChange: frameIndex_3019898900, m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3019898901.children.push(commandLineWidget_3019898903);;
    layoutWidget_2348810564(statusWidget_3019898902, statusBarWidget_3019898901.lastBounds, frameIndex_3019898900, self_3019898899.platform.layoutOptions);
    layoutWidget_2348810564(commandLineWidget_3019898903, statusBarWidget_3019898901.lastBounds, frameIndex_3019898900, self_3019898899.platform.layoutOptions);
    }
    else {
      statusWidget_3019898902 = statusBarWidget_3019898901.children[chckIndx(0, 0, (statusBarWidget_3019898901.children).length - 1)];
      commandLineWidget_3019898903 = statusBarWidget_3019898901.children[chckIndx(1, 0, (statusBarWidget_3019898901.children).length - 1)];
    }
    
    var textColor_3019898920 = color_3053453404(self_3019898899.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2382364759(225, 200, 200));
    if (((self_3019898899.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3019898899.currentMode;
    }
    
    statusWidget_3019898902.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2348810304(statusWidget_3019898902, textColor_3019898920, frameIndex_3019898900);
    updateLastHierarchyChangeFromChildren_2348810326(statusWidget_3019898902, frameIndex_3019898900);
    statusBarWidget_3019898901.lastHierarchyChange = nimMax(statusBarWidget_3019898901.lastHierarchyChange, statusWidget_3019898902.lastHierarchyChange);
    activeHEX3D_2181038101(getCommandLineTextEditor_1325405317(self_3019898899), self_3019898899.commandLineMode);
    updateWidget_3036676105(getCommandLineTextEditor_1325405317(self_3019898899), self_3019898899, commandLineWidget_3019898903, frameIndex_3019898900);
    statusBarWidget_3019898901.lastHierarchyChange = nimMax(statusBarWidget_3019898901.lastHierarchyChange, commandLineWidget_3019898903.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2348810515(self_2348810516, currentIndex_2348810517, recurse_2348810518) {
    if (isObj(self_2348810516.m_type, NTI2348810252)) {
    Label1: {
      var c_2348810528 = null;
      var colontmp__536872531 = [];
      colontmp__536872531 = self_2348810516.children;
      var i_536872532 = 0;
      var L_536872533 = (colontmp__536872531).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872532 < L_536872533)) break Label3;
            c_2348810528 = colontmp__536872531[chckIndx(i_536872532, 0, (colontmp__536872531).length - 1)];
            if (recurse_2348810518) {
            updateInvalidationFromChildren_2348810515(c_2348810528, currentIndex_2348810517, recurse_2348810518);
            }
            
            self_2348810516.lastInvalidation = nimMax(nimMax(self_2348810516.lastInvalidation, c_2348810528.lastInvalidation), currentIndex_2348810517);
            i_536872532 = addInt(i_536872532, 1);
            if (!(((colontmp__536872531).length == L_536872533))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810516.m_type, NTI2348810254)) {
    Label4: {
      var c_2348810538 = null;
      var colontmp__536872536 = [];
      colontmp__536872536 = self_2348810516.children;
      var i_536872537 = 0;
      var L_536872538 = (colontmp__536872536).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872537 < L_536872538)) break Label6;
            c_2348810538 = colontmp__536872536[chckIndx(i_536872537, 0, (colontmp__536872536).length - 1)];
            if (recurse_2348810518) {
            updateInvalidationFromChildren_2348810515(c_2348810538, currentIndex_2348810517, recurse_2348810518);
            }
            
            self_2348810516.lastInvalidation = nimMax(nimMax(self_2348810516.lastInvalidation, c_2348810538.lastInvalidation), currentIndex_2348810517);
            i_536872537 = addInt(i_536872537, 1);
            if (!(((colontmp__536872536).length == L_536872538))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810516.m_type, NTI2348810256)) {
    Label7: {
      var c_2348810548 = null;
      var colontmp__536872541 = [];
      colontmp__536872541 = self_2348810516.children;
      var i_536872542 = 0;
      var L_536872543 = (colontmp__536872541).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872542 < L_536872543)) break Label9;
            c_2348810548 = colontmp__536872541[chckIndx(i_536872542, 0, (colontmp__536872541).length - 1)];
            if (recurse_2348810518) {
            updateInvalidationFromChildren_2348810515(c_2348810548, currentIndex_2348810517, recurse_2348810518);
            }
            
            self_2348810516.lastInvalidation = nimMax(nimMax(self_2348810516.lastInvalidation, c_2348810548.lastInvalidation), currentIndex_2348810517);
            i_536872542 = addInt(i_536872542, 1);
            if (!(((colontmp__536872541).length == L_536872543))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2348810516.m_type, NTI2348810258)) {
    Label10: {
      var c_2348810558 = null;
      var colontmp__536872546 = [];
      colontmp__536872546 = self_2348810516.children;
      var i_536872547 = 0;
      var L_536872548 = (colontmp__536872546).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536872547 < L_536872548)) break Label12;
            c_2348810558 = colontmp__536872546[chckIndx(i_536872547, 0, (colontmp__536872546).length - 1)];
            if (recurse_2348810518) {
            updateInvalidationFromChildren_2348810515(c_2348810558, currentIndex_2348810517, recurse_2348810518);
            }
            
            self_2348810516.lastInvalidation = nimMax(nimMax(self_2348810516.lastInvalidation, c_2348810558.lastInvalidation), currentIndex_2348810517);
            i_536872547 = addInt(i_536872547, 1);
            if (!(((colontmp__536872546).length == L_536872548))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3019898960(self_3019898961, frameIndex_3019898962) {
            var Temporary4;
            var Temporary8;

    if ((self_3019898961.widget == null)) {
    mainStack_3019898922[0] = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), right: -1.0, logLayout: false, m_type: NTI2348810254, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3019898961.widget = mainStack_3019898922[0];
    mainPanel_3019898924[0] = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3019898922[0].children.push(mainPanel_3019898924[0]);;
    viewPanel_3019898923[0] = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), bottom: (-2.0 * totalLineHeight_2332033177(self_3019898961.platform)), m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3019898924[0].children.push(viewPanel_3019898923[0]);;
    commandLineWidget_3019898921[0] = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 1.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), top: (-2.0 * totalLineHeight_2332033177(self_3019898961.platform)), fillBackground: true, backgroundColor: color_2382364744(0.0, 0.0, 0.0, 1.0), m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3019898924[0].children.push(commandLineWidget_3019898921[0]);;
    layoutWidget_2348810564(self_3019898961.widget, rect_2113929240(vec2_2130707424(0.0, 0.0), size_2332033136(self_3019898961.platform)), frameIndex_3019898962, self_3019898961.platform.layoutOptions);
    }
    
    if (viewPanel_3019898923[0].children.length < 0) { for (var i = viewPanel_3019898923[0].children.length ; i < 0 ; ++i) viewPanel_3019898923[0].children.push(null); }
               else { viewPanel_3019898923[0].children.length = 0; };
    var rects_3019898985 = layoutViews_1325402630(self_3019898961.layout, self_3019898961.layout_props, rect_2113929234(0.0, 0.0, 1.0, 1.0), (self_3019898961.views).length);
    Label1: {
      var i_3019898991 = 0;
      var view_3019898992 = null;
      var i_536872447 = 0;
      var L_536872448 = (self_3019898961.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872447 < L_536872448)) break Label3;
            i_3019898991 = i_536872447;
            view_3019898992 = self_3019898961.views[chckIndx(i_536872447, 0, (self_3019898961.views).length - 1)];
            var widget_3019898993 = null;
            if (contains_3019899036(widgetsPerEditor_3019898950[0], view_3019898992.editor.id)) {
            widget_3019898993 = (Temporary4 = HEX5BHEX5D_3019899335(widgetsPerEditor_3019898950[0], view_3019898992.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3019898993 = {lastHierarchyChange: frameIndex_3019898962, logLayout: false, m_type: NTI2348810252, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3019899454(widgetsPerEditor_3019898950[0], view_3019898992.editor.id, widget_3019898993);
            }
            
            if ((i_3019898991 < (rects_3019898985).length)) {
            var colontmp__536872445 = xy_2113929252(rects_3019898985[chckIndx(i_3019898991, 0, (rects_3019898985).length - 1)]);
            var colontmp__536872446 = vec2_2130707424((rects_3019898985[chckIndx(i_3019898991, 0, (rects_3019898985).length - 1)].x + rects_3019898985[chckIndx(i_3019898991, 0, (rects_3019898985).length - 1)].w), (rects_3019898985[chckIndx(i_3019898991, 0, (rects_3019898985).length - 1)].y + rects_3019898985[chckIndx(i_3019898991, 0, (rects_3019898985).length - 1)].h));
            widget_3019898993.anchor = nimCopy(widget_3019898993.anchor, {Field0: nimCopy(null, colontmp__536872445, NTI2130706819), Field1: nimCopy(null, colontmp__536872446, NTI2130706819)}, NTI2348810251);
            layoutWidget_2348810564(widget_3019898993, viewPanel_3019898923[0].lastBounds, frameIndex_3019898962, self_3019898961.platform.layoutOptions);
            viewPanel_3019898923[0].children.push(widget_3019898993);;
            activeHEX3D_2181038101(view_3019898992.editor, (self_3019898961.currentView == i_3019898991));
            updateWidget_3036676105(view_3019898992.editor, self_3019898961, widget_3019898993, frameIndex_3019898962);
            viewPanel_3019898923[0].lastHierarchyChange = nimMax(viewPanel_3019898923[0].lastHierarchyChange, widget_3019898993.lastHierarchyChange);
            }
            
            i_536872447 = addInt(i_536872447, 1);
            if (!(((self_3019898961.views).length == L_536872448))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3019898924[0].lastHierarchyChange = nimMax(mainPanel_3019898924[0].lastHierarchyChange, viewPanel_3019898923[0].lastHierarchyChange);
    var lastPopups_3019900523 = HEX5BHEX5D_3019900499(mainStack_3019898922[0].children, HEX2EHEX2E_1056964704(1, 1));
    if (mainStack_3019898922[0].children.length < 1) { for (var i = mainStack_3019898922[0].children.length ; i < 1 ; ++i) mainStack_3019898922[0].children.push(null); }
               else { mainStack_3019898922[0].children.length = 1; };
    Label5: {
      var i_3019900560 = 0;
      var popup_3019900561 = null;
      var i_536872454 = 0;
      var L_536872455 = (self_3019898961.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872454 < L_536872455)) break Label7;
            i_3019900560 = i_536872454;
            popup_3019900561 = self_3019898961.popups[chckIndx(i_536872454, 0, (self_3019898961.popups).length - 1)];
            var widget_3019900562 = null;
            if (contains_3019899036(widgetsPerEditor_3019898950[0], popup_3019900561.id)) {
            widget_3019900562 = (Temporary8 = HEX5BHEX5D_3019899335(widgetsPerEditor_3019898950[0], popup_3019900561.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3019900562 = {backgroundColor: color_2382364744(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3019898962, logLayout: false, m_type: NTI2348810252, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3019899454(widgetsPerEditor_3019898950[0], popup_3019900561.id, widget_3019900562);
            }
            
            var colontmp__536872451 = vec2_2130707424(0.25, 0.25);
            var colontmp__536872452 = vec2_2130707424(0.75, 0.75);
            widget_3019900562.anchor = nimCopy(widget_3019900562.anchor, {Field0: nimCopy(null, colontmp__536872451, NTI2130706819), Field1: nimCopy(null, colontmp__536872452, NTI2130706819)}, NTI2348810251);
            layoutWidget_2348810564(widget_3019900562, mainStack_3019898922[0].lastBounds, frameIndex_3019898962, self_3019898961.platform.layoutOptions);
            mainStack_3019898922[0].children.push(widget_3019900562);;
            mainStack_3019898922[0].lastHierarchyChange = nimMax(mainStack_3019898922[0].lastHierarchyChange, widget_3019900562.lastHierarchyChange);
            i_536872454 = addInt(i_536872454, 1);
            if (!(((self_3019898961.popups).length == L_536872455))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3019900721 = null;
      var i_536872464 = 0;
      var L_536872465 = (lastPopups_3019900523).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536872464 < L_536872465)) break Label11;
            p_3019900721 = lastPopups_3019900523[chckIndx(i_536872464, 0, (lastPopups_3019900523).length - 1)];
            Label12: {
              if (contains_3019900722(mainStack_3019898922[0].children, p_3019900721)) {
              break Label12;
              }
              
              Label13: {
                var c_3019900758 = null;
                var i_536872461 = 0;
                var L_536872462 = (mainStack_3019898922[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536872461 < L_536872462)) break Label15;
                      c_3019900758 = mainStack_3019898922[0].children[chckIndx(i_536872461, 0, (mainStack_3019898922[0].children).length - 1)];
                      invalidate_2348810471(c_3019900758, frameIndex_3019898962, p_3019900721.lastBounds);
                      i_536872461 = addInt(i_536872461, 1);
                      if (!(((mainStack_3019898922[0].children).length == L_536872462))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536872464 = addInt(i_536872464, 1);
            if (!(((lastPopups_3019900523).length == L_536872465))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3019898898(self_3019898961, frameIndex_3019898962, commandLineWidget_3019898921[0]);
    mainPanel_3019898924[0].lastHierarchyChange = nimMax(mainPanel_3019898924[0].lastHierarchyChange, commandLineWidget_3019898921[0].lastHierarchyChange);
    mainStack_3019898922[0].lastHierarchyChange = nimMax(mainStack_3019898922[0].lastHierarchyChange, mainPanel_3019898924[0].lastHierarchyChange);
    updateInvalidationFromChildren_2348810515(mainStack_3019898922[0], -1, false);
    self_3019898961.widget.lastHierarchyChange = nimMax(self_3019898961.widget.lastHierarchyChange, commandLineWidget_3019898921[0].lastHierarchyChange);

  
}

function ms_2248146972(nanos_2248146973) {
  var result_2248146974 = 0.0;

    result_2248146974 = (nanos_2248146973 / 1000000.0);

  return result_2248146974;

}

function layoutWidgetTree_3019900777(self_3019900778, size_3019900779, frameIndex_3019900780) {
  BeforeRet: {
    self_3019900778.lastBounds = nimCopy(self_3019900778.lastBounds, rect_2113929240(vec2_2130707424(0.0, 0.0), size_3019900779), NTI2113929221);
    if ((self_3019900778.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2348810564(self_3019900778.widget, self_3019900778.lastBounds, frameIndex_3019900780, self_3019900778.platform.layoutOptions);
  };

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_872417330, format_872417331, precision_872417332, decimalSep_872417333) {
  var result_872417334 = [];

    var precision_872417335 = precision_872417332;
    if ((precision_872417335 == -1)) {
    precision_872417335 = 6;
    }
    
    var res_872417336 = null;
    switch (format_872417331) {
    case 0:
      res_872417336 = f_872417330.toString();
      break;
    case 1:
      res_872417336 = f_872417330.toFixed(precision_872417335);
      break;
    case 2:
      res_872417336 = f_872417330.toExponential(precision_872417335);
      break;
    }
    result_872417334 = nimCopy(null, cstrToNimstr(res_872417336), NTI33554449);
    if (((1.0 / f_872417330) == -Infinity)) {
    result_872417334 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_872417336) || []), NTI33554449);
    }
    
    Label1: {
      var i_872417341 = 0;
      var colontmp__536872551 = 0;
      colontmp__536872551 = (result_872417334).length;
      var i_536872552 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872552 < colontmp__536872551)) break Label3;
            i_872417341 = i_536872552;
            if ((ConstSet277[result_872417334[chckIndx(i_872417341, 0, (result_872417334).length - 1)]] != undefined)) {
            result_872417334[chckIndx(i_872417341, 0, (result_872417334).length - 1)] = decimalSep_872417333;
            }
            
            i_536872552 = addInt(i_536872552, 1);
          }
      };
    };

  return result_872417334;

}

function nsuToUpperAsciiChar(c_872415335) {
  var result_872415336 = 0;

    if ((ConstSet279[c_872415335] != undefined)) {
    result_872415336 = (c_872415335 ^ 32);
    }
    else {
      result_872415336 = c_872415335;
    }
    

  return result_872415336;

}

function nsuToUpperAsciiStr(s_872415342) {
  var result_872415343 = [];

    result_872415343 = nimCopy(null, mnewString(chckRange((s_872415342).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_872415349 = 0;
      var colontmp__536872555 = 0;
      colontmp__536872555 = subInt((s_872415342).length, 1);
      var res_536872556 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872556 <= colontmp__536872555)) break Label3;
            iHEX60gensym11_872415349 = res_536872556;
            result_872415343[chckIndx(iHEX60gensym11_872415349, 0, (result_872415343).length - 1)] = nsuToUpperAsciiChar(s_872415342[chckIndx(iHEX60gensym11_872415349, 0, (s_872415342).length - 1)]);
            res_536872556 = addInt(res_536872556, 1);
          }
      };
    };

  return result_872415343;

}

function formatValue_2348810880(result_2348810882, result_2348810882_Idx, value_2348810883, specifier_2348810884) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2348810884).length == 0)) {
    result_2348810882[result_2348810882_Idx].push.apply(result_2348810882[result_2348810882_Idx], HEX24_33557336(value_2348810883));;
    break BeforeRet;
    }
    
    var spec_2348810888 = parseStandardFormatSpecifier_738197562(specifier_2348810884, 0, false);
    var fmode_2348810889 = 0;
    switch (spec_2348810888.typ) {
    case 101:
    case 69:
      fmode_2348810889 = 2;
      break;
    case 102:
    case 70:
      fmode_2348810889 = 1;
      break;
    case 103:
    case 71:
      fmode_2348810889 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2348810888.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2348810891 = [nsuformatBiggestFloat(value_2348810883, fmode_2348810889, chckRange(spec_2348810888.precision, -1, 32), 46)];
    var sign_2348810892 = false;
    if ((0.0 <= value_2348810883)) {
    if (!((spec_2348810888.sign == 45))) {
    sign_2348810892 = true;
    if ((value_2348810883 == 0.0)) {
    if (((1.0 / value_2348810883) == Infinity)) {
    insert_33557745(f_2348810891, 0, nimCharToStr(spec_2348810888.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2348810891, 0, nimCharToStr(spec_2348810888.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2348810892 = true;
    }
    
    if (spec_2348810888.padWithZero) {
    var signStr_2348810893 = [];
    if (sign_2348810892) {
    signStr_2348810893 = nimCopy(null, nimCharToStr(f_2348810891[0][chckIndx(0, 0, (f_2348810891[0]).length - 1)]), NTI33554449);
    f_2348810891[0] = nimCopy(null, HEX5BHEX5D_872416535(f_2348810891[0], HEX2EHEX2E_1056964704(1, 1)), NTI33554449);
    }
    
    var toFill_2348810915 = subInt(subInt(spec_2348810888.minimumWidth, (f_2348810891[0]).length), (sign_2348810892 ? 1 : 0));
    if ((0 < toFill_2348810915)) {
    f_2348810891[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2348810915, 0, 2147483647)) || []).concat(f_2348810891[0] || []), NTI33554449);
    }
    
    if (sign_2348810892) {
    f_2348810891[0] = nimCopy(null, (signStr_2348810893 || []).concat(f_2348810891[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2348810888.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2348810888.align;
    }
    
    var align_2348810916 = Temporary1;
    var res_2348810917 = alignString_738197524(f_2348810891[0], spec_2348810888.minimumWidth, align_2348810916, spec_2348810888.fill);
    if ((ConstSet278[spec_2348810888.typ] != undefined)) {
    result_2348810882[result_2348810882_Idx].push.apply(result_2348810882[result_2348810882_Idx], nsuToUpperAsciiStr(res_2348810917));;
    }
    else {
    result_2348810882[result_2348810882_Idx].push.apply(result_2348810882[result_2348810882_Idx], res_2348810917);;
    }
    
  };

  
}

function requestRender_536872133() {
    
function HEX3Aanonymous_536872134(time_536872135) {
        hasRequestedRerender_536870992[0] = false;
        try {
        var layoutTime_536872141 = 0.0;
        var updateTime_536872142 = 0.0;
        var renderTime_536872143 = 0.0;
        Label2: {
          ed_536870952[0].frameTimer = nimCopy(ed_536870952[0].frameTimer, startTimer_2248146975(), NTI2248146964);
          var updateTimer_536872144 = startTimer_2248146975();
          updateWidgetTree_3019898960(ed_536870952[0], frameIndex_536870991[0]);
          updateTime_536872142 = ms_2248146972(elapsed_2248146986(updateTimer_536872144));
          var layoutTimer_536872145 = startTimer_2248146975();
          layoutWidgetTree_3019900777(ed_536870952[0], size_2332033136(rend_536870951[0]), frameIndex_536870991[0]);
          layoutTime_536872141 = ms_2248146972(elapsed_2248146986(layoutTimer_536872145));
          var renderTimer_536872146 = startTimer_2248146975();
          render_2332033127(rend_536870951[0], ed_536870952[0].widget, frameIndex_536870991[0]);
          renderTime_536872143 = ms_2248146972(elapsed_2248146986(renderTimer_536872146));
          frameTime_536870990[0] = ms_2248146972(elapsed_2248146986(ed_536870952[0].frameTimer));
        };
        var fmtRes_536872151 = [mnewString(0)];
        fmtRes_536872151[0].push.apply(fmtRes_536872151[0], [70,114,97,109,101,58,32]);;
        formatValue_2348810880(fmtRes_536872151, 0, frameTime_536870990[0], [62,53,46,50]);
        fmtRes_536872151[0].push.apply(fmtRes_536872151[0], [109,115,32,40,117,58,32]);;
        formatValue_2348810880(fmtRes_536872151, 0, updateTime_536872142, [62,53,46,50]);
        fmtRes_536872151[0].push.apply(fmtRes_536872151[0], [109,115,44,32,108,58,32]);;
        formatValue_2348810880(fmtRes_536872151, 0, layoutTime_536872141, [62,53,46,50]);
        fmtRes_536872151[0].push.apply(fmtRes_536872151[0], [109,115,44,32,114,58,32]);;
        formatValue_2348810880(fmtRes_536872151, 0, renderTime_536872143, [62,53,46,50]);
        fmtRes_536872151[0].push.apply(fmtRes_536872151[0], [109,115,41]);;
        log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_536872151[0], NTI33554449)]);
        } finally {
        frameIndex_536870991[0] = addInt(frameIndex_536870991[0], 1);
        }

      
    }

  BeforeRet: {
    if (hasRequestedRerender_536870992[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536872134);
  };

  
}

function scriptSetOptionString_1325412391(path_1325412392, value_1325412393) {
  BeforeRet: {
    Label1: {
      if ((gEditor_1325400204[0] == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym577_1325412400 = nsuSplitString(path_1325412392, [46], -1);
      var nodeHEX60gensym577_1325412401 = gEditor_1325400204[0].options;
      Label2: {
        var keyHEX60gensym577_1325412420 = [];
        var colontmp__536872560 = [];
        colontmp__536872560 = HEX5BHEX5D_2634033769(pathItemsHEX60gensym577_1325412400, HEX2EHEX2E_1056964704(0, 2));
        var i_536872561 = 0;
        var L_536872562 = (colontmp__536872560).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872561 < L_536872562)) break Label4;
              keyHEX60gensym577_1325412420 = colontmp__536872560[chckIndx(i_536872561, 0, (colontmp__536872560).length - 1)];
              if (!((nodeHEX60gensym577_1325412401.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1660947644(nodeHEX60gensym577_1325412401, keyHEX60gensym577_1325412420))) {
              HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym577_1325412401, keyHEX60gensym577_1325412420, newJObject_1660944483());
              }
              
              nodeHEX60gensym577_1325412401 = HEX5BHEX5D_1660947469(nodeHEX60gensym577_1325412401, keyHEX60gensym577_1325412420);
              i_536872561 = addInt(i_536872561, 1);
              if (!(((colontmp__536872560).length == L_536872562))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym577_1325412401 == null) || !((nodeHEX60gensym577_1325412401.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym577_1325412401, HEX5BHEX5D_2600469248(pathItemsHEX60gensym577_1325412400, 1), newJString_1660944426(value_1325412393));
    };
  };

  
}

function scriptSetOptionBool_1325412318(path_1325412319, value_1325412320) {
  BeforeRet: {
    Label1: {
      if ((gEditor_1325400204[0] == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym566_1325412327 = nsuSplitString(path_1325412319, [46], -1);
      var nodeHEX60gensym566_1325412328 = gEditor_1325400204[0].options;
      Label2: {
        var keyHEX60gensym566_1325412347 = [];
        var colontmp__536872566 = [];
        colontmp__536872566 = HEX5BHEX5D_2634033769(pathItemsHEX60gensym566_1325412327, HEX2EHEX2E_1056964704(0, 2));
        var i_536872567 = 0;
        var L_536872568 = (colontmp__536872566).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872567 < L_536872568)) break Label4;
              keyHEX60gensym566_1325412347 = colontmp__536872566[chckIndx(i_536872567, 0, (colontmp__536872566).length - 1)];
              if (!((nodeHEX60gensym566_1325412328.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1660947644(nodeHEX60gensym566_1325412328, keyHEX60gensym566_1325412347))) {
              HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym566_1325412328, keyHEX60gensym566_1325412347, newJObject_1660944483());
              }
              
              nodeHEX60gensym566_1325412328 = HEX5BHEX5D_1660947469(nodeHEX60gensym566_1325412328, keyHEX60gensym566_1325412347);
              i_536872567 = addInt(i_536872567, 1);
              if (!(((colontmp__536872566).length == L_536872568))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym566_1325412328 == null) || !((nodeHEX60gensym566_1325412328.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1660946335(nodeHEX60gensym566_1325412328, HEX5BHEX5D_2600469248(pathItemsHEX60gensym566_1325412327, 1), newJBool_1660944478(value_1325412320));
    };
  };

  
}

function scriptAddCommand_1325411027(context_1325411028, keys_1325411029, action_1325411030, arg_1325411031) {
    var Temporary1;

  BeforeRet: {
    if ((gEditor_1325400204[0] == null)) {
    break BeforeRet;
    }
    
    if (((arg_1325411031).length == 0)) {
    Temporary1 = action_1325411030;
    }
    else {
    Temporary1 = (action_1325411030 || []).concat([32] || [],arg_1325411031 || []);
    }
    
    var command_1325411035 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2080375164(getEventHandlerConfig_1325403449(gEditor_1325400204[0], context_1325411028), keys_1325411029, command_1325411035);
  };

  
}

function HEX25_1660946224(n_1660946225) {
    var Temporary1;

  var result_1660946226 = null;

    if (!((n_1660946225 == n_1660946225))) {
    Temporary1 = newJString_1660944426([110,97,110]);
    }
    else {
    if ((n_1660946225 == Infinity)) {
    Temporary1 = newJString_1660944426([105,110,102]);
    }
    else {
    if ((n_1660946225 == -Infinity)) {
    Temporary1 = newJString_1660944426([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1660946225, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1660946226 = Temporary1;

  return result_1660946226;

}

function toJson_1325407045(a_1325407047, opt_1325407048) {
  var result_1325407049 = null;

    result_1325407049 = HEX25_1660946224(a_1325407047);

  return result_1325407049;

}

function toJson_1325407103(a_1325407105, opt_1325407106) {
  var result_1325407107 = null;

    result_1325407107 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_1325407107, [102,105,108,101,110,97,109,101], toJson_1845494346(a_1325407105.filename, opt_1325407106));
    HEX5BHEX5DHEX3D_1660946335(result_1325407107, [97,115,116], toJson_2634033362(a_1325407105.ast, opt_1325407106));
    HEX5BHEX5DHEX3D_1660946335(result_1325407107, [108,97,110,103,117,97,103,101,73,68], toJson_1845494346(a_1325407105.languageID, opt_1325407106));

  return result_1325407107;

}

function toJson_1325407072(a_1325407074, opt_1325407075) {
  var result_1325407076 = null;

    result_1325407076 = newJArray_1660944514();
    Label1: {
      var ai_1325407102 = ({filename: [], ast: false, languageID: []});
      var i_536872588 = 0;
      var L_536872589 = (a_1325407074).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872588 < L_536872589)) break Label3;
            ai_1325407102 = a_1325407074[chckIndx(i_536872588, 0, (a_1325407074).length - 1)];
            add_1660944622(result_1325407076, toJson_1325407103(ai_1325407102, opt_1325407075));
            i_536872588 = addInt(i_536872588, 1);
            if (!(((a_1325407074).length == L_536872589))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1325407076;

}

function toJson_1325407028(a_1325407030, opt_1325407031) {
  var result_1325407032 = null;

    result_1325407032 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [116,104,101,109,101], toJson_1845494346(a_1325407030.theme, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [102,111,110,116,83,105,122,101], toJson_1325407045(a_1325407030.fontSize, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [102,111,110,116,82,101,103,117,108,97,114], toJson_1845494346(a_1325407030.fontRegular, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [102,111,110,116,66,111,108,100], toJson_1845494346(a_1325407030.fontBold, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [102,111,110,116,73,116,97,108,105,99], toJson_1845494346(a_1325407030.fontItalic, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1845494346(a_1325407030.fontBoldItalic, opt_1325407031));
    HEX5BHEX5DHEX3D_1660946335(result_1325407032, [111,112,101,110,69,100,105,116,111,114,115], toJson_1325407072(a_1325407030.openEditors, opt_1325407031));

  return result_1325407032;

}

function shutdown_1325406981(self_1325406982) {
    var state_1325406983 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
    state_1325406983.theme = nimCopy(null, self_1325406982.theme.path, NTI33554449);
    state_1325406983.fontSize = fontSize_2332033160(self_1325406982.platform);
    state_1325406983.fontRegular = nimCopy(null, self_1325406982.fontRegular, NTI33554449);
    state_1325406983.fontBold = nimCopy(null, self_1325406982.fontBold, NTI33554449);
    state_1325406983.fontItalic = nimCopy(null, self_1325406982.fontItalic, NTI33554449);
    state_1325406983.fontBoldItalic = nimCopy(null, self_1325406982.fontBoldItalic, NTI33554449);
    Label1: {
      var view_1325407005 = null;
      var i_536872572 = 0;
      var L_536872573 = (self_1325406982.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872572 < L_536872573)) break Label3;
            view_1325407005 = self_1325406982.views[chckIndx(i_536872572, 0, (self_1325406982.views).length - 1)];
            if (isObj(view_1325407005.document.m_type, NTI2634023047)) {
            var textDocument_1325407012 = view_1325407005.document;
            state_1325406983.openEditors.push({filename: nimCopy(null, textDocument_1325407012.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1325407012.languageId, NTI33554449)});;
            }
            else {
            if (isObj(view_1325407005.document.m_type, NTI2734687752)) {
            var astDocument_1325407023 = view_1325407005.document;
            state_1325406983.openEditors.push({filename: nimCopy(null, astDocument_1325407023.filename, NTI33554449), ast: true, languageID: [97,115,116]});;
            }
            }
            i_536872572 = addInt(i_536872572, 1);
            if (!(((self_1325406982.views).length == L_536872573))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1325407146 = toJson_1325407028(state_1325406983, initToJsonOptions_1845493794());
    Label4: {
      var editor_1325407368 = null;
      var L_536872580 = len_1325407195(self_1325406982.editors);
      Label5: {
        var h_536872582 = 0;
        var colontmp__536872583 = 0;
        colontmp__536872583 = (self_1325406982.editors.data).length - 1;
        var res_536872584 = 0;
        Label6: {
            Label7: while (true) {
            if (!(res_536872584 <= colontmp__536872583)) break Label7;
              h_536872582 = res_536872584;
              if (isFilled_1342177312(self_1325406982.editors.data[chckIndx(h_536872582, 0, (self_1325406982.editors.data).length - 1)].Field0)) {
              editor_1325407368 = self_1325406982.editors.data[chckIndx(h_536872582, 0, (self_1325406982.editors.data).length - 1)]["Field2"];
              shutdown_2181038109(editor_1325407368);
              if (!((len_1325407195(self_1325406982.editors) == L_536872580))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872584 = addInt(res_536872584, 1);
            }
        };
      };
    };

  
}

function HEX3Aanonymous_536872201(event_536872204) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872224(event_536872227) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872247(event_536872250) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872270(event_536872273) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872293(event_536872296) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872316(event_536872319) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872339(event_536872342) {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872362() {
    requestRender_536872133();

  
}

function HEX3Aanonymous_536872385() {
    requestRender_536872133();

  
}
var _ = subscribe_1325405379(rend_536870951[0].onKeyPress, HEX3Aanonymous_536872201);
var _ = subscribe_1325405379(rend_536870951[0].onKeyRelease, HEX3Aanonymous_536872224);
var _ = subscribe_1325405379(rend_536870951[0].onRune, HEX3Aanonymous_536872247);
var _ = subscribe_1325405471(rend_536870951[0].onMousePress, HEX3Aanonymous_536872270);
var _ = subscribe_1325405471(rend_536870951[0].onMouseRelease, HEX3Aanonymous_536872293);
var _ = subscribe_1325405540(rend_536870951[0].onMouseMove, HEX3Aanonymous_536872316);
var _ = subscribe_1325405586(rend_536870951[0].onScroll, HEX3Aanonymous_536872339);
var _ = subscribe_1325405632(rend_536870951[0].onCloseRequested, HEX3Aanonymous_536872362);
var _ = subscribe_1325405632(rend_536870951[0].onResized, HEX3Aanonymous_536872385);
Label277: {
  setHandleInputs_1325407611(ed_536870952[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1325412391([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1325412318([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,76,69,70,84,62], [109,111,118,101,45,99,117,114,115,111,114,45,99,111,108,117,109,110,32,45,49], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,82,73,71,72,84,62], [109,111,118,101,45,99,117,114,115,111,114,45,99,111,108,117,109,110,32,49], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,100,62], [100,101,108,101,116,101,45,109,111,118,101,32,34,108,105,110,101,45,110,101,120,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,76,69,70,84,62], [109,111,118,101,45,102,105,114,115,116,32,34,119,111,114,100,45,108,105,110,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,82,73,71,72,84,62], [109,111,118,101,45,108,97,115,116,32,34,119,111,114,100,45,108,105,110,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,72,79,77,69,62], [109,111,118,101,45,102,105,114,115,116,32,34,108,105,110,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,69,78,68,62], [109,111,118,101,45,108,97,115,116,32,34,108,105,110,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,85,80,62], [115,99,114,111,108,108,45,116,101,120,116,32,50,48], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,68,79,87,78,62], [115,99,114,111,108,108,45,116,101,120,116,32,45,50,48], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,83,45,76,69,70,84,62], [109,111,118,101,45,102,105,114,115,116,32,34,119,111,114,100,45,108,105,110,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,83,45,82,73,71,72,84,62], [109,111,118,101,45,108,97,115,116,32,34,119,111,114,100,45,108,105,110,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,85,80,62], [109,111,118,101,45,99,117,114,115,111,114,45,108,105,110,101,32,45,49], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,68,79,87,78,62], [109,111,118,101,45,99,117,114,115,111,114,45,108,105,110,101,32,49], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,72,79,77,69,62], [109,111,118,101,45,102,105,114,115,116,32,34,102,105,108,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,69,78,68,62], [109,111,118,101,45,108,97,115,116,32,34,102,105,108,101,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,83,45,72,79,77,69,62], [109,111,118,101,45,102,105,114,115,116,32,34,102,105,108,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,83,45,69,78,68,62], [109,111,118,101,45,108,97,115,116,32,34,102,105,108,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,76,69,70,84,62], [109,111,118,101,45,99,117,114,115,111,114,45,99,111,108,117,109,110,32,45,49,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,82,73,71,72,84,62], [109,111,118,101,45,99,117,114,115,111,114,45,99,111,108,117,109,110,32,49,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,85,80,62], [109,111,118,101,45,99,117,114,115,111,114,45,108,105,110,101,32,45,49,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,68,79,87,78,62], [109,111,118,101,45,99,117,114,115,111,114,45,108,105,110,101,32,49,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,72,79,77,69,62], [109,111,118,101,45,102,105,114,115,116,32,34,108,105,110,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,45,69,78,68,62], [109,111,118,101,45,108,97,115,116,32,34,108,105,110,101,34,32,34,108,97,115,116,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,65,45,100,62], [100,117,112,108,105,99,97,116,101,45,108,97,115,116,45,115,101,108,101,99,116,105,111,110], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,65,45,85,80,62], [97,100,100,45,99,117,114,115,111,114,45,97,98,111,118,101], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,65,45,68,79,87,78,62], [97,100,100,45,99,117,114,115,111,114,45,98,101,108,111,119], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,66,65,67,75,83,80,65,67,69,62], [100,101,108,101,116,101,45,108,101,102,116], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,68,69,76,69,84,69,62], [100,101,108,101,116,101,45,114,105,103,104,116], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,69,78,84,69,82,62], [105,110,115,101,114,116,45,116,101,120,116,32,34,10,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,83,80,65,67,69,62], [105,110,115,101,114,116,45,116,101,120,116,32,34,32,34], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,108,62], [115,101,108,101,99,116,45,108,105,110,101,45,99,117,114,114,101,110,116], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,65,45,85,80,62], [115,101,108,101,99,116,45,112,97,114,101,110,116,45,99,117,114,114,101,110,116,45,116,115], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,114,62], [115,101,108,101,99,116,45,112,114,101,118], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,116,62], [115,101,108,101,99,116,45,110,101,120,116], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,110,62], [105,110,118,101,114,116,45,115,101,108,101,99,116,105,111,110], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,121,62], [117,110,100,111], []);
  scriptAddCommand_1325411027([101,100,105,116,111,114,46,116,101,120,116], [60,67,45,122,62], [114,101,100,111], []);
};
requestRender_536872133();
shutdown_1325406981(ed_536870952[0]);
deinit_2332033143(rend_536870951[0]);

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_721420369(self_721420371) {
  var result_721420372 = false;

    result_721420372 = !((self_721420371.val == null));

  return result_721420372;

}

function isNone_721420397(self_721420399) {
  var result_721420400 = false;

    result_721420400 = (self_721420399.val == null);

  return result_721420400;

}

function get_721420389(self_721420391) {
  var result_721420392 = null;

    if (isNone_721420397(self_721420391)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_721420392 = self_721420391["val"];

  return result_721420392;

}

function isSome_721420423(self_721420425) {
  var result_721420426 = false;

    result_721420426 = !((self_721420425.val == null));

  return result_721420426;

}

function isNone_721420451(self_721420453) {
  var result_721420454 = false;

    result_721420454 = (self_721420453.val == null);

  return result_721420454;

}

function get_721420443(self_721420445) {
  var result_721420446 = null;

    if (isNone_721420451(self_721420445)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_721420446 = self_721420445["val"];

  return result_721420446;

}

function log_721420358(self_721420359, level_721420360, args_721420361) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_721420364 = nimCopy(null, self_721420359.fileLogger, NTI721420313);
      if (!isSome_721420369(oHEX60gensym2_721420364)) Temporary1 = false; else {        var l_721420415 = get_721420389(oHEX60gensym2_721420364);
        Temporary1 = true;      }    if (Temporary1) {
    log_1191182436(l_721420415, level_721420360, args_721420361);
    }
    
      var oHEX60gensym4_721420418 = nimCopy(null, self_721420359.consoleLogger, NTI721420300);
      if (!isSome_721420423(oHEX60gensym4_721420418)) Temporary2 = false; else {        var l_721420469 = get_721420443(oHEX60gensym4_721420418);
        Temporary2 = true;      }    if (Temporary2) {
    log_1191182436(l_721420469, level_721420360, args_721420361);
    }
    

  
}

function nsuToLowerAsciiChar(c_872415316) {
  var result_872415317 = 0;

    if ((ConstSet281[c_872415316] != undefined)) {
    result_872415317 = (c_872415316 ^ 32);
    }
    else {
      result_872415317 = c_872415316;
    }
    

  return result_872415317;

}

function nsuIntToStr(x_872416076, minchars_872416077) {
  var result_872416078 = [];

    result_872416078 = nimCopy(null, HEX24_369098760(absInt(x_872416076)), NTI33554449);
    Label1: {
      var i_872416083 = 0;
      var colontmp__536872600 = 0;
      colontmp__536872600 = subInt(minchars_872416077, (result_872416078).length);
      var res_536872601 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872601 <= colontmp__536872600)) break Label3;
            i_872416083 = res_536872601;
            result_872416078 = nimCopy(null, [48].concat(result_872416078 || []), NTI33554449);
            res_536872601 = addInt(res_536872601, 1);
          }
      };
    };
    if ((x_872416076 < 0)) {
    result_872416078 = nimCopy(null, [45].concat(result_872416078 || []), NTI33554449);
    }
    

  return result_872416078;

}

function monthday_1207960780(dt_1207960781) {
  var result_1207960782 = 0;

    if (!(!((dt_1207960781.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1207960782 = dt_1207960781.monthdayZero;

  return result_1207960782;

}

function ntgetDateStr(dt_1207961131) {
  var result_1207961132 = [];

    if (!(!((dt_1207961131.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1207961132 = nimCopy(null, (HEX24_369098760(dt_1207961131.year) || []).concat([45],nsuIntToStr(dt_1207961131.monthZero, 2) || [],[45],nsuIntToStr(monthday_1207960780(dt_1207961131), 2) || []), NTI33554449);

  return result_1207961132;

}

function HEX2B_1207959570(a_1207959571, b_1207959572) {
  var result_1207959573 = 0;

    result_1207959573 = (a_1207959571 + b_1207959572);

  return result_1207959573;

}

function HEX2A_1207959562(a_1207959563, b_1207959564) {
  var result_1207959565 = 0;

    result_1207959565 = (a_1207959563 * b_1207959564);

  return result_1207959565;

}

function convert_1207960019(unitFrom_1207960021, unitTo_1207960022, quantity_1207960023) {
    var Temporary1;

  var result_1207960024 = 0;

    if ((unitFrom_1207960021 < unitTo_1207960022)) {
    Temporary1 = divInt(quantity_1207960023, divInt(unitWeights_1207959702[chckIndx(unitTo_1207960022, 0, (unitWeights_1207959702).length - 1)], unitWeights_1207959702[chckIndx(unitFrom_1207960021, 0, (unitWeights_1207959702).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1207959562(divInt(unitWeights_1207959702[chckIndx(unitFrom_1207960021, 0, (unitWeights_1207959702).length - 1)], unitWeights_1207959702[chckIndx(unitTo_1207960022, 0, (unitWeights_1207959702).length - 1)]), quantity_1207960023);
    }
    
    result_1207960024 = Temporary1;

  return result_1207960024;

}

function convert_1207960086(unitFrom_1207960088, unitTo_1207960089, quantity_1207960090) {
    var Temporary1;

  var result_1207960091 = 0;

    if ((unitFrom_1207960088 < unitTo_1207960089)) {
    Temporary1 = chckRange(divInt(quantity_1207960090, divInt(unitWeights_1207959702[chckIndx(unitTo_1207960089, 0, (unitWeights_1207959702).length - 1)], unitWeights_1207959702[chckIndx(unitFrom_1207960088, 0, (unitWeights_1207959702).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1207959562(divInt(unitWeights_1207959702[chckIndx(unitFrom_1207960088, 0, (unitWeights_1207959702).length - 1)], unitWeights_1207959702[chckIndx(unitTo_1207960089, 0, (unitWeights_1207959702).length - 1)]), quantity_1207960090), -2147483648, 2147483647);
    }
    
    result_1207960091 = Temporary1;

  return result_1207960091;

}

function normalize_1207960656(seconds_1207960658, nanoseconds_1207960659) {
  var result_1207960660 = ({seconds: 0, nanosecond: 0});

    result_1207960660.seconds = HEX2B_1207959570(seconds_1207960658, convert_1207960019(0, 3, nanoseconds_1207960659));
    var nanosecond_1207960671 = modInt(nanoseconds_1207960659, convert_1207960086(3, 0, 1));
    if ((nanosecond_1207960671 < 0)) {
    nanosecond_1207960671 = addInt(nanosecond_1207960671, convert_1207960086(3, 0, 1));
    result_1207960660.seconds = subInt(result_1207960660.seconds, 1);
    }
    
    result_1207960660.nanosecond = chckRange(chckRange(nanosecond_1207960671, -2147483648, 2147483647), 0, 999999999);

  return result_1207960660;

}

function HEX2D_1207959578(a_1207959579, b_1207959580) {
  var result_1207959581 = 0;

    result_1207959581 = (a_1207959579 - b_1207959580);

  return result_1207959581;

}

function HEX2D_1207959582(a_1207959583, b_1207959584) {
  var result_1207959585 = 0;

    result_1207959585 = (a_1207959583 - b_1207959584);

  return result_1207959585;

}

function ntSubTime(a_1207960686, b_1207960687) {
  var result_1207960688 = ({seconds: 0, nanosecond: 0});

    result_1207960688 = nimCopy(result_1207960688, normalize_1207960656(HEX2D_1207959578(a_1207960686.seconds, b_1207960687.seconds), HEX2D_1207959582(a_1207960686.nanosecond, b_1207960687.nanosecond)), NTI1207959584);

  return result_1207960688;

}

function normalize_1207960076(seconds_1207960078, nanoseconds_1207960079) {
  var result_1207960080 = ({seconds: 0, nanosecond: 0});

    result_1207960080.seconds = HEX2B_1207959570(seconds_1207960078, convert_1207960019(0, 3, nanoseconds_1207960079));
    var nanosecond_1207960096 = modInt(nanoseconds_1207960079, convert_1207960086(3, 0, 1));
    if ((nanosecond_1207960096 < 0)) {
    nanosecond_1207960096 = addInt(nanosecond_1207960096, convert_1207960086(3, 0, 1));
    result_1207960080.seconds = subInt(result_1207960080.seconds, 1);
    }
    
    result_1207960080.nanosecond = chckRange(chckRange(nanosecond_1207960096, -2147483648, 2147483647), 0, 999999999);

  return result_1207960080;

}

function initDuration_1207960009(nanoseconds_1207960010, microseconds_1207960011, milliseconds_1207960012, seconds_1207960013, minutes_1207960014, hours_1207960015, days_1207960016, weeks_1207960017) {
  var result_1207960018 = ({seconds: 0, nanosecond: 0});

    var seconds_1207960064 = HEX2B_1207959570(HEX2B_1207959570(HEX2B_1207959570(HEX2B_1207959570(HEX2B_1207959570(HEX2B_1207959570(HEX2B_1207959570(convert_1207960019(7, 3, weeks_1207960017), convert_1207960019(6, 3, days_1207960016)), convert_1207960019(4, 3, minutes_1207960014)), convert_1207960019(5, 3, hours_1207960015)), convert_1207960019(3, 3, seconds_1207960013)), convert_1207960019(2, 3, milliseconds_1207960012)), convert_1207960019(1, 3, microseconds_1207960011)), convert_1207960019(0, 3, nanoseconds_1207960010));
    var nanoseconds_1207960075 = chckRange(HEX2B_1207959570(HEX2B_1207959570(convert_1207960019(2, 0, modInt(milliseconds_1207960012, 1000)), convert_1207960019(1, 0, modInt(microseconds_1207960011, 1000000))), modInt(nanoseconds_1207960010, 1000000000)), -2147483648, 2147483647);
    result_1207960018 = nimCopy(result_1207960018, normalize_1207960076(seconds_1207960064, nanoseconds_1207960075), NTI1207959586);

  return result_1207960018;

}

function floorDiv_1207959850(x_1207959852, y_1207959853) {
  var result_1207959854 = 0;

    result_1207959854 = Math.trunc(x_1207959852 / y_1207959853);
    var r_1207959855 = Math.trunc(x_1207959852 % y_1207959853);
    if ((((0 < r_1207959855) && (y_1207959853 < 0)) || ((r_1207959855 < 0) && (0 < y_1207959853)))) {
    result_1207959854 -= 1;
    }
    

  return result_1207959854;

}

function inc_1207959594(a_1207959595, a_1207959595_Idx, b_1207959596) {
    a_1207959595[a_1207959595_Idx] += b_1207959596;

  
}

function fromEpochDay_1207959783(epochday_1207959784) {
    var Temporary1;
    var Temporary2;

  var result_1207959788 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1207959789 = [epochday_1207959784];
    inc_1207959594(z_1207959789, 0, 719468);
    if ((0 <= z_1207959789[0])) {
    Temporary1 = z_1207959789[0];
    }
    else {
    Temporary1 = HEX2D_1207959578(z_1207959789[0], 146096);
    }
    
    var era_1207959790 = divInt(Temporary1, 146097);
    var doe_1207959791 = HEX2D_1207959578(z_1207959789[0], HEX2A_1207959562(era_1207959790, 146097));
    var yoe_1207959792 = divInt(HEX2D_1207959578(HEX2B_1207959570(HEX2D_1207959578(doe_1207959791, divInt(doe_1207959791, 1460)), divInt(doe_1207959791, 36524)), divInt(doe_1207959791, 146096)), 365);
    var y_1207959793 = HEX2B_1207959570(yoe_1207959792, HEX2A_1207959562(era_1207959790, 400));
    var doy_1207959794 = HEX2D_1207959578(doe_1207959791, HEX2D_1207959578(HEX2B_1207959570(HEX2A_1207959562(365, yoe_1207959792), divInt(yoe_1207959792, 4)), divInt(yoe_1207959792, 100)));
    var mp_1207959795 = divInt(HEX2B_1207959570(HEX2A_1207959562(5, doy_1207959794), 2), 153);
    var d_1207959796 = HEX2B_1207959570(HEX2D_1207959578(doy_1207959794, divInt(HEX2B_1207959570(HEX2A_1207959562(153, mp_1207959795), 2), 5)), 1);
    if ((mp_1207959795 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1207959797 = HEX2B_1207959570(mp_1207959795, Temporary2);
    var colontmp__536872604 = chckRange(d_1207959796, 1, 31);
    var colontmp__536872605 = chckRange(m_1207959797, 1, 12);
    var colontmp__536872606 = chckRange(HEX2B_1207959570(y_1207959793, ((m_1207959797 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1207959788 = nimCopy(result_1207959788, {Field0: nimCopy(null, colontmp__536872604, NTI1207959576), Field1: colontmp__536872605, Field2: colontmp__536872606}, NTI1207959748);
    break BeforeRet;
  };

  return result_1207959788;

}

function isLeapYear_1207959725(year_1207959726) {
  var result_1207959727 = false;

    result_1207959727 = ((modInt(year_1207959726, 4) == 0) && (!((modInt(year_1207959726, 100) == 0)) || (modInt(year_1207959726, 400) == 0)));

  return result_1207959727;

}

function getDaysInMonth_1207959728(month_1207959729, year_1207959730) {
      var Temporary1;

  var result_1207959731 = 0;

    switch (month_1207959729) {
    case 2:
      if (isLeapYear_1207959725(year_1207959730)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1207959731 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1207959731 = 30;
      break;
    default: 
      result_1207959731 = 31;
      break;
    }

  return result_1207959731;

}

function assertValidDate_1207959732(monthday_1207959733, month_1207959734, year_1207959735) {
    if (!((monthday_1207959733 <= getDaysInMonth_1207959728(month_1207959734, year_1207959735)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1207959735) || [],[45] || [],nsuIntToStr(month_1207959734, 2) || [],[45] || [],HEX24_369098760(monthday_1207959733) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1207959566(a_1207959567, b_1207959568) {
  var result_1207959569 = 0;

    result_1207959569 = (a_1207959567 * b_1207959568);

  return result_1207959569;

}

function HEX2B_1207959574(a_1207959575, b_1207959576) {
  var result_1207959577 = 0;

    result_1207959577 = (a_1207959575 + b_1207959576);

  return result_1207959577;

}

function toEpochDay_1207959754(monthday_1207959755, month_1207959756, year_1207959757) {
    var Temporary1;
    var Temporary2;

  var result_1207959758 = 0;

  BeforeRet: {
    assertValidDate_1207959732(monthday_1207959755, month_1207959756, year_1207959757);
    var colontmp__536872607 = {Field0: year_1207959757, Field1: month_1207959756, Field2: monthday_1207959755};
    var y_1207959762 = colontmp__536872607["Field0"];
    var m_1207959763 = colontmp__536872607["Field1"];
    var d_1207959764 = colontmp__536872607["Field2"];
    if ((m_1207959763 <= 2)) {
    y_1207959762 = subInt(y_1207959762, 1);
    }
    
    if ((0 <= y_1207959762)) {
    Temporary1 = y_1207959762;
    }
    else {
    Temporary1 = HEX2D_1207959582(y_1207959762, 399);
    }
    
    var era_1207959770 = divInt(Temporary1, 400);
    var yoe_1207959771 = HEX2D_1207959582(y_1207959762, HEX2A_1207959566(era_1207959770, 400));
    if ((2 < m_1207959763)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1207959772 = HEX2D_1207959582(HEX2B_1207959574(divInt(HEX2B_1207959574(HEX2A_1207959566(153, HEX2B_1207959574(m_1207959763, Temporary2)), 2), 5), d_1207959764), 1);
    var doe_1207959773 = HEX2B_1207959574(HEX2D_1207959582(HEX2B_1207959574(HEX2A_1207959566(yoe_1207959771, 365), divInt(yoe_1207959771, 4)), divInt(yoe_1207959771, 100)), doy_1207959772);
    result_1207959758 = HEX2D_1207959582(HEX2B_1207959574(HEX2A_1207959566(era_1207959770, 146097), doe_1207959773), 719468);
    break BeforeRet;
  };

  return result_1207959758;

}

function getDayOfWeek_1207959844(monthday_1207959845, month_1207959846, year_1207959847) {
    var Temporary1;

  var result_1207959848 = 0;

    assertValidDate_1207959732(monthday_1207959845, month_1207959846, year_1207959847);
    var days_1207959849 = HEX2D_1207959578(toEpochDay_1207959754(monthday_1207959845, month_1207959846, year_1207959847), 3);
    var weeks_1207959861 = floorDiv_1207959850(days_1207959849, 7);
    var wd_1207959862 = HEX2D_1207959578(days_1207959849, HEX2A_1207959562(weeks_1207959861, 7));
    if ((wd_1207959862 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1207959578(wd_1207959862, 1), 0, 6);
    }
    
    result_1207959848 = Temporary1;

  return result_1207959848;

}

function getDayOfYear_1207959819(monthday_1207959820, month_1207959821, year_1207959822) {
  var result_1207959823 = 0;

    assertValidDate_1207959732(monthday_1207959820, month_1207959821, year_1207959822);
    if (isLeapYear_1207959725(year_1207959822)) {
    result_1207959823 = chckRange(HEX2D_1207959582(HEX2B_1207959574(daysUntilMonthLeap_1207959825[chckIndx(month_1207959821, 1, (daysUntilMonthLeap_1207959825).length + (1) - 1) - (1)], monthday_1207959820), 1), 0, 365);
    }
    else {
      result_1207959823 = chckRange(HEX2D_1207959582(HEX2B_1207959574(daysUntilMonth_1207959824[chckIndx(month_1207959821, 1, (daysUntilMonth_1207959824).length + (1) - 1) - (1)], monthday_1207959820), 1), 0, 365);
    }
    

  return result_1207959823;

}

function initDateTime_1207960887(zt_1207960888, zone_1207960889) {
  var result_1207960890 = ({m_type: NTI1207959585, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1207960891 = ntSubTime(zt_1207960888.time, initDuration_1207960009(0, 0, 0, zt_1207960888.utcOffset, 0, 0, 0, 0));
    var s_1207960892 = adjTime_1207960891.seconds;
    var epochday_1207960897 = floorDiv_1207959850(s_1207960892, 86400);
    var rem_1207960898 = HEX2D_1207959578(s_1207960892, HEX2A_1207959562(epochday_1207960897, 86400));
    var hour_1207960899 = divInt(rem_1207960898, 3600);
    rem_1207960898 = HEX2D_1207959578(rem_1207960898, HEX2A_1207959562(hour_1207960899, 3600));
    var minute_1207960900 = divInt(rem_1207960898, 60);
    rem_1207960898 = HEX2D_1207959578(rem_1207960898, HEX2A_1207959562(minute_1207960900, 60));
    var second_1207960901 = rem_1207960898;
    var colontmp__536872603 = fromEpochDay_1207959783(epochday_1207960897);
    var d_1207960902 = colontmp__536872603["Field0"];
    var m_1207960903 = colontmp__536872603["Field1"];
    var y_1207960904 = colontmp__536872603["Field2"];
    result_1207960890 = nimCopy(result_1207960890, {year: y_1207960904, monthZero: ((m_1207960903) | 0), monthdayZero: d_1207960902, hour: nimCopy(null, chckRange(hour_1207960899, 0, 23), NTI1207959577), minute: nimCopy(null, chckRange(minute_1207960900, 0, 59), NTI1207959578), second: nimCopy(null, chckRange(second_1207960901, 0, 60), NTI1207959579), nanosecond: nimCopy(null, zt_1207960888.time.nanosecond, NTI1207959581), weekday: getDayOfWeek_1207959844(d_1207960902, m_1207960903, y_1207960904), yearday: getDayOfYear_1207959819(d_1207960902, m_1207960903, y_1207960904), isDst: zt_1207960888.isDst, timezone: zone_1207960889, utcOffset: zt_1207960888.utcOffset, m_type: NTI1207959585}, NTI1207959585);

  return result_1207960890;

}

function zonedTimeFromTime_1207960944(zone_1207960945, time_1207960946) {
  var result_1207960947 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1207960947 = nimCopy(result_1207960947, zone_1207960945.zonedTimeFromTimeImpl(time_1207960946), NTI1207959591);

  return result_1207960947;

}

function inZone_1207960984(time_1207960985, zone_1207960986) {
  var result_1207960987 = ({m_type: NTI1207959585, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1207960987 = nimCopy(result_1207960987, initDateTime_1207960887(zonedTimeFromTime_1207960944(zone_1207960986, time_1207960985), zone_1207960986), NTI1207959585);

  return result_1207960987;

}

function newTimezone_1207960914(name_1207960915, zonedTimeFromTimeImpl_1207960918, zonedTimeFromAdjTimeImpl_1207960921) {
  var result_1207960922 = null;

    result_1207960922 = {name: nimCopy(null, name_1207960915, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1207960918, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1207960921};

  return result_1207960922;

}

function localZonedTimeFromTime_1207961002(time_1207961003) {
  var result_1207961004 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1207961008 = new Date(HEX2A_1207959562(time_1207961003.seconds, 1000));
    var offset_1207961009 = HEX2A_1207959566(jsDate_1207961008.getTimezoneOffset(), 60);
    result_1207961004.time = nimCopy(result_1207961004.time, time_1207961003, NTI1207959584);
    result_1207961004.utcOffset = offset_1207961009;
    result_1207961004.isDst = false;

  return result_1207961004;

}

function contains_1207961025(s_1207961029, value_1207961030) {
  var result_1207961031 = false;

    result_1207961031 = ((s_1207961029.a <= value_1207961030) && (value_1207961030 <= s_1207961029.b));

  return result_1207961031;

}

function ntAddTime(a_1207960650, b_1207960651) {
  var result_1207960652 = ({seconds: 0, nanosecond: 0});

    result_1207960652 = nimCopy(result_1207960652, normalize_1207960656(HEX2B_1207959570(a_1207960650.seconds, b_1207960651.seconds), HEX2B_1207959574(a_1207960650.nanosecond, b_1207960651.nanosecond)), NTI1207959584);

  return result_1207960652;

}

function localZonedTimeFromAdjTime_1207961010(adjTime_1207961011) {
  var result_1207961012 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1207961016 = new Date(HEX2A_1207959562(adjTime_1207961011.seconds, 1000));
    var localDate_1207961017 = new Date(utcDate_1207961016.getUTCFullYear(),utcDate_1207961016.getUTCMonth(),utcDate_1207961016.getUTCDate(),utcDate_1207961016.getUTCHours(),utcDate_1207961016.getUTCMinutes(),utcDate_1207961016.getUTCSeconds(),0);
    if (contains_1207961025(HEX2EHEX2E_822083634(0, 99), utcDate_1207961016.getUTCFullYear())) {
    localDate_1207961017.setFullYear(utcDate_1207961016.getUTCFullYear());
    }
    
    result_1207961012.utcOffset = HEX2A_1207959566(localDate_1207961017.getTimezoneOffset(), 60);
    result_1207961012.time = nimCopy(result_1207961012.time, ntAddTime(adjTime_1207961011, initDuration_1207960009(0, 0, 0, result_1207961012.utcOffset, 0, 0, 0, 0)), NTI1207959584);
    result_1207961012.isDst = false;

  return result_1207961012;

}

function local_1207961051() {
  var result_1207961052 = null;

    if ((localInstance_1207961036[0] == null)) {
    localInstance_1207961036[0] = newTimezone_1207960914([76,79,67,65,76], localZonedTimeFromTime_1207961002, localZonedTimeFromAdjTime_1207961010);
    }
    
    result_1207961052 = localInstance_1207961036[0];

  return result_1207961052;

}

function local_1207961065(t_1207961066) {
  var result_1207961067 = ({m_type: NTI1207959585, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1207961067 = nimCopy(result_1207961067, inZone_1207960984(t_1207961066, local_1207961051()), NTI1207959585);

  return result_1207961067;

}

function initTime_1207960535(unix_1207960536, nanosecond_1207960537) {
  var result_1207960538 = ({seconds: 0, nanosecond: 0});

    result_1207960538.seconds = unix_1207960536;
    result_1207960538.nanosecond = nanosecond_1207960537;

  return result_1207960538;

}

function getTime_1207960605() {
  var result_1207960606 = ({seconds: 0, nanosecond: 0});

    var millis_1207960611 = new Date().getTime();
    var seconds_1207960617 = convert_1207960086(2, 3, millis_1207960611);
    var nanos_1207960628 = convert_1207960086(2, 0, modInt(millis_1207960611, convert_1207960086(3, 2, 1)));
    result_1207960606 = nimCopy(result_1207960606, initTime_1207960535(seconds_1207960617, chckRange(nanos_1207960628, 0, 999999999)), NTI1207959584);

  return result_1207960606;

}

function now_1207961068() {
  var result_1207961069 = ({m_type: NTI1207959585, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1207961069 = nimCopy(result_1207961069, local_1207961065(getTime_1207960605()), NTI1207959585);

  return result_1207961069;

}

function ntgetClockStr(dt_1207961139) {
  var result_1207961140 = [];

    if (!(!((dt_1207961139.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1207961140 = nimCopy(null, (nsuIntToStr(dt_1207961139.hour, 2) || []).concat([58],nsuIntToStr(dt_1207961139.minute, 2) || [],[58],nsuIntToStr(dt_1207961139.second, 2) || []), NTI33554449);

  return result_1207961140;

}

function substituteLog_1191182392(frmt_1191182393, level_1191182394, args_1191182395) {
                  var Temporary8;

  var result_1191182396 = [];

    var msgLen_1191182397 = 0;
    Label1: {
      var arg_1191182401 = [];
      var i_536872592 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872592 < (args_1191182395).length)) break Label3;
            arg_1191182401 = args_1191182395[chckIndx(i_536872592, 0, (args_1191182395).length - 1)];
            msgLen_1191182397 = addInt(msgLen_1191182397, (arg_1191182401).length);
            i_536872592 = addInt(i_536872592, 1);
          }
      };
    };
    result_1191182396 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1191182406 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1191182406 < (frmt_1191182393).length)) break Label5;
          if (!((frmt_1191182393[chckIndx(i_1191182406, 0, (frmt_1191182393).length - 1)] == 36))) {
          addChar(result_1191182396, frmt_1191182393[chckIndx(i_1191182406, 0, (frmt_1191182393).length - 1)]);;
          i_1191182406 = addInt(i_1191182406, 1);
          }
          else {
            i_1191182406 = addInt(i_1191182406, 1);
            var v_1191182417 = [];
            var app_1191182418 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1191182406 < (frmt_1191182393).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet280[frmt_1191182393[chckIndx(i_1191182406, 0, (frmt_1191182393).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1191182417, nsuToLowerAsciiChar(frmt_1191182393[chckIndx(i_1191182406, 0, (frmt_1191182393).length - 1)]));;
                  i_1191182406 = addInt(i_1191182406, 1);
                }
            };
            switch (toJSStr(v_1191182417)) {
            case "date":
              result_1191182396.push.apply(result_1191182396, ntgetDateStr(now_1207961068()));;
              break;
            case "time":
              result_1191182396.push.apply(result_1191182396, ntgetClockStr(now_1207961068()));;
              break;
            case "datetime":
              result_1191182396.push.apply(result_1191182396, (ntgetDateStr(now_1207961068()) || []).concat([84] || [],ntgetClockStr(now_1207961068()) || []));;
              break;
            case "app":
              result_1191182396.push.apply(result_1191182396, app_1191182418);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1191182396, LevelNames_1191182351[chckIndx(level_1191182394, 0, (LevelNames_1191182351).length - 1)][chckIndx(0, 0, (LevelNames_1191182351[chckIndx(level_1191182394, 0, (LevelNames_1191182351).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1191182396.push.apply(result_1191182396, LevelNames_1191182351[chckIndx(level_1191182394, 0, (LevelNames_1191182351).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1191182431 = [];
      var i_536872597 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872597 < (args_1191182395).length)) break Label11;
            arg_1191182431 = args_1191182395[chckIndx(i_536872597, 0, (args_1191182395).length - 1)];
            result_1191182396.push.apply(result_1191182396, arg_1191182431);;
            i_536872597 = addInt(i_536872597, 1);
          }
      };
    };

  return result_1191182396;

}

function log_1191182437(logger_1191182438, level_1191182439, args_1191182440) {
    if (((level_1191182363[0] <= level_1191182439) && (logger_1191182438.levelThreshold <= level_1191182439))) {
    var ln_1191182449 = substituteLog_1191182392(logger_1191182438.fmtStr, level_1191182439, args_1191182440);
    var cln_1191182450 = toJSStr(ln_1191182449);
    switch (level_1191182439) {
    case 1:
      console.debug(cln_1191182450);
      break;
    case 2:
      console.info(cln_1191182450);
      break;
    case 4:
      console.warn(cln_1191182450);
      break;
    case 5:
      console.error(cln_1191182450);
      break;
    default: 
      console.log(cln_1191182450);
      break;
    }
    }
    

  
}

function log_1191182432(logger_1191182433, level_1191182434, args_1191182435) {
  
}

function log_1191182436(logger_1191182433, level_1191182434, args_1191182435) {
    chckNilDisp(logger_1191182433);
    if (isObj(logger_1191182433.m_type, NTI721420294)) {
    log_721420358(logger_1191182433, level_1191182434, args_1191182435);
    }
    else {
    if (isObj(logger_1191182433.m_type, NTI1191182350)) {
    log_1191182437(logger_1191182433, level_1191182434, args_1191182435);
    }
    else {
    if (isObj(logger_1191182433.m_type, NTI1191182349)) {
    log_1191182432(logger_1191182433, level_1191182434, args_1191182435);
    }
    }}

  
}

function HEX24_2734691156(document_2734691157) {
  var result_2734691158 = [];

  BeforeRet: {
    result_2734691158 = nimCopy(null, document_2734691157.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2734691158;

}

function HEX24_2634024511(document_2634024512) {
  var result_2634024513 = [];

  BeforeRet: {
    result_2634024513 = nimCopy(null, document_2634024512.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2634024513;

}

function HEX24_2164260867(document_2164260868) {
  var result_2164260869 = [];

  BeforeRet: {
    result_2164260869 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2164260869;

}

function HEX24_2164260870(document_2164260868) {
  var result_2164260871 = [];

  BeforeRet: {
    chckNilDisp(document_2164260868);
    if (isObj(document_2164260868.m_type, NTI2734687752)) {
    result_2164260871 = HEX24_2734691156(document_2164260868);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260868.m_type, NTI2634023047)) {
    result_2164260871 = HEX24_2634024511(document_2164260868);
    break BeforeRet;
    }
    else {
    if (isObj(document_2164260868.m_type, NTI2164260868)) {
    result_2164260871 = HEX24_2164260867(document_2164260868);
    break BeforeRet;
    }
    }}
  };

  return result_2164260871;

}

function toJson_2768242875(kind_2768242876, opt_2768242877) {
  var result_2768242878 = null;

  BeforeRet: {
    result_2768242878 = newJString_1660944426(reprEnum(kind_2768242876, NTI2768240643));
    break BeforeRet;
  };

  return result_2768242878;

}

function toJson_2298478716(id_2298478717, opt_2298478718) {
  var result_2298478719 = null;

  BeforeRet: {
    result_2298478719 = newJString_1660944426(HEX24_2298478634(id_2298478717));
    break BeforeRet;
  };

  return result_2298478719;

}

function join_2768242917(a_2768242919, sep_2768242920) {
  var result_2768242921 = [];

    result_2768242921 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2768242936 = 0;
      var x_2768242937 = 0;
      var i_536872614 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872614 < (a_2768242919).length)) break Label3;
            i_2768242936 = i_536872614;
            x_2768242937 = a_2768242919[chckIndx(i_536872614, 0, (a_2768242919).length - 1)];
            if ((0 < i_2768242936)) {
            result_2768242921.push.apply(result_2768242921, sep_2768242920);;
            }
            
            result_2768242921.push.apply(result_2768242921, HEX24_369098760(x_2768242937));;
            i_536872614 = addInt(i_536872614, 1);
          }
      };
    };

  return result_2768242921;

}

function toJson_2768242909(node_2768242910, opt_2768242911) {
  var result_2768242912 = null;

    result_2768242912 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [107,105,110,100], toJson_2768242875(node_2768242910.kind, opt_2768242911));
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [105,100], toJson_2298478716(node_2768242910.id, opt_2768242911));
    if (!(HEX3DHEX3D_2298478667(node_2768242910.reff, null_2298478708))) {
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [114,101,102,102], toJson_2298478716(node_2768242910.reff, opt_2768242911));
    }
    
    if ((0 < (node_2768242910.text).length)) {
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [116,101,120,116], toJson_1845494346(node_2768242910.text, opt_2768242911));
    }
    
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [112,97,116,104], newJString_1660944426(join_2768242917(path_2768242595(node_2768242910), [44,32])));
    if ((0 < len_2768240728(node_2768242910))) {
    var children_2768242938 = newJArray_1660944514();
    Label1: {
      var child_2768242942 = null;
      var i_536872609 = 0;
      var L_536872610 = (node_2768242910.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872609 < L_536872610)) break Label3;
            child_2768242942 = node_2768242910.children[chckIndx(i_536872609, 0, (node_2768242910.children).length - 1)];
            add_1660944622(children_2768242938, toJson_2768242909(child_2768242942, opt_2768242911));
            i_536872609 = addInt(i_536872609, 1);
            if (!(((node_2768242910.children).length == L_536872610))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1660946335(result_2768242912, [99,104,105,108,100,114,101,110], children_2768242938);
    }
    

  return result_2768242912;

}

function getItem_2785085694(selfHEX60gensym86_2785085695) {
  var result_2785085696 = {Field0: ({id: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2298478667(selfHEX60gensym86_2785085695.id, null_2298478708)) {
    selfHEX60gensym86_2785085695.id = nimCopy(selfHEX60gensym86_2785085695.id, newId_2298478623(), NTI2298478595);
    }
    
    if (!(!(HEX3DHEX3D_2298478667(selfHEX60gensym86_2785085695.id, null_2298478708)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,54,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__536872659 = nimCopy(null, selfHEX60gensym86_2785085695.id, NTI2298478595);
    var colontmp__536872660 = 1;
    result_2785085696 = nimCopy(result_2785085696, {Field0: nimCopy(null, colontmp__536872659, NTI2298478595), Field1: colontmp__536872660}, NTI2801795097);
    break BeforeRet;
  };

  return result_2785085696;

}

function getOrDefault_2785085945(t_2785085948, key_2785085949, default_2785085950) {
    var Temporary1;

  var result_2785085951 = null;

    var hcHEX60gensym461_2785085954 = [0];
    var indexHEX60gensym461_2785085961 = rawGet_2785059704(t_2785085948, key_2785085949, hcHEX60gensym461_2785085954, 0);
    if ((0 <= indexHEX60gensym461_2785085961)) {
    Temporary1 = t_2785085948.data[chckIndx(indexHEX60gensym461_2785085961, 0, (t_2785085948.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785085950;
    }
    
    result_2785085951 = Temporary1;

  return result_2785085951;

}

function newDoublyLinkedNode_2785086077(value_2785086079) {
  var result_2785086080 = null;

    result_2785086080 = ({next: null, prev: null, value: ({key: {Field0: ({id: 0}), Field1: 0}, val: null})});
    result_2785086080.value = nimCopy(result_2785086080.value, value_2785086079, NTI2785017991);

  return result_2785086080;

}

function mustRehash_2785086418(t_2785086420) {
  var result_2785086421 = false;

    if (!((t_2785086420.counter < (t_2785086420.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785086421 = ((mulInt((t_2785086420.data).length, 2) < mulInt(t_2785086420.counter, 3)) || (subInt((t_2785086420.data).length, t_2785086420.counter) < 4));

  return result_2785086421;

}

function rawInsert_2785087111(t_2785087115, data_2785087116, data_2785087116_Idx, key_2785087117, val_2785087118, hc_2785087119, h_2785087120) {
    data_2785087116[data_2785087116_Idx][chckIndx(h_2785087120, 0, (data_2785087116[data_2785087116_Idx]).length - 1)].Field1 = nimCopy(data_2785087116[data_2785087116_Idx][chckIndx(h_2785087120, 0, (data_2785087116[data_2785087116_Idx]).length - 1)].Field1, key_2785087117, NTI2801795097);
    data_2785087116[data_2785087116_Idx][chckIndx(h_2785087120, 0, (data_2785087116[data_2785087116_Idx]).length - 1)].Field2 = val_2785087118;
    data_2785087116[data_2785087116_Idx][chckIndx(h_2785087120, 0, (data_2785087116[data_2785087116_Idx]).length - 1)].Field0 = hc_2785087119;

  
}

function enlarge_2785086675(t_2785086678) {
    var n_2785086681 = [];
    n_2785086681 = new Array(chckRange(mulInt((t_2785086678.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785086678.data).length, 2), 0, 2147483647) ; ++i) { n_2785086681[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2785086678.data; t_2785086678.data = n_2785086681; n_2785086681 = Temporary1;    Label2: {
      var i_2785086779 = 0;
      var colontmp__536872663 = 0;
      colontmp__536872663 = (n_2785086681).length - 1;
      var res_536872664 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872664 <= colontmp__536872663)) break Label4;
            i_2785086779 = res_536872664;
            var eh_2785086860 = n_2785086681[chckIndx(i_2785086779, 0, (n_2785086681).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785086860)) {
            var j_2785086864 = (eh_2785086860 & (t_2785086678.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785086678.data[chckIndx(j_2785086864, 0, (t_2785086678.data).length - 1)].Field0)) break Label6;
                  j_2785086864 = nextTry_1342177315(j_2785086864, (t_2785086678.data).length - 1);
                }
            };
            rawInsert_2785087111(t_2785086678, t_2785086678, "data", n_2785086681[chckIndx(i_2785086779, 0, (n_2785086681).length - 1)].Field1, n_2785086681[chckIndx(i_2785086779, 0, (n_2785086681).length - 1)].Field2, eh_2785086860, j_2785086864);
            }
            
            res_536872664 = addInt(res_536872664, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785087361(t_2785087364, key_2785087365, hc_2785087366) {
  var result_2785087367 = 0;

  BeforeRet: {
    if (((t_2785087364.data).length == 0)) {
    result_2785087367 = -1;
    break BeforeRet;
    }
    
    var h_2785087452 = (hc_2785087366 & (t_2785087364.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785087364.data[chckIndx(h_2785087452, 0, (t_2785087364.data).length - 1)].Field0)) break Label2;
          if (((t_2785087364.data[chckIndx(h_2785087452, 0, (t_2785087364.data).length - 1)].Field0 == hc_2785087366) && HEX3DHEX3D_2785019332(t_2785087364.data[chckIndx(h_2785087452, 0, (t_2785087364.data).length - 1)].Field1, key_2785087365))) {
          result_2785087367 = h_2785087452;
          break BeforeRet;
          }
          
          h_2785087452 = nextTry_1342177315(h_2785087452, (t_2785087364.data).length - 1);
        }
    };
    result_2785087367 = subInt(-1, h_2785087452);
  };

  return result_2785087367;

}

function HEX5BHEX5DHEX3D_2785086150(t_2785086153, key_2785086154, val_2785086155) {
    if (((t_2785086153.data).length == 0)) {
    var correctSizeHEX60gensym464_2785086238 = slotsNeeded_1342177323(32);
    t_2785086153.counter = 0;
    t_2785086153.data = new Array(chckRange(correctSizeHEX60gensym464_2785086238, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym464_2785086238, 0, 2147483647) ; ++i) { t_2785086153.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2785086243 = [0];
    var index_2785086250 = rawGet_2785059704(t_2785086153, key_2785086154, hc_2785086243, 0);
    if ((0 <= index_2785086250)) {
    t_2785086153.data[chckIndx(index_2785086250, 0, (t_2785086153.data).length - 1)].Field2 = val_2785086155;
    }
    else {
      if (((t_2785086153.data).length == 0)) {
      var correctSizeHEX60gensym467_2785086413 = slotsNeeded_1342177323(32);
      t_2785086153.counter = 0;
      t_2785086153.data = new Array(chckRange(correctSizeHEX60gensym467_2785086413, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym467_2785086413, 0, 2147483647) ; ++i) { t_2785086153.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2785086418(t_2785086153)) {
      enlarge_2785086675(t_2785086153);
      index_2785086250 = rawGetKnownHC_2785087361(t_2785086153, key_2785086154, hc_2785086243[0]);
      }
      
      index_2785086250 = subInt(-1, index_2785086250);
      rawInsert_2785087111(t_2785086153, t_2785086153, "data", key_2785086154, val_2785086155, hc_2785086243[0], index_2785086250);
      t_2785086153.counter = addInt(t_2785086153.counter, 1);
    }
    

  
}

function len_2785087972(t_2785087975) {
  var result_2785087976 = 0;

    result_2785087976 = t_2785087975.counter;

  return result_2785087976;

}

function len_2785087889(cache_2785087892) {
  var result_2785087893 = 0;

    result_2785087893 = len_2785087972(cache_2785087892.table);

  return result_2785087893;

}

function del_2785088064(t_2785088067, key_2785088068) {
    var hc_2785088069 = [0];
    var i_2785088076 = rawGet_2785059704(t_2785088067, key_2785088068, hc_2785088069, 0);
    var mskHEX60gensym36_2785088080 = (t_2785088067.data).length - 1;
    if ((0 <= i_2785088076)) {
    t_2785088067.counter = subInt(t_2785088067.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785088087 = i_2785088076;
            var rHEX60gensym36_2785088088 = jHEX60gensym36_2785088087;
            t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field0 = 0;
            t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field1 = nimCopy(t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field1, {Field0: ({id: 0}), Field1: 0}, NTI2801795097);
            t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785088076 = (addInt(i_2785088076, 1) & mskHEX60gensym36_2785088080);
                  if (isEmpty_1342177309(t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785088088 = (t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)].Field0 & mskHEX60gensym36_2785088080);
                  if (!(((((rHEX60gensym36_2785088088 <= i_2785088076) && (jHEX60gensym36_2785088087 < rHEX60gensym36_2785088088)) || ((jHEX60gensym36_2785088087 < rHEX60gensym36_2785088088) && (i_2785088076 < jHEX60gensym36_2785088087))) || ((i_2785088076 < jHEX60gensym36_2785088087) && (rHEX60gensym36_2785088088 <= i_2785088076))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785088067.data[chckIndx(jHEX60gensym36_2785088087, 0, (t_2785088067.data).length - 1)] = nimCopy(t_2785088067.data[chckIndx(jHEX60gensym36_2785088087, 0, (t_2785088067.data).length - 1)], t_2785088067.data[chckIndx(i_2785088076, 0, (t_2785088067.data).length - 1)], NTI2785018027);
          }
      };
    };
    }
    

  
}

function resize_2785087807(cache_2785087810) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785087810.capacity < len_2785087889(cache_2785087810))) break Label2;
          var t_2785087977 = cache_2785087810.list.tail;
          if (cache_2785087810.recordRemovedKeys) {
          incl_2785083078(cache_2785087810.removedKeys, t_2785087977.value.key);
          }
          
          del_2785088064(cache_2785087810.table, t_2785087977.value.key);
          remove_2785060356(cache_2785087810.list, t_2785087977);
        }
    };

  
}

function addNewNode_2785086069(cache_2785086072, key_2785086073, val_2785086074) {
    var node_2785086086 = newDoublyLinkedNode_2785086077({key: nimCopy(null, key_2785086073, NTI2801795097), val: val_2785086074});
    HEX5BHEX5DHEX3D_2785086150(cache_2785086072.table, key_2785086073, node_2785086086);
    prepend_2785060660(cache_2785086072.list, node_2785086086);
    if (cache_2785086072.recordRemovedKeys) {
    excl_2785081907(cache_2785086072.removedKeys, key_2785086073);
    }
    
    resize_2785087807(cache_2785086072);

  
}

function HEX5BHEX5DHEX3D_2785085850(cache_2785085853, key_2785085854, val_2785085855) {
    var node_2785086042 = getOrDefault_2785085945(cache_2785085853.table, key_2785085854, null);
    if ((node_2785086042 == null)) {
    addNewNode_2785086069(cache_2785085853, key_2785085854, val_2785085855);
    }
    else {
      node_2785086042.value.val = val_2785085855;
      remove_2785060356(cache_2785085853.list, node_2785086042);
      prepend_2785060660(cache_2785085853.list, node_2785086042);
    }
    

  
}

function getOrCreateNodeLayoutInput_2785085703(ctxHEX60gensym87_2785085704, dataHEX60gensym87_2785085705) {
  var result_2785085706 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym87_2785085715 = null;
      Label2: {
        var node_536872656 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_536872657 = ctxHEX60gensym87_2785085704.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_536872657 == null))) break Label4;
              node_536872656 = nimCopy(node_536872656, it_536872657.value, NTI2785017991);
              existingHEX60gensym87_2785085715 = node_536872656.val;
              if (((hash_2868906080(existingHEX60gensym87_2785085715) == hash_2868906080(dataHEX60gensym87_2785085705)) && HEX3DHEX3D_2868906083(existingHEX60gensym87_2785085715, dataHEX60gensym87_2785085705))) {
              result_2785085706 = existingHEX60gensym87_2785085715;
              break BeforeRet;
              }
              
              it_536872657 = it_536872657.next;
            }
        };
      };
    };
    var itemHEX60gensym87_2785085716 = getItem_2785085694(dataHEX60gensym87_2785085705);
    var keyHEX60gensym87_2785085717 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_2785085716, NTI2801795097), Field1: -1}, NTI2801795100);
    HEX5BHEX5DHEX3D_2801806532(ctxHEX60gensym87_2785085704.depGraph.changed, keyHEX60gensym87_2785085717, ctxHEX60gensym87_2785085704.depGraph.revision);
    HEX5BHEX5DHEX3D_2785085850(ctxHEX60gensym87_2785085704.itemsNodeLayoutInput, itemHEX60gensym87_2785085716, dataHEX60gensym87_2785085705);
    result_2785085706 = dataHEX60gensym87_2785085705;
    break BeforeRet;
  };

  return result_2785085706;

}

function hasKey_2785123101(t_2785123104, key_2785123105) {
  var result_2785123106 = false;

    var hc_2785123107 = [0];
    result_2785123106 = (0 <= rawGet_2785061034(t_2785123104, key_2785123105, hc_2785123107, 0));

  return result_2785123106;

}

function contains_2785123095(t_2785123098, key_2785123099) {
  var result_2785123100 = false;

  BeforeRet: {
    result_2785123100 = hasKey_2785123101(t_2785123098, key_2785123099);
    break BeforeRet;
  };

  return result_2785123100;

}

function contains_2785123001(cache_2785123004, key_2785123005) {
  var result_2785123006 = false;

    result_2785123006 = contains_2785123095(cache_2785123004.table, key_2785123005);

  return result_2785123006;

}

function addFloat_2130707498(result_2130707500, result_2130707500_Idx, x_2130707501) {
    add_33556386(result_2130707500, result_2130707500_Idx, nimFloatToString_385876087(x_2130707501));

  
}

function HEX24_2130707494(x_2130707496) {
  var result_2130707497 = [[]];

    addFloat_2130707498(result_2130707497, 0, x_2130707496);

  return result_2130707497[0];

}

function HEX24_2113929289(a_2113929290) {
  var result_2113929291 = [];

    result_2113929291 = nimCopy(null, ([40] || []).concat(HEX24_2130707494(a_2113929290.x) || [],[44,32] || [],HEX24_2130707494(a_2113929290.y) || [],[58,32] || [],HEX24_2130707494(a_2113929290.w) || [],[32,120,32] || [],HEX24_2130707494(a_2113929290.h) || [],[41] || []), NTI33554449);

  return result_2113929291;

}

function HEX24_2868905733(vnode_2868905734) {
  var result_2868905735 = [];

    result_2868905735 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_2868905735.push.apply(result_2868905735, (vnode_2868905734.text || []).concat([39,44,32] || []));;
    result_2868905735.push.apply(result_2868905735, (HEX24_2113929289(vnode_2868905734.bounds) || []).concat([44,32] || []));;
    if (!((vnode_2868905734.node == null))) {
    result_2868905735.push.apply(result_2868905735, (HEX24_2768242647(vnode_2868905734.node) || []).concat([44,32] || []));;
    }
    
    result_2868905735.push.apply(result_2868905735, (HEX24_2634035733(vnode_2868905734.colors) || []).concat([44,32] || []));;
    result_2868905735.push.apply(result_2868905735, [41]);;

  return result_2868905735;

}

function join_2868906018(a_2868906020, sep_2868906021) {
  var result_2868906022 = [];

    result_2868906022 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2868906037 = 0;
      var x_2868906038 = null;
      var i_536872672 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872672 < (a_2868906020).length)) break Label3;
            i_2868906037 = i_536872672;
            x_2868906038 = a_2868906020[chckIndx(i_536872672, 0, (a_2868906020).length - 1)];
            if ((0 < i_2868906037)) {
            result_2868906022.push.apply(result_2868906022, sep_2868906021);;
            }
            
            result_2868906022.push.apply(result_2868906022, HEX24_2868905733(x_2868906038));;
            i_536872672 = addInt(i_536872672, 1);
          }
      };
    };

  return result_2868906022;

}

function HEX24_2868906015(nodeLayout_2868906016) {
  var result_2868906017 = [];

    result_2868906017 = nimCopy(null, join_2868906018(nodeLayout_2868906016.root.children, [10]), NTI33554449);

  return result_2868906017;

}

function HEX24_2868906052(input_2868906053) {
  var result_2868906054 = [];

  BeforeRet: {
    var fmtRes_2868906059 = [mnewString(0)];
    fmtRes_2868906059[0].push.apply(fmtRes_2868906059[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_2801795292(fmtRes_2868906059, 0, input_2868906053.id, []);
    fmtRes_2868906059[0].push.apply(fmtRes_2868906059[0], [44,32,110,111,100,101,58,32]);;
    formatValue_2868904741(fmtRes_2868906059, 0, input_2868906053.node, []);
    fmtRes_2868906059[0].push.apply(fmtRes_2868906059[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_2801795292(fmtRes_2868906059, 0, input_2868906053.selectedNode, []);
    fmtRes_2868906059[0].push.apply(fmtRes_2868906059[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2348810760(fmtRes_2868906059, 0, input_2868906053.revision, []);
    fmtRes_2868906059[0].push.apply(fmtRes_2868906059[0], [41]);;
    result_2868906054 = nimCopy(null, fmtRes_2868906059[0], NTI33554449);
    break BeforeRet;
  };

  return result_2868906054;

}

function raiseKeyError_2785123374(key_2785123376) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2868906052(key_2785123376) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2785123280(t_2785123283, key_2785123284) {
  var result_2785123285 = null;
  var result_2785123285_Idx = 0;

    var hcHEX60gensym22_2785123286 = [0];
    var indexHEX60gensym22_2785123293 = rawGet_2785061034(t_2785123283, key_2785123284, hcHEX60gensym22_2785123286, 0);
    if ((0 <= indexHEX60gensym22_2785123293)) {
    result_2785123285 = t_2785123283.data[chckIndx(indexHEX60gensym22_2785123293, 0, (t_2785123283.data).length - 1)]; result_2785123285_Idx = "Field2";
    }
    else {
    raiseKeyError_2785123374(key_2785123284);
    }
    

  return [result_2785123285, result_2785123285_Idx];

}

function HEX5BHEX5D_2785123194(cache_2785123197, key_2785123198) {
    var Temporary1;

  var result_2785123199 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_2785123387 = (Temporary1 = HEX5BHEX5D_2785123280(cache_2785123197.table, key_2785123198), Temporary1)[0][Temporary1[1]];
    result_2785123199 = nimCopy(result_2785123199, node_2785123387.value.val, NTI2868903967);
    remove_2785066913(cache_2785123197.list, node_2785123387);
    prepend_2785063202(cache_2785123197.list, node_2785123387);

  return result_2785123199;

}

function computeNodeLayout_2785123477(ctxHEX60gensym131_2785123478, inputHEX60gensym131_2785123479, recordDependencyHEX60gensym131_2785123480) {
    var Temporary3;
    var Temporary5;

  var result_2785123481 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym131_2785123482 = startTimer_2248146975();
    ctxHEX60gensym131_2785123478.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym131_2785123478.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym131_2785123571 = getItem_2785085694(inputHEX60gensym131_2785123479);
    var keyHEX60gensym131_2785123572 = {Field0: nimCopy(null, itemHEX60gensym131_2785123571, NTI2801795097), Field1: 7};
    if (recordDependencyHEX60gensym131_2785123480) {
    recordDependency_2785079604(ctxHEX60gensym131_2785123478, itemHEX60gensym131_2785123571, 7);
    }
    
    var colorHEX60gensym131_2785123573 = nodeColor_2801797557(ctxHEX60gensym131_2785123478.depGraph, keyHEX60gensym131_2785123572, 0);
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_2801795086[0] = addInt(currentIndent_2801795086[0], Temporary3);
    try {
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(subInt(currentIndent_2801795086[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym131_2785123573, NTI2801795102), [44,32], HEX24_2801795284(itemHEX60gensym131_2785123571));
    }
    
    if ((colorHEX60gensym131_2785123573 == 2)) {
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym131_2785123478, keyHEX60gensym131_2785123572);
    if (true) {
    markRed_2801809909(ctxHEX60gensym131_2785123478.depGraph, keyHEX60gensym131_2785123572, []);
    }
    
    if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
    }
    
    }
    else {
      if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
      }
      
    }
    
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2868906052(inputHEX60gensym131_2785123479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785123481 = nimCopy(result_2785123481, HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479), NTI2868903967);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym131_2785123573 == 0)) {
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2785099373(ctxHEX60gensym131_2785123478, keyHEX60gensym131_2785123572);
    if (true) {
    markRed_2801809909(ctxHEX60gensym131_2785123478.depGraph, keyHEX60gensym131_2785123572, []);
    }
    
    if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
    }
    
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2868906052(inputHEX60gensym131_2785123479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785123481 = nimCopy(result_2785123481, HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479), NTI2868903967);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2785100388(ctxHEX60gensym131_2785123478, keyHEX60gensym131_2785123572, true) == 0)) {
    if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
    }
    
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2868906052(inputHEX60gensym131_2785123479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785123481 = nimCopy(result_2785123481, HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479), NTI2868903967);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym131_2785123478.enableLogging) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2785099373(ctxHEX60gensym131_2785123478, keyHEX60gensym131_2785123572);
      if (true) {
      markRed_2801809909(ctxHEX60gensym131_2785123478.depGraph, keyHEX60gensym131_2785123572, []);
      }
      
      if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
      rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
      }
      
      if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2868906052(inputHEX60gensym131_2785123479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2785123481 = nimCopy(result_2785123481, HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479), NTI2868903967);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym131_2785123573 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,51,49,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym131_2785123478.enableLogging && contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    rawEcho(repeat2_2801795087([124,32], chckRange(currentIndent_2801795086[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2868906015(HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479)));
    }
    
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    force_2785099373(ctxHEX60gensym131_2785123478, keyHEX60gensym131_2785123572);
    }
    
    if (!(contains_2785123001(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_2868906052(inputHEX60gensym131_2785123479) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2785123481 = nimCopy(result_2785123481, HEX5BHEX5D_2785123194(ctxHEX60gensym131_2785123478.queryCacheNodeLayout, inputHEX60gensym131_2785123479), NTI2868903967);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym131_2785123478.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_2801795086[0] = subInt(currentIndent_2801795086[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym131_2785123478.dependencyStack).length == 0)) {
    clear_2785102603(ctxHEX60gensym131_2785123478.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym131_2785123478.statsNodeLayout.time = addInt(ctxHEX60gensym131_2785123478.statsNodeLayout.time, elapsed_2248146986(timerHEX60gensym131_2785123482));
    }
  };

  return result_2785123481;

}

function toHex_2365587470(x_2365587472) {
  var result_2365587473 = [];

    result_2365587473 = nimCopy(null, toHexImpl_872416004((x_2365587472 >>> 0), 8, (x_2365587472 < 0)), NTI33554449);

  return result_2365587473;

}

function toHex_2365587467(a_2365587468) {
  var result_2365587469 = [];

    result_2365587469 = nimCopy(null, toHex_2365587470(((a_2365587468) | 0)), NTI33554449);

  return result_2365587469;

}

function toHex_2365587706(c_2365587707) {
  var result_2365587708 = [];

    result_2365587708 = nimCopy(null, (HEX5BHEX5D_2365587738(toHex_2365587467((c_2365587707.r * 255.0)), HEX2EHEX2E_2365587711(2, 1)) || []).concat(HEX5BHEX5D_2365587738(toHex_2365587467((c_2365587707.g * 255.0)), HEX2EHEX2E_2365587711(2, 1)) || [],HEX5BHEX5D_2365587738(toHex_2365587467((c_2365587707.b * 255.0)), HEX2EHEX2E_2365587711(2, 1)) || []), NTI33554449);

  return result_2365587708;

}

function toHtmlHex_2365587896(c_2365587897) {
  var result_2365587898 = [];

    result_2365587898 = nimCopy(null, [35].concat(toHex_2365587706(c_2365587897) || []), NTI33554449);

  return result_2365587898;

}

function isSome_2969568090(self_2969568092) {
  var result_2969568093 = false;

    result_2969568093 = self_2969568092.has;

  return result_2969568093;

}

function isNone_2969568115(self_2969568117) {
  var result_2969568118 = false;

    result_2969568118 = !(self_2969568117.has);

  return result_2969568118;

}

function get_2969568107(self_2969568109) {
  var result_2969568110 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isNone_2969568115(self_2969568109)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969568110 = self_2969568109.val;

  return result_2969568110;

}

function anyColor_2969567741(theme_2969567743, names_2969567744, default_2969567745) {
  var result_2969567746 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_2969567750 = [];
      var i_536872685 = 0;
      var L_536872686 = (names_2969567744).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872685 < L_536872686)) break Label3;
            name_2969567750 = names_2969567744[chckIndx(i_536872685, 0, (names_2969567744).length - 1)];
            if (nsuStartsWith(name_2969567750, [35])) {
            result_2969567746 = nimCopy(result_2969567746, parseHexVar_2499805231(name_2969567750), NTI2382364675);
            break BeforeRet;
            }
            else {
            if ((nsuStartsWith(name_2969567750, [38]) && contains_2969567811(theme_2969567743.colors, HEX5BHEX5D_872416535(name_2969567750, HEX2EHEX2E_1056964704(1, 1))))) {
            result_2969567746 = nimCopy(result_2969567746, HEX5BHEX5D_2969567901(theme_2969567743.colors, HEX5BHEX5D_872416535(name_2969567750, HEX2EHEX2E_1056964704(1, 1))), NTI2382364675);
            break BeforeRet;
            }
            else {
            if (contains_2499805435(theme_2969567743.tokenColors, name_2969567750)) {
            var style_2969568085 = nimCopy(null, HEX5BHEX5D_2499805740(theme_2969567743.tokenColors, name_2969567750), NTI2499805188);
            if (isSome_2969568090(style_2969568085.foreground)) {
            result_2969567746 = nimCopy(result_2969567746, get_2969568107(style_2969568085.foreground), NTI2382364675);
            break BeforeRet;
            }
            
            }
            }}
            i_536872685 = addInt(i_536872685, 1);
            if (!(((names_2969567744).length == L_536872686))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2969567746 = nimCopy(result_2969567746, color_2466250785(default_2969567745), NTI2382364675);
    break BeforeRet;
  };

  return result_2969567746;

}

function tokenFontStyle_2499805872(theme_2499805873, names_2499805874) {
  var result_2499805875 = {};

  BeforeRet: {
    Label1: {
      var name_2499805879 = [];
      var i_536872689 = 0;
      var L_536872690 = (names_2499805874).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872689 < L_536872690)) break Label3;
            name_2499805879 = names_2499805874[chckIndx(i_536872689, 0, (names_2499805874).length - 1)];
            if (contains_2499805435(theme_2499805873.tokenColors, name_2499805879)) {
            result_2499805875 = nimCopy(result_2499805875, HEX5BHEX5D_2499805740(theme_2499805873.tokenColors, name_2499805879).fontStyle, NTI2499805632);
            break BeforeRet;
            }
            
            i_536872689 = addInt(i_536872689, 1);
            if (!(((names_2499805874).length == L_536872690))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2499805875 = nimCopy(result_2499805875, ConstSet282, NTI2499805632);
    break BeforeRet;
  };

  return result_2499805875;

}

function isSome_2969568139(self_2969568141) {
  var result_2969568142 = false;

    result_2969568142 = self_2969568141.has;

  return result_2969568142;

}

function isNone_2969568164(self_2969568166) {
  var result_2969568167 = false;

    result_2969568167 = !(self_2969568166.has);

  return result_2969568167;

}

function get_2969568156(self_2969568158) {
  var result_2969568159 = {};

    if (isNone_2969568164(self_2969568158)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969568159 = self_2969568158.val;

  return result_2969568159;

}

function repeat_2969568240(x_2969568242, n_2969568243) {
  var result_2969568244 = [];

    result_2969568244 = nimCopy(null, newSeq_503316959(n_2969568243), NTI503316776);
    Label1: {
      var i_2969568252 = 0;
      var colontmp__536872693 = 0;
      colontmp__536872693 = n_2969568243;
      var i_536872694 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872694 < colontmp__536872693)) break Label3;
            i_2969568252 = i_536872694;
            result_2969568244[chckIndx(i_2969568252, 0, (result_2969568244).length - 1)] = nimCopy(null, x_2969568242, NTI33554449);
            i_536872694 = addInt(i_536872694, 1);
          }
      };
    };

  return result_2969568244;

}

function formatValue_2969568259(result_2969568261, result_2969568261_Idx, value_2969568262, specifier_2969568263) {
    formatValue_738197675(result_2969568261, result_2969568261_Idx, HEX24_2634035733(value_2969568262), specifier_2969568263);

  
}

function serializeNodeHtml_2969567722(self_2969567723, node_2969567724, theme_2969567725) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2969567726 = [];

    if ((node_2969567724.node == null)) {
    Temporary1 = [];
    }
    else {
      var fmtRes_2969567734 = [mnewString(0)];
      fmtRes_2969567734[0].push.apply(fmtRes_2969567734[0], [105,100,61,34,105,100,45]);;
      formatValue_2801795292(fmtRes_2969567734, 0, node_2969567724.node.id, []);
      fmtRes_2969567734[0].push.apply(fmtRes_2969567734[0], [34]);;
    Temporary1 = fmtRes_2969567734[0];
    }
    
    var id_2969567740 = nimCopy(null, Temporary1, NTI33554449);
    if ((0 < (node_2969567724.text).length)) {
    var color_2969568130 = toHtmlHex_2365587896(anyColor_2969567741(theme_2969567725, node_2969567724.colors, rgb_2382364759(255, 255, 255)));
    var style_2969568131 = tokenFontStyle_2499805872(theme_2969567725, node_2969567724.colors);
      var oHEX60gensym11_2969568134 = nimCopy(null, node_2969567724.styleOverride, NTI2868903981);
      if (!isSome_2969568139(oHEX60gensym11_2969568134)) Temporary2 = false; else {        var override_2969568179 = nimCopy(null, get_2969568156(oHEX60gensym11_2969568134), NTI2868903976);
        Temporary2 = true;      }    if (Temporary2) {
    style_2969568131 = nimCopy(style_2969568131, SetPlus(style_2969568131, override_2969568179), NTI2499805632);
    }
    
    if ((style_2969568131[2] != undefined)) {
    Temporary3 = [98,111,108,100];
    }
    else {
    Temporary3 = [110,111,114,109,97,108];
    }
    
    var fontWeight_2969568189 = nimCopy(null, Temporary3, NTI33554449);
    if ((style_2969568131[0] != undefined)) {
    Temporary4 = [105,116,97,108,105,99];
    }
    else {
    Temporary4 = [110,111,114,109,97,108];
    }
    
    var fontStyle_2969568194 = nimCopy(null, Temporary4, NTI33554449);
    if ((style_2969568131[1] != undefined)) {
    Temporary5 = [117,110,100,101,114,108,105,110,101];
    }
    else {
    Temporary5 = [];
    }
    
    var decoration_2969568199 = nimCopy(null, Temporary5, NTI33554449);
    var text_2969568200 = nimCopy(null, node_2969567724.text, NTI33554449);
    if ((!((node_2969567724.node == null)) && !(HEX3DHEX3D_2298478667(node_2969567724.node.reff, null_2298478708)))) {
    var fmtRes_2969568208 = [mnewString(0)];
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [60,97,32]);;
    formatValue_738197675(fmtRes_2969568208, 0, id_2969567740, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [32,104,114,101,102,61,34,35,105,100,45]);;
    formatValue_2801795292(fmtRes_2969568208, 0, node_2969567724.node.reff, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32]);;
    formatValue_738197675(fmtRes_2969568208, 0, color_2969568130, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [59,32,102,111,110,116,45,119,101,105,103,104,116,58,32]);;
    formatValue_738197675(fmtRes_2969568208, 0, fontWeight_2969568189, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [59,32,102,111,110,116,45,115,116,121,108,101,58,32]);;
    formatValue_738197675(fmtRes_2969568208, 0, fontStyle_2969568194, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [59,32,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32]);;
    formatValue_738197675(fmtRes_2969568208, 0, decoration_2969568199, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [34,62]);;
    formatValue_738197675(fmtRes_2969568208, 0, text_2969568200, []);
    fmtRes_2969568208[0].push.apply(fmtRes_2969568208[0], [60,47,97,62]);;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568208[0]);;
    }
    else {
      var classes_2969568214 = [];
      if (!((node_2969567724.node == null))) {
      classes_2969568214.push.apply(classes_2969568214, [32,100,101,102]);;
      }
      
      var fmtRes_2969568222 = [mnewString(0)];
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [60,115,112,97,110,32]);;
      formatValue_738197675(fmtRes_2969568222, 0, id_2969567740, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [32,99,108,97,115,115,61,34]);;
      formatValue_738197675(fmtRes_2969568222, 0, classes_2969568214, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32]);;
      formatValue_738197675(fmtRes_2969568222, 0, color_2969568130, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [59,32,102,111,110,116,45,119,101,105,103,104,116,58,32]);;
      formatValue_738197675(fmtRes_2969568222, 0, fontWeight_2969568189, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [59,32,102,111,110,116,45,115,116,121,108,101,58,32]);;
      formatValue_738197675(fmtRes_2969568222, 0, fontStyle_2969568194, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [59,32,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32]);;
      formatValue_738197675(fmtRes_2969568222, 0, decoration_2969568199, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [34,62]);;
      formatValue_738197675(fmtRes_2969568222, 0, text_2969568200, []);
      fmtRes_2969568222[0].push.apply(fmtRes_2969568222[0], [60,47,115,112,97,110,62]);;
      result_2969567726.push.apply(result_2969567726, fmtRes_2969568222[0]);;
    }
    
    }
    else {
    if ((!((node_2969567724.node == null)) && (node_2969567724.node.kind == 0))) {
    if ((0 < (node_2969567724.node.text).length)) {
    Temporary6 = node_2969567724.node.text;
    }
    else {
    Temporary6 = [32];
    }
    
    var text_2969568231 = nimCopy(null, Temporary6, NTI33554449);
    var fmtRes_2969568236 = [mnewString(0)];
    fmtRes_2969568236[0].push.apply(fmtRes_2969568236[0], [60,115,112,97,110,32]);;
    formatValue_738197675(fmtRes_2969568236, 0, id_2969567740, []);
    fmtRes_2969568236[0].push.apply(fmtRes_2969568236[0], makeNimstrLit("\" style=\"color: #fff; border: 1px solid red; white-space: pre-wrap;\">"));;
    formatValue_738197675(fmtRes_2969568236, 0, text_2969568231, []);
    fmtRes_2969568236[0].push.apply(fmtRes_2969568236[0], [60,47,115,112,97,110,62]);;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568236[0]);;
    }
    }
    if ((0 < (node_2969567724.children).length)) {
    if ((0 < node_2969567724.indent)) {
    var indent_2969568253 = repeat_2969568240([32], chckRange(mulInt(node_2969567724.indent, 2), 0, 2147483647));
    var fmtRes_2969568258 = [mnewString(0)];
    fmtRes_2969568258[0].push.apply(fmtRes_2969568258[0], [60,115,112,97,110,32,115,116,121,108,101,61,34,119,104,105,116,101,45,115,112,97,99,101,58,32,112,114,101,45,119,114,97,112,59,34,62]);;
    formatValue_2969568259(fmtRes_2969568258, 0, indent_2969568253, []);
    fmtRes_2969568258[0].push.apply(fmtRes_2969568258[0], [60,47,115,112,97,110,62]);;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568258[0]);;
    }
    
    if ((node_2969567724.orientation == 1)) {
    var fmtRes_2969568275 = mnewString(0);
    fmtRes_2969568275.push.apply(fmtRes_2969568275, makeNimstrLit("<div class=\"collapsible inline-block\" style=\"color: white; display: inline-block\">-</div>"));;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568275);;
    }
    
    var fmtRes_2969568280 = [mnewString(0)];
    fmtRes_2969568280[0].push.apply(fmtRes_2969568280[0], [60,100,105,118,32]);;
    formatValue_738197675(fmtRes_2969568280, 0, id_2969567740, []);
    fmtRes_2969568280[0].push.apply(fmtRes_2969568280[0], [32,99,108,97,115,115,61,34,99,111,110,116,101,110,116,32,105,110,108,105,110,101,45,98,108,111,99,107,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,105,110,108,105,110,101,45,98,108,111,99,107,34,62,10]);;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568280[0]);;
    Label7: {
      var i_2969568304 = 0;
      var child_2969568305 = null;
      var i_536872681 = 0;
      var L_536872682 = (node_2969567724.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872681 < L_536872682)) break Label9;
            i_2969568304 = i_536872681;
            child_2969568305 = node_2969567724.children[chckIndx(i_536872681, 0, (node_2969567724.children).length - 1)];
            var childHtml_2969568306 = serializeNodeHtml_2969567722(self_2969567723, child_2969568305, theme_2969567725);
            if ((((0 < i_2969568304) && (0 < (childHtml_2969568306).length)) && (node_2969567724.orientation == 1))) {
            result_2969567726.push.apply(result_2969567726, [60,98,114,32,109,121,45,105,110,100,101,110,116,61,34,49,34,62,10]);;
            }
            
            result_2969567726.push.apply(result_2969567726, childHtml_2969568306);;
            i_536872681 = addInt(i_536872681, 1);
            if (!(((node_2969567724.children).length == L_536872682))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var fmtRes_2969568315 = mnewString(0);
    fmtRes_2969568315.push.apply(fmtRes_2969568315, [60,47,100,105,118,62,10]);;
    result_2969567726.push.apply(result_2969567726, fmtRes_2969568315);;
    }
    

  return result_2969567726;

}

function serializeLayoutHtml_2969568316(self_2969568317, layout_2969568318, theme_2969568319) {
  var result_2969568320 = [];

    result_2969568320 = nimCopy(null, [], NTI33554449);
    var i_2969568321 = 0;
    var addedDiv_2969568322 = false;
    Label1: {
      var line_2969568326 = null;
      var i_536872676 = 0;
      var L_536872677 = (layout_2969568318.root.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872676 < L_536872677)) break Label3;
            line_2969568326 = layout_2969568318.root.children[chckIndx(i_536872676, 0, (layout_2969568318.root.children).length - 1)];
            Label4: {
              var lineHtml_2969568327 = serializeNodeHtml_2969567722(self_2969568317, line_2969568326, theme_2969568319);
              if (((lineHtml_2969568327).length == 0)) {
              break Label4;
              }
              
              if ((i_2969568321 == 1)) {
              addedDiv_2969568322 = true;
              var fmtRes_2969568332 = mnewString(0);
              fmtRes_2969568332.push.apply(fmtRes_2969568332, [60,100,105,118,32,99,108,97,115,115,61,34,99,111,108,108,97,112,115,105,98,108,101,32,98,108,111,99,107,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,59,34,62,45,60,47,100,105,118,62]);;
              result_2969568320.push.apply(result_2969568320, fmtRes_2969568332);;
              var fmtRes_2969568337 = mnewString(0);
              fmtRes_2969568337.push.apply(fmtRes_2969568337, [60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,116,101,110,116,34,62]);;
              result_2969568320.push.apply(result_2969568320, fmtRes_2969568337);;
              }
              
              result_2969568320.push.apply(result_2969568320, lineHtml_2969568327);;
              result_2969568320.push.apply(result_2969568320, [60,98,114,32,109,121,45,105,110,100,101,110,116,61,34,50,34,62,10]);;
              i_2969568321 = addInt(i_2969568321, 1);
            };
            i_536872676 = addInt(i_536872676, 1);
            if (!(((layout_2969568318.root.children).length == L_536872677))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (addedDiv_2969568322) {
    var fmtRes_2969568347 = mnewString(0);
    fmtRes_2969568347.push.apply(fmtRes_2969568347, [60,47,100,105,118,62]);;
    result_2969568320.push.apply(result_2969568320, fmtRes_2969568347);;
    }
    

  return result_2969568320;

}

function len_2969568415(t_2969568418) {
  var result_2969568419 = 0;

    result_2969568419 = t_2969568418.counter;

  return result_2969568419;

}

function len_2969568806(t_2969568809) {
  var result_2969568810 = 0;

    result_2969568810 = t_2969568809.counter;

  return result_2969568810;

}

function serializeHtml_2969568348(self_2969568349, theme_2969568350) {
  var result_2969568351 = [];

  BeforeRet: {
    var title_2969568352 = nimCopy(null, nossplitFile(self_2969568349.filename).Field1, NTI33554449);
    var body_2969568353 = [];
    var diagnosticsCss_2969568354 = [];
    Label1: {
      var c_2969568358 = null;
      var i_536872647 = 0;
      var L_536872648 = (self_2969568349.rootNode.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872647 < L_536872648)) break Label3;
            c_2969568358 = self_2969568349.rootNode.children[chckIndx(i_536872647, 0, (self_2969568349.rootNode.children).length - 1)];
            var input_2969568359 = getOrCreateNodeLayoutInput_2785085703(ctx_2734686259, {node: c_2969568358, renderDivisionVertically: true, id: ({id: 0}), selectedNode: ({id: 0}), replacements: ({data: [], counter: 0}), revision: 0});
            var layout_2969568360 = computeNodeLayout_2785123477(ctx_2734686259, input_2969568359, true);
            var html_2969568361 = serializeLayoutHtml_2969568316(self_2969568349, layout_2969568360, theme_2969568350);
            var fmtRes_2969568366 = [mnewString(0)];
            fmtRes_2969568366[0].push.apply(fmtRes_2969568366[0], [60,100,105,118,32,99,108,97,115,115,61,34,99,111,100,101,34,62]);;
            formatValue_738197675(fmtRes_2969568366, 0, html_2969568361, []);
            fmtRes_2969568366[0].push.apply(fmtRes_2969568366[0], [60,47,100,105,118,62,60,98,114,62,10]);;
            body_2969568353.push.apply(body_2969568353, fmtRes_2969568366[0]);;
            Label4: {
              var id_2969568650 = ({id: 0});
              var visualRange_2969568651 = ({parent: null, first: 0, last: 0});
              var L_536872639 = len_2969568415(layout_2969568360.nodeToVisualNode);
              Label5: {
                var h_536872641 = 0;
                var colontmp__536872642 = 0;
                colontmp__536872642 = (layout_2969568360.nodeToVisualNode.data).length - 1;
                var res_536872643 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!(res_536872643 <= colontmp__536872642)) break Label7;
                      h_536872641 = res_536872643;
                      if (isFilled_1342177312(layout_2969568360.nodeToVisualNode.data[chckIndx(h_536872641, 0, (layout_2969568360.nodeToVisualNode.data).length - 1)].Field0)) {
                      var colontmp__536872646 = nimCopy(null, {Field0: nimCopy(null, layout_2969568360.nodeToVisualNode.data[chckIndx(h_536872641, 0, (layout_2969568360.nodeToVisualNode.data).length - 1)].Field1, NTI2298478595), Field1: nimCopy(null, layout_2969568360.nodeToVisualNode.data[chckIndx(h_536872641, 0, (layout_2969568360.nodeToVisualNode.data).length - 1)].Field2, NTI2868903966)}, NTI2969567907);
                      id_2969568650 = nimCopy(id_2969568650, colontmp__536872646["Field0"], NTI2298478595);
                      visualRange_2969568651 = nimCopy(visualRange_2969568651, colontmp__536872646["Field1"], NTI2868903966);
                      if (contains_2785135997(ctx_2734686259.diagnosticsPerNode, id_2969568650)) {
                      var foundErrors_2969568699 = false;
                      Label8: {
                        var diagnostics_2969568979 = [];
                        var colontmp__536872624 = ({data: [], counter: 0});
                        colontmp__536872624 = nimCopy(colontmp__536872624, HEX5BHEX5D_2785132639(ctx_2734686259.diagnosticsPerNode, id_2969568650).queries, NTI2785017870);
                        var L_536872629 = len_2969568806(colontmp__536872624);
                        Label9: {
                          var h_536872631 = 0;
                          var colontmp__536872632 = 0;
                          colontmp__536872632 = (colontmp__536872624.data).length - 1;
                          var res_536872633 = 0;
                          Label10: {
                              Label11: while (true) {
                              if (!(res_536872633 <= colontmp__536872632)) break Label11;
                                h_536872631 = res_536872633;
                                if (isFilled_1342177312(colontmp__536872624.data[chckIndx(h_536872631, 0, (colontmp__536872624.data).length - 1)].Field0)) {
                                diagnostics_2969568979 = colontmp__536872624.data[chckIndx(h_536872631, 0, (colontmp__536872624.data).length - 1)]["Field2"];
                                Label12: {
                                  var diagnostic_2969569001 = ({message: []});
                                  var i_536872621 = 0;
                                  var L_536872622 = (diagnostics_2969568979).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872621 < L_536872622)) break Label14;
                                        diagnostic_2969569001 = diagnostics_2969568979[chckIndx(i_536872621, 0, (diagnostics_2969568979).length - 1)];
                                        foundErrors_2969568699 = true;
                                        i_536872621 = addInt(i_536872621, 1);
                                        if (!(((diagnostics_2969568979).length == L_536872622))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (!((len_2969568806(colontmp__536872624) == L_536872629))) {
                                failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                                }
                                
                                }
                                
                                res_536872633 = addInt(res_536872633, 1);
                              }
                          };
                        };
                      };
                      if (foundErrors_2969568699) {
                      var fmtRes_2969569006 = [mnewString(0)];
                      fmtRes_2969569006[0].push.apply(fmtRes_2969569006[0], [35,105,100,45]);;
                      formatValue_2801795292(fmtRes_2969569006, 0, id_2969568650, []);
                      fmtRes_2969569006[0].push.apply(fmtRes_2969569006[0], [32,123,10,32,32,98,111,114,100,101,114,58,32,49,112,120,32,115,111,108,105,100,32,114,101,100,59,10,125,10]);;
                      diagnosticsCss_2969568354.push.apply(diagnosticsCss_2969568354, fmtRes_2969569006[0]);;
                      }
                      
                      }
                      
                      if (!((len_2969568415(layout_2969568360.nodeToVisualNode) == L_536872639))) {
                      failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
                      }
                      
                      }
                      
                      res_536872643 = addInt(res_536872643, 1);
                    }
                };
              };
            };
            i_536872647 = addInt(i_536872647, 1);
            if (!(((self_2969568349.rootNode.children).length == L_536872648))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var fmtRes_2969569016 = [mnewString(0)];
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_738197675(fmtRes_2969569016, 0, title_2969568352, []);
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_738197675(fmtRes_2969569016, 0, diagnosticsCss_2969568354, []);
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_738197675(fmtRes_2969569016, 0, title_2969568352, []);
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_738197675(fmtRes_2969569016, 0, title_2969568352, []);
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_738197675(fmtRes_2969569016, 0, body_2969568353, []);
    fmtRes_2969569016[0].push.apply(fmtRes_2969569016[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_2969568351 = nimCopy(null, fmtRes_2969569016[0], NTI33554449);
    break BeforeRet;
  };

  return result_2969568351;

}

function saveHtml_2734691179(self_2734691180) {
    var pathParts_2734691181 = nossplitFile(self_2734691180.filename);
    var htmlPath_2734691182 = HEX2F_1459617878(pathParts_2734691181.Field0, (pathParts_2734691181.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2734691183 = serializeHtml_2969568348(self_2734691180, gEditor_1325400204[0].theme);

  
}

function save_2734691184(self_2734691185, filename_2734691186) {
    var Temporary1;

    if ((0 < (filename_2734691186).length)) {
    Temporary1 = filename_2734691186;
    }
    else {
    Temporary1 = self_2734691185.filename;
    }
    
    self_2734691185.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2734691185.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2734691192 = [mnewString(0)];
    fmtRes_2734691192[0].push.apply(fmtRes_2734691192[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_738197675(fmtRes_2734691192, 0, self_2734691185.filename, []);
    fmtRes_2734691192[0].push.apply(fmtRes_2734691192[0], [39]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734691192[0], NTI33554449)]);
    var serialized_2734691193 = toJson_2768242909(self_2734691185.rootNode, initToJsonOptions_1845493794());
    saveHtml_2734691179(self_2734691185);

  
}

function save_2634024514(self_2634024515, filename_2634024516) {
    var Temporary1;

    if ((0 < (filename_2634024516).length)) {
    Temporary1 = filename_2634024516;
    }
    else {
    Temporary1 = self_2634024515.filename;
    }
    
    self_2634024515.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2634024515.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}

function save_2164260872(self_2164260873, filename_2164260874) {
  
}

function save_2164260875(self_2164260873, filename_2164260874) {
    chckNilDisp(self_2164260873);
    if (isObj(self_2164260873.m_type, NTI2734687752)) {
    save_2734691184(self_2164260873, filename_2164260874);
    }
    else {
    if (isObj(self_2164260873.m_type, NTI2634023047)) {
    save_2634024514(self_2164260873, filename_2164260874);
    }
    else {
    if (isObj(self_2164260873.m_type, NTI2164260868)) {
    save_2164260872(self_2164260873, filename_2164260874);
    }
    }}

  
}

function load_2734691194(self_2734691195, filename_2734691196) {
    var Temporary1;

    if ((0 < (filename_2734691196).length)) {
    Temporary1 = filename_2734691196;
    }
    else {
    Temporary1 = self_2734691195.filename;
    }
    
    var filename_2734691197 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2734691197).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2734691195.filename = nimCopy(null, filename_2734691197, NTI33554449);
    var fmtRes_2734691203 = [mnewString(0)];
    fmtRes_2734691203[0].push.apply(fmtRes_2734691203[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_738197675(fmtRes_2734691203, 0, self_2734691195.filename, []);
    fmtRes_2734691203[0].push.apply(fmtRes_2734691203[0], [39]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734691203[0], NTI33554449)]);
    if (self_2734691195.undoOps.length < 0) { for (var i = self_2734691195.undoOps.length ; i < 0 ; ++i) self_2734691195.undoOps.push(null); }
               else { self_2734691195.undoOps.length = 0; };
    if (self_2734691195.redoOps.length < 0) { for (var i = self_2734691195.redoOps.length ; i < 0 ; ++i) self_2734691195.redoOps.push(null); }
               else { self_2734691195.redoOps.length = 0; };
    saveHtml_2734691179(self_2734691195);

  
}

function load_2634024518(self_2634024519, filename_2634024520) {
    var Temporary1;

    if ((0 < (filename_2634024520).length)) {
    Temporary1 = filename_2634024520;
    }
    else {
    Temporary1 = self_2634024519.filename;
    }
    
    var filename_2634024521 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2634024521).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2634024519.filename = nimCopy(null, filename_2634024521, NTI33554449);

  
}

function load_2164260876(self_2164260877, filename_2164260878) {
  
}

function load_2164260879(self_2164260877, filename_2164260878) {
    chckNilDisp(self_2164260877);
    if (isObj(self_2164260877.m_type, NTI2734687752)) {
    load_2734691194(self_2164260877, filename_2164260878);
    }
    else {
    if (isObj(self_2164260877.m_type, NTI2634023047)) {
    load_2634024518(self_2164260877, filename_2164260878);
    }
    else {
    if (isObj(self_2164260877.m_type, NTI2164260868)) {
    load_2164260876(self_2164260877, filename_2164260878);
    }
    }}

  
}

function deinit_2717909112(self_2717909113) {
  
}

function stop_2667577371(self_2667577372) {
  
}

function stop_2667577373(self_2667577372) {
    stop_2667577371(self_2667577372);

  
}

function get_2634024458(self_2634024460) {
  var result_2634024461 = null;
  var result_2634024461_Idx = 0;

  BeforeRet: {
    if (isNone_2634024466(self_2634024460)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634024461 = self_2634024460; result_2634024461_Idx = "val";
    break BeforeRet;
  };

  return [result_2634024461, result_2634024461_Idx];

}

function destroy_2634024429(self_2634024430) {
    var Temporary1;

    if (!((self_2634024430.tsParser == null))) {
    deinit_2717909112(self_2634024430.tsParser);
    self_2634024430.tsParser = null;
    }
    
    if (isSome_2634024438(self_2634024430.languageServer)) {
    stop_2667577373((Temporary1 = get_2634024458(self_2634024430.languageServer), Temporary1)[0][Temporary1[1]]);
    self_2634024430.languageServer = nimCopy(self_2634024430.languageServer, none_2634024484(), NTI2634023106);
    }
    

  
}

function shutdown_2634024509(self_2634024510) {
    destroy_2634024429(self_2634024510.document);

  
}

function shutdown_2181038107(self_2181038108) {
  
}

function shutdown_2181038109(self_2181038108) {
    chckNilDisp(self_2181038108);
    if (isObj(self_2181038108.m_type, NTI2634023118)) {
    shutdown_2634024509(self_2181038108);
    }
    else {
    if (isObj(self_2181038108.m_type, NTI2181038084)) {
    shutdown_2181038107(self_2181038108);
    }
    }

  
}

function canEdit_2734694771(self_2734694772, document_2734694773) {
  var result_2734694774 = false;

  BeforeRet: {
    if (isObj(document_2734694773.m_type, NTI2734687752)) {
    result_2734694774 = true;
    break BeforeRet;
    }
    else {
      result_2734694774 = false;
      break BeforeRet;
    }
    
  };

  return result_2734694774;

}

function canEdit_2634025333(self_2634025334, document_2634025335) {
  var result_2634025336 = false;

  BeforeRet: {
    if (isObj(document_2634025335.m_type, NTI2634023047)) {
    result_2634025336 = true;
    break BeforeRet;
    }
    else {
      result_2634025336 = false;
      break BeforeRet;
    }
    
  };

  return result_2634025336;

}

function canEdit_2181038110(self_2181038111, document_2181038112) {
  var result_2181038113 = false;

  BeforeRet: {
    result_2181038113 = false;
    break BeforeRet;
  };

  return result_2181038113;

}

function canEdit_2181038114(self_2181038111, document_2181038112) {
  var result_2181038115 = false;

  BeforeRet: {
    chckNilDisp(self_2181038111);
    if (isObj(self_2181038111.m_type, NTI2734687781)) {
    result_2181038115 = canEdit_2734694771(self_2181038111, document_2181038112);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038111.m_type, NTI2634023118)) {
    result_2181038115 = canEdit_2634025333(self_2181038111, document_2181038112);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038111.m_type, NTI2181038084)) {
    result_2181038115 = canEdit_2181038110(self_2181038111, document_2181038112);
    break BeforeRet;
    }
    }}
  };

  return result_2181038115;

}

function addQuoted_2734694333(s_2734694335, s_2734694335_Idx, x_2734694336) {
    s_2734694335[s_2734694335_Idx].push.apply(s_2734694335[s_2734694335_Idx], HEX24_2768242647(x_2734694336));;

  
}

function HEX24_2734694322(self_2734694324) {
  var result_2734694325 = [[]];

    if (isSome_2768242522(self_2734694324)) {
    result_2734694325[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2734694333(result_2734694325, 0, self_2734694324.val);
    result_2734694325[0].push.apply(result_2734694325[0], [41]);;
    }
    else {
      result_2734694325[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2734694325[0];

}

function formatValue_2734694255(result_2734694257, result_2734694257_Idx, value_2734694258, specifier_2734694259) {
    formatValue_738197675(result_2734694257, result_2734694257_Idx, HEX24_2734694322(value_2734694258), specifier_2734694259);

  
}

function initTable_2768242476(initialSize_2768242479) {
  var result_2768242480 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2768242482 = slotsNeeded_1342177323(chckRange(initialSize_2768242479, 0, 2147483647));
    result_2768242480.counter = 0;
    result_2768242480.data = new Array(chckRange(correctSizeHEX60gensym29_2768242482, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2768242482, 0, 2147483647) ; ++i) { result_2768242480.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({id: 0})}; }
  return result_2768242480;

}

function rawGet_2768241047(t_2768241050, key_2768241051, hc_2768241052, hc_2768241052_Idx) {
  var result_2768241053 = 0;

  BeforeRet: {
    hc_2768241052[hc_2768241052_Idx] = hash_2298478681(key_2768241051);
    if ((hc_2768241052[hc_2768241052_Idx] == 0)) {
    hc_2768241052[hc_2768241052_Idx] = 314159265;
    }
    
    if (((t_2768241050.data).length == 0)) {
    result_2768241053 = -1;
    break BeforeRet;
    }
    
    var h_2768241104 = (hc_2768241052[hc_2768241052_Idx] & (t_2768241050.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2768241050.data[chckIndx(h_2768241104, 0, (t_2768241050.data).length - 1)].Field0)) break Label2;
          if (((t_2768241050.data[chckIndx(h_2768241104, 0, (t_2768241050.data).length - 1)].Field0 == hc_2768241052[hc_2768241052_Idx]) && HEX3DHEX3D_2298478667(t_2768241050.data[chckIndx(h_2768241104, 0, (t_2768241050.data).length - 1)].Field1, key_2768241051))) {
          result_2768241053 = h_2768241104;
          break BeforeRet;
          }
          
          h_2768241104 = nextTry_1342177315(h_2768241104, (t_2768241050.data).length - 1);
        }
    };
    result_2768241053 = subInt(-1, h_2768241104);
  };

  return result_2768241053;

}

function mustRehash_2768241392(t_2768241394) {
  var result_2768241395 = false;

    if (!((t_2768241394.counter < (t_2768241394.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2768241395 = ((mulInt((t_2768241394.data).length, 2) < mulInt(t_2768241394.counter, 3)) || (subInt((t_2768241394.data).length, t_2768241394.counter) < 4));

  return result_2768241395;

}

function rawInsert_2768241841(t_2768241845, data_2768241846, data_2768241846_Idx, key_2768241847, val_2768241848, hc_2768241849, h_2768241850) {
    data_2768241846[data_2768241846_Idx][chckIndx(h_2768241850, 0, (data_2768241846[data_2768241846_Idx]).length - 1)].Field1 = nimCopy(data_2768241846[data_2768241846_Idx][chckIndx(h_2768241850, 0, (data_2768241846[data_2768241846_Idx]).length - 1)].Field1, key_2768241847, NTI2298478595);
    data_2768241846[data_2768241846_Idx][chckIndx(h_2768241850, 0, (data_2768241846[data_2768241846_Idx]).length - 1)].Field2 = nimCopy(data_2768241846[data_2768241846_Idx][chckIndx(h_2768241850, 0, (data_2768241846[data_2768241846_Idx]).length - 1)].Field2, val_2768241848, NTI2298478595);
    data_2768241846[data_2768241846_Idx][chckIndx(h_2768241850, 0, (data_2768241846[data_2768241846_Idx]).length - 1)].Field0 = hc_2768241849;

  
}

function enlarge_2768241547(t_2768241550) {
    var n_2768241553 = [];
    n_2768241553 = new Array(chckRange(mulInt((t_2768241550.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2768241550.data).length, 2), 0, 2147483647) ; ++i) { n_2768241553[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({id: 0})}; }    var Temporary1 = t_2768241550.data; t_2768241550.data = n_2768241553; n_2768241553 = Temporary1;    Label2: {
      var i_2768241617 = 0;
      var colontmp__536872748 = 0;
      colontmp__536872748 = (n_2768241553).length - 1;
      var res_536872749 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872749 <= colontmp__536872748)) break Label4;
            i_2768241617 = res_536872749;
            var eh_2768241671 = n_2768241553[chckIndx(i_2768241617, 0, (n_2768241553).length - 1)].Field0;
            if (isFilled_1342177312(eh_2768241671)) {
            var j_2768241675 = (eh_2768241671 & (t_2768241550.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2768241550.data[chckIndx(j_2768241675, 0, (t_2768241550.data).length - 1)].Field0)) break Label6;
                  j_2768241675 = nextTry_1342177315(j_2768241675, (t_2768241550.data).length - 1);
                }
            };
            rawInsert_2768241841(t_2768241550, t_2768241550, "data", n_2768241553[chckIndx(i_2768241617, 0, (n_2768241553).length - 1)].Field1, n_2768241553[chckIndx(i_2768241617, 0, (n_2768241553).length - 1)].Field2, eh_2768241671, j_2768241675);
            }
            
            res_536872749 = addInt(res_536872749, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2768242010(t_2768242013, key_2768242014, hc_2768242015) {
  var result_2768242016 = 0;

  BeforeRet: {
    if (((t_2768242013.data).length == 0)) {
    result_2768242016 = -1;
    break BeforeRet;
    }
    
    var h_2768242067 = (hc_2768242015 & (t_2768242013.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2768242013.data[chckIndx(h_2768242067, 0, (t_2768242013.data).length - 1)].Field0)) break Label2;
          if (((t_2768242013.data[chckIndx(h_2768242067, 0, (t_2768242013.data).length - 1)].Field0 == hc_2768242015) && HEX3DHEX3D_2298478667(t_2768242013.data[chckIndx(h_2768242067, 0, (t_2768242013.data).length - 1)].Field1, key_2768242014))) {
          result_2768242016 = h_2768242067;
          break BeforeRet;
          }
          
          h_2768242067 = nextTry_1342177315(h_2768242067, (t_2768242013.data).length - 1);
        }
    };
    result_2768242016 = subInt(-1, h_2768242067);
  };

  return result_2768242016;

}

function HEX5BHEX5DHEX3D_2768240986(t_2768240989, key_2768240990, val_2768240991) {
    if (((t_2768240989.data).length == 0)) {
    var correctSizeHEX60gensym15_2768241041 = slotsNeeded_1342177323(32);
    t_2768240989.counter = 0;
    t_2768240989.data = new Array(chckRange(correctSizeHEX60gensym15_2768241041, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2768241041, 0, 2147483647) ; ++i) { t_2768240989.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({id: 0})}; }    }
    
    var hc_2768241046 = [0];
    var index_2768241285 = rawGet_2768241047(t_2768240989, key_2768240990, hc_2768241046, 0);
    if ((0 <= index_2768241285)) {
    t_2768240989.data[chckIndx(index_2768241285, 0, (t_2768240989.data).length - 1)].Field2 = nimCopy(t_2768240989.data[chckIndx(index_2768241285, 0, (t_2768240989.data).length - 1)].Field2, val_2768240991, NTI2298478595);
    }
    else {
      if (((t_2768240989.data).length == 0)) {
      var correctSizeHEX60gensym20_2768241387 = slotsNeeded_1342177323(32);
      t_2768240989.counter = 0;
      t_2768240989.data = new Array(chckRange(correctSizeHEX60gensym20_2768241387, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2768241387, 0, 2147483647) ; ++i) { t_2768240989.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: ({id: 0})}; }      }
      
      if (mustRehash_2768241392(t_2768240989)) {
      enlarge_2768241547(t_2768240989);
      index_2768241285 = rawGetKnownHC_2768242010(t_2768240989, key_2768240990, hc_2768241046[0]);
      }
      
      index_2768241285 = subInt(-1, index_2768241285);
      rawInsert_2768241841(t_2768240989, t_2768240989, "data", key_2768240990, val_2768240991, hc_2768241046[0], index_2768241285);
      t_2768240989.counter = addInt(t_2768240989.counter, 1);
    }
    

  
}

function add_2768240678(node_2768240679, child_2768240680) {
    if (HEX3DHEX3D_2298478667(node_2768240679.id, null_2298478708)) {
    node_2768240679.id = nimCopy(node_2768240679.id, newId_2298478623(), NTI2298478595);
    }
    
    if (HEX3DHEX3D_2298478667(child_2768240680.id, null_2298478708)) {
    child_2768240680.id = nimCopy(child_2768240680.id, newId_2298478623(), NTI2298478595);
    }
    
    child_2768240680.parent = node_2768240679;
    node_2768240679.children.push(child_2768240680);;

  
}

function clone_2768240934(node_2768240935, idMap_2768240943) {
  var result_2768240944 = null;

    var newNodeId_2768240945 = newId_2298478623();
    result_2768240944 = {kind: node_2768240935.kind, id: nimCopy(null, newNodeId_2768240945, NTI2298478595), reff: nimCopy(null, node_2768240935.reff, NTI2298478595), text: nimCopy(null, node_2768240935.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2768240986(idMap_2768240943, node_2768240935.id, newNodeId_2768240945);
    Label1: {
      var child_2768242251 = null;
      var i_536872742 = 0;
      var L_536872743 = (node_2768240935.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872742 < L_536872743)) break Label3;
            child_2768242251 = node_2768240935.children[chckIndx(i_536872742, 0, (node_2768240935.children).length - 1)];
            add_2768240678(result_2768240944, clone_2768240934(child_2768242251, idMap_2768240943));
            i_536872742 = addInt(i_536872742, 1);
            if (!(((node_2768240935.children).length == L_536872743))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2768240944;

}

function hasKey_2768242323(t_2768242326, key_2768242327) {
  var result_2768242328 = false;

    var hc_2768242329 = [0];
    result_2768242328 = (0 <= rawGet_2768241047(t_2768242326, key_2768242327, hc_2768242329, 0));

  return result_2768242328;

}

function contains_2768242317(t_2768242320, key_2768242321) {
  var result_2768242322 = false;

  BeforeRet: {
    result_2768242322 = hasKey_2768242323(t_2768242320, key_2768242321);
    break BeforeRet;
  };

  return result_2768242322;

}

function HEX5BHEX5D_2768242389(t_2768242392, key_2768242393) {
  var result_2768242394 = null;

    var hcHEX60gensym22_2768242395 = [0];
    var indexHEX60gensym22_2768242402 = rawGet_2768241047(t_2768242392, key_2768242393, hcHEX60gensym22_2768242395, 0);
    if ((0 <= indexHEX60gensym22_2768242402)) {
    result_2768242394 = t_2768242392.data[chckIndx(indexHEX60gensym22_2768242402, 0, (t_2768242392.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2768242456(key_2768242393);
    }
    

  return result_2768242394;

}

function replaceReferences_2768242270(node_2768242271, idMap_2768242274) {
    if (contains_2768242317(idMap_2768242274, node_2768242271.reff)) {
    node_2768242271.reff = nimCopy(node_2768242271.reff, HEX5BHEX5D_2768242389(idMap_2768242274, node_2768242271.reff), NTI2298478595);
    }
    
    Label1: {
      var child_2768242472 = null;
      var i_536872753 = 0;
      var L_536872754 = (node_2768242271.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872753 < L_536872754)) break Label3;
            child_2768242472 = node_2768242271.children[chckIndx(i_536872753, 0, (node_2768242271.children).length - 1)];
            replaceReferences_2768242270(child_2768242472, idMap_2768242274);
            i_536872753 = addInt(i_536872753, 1);
            if (!(((node_2768242271.children).length == L_536872754))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2768242473(node_2768242474) {
  var result_2768242475 = null;

  BeforeRet: {
    var idMap_2768242487 = [initTable_2768242476(32)];
    var newNode_2768242488 = clone_2768240934(node_2768242474, idMap_2768242487[0]);
    replaceReferences_2768242270(newNode_2768242488, idMap_2768242487[0]);
    result_2768242475 = newNode_2768242488;
    break BeforeRet;
  };

  return result_2768242475;

}

function handleNodeInserted_2734694241(self_2734694242, doc_2734694243, node_2734694244) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2734694249 = [mnewString(0)];
    fmtRes_2734694249[0].push.apply(fmtRes_2734694249[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_2868904741(fmtRes_2734694249, 0, node_2734694244, []);
    fmtRes_2734694249[0].push.apply(fmtRes_2734694249[0], [44,32]);;
    formatValue_2734694255(fmtRes_2734694249, 0, self_2734694242.deletedNode, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694249[0], NTI33554449)]);
      var oHEX60gensym110_2734694345 = nimCopy(null, self_2734694242.deletedNode, NTI2768240759);
      if (!isSome_2768242522(oHEX60gensym110_2734694345)) Temporary2 = false; else {        var deletedNode_2734694368 = get_2768242542(oHEX60gensym110_2734694345);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2734694368 == node_2734694244);      }    if (Temporary1) {
    self_2734694242.deletedNode = nimCopy(self_2734694242.deletedNode, some_2768240866(cloneAndMapIds_2768242473(node_2734694244)), NTI2768240759);
    var fmtRes_2734694380 = mnewString(0);
    fmtRes_2734694380.push.apply(fmtRes_2734694380, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694380, NTI33554449)]);
    }
    

  
}

function getOrDefault_2785080072(t_2785080075, key_2785080076, default_2785080077) {
    var Temporary1;

  var result_2785080078 = null;

    var hcHEX60gensym432_2785080081 = [0];
    var indexHEX60gensym432_2785080088 = rawGet_2785018988(t_2785080075, key_2785080076, hcHEX60gensym432_2785080081, 0);
    if ((0 <= indexHEX60gensym432_2785080088)) {
    Temporary1 = t_2785080075.data[chckIndx(indexHEX60gensym432_2785080088, 0, (t_2785080075.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2785080077;
    }
    
    result_2785080078 = Temporary1;

  return result_2785080078;

}

function newDoublyLinkedNode_2785080204(value_2785080206) {
  var result_2785080207 = null;

    result_2785080207 = ({next: null, prev: null, value: ({key: {Field0: ({id: 0}), Field1: 0}, val: null})});
    result_2785080207.value = nimCopy(result_2785080207.value, value_2785080206, NTI2785017918);

  return result_2785080207;

}

function mustRehash_2785080545(t_2785080547) {
  var result_2785080548 = false;

    if (!((t_2785080547.counter < (t_2785080547.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2785080548 = ((mulInt((t_2785080547.data).length, 2) < mulInt(t_2785080547.counter, 3)) || (subInt((t_2785080547.data).length, t_2785080547.counter) < 4));

  return result_2785080548;

}

function rawInsert_2785081238(t_2785081242, data_2785081243, data_2785081243_Idx, key_2785081244, val_2785081245, hc_2785081246, h_2785081247) {
    data_2785081243[data_2785081243_Idx][chckIndx(h_2785081247, 0, (data_2785081243[data_2785081243_Idx]).length - 1)].Field1 = nimCopy(data_2785081243[data_2785081243_Idx][chckIndx(h_2785081247, 0, (data_2785081243[data_2785081243_Idx]).length - 1)].Field1, key_2785081244, NTI2801795097);
    data_2785081243[data_2785081243_Idx][chckIndx(h_2785081247, 0, (data_2785081243[data_2785081243_Idx]).length - 1)].Field2 = val_2785081245;
    data_2785081243[data_2785081243_Idx][chckIndx(h_2785081247, 0, (data_2785081243[data_2785081243_Idx]).length - 1)].Field0 = hc_2785081246;

  
}

function enlarge_2785080802(t_2785080805) {
    var n_2785080808 = [];
    n_2785080808 = new Array(chckRange(mulInt((t_2785080805.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2785080805.data).length, 2), 0, 2147483647) ; ++i) { n_2785080808[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2785080805.data; t_2785080805.data = n_2785080808; n_2785080808 = Temporary1;    Label2: {
      var i_2785080906 = 0;
      var colontmp__536872783 = 0;
      colontmp__536872783 = (n_2785080808).length - 1;
      var res_536872784 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872784 <= colontmp__536872783)) break Label4;
            i_2785080906 = res_536872784;
            var eh_2785080987 = n_2785080808[chckIndx(i_2785080906, 0, (n_2785080808).length - 1)].Field0;
            if (isFilled_1342177312(eh_2785080987)) {
            var j_2785080991 = (eh_2785080987 & (t_2785080805.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2785080805.data[chckIndx(j_2785080991, 0, (t_2785080805.data).length - 1)].Field0)) break Label6;
                  j_2785080991 = nextTry_1342177315(j_2785080991, (t_2785080805.data).length - 1);
                }
            };
            rawInsert_2785081238(t_2785080805, t_2785080805, "data", n_2785080808[chckIndx(i_2785080906, 0, (n_2785080808).length - 1)].Field1, n_2785080808[chckIndx(i_2785080906, 0, (n_2785080808).length - 1)].Field2, eh_2785080987, j_2785080991);
            }
            
            res_536872784 = addInt(res_536872784, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2785081488(t_2785081491, key_2785081492, hc_2785081493) {
  var result_2785081494 = 0;

  BeforeRet: {
    if (((t_2785081491.data).length == 0)) {
    result_2785081494 = -1;
    break BeforeRet;
    }
    
    var h_2785081579 = (hc_2785081493 & (t_2785081491.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2785081491.data[chckIndx(h_2785081579, 0, (t_2785081491.data).length - 1)].Field0)) break Label2;
          if (((t_2785081491.data[chckIndx(h_2785081579, 0, (t_2785081491.data).length - 1)].Field0 == hc_2785081493) && HEX3DHEX3D_2785019332(t_2785081491.data[chckIndx(h_2785081579, 0, (t_2785081491.data).length - 1)].Field1, key_2785081492))) {
          result_2785081494 = h_2785081579;
          break BeforeRet;
          }
          
          h_2785081579 = nextTry_1342177315(h_2785081579, (t_2785081491.data).length - 1);
        }
    };
    result_2785081494 = subInt(-1, h_2785081579);
  };

  return result_2785081494;

}

function HEX5BHEX5DHEX3D_2785080277(t_2785080280, key_2785080281, val_2785080282) {
    if (((t_2785080280.data).length == 0)) {
    var correctSizeHEX60gensym435_2785080365 = slotsNeeded_1342177323(32);
    t_2785080280.counter = 0;
    t_2785080280.data = new Array(chckRange(correctSizeHEX60gensym435_2785080365, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym435_2785080365, 0, 2147483647) ; ++i) { t_2785080280.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2785080370 = [0];
    var index_2785080377 = rawGet_2785018988(t_2785080280, key_2785080281, hc_2785080370, 0);
    if ((0 <= index_2785080377)) {
    t_2785080280.data[chckIndx(index_2785080377, 0, (t_2785080280.data).length - 1)].Field2 = val_2785080282;
    }
    else {
      if (((t_2785080280.data).length == 0)) {
      var correctSizeHEX60gensym438_2785080540 = slotsNeeded_1342177323(32);
      t_2785080280.counter = 0;
      t_2785080280.data = new Array(chckRange(correctSizeHEX60gensym438_2785080540, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym438_2785080540, 0, 2147483647) ; ++i) { t_2785080280.data[i] = {Field0: 0, Field1: {Field0: ({id: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2785080545(t_2785080280)) {
      enlarge_2785080802(t_2785080280);
      index_2785080377 = rawGetKnownHC_2785081488(t_2785080280, key_2785080281, hc_2785080370[0]);
      }
      
      index_2785080377 = subInt(-1, index_2785080377);
      rawInsert_2785081238(t_2785080280, t_2785080280, "data", key_2785080281, val_2785080282, hc_2785080370[0], index_2785080377);
      t_2785080280.counter = addInt(t_2785080280.counter, 1);
    }
    

  
}

function len_2785083053(t_2785083056) {
  var result_2785083057 = 0;

    result_2785083057 = t_2785083056.counter;

  return result_2785083057;

}

function len_2785082970(cache_2785082973) {
  var result_2785082974 = 0;

    result_2785082974 = len_2785083053(cache_2785082973.table);

  return result_2785082974;

}

function del_2785084660(t_2785084663, key_2785084664) {
    var hc_2785084665 = [0];
    var i_2785084672 = rawGet_2785018988(t_2785084663, key_2785084664, hc_2785084665, 0);
    var mskHEX60gensym36_2785084676 = (t_2785084663.data).length - 1;
    if ((0 <= i_2785084672)) {
    t_2785084663.counter = subInt(t_2785084663.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2785084683 = i_2785084672;
            var rHEX60gensym36_2785084684 = jHEX60gensym36_2785084683;
            t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field0 = 0;
            t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field1 = nimCopy(t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field1, {Field0: ({id: 0}), Field1: 0}, NTI2801795097);
            t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2785084672 = (addInt(i_2785084672, 1) & mskHEX60gensym36_2785084676);
                  if (isEmpty_1342177309(t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2785084684 = (t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)].Field0 & mskHEX60gensym36_2785084676);
                  if (!(((((rHEX60gensym36_2785084684 <= i_2785084672) && (jHEX60gensym36_2785084683 < rHEX60gensym36_2785084684)) || ((jHEX60gensym36_2785084683 < rHEX60gensym36_2785084684) && (i_2785084672 < jHEX60gensym36_2785084683))) || ((i_2785084672 < jHEX60gensym36_2785084683) && (rHEX60gensym36_2785084684 <= i_2785084672))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2785084663.data[chckIndx(jHEX60gensym36_2785084683, 0, (t_2785084663.data).length - 1)] = nimCopy(t_2785084663.data[chckIndx(jHEX60gensym36_2785084683, 0, (t_2785084663.data).length - 1)], t_2785084663.data[chckIndx(i_2785084672, 0, (t_2785084663.data).length - 1)], NTI2785017954);
          }
      };
    };
    }
    

  
}

function resize_2785082888(cache_2785082891) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2785082891.capacity < len_2785082970(cache_2785082891))) break Label2;
          var t_2785083058 = cache_2785082891.list.tail;
          if (cache_2785082891.recordRemovedKeys) {
          incl_2785083078(cache_2785082891.removedKeys, t_2785083058.value.key);
          }
          
          del_2785084660(cache_2785082891.table, t_2785083058.value.key);
          remove_2785019655(cache_2785082891.list, t_2785083058);
        }
    };

  
}

function addNewNode_2785080196(cache_2785080199, key_2785080200, val_2785080201) {
    var node_2785080213 = newDoublyLinkedNode_2785080204({key: nimCopy(null, key_2785080200, NTI2801795097), val: val_2785080201});
    HEX5BHEX5DHEX3D_2785080277(cache_2785080199.table, key_2785080200, node_2785080213);
    prepend_2785019959(cache_2785080199.list, node_2785080213);
    if (cache_2785080199.recordRemovedKeys) {
    excl_2785081907(cache_2785080199.removedKeys, key_2785080200);
    }
    
    resize_2785082888(cache_2785080199);

  
}

function HEX5BHEX5DHEX3D_2785079977(cache_2785079980, key_2785079981, val_2785079982) {
    var node_2785080169 = getOrDefault_2785080072(cache_2785079980.table, key_2785079981, null);
    if ((node_2785080169 == null)) {
    addNewNode_2785080196(cache_2785079980, key_2785079981, val_2785079982);
    }
    else {
      node_2785080169.value.val = val_2785079982;
      remove_2785019655(cache_2785079980.list, node_2785080169);
      prepend_2785019959(cache_2785079980.list, node_2785080169);
    }
    

  
}

function next_2768240833(node_2768240834) {
  var result_2768240839 = ({val: null});

  BeforeRet: {
    if ((node_2768240834.parent == null)) {
    result_2768240839 = nimCopy(result_2768240839, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    var i_2768240863 = index_2768240748(node_2768240834);
    if ((subInt(len_2768240728(node_2768240834.parent), 1) <= i_2768240863)) {
    result_2768240839 = nimCopy(result_2768240839, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    result_2768240839 = nimCopy(result_2768240839, some_2768240866(HEX5BHEX5D_2768240724(node_2768240834.parent, addInt(i_2768240863, 1))), NTI2768240759);
    break BeforeRet;
  };

  return result_2768240839;

}

function insertNode_2785144248(ctx_2785144249, node_2785144250) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_2785144249.depGraph.revision = addInt(ctx_2785144249.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2801806532(ctx_2785144249.depGraph.changed, {Field0: getItem_2785079817(node_2785144250), Field1: -1}, ctx_2785144249.depGraph.revision);
    if (!((node_2785144250.parent == null))) {
    HEX5BHEX5DHEX3D_2801806532(ctx_2785144249.depGraph.changed, {Field0: getItem_2785079817(node_2785144250.parent), Field1: -1}, ctx_2785144249.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_2785079977(ctx_2785144249.itemsAstNode, getItem_2785079817(node_2785144250), node_2785144250);
    Label1: {
      var key_2785144466 = 0;
      var child_2785144467 = null;
      var n_536872772 = node_2785144250;
      var idx_536872773 = -1;
      var i_536872774 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536872773 == -1)) {
            var colontmp__536872777 = nimCopy(null, {Field0: i_536872774, Field1: n_536872772}, NTI2768241977);
            key_2785144466 = colontmp__536872777["Field0"];
            child_2785144467 = colontmp__536872777["Field1"];
            HEX5BHEX5DHEX3D_2801806532(ctx_2785144249.depGraph.changed, {Field0: getItem_2785079817(child_2785144467), Field1: -1}, ctx_2785144249.depGraph.revision);
            HEX5BHEX5DHEX3D_2785079977(ctx_2785144249.itemsAstNode, getItem_2785079817(child_2785144467), child_2785144467);
            }
            
            if ((addInt(idx_536872773, 1) < len_2768240728(n_536872772))) {
            n_536872772 = HEX5BHEX5D_2768240724(n_536872772, addInt(idx_536872773, 1));
            idx_536872773 = -1;
            }
            else {
              var oHEX60gensym74_536872778 = next_2768240833(n_536872772);
              if (!isSome_2768242522(oHEX60gensym74_536872778)) Temporary5 = false; else {                var ne_536872779 = get_2768242542(oHEX60gensym74_536872778);
                Temporary5 = true;              }            if (Temporary5) {
            n_536872772 = ne_536872779;
            idx_536872773 = -1;
            }
            else {
            if ((!((n_536872772.parent == null)) && !((n_536872772.parent == node_2785144250)))) {
            idx_536872773 = index_2768240748(n_536872772);
            n_536872772 = n_536872772.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536872774 = addInt(i_536872774, 1);
            }
          }
      };
    };
    var parent_2785144606 = node_2785144250.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_2785144606 == null))) Temporary8 = false; else {            var oHEX60gensym829_2785144613 = findWithParentRec_2768242565(parent_2785144606, 11);
            if (!isSome_2768242522(oHEX60gensym829_2785144613)) Temporary9 = false; else {              var child_2785144659 = get_2768242542(oHEX60gensym829_2785144613);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_2785144660 = child_2785144659.parent;
          HEX5BHEX5DHEX3D_2801806532(ctx_2785144249.depGraph.changed, {Field0: getItem_2785079817(functionDefinition_2785144660), Field1: -1}, ctx_2785144249.depGraph.revision);
          parent_2785144606 = functionDefinition_2785144660.parent;
        }
    };

  
}

function rawGet_2969567306(t_2969567309, key_2969567310, hc_2969567311, hc_2969567311_Idx) {
  var result_2969567312 = 0;

  BeforeRet: {
    hc_2969567311[hc_2969567311_Idx] = hash_2298478681(key_2969567310);
    if ((hc_2969567311[hc_2969567311_Idx] == 0)) {
    hc_2969567311[hc_2969567311_Idx] = 314159265;
    }
    
    if (((t_2969567309.data).length == 0)) {
    result_2969567312 = -1;
    break BeforeRet;
    }
    
    var h_2969567364 = (hc_2969567311[hc_2969567311_Idx] & (t_2969567309.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2969567309.data[chckIndx(h_2969567364, 0, (t_2969567309.data).length - 1)].Field0)) break Label2;
          if (((t_2969567309.data[chckIndx(h_2969567364, 0, (t_2969567309.data).length - 1)].Field0 == hc_2969567311[hc_2969567311_Idx]) && HEX3DHEX3D_2298478667(t_2969567309.data[chckIndx(h_2969567364, 0, (t_2969567309.data).length - 1)].Field1, key_2969567310))) {
          result_2969567312 = h_2969567364;
          break BeforeRet;
          }
          
          h_2969567364 = nextTry_1342177315(h_2969567364, (t_2969567309.data).length - 1);
        }
    };
    result_2969567312 = subInt(-1, h_2969567364);
  };

  return result_2969567312;

}

function mustRehash_2734691849(t_2734691851) {
  var result_2734691852 = false;

    if (!((t_2734691851.counter < (t_2734691851.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2734691852 = ((mulInt((t_2734691851.data).length, 2) < mulInt(t_2734691851.counter, 3)) || (subInt((t_2734691851.data).length, t_2734691851.counter) < 4));

  return result_2734691852;

}

function rawInsert_2734692458(t_2734692462, data_2734692463, data_2734692463_Idx, key_2734692464, val_2734692465, hc_2734692466, h_2734692467) {
    data_2734692463[data_2734692463_Idx][chckIndx(h_2734692467, 0, (data_2734692463[data_2734692463_Idx]).length - 1)].Field1 = nimCopy(data_2734692463[data_2734692463_Idx][chckIndx(h_2734692467, 0, (data_2734692463[data_2734692463_Idx]).length - 1)].Field1, key_2734692464, NTI2298478595);
    data_2734692463[data_2734692463_Idx][chckIndx(h_2734692467, 0, (data_2734692463[data_2734692463_Idx]).length - 1)].Field2 = val_2734692465;
    data_2734692463[data_2734692463_Idx][chckIndx(h_2734692467, 0, (data_2734692463[data_2734692463_Idx]).length - 1)].Field0 = hc_2734692466;

  
}

function enlarge_2734692052(t_2734692055) {
    var n_2734692058 = [];
    n_2734692058 = new Array(chckRange(mulInt((t_2734692055.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2734692055.data).length, 2), 0, 2147483647) ; ++i) { n_2734692058[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }    var Temporary1 = t_2734692055.data; t_2734692055.data = n_2734692058; n_2734692058 = Temporary1;    Label2: {
      var i_2734692138 = 0;
      var colontmp__536872793 = 0;
      colontmp__536872793 = (n_2734692058).length - 1;
      var res_536872794 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872794 <= colontmp__536872793)) break Label4;
            i_2734692138 = res_536872794;
            var eh_2734692216 = n_2734692058[chckIndx(i_2734692138, 0, (n_2734692058).length - 1)].Field0;
            if (isFilled_1342177312(eh_2734692216)) {
            var j_2734692220 = (eh_2734692216 & (t_2734692055.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_2734692055.data[chckIndx(j_2734692220, 0, (t_2734692055.data).length - 1)].Field0)) break Label6;
                  j_2734692220 = nextTry_1342177315(j_2734692220, (t_2734692055.data).length - 1);
                }
            };
            rawInsert_2734692458(t_2734692055, t_2734692055, "data", n_2734692058[chckIndx(i_2734692138, 0, (n_2734692058).length - 1)].Field1, n_2734692058[chckIndx(i_2734692138, 0, (n_2734692058).length - 1)].Field2, eh_2734692216, j_2734692220);
            }
            
            res_536872794 = addInt(res_536872794, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2734692699(t_2734692702, key_2734692703, hc_2734692704) {
  var result_2734692705 = 0;

  BeforeRet: {
    if (((t_2734692702.data).length == 0)) {
    result_2734692705 = -1;
    break BeforeRet;
    }
    
    var h_2734692772 = (hc_2734692704 & (t_2734692702.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_2734692702.data[chckIndx(h_2734692772, 0, (t_2734692702.data).length - 1)].Field0)) break Label2;
          if (((t_2734692702.data[chckIndx(h_2734692772, 0, (t_2734692702.data).length - 1)].Field0 == hc_2734692704) && HEX3DHEX3D_2298478667(t_2734692702.data[chckIndx(h_2734692772, 0, (t_2734692702.data).length - 1)].Field1, key_2734692703))) {
          result_2734692705 = h_2734692772;
          break BeforeRet;
          }
          
          h_2734692772 = nextTry_1342177315(h_2734692772, (t_2734692702.data).length - 1);
        }
    };
    result_2734692705 = subInt(-1, h_2734692772);
  };

  return result_2734692705;

}

function HEX5BHEX5DHEX3D_2734691620(t_2734691623, key_2734691624, val_2734691625) {
    if (((t_2734691623.data).length == 0)) {
    var correctSizeHEX60gensym95_2734691690 = slotsNeeded_1342177323(32);
    t_2734691623.counter = 0;
    t_2734691623.data = new Array(chckRange(correctSizeHEX60gensym95_2734691690, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym95_2734691690, 0, 2147483647) ; ++i) { t_2734691623.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }    }
    
    var hc_2734691695 = [0];
    var index_2734691702 = rawGet_2969567306(t_2734691623, key_2734691624, hc_2734691695, 0);
    if ((0 <= index_2734691702)) {
    t_2734691623.data[chckIndx(index_2734691702, 0, (t_2734691623.data).length - 1)].Field2 = val_2734691625;
    }
    else {
      if (((t_2734691623.data).length == 0)) {
      var correctSizeHEX60gensym98_2734691844 = slotsNeeded_1342177323(32);
      t_2734691623.counter = 0;
      t_2734691623.data = new Array(chckRange(correctSizeHEX60gensym98_2734691844, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_2734691844, 0, 2147483647) ; ++i) { t_2734691623.data[i] = {Field0: 0, Field1: ({id: 0}), Field2: null}; }      }
      
      if (mustRehash_2734691849(t_2734691623)) {
      enlarge_2734692052(t_2734691623);
      index_2734691702 = rawGetKnownHC_2734692699(t_2734691623, key_2734691624, hc_2734691695[0]);
      }
      
      index_2734691702 = subInt(-1, index_2734691702);
      rawInsert_2734692458(t_2734691623, t_2734691623, "data", key_2734691624, val_2734691625, hc_2734691695[0], index_2734691702);
      t_2734691623.counter = addInt(t_2734691623.counter, 1);
    }
    

  
}

function handleNodeInserted_2734691534(doc_2734691535, node_2734691536) {
              var Temporary8;

    var fmtRes_2734691541 = [mnewString(0)];
    fmtRes_2734691541[0].push.apply(fmtRes_2734691541[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_2868904741(fmtRes_2734691541, 0, node_2734691536, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734691541[0], NTI33554449)]);
    insertNode_2785144248(ctx_2734686259, node_2734691536);
    Label1: {
      var handler_2734691569 = null;
      var i_536872758 = 0;
      var L_536872759 = (doc_2734691535.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872758 < L_536872759)) break Label3;
            handler_2734691569 = doc_2734691535.onNodeInserted[chckIndx(i_536872758, 0, (doc_2734691535.onNodeInserted).length - 1)];
            handler_2734691569(doc_2734691535, node_2734691536);
            i_536872758 = addInt(i_536872758, 1);
            if (!(((doc_2734691535.onNodeInserted).length == L_536872759))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2734691620(doc_2734691535.nodes, node_2734691536.id, node_2734691536);
    Label4: {
      var key_2734693025 = 0;
      var child_2734693026 = null;
      var n_536872763 = node_2734691536;
      var idx_536872764 = -1;
      var i_536872765 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_536872764 == -1)) {
            var colontmp__536872768 = nimCopy(null, {Field0: i_536872765, Field1: n_536872763}, NTI2768241977);
            key_2734693025 = colontmp__536872768["Field0"];
            child_2734693026 = colontmp__536872768["Field1"];
            HEX5BHEX5DHEX3D_2734691620(doc_2734691535.nodes, child_2734693026.id, child_2734693026);
            }
            
            if ((addInt(idx_536872764, 1) < len_2768240728(n_536872763))) {
            n_536872763 = HEX5BHEX5D_2768240724(n_536872763, addInt(idx_536872764, 1));
            idx_536872764 = -1;
            }
            else {
              var oHEX60gensym74_536872769 = next_2768240833(n_536872763);
              if (!isSome_2768242522(oHEX60gensym74_536872769)) Temporary8 = false; else {                var ne_536872770 = get_2768242542(oHEX60gensym74_536872769);
                Temporary8 = true;              }            if (Temporary8) {
            n_536872763 = ne_536872770;
            idx_536872764 = -1;
            }
            else {
            if ((!((n_536872763.parent == null)) && !((n_536872763.parent == node_2734691536)))) {
            idx_536872764 = index_2768240748(n_536872763);
            n_536872763 = n_536872763.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_536872765 = addInt(i_536872765, 1);
            }
          }
      };
    };

  
}

function newSeq_2734690799(len_2734690801) {
  var result_2734690802 = [];

    result_2734690802 = new Array(len_2734690801); for (var i = 0 ; i < len_2734690801 ; ++i) { result_2734690802[i] = null; }
  return result_2734690802;

}

function expandIfNeeded_2734690789(deq_2734690791) {
              var Temporary5;
    var Temporary6;

    if ((deq_2734690791.mask == 0)) {
    var correctSizeHEX60gensym52_2734690793 = nextPowerOfTwo_889192653(4);
    deq_2734690791.mask = subInt(correctSizeHEX60gensym52_2734690793, 1);
    deq_2734690791.data = new Array(chckRange(correctSizeHEX60gensym52_2734690793, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym52_2734690793, 0, 2147483647) ; ++i) { deq_2734690791.data[i] = null; }    }
    
    var cap_2734690798 = addInt(deq_2734690791.mask, 1);
    if ((cap_2734690798 <= deq_2734690791.count)) {
    var n_2734690807 = newSeq_2734690799(chckRange(mulInt(cap_2734690798, 2), 0, 2147483647));
    var i_2734690808 = 0;
    Label1: {
      var x_2734690818 = null;
      var x_2734690818_Idx = 0;
      var i_536872801 = deq_2734690791.head;
      Label2: {
        var c_536872803 = 0;
        var i_536872804 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872804 < deq_2734690791.count)) break Label4;
              c_536872803 = i_536872804;
              x_2734690818 = deq_2734690791.data; x_2734690818_Idx = chckIndx(i_536872801, 0, (deq_2734690791.data).length - 1);
              Temporary5 = x_2734690818[x_2734690818_Idx];
              x_2734690818[x_2734690818_Idx] = genericReset(x_2734690818[x_2734690818_Idx], NTI2768240644);
              n_2734690807[chckIndx(i_2734690808, 0, (n_2734690807).length - 1)] = Temporary5;
              i_2734690808 = addInt(i_2734690808, 1);
              i_536872801 = (addInt(i_536872801, 1) & deq_2734690791.mask);
              i_536872804 = addInt(i_536872804, 1);
            }
        };
      };
    };
    Temporary6 = n_2734690807;
    n_2734690807 = genericReset(n_2734690807, NTI2734688707);
    deq_2734690791.data = nimCopy(null, Temporary6, NTI2734688707);
    deq_2734690791.mask = subInt(mulInt(cap_2734690798, 2), 1);
    deq_2734690791.tail = deq_2734690791.count;
    deq_2734690791.head = 0;
    }
    

  
}

function addLast_2734690780(deq_2734690782, item_2734690783) {
    expandIfNeeded_2734690789(deq_2734690782);
    deq_2734690782.count = addInt(deq_2734690782.count, 1);
    deq_2734690782.data[chckIndx(deq_2734690782.tail, 0, (deq_2734690782.data).length - 1)] = item_2734690783;
    deq_2734690782.tail = (addInt(deq_2734690782.tail, 1) & deq_2734690782.mask);

  
}

function len_2734690921(deq_2734690923) {
  var result_2734690924 = 0;

    result_2734690924 = deq_2734690923.count;

  return result_2734690924;

}

function popFirst_2734690930(deq_2734690932) {
    var Temporary1;

  var result_2734690933 = null;

    if ((deq_2734690932.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2734690932.count = subInt(deq_2734690932.count, 1);
    Temporary1 = deq_2734690932.data[chckIndx(deq_2734690932.head, 0, (deq_2734690932.data).length - 1)];
    deq_2734690932.data[chckIndx(deq_2734690932.head, 0, (deq_2734690932.data).length - 1)] = genericReset(deq_2734690932.data[chckIndx(deq_2734690932.head, 0, (deq_2734690932.data).length - 1)], NTI2768240644);
    result_2734690933 = Temporary1;
    deq_2734690932.head = (addInt(deq_2734690932.head, 1) & deq_2734690932.mask);

  return result_2734690933;

}

function node_2734688923(editor_2734688924) {
  var result_2734688925 = null;

  BeforeRet: {
    result_2734688925 = editor_2734688924.selectedNode;
    break BeforeRet;
  };

  return result_2734688925;

}

function hasKey_2734689006(t_2734689009, key_2734689010) {
  var result_2734689011 = false;

    var hc_2734689012 = [0];
    result_2734689011 = (0 <= rawGet_2902458971(t_2734689009, key_2734689010, hc_2734689012, 0));

  return result_2734689011;

}

function contains_2734689000(t_2734689003, key_2734689004) {
  var result_2734689005 = false;

  BeforeRet: {
    result_2734689005 = hasKey_2734689006(t_2734689003, key_2734689004);
    break BeforeRet;
  };

  return result_2734689005;

}

function HEX5BHEX5D_2734689096(t_2734689099, key_2734689100) {
  var result_2734689101 = null;

    var hcHEX60gensym22_2734689102 = [0];
    var indexHEX60gensym22_2734689109 = rawGet_2902458971(t_2734689099, key_2734689100, hcHEX60gensym22_2734689102, 0);
    if ((0 <= indexHEX60gensym22_2734689109)) {
    result_2734689101 = t_2734689099.data[chckIndx(indexHEX60gensym22_2734689109, 0, (t_2734689099.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2768242456(key_2734689100);
    }
    

  return result_2734689101;

}

function xyHEX3D_2113929255(rect_2113929256, v_2113929257) {
    rect_2113929256.x = v_2113929257.arr[chckIndx(0, 0, (v_2113929257.arr).length - 1)];
    rect_2113929256.y = v_2113929257.arr[chckIndx(1, 0, (v_2113929257.arr).length - 1)];

  
}

function HEX2B_2113929689(aHEX60gensym153_2113929691, bHEX60gensym153_2113929692) {
  var result_2113929693 = ({arr: new Float32Array(2)});

    result_2113929693 = nimCopy(result_2113929693, {arr: new Float32Array([(aHEX60gensym153_2113929691.arr[0] + bHEX60gensym153_2113929692.arr[0]), (aHEX60gensym153_2113929691.arr[1] + bHEX60gensym153_2113929692.arr[1])])}, NTI2130706819);

  return result_2113929693;

}

function wh_2113929260(rect_2113929261) {
  var result_2113929262 = ({arr: new Float32Array(2)});

    result_2113929262 = nimCopy(result_2113929262, vec2_2130707424(rect_2113929261.w, rect_2113929261.h), NTI2130706819);

  return result_2113929262;

}

function absoluteBounds_2868905692(node_2868905693) {
  var result_2868905694 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_2868905693.parent == null)) {
    result_2868905694 = nimCopy(result_2868905694, node_2868905693.bounds, NTI2113929221);
    }
    else {
      result_2868905694 = nimCopy(result_2868905694, rect_2113929240(HEX2B_2113929689(xy_2113929252(absoluteBounds_2868905692(node_2868905693.parent)), xy_2113929252(node_2868905693.bounds)), wh_2113929260(node_2868905693.bounds)), NTI2113929221);
    }
    

  return result_2868905694;

}

function absoluteBounds_2868905712(nodeRange_2868905713) {
  var result_2868905714 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_2868905714[0] = nimCopy(result_2868905714[0], nodeRange_2868905713.parent.children[chckIndx(nodeRange_2868905713.first, 0, (nodeRange_2868905713.parent.children).length - 1)].bounds, NTI2113929221);
    Label1: {
      var i_2868905719 = 0;
      var colontmp__536872819 = 0;
      colontmp__536872819 = addInt(nodeRange_2868905713.first, 1);
      var i_536872820 = colontmp__536872819;
      Label2: {
          Label3: while (true) {
          if (!(i_536872820 < nodeRange_2868905713.last)) break Label3;
            i_2868905719 = i_536872820;
            result_2868905714[0] = nimCopy(result_2868905714[0], or_2113929304(result_2868905714[0], nodeRange_2868905713.parent.children[chckIndx(i_2868905719, 0, (nodeRange_2868905713.parent.children).length - 1)].bounds), NTI2113929221);
            i_536872820 = addInt(i_536872820, 1);
          }
      };
    };
    xyHEX3D_2113929255(result_2868905714[0], HEX2B_2113929689(xy_2113929252(result_2868905714[0]), xy_2113929252(absoluteBounds_2868905692(nodeRange_2868905713.parent))));

  return result_2868905714[0];

}

function subbase_2768240741(node_2768240742) {
  var result_2768240743 = null;

  BeforeRet: {
    if ((node_2768240742.parent.parent == null)) {
    result_2768240743 = node_2768240742;
    break BeforeRet;
    }
    
    result_2768240743 = subbase_2768240741(node_2768240742.parent);
    break BeforeRet;
  };

  return result_2768240743;

}

function prev_2768240879(node_2768240880) {
  var result_2768240882 = ({val: null});

  BeforeRet: {
    if ((node_2768240880.parent == null)) {
    result_2768240882 = nimCopy(result_2768240882, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    var i_2768240889 = index_2768240748(node_2768240880);
    if ((i_2768240889 <= 0)) {
    result_2768240882 = nimCopy(result_2768240882, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    result_2768240882 = nimCopy(result_2768240882, some_2768240866(HEX5BHEX5D_2768240724(node_2768240880.parent, subInt(i_2768240889, 1))), NTI2768240759);
    break BeforeRet;
  };

  return result_2768240882;

}

function HEX2BHEX3D_2734689623(aHEX60gensym160_2734689625, bHEX60gensym160_2734689626) {
    HEX2BHEX3D_2113929327(aHEX60gensym160_2734689625.arr, 0, bHEX60gensym160_2734689626);
    HEX2BHEX3D_2113929327(aHEX60gensym160_2734689625.arr, 1, bHEX60gensym160_2734689626);

  
}

function bounds_2868906049(nodeLayout_2868906050) {
  var result_2868906051 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_2868906051 = nimCopy(result_2868906051, nodeLayout_2868906050.root.bounds, NTI2113929221);
    break BeforeRet;
  };

  return result_2868906051;

}

function insert_2734689791(x_2734689793, x_2734689793_Idx, item_2734689794, i_2734689795) {
    var it_2734689815 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({arr: new Float32Array(2)})};
    x_2734689793[x_2734689793_Idx] = x_2734689793[x_2734689793_Idx] || []; x_2734689793[x_2734689793_Idx].splice(i_2734689795, 0, it_2734689815);
    x_2734689793[x_2734689793_Idx][chckIndx(i_2734689795, 0, (x_2734689793[x_2734689793_Idx]).length - 1)] = nimCopy(x_2734689793[x_2734689793_Idx][chckIndx(i_2734689795, 0, (x_2734689793[x_2734689793_Idx]).length - 1)], item_2734689794, NTI2734687800);

  
}

function HEX5BHEX5D_2734690633(t_2734690636, key_2734690637) {
  var result_2734690638 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2734690639 = [0];
    var indexHEX60gensym20_2734690646 = rawGet_2902458971(t_2734690636, key_2734690637, hcHEX60gensym20_2734690639, 0);
    if ((0 <= indexHEX60gensym20_2734690646)) {
    result_2734690638 = nimCopy(result_2734690638, t_2734690636.data[chckIndx(indexHEX60gensym20_2734690646, 0, (t_2734690636.data).length - 1)].Field2, NTI2868903966);
    }
    else {
    raiseKeyError_2768242456(key_2734690637);
    }
    

  return result_2734690638;

}

function handleSelectedNodeChanged_2734688926(editor_2734688927) {
            var Temporary9;
            var Temporary10;
              var Temporary11;
            var Temporary15;
            var Temporary16;
              var Temporary17;

  BeforeRet: {
    var node_2734688928 = node_2734688923(editor_2734688927);
    var foundNode_2734688929 = false;
    var i_2734688930 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2734688930 < (editor_2734688927.lastLayouts).length)) break Label2;
          try {
          var layout_2734688940 = nimCopy(null, editor_2734688927.lastLayouts[chckIndx(i_2734688930, 0, (editor_2734688927.lastLayouts).length - 1)].Field0, NTI2868903967);
          var offset_2734688941 = nimCopy(null, editor_2734688927.lastLayouts[chckIndx(i_2734688930, 0, (editor_2734688927.lastLayouts).length - 1)].Field1, NTI2130706819);
          if (contains_2734689000(layout_2734688940.nodeToVisualNode, node_2734688928.id)) {
          var visualNode_2734689199 = nimCopy(null, HEX5BHEX5D_2734689096(layout_2734688940.nodeToVisualNode, node_2734688928.id), NTI2868903966);
          var bounds_2734689281 = HEX2B_2097152159(absoluteBounds_2868905712(visualNode_2734689199), vec2_2130707424(0.0, offset_2734688941.arr[chckIndx(1, 0, (offset_2734688941.arr).length - 1)]));
          if (!(intersects_2097152185(bounds_2734689281, editor_2734688927.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2734689281.y + bounds_2734689281.h) < 100.0)) {
          var subbase_2734689282 = subbase_2768240741(node_2734688928);
          editor_2734688927.previousBaseIndex = index_2768240748(subbase_2734689282);
          editor_2734688927.scrollOffset = (100.0 - ((bounds_2734689281.y + bounds_2734689281.h) - offset_2734688941.arr[chckIndx(1, 0, (offset_2734688941.arr).length - 1)]));
          }
          else {
          if (((editor_2734688927.lastBounds.h - 100.0) < bounds_2734689281.y)) {
          var subbase_2734689361 = subbase_2768240741(node_2734688928);
          editor_2734688927.previousBaseIndex = index_2768240748(subbase_2734689361);
          editor_2734688927.scrollOffset = ((-((bounds_2734689281.y - offset_2734688941.arr[chckIndx(1, 0, (offset_2734688941.arr).length - 1)])) + editor_2734688927.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2734688930 = addInt(i_2734688930, 1);
          }
        }
    };
    i_2734688930 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2734688930 < (editor_2734688927.lastLayouts).length)) break Label5;
          try {
          var layout_2734689448 = nimCopy(null, editor_2734688927.lastLayouts[chckIndx(i_2734688930, 0, (editor_2734688927.lastLayouts).length - 1)].Field0, NTI2868903967);
          var offset_2734689449 = [nimCopy(null, editor_2734688927.lastLayouts[chckIndx(i_2734688930, 0, (editor_2734688927.lastLayouts).length - 1)].Field1, NTI2130706819)];
          var targetNode_2734689450 = node_2734688928;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2734689450 == null)) && !(contains_2734689000(layout_2734689448.nodeToVisualNode, targetNode_2734689450.id)))) break Label8;
                targetNode_2734689450 = targetNode_2734689450.parent;
              }
          };
          if (!((targetNode_2734689450 == null))) {
          var input_2734689522 = getOrCreateNodeLayoutInput_2785085703(ctx_2734686259, {node: subbase_2768240741(targetNode_2734689450), selectedNode: nimCopy(null, node_2734688928.id, NTI2298478595), id: ({id: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2734689448 = nimCopy(layout_2734689448, computeNodeLayout_2785123477(ctx_2734686259, input_2734689522, true), NTI2868903967);
          foundNode_2734688929 = true;
          }
          else {
            if (!(node_2734688928.parent == editor_2734688927.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym34_2734689529 = prev_2768240879(node_2734688928);
              if (!isSome_2768242522(oHEX60gensym34_2734689529)) Temporary11 = false; else {                var prev_2734689552 = get_2768242542(oHEX60gensym34_2734689529);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2734689000(layout_2734689448.nodeToVisualNode, prev_2734689552.id);            }          if (Temporary9) {
          var input_2734689616 = getOrCreateNodeLayoutInput_2785085703(ctx_2734686259, {node: subbase_2768240741(node_2734688928), selectedNode: nimCopy(null, node_2734688928.id, NTI2298478595), id: ({id: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2734689448 = nimCopy(layout_2734689448, computeNodeLayout_2785123477(ctx_2734686259, input_2734689616, true), NTI2868903967);
          HEX2BHEX3D_2734689623(offset_2734689449[0], bounds_2868906049(layout_2734689448).h);
          insert_2734689791(editor_2734688927, "lastLayouts", {Field0: nimCopy(null, layout_2734689448, NTI2868903967), Field1: nimCopy(null, offset_2734689449[0], NTI2130706819)}, chckRange(addInt(i_2734688930, 1), 0, 2147483647));
          Label12: {
            var k_2734689832 = 0;
            var colontmp__536872810 = 0;
            var colontmp__536872811 = 0;
            colontmp__536872810 = addInt(i_2734688930, 1);
            colontmp__536872811 = (editor_2734688927.lastLayouts).length - 1;
            var res_536872812 = colontmp__536872810;
            Label13: {
                Label14: while (true) {
                if (!(res_536872812 <= colontmp__536872811)) break Label14;
                  k_2734689832 = res_536872812;
                  HEX2BHEX3D_2113929327(editor_2734688927.lastLayouts[chckIndx(k_2734689832, 0, (editor_2734688927.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2734688927.lastLayouts[chckIndx(k_2734689832, 0, (editor_2734688927.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_2868906049(layout_2734689448).h);
                  res_536872812 = addInt(res_536872812, 1);
                }
            };
          };
          foundNode_2734688929 = true;
          }
          else {
            if (!(node_2734688928.parent == editor_2734688927.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym40_2734689921 = next_2768240833(node_2734688928);
              if (!isSome_2768242522(oHEX60gensym40_2734689921)) Temporary17 = false; else {                var next_2734689944 = get_2768242542(oHEX60gensym40_2734689921);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2734689000(layout_2734689448.nodeToVisualNode, next_2734689944.id);            }          if (Temporary15) {
          var input_2734690008 = getOrCreateNodeLayoutInput_2785085703(ctx_2734686259, {node: subbase_2768240741(node_2734688928), selectedNode: nimCopy(null, node_2734688928.id, NTI2298478595), id: ({id: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2734689448 = nimCopy(layout_2734689448, computeNodeLayout_2785123477(ctx_2734686259, input_2734690008, true), NTI2868903967);
          insert_2734689791(editor_2734688927, "lastLayouts", {Field0: nimCopy(null, layout_2734689448, NTI2868903967), Field1: nimCopy(null, offset_2734689449[0], NTI2130706819)}, chckRange(i_2734688930, 0, 2147483647));
          Label18: {
            var k_2734690021 = 0;
            var colontmp__536872815 = 0;
            colontmp__536872815 = (editor_2734688927.lastLayouts).length - 1;
            var res_536872816 = i_2734688930;
            Label19: {
                Label20: while (true) {
                if (!(res_536872816 <= colontmp__536872815)) break Label20;
                  k_2734690021 = res_536872816;
                  HEX2BHEX3D_2113929327(editor_2734688927.lastLayouts[chckIndx(k_2734690021, 0, (editor_2734688927.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2734688927.lastLayouts[chckIndx(k_2734690021, 0, (editor_2734688927.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_2868906049(layout_2734689448).h);
                  res_536872816 = addInt(res_536872816, 1);
                }
            };
          };
          foundNode_2734688929 = true;
          }
          }}
          if ((foundNode_2734688929 && contains_2734689000(layout_2734689448.nodeToVisualNode, node_2734688928.id))) {
          var visualNode_2734690249 = nimCopy(null, HEX5BHEX5D_2734689096(layout_2734689448.nodeToVisualNode, node_2734688928.id), NTI2868903966);
          var bounds_2734690331 = HEX2B_2097152159(absoluteBounds_2868905712(visualNode_2734690249), vec2_2130707424(0.0, offset_2734689449[0].arr[chckIndx(1, 0, (offset_2734689449[0].arr).length - 1)]));
          if (!(intersects_2097152185(bounds_2734690331, rect_2113929234(0.0, 0.0, editor_2734688927.lastBounds.w, editor_2734688927.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2734690331.y + bounds_2734690331.h) < 100.0)) {
          var subbase_2734690332 = subbase_2768240741(node_2734688928);
          editor_2734688927.previousBaseIndex = index_2768240748(subbase_2734690332);
          editor_2734688927.scrollOffset = (100.0 - ((bounds_2734690331.y + bounds_2734690331.h) - offset_2734689449[0].arr[chckIndx(1, 0, (offset_2734689449[0].arr).length - 1)]));
          }
          else {
          if (((editor_2734688927.lastBounds.h - 100.0) < bounds_2734690331.y)) {
          var subbase_2734690411 = subbase_2768240741(node_2734688928);
          editor_2734688927.previousBaseIndex = index_2768240748(subbase_2734690411);
          editor_2734688927.scrollOffset = ((-((bounds_2734690331.y - offset_2734689449[0].arr[chckIndx(1, 0, (offset_2734689449[0].arr).length - 1)])) + editor_2734688927.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2734688930 = addInt(i_2734688930, 1);
          }
        }
    };
    var subbase_2734690490 = subbase_2768240741(node_2734688928);
    var input_2734690491 = getOrCreateNodeLayoutInput_2785085703(ctx_2734686259, {node: subbase_2734690490, selectedNode: nimCopy(null, node_2734688928.id, NTI2298478595), id: ({id: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2734690492 = computeNodeLayout_2785123477(ctx_2734686259, input_2734690491, true);
    if (contains_2734689000(layout_2734690492.nodeToVisualNode, node_2734688928.id)) {
    var visualNode_2734690727 = HEX5BHEX5D_2734690633(layout_2734690492.nodeToVisualNode, node_2734688928.id);
    var bounds_2734690728 = absoluteBounds_2868905712(visualNode_2734690727);
    editor_2734688927.previousBaseIndex = index_2768240748(subbase_2734690490);
    editor_2734688927.scrollOffset = (-(bounds_2734690728.y) + (editor_2734688927.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2734690756(editor_2734690757, node_2734690758) {
  BeforeRet: {
    if ((node_2734690758 == editor_2734690757.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2734690758.parent == null) || !((base_2768240734(node_2734690758) == editor_2734690757.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2734690757.selectedNode == null))) {
    addLast_2734690780(editor_2734690757.selectionHistory, editor_2734690757.selectedNode);
    }
    
    if ((100 < len_2734690921(editor_2734690757.selectionHistory))) {
    var _ = popFirst_2734690930(editor_2734690757.selectionHistory);
    }
    
    editor_2734690757.selectedNode = node_2734690758;
    handleSelectedNodeChanged_2734688926(editor_2734690757);
  };

  
}

function createWithDocument_2734703313(self_2734703314, document_2734703315) {
    
function HEX3Aanonymous_2734703318(doc_2734703319, node_2734703320) {
        handleNodeInserted_2734694241(editor_2734703317, doc_2734703319, node_2734703320);

      
    }

  var result_2734703316 = null;

  BeforeRet: {
    var editor_2734703317 = {eventHandler: null, document: document_2734703315, textDocument: null, textEditor: null, m_type: NTI2734687781, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({id: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false};
    init_2181038099(editor_2734703317);
    editor_2734703317.document.onNodeInserted.push(HEX3Aanonymous_2734703318);;
    editor_2734703317.selectedCompletion = 0;
    editor_2734703317.completions = nimCopy(null, [], NTI2952790034);
    if ((len_2768240728(editor_2734703317.document.rootNode) == 0)) {
    var paramA_2734703330 = newId_2298478623();
    var paramB_2734703331 = newId_2298478623();
    var resultId_2734703332 = newId_2298478623();
    Label1: {
      var tmpHEX60gensym932_2734703337 = null;
      Label2: {
        var res_2734703343 = null;
        res_2734703343 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2734703343.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2734703343.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2734703346 = null;
            res_2734703346 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734703346.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2734703348 = null;
                res_2734703348 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703348.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2734703350 = null;
                    res_2734703350 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2734703350.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2734703350.id = nimCopy(res_2734703350.id, paramA_2734703330, NTI2298478595);
                    res_2734703350.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2734703354 = null;
                        res_2734703354 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703354.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2734703354.reff = nimCopy(res_2734703354.reff, IdInt_2751463436, NTI2298478595);
                      };
                      add_2768240678(res_2734703350, res_2734703354);
                      Label16: {
                        var res_2734703357 = null;
                        res_2734703357 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703357.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2768240678(res_2734703350, res_2734703357);
                    };
                  };
                  add_2768240678(res_2734703348, res_2734703350);
                  Label18: {
                    var res_2734703359 = null;
                    res_2734703359 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2734703359.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2734703359.id = nimCopy(res_2734703359.id, paramB_2734703331, NTI2298478595);
                    res_2734703359.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2734703363 = null;
                        res_2734703363 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703363.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2734703363.reff = nimCopy(res_2734703363.reff, IdInt_2751463436, NTI2298478595);
                      };
                      add_2768240678(res_2734703359, res_2734703363);
                      Label23: {
                        var res_2734703366 = null;
                        res_2734703366 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703366.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2768240678(res_2734703359, res_2734703366);
                    };
                  };
                  add_2768240678(res_2734703348, res_2734703359);
                };
              };
              add_2768240678(res_2734703346, res_2734703348);
              Label25: {
                var res_2734703368 = null;
                res_2734703368 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703368.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2734703368.reff = nimCopy(res_2734703368.reff, IdInt_2751463436, NTI2298478595);
              };
              add_2768240678(res_2734703346, res_2734703368);
              Label27: {
                var res_2734703371 = null;
                res_2734703371 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703371.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2734703373 = null;
                    res_2734703373 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2734703373.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2734703373.id = nimCopy(res_2734703373.id, resultId_2734703332, NTI2298478595);
                    res_2734703373.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2734703377 = null;
                        res_2734703377 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703377.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2768240678(res_2734703373, res_2734703377);
                      Label35: {
                        var res_2734703379 = null;
                        res_2734703379 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703379.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2734703381 = null;
                            res_2734703381 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2734703381.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2734703381.reff = nimCopy(res_2734703381.reff, IdAdd_2751463427, NTI2298478595);
                          };
                          add_2768240678(res_2734703379, res_2734703381);
                          Label40: {
                            var res_2734703384 = null;
                            res_2734703384 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2734703384.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2734703384.reff = nimCopy(res_2734703384.reff, paramA_2734703330, NTI2298478595);
                          };
                          add_2768240678(res_2734703379, res_2734703384);
                          Label42: {
                            var res_2734703387 = null;
                            res_2734703387 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2734703387.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2734703387.reff = nimCopy(res_2734703387.reff, paramB_2734703331, NTI2298478595);
                          };
                          add_2768240678(res_2734703379, res_2734703387);
                        };
                      };
                      add_2768240678(res_2734703373, res_2734703379);
                    };
                  };
                  add_2768240678(res_2734703371, res_2734703373);
                  Label44: {
                    var res_2734703390 = null;
                    res_2734703390 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2734703390.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2734703390.reff = nimCopy(res_2734703390.reff, resultId_2734703332, NTI2298478595);
                  };
                  add_2768240678(res_2734703371, res_2734703390);
                };
              };
              add_2768240678(res_2734703346, res_2734703371);
            };
          };
        };
        add_2768240678(res_2734703343, res_2734703346);
      };
    };
    add_2768240678(editor_2734703317.document.rootNode, res_2734703343);
    var addId_2734703554 = nimCopy(null, last_2768240898(editor_2734703317.document.rootNode).id, NTI2298478595);
    Label46: {
      var tmpHEX60gensym987_2734703559 = null;
      Label47: {
        var res_2734703565 = null;
        res_2734703565 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2734703565.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2734703565.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2734703568 = null;
            res_2734703568 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734703568.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2734703570 = null;
                res_2734703570 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703570.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734703568, res_2734703570);
              Label55: {
                var res_2734703572 = null;
                res_2734703572 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703572.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2734703572.reff = nimCopy(res_2734703572.reff, IdVoid_2751463438, NTI2298478595);
              };
              add_2768240678(res_2734703568, res_2734703572);
              Label57: {
                var res_2734703575 = null;
                res_2734703575 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734703575.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2734703577 = null;
                    res_2734703577 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2734703577.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2734703579 = null;
                        res_2734703579 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703579.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2734703579.reff = nimCopy(res_2734703579.reff, addId_2734703554, NTI2298478595);
                      };
                      add_2768240678(res_2734703577, res_2734703579);
                      Label65: {
                        var res_2734703582 = null;
                        res_2734703582 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703582.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2734703582.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2768240678(res_2734703577, res_2734703582);
                      Label67: {
                        var res_2734703585 = null;
                        res_2734703585 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2734703585.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2734703585.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2768240678(res_2734703577, res_2734703585);
                    };
                  };
                };
                add_2768240678(res_2734703575, res_2734703577);
              };
              add_2768240678(res_2734703568, res_2734703575);
            };
          };
        };
        add_2768240678(res_2734703565, res_2734703568);
      };
    };
    add_2768240678(editor_2734703317.document.rootNode, res_2734703565);
    }
    
    Label69: {
      var c_2734703671 = null;
      var i_536872738 = 0;
      var L_536872739 = (editor_2734703317.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872738 < L_536872739)) break Label71;
            c_2734703671 = editor_2734703317.document.rootNode.children[chckIndx(i_536872738, 0, (editor_2734703317.document.rootNode.children).length - 1)];
            handleNodeInserted_2734691534(editor_2734703317.document, c_2734703671);
            i_536872738 = addInt(i_536872738, 1);
            if (!(((editor_2734703317.document.rootNode.children).length == L_536872739))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_2785144248(ctx_2734686259, editor_2734703317.document.rootNode);
    nodeHEX3D_2734690756(editor_2734703317, HEX5BHEX5D_2768240724(editor_2734703317.document.rootNode, 0));
    result_2734703316 = editor_2734703317;
    break BeforeRet;
  };

  return result_2734703316;

}

function createWithDocument_2634035902(self_2634035903, document_2634035904) {
    
function HEX3Aanonymous_2634035929(__2634035930) {
        handleTextDocumentTextChanged_2634035833(editor_2634035910);

      
    }

  var result_2634035905 = null;

  BeforeRet: {
    var editor_2634035910 = {eventHandler: null, document: document_2634035904, selectionsInternal: [nimCopy(null, toSelection_2197815789({Field0: 0, Field1: 0}), NTI2197815307)], m_type: NTI2634023118, editor: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), dirty: false, active: false};
    init_2181038099(editor_2634035910);
    if (((editor_2634035910.document.lines).length == 0)) {
    editor_2634035910.document.lines = nimCopy(null, [[]], NTI1593835635);
    }
    
    var _ = subscribe_2634035865(editor_2634035910.document.textChanged, HEX3Aanonymous_2634035929);
    result_2634035905 = editor_2634035910;
    break BeforeRet;
  };

  return result_2634035905;

}

function createWithDocument_2181038116(self_2181038117, document_2181038118) {
  var result_2181038119 = null;

  BeforeRet: {
    result_2181038119 = null;
    break BeforeRet;
  };

  return result_2181038119;

}

function createWithDocument_2181038129(self_2181038117, document_2181038118) {
  var result_2181038130 = null;

  BeforeRet: {
    chckNilDisp(self_2181038117);
    if (isObj(self_2181038117.m_type, NTI2734687781)) {
    result_2181038130 = createWithDocument_2734703313(self_2181038117, document_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038117.m_type, NTI2634023118)) {
    result_2181038130 = createWithDocument_2634035902(self_2181038117, document_2181038118);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038117.m_type, NTI2181038084)) {
    result_2181038130 = createWithDocument_2181038116(self_2181038117, document_2181038118);
    break BeforeRet;
    }
    }}
  };

  return result_2181038130;

}

function getEventHandlers_2734694782(self_2734694783) {
  var result_2734694784 = [[]];

    result_2734694784[0].push(self_2734694783.eventHandler);;
    if (!((self_2734694783.modeEventHandler == null))) {
    result_2734694784[0].push(self_2734694783.modeEventHandler);;
    }
    
    if (!((self_2734694783.textEditor == null))) {
    add_2734694800(result_2734694784, 0, getEventHandlers_2181038147(self_2734694783.textEditor));
    result_2734694784[0].push(self_2734694783.textEditEventHandler);;
    }
    

  return result_2734694784[0];

}

function getEventHandlers_2634025344(self_2634025345) {
  var result_2634025346 = [];

    result_2634025346 = nimCopy(null, [self_2634025345.eventHandler], NTI2214592526);
    if (!((self_2634025345.modeEventHandler == null))) {
    result_2634025346.push(self_2634025345.modeEventHandler);;
    }
    
    if (self_2634025345.showCompletions) {
    result_2634025346.push(self_2634025345.completionEventHandler);;
    }
    

  return result_2634025346;

}

function getEventHandlers_2214592517(self_2214592518) {
  var result_2214592519 = [];

  BeforeRet: {
    result_2214592519 = nimCopy(null, [self_2214592518.eventHandler], NTI2214592526);
    break BeforeRet;
  };

  return result_2214592519;

}

function getEventHandlers_2181038131(self_2181038132) {
  var result_2181038133 = [];

  BeforeRet: {
    result_2181038133 = nimCopy(null, [], NTI2181038111);
    break BeforeRet;
  };

  return result_2181038133;

}

function getEventHandlers_2181038147(self_2181038132) {
  var result_2181038148 = [];

  BeforeRet: {
    chckNilDisp(self_2181038132);
    if (isObj(self_2181038132.m_type, NTI2734687781)) {
    result_2181038148 = getEventHandlers_2734694782(self_2181038132);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038132.m_type, NTI2634023118)) {
    result_2181038148 = getEventHandlers_2634025344(self_2181038132);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038132.m_type, NTI2214592516)) {
    result_2181038148 = getEventHandlers_2214592517(self_2181038132);
    break BeforeRet;
    }
    else {
    if (isObj(self_2181038132.m_type, NTI2181038084)) {
    result_2181038148 = getEventHandlers_2181038131(self_2181038132);
    break BeforeRet;
    }
    }}}
  };

  return result_2181038148;

}

function reset_2734694897(obj_2734694899, obj_2734694899_Idx) {
    obj_2734694899[obj_2734694899_Idx] = null;

  
}

function clear_2734694890(deq_2734694892) {
    Label1: {
      var el_2734694896 = null;
      var el_2734694896_Idx = 0;
      var i_536872831 = deq_2734694892.head;
      Label2: {
        var c_536872833 = 0;
        var i_536872834 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872834 < deq_2734694892.count)) break Label4;
              c_536872833 = i_536872834;
              el_2734694896 = deq_2734694892.data; el_2734694896_Idx = chckIndx(i_536872831, 0, (deq_2734694892.data).length - 1);
              reset_2734694897(el_2734694896, el_2734694896_Idx);
              i_536872831 = (addInt(i_536872831, 1) & deq_2734694892.mask);
              i_536872834 = addInt(i_536872834, 1);
            }
        };
      };
    };
    deq_2734694892.count = 0;
    deq_2734694892.tail = deq_2734694892.head;

  
}

function isEditing_2734694383(self_2734694384) {
  var result_2734694385 = false;

    result_2734694385 = !((self_2734694384.textEditor == null));

  return result_2734694385;

}

function getSymbol_2785092289(ctxHEX60gensym91_2785092290, idHEX60gensym91_2785092291) {
  var result_2785092293 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym91_2785092294 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym91_2785092291, NTI2298478595), Field1: 3}, NTI2801795097);
    if (contains_2785039568(ctxHEX60gensym91_2785092290.itemsSymbol, itemHEX60gensym91_2785092294)) {
    result_2785092293 = nimCopy(result_2785092293, some_2785092461(HEX5BHEX5D_2785040121(ctxHEX60gensym91_2785092290.itemsSymbol, itemHEX60gensym91_2785092294)), NTI2868905073);
    break BeforeRet;
    }
    
    result_2785092293 = nimCopy(result_2785092293, none_2785092474(), NTI2868905073);
    break BeforeRet;
  };

  return result_2785092293;

}

function updateNode_2785144730(ctx_2785144731, node_2785144732) {
          var Temporary3;
            var Temporary4;

    ctx_2785144731.depGraph.revision = addInt(ctx_2785144731.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2801806532(ctx_2785144731.depGraph.changed, {Field0: getItem_2785079817(node_2785144732), Field1: -1}, ctx_2785144731.depGraph.revision);
    var parent_2785144806 = node_2785144732.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2785144806 == null))) Temporary3 = false; else {            var oHEX60gensym831_2785144813 = findWithParentRec_2768242565(parent_2785144806, 11);
            if (!isSome_2768242522(oHEX60gensym831_2785144813)) Temporary4 = false; else {              var child_2785144859 = get_2768242542(oHEX60gensym831_2785144813);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2785144860 = child_2785144859.parent;
          HEX5BHEX5DHEX3D_2801806532(ctx_2785144731.depGraph.changed, {Field0: getItem_2785079817(functionDefinition_2785144860), Field1: -1}, ctx_2785144731.depGraph.revision);
          parent_2785144806 = functionDefinition_2785144860.parent;
        }
    };
    var fmtRes_2785144934 = [mnewString(0)];
    fmtRes_2785144934[0].push.apply(fmtRes_2785144934[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_2868904741(fmtRes_2785144934, 0, node_2785144732, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785144934[0], NTI33554449)]);

  
}

function notifySymbolChanged_2785144162(ctx_2785144163, sym_2785144164) {
    ctx_2785144163.depGraph.revision = addInt(ctx_2785144163.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_2801806532(ctx_2785144163.depGraph.changed, {Field0: getItem_2785092484(sym_2785144164), Field1: -1}, ctx_2785144163.depGraph.revision);
    var fmtRes_2785144242 = [mnewString(0)];
    fmtRes_2785144242[0].push.apply(fmtRes_2785144242[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_738197675(fmtRes_2785144242, 0, sym_2785144164.name, []);
    fmtRes_2785144242[0].push.apply(fmtRes_2785144242[0], [32,40]);;
    formatValue_2801795292(fmtRes_2785144242, 0, sym_2785144164.id, []);
    fmtRes_2785144242[0].push.apply(fmtRes_2785144242[0], [41]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2785144242[0], NTI33554449)]);

  
}

function del_1325401634(t_1325401637, key_1325401638) {
    var hc_1325401639 = [0];
    var i_1325401646 = rawGet_1325400318(t_1325401637, key_1325401638, hc_1325401639, 0);
    var mskHEX60gensym36_1325401650 = (t_1325401637.data).length - 1;
    if ((0 <= i_1325401646)) {
    t_1325401637.counter = subInt(t_1325401637.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1325401657 = i_1325401646;
            var rHEX60gensym36_1325401658 = jHEX60gensym36_1325401657;
            t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)].Field0 = 0;
            t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)].Field1 = 0;
            t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1325401646 = (addInt(i_1325401646, 1) & mskHEX60gensym36_1325401650);
                  if (isEmpty_1342177309(t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1325401658 = (t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)].Field0 & mskHEX60gensym36_1325401650);
                  if (!(((((rHEX60gensym36_1325401658 <= i_1325401646) && (jHEX60gensym36_1325401657 < rHEX60gensym36_1325401658)) || ((jHEX60gensym36_1325401657 < rHEX60gensym36_1325401658) && (i_1325401646 < jHEX60gensym36_1325401657))) || ((i_1325401646 < jHEX60gensym36_1325401657) && (rHEX60gensym36_1325401658 <= i_1325401646))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1325401637.data[chckIndx(jHEX60gensym36_1325401657, 0, (t_1325401637.data).length - 1)] = nimCopy(t_1325401637.data[chckIndx(jHEX60gensym36_1325401657, 0, (t_1325401637.data).length - 1)], t_1325401637.data[chckIndx(i_1325401646, 0, (t_1325401637.data).length - 1)], NTI1325400144);
          }
      };
    };
    }
    

  
}

function invoke_1325401544(event_1325401546, arg_1325401547) {
    Label1: {
      var h_1325401570 = {Field0: ({id: 0}), Field1: null};
      var i_536872841 = 0;
      var L_536872842 = (event_1325401546.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872841 < L_536872842)) break Label3;
            h_1325401570 = event_1325401546.handlers[chckIndx(i_536872841, 0, (event_1325401546.handlers).length - 1)];
            h_1325401570.Field1(arg_1325401547);
            i_536872841 = addInt(i_536872841, 1);
            if (!(((event_1325401546.handlers).length == L_536872842))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1325401591(self_1325401592, editor_1325401593) {
    del_1325401634(self_1325401592.editors, editor_1325401593.id);
    invoke_1325401544(self_1325401592.onEditorDeregistered, editor_1325401593);

  
}

function unregister_2734703755(self_2734703756) {
    finishEdit_2734694763(self_2734703756, false);
    unregisterEditor_1325401591(self_2734703756.editor, self_2734703756);

  
}

function unregister_2634036515(self_2634036516) {
    unregisterEditor_1325401591(self_2634036516.editor, self_2634036516);

  
}

function unregister_2181038152(self_2181038153) {
  
}

function unregister_2181038154(self_2181038153) {
    chckNilDisp(self_2181038153);
    if (isObj(self_2181038153.m_type, NTI2734687781)) {
    unregister_2734703755(self_2181038153);
    }
    else {
    if (isObj(self_2181038153.m_type, NTI2634023118)) {
    unregister_2634036515(self_2181038153);
    }
    else {
    if (isObj(self_2181038153.m_type, NTI2181038084)) {
    unregister_2181038152(self_2181038153);
    }
    }}

  
}

function newSeq_2952790120(len_2952790122) {
  var result_2952790123 = [];

    result_2952790123 = new Array(len_2952790122); for (var i = 0 ; i < len_2952790122 ; ++i) { result_2952790123[i] = ({score: 0.0, kind: 0, id: ({id: 0}), nodeKind: 0, name: []}); }
  return result_2952790123;

}

function mergeAlt_2952790156(a_2952790158, b_2952790159, lo_2952790160, m_2952790161, hi_2952790162, cmp_2952790165, order_2952790166) {
  BeforeRet: {
    if ((HEX2A_1040187400(cmp_2952790165(a_2952790158[chckIndx(m_2952790161, 0, (a_2952790158).length - 1)], a_2952790158[chckIndx(addInt(m_2952790161, 1), 0, (a_2952790158).length - 1)]), order_2952790166) <= 0)) {
    break BeforeRet;
    }
    
    var j_2952790167 = lo_2952790160;
    if (!((j_2952790167 <= m_2952790161))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2952790173 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2952790167 <= m_2952790161)) break Label2;
          b_2952790159[chckIndx(bb_2952790173, 0, (b_2952790159).length - 1)] = nimCopy(b_2952790159[chckIndx(bb_2952790173, 0, (b_2952790159).length - 1)], a_2952790158[chckIndx(j_2952790167, 0, (a_2952790158).length - 1)], NTI2734687778);
          bb_2952790173 = addInt(bb_2952790173, 1);
          j_2952790167 = addInt(j_2952790167, 1);
        }
    };
    var i_2952790184 = 0;
    var k_2952790185 = lo_2952790160;
    Label3: {
        Label4: while (true) {
        if (!((k_2952790185 < j_2952790167) && (j_2952790167 <= hi_2952790162))) break Label4;
          if ((HEX2A_1040187400(cmp_2952790165(b_2952790159[chckIndx(i_2952790184, 0, (b_2952790159).length - 1)], a_2952790158[chckIndx(j_2952790167, 0, (a_2952790158).length - 1)]), order_2952790166) <= 0)) {
          a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)] = nimCopy(a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)], b_2952790159[chckIndx(i_2952790184, 0, (b_2952790159).length - 1)], NTI2734687778);
          i_2952790184 = addInt(i_2952790184, 1);
          }
          else {
            a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)] = nimCopy(a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)], a_2952790158[chckIndx(j_2952790167, 0, (a_2952790158).length - 1)], NTI2734687778);
            j_2952790167 = addInt(j_2952790167, 1);
          }
          
          k_2952790185 = addInt(k_2952790185, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2952790185 < j_2952790167)) break Label6;
          a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)] = nimCopy(a_2952790158[chckIndx(k_2952790185, 0, (a_2952790158).length - 1)], b_2952790159[chckIndx(i_2952790184, 0, (b_2952790159).length - 1)], NTI2734687778);
          k_2952790185 = addInt(k_2952790185, 1);
          i_2952790184 = addInt(i_2952790184, 1);
        }
    };
  };

  
}

function sort_2952790108(a_2952790110, cmp_2952790113, order_2952790114) {
    var n_2952790119 = (a_2952790110).length;
    var b_2952790153 = newSeq_2952790120(chckRange(divInt(n_2952790119, 2), 0, 2147483647));
    var s_2952790154 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2952790154 < n_2952790119)) break Label2;
          var m_2952790155 = subInt(subInt(n_2952790119, 1), s_2952790154);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2952790155)) break Label4;
                mergeAlt_2952790156(a_2952790110, b_2952790153, nimMax(addInt(subInt(m_2952790155, s_2952790154), 1), 0), m_2952790155, addInt(m_2952790155, s_2952790154), cmp_2952790113, order_2952790114);
                m_2952790155 = subInt(m_2952790155, mulInt(s_2952790154, 2));
              }
          };
          s_2952790154 = mulInt(s_2952790154, 2);
        }
    };

  
}

function cmp_2952790088(x_2952790090, y_2952790091) {
  var result_2952790092 = 0;

  BeforeRet: {
    if ((x_2952790090 == y_2952790091)) {
    result_2952790092 = 0;
    break BeforeRet;
    }
    
    if ((x_2952790090 < y_2952790091)) {
    result_2952790092 = -1;
    break BeforeRet;
    }
    
    result_2952790092 = 1;
    break BeforeRet;
  };

  return result_2952790092;

}

function getCompletions_2734694550(editor_2734694551, text_2734694552, contextNode_2734694556) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2734694700(a_2734694718, b_2734694719) {
      var result_2734694724 = 0;

        result_2734694724 = cmp_2952790088(a_2734694718.score, b_2734694719.score);

      return result_2734694724;

    }

  var result_2734694557 = [];

  BeforeRet: {
    result_2734694557 = nimCopy(null, [], NTI2952790034);
    if (((isNone_2768242550(contextNode_2734694556) || (get_2768242542(contextNode_2734694556).kind == 1)) || (get_2768242542(contextNode_2734694556).kind == 0))) {
    var symbols_2734694622 = computeSymbols_2785112618(ctx_2734686259, get_2768242542(contextNode_2734694556), true);
    Label1: {
      var key_2734694627 = ({id: 0});
      var symbol_2734694628 = null;
      var L_536872845 = len_2868905204(symbols_2734694622);
      Label2: {
        var h_536872847 = 0;
        var colontmp__536872848 = 0;
        colontmp__536872848 = (symbols_2734694622.data).length - 1;
        var res_536872849 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872849 <= colontmp__536872848)) break Label4;
              h_536872847 = res_536872849;
              if (isFilled_1342177312(symbols_2734694622.data[chckIndx(h_536872847, 0, (symbols_2734694622.data).length - 1)].Field0)) {
              var colontmp__536872852 = nimCopy(null, {Field0: nimCopy(null, symbols_2734694622.data[chckIndx(h_536872847, 0, (symbols_2734694622.data).length - 1)].Field1, NTI2298478595), Field1: symbols_2734694622.data[chckIndx(h_536872847, 0, (symbols_2734694622.data).length - 1)].Field2}, NTI2868904899);
              key_2734694627 = nimCopy(key_2734694627, colontmp__536872852["Field0"], NTI2298478595);
              symbol_2734694628 = colontmp__536872852["Field1"];
              var score_2734694629 = fuzzyMatch_2013266000(text_2734694552, symbol_2734694628.name);
              result_2734694557.push({kind: 0, score: score_2734694629, id: nimCopy(null, symbol_2734694628.id, NTI2298478595), nodeKind: 0, name: []});;
              if (!((len_2868905204(symbols_2734694622) == L_536872845))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872849 = addInt(res_536872849, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym118_2734694636 = nimCopy(null, contextNode_2734694556, NTI2768240759);
      if (!isSome_2768242522(oHEX60gensym118_2734694636)) Temporary6 = false; else {        var node_2734694659 = get_2768242542(oHEX60gensym118_2734694636);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2734694659.kind == 0);      }    if (Temporary5) {
    result_2734694557.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_2013266000(text_2734694552, [105,102]), id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_2013266000(text_2734694552, [119,104,105,108,101]), id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_2013266000(text_2734694552, [99,111,110,115,116]), id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_2013266000(text_2734694552, [108,101,116]), id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_2013266000(text_2734694552, [118,97,114]), id: ({id: 0})});;
    if (nsuStartsWith(text_2734694552, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2734694557.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_2013266000(text_2734694552, [123]), id: ({id: 0})});;
    result_2734694557.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_2013266000(text_2734694552, [102,110]), id: ({id: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2734694552);
    result_2734694557.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({id: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_2952790108(result_2734694557, HEX3Aanonymous_2734694700, 0);
    break BeforeRet;
  };

  return result_2734694557;

}

function updateCompletions_2734688911(editor_2734688912) {
  BeforeRet: {
    if ((editor_2734688912.textDocument == null)) {
    editor_2734688912.completions = nimCopy(null, [], NTI2952790034);
    editor_2734688912.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2734694748 = nsuJoinSep(content_2634024055(editor_2734688912.textDocument), []);
    editor_2734688912.completions = nimCopy(null, getCompletions_2734694550(editor_2734688912, text_2734694748, some_2768240866(node_2734688923(editor_2734688912))), NTI2734690703);
    editor_2734688912.completionText = nimCopy(null, text_2734694748, NTI33554449);
    if ((0 < (editor_2734688912.completions).length)) {
    editor_2734688912.selectedCompletion = clamp_1694499551(editor_2734688912.selectedCompletion, 0, subInt((editor_2734688912.completions).length, 1));
    }
    else {
      editor_2734688912.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2734694763(self_2734694764, apply_2734694765) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2734694383(self_2734694764))) {
    break BeforeRet;
    }
    
    if (apply_2734694765) {
    if (!(HEX3DHEX3D_2298478667(self_2734694764.currentlyEditedSymbol, null_2298478708))) {
      var oHEX60gensym608_2734698878 = getSymbol_2785092289(ctx_2734686259, self_2734694764.currentlyEditedSymbol);
      if (!isSome_2868905495(oHEX60gensym608_2734698878)) Temporary1 = false; else {        var sym_2734698901 = get_2868905515(oHEX60gensym608_2734698878);
        Temporary1 = true;      }    if (Temporary1) {
    self_2734694764.document.undoOps.push({kind: 4, id: nimCopy(null, self_2734694764.currentlyEditedSymbol, NTI2298478595), text: nimCopy(null, sym_2734698901.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2734698901.name = nimCopy(null, nsuJoinSep(content_2634024055(self_2734694764.textDocument), []), NTI33554449);
    if ((sym_2734698901.kind == 0)) {
    var Temporary2 = sym_2734698901;
    if (ConstSet283[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
    Temporary2.node.text = nimCopy(null, sym_2734698901.name, NTI33554449);
    var Temporary3 = sym_2734698901;
    if (ConstSet284[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
    updateNode_2785144730(ctx_2734686259, Temporary3.node);
    }
    
    notifySymbolChanged_2785144162(ctx_2734686259, sym_2734698901);
    }
    
    }
    else {
    if (!((self_2734694764.currentlyEditedNode == null))) {
    self_2734694764.document.undoOps.push({kind: 3, node: self_2734694764.currentlyEditedNode, text: nimCopy(null, self_2734694764.currentlyEditedNode.text, NTI33554449), id: ({id: 0}), parent: null, idx: 0});;
    self_2734694764.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2634024055(self_2734694764.textDocument), [10]), NTI33554449);
    updateNode_2785144730(ctx_2734686259, self_2734694764.currentlyEditedNode);
    }
    }
    }
    
    unregister_2181038154(self_2734694764.textEditor);
    self_2734694764.textEditor = null;
    self_2734694764.textDocument = null;
    self_2734694764.currentlyEditedSymbol = nimCopy(self_2734694764.currentlyEditedSymbol, null_2298478708, NTI2298478595);
    self_2734694764.currentlyEditedNode = null;
    updateCompletions_2734688911(self_2734694764);
  };

  
}

function handleDocumentChanged_2734694827(self_2734694828) {
    var fmtRes_2734694833 = mnewString(0);
    fmtRes_2734694833.push.apply(fmtRes_2734694833, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694833, NTI33554449)]);
    clear_2734694890(self_2734694828.selectionHistory);
    clear_2734694890(self_2734694828.selectionFuture);
    finishEdit_2734694763(self_2734694828, false);
    Label1: {
      var symbol_2734694967 = null;
      var L_536872824 = len_2785143750(ctx_2734686259.globalScope);
      Label2: {
        var h_536872826 = 0;
        var colontmp__536872827 = 0;
        colontmp__536872827 = (ctx_2734686259.globalScope.data).length - 1;
        var res_536872828 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872828 <= colontmp__536872827)) break Label4;
              h_536872826 = res_536872828;
              if (isFilled_1342177312(ctx_2734686259.globalScope.data[chckIndx(h_536872826, 0, (ctx_2734686259.globalScope.data).length - 1)].Field0)) {
              symbol_2734694967 = ctx_2734686259.globalScope.data[chckIndx(h_536872826, 0, (ctx_2734686259.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_2785099085(ctx_2734686259, symbol_2734694967);
              if (!((len_2785143750(ctx_2734686259.globalScope) == L_536872824))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872828 = addInt(res_536872828, 1);
            }
        };
      };
    };
    nodeHEX3D_2734690756(self_2734694828, HEX5BHEX5D_2768240724(self_2734694828.document.rootNode, 0));

  
}

function handleDocumentChanged_2634028370(self_2634028371) {
    selectionHEX3D_2634023410(self_2634028371, {Field0: clampCursor_2634023307(self_2634028371, selection_2634023404(self_2634028371).Field0), Field1: clampCursor_2634023307(self_2634028371, selection_2634023404(self_2634028371).Field1)});
    updateSearchResults_2634025362(self_2634028371);

  
}

function handleDocumentChanged_2181038149(self_2181038150) {
  
}

function handleDocumentChanged_2181038151(self_2181038150) {
    chckNilDisp(self_2181038150);
    if (isObj(self_2181038150.m_type, NTI2734687781)) {
    handleDocumentChanged_2734694827(self_2181038150);
    }
    else {
    if (isObj(self_2181038150.m_type, NTI2634023118)) {
    handleDocumentChanged_2634028370(self_2181038150);
    }
    else {
    if (isObj(self_2181038150.m_type, NTI2181038084)) {
    handleDocumentChanged_2181038149(self_2181038150);
    }
    }}

  
}

function none_2768240818() {
  var result_2768240825 = ({val: 0, has: false});

  return result_2768240825;

}

function some_1207961583(val_1207961585) {
  var result_1207961586 = ({val: 0, has: false});

    result_1207961586.has = true;
    result_1207961586.val = val_1207961585;

  return result_1207961586;

}

function getItemAtPixelPosition_2734702960(self_2734702961, posWindow_2734702962) {
  var result_2734702964 = ({val: 0, has: false});

  BeforeRet: {
    result_2734702964 = nimCopy(result_2734702964, none_2768240818(), NTI1207960496);
    Label1: {
      var index_2734702975 = 0;
      var rect_2734702976 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872860 = 0;
      var L_536872861 = (self_2734702961.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872860 < L_536872861)) break Label3;
            index_2734702975 = self_2734702961.lastItems[chckIndx(i_536872860, 0, (self_2734702961.lastItems).length - 1)]["Field0"];
            rect_2734702976 = self_2734702961.lastItems[chckIndx(i_536872860, 0, (self_2734702961.lastItems).length - 1)]["Field1"];
            if (((contains_2097152190(rect_2734702976, posWindow_2734702962) && (0 <= index_2734702975)) && (index_2734702975 <= (self_2734702961.completions).length - 1))) {
            result_2734702964 = nimCopy(result_2734702964, some_1207961583(index_2734702975), NTI1207960496);
            break BeforeRet;
            }
            
            i_536872860 = addInt(i_536872860, 1);
            if (!(((self_2734702961.lastItems).length == L_536872861))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2734702964;

}

function getOption_2634028795(editor_2634028797, path_2634028798, default_2634028799) {
  var result_2634028805 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2634028797 == null)) {
      result_2634028805 = default_2634028799;
      break BeforeRet;
      }
      
      var nodeHEX60gensym101_2634028818 = HEX7BHEX7D_1660947748(editor_2634028797.options, nsuSplitString(path_2634028798, [46], -1));
      if ((nodeHEX60gensym101_2634028818 == null)) {
      result_2634028805 = default_2634028799;
      break BeforeRet;
      }
      
    };
    result_2634028805 = getFloat_1660944572(nodeHEX60gensym101_2634028818, default_2634028799);
    break BeforeRet;
  };

  return result_2634028805;

}

function handleScroll_2734702983(self_2734702984, scroll_2734702985, mousePosWindow_2734702986) {
    if (isSome_1207962333(getItemAtPixelPosition_2734702960(self_2734702984, mousePosWindow_2734702986))) {
    self_2734702984.selectedCompletion = clamp_1694499551(subInt(self_2734702984.selectedCompletion, ((scroll_2734702985.arr[chckIndx(1, 0, (scroll_2734702985.arr).length - 1)]) | 0)), 0, (self_2734702984.completions).length - 1);
    }
    else {
    HEX2BHEX3D_872417520(self_2734702984, "scrollOffset", (scroll_2734702985.arr[chckIndx(1, 0, (scroll_2734702985.arr).length - 1)] * getOption_2634028795(self_2734702984.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2634028717(self_2634028718, scroll_2634028719, mousePosWindow_2634028720) {
    HEX2BHEX3D_872417520(self_2634028718, "scrollOffset", (scroll_2634028719.arr[chckIndx(1, 0, (scroll_2634028719.arr).length - 1)] * getOption_2634028795(self_2634028718.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    self_2634028718.dirty = true;

  
}

function handleScroll_2181038155(self_2181038156, scroll_2181038157, mousePosWindow_2181038158) {
  
}

function handleScroll_2181038159(self_2181038156, scroll_2181038157, mousePosWindow_2181038158) {
    chckNilDisp(self_2181038156);
    if (isObj(self_2181038156.m_type, NTI2734687781)) {
    handleScroll_2734702983(self_2181038156, scroll_2181038157, mousePosWindow_2181038158);
    }
    else {
    if (isObj(self_2181038156.m_type, NTI2634023118)) {
    handleScroll_2634028717(self_2181038156, scroll_2181038157, mousePosWindow_2181038158);
    }
    else {
    if (isObj(self_2181038156.m_type, NTI2181038084)) {
    handleScroll_2181038155(self_2181038156, scroll_2181038157, mousePosWindow_2181038158);
    }
    }}

  
}

function HEX2D_2113929526(aHEX60gensym154_2113929528, bHEX60gensym154_2113929529) {
  var result_2113929530 = ({arr: new Float32Array(2)});

    result_2113929530 = nimCopy(result_2113929530, {arr: new Float32Array([(aHEX60gensym154_2113929528.arr[0] - bHEX60gensym154_2113929529.arr[0]), (aHEX60gensym154_2113929528.arr[1] - bHEX60gensym154_2113929529.arr[1])])}, NTI2130706819);

  return result_2113929530;

}

function get_1207962427(self_1207962429) {
  var result_1207962430 = 0;

    if (isNone_1207962410(self_1207962429)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1207962430 = self_1207962429["val"];

  return result_1207962430;

}

function del_2785145010(cache_2785145013, key_2785145014) {
    var node_2785145110 = getOrDefault_2801797747(cache_2785145013.table, key_2785145014, null);
    if (!((node_2785145110 == null))) {
    del_2801808846(cache_2785145013.table, key_2785145014);
    remove_2801809605(cache_2785145013.list, node_2785145110);
    }
    

  
}

function deleteNode_2785144940(ctx_2785144941, node_2785144942) {
          var Temporary3;
            var Temporary4;

    ctx_2785144941.depGraph.revision = addInt(ctx_2785144941.depGraph.revision, 1);
    del_2785145010(ctx_2785144941.depGraph.changed, {Field0: getItem_2785079817(node_2785144942), Field1: -1});
    if (!((node_2785144942.parent == null))) {
    HEX5BHEX5DHEX3D_2801806532(ctx_2785144941.depGraph.changed, {Field0: getItem_2785079817(node_2785144942.parent), Field1: -1}, ctx_2785144941.depGraph.revision);
    }
    
    var parent_2785145272 = node_2785144942.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2785145272 == null))) Temporary3 = false; else {            var oHEX60gensym835_2785145279 = findWithParentRec_2768242565(parent_2785145272, 11);
            if (!isSome_2768242522(oHEX60gensym835_2785145279)) Temporary4 = false; else {              var child_2785145325 = get_2768242542(oHEX60gensym835_2785145279);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2785145326 = child_2785145325.parent;
          HEX5BHEX5DHEX3D_2801806532(ctx_2785144941.depGraph.changed, {Field0: getItem_2785079817(functionDefinition_2785145326), Field1: -1}, ctx_2785144941.depGraph.revision);
          parent_2785145272 = functionDefinition_2785145326.parent;
        }
    };

  
}

function del_2734693523(t_2734693526, key_2734693527) {
    var hc_2734693528 = [0];
    var i_2734693535 = rawGet_2969567306(t_2734693526, key_2734693527, hc_2734693528, 0);
    var mskHEX60gensym36_2734693539 = (t_2734693526.data).length - 1;
    if ((0 <= i_2734693535)) {
    t_2734693526.counter = subInt(t_2734693526.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2734693546 = i_2734693535;
            var rHEX60gensym36_2734693547 = jHEX60gensym36_2734693546;
            t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field0 = 0;
            t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field1 = nimCopy(t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field1, ({id: 0}), NTI2298478595);
            t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2734693535 = (addInt(i_2734693535, 1) & mskHEX60gensym36_2734693539);
                  if (isEmpty_1342177309(t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2734693547 = (t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)].Field0 & mskHEX60gensym36_2734693539);
                  if (!(((((rHEX60gensym36_2734693547 <= i_2734693535) && (jHEX60gensym36_2734693546 < rHEX60gensym36_2734693547)) || ((jHEX60gensym36_2734693546 < rHEX60gensym36_2734693547) && (i_2734693535 < jHEX60gensym36_2734693546))) || ((i_2734693535 < jHEX60gensym36_2734693546) && (rHEX60gensym36_2734693547 <= i_2734693535))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2734693526.data[chckIndx(jHEX60gensym36_2734693546, 0, (t_2734693526.data).length - 1)] = nimCopy(t_2734693526.data[chckIndx(jHEX60gensym36_2734693546, 0, (t_2734693526.data).length - 1)], t_2734693526.data[chckIndx(i_2734693535, 0, (t_2734693526.data).length - 1)], NTI2734687771);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2734693109(doc_2734693110, node_2734693111) {
              var Temporary8;

    var fmtRes_2734693116 = [mnewString(0)];
    fmtRes_2734693116[0].push.apply(fmtRes_2734693116[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_2868904741(fmtRes_2734693116, 0, node_2734693111, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734693116[0], NTI33554449)]);
    Label1: {
      var child_2734693125 = null;
      var i_536872885 = 0;
      var L_536872886 = (node_2734693111.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872885 < L_536872886)) break Label3;
            child_2734693125 = node_2734693111.children[chckIndx(i_536872885, 0, (node_2734693111.children).length - 1)];
            handleNodeDelete_2734693109(doc_2734693110, child_2734693125);
            i_536872885 = addInt(i_536872885, 1);
            if (!(((node_2734693111.children).length == L_536872886))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_2785144940(ctx_2734686259, node_2734693111);
    Label4: {
      var i_2734693159 = 0;
      var update_2734693160 = null;
      var i_536872895 = 0;
      var L_536872896 = (ctx_2734686259.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872895 < L_536872896)) break Label6;
            i_2734693159 = i_536872895;
            update_2734693160 = ctx_2734686259.updateFunctions[chckIndx(i_536872895, 0, (ctx_2734686259.updateFunctions).length - 1)];
            var key_2734693161 = {Field0: getItem_2785079817(node_2734693111), Field1: i_2734693159};
            if (contains_2785131985(ctx_2734686259.diagnosticsPerQuery, key_2734693161)) {
            Label7: {
              var id_2734693310 = ({id: 0});
              var colontmp__536872890 = [];
              colontmp__536872890 = (Temporary8 = HEX5BHEX5D_2785132430(ctx_2734686259.diagnosticsPerQuery, key_2734693161), Temporary8)[0][Temporary8[1]];
              var i_536872891 = 0;
              var L_536872892 = (colontmp__536872890).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_536872891 < L_536872892)) break Label10;
                    id_2734693310 = colontmp__536872890[chckIndx(i_536872891, 0, (colontmp__536872890).length - 1)];
                    del_2785133147(HEX5BHEX5D_2785132639(ctx_2734686259.diagnosticsPerNode, id_2734693310).queries, key_2734693161);
                    i_536872891 = addInt(i_536872891, 1);
                    if (!(((colontmp__536872890).length == L_536872892))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_2785139890(ctx_2734686259.diagnosticsPerQuery, key_2734693161);
            }
            
            i_536872895 = addInt(i_536872895, 1);
            if (!(((ctx_2734686259.updateFunctions).length == L_536872896))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2734693523(doc_2734693110.nodes, node_2734693111.id);

  
}

function HEX5BHEX5DHEX3D_2768240904(node_2768240905, index_2768240906, newNode_2768240907) {
    newNode_2768240907.parent = node_2768240905;
    node_2768240905.children[chckIndx(index_2768240906, 0, (node_2768240905.children).length - 1)].parent = null;
    node_2768240905.children[chckIndx(index_2768240906, 0, (node_2768240905.children).length - 1)] = newNode_2768240907;

  
}

function replaceNode_2734695331(document_2734695332, node_2734695333, newNode_2734695334) {
  var result_2734695335 = null;

  BeforeRet: {
    if ((node_2734695333.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2734695341 = index_2768240748(node_2734695333);
    document_2734695332.undoOps.push({kind: 1, parent: node_2734695333.parent, idx: idx_2734695341, node: node_2734695333, id: ({id: 0}), text: []});;
    document_2734695332.redoOps = nimCopy(null, [], NTI2734691311);
    handleNodeDelete_2734693109(document_2734695332, node_2734695333);
    HEX5BHEX5DHEX3D_2768240904(node_2734695333.parent, idx_2734695341, newNode_2734695334);
    handleNodeInserted_2734691534(document_2734695332, newNode_2734695334);
    result_2734695335 = newNode_2734695334;
    break BeforeRet;
  };

  return result_2734695335;

}

function some_2734695690(val_2734695692) {
  var result_2734695693 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2734695693.has = true;
    result_2734695693.val = nimCopy(result_2734695693.val, val_2734695692, NTI2734691605);

  return result_2734695693;

}

function none_2734695704() {
  var result_2734695711 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2734695711;

}

function none_2734696191() {
  var result_2734696193 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2734696193 = nimCopy(result_2734696193, none_2734695704(), NTI2734691610);

  return result_2734696193;

}

function createDefaultNode_2734697185(editor_2734697186, kind_2734697187) {
  var result_2734697189 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2734697187) {
    case 0:
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: {kind: 0, id: newId_2298478623(), text: [], parent: null, reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 1:
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: {kind: 1, text: [], parent: null, id: ({id: 0}), reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 2:
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: {kind: 2, text: [], parent: null, id: ({id: 0}), reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 3:
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: {kind: 3, text: [], parent: null, id: ({id: 0}), reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym449_2734697206 = null;
        Label2: {
          var res_2734697212 = null;
          res_2734697212 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697212.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734697212.id = nimCopy(res_2734697212.id, newId_2298478623(), NTI2298478595);
          Label4: {
            Label5: {
              var res_2734697215 = null;
              res_2734697215 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697215.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2768240678(res_2734697212, res_2734697215);
        };
      };
      var node_2734697234 = res_2734697212;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697234, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym456_2734697242 = null;
        Label8: {
          var res_2734697248 = null;
          res_2734697248 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697248.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734697248.id = nimCopy(res_2734697248.id, newId_2298478623(), NTI2298478595);
          Label10: {
            Label11: {
              var res_2734697251 = null;
              res_2734697251 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697251.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697248, res_2734697251);
            Label13: {
              var res_2734697253 = null;
              res_2734697253 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697253.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697248, res_2734697253);
          };
        };
      };
      var node_2734697281 = res_2734697248;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697281, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym466_2734697289 = null;
        Label16: {
          var res_2734697295 = null;
          res_2734697295 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697295.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734697295.id = nimCopy(res_2734697295.id, newId_2298478623(), NTI2298478595);
          Label18: {
            Label19: {
              var res_2734697298 = null;
              res_2734697298 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697298.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697295, res_2734697298);
            Label21: {
              var res_2734697300 = null;
              res_2734697300 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697300.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697295, res_2734697300);
          };
        };
      };
      var node_2734697328 = res_2734697295;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697328, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym476_2734697336 = null;
        Label24: {
          var res_2734697342 = null;
          res_2734697342 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697342.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2734697344 = null;
              res_2734697344 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697344.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697342, res_2734697344);
            Label29: {
              var res_2734697346 = null;
              res_2734697346 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697346.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697342, res_2734697346);
            Label31: {
              var res_2734697348 = null;
              res_2734697348 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697348.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2734697350 = null;
                  res_2734697350 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2734697350.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2768240678(res_2734697348, res_2734697350);
            };
            add_2768240678(res_2734697342, res_2734697348);
          };
        };
      };
      var node_2734697396 = res_2734697342;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697396, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym492_2734697404 = null;
        Label37: {
          var res_2734697410 = null;
          res_2734697410 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697410.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2734697412 = null;
              res_2734697412 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697412.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697410, res_2734697412);
            Label42: {
              var res_2734697414 = null;
              res_2734697414 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697414.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697410, res_2734697414);
          };
        };
      };
      var node_2734697442 = res_2734697410;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697442, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym502_2734697450 = null;
        Label45: {
          var res_2734697456 = null;
          res_2734697456 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697456.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2734697458 = null;
              res_2734697458 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697458.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697456, res_2734697458);
            Label50: {
              var res_2734697460 = null;
              res_2734697460 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697460.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697456, res_2734697460);
          };
        };
      };
      var node_2734697488 = res_2734697456;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697488, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym512_2734697496 = null;
        Label53: {
          var res_2734697502 = null;
          res_2734697502 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697502.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2734697504 = null;
              res_2734697504 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697504.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2768240678(res_2734697502, res_2734697504);
        };
      };
      var node_2734697523 = res_2734697502;
      result_2734697189 = nimCopy(result_2734697189, some_2734695690({Field0: node_2734697523, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    default: 
      result_2734697189 = nimCopy(result_2734697189, none_2734696191(), NTI2734691610);
      break BeforeRet;
      break;
    }
  };

  return result_2734697189;

}

function isSome_2734699131(self_2734699133) {
  var result_2734699134 = false;

    result_2734699134 = self_2734699133.has;

  return result_2734699134;

}

function isNone_2734699156(self_2734699158) {
  var result_2734699159 = false;

    result_2734699159 = !(self_2734699158.has);

  return result_2734699159;

}

function get_2734699148(self_2734699150) {
  var result_2734699151 = {Field0: null, Field1: 0};

    if (isNone_2734699156(self_2734699150)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2734699151 = self_2734699150.val;

  return result_2734699151;

}

function shouldEditNode_2734697529(doc_2734697530, node_2734697531) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2734697532 = false;

  BeforeRet: {
    if (((node_2734697531.kind == 0) && eqStrings(node_2734697531.text, []))) {
    result_2734697532 = true;
    break BeforeRet;
    }
    
    if (((node_2734697531.kind == 2) && eqStrings(node_2734697531.text, []))) {
    result_2734697532 = true;
    break BeforeRet;
    }
    
    if ((node_2734697531.kind == 4)) {
    var oHEX60gensym519_2734697547 = computeSymbol_2785109118(ctx_2734686259, node_2734697531, true);
    if (!isSome_2868905495(oHEX60gensym519_2734697547)) Temporary2 = false; else {      var symbol_2734697570 = get_2868905515(oHEX60gensym519_2734697547);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2734697570.name, []);    }    result_2734697532 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2734697531.kind == 5)) {
    var oHEX60gensym520_2734697577 = computeSymbol_2785109118(ctx_2734686259, node_2734697531, true);
    if (!isSome_2868905495(oHEX60gensym520_2734697577)) Temporary4 = false; else {      var symbol_2734697600 = get_2868905515(oHEX60gensym520_2734697577);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2734697600.name, []);    }    result_2734697532 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2734697531.kind == 6)) {
    var oHEX60gensym521_2734697607 = computeSymbol_2785109118(ctx_2734686259, node_2734697531, true);
    if (!isSome_2868905495(oHEX60gensym521_2734697607)) Temporary6 = false; else {      var symbol_2734697630 = get_2868905515(oHEX60gensym521_2734697607);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2734697630.name, []);    }    result_2734697532 = Temporary5;
    break BeforeRet;
    }
    
    result_2734697532 = false;
    break BeforeRet;
  };

  return result_2734697532;

}

function formatValue_2734694398(result_2734694400, result_2734694400_Idx, value_2734694401, specifier_2734694402) {
    formatValue_738197675(result_2734694400, result_2734694400_Idx, reprEnum(value_2734694401, NTI2868903945), specifier_2734694402);

  
}

function handleTextDocumentChanged_2734694381(self_2734694382) {
    updateCompletions_2734688911(self_2734694382);

  
}

function editSymbol_2734694390(self_2734694391, symbol_2734694392) {
    var Temporary1;
    
function HEX3Aanonymous_2734694447(doc_2734694448) {
        handleTextDocumentChanged_2734694381(self_2734694391);

      
    }

    var fmtRes_2734694397 = [mnewString(0)];
    fmtRes_2734694397[0].push.apply(fmtRes_2734694397[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_738197675(fmtRes_2734694397, 0, symbol_2734694392.name, []);
    fmtRes_2734694397[0].push.apply(fmtRes_2734694397[0], [32,40]);;
    formatValue_2734694398(fmtRes_2734694397, 0, symbol_2734694392.kind, []);
    fmtRes_2734694397[0].push.apply(fmtRes_2734694397[0], [44,32]);;
    formatValue_2801795292(fmtRes_2734694397, 0, symbol_2734694392.id, []);
    fmtRes_2734694397[0].push.apply(fmtRes_2734694397[0], [41]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694397[0], NTI33554449)]);
    if ((symbol_2734694392.kind == 0)) {
    var fmtRes_2734694419 = [mnewString(0)];
    fmtRes_2734694419[0].push.apply(fmtRes_2734694419[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2734694392;
    if (ConstSet287[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2868903945)); }
    formatValue_2868904741(fmtRes_2734694419, 0, Temporary1.node, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694419[0], NTI33554449)]);
    }
    
    self_2734694391.currentlyEditedNode = null;
    self_2734694391.currentlyEditedSymbol = nimCopy(self_2734694391.currentlyEditedSymbol, symbol_2734694392.id, NTI2298478595);
    self_2734694391.textDocument = newTextDocument_2952790593([], []);
    contentHEX3D_2634023933(self_2734694391.textDocument, [nimCopy(null, symbol_2734694392.name, NTI33554449)]);
    self_2734694391.textEditor = newTextEditor_2634035835(self_2734694391.textDocument, self_2734694391.editor);
    setMode_2634029095(self_2734694391.textEditor, [105,110,115,101,114,116]);
    self_2734694391.textEditor.renderHeader = false;
    self_2734694391.textEditor.fillAvailableSpace = false;
    self_2734694391.textEditor.lineNumbers = nimCopy(self_2734694391.textEditor.lineNumbers, some_2952790647(0), NTI2634023162);
    var _ = subscribe_2634035865(self_2734694391.textDocument.textChanged, HEX3Aanonymous_2734694447);
    updateCompletions_2734688911(self_2734694391);

  
}

function editNode_2734694455(self_2734694456, node_2734694457) {
    
function HEX3Aanonymous_2734694486(doc_2734694487) {
        handleTextDocumentChanged_2734694381(self_2734694456);

      
    }

    var fmtRes_2734694462 = [mnewString(0)];
    fmtRes_2734694462[0].push.apply(fmtRes_2734694462[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_2868904741(fmtRes_2734694462, 0, node_2734694457, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734694462[0], NTI33554449)]);
    self_2734694456.currentlyEditedNode = node_2734694457;
    self_2734694456.currentlyEditedSymbol = nimCopy(self_2734694456.currentlyEditedSymbol, null_2298478708, NTI2298478595);
    self_2734694456.textDocument = newTextDocument_2952790593([], []);
    contentHEX3D_2634023933(self_2734694456.textDocument, nsuSplitLines(node_2734694457.text, false));
    self_2734694456.textEditor = newTextEditor_2634035835(self_2734694456.textDocument, self_2734694456.editor);
    setMode_2634029095(self_2734694456.textEditor, [105,110,115,101,114,116]);
    self_2734694456.textEditor.renderHeader = false;
    self_2734694456.textEditor.fillAvailableSpace = false;
    self_2734694456.textEditor.lineNumbers = nimCopy(self_2734694456.textEditor.lineNumbers, some_2952790647(0), NTI2634023162);
    var _ = subscribe_2634035865(self_2734694456.textDocument.textChanged, HEX3Aanonymous_2734694486);
    updateCompletions_2734688911(self_2734694456);

  
}

function tryEdit_2734694494(self_2734694495, node_2734694496) {
      var Temporary1;
      var Temporary2;

  var result_2734694497 = false;

  BeforeRet: {
      var oHEX60gensym116_2734694500 = getSymbol_2785092289(ctx_2734686259, node_2734694496.id);
      if (!isSome_2868905495(oHEX60gensym116_2734694500)) Temporary1 = false; else {        var sym_2734694523 = get_2868905515(oHEX60gensym116_2734694500);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2734694390(self_2734694495, sym_2734694523);
    result_2734694497 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym117_2734694526 = getSymbol_2785092289(ctx_2734686259, node_2734694496.reff);
      if (!isSome_2868905495(oHEX60gensym117_2734694526)) Temporary2 = false; else {        var sym_2734694549 = get_2868905515(oHEX60gensym117_2734694526);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2734694390(self_2734694495, sym_2734694549);
    result_2734694497 = true;
    break BeforeRet;
    }
    else {
      switch (node_2734694496.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2734694455(self_2734694495, node_2734694496);
        result_2734694497 = true;
        break BeforeRet;
        break;
      default: 
        result_2734694497 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2734694497;

}

function applySelectedCompletion_2734700351(editor_2734700352) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2734700457(n_2734700460) {
          var result_2734700463 = false;

            result_2734700463 = shouldEditNode_2734697529(editor_2734700352.document, n_2734700460);

          return result_2734700463;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2734700352.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2734700352.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2734700360 = nimCopy(null, editor_2734700352.completions[chckIndx(editor_2734700352.selectedCompletion, 0, (editor_2734700352.completions).length - 1)], NTI2734687778);
    var completionText_2734700361 = nimCopy(null, editor_2734700352.completionText, NTI33554449);
    var fmtRes_2734700366 = [mnewString(0)];
    fmtRes_2734700366[0].push.apply(fmtRes_2734700366[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2348810760(fmtRes_2734700366, 0, editor_2734700352.selectedCompletion, []);
    fmtRes_2734700366[0].push.apply(fmtRes_2734700366[0], [32,40]);;
    formatValue_738197675(fmtRes_2734700366, 0, completionText_2734700361, []);
    fmtRes_2734700366[0].push.apply(fmtRes_2734700366[0], [41]);;
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734700366[0], NTI33554449)]);
    finishEdit_2734694763(editor_2734700352, false);
    switch (com_2734700360.kind) {
    case 0:
        var Temporary2 = com_2734700360;
        if (ConstSet285[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2734687777)); }
        var oHEX60gensym720_2734700374 = getSymbol_2785092289(ctx_2734686259, Temporary2.id);
        if (!isSome_2868905495(oHEX60gensym720_2734700374)) Temporary1 = false; else {          var symbol_2734700397 = get_2868905515(oHEX60gensym720_2734700374);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2734690756(editor_2734700352, replaceNode_2734695331(editor_2734700352.document, node_2734688923(editor_2734700352), {kind: 1, reff: nimCopy(null, symbol_2734700397.id, NTI2298478595), parent: null, id: ({id: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2734700360;
        if (ConstSet286[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2734687777)); }
        var oHEX60gensym721_2734700400 = createDefaultNode_2734697185(editor_2734700352, Temporary4.nodeKind);
        if (!isSome_2734699131(oHEX60gensym721_2734700400)) Temporary3 = false; else {          var nodeIndex_2734700423 = nimCopy(null, get_2734699148(oHEX60gensym721_2734700400), NTI2734691605);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2734700424 = nodeIndex_2734700423["Field0"];
      var __2734700425 = nodeIndex_2734700423["Field1"];
      var _ = replaceNode_2734695331(editor_2734700352.document, node_2734688923(editor_2734700352), newNode_2734700424);
      if ((newNode_2734700424.kind == 2)) {
      newNode_2734700424.text = nimCopy(null, completionText_2734700361, NTI33554449);
      updateNode_2785144730(ctx_2734686259, newNode_2734700424);
      }
      else {
      if ((newNode_2734700424.kind == 3)) {
      if (!((completionText_2734700361[chckIndx(0, 0, (completionText_2734700361).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,53,57,50,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2734700424.text = nimCopy(null, HEX5BHEX5D_872416535(completionText_2734700361, HEX2EHEX2E_1056964704(1, 1)), NTI33554449);
      updateNode_2785144730(ctx_2734686259, newNode_2734700424);
      }
      }
      nodeHEX3D_2734690756(editor_2734700352, newNode_2734700424);
      Label5: {
        var __2734700464 = 0;
        var emptyNode_2734700465 = null;
        var colontmp__536872865 = null;
        colontmp__536872865 = HEX3Aanonymous_2734700457;
        var i_536872874 = 0;
        Label6: {
          var __536872876 = 0;
          var child_536872877 = null;
          var n_536872878 = newNode_2734700424;
          var idx_536872879 = -1;
          var i_536872880 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_536872879 == -1)) {
                __536872876 = i_536872880;
                child_536872877 = n_536872878;
                if (colontmp__536872865(child_536872877)) {
                __2734700464 = i_536872874;
                emptyNode_2734700465 = child_536872877;
                nodeHEX3D_2734690756(editor_2734700352, emptyNode_2734700465);
                var _ = tryEdit_2734694494(editor_2734700352, node_2734688923(editor_2734700352));
                break Label5;
                i_536872874 = addInt(i_536872874, 1);
                }
                
                }
                
                if ((addInt(idx_536872879, 1) < len_2768240728(n_536872878))) {
                n_536872878 = HEX5BHEX5D_2768240724(n_536872878, addInt(idx_536872879, 1));
                idx_536872879 = -1;
                }
                else {
                  var oHEX60gensym71_536872882 = next_2768240833(n_536872878);
                  if (!isSome_2768242522(oHEX60gensym71_536872882)) Temporary11 = false; else {                    var ne_536872883 = get_2768242542(oHEX60gensym71_536872882);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_536872878 == newNode_2734700424));                  }                if (Temporary10) {
                n_536872878 = ne_536872883;
                idx_536872879 = -1;
                }
                else {
                if (((!((n_536872878.parent == null)) && !((n_536872878 == newNode_2734700424))) && !((n_536872878.parent == newNode_2734700424)))) {
                idx_536872879 = index_2768240748(n_536872878);
                n_536872878 = n_536872878.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_536872880 = addInt(i_536872880, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function getNodeAtPixelPosition_2734697631(self_2734697632, posContent_2734697633) {
                      var Temporary8;

  var result_2734697635 = ({val: null});

  BeforeRet: {
    result_2734697635 = nimCopy(result_2734697635, none_2768240847(), NTI2768240759);
    Label1: {
      var layout_2734697663 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2734697664 = ({arr: new Float32Array(2)});
      var i_536872948 = 0;
      var L_536872949 = (self_2734697632.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872948 < L_536872949)) break Label3;
            layout_2734697663 = self_2734697632.lastLayouts[chckIndx(i_536872948, 0, (self_2734697632.lastLayouts).length - 1)]["Field0"];
            offset_2734697664 = self_2734697632.lastLayouts[chckIndx(i_536872948, 0, (self_2734697632.lastLayouts).length - 1)]["Field1"];
            var bounds_2734697668 = HEX2B_2097152159(bounds_2868906049(layout_2734697663), offset_2734697664);
            var smallestRange_2734697669 = ({parent: null, first: 0, last: 0});
            if (contains_2097152190(bounds_2734697668, posContent_2734697633)) {
            Label4: {
              var __2734697670 = 0;
              var child_2734697671 = null;
              var n_536872939 = layout_2734697663.node;
              var idx_536872940 = -1;
              var i_536872941 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872940 == -1)) {
                    var colontmp__536872944 = nimCopy(null, {Field0: i_536872941, Field1: n_536872939}, NTI2768241977);
                    __2734697670 = colontmp__536872944["Field0"];
                    child_2734697671 = colontmp__536872944["Field1"];
                    if (contains_2734689000(layout_2734697663.nodeToVisualNode, child_2734697671.id)) {
                    var visualNode_2734697817 = HEX5BHEX5D_2734690633(layout_2734697663.nodeToVisualNode, child_2734697671.id);
                    var bounds_2734697899 = HEX2B_2097152159(absoluteBounds_2868905712(visualNode_2734697817), vec2_2130707424(0.0, offset_2734697664.arr[chckIndx(1, 0, (offset_2734697664.arr).length - 1)]));
                    if (contains_2097152190(bounds_2734697899, posContent_2734697633)) {
                    if (((((smallestRange_2734697669.parent == null) || (smallestRange_2734697669.parent.depth < visualNode_2734697817.parent.depth)) || ((visualNode_2734697817.parent.depth == smallestRange_2734697669.parent.depth) && (smallestRange_2734697669.parent.indent < visualNode_2734697817.parent.indent))) || ((visualNode_2734697817.parent.depth == smallestRange_2734697669.parent.depth) && (subInt(visualNode_2734697817.last, visualNode_2734697817.first) < subInt(smallestRange_2734697669.last, smallestRange_2734697669.first))))) {
                    smallestRange_2734697669 = nimCopy(smallestRange_2734697669, visualNode_2734697817, NTI2868903966);
                    result_2734697635 = nimCopy(result_2734697635, some_2768240866(child_2734697671), NTI2768240759);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872940, 1) < len_2768240728(n_536872939))) {
                    n_536872939 = HEX5BHEX5D_2768240724(n_536872939, addInt(idx_536872940, 1));
                    idx_536872940 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872945 = next_2768240833(n_536872939);
                      if (!isSome_2768242522(oHEX60gensym74_536872945)) Temporary8 = false; else {                        var ne_536872946 = get_2768242542(oHEX60gensym74_536872945);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872939 = ne_536872946;
                    idx_536872940 = -1;
                    }
                    else {
                    if ((!((n_536872939.parent == null)) && !((n_536872939.parent == layout_2734697663.node)))) {
                    idx_536872940 = index_2768240748(n_536872939);
                    n_536872939 = n_536872939.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872941 = addInt(i_536872941, 1);
                    }
                  }
              };
            };
            if (isNone_2768242550(result_2734697635)) {
            result_2734697635 = nimCopy(result_2734697635, some_2768240866(layout_2734697663.node), NTI2768240759);
            }
            
            break BeforeRet;
            }
            
            i_536872948 = addInt(i_536872948, 1);
            if (!(((self_2734697632.lastLayouts).length == L_536872949))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2734697635;

}

function handleMousePress_2734703171(self_2734703172, button_2734703173, mousePosWindow_2734703174) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2734703195 = HEX2D_2113929526(mousePosWindow_2734703174, xy_2113929252(self_2734703172.lastBounds));
    if ((button_2734703173 == 0)) {
      var oHEX60gensym928_2734703202 = getItemAtPixelPosition_2734702960(self_2734703172, mousePosWindow_2734703174);
      if (!isSome_1207962333(oHEX60gensym928_2734703202)) Temporary1 = false; else {        var index_2734703225 = get_1207962427(oHEX60gensym928_2734703202);
        Temporary1 = true;      }    if (Temporary1) {
    self_2734703172.selectedCompletion = index_2734703225;
    applySelectedCompletion_2734700351(self_2734703172);
    }
    else {
      if (!!(isEditing_2734694383(self_2734703172))) Temporary2 = false; else {        var oHEX60gensym929_2734703228 = getNodeAtPixelPosition_2734697631(self_2734703172, mousePosContent_2734703195);
        if (!isSome_2768242522(oHEX60gensym929_2734703228)) Temporary3 = false; else {          var n_2734703251 = get_2768242542(oHEX60gensym929_2734703228);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2734690756(self_2734703172, n_2734703251);
    }
    }
    }
    

  
}

function updateFontSettings_3070230593(self_3070230594) {
    var newFontSize_3070231472 = nsuParseFloat(HEX5BHEX5D_872416535(cstrToNimstr(window.getComputedStyle(self_3070230594.content, null).fontSize), HEX2EHEX2E_1056964704(0, 3)));
    if (!((newFontSize_3070231472 == self_3070230594.mFontSize))) {
    self_3070230594.mFontSize = newFontSize_3070231472;
    var d_3070231473 = document.createElement("div");
    d_3070231473.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3070231473.innerHTML = "#";
    self_3070230594.content.appendChild(d_3070231473);
    var fmtRes_3070231479 = [mnewString(0)];
    fmtRes_3070231479[0].push.apply(fmtRes_3070231479[0], [99,104,97,114,87,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070231479, 0, d_3070231473.clientWidth, []);
    fmtRes_3070231479[0].push.apply(fmtRes_3070231479[0], [44,32,108,105,110,101,72,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231479, 0, d_3070231473.clientHeight, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_3070231479[0], NTI33554449)]);
    self_3070230594.mLineHeight = d_3070231473.clientHeight;
    self_3070230594.mCharWidth = d_3070231473.clientWidth;
    self_3070230594.content.removeChild(d_3070231473);
    }
    

  
}

function charWidth_3070231517(self_3070231518) {
  var result_3070231519 = 0.0;

    updateFontSettings_3070230593(self_3070231518);
    result_3070231519 = self_3070231518.mCharWidth;

  return result_3070231519;

}

function charWidth_2332033172(self_2332033173) {
  var result_2332033174 = 0.0;

  return result_2332033174;

}

function charWidth_2332033175(self_2332033173) {
  var result_2332033176 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2332033173);
    if (isObj(self_2332033173.m_type, NTI3070230534)) {
    result_2332033176 = charWidth_3070231517(self_2332033173);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033173.m_type, NTI2332033028)) {
    result_2332033176 = charWidth_2332033172(self_2332033173);
    break BeforeRet;
    }
    }
  };

  return result_2332033176;

}

function isThickCursor_2634028479(self_2634028480) {
  var result_2634028481 = false;

  BeforeRet: {
    result_2634028481 = getOption_2634028482(self_2634028480.editor, getContextWithMode_2634028476(self_2634028480, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2634028481;

}

function HEX2DHEX3D_2634036304(x_2634036306, x_2634036306_Idx, y_2634036307) {
    x_2634036306[x_2634036306_Idx] = (x_2634036306[x_2634036306_Idx] - y_2634036307);

  
}

function some_2634036318(val_2634036320) {
  var result_2634036325 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2634036325.has = true;
    result_2634036325.val = nimCopy(result_2634036325.val, val_2634036320, NTI2634032594);

  return result_2634036325;

}

function none_2634036331() {
  var result_2634036338 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2634036338;

}

function getCursorAtPixelPos_2634035937(self_2634035938, mousePosWindow_2634035939) {
  var result_2634035945 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    Label1: {
      var line_2634035968 = ({index: 0, parts: []});
      var i_536872958 = 0;
      var L_536872959 = (self_2634035938.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872958 < L_536872959)) break Label3;
            line_2634035968 = self_2634035938.lastRenderedLines[chckIndx(i_536872958, 0, (self_2634035938.lastRenderedLines).length - 1)];
            var startOffset_2634035969 = 0;
            Label4: {
              var i_2634036002 = 0;
              var part_2634036003 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872954 = 0;
              var L_536872955 = (line_2634035968.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872954 < L_536872955)) break Label6;
                    i_2634036002 = i_536872954;
                    part_2634036003 = nimCopy(part_2634036003, line_2634035968.parts[chckIndx(i_536872954, 0, (line_2634035968.parts).length - 1)], NTI2634023114);
                    if ((contains_2097152190(part_2634036003.bounds, mousePosWindow_2634035939) || ((((i_2634036002 == (line_2634035968.parts).length - 1) && (part_2634036003.bounds.y <= mousePosWindow_2634035939.arr[chckIndx(1, 0, (mousePosWindow_2634035939.arr).length - 1)])) && (mousePosWindow_2634035939.arr[chckIndx(1, 0, (mousePosWindow_2634035939.arr).length - 1)] <= (part_2634036003.bounds.y + part_2634036003.bounds.h))) && (part_2634036003.bounds.x <= mousePosWindow_2634035939.arr[chckIndx(0, 0, (mousePosWindow_2634035939.arr).length - 1)])))) {
                    var offsetFromLeft_2634036303 = [((mousePosWindow_2634035939.arr[chckIndx(0, 0, (mousePosWindow_2634035939.arr).length - 1)] - part_2634036003.bounds.x) / charWidth_2332033175(self_2634035938.editor.platform))];
                    if (isThickCursor_2634028479(self_2634035938)) {
                    HEX2DHEX3D_2634036304(offsetFromLeft_2634036303, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_872417520(offsetFromLeft_2634036303, 0, 0.5);
                    }
                    
                    var index_2634036317 = clamp_1694499551(((offsetFromLeft_2634036303[0]) | 0), 0, (part_2634036003.text).length);
                    result_2634035945 = nimCopy(result_2634035945, some_2634036318({Field0: line_2634035968.index, Field1: addInt(startOffset_2634035969, index_2634036317)}), NTI2634032417);
                    break BeforeRet;
                    }
                    
                    startOffset_2634035969 = addInt(startOffset_2634035969, (part_2634036003.text).length);
                    i_536872954 = addInt(i_536872954, 1);
                    if (!(((line_2634035968.parts).length == L_536872955))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872958 = addInt(i_536872958, 1);
            if (!(((self_2634035938.lastRenderedLines).length == L_536872959))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2634035945 = nimCopy(result_2634035945, none_2634036331(), NTI2634032417);
    break BeforeRet;
  };

  return result_2634035945;

}

function isSome_2634036382(self_2634036384) {
  var result_2634036385 = false;

    result_2634036385 = self_2634036384.has;

  return result_2634036385;

}

function isNone_2634036407(self_2634036409) {
  var result_2634036410 = false;

    result_2634036410 = !(self_2634036409.has);

  return result_2634036410;

}

function get_2634036399(self_2634036401) {
  var result_2634036402 = {Field0: 0, Field1: 0};

    if (isNone_2634036407(self_2634036401)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2634036402 = self_2634036401.val;

  return result_2634036402;

}

function handleMousePress_2634036366(self_2634036367, button_2634036368, mousePosWindow_2634036369) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2634036368 == 0)) Temporary1 = false; else {        var oHEX60gensym756_2634036377 = getCursorAtPixelPos_2634035937(self_2634036367, mousePosWindow_2634036369);
        if (!isSome_2634036382(oHEX60gensym756_2634036377)) Temporary2 = false; else {          var cursor_2634036413 = nimCopy(null, get_2634036399(oHEX60gensym756_2634036377), NTI2197815305);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2634023410(self_2634036367, toSelection_2197815789(cursor_2634036413));
    }
    
      if (!(button_2634036368 == 3)) Temporary3 = false; else {        var oHEX60gensym758_2634036420 = getCursorAtPixelPos_2634035937(self_2634036367, mousePosWindow_2634036369);
        if (!isSome_2634036382(oHEX60gensym758_2634036420)) Temporary4 = false; else {          var cursor_2634036443 = nimCopy(null, get_2634036399(oHEX60gensym758_2634036420), NTI2197815305);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2634030381(self_2634036367, cursor_2634036443);
    }
    
      if (!(button_2634036368 == 4)) Temporary5 = false; else {        var oHEX60gensym759_2634036450 = getCursorAtPixelPos_2634035937(self_2634036367, mousePosWindow_2634036369);
        if (!isSome_2634036382(oHEX60gensym759_2634036450)) Temporary6 = false; else {          var cursor_2634036473 = nimCopy(null, get_2634036399(oHEX60gensym759_2634036450), NTI2197815305);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2634030510(self_2634036367, cursor_2634036473.Field0);
    }
    

  
}

function handleMousePress_2181038160(self_2181038161, button_2181038162, mousePosWindow_2181038163) {
  
}

function handleMousePress_2181038164(self_2181038161, button_2181038162, mousePosWindow_2181038163) {
    chckNilDisp(self_2181038161);
    if (isObj(self_2181038161.m_type, NTI2734687781)) {
    handleMousePress_2734703171(self_2181038161, button_2181038162, mousePosWindow_2181038163);
    }
    else {
    if (isObj(self_2181038161.m_type, NTI2634023118)) {
    handleMousePress_2634036366(self_2181038161, button_2181038162, mousePosWindow_2181038163);
    }
    else {
    if (isObj(self_2181038161.m_type, NTI2181038084)) {
    handleMousePress_2181038160(self_2181038161, button_2181038162, mousePosWindow_2181038163);
    }
    }}

  
}

function handleMouseRelease_2734703252(self_2734703253, button_2734703254, mousePosWindow_2734703255) {
  
}

function handleMouseRelease_2634036474(self_2634036475, button_2634036476, mousePosWindow_2634036477) {
  
}

function handleMouseRelease_2181038165(self_2181038166, button_2181038167, mousePosWindow_2181038168) {
  
}

function handleMouseRelease_2181038169(self_2181038166, button_2181038167, mousePosWindow_2181038168) {
    chckNilDisp(self_2181038166);
    if (isObj(self_2181038166.m_type, NTI2734687781)) {
    handleMouseRelease_2734703252(self_2181038166, button_2181038167, mousePosWindow_2181038168);
    }
    else {
    if (isObj(self_2181038166.m_type, NTI2634023118)) {
    handleMouseRelease_2634036474(self_2181038166, button_2181038167, mousePosWindow_2181038168);
    }
    else {
    if (isObj(self_2181038166.m_type, NTI2181038084)) {
    handleMouseRelease_2181038165(self_2181038166, button_2181038167, mousePosWindow_2181038168);
    }
    }}

  
}

function handleMouseMove_2734703256(self_2734703257, mousePosWindow_2734703258, mousePosDelta_2734703259, modifiers_2734703260, buttons_2734703261) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2734703261[0] != undefined)) {
    var mousePosContent_2734703286 = HEX2D_2113929526(mousePosWindow_2734703258, xy_2113929252(self_2734703257.lastBounds));
      if (!!(isEditing_2734694383(self_2734703257))) Temporary1 = false; else {        var oHEX60gensym931_2734703289 = getNodeAtPixelPosition_2734697631(self_2734703257, mousePosContent_2734703286);
        if (!isSome_2768242522(oHEX60gensym931_2734703289)) Temporary2 = false; else {          var n_2734703312 = get_2768242542(oHEX60gensym931_2734703289);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2734690756(self_2734703257, n_2734703312);
    }
    
    }
    

  
}

function handleMouseMove_2634036478(self_2634036479, mousePosWindow_2634036480, mousePosDelta_2634036481, modifiers_2634036482, buttons_2634036483) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2634036483[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym761_2634036491 = getCursorAtPixelPos_2634035937(self_2634036479, mousePosWindow_2634036480);
        if (!isSome_2634036382(oHEX60gensym761_2634036491)) Temporary2 = false; else {          var cursor_2634036514 = nimCopy(null, get_2634036399(oHEX60gensym761_2634036491), NTI2197815305);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2634023410(self_2634036479, toSelection_2197815792(cursor_2634036514, selection_2634023404(self_2634036479), 3));
    }
    

  
}

function handleMouseMove_2181038170(self_2181038171, mousePosWindow_2181038172, mousePosDelta_2181038173, modifiers_2181038174, buttons_2181038175) {
  
}

function handleMouseMove_2181038176(self_2181038171, mousePosWindow_2181038172, mousePosDelta_2181038173, modifiers_2181038174, buttons_2181038175) {
    chckNilDisp(self_2181038171);
    if (isObj(self_2181038171.m_type, NTI2734687781)) {
    handleMouseMove_2734703256(self_2181038171, mousePosWindow_2181038172, mousePosDelta_2181038173, modifiers_2181038174, buttons_2181038175);
    }
    else {
    if (isObj(self_2181038171.m_type, NTI2634023118)) {
    handleMouseMove_2634036478(self_2181038171, mousePosWindow_2181038172, mousePosDelta_2181038173, modifiers_2181038174, buttons_2181038175);
    }
    else {
    if (isObj(self_2181038171.m_type, NTI2181038084)) {
    handleMouseMove_2181038170(self_2181038171, mousePosWindow_2181038172, mousePosDelta_2181038173, modifiers_2181038174, buttons_2181038175);
    }
    }}

  
}

function HEX26_2952790384(x_2952790386, y_2952790387) {
  var result_2952790388 = [];

    result_2952790388 = new Array(chckRange(addInt((x_2952790386).length, (y_2952790387).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2952790386).length, (y_2952790387).length), 0, 2147483647) ; ++i) { result_2952790388[i] = null; }    Label1: {
      var i_2952790406 = 0;
      var colontmp__536872962 = 0;
      colontmp__536872962 = subInt((x_2952790386).length, 1);
      var res_536872963 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872963 <= colontmp__536872962)) break Label3;
            i_2952790406 = res_536872963;
            result_2952790388[chckIndx(i_2952790406, 0, (result_2952790388).length - 1)] = x_2952790386[chckIndx(i_2952790406, 0, (x_2952790386).length - 1)];
            res_536872963 = addInt(res_536872963, 1);
          }
      };
    };
    Label4: {
      var i_2952790414 = 0;
      var colontmp__536872966 = 0;
      colontmp__536872966 = subInt((y_2952790387).length, 1);
      var res_536872967 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872967 <= colontmp__536872966)) break Label6;
            i_2952790414 = res_536872967;
            result_2952790388[chckIndx(addInt(i_2952790414, (x_2952790386).length), 0, (result_2952790388).length - 1)] = y_2952790387[chckIndx(i_2952790414, 0, (y_2952790387).length - 1)];
            res_536872967 = addInt(res_536872967, 1);
          }
      };
    };

  return result_2952790388;

}

function getEventHandlers_3003121797(self_3003121798) {
  var result_3003121799 = [];

  BeforeRet: {
    result_3003121799 = nimCopy(null, HEX26_2952790384(getEventHandlers_2181038147(self_3003121798.textEditor), [self_3003121798.eventHandler]), NTI2952790245);
    break BeforeRet;
  };

  return result_3003121799;

}

function getEventHandlers_2952790377(self_2952790378) {
  var result_2952790379 = [];

  BeforeRet: {
    result_2952790379 = nimCopy(null, HEX26_2952790384(getEventHandlers_2181038147(self_2952790378.textEditor), [self_2952790378.eventHandler]), NTI2952790245);
    break BeforeRet;
  };

  return result_2952790379;

}

function getEventHandlers_2231369744(self_2231369745) {
  var result_2231369746 = [];

  BeforeRet: {
    result_2231369746 = nimCopy(null, [self_2231369745.eventHandler], NTI2214592526);
    break BeforeRet;
  };

  return result_2231369746;

}

function getEventHandlers_2231369751(self_2231369745) {
  var result_2231369752 = [];

  BeforeRet: {
    chckNilDisp(self_2231369745);
    if (isObj(self_2231369745.m_type, NTI3003121670)) {
    result_2231369752 = getEventHandlers_3003121797(self_2231369745);
    break BeforeRet;
    }
    else {
    if (isObj(self_2231369745.m_type, NTI2952790020)) {
    result_2231369752 = getEventHandlers_2952790377(self_2231369745);
    break BeforeRet;
    }
    else {
    if (isObj(self_2231369745.m_type, NTI2231369732)) {
    result_2231369752 = getEventHandlers_2231369744(self_2231369745);
    break BeforeRet;
    }
    }}
  };

  return result_2231369752;

}

function handleScroll_3003122250(self_3003122251, scroll_3003122252, mousePosWindow_3003122253) {
    self_3003122251.selected = clamp_1694499551(subInt(self_3003122251.selected, ((scroll_3003122252.arr[chckIndx(1, 0, (scroll_3003122252.arr).length - 1)]) | 0)), 0, subInt((self_3003122251.completions).length, 1));

  
}

function handleScroll_2952790454(self_2952790455, scroll_2952790456, mousePosWindow_2952790457) {
    self_2952790455.selected = clamp_1694499551(subInt(self_2952790455.selected, ((scroll_2952790456.arr[chckIndx(1, 0, (scroll_2952790456.arr).length - 1)]) | 0)), 0, subInt((self_2952790455.completions).length, 1));

  
}

function handleScroll_2231369753(self_2231369754, scroll_2231369755, mousePosWindow_2231369756) {
  
}

function handleScroll_2231369757(self_2231369754, scroll_2231369755, mousePosWindow_2231369756) {
    chckNilDisp(self_2231369754);
    if (isObj(self_2231369754.m_type, NTI3003121670)) {
    handleScroll_3003122250(self_2231369754, scroll_2231369755, mousePosWindow_2231369756);
    }
    else {
    if (isObj(self_2231369754.m_type, NTI2952790020)) {
    handleScroll_2952790454(self_2231369754, scroll_2231369755, mousePosWindow_2231369756);
    }
    else {
    if (isObj(self_2231369754.m_type, NTI2231369732)) {
    handleScroll_2231369753(self_2231369754, scroll_2231369755, mousePosWindow_2231369756);
    }
    }}

  
}

function none_3003121742() {
  var result_3003121748 = ({val: null});

  return result_3003121748;

}

function some_3003121757(val_3003121759) {
  var result_3003121760 = ({val: null});

    if (!(!((val_3003121759 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003121760.val = val_3003121759;

  return result_3003121760;

}

function getItemAtPixelPosition_3003121734(self_3003121735, posWindow_3003121736) {
  var result_3003121741 = ({val: null});

  BeforeRet: {
    result_3003121741 = nimCopy(result_3003121741, none_3003121742(), NTI3003121699);
    Label1: {
      var index_3003121752 = 0;
      var rect_3003121753 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872970 = 0;
      var L_536872971 = (self_3003121735.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872970 < L_536872971)) break Label3;
            index_3003121752 = self_3003121735.lastItems[chckIndx(i_536872970, 0, (self_3003121735.lastItems).length - 1)]["Field0"];
            rect_3003121753 = self_3003121735.lastItems[chckIndx(i_536872970, 0, (self_3003121735.lastItems).length - 1)]["Field1"];
            if (((contains_2097152190(rect_3003121753, posWindow_3003121736) && (0 <= index_3003121752)) && (index_3003121752 <= (self_3003121735.completions).length - 1))) {
            result_3003121741 = nimCopy(result_3003121741, some_3003121757(self_3003121735.completions[chckIndx(index_3003121752, 0, (self_3003121735.completions).length - 1)]), NTI3003121699);
            break BeforeRet;
            }
            
            i_536872970 = addInt(i_536872970, 1);
            if (!(((self_3003121735.lastItems).length == L_536872971))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3003121741;

}

function isSome_3003122278(self_3003122280) {
  var result_3003122281 = false;

    result_3003122281 = !((self_3003122280.val == null));

  return result_3003122281;

}

function isNone_3003122306(self_3003122308) {
  var result_3003122309 = false;

    result_3003122309 = (self_3003122308.val == null);

  return result_3003122309;

}

function get_3003122298(self_3003122300) {
  var result_3003122301 = null;

    if (isNone_3003122306(self_3003122300)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003122301 = self_3003122300["val"];

  return result_3003122301;

}

function handleMousePress_3003122263(self_3003122264, button_3003122265, mousePosWindow_3003122266) {
      var Temporary1;

    if ((button_3003122265 == 0)) {
      var oHEX60gensym42_3003122273 = getItemAtPixelPosition_3003121734(self_3003122264, mousePosWindow_3003122266);
      if (!isSome_3003122278(oHEX60gensym42_3003122273)) Temporary1 = false; else {        var item_3003122324 = get_3003122298(oHEX60gensym42_3003122273);
        Temporary1 = true;      }    if (Temporary1) {
    self_3003122264.handleItemConfirmed(item_3003122324);
    popPopup_1325403402(self_3003122264.editor, self_3003122264);
    }
    
    }
    

  
}

function none_2952790285() {
  var result_2952790292 = ({val: ({score: 0.0, kind: 0, id: ({id: 0}), nodeKind: 0, name: []}), has: false});

  return result_2952790292;

}

function some_2952790320(val_2952790322) {
  var result_2952790323 = ({val: ({score: 0.0, kind: 0, id: ({id: 0}), nodeKind: 0, name: []}), has: false});

    result_2952790323.has = true;
    result_2952790323.val = nimCopy(result_2952790323.val, val_2952790322, NTI2734687778);

  return result_2952790323;

}

function getItemAtPixelPosition_2952790276(self_2952790277, posWindow_2952790278) {
  var result_2952790284 = ({val: ({score: 0.0, kind: 0, id: ({id: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_2952790284 = nimCopy(result_2952790284, none_2952790285(), NTI2952790158);
    Label1: {
      var index_2952790315 = 0;
      var rect_2952790316 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872974 = 0;
      var L_536872975 = (self_2952790277.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872974 < L_536872975)) break Label3;
            index_2952790315 = self_2952790277.lastItems[chckIndx(i_536872974, 0, (self_2952790277.lastItems).length - 1)]["Field0"];
            rect_2952790316 = self_2952790277.lastItems[chckIndx(i_536872974, 0, (self_2952790277.lastItems).length - 1)]["Field1"];
            if (((contains_2097152190(rect_2952790316, posWindow_2952790278) && (0 <= index_2952790315)) && (index_2952790315 <= (self_2952790277.completions).length - 1))) {
            result_2952790284 = nimCopy(result_2952790284, some_2952790320(self_2952790277.completions[chckIndx(index_2952790315, 0, (self_2952790277.completions).length - 1)]), NTI2952790158);
            break BeforeRet;
            }
            
            i_536872974 = addInt(i_536872974, 1);
            if (!(((self_2952790277.lastItems).length == L_536872975))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952790284;

}

function isSome_2952790535(self_2952790537) {
  var result_2952790538 = false;

    result_2952790538 = self_2952790537.has;

  return result_2952790538;

}

function isNone_2952790560(self_2952790562) {
  var result_2952790563 = false;

    result_2952790563 = !(self_2952790562.has);

  return result_2952790563;

}

function get_2952790552(self_2952790554) {
  var result_2952790555 = ({score: 0.0, kind: 0, id: ({id: 0}), nodeKind: 0, name: []});

    if (isNone_2952790560(self_2952790554)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952790555 = self_2952790554.val;

  return result_2952790555;

}

function handleMousePress_2952790520(self_2952790521, button_2952790522, mousePosWindow_2952790523) {
      var Temporary1;
    var Temporary2;

    if ((button_2952790522 == 0)) {
      var oHEX60gensym8_2952790530 = getItemAtPixelPosition_2952790276(self_2952790521, mousePosWindow_2952790523);
      if (!isSome_2952790535(oHEX60gensym8_2952790530)) Temporary1 = false; else {        var item_2952790575 = nimCopy(null, get_2952790552(oHEX60gensym8_2952790530), NTI2734687778);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_2952790575;
    if (ConstSet288[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2734687777)); }
    self_2952790521.handleSymbolSelected(Temporary2.id);
    popPopup_1325403402(self_2952790521.editor, self_2952790521);
    }
    
    }
    

  
}

function handleMousePress_2231369758(self_2231369759, button_2231369760, mousePosWindow_2231369761) {
  
}

function handleMousePress_2231369762(self_2231369759, button_2231369760, mousePosWindow_2231369761) {
    chckNilDisp(self_2231369759);
    if (isObj(self_2231369759.m_type, NTI3003121670)) {
    handleMousePress_3003122263(self_2231369759, button_2231369760, mousePosWindow_2231369761);
    }
    else {
    if (isObj(self_2231369759.m_type, NTI2952790020)) {
    handleMousePress_2952790520(self_2231369759, button_2231369760, mousePosWindow_2231369761);
    }
    else {
    if (isObj(self_2231369759.m_type, NTI2231369732)) {
    handleMousePress_2231369758(self_2231369759, button_2231369760, mousePosWindow_2231369761);
    }
    }}

  
}

function handleMouseRelease_3003122327(self_3003122328, button_3003122329, mousePosWindow_3003122330) {
  
}

function handleMouseRelease_2952790578(self_2952790579, button_2952790580, mousePosWindow_2952790581) {
  
}

function handleMouseRelease_2231369763(self_2231369764, button_2231369765, mousePosWindow_2231369766) {
  
}

function handleMouseRelease_2231369767(self_2231369764, button_2231369765, mousePosWindow_2231369766) {
    chckNilDisp(self_2231369764);
    if (isObj(self_2231369764.m_type, NTI3003121670)) {
    handleMouseRelease_3003122327(self_2231369764, button_2231369765, mousePosWindow_2231369766);
    }
    else {
    if (isObj(self_2231369764.m_type, NTI2952790020)) {
    handleMouseRelease_2952790578(self_2231369764, button_2231369765, mousePosWindow_2231369766);
    }
    else {
    if (isObj(self_2231369764.m_type, NTI2231369732)) {
    handleMouseRelease_2231369763(self_2231369764, button_2231369765, mousePosWindow_2231369766);
    }
    }}

  
}

function handleMouseMove_3003122331(self_3003122332, mousePosWindow_3003122333, mousePosDelta_3003122334, modifiers_3003122335, buttons_3003122336) {
  
}

function handleMouseMove_2952790582(self_2952790583, mousePosWindow_2952790584, mousePosDelta_2952790585, modifiers_2952790586, buttons_2952790587) {
  
}

function handleMouseMove_2231369768(self_2231369769, mousePosWindow_2231369770, mousePosDelta_2231369771, modifiers_2231369772, buttons_2231369773) {
  
}

function handleMouseMove_2231369774(self_2231369769, mousePosWindow_2231369770, mousePosDelta_2231369771, modifiers_2231369772, buttons_2231369773) {
    chckNilDisp(self_2231369769);
    if (isObj(self_2231369769.m_type, NTI3003121670)) {
    handleMouseMove_3003122331(self_2231369769, mousePosWindow_2231369770, mousePosDelta_2231369771, modifiers_2231369772, buttons_2231369773);
    }
    else {
    if (isObj(self_2231369769.m_type, NTI2952790020)) {
    handleMouseMove_2952790582(self_2231369769, mousePosWindow_2231369770, mousePosDelta_2231369771, modifiers_2231369772, buttons_2231369773);
    }
    else {
    if (isObj(self_2231369769.m_type, NTI2231369732)) {
    handleMouseMove_2231369768(self_2231369769, mousePosWindow_2231369770, mousePosDelta_2231369771, modifiers_2231369772, buttons_2231369773);
    }
    }}

  
}

function HEX2A_2348810590(aHEX60gensym155_2348810592, bHEX60gensym155_2348810593) {
  var result_2348810594 = ({arr: new Float32Array(2)});

    result_2348810594 = nimCopy(result_2348810594, {arr: new Float32Array([(aHEX60gensym155_2348810592.arr[0] * bHEX60gensym155_2348810593.arr[0]), (aHEX60gensym155_2348810592.arr[1] * bHEX60gensym155_2348810593.arr[1])])}, NTI2130706819);

  return result_2348810594;

}

function calculateBounds_2348810569(self_2348810570, container_2348810571) {
  var result_2348810572 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var topLeft_2348810626 = HEX2B_2113929689(HEX2B_2113929689(xy_2113929252(container_2348810571), HEX2A_2348810590(self_2348810570.anchor.Field0, wh_2113929260(container_2348810571))), vec2_2130707424(self_2348810570.left, self_2348810570.top));
    var bottomRight_2348810673 = HEX2B_2113929689(HEX2B_2113929689(xy_2113929252(container_2348810571), HEX2A_2348810590(self_2348810570.anchor.Field1, wh_2113929260(container_2348810571))), vec2_2130707424(self_2348810570.right, self_2348810570.bottom));
    var pivotOffset_2348810710 = HEX2A_2348810590(self_2348810570.pivot, HEX2D_2113929526(bottomRight_2348810673, topLeft_2348810626));
    result_2348810572 = nimCopy(result_2348810572, rect_2113929240(HEX2D_2113929526(topLeft_2348810626, pivotOffset_2348810710), HEX2D_2113929526(bottomRight_2348810673, topLeft_2348810626)), NTI2113929221);

  return result_2348810572;

}

function formatValue_2348810755(result_2348810757, result_2348810757_Idx, value_2348810758, specifier_2348810759) {
    formatValue_738197675(result_2348810757, result_2348810757_Idx, HEX24_2113929289(value_2348810758), specifier_2348810759);

  
}

function nsuToLowerAsciiStr(s_872415326) {
  var result_872415327 = [];

    result_872415327 = nimCopy(null, mnewString(chckRange((s_872415326).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_872415333 = 0;
      var colontmp__536872982 = 0;
      colontmp__536872982 = subInt((s_872415326).length, 1);
      var res_536872983 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872983 <= colontmp__536872982)) break Label3;
            iHEX60gensym7_872415333 = res_536872983;
            result_872415327[chckIndx(iHEX60gensym7_872415333, 0, (result_872415327).length - 1)] = nsuToLowerAsciiChar(s_872415326[chckIndx(iHEX60gensym7_872415333, 0, (s_872415326).length - 1)]);
            res_536872983 = addInt(res_536872983, 1);
          }
      };
    };

  return result_872415327;

}

function HEX24_2130707487(aHEX60gensym72_2130707488) {
  var result_2130707489 = [];

    result_2130707489 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2130707494(aHEX60gensym72_2130707488.arr[0]) || [],[44,32] || [],HEX24_2130707494(aHEX60gensym72_2130707488.arr[1]) || [],[41] || []), NTI33554449);

  return result_2130707489;

}

function addQuoted_2348810839(s_2348810841, s_2348810841_Idx, x_2348810842) {
    s_2348810841[s_2348810841_Idx].push.apply(s_2348810841[s_2348810841_Idx], HEX24_2130707487(x_2348810842));;

  
}

function HEX24_2348810807(x_2348810809) {
  var result_2348810810 = [[]];

    result_2348810810[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym19_2348810821 = 0;
    if ((0 < countHEX60gensym19_2348810821)) {
    result_2348810810[0].push.apply(result_2348810810[0], [44,32]);;
    }
    
    result_2348810810[0].push.apply(result_2348810810[0], [109,105,110]);;
    result_2348810810[0].push.apply(result_2348810810[0], [58,32]);;
    countHEX60gensym19_2348810821 += 1;
    addQuoted_2348810839(result_2348810810, 0, x_2348810809["Field0"]);
    if ((0 < countHEX60gensym19_2348810821)) {
    result_2348810810[0].push.apply(result_2348810810[0], [44,32]);;
    }
    
    result_2348810810[0].push.apply(result_2348810810[0], [109,97,120]);;
    result_2348810810[0].push.apply(result_2348810810[0], [58,32]);;
    countHEX60gensym19_2348810821 += 1;
    addQuoted_2348810839(result_2348810810, 0, x_2348810809["Field1"]);
    result_2348810810[0].push.apply(result_2348810810[0], [41]);;

  return result_2348810810[0];

}

function formatValue_2348810802(result_2348810804, result_2348810804_Idx, value_2348810805, specifier_2348810806) {
    formatValue_738197675(result_2348810804, result_2348810804_Idx, HEX24_2348810807(value_2348810805), specifier_2348810806);

  
}

function formatValue_2348810869(result_2348810871, result_2348810871_Idx, value_2348810872, specifier_2348810873) {
    formatValue_738197675(result_2348810871, result_2348810871_Idx, HEX24_2130707487(value_2348810872), specifier_2348810873);

  
}

function layoutWidget_2348810743(self_2348810744, container_2348810745, frameIndex_2348810746, options_2348810747) {
    var newBounds_2348810748 = calculateBounds_2348810569(self_2348810744, container_2348810745);
    if (self_2348810744.logLayout) {
    var fmtRes_2348810754 = [mnewString(0)];
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2348810755(fmtRes_2348810754, 0, container_2348810745, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44,32]);;
    formatValue_2348810760(fmtRes_2348810754, 0, frameIndex_2348810746, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2348810802(fmtRes_2348810754, 0, self_2348810744.anchor, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2348810869(fmtRes_2348810754, 0, self_2348810744.pivot, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348810754, 0, self_2348810744.left, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44]);;
    formatValue_2348810880(fmtRes_2348810754, 0, self_2348810744.top, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348810754, 0, self_2348810744.right, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [44]);;
    formatValue_2348810880(fmtRes_2348810754, 0, self_2348810744.bottom, []);
    fmtRes_2348810754[0].push.apply(fmtRes_2348810754[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348810754, 0, newBounds_2348810748, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348810754[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2348810951(newBounds_2348810748, self_2348810744.lastBounds))) {
    var fmtRes_2348810966 = [mnewString(0)];
    fmtRes_2348810966[0].push.apply(fmtRes_2348810966[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2348810755(fmtRes_2348810966, 0, self_2348810744.lastBounds, []);
    fmtRes_2348810966[0].push.apply(fmtRes_2348810966[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348810966, 0, newBounds_2348810748, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348810966[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2348810951(newBounds_2348810748, self_2348810744.lastBounds))) {
    self_2348810744.lastBounds = nimCopy(self_2348810744.lastBounds, newBounds_2348810748, NTI2113929221);
    self_2348810744.lastBoundsChange = frameIndex_2348810746;
    }
    
    if (((frameIndex_2348810746 <= self_2348810744.lastHierarchyChange) || (frameIndex_2348810746 <= self_2348810744.lastBoundsChange))) {
    Label1: {
      var c_2348810984 = null;
      var i_536872978 = 0;
      var L_536872979 = (self_2348810744.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872978 < L_536872979)) break Label3;
            c_2348810984 = self_2348810744.children[chckIndx(i_536872978, 0, (self_2348810744.children).length - 1)];
            layoutWidget_2348810564(c_2348810984, newBounds_2348810748, frameIndex_2348810746, options_2348810747);
            i_536872978 = addInt(i_536872978, 1);
            if (!(((self_2348810744.children).length == L_536872979))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2348810295(self_2348810296) {
  var result_2348810297 = 0.0;

    result_2348810297 = (self_2348810296.bottom - self_2348810296.top);

  return result_2348810297;

}

function layoutWidget_2348811217(self_2348811218, container_2348811219, frameIndex_2348811220, options_2348811221) {
    var newBounds_2348811222 = calculateBounds_2348810569(self_2348811218, container_2348811219);
    if (self_2348811218.logLayout) {
    var fmtRes_2348811228 = [mnewString(0)];
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2348810755(fmtRes_2348811228, 0, container_2348811219, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44,32]);;
    formatValue_2348810760(fmtRes_2348811228, 0, frameIndex_2348811220, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2348810802(fmtRes_2348811228, 0, self_2348811218.anchor, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2348810869(fmtRes_2348811228, 0, self_2348811218.pivot, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811228, 0, self_2348811218.left, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44]);;
    formatValue_2348810880(fmtRes_2348811228, 0, self_2348811218.top, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811228, 0, self_2348811218.right, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [44]);;
    formatValue_2348810880(fmtRes_2348811228, 0, self_2348811218.bottom, []);
    fmtRes_2348811228[0].push.apply(fmtRes_2348811228[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811228, 0, newBounds_2348811222, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811228[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811222, self_2348811218.lastBounds))) {
    var fmtRes_2348811283 = [mnewString(0)];
    fmtRes_2348811283[0].push.apply(fmtRes_2348811283[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2348810755(fmtRes_2348811283, 0, self_2348811218.lastBounds, []);
    fmtRes_2348811283[0].push.apply(fmtRes_2348811283[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811283, 0, newBounds_2348811222, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811283[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811222, self_2348811218.lastBounds))) {
    self_2348811218.lastBounds = nimCopy(self_2348811218.lastBounds, newBounds_2348811222, NTI2113929221);
    self_2348811218.lastBoundsChange = frameIndex_2348811220;
    }
    
    if (((frameIndex_2348811220 <= self_2348811218.lastHierarchyChange) || (frameIndex_2348811220 <= self_2348811218.lastBoundsChange))) {
    var lastY_2348811298 = 0.0;
    Label1: {
      var c_2348811302 = null;
      var i_536872986 = 0;
      var L_536872987 = (self_2348811218.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872986 < L_536872987)) break Label3;
            c_2348811302 = self_2348811218.children[chckIndx(i_536872986, 0, (self_2348811218.children).length - 1)];
            var height_2348811303 = height_2348810295(c_2348811302);
            c_2348811302.top = lastY_2348811298;
            c_2348811302.bottom = (lastY_2348811298 + height_2348811303);
            layoutWidget_2348810564(c_2348811302, newBounds_2348811222, frameIndex_2348811220, options_2348811221);
            lastY_2348811298 = ((c_2348811302.lastBounds.y + c_2348811302.lastBounds.h) - newBounds_2348811222.y);
            i_536872986 = addInt(i_536872986, 1);
            if (!(((self_2348811218.children).length == L_536872987))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2348811118() {
  var result_2348811125 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2348811125;

}

function isSome_2348811138(self_2348811140) {
  var result_2348811141 = false;

    result_2348811141 = self_2348811140.has;

  return result_2348811141;

}

function isNone_2348811163(self_2348811165) {
  var result_2348811166 = false;

    result_2348811166 = !(self_2348811165.has);

  return result_2348811166;

}

function get_2348811155(self_2348811157) {
  var result_2348811158 = null;

  BeforeRet: {
    if (isNone_2348811163(self_2348811157)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2348811158 = self_2348811157.val;
    break BeforeRet;
  };

  return result_2348811158;

}

function some_2348811200(val_2348811202) {
  var result_2348811203 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2348811203.has = true;
    result_2348811203.val = nimCopy(result_2348811203.val, val_2348811202, NTI2113929221);

  return result_2348811203;

}

function layoutWidget_2348810985(self_2348810986, container_2348810987, frameIndex_2348810988, options_2348810989) {
            var Temporary10;

    var newBounds_2348810990 = calculateBounds_2348810569(self_2348810986, container_2348810987);
    if (self_2348810986.logLayout) {
    var fmtRes_2348810996 = [mnewString(0)];
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2348810755(fmtRes_2348810996, 0, container_2348810987, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44,32]);;
    formatValue_2348810760(fmtRes_2348810996, 0, frameIndex_2348810988, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2348810802(fmtRes_2348810996, 0, self_2348810986.anchor, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2348810869(fmtRes_2348810996, 0, self_2348810986.pivot, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348810996, 0, self_2348810986.left, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44]);;
    formatValue_2348810880(fmtRes_2348810996, 0, self_2348810986.top, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348810996, 0, self_2348810986.right, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [44]);;
    formatValue_2348810880(fmtRes_2348810996, 0, self_2348810986.bottom, []);
    fmtRes_2348810996[0].push.apply(fmtRes_2348810996[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348810996, 0, newBounds_2348810990, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348810996[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2348810951(newBounds_2348810990, self_2348810986.lastBounds))) {
    var fmtRes_2348811051 = [mnewString(0)];
    fmtRes_2348811051[0].push.apply(fmtRes_2348811051[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2348810755(fmtRes_2348811051, 0, self_2348810986.lastBounds, []);
    fmtRes_2348811051[0].push.apply(fmtRes_2348811051[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811051, 0, newBounds_2348810990, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811051[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2348810951(newBounds_2348810990, self_2348810986.lastBounds))) {
    self_2348810986.lastBounds = nimCopy(self_2348810986.lastBounds, newBounds_2348810990, NTI2113929221);
    self_2348810986.lastBoundsChange = frameIndex_2348810988;
    }
    
    if (((frameIndex_2348810988 <= self_2348810986.lastHierarchyChange) || (frameIndex_2348810988 <= self_2348810986.lastBoundsChange))) {
    Label1: {
      var i_2348811098 = 0;
      var c_2348811099 = null;
      var i_536872995 = 0;
      var L_536872996 = (self_2348810986.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872995 < L_536872996)) break Label3;
            i_2348811098 = i_536872995;
            c_2348811099 = self_2348810986.children[chckIndx(i_536872995, 0, (self_2348810986.children).length - 1)];
            var oldBounds_2348811100 = nimCopy(null, c_2348811099.lastBounds, NTI2113929221);
            layoutWidget_2348810564(c_2348811099, newBounds_2348810990, frameIndex_2348810988, options_2348810989);
            var newBounds_2348811101 = nimCopy(null, c_2348811099.lastBounds, NTI2113929221);
            if ((!(HEX3DHEX3D_2348810951(oldBounds_2348811100, newBounds_2348811101)) && !(contains_2097152198(newBounds_2348811101, oldBounds_2348811100)))) {
            var invalidationRect_2348811106 = nimCopy(null, oldBounds_2348811100, NTI2113929221);
            Label4: {
              var k_2348811112 = 0;
              var colontmp__536872991 = 0;
              colontmp__536872991 = subInt(i_2348811098, 1);
              var res_536872992 = colontmp__536872991;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872992)) break Label6;
                    k_2348811112 = res_536872992;
                    invalidate_2348810471(self_2348810986.children[chckIndx(k_2348811112, 0, (self_2348810986.children).length - 1)], frameIndex_2348810988, invalidationRect_2348811106);
                    if (contains_2097152198(self_2348810986.children[chckIndx(k_2348811112, 0, (self_2348810986.children).length - 1)].lastBounds, invalidationRect_2348811106)) {
                    break Label4;
                    }
                    
                    res_536872992 = subInt(res_536872992, 1);
                  }
              };
            };
            }
            
            i_536872995 = addInt(i_536872995, 1);
            if (!(((self_2348810986.children).length == L_536872996))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2348811126 = [none_2348811118()];
    Label7: {
      var i_2348811132 = 0;
      var c_2348811133 = null;
      var i_536872999 = 0;
      var L_536873000 = (self_2348810986.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872999 < L_536873000)) break Label9;
            i_2348811132 = i_536872999;
            c_2348811133 = self_2348810986.children[chckIndx(i_536872999, 0, (self_2348810986.children).length - 1)];
            if (isSome_2348811138(invalidationRect_2348811126[0])) {
            invalidate_2348810471(c_2348811133, frameIndex_2348810988, get_2348811155(invalidationRect_2348811126[0]));
            }
            
            if (isSome_2348811138(invalidationRect_2348811126[0])) {
            Temporary10 = some_2348811200(or_2113929304(get_2348811155(invalidationRect_2348811126[0]), c_2348811133.lastBounds));
            }
            else {
            Temporary10 = some_2348811200(c_2348811133.lastBounds);
            }
            
            invalidationRect_2348811126[0] = nimCopy(invalidationRect_2348811126[0], Temporary10, NTI2348810852);
            i_536872999 = addInt(i_536872999, 1);
            if (!(((self_2348810986.children).length == L_536873000))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2466250762(x_2466250764, x_2466250764_Idx, y_2466250765) {
    x_2466250764[x_2466250764_Idx] = (x_2466250764[x_2466250764_Idx] - y_2466250765);

  
}

function layoutWidget_2348811391(self_2348811392, container_2348811393, frameIndex_2348811394, options_2348811395) {
    var newBounds_2348811396 = calculateBounds_2348810569(self_2348811392, container_2348811393);
    if (self_2348811392.sizeToContent) {
    var size_2348811397 = options_2348811395.getTextBounds(self_2348811392.text);
    var incX_2348811399 = max_33555642((size_2348811397.arr[chckIndx(0, 0, (size_2348811397.arr).length - 1)] - newBounds_2348811396.w), 0.0);
    var incY_2348811401 = max_33555642((size_2348811397.arr[chckIndx(1, 0, (size_2348811397.arr).length - 1)] - newBounds_2348811396.h), 0.0);
    newBounds_2348811396.w = size_2348811397.arr[chckIndx(0, 0, (size_2348811397.arr).length - 1)];
    newBounds_2348811396.h = size_2348811397.arr[chckIndx(1, 0, (size_2348811397.arr).length - 1)];
    HEX2DHEX3D_2466250762(newBounds_2348811396, "x", (incX_2348811399 * self_2348811392.pivot.arr[chckIndx(0, 0, (self_2348811392.pivot.arr).length - 1)]));
    HEX2DHEX3D_2466250762(newBounds_2348811396, "y", (incY_2348811401 * self_2348811392.pivot.arr[chckIndx(1, 0, (self_2348811392.pivot.arr).length - 1)]));
    }
    
    if (self_2348811392.logLayout) {
    var fmtRes_2348811419 = [mnewString(0)];
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_738197675(fmtRes_2348811419, 0, self_2348811392.text, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [39,44,32]);;
    formatValue_2348810755(fmtRes_2348811419, 0, container_2348811393, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44,32]);;
    formatValue_2348810760(fmtRes_2348811419, 0, frameIndex_2348811394, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2348810802(fmtRes_2348811419, 0, self_2348811392.anchor, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2348810869(fmtRes_2348811419, 0, self_2348811392.pivot, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811419, 0, self_2348811392.left, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44]);;
    formatValue_2348810880(fmtRes_2348811419, 0, self_2348811392.top, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811419, 0, self_2348811392.right, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [44]);;
    formatValue_2348810880(fmtRes_2348811419, 0, self_2348811392.bottom, []);
    fmtRes_2348811419[0].push.apply(fmtRes_2348811419[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811419, 0, newBounds_2348811396, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811419[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811396, self_2348811392.lastBounds))) {
    var fmtRes_2348811474 = [mnewString(0)];
    fmtRes_2348811474[0].push.apply(fmtRes_2348811474[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2348810755(fmtRes_2348811474, 0, self_2348811392.lastBounds, []);
    fmtRes_2348811474[0].push.apply(fmtRes_2348811474[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811474, 0, newBounds_2348811396, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811474[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811396, self_2348811392.lastBounds))) {
    self_2348811392.lastBounds = nimCopy(self_2348811392.lastBounds, newBounds_2348811396, NTI2113929221);
    self_2348811392.lastBoundsChange = frameIndex_2348811394;
    }
    

  
}

function width_2348810292(self_2348810293) {
  var result_2348810294 = 0.0;

    result_2348810294 = (self_2348810293.right - self_2348810293.left);

  return result_2348810294;

}

function layoutWidget_2348811304(self_2348811305, container_2348811306, frameIndex_2348811307, options_2348811308) {
    var newBounds_2348811309 = calculateBounds_2348810569(self_2348811305, container_2348811306);
    if (self_2348811305.logLayout) {
    var fmtRes_2348811315 = [mnewString(0)];
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2348810755(fmtRes_2348811315, 0, container_2348811306, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44,32]);;
    formatValue_2348810760(fmtRes_2348811315, 0, frameIndex_2348811307, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2348810802(fmtRes_2348811315, 0, self_2348811305.anchor, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2348810869(fmtRes_2348811315, 0, self_2348811305.pivot, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811315, 0, self_2348811305.left, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44]);;
    formatValue_2348810880(fmtRes_2348811315, 0, self_2348811305.top, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44,32]);;
    formatValue_2348810880(fmtRes_2348811315, 0, self_2348811305.right, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [44]);;
    formatValue_2348810880(fmtRes_2348811315, 0, self_2348811305.bottom, []);
    fmtRes_2348811315[0].push.apply(fmtRes_2348811315[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811315, 0, newBounds_2348811309, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811315[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811309, self_2348811305.lastBounds))) {
    var fmtRes_2348811370 = [mnewString(0)];
    fmtRes_2348811370[0].push.apply(fmtRes_2348811370[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2348810755(fmtRes_2348811370, 0, self_2348811305.lastBounds, []);
    fmtRes_2348811370[0].push.apply(fmtRes_2348811370[0], [32,45,62,32]);;
    formatValue_2348810755(fmtRes_2348811370, 0, newBounds_2348811309, []);
    log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_2348811370[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2348810951(newBounds_2348811309, self_2348811305.lastBounds))) {
    self_2348811305.lastBounds = nimCopy(self_2348811305.lastBounds, newBounds_2348811309, NTI2113929221);
    self_2348811305.lastBoundsChange = frameIndex_2348811307;
    }
    
    if (((frameIndex_2348811307 <= self_2348811305.lastHierarchyChange) || (frameIndex_2348811307 <= self_2348811305.lastBoundsChange))) {
    var lastX_2348811385 = 0.0;
    Label1: {
      var c_2348811389 = null;
      var i_536873003 = 0;
      var L_536873004 = (self_2348811305.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873003 < L_536873004)) break Label3;
            c_2348811389 = self_2348811305.children[chckIndx(i_536873003, 0, (self_2348811305.children).length - 1)];
            var width_2348811390 = width_2348810292(c_2348811389);
            c_2348811389.left = lastX_2348811385;
            c_2348811389.right = (lastX_2348811385 + width_2348811390);
            layoutWidget_2348810564(c_2348811389, newBounds_2348811309, frameIndex_2348811307, options_2348811308);
            lastX_2348811385 = ((c_2348811389.lastBounds.x + c_2348811389.lastBounds.w) - newBounds_2348811309.x);
            i_536873003 = addInt(i_536873003, 1);
            if (!(((self_2348811305.children).length == L_536873004))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2348810559(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563) {
  
}

function layoutWidget_2348810564(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563) {
    chckNilDisp(self_2348810560);
    if (isObj(self_2348810560.m_type, NTI2348810252)) {
    layoutWidget_2348810743(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    else {
    if (isObj(self_2348810560.m_type, NTI2348810256)) {
    layoutWidget_2348811217(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    else {
    if (isObj(self_2348810560.m_type, NTI2348810254)) {
    layoutWidget_2348810985(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    else {
    if (isObj(self_2348810560.m_type, NTI2348810260)) {
    layoutWidget_2348811391(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    else {
    if (isObj(self_2348810560.m_type, NTI2348810258)) {
    layoutWidget_2348811304(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    else {
    if (isObj(self_2348810560.m_type, NTI2348810250)) {
    layoutWidget_2348810559(self_2348810560, bounds_2348810561, frameIndex_2348810562, options_2348810563);
    }
    }}}}}

  
}

function size_3070231449(self_3070231450) {
  var result_3070231451 = ({arr: new Float32Array(2)});

    result_3070231451 = nimCopy(result_3070231451, vec2_2130707424(self_3070231450.content.clientWidth, self_3070231450.content.clientHeight), NTI2130706819);

  return result_3070231451;

}

function size_2332033133(self_2332033134) {
  var result_2332033135 = ({arr: new Float32Array(2)});

  return result_2332033135;

}

function size_2332033136(self_2332033134) {
  var result_2332033137 = ({arr: new Float32Array(2)});

  BeforeRet: {
    chckNilDisp(self_2332033134);
    if (isObj(self_2332033134.m_type, NTI3070230534)) {
    result_2332033137 = nimCopy(result_2332033137, size_3070231449(self_2332033134), NTI2130706819);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033134.m_type, NTI2332033028)) {
    result_2332033137 = nimCopy(result_2332033137, size_2332033133(self_2332033134), NTI2130706819);
    break BeforeRet;
    }
    }
  };

  return result_2332033137;

}

function HEX2D_2097152165(a_2097152166, b_2097152167) {
  var result_2097152168 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2097152168.x = (a_2097152166.x - b_2097152167.arr[chckIndx(0, 0, (b_2097152167.arr).length - 1)]);
    result_2097152168.y = (a_2097152166.y - b_2097152167.arr[chckIndx(1, 0, (b_2097152167.arr).length - 1)]);
    result_2097152168.w = a_2097152166.w;
    result_2097152168.h = a_2097152166.h;

  return result_2097152168;

}

function pop_3070231544(s_3070231546, s_3070231546_Idx) {
  var result_3070231547 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3070231551 = subInt((s_3070231546[s_3070231546_Idx]).length, 1);
    result_3070231547 = nimCopy(result_3070231547, s_3070231546[s_3070231546_Idx][chckIndx(L_3070231551, 0, (s_3070231546[s_3070231546_Idx]).length - 1)], NTI2113929221);
    if (s_3070231546[s_3070231546_Idx].length < chckRange(L_3070231551, 0, 2147483647)) { for (var i = s_3070231546[s_3070231546_Idx].length ; i < chckRange(L_3070231551, 0, 2147483647) ; ++i) s_3070231546[s_3070231546_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3070231546[s_3070231546_Idx].length = chckRange(L_3070231551, 0, 2147483647); };

  return result_3070231547;

}

function renderWidget_3070231557(self_3070231558, renderer_3070231559, forceRedraw_3070231560, frameIndex_3070231561) {
    var Temporary6;

  var result_3070231562 = [];

  BeforeRet: {
    if (((((self_3070231558.lastHierarchyChange < frameIndex_3070231561) && (self_3070231558.lastBoundsChange < frameIndex_3070231561)) && (self_3070231558.lastInvalidation < frameIndex_3070231561)) && !(forceRedraw_3070231560))) {
    break BeforeRet;
    }
    
    var relBounds_3070231569 = HEX2D_2097152165(self_3070231558.lastBounds, xy_2113929252(renderer_3070231559.boundsStack[chckIndx((renderer_3070231559.boundsStack).length - 1, 0, (renderer_3070231559.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3070231558.lastBounds, NTI2113929221);
    renderer_3070231559.boundsStack.push(Temporary1);;
    try {
    result_3070231562 = nimCopy(null, [], NTI33554449);
    Label3: {
      var c_3070231580 = null;
      var i_536873007 = 0;
      var L_536873008 = (self_3070231558.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536873007 < L_536873008)) break Label5;
            c_3070231580 = self_3070231558.children[chckIndx(i_536873007, 0, (self_3070231558.children).length - 1)];
            result_3070231562.push.apply(result_3070231562, renderWidget_3070231534(c_3070231580, renderer_3070231559, (forceRedraw_3070231560 || self_3070231558.fillBackground), frameIndex_3070231561));;
            i_536873007 = addInt(i_536873007, 1);
            if (!(((self_3070231558.children).length == L_536873008))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3070231558.fillBackground) {
    var fmtRes_3070231585 = [mnewString(0)];
    fmtRes_3070231585[0].push.apply(fmtRes_3070231585[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_738197675(fmtRes_3070231585, 0, toHtmlHex_2365587896(self_3070231558.backgroundColor), []);
    fmtRes_3070231585[0].push.apply(fmtRes_3070231585[0], [59]);;
    Temporary6 = fmtRes_3070231585[0];
    }
    else {
    Temporary6 = [];
    }
    
    var backgroundColor_3070231586 = nimCopy(null, Temporary6, NTI33554449);
    var fmtRes_3070231629 = [mnewString(0)];
    fmtRes_3070231629[0].push.apply(fmtRes_3070231629[0], [108,101,102,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231629, 0, ((relBounds_3070231569.x) | 0), []);
    fmtRes_3070231629[0].push.apply(fmtRes_3070231629[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2348810760(fmtRes_3070231629, 0, ((relBounds_3070231569.y) | 0), []);
    fmtRes_3070231629[0].push.apply(fmtRes_3070231629[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070231629, 0, ((relBounds_3070231569.w) | 0), []);
    fmtRes_3070231629[0].push.apply(fmtRes_3070231629[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231629, 0, ((relBounds_3070231569.h) | 0), []);
    fmtRes_3070231629[0].push.apply(fmtRes_3070231629[0], [112,120,59,32]);;
    formatValue_738197675(fmtRes_3070231629, 0, backgroundColor_3070231586, []);
    result_3070231562 = nimCopy(null, ([60,100,105,118,32,115,116,121,108,101,61,34] || []).concat(fmtRes_3070231629[0] || [],[34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62] || [],result_3070231562 || [],[60,47,100,105,118,62] || []), NTI33554449);
    } finally {
    var _ = pop_3070231544(renderer_3070231559, "boundsStack");
    }
  };

  return result_3070231562;

}

function renderWidget_3070231714(self_3070231715, renderer_3070231716, forceRedraw_3070231717, frameIndex_3070231718) {
    var Temporary6;

  var result_3070231719 = [];

  BeforeRet: {
    if (((((self_3070231715.lastHierarchyChange < frameIndex_3070231718) && (self_3070231715.lastBoundsChange < frameIndex_3070231718)) && (self_3070231715.lastInvalidation < frameIndex_3070231718)) && !(forceRedraw_3070231717))) {
    break BeforeRet;
    }
    
    var relBounds_3070231726 = HEX2D_2097152165(self_3070231715.lastBounds, xy_2113929252(renderer_3070231716.boundsStack[chckIndx((renderer_3070231716.boundsStack).length - 1, 0, (renderer_3070231716.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3070231715.lastBounds, NTI2113929221);
    renderer_3070231716.boundsStack.push(Temporary1);;
    try {
    result_3070231719 = nimCopy(null, [], NTI33554449);
    Label3: {
      var c_3070231737 = null;
      var i_536873011 = 0;
      var L_536873012 = (self_3070231715.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536873011 < L_536873012)) break Label5;
            c_3070231737 = self_3070231715.children[chckIndx(i_536873011, 0, (self_3070231715.children).length - 1)];
            result_3070231719.push.apply(result_3070231719, renderWidget_3070231534(c_3070231737, renderer_3070231716, (forceRedraw_3070231717 || self_3070231715.fillBackground), frameIndex_3070231718));;
            i_536873011 = addInt(i_536873011, 1);
            if (!(((self_3070231715.children).length == L_536873012))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3070231715.fillBackground) {
    var fmtRes_3070231742 = [mnewString(0)];
    fmtRes_3070231742[0].push.apply(fmtRes_3070231742[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_738197675(fmtRes_3070231742, 0, toHtmlHex_2365587896(self_3070231715.backgroundColor), []);
    fmtRes_3070231742[0].push.apply(fmtRes_3070231742[0], [59]);;
    Temporary6 = fmtRes_3070231742[0];
    }
    else {
    Temporary6 = [];
    }
    
    var backgroundColor_3070231743 = nimCopy(null, Temporary6, NTI33554449);
    var fmtRes_3070231748 = [mnewString(0)];
    fmtRes_3070231748[0].push.apply(fmtRes_3070231748[0], [108,101,102,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231748, 0, ((relBounds_3070231726.x) | 0), []);
    fmtRes_3070231748[0].push.apply(fmtRes_3070231748[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2348810760(fmtRes_3070231748, 0, ((relBounds_3070231726.y) | 0), []);
    fmtRes_3070231748[0].push.apply(fmtRes_3070231748[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070231748, 0, ((relBounds_3070231726.w) | 0), []);
    fmtRes_3070231748[0].push.apply(fmtRes_3070231748[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231748, 0, ((relBounds_3070231726.h) | 0), []);
    fmtRes_3070231748[0].push.apply(fmtRes_3070231748[0], [112,120,59,32]);;
    formatValue_738197675(fmtRes_3070231748, 0, backgroundColor_3070231743, []);
    result_3070231719 = nimCopy(null, ([60,100,105,118,32,115,116,121,108,101,61,34] || []).concat(fmtRes_3070231748[0] || [],[34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62] || [],result_3070231719 || [],[60,47,100,105,118,62] || []), NTI33554449);
    } finally {
    var _ = pop_3070231544(renderer_3070231716, "boundsStack");
    }
  };

  return result_3070231719;

}

function renderWidget_3070231659(self_3070231660, renderer_3070231661, forceRedraw_3070231662, frameIndex_3070231663) {
    var Temporary6;

  var result_3070231664 = [];

  BeforeRet: {
    if (((((self_3070231660.lastHierarchyChange < frameIndex_3070231663) && (self_3070231660.lastBoundsChange < frameIndex_3070231663)) && (self_3070231660.lastInvalidation < frameIndex_3070231663)) && !(forceRedraw_3070231662))) {
    break BeforeRet;
    }
    
    var relBounds_3070231671 = HEX2D_2097152165(self_3070231660.lastBounds, xy_2113929252(renderer_3070231661.boundsStack[chckIndx((renderer_3070231661.boundsStack).length - 1, 0, (renderer_3070231661.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3070231660.lastBounds, NTI2113929221);
    renderer_3070231661.boundsStack.push(Temporary1);;
    try {
    result_3070231664 = nimCopy(null, [], NTI33554449);
    Label3: {
      var c_3070231682 = null;
      var i_536873015 = 0;
      var L_536873016 = (self_3070231660.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536873015 < L_536873016)) break Label5;
            c_3070231682 = self_3070231660.children[chckIndx(i_536873015, 0, (self_3070231660.children).length - 1)];
            result_3070231664.push.apply(result_3070231664, renderWidget_3070231534(c_3070231682, renderer_3070231661, (forceRedraw_3070231662 || self_3070231660.fillBackground), frameIndex_3070231663));;
            i_536873015 = addInt(i_536873015, 1);
            if (!(((self_3070231660.children).length == L_536873016))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3070231660.fillBackground) {
    var fmtRes_3070231687 = [mnewString(0)];
    fmtRes_3070231687[0].push.apply(fmtRes_3070231687[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_738197675(fmtRes_3070231687, 0, toHtmlHex_2365587896(self_3070231660.backgroundColor), []);
    fmtRes_3070231687[0].push.apply(fmtRes_3070231687[0], [59]);;
    Temporary6 = fmtRes_3070231687[0];
    }
    else {
    Temporary6 = [];
    }
    
    var backgroundColor_3070231688 = nimCopy(null, Temporary6, NTI33554449);
    var fmtRes_3070231693 = [mnewString(0)];
    fmtRes_3070231693[0].push.apply(fmtRes_3070231693[0], [108,101,102,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231693, 0, ((relBounds_3070231671.x) | 0), []);
    fmtRes_3070231693[0].push.apply(fmtRes_3070231693[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2348810760(fmtRes_3070231693, 0, ((relBounds_3070231671.y) | 0), []);
    fmtRes_3070231693[0].push.apply(fmtRes_3070231693[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070231693, 0, ((relBounds_3070231671.w) | 0), []);
    fmtRes_3070231693[0].push.apply(fmtRes_3070231693[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231693, 0, ((relBounds_3070231671.h) | 0), []);
    fmtRes_3070231693[0].push.apply(fmtRes_3070231693[0], [112,120,59,32]);;
    formatValue_738197675(fmtRes_3070231693, 0, backgroundColor_3070231688, []);
    result_3070231664 = nimCopy(null, ([60,100,105,118,32,115,116,121,108,101,61,34] || []).concat(fmtRes_3070231693[0] || [],[34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62] || [],result_3070231664 || [],[60,47,100,105,118,62] || []), NTI33554449);
    } finally {
    var _ = pop_3070231544(renderer_3070231661, "boundsStack");
    }
  };

  return result_3070231664;

}

function rawGet_3070232016(t_3070232019, key_3070232020, hc_3070232021, hc_3070232021_Idx) {
  var result_3070232022 = 0;

  BeforeRet: {
    hc_3070232021[hc_3070232021_Idx] = hash_1358954923(key_3070232020);
    if ((hc_3070232021[hc_3070232021_Idx] == 0)) {
    hc_3070232021[hc_3070232021_Idx] = 314159265;
    }
    
    if (((t_3070232019.data).length == 0)) {
    result_3070232022 = -1;
    break BeforeRet;
    }
    
    var h_3070232097 = (hc_3070232021[hc_3070232021_Idx] & (t_3070232019.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_3070232019.data[chckIndx(h_3070232097, 0, (t_3070232019.data).length - 1)].Field0)) break Label2;
          if (((t_3070232019.data[chckIndx(h_3070232097, 0, (t_3070232019.data).length - 1)].Field0 == hc_3070232021[hc_3070232021_Idx]) && eqStrings(t_3070232019.data[chckIndx(h_3070232097, 0, (t_3070232019.data).length - 1)].Field1, key_3070232020))) {
          result_3070232022 = h_3070232097;
          break BeforeRet;
          }
          
          h_3070232097 = nextTry_1342177315(h_3070232097, (t_3070232019.data).length - 1);
        }
    };
    result_3070232022 = subInt(-1, h_3070232097);
  };

  return result_3070232022;

}

function hasKey_3070232009(t_3070232012, key_3070232013) {
  var result_3070232014 = false;

    var hc_3070232015 = [0];
    result_3070232014 = (0 <= rawGet_3070232016(t_3070232012, key_3070232013, hc_3070232015, 0));

  return result_3070232014;

}

function contains_3070232003(t_3070232006, key_3070232007) {
  var result_3070232008 = false;

  BeforeRet: {
    result_3070232008 = hasKey_3070232009(t_3070232006, key_3070232007);
    break BeforeRet;
  };

  return result_3070232008;

}

function contains_3070231909(cache_3070231912, key_3070231913) {
  var result_3070231914 = false;

    result_3070231914 = contains_3070232003(cache_3070231912.table, key_3070231913);

  return result_3070231914;

}

function HEX5BHEX5D_3070232500(t_3070232503, key_3070232504) {
  var result_3070232505 = null;
  var result_3070232505_Idx = 0;

    var hcHEX60gensym22_3070232506 = [0];
    var indexHEX60gensym22_3070232513 = rawGet_3070232016(t_3070232503, key_3070232504, hcHEX60gensym22_3070232506, 0);
    if ((0 <= indexHEX60gensym22_3070232513)) {
    result_3070232505 = t_3070232503.data[chckIndx(indexHEX60gensym22_3070232513, 0, (t_3070232503.data).length - 1)]; result_3070232505_Idx = "Field2";
    }
    else {
    raiseKeyError_1660947325(key_3070232504);
    }
    

  return [result_3070232505, result_3070232505_Idx];

}

function remove_3070232616(L_3070232618, n_3070232619) {
    if ((n_3070232619 == L_3070232618.tail)) {
    L_3070232618.tail = n_3070232619.prev;
    }
    
    if ((n_3070232619 == L_3070232618.head)) {
    L_3070232618.head = n_3070232619.next;
    }
    
    if (!((n_3070232619.next == null))) {
    n_3070232619.next.prev = n_3070232619.prev;
    }
    
    if (!((n_3070232619.prev == null))) {
    n_3070232619.prev.next = n_3070232619.next;
    }
    

  
}

function prepend_3070232860(L_3070232862, n_3070232863) {
    n_3070232863.prev = null;
    n_3070232863.next = L_3070232862.head;
    if (!((L_3070232862.head == null))) {
    if (!((L_3070232862.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3070232862.head.prev = n_3070232863;
    }
    
    L_3070232862.head = n_3070232863;
    if ((L_3070232862.tail == null)) {
    L_3070232862.tail = n_3070232863;
    }
    

  
}

function HEX5BHEX5D_3070232414(cache_3070232417, key_3070232418) {
    var Temporary1;

  var result_3070232419 = [];

    var node_3070232602 = (Temporary1 = HEX5BHEX5D_3070232500(cache_3070232417.table, key_3070232418), Temporary1)[0][Temporary1[1]];
    result_3070232419 = nimCopy(null, node_3070232602.value.val, NTI33554449);
    remove_3070232616(cache_3070232417.list, node_3070232602);
    prepend_3070232860(cache_3070232417.list, node_3070232602);

  return result_3070232419;

}

function nsuContinuesWith(s_872416720, substr_872416721, start_872416722) {
  var result_872416723 = false;

  BeforeRet: {
    var i_872416724 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_872416721).length <= i_872416724)) {
          result_872416723 = true;
          break BeforeRet;
          }
          
          if ((((s_872416720).length <= addInt(i_872416724, start_872416722)) || !((s_872416720[chckIndx(addInt(i_872416724, start_872416722), 0, (s_872416720).length - 1)] == substr_872416721[chckIndx(i_872416724, 0, (substr_872416721).length - 1)])))) {
          result_872416723 = false;
          break BeforeRet;
          }
          
          i_872416724 = addInt(i_872416724, 1);
        }
    };
  };

  return result_872416723;

}

function multiReplace_872417145(s_872417146, replacements_872417147) {
                      var Temporary10;

  var result_872417148 = [];

    result_872417148 = nimCopy(null, mnewString(0), NTI33554449);
    var i_872417149 = 0;
    var fastChk_872417150 = nimCopy(null, ConstSet289, NTI872416567);
    Label1: {
      var sub_872417164 = [];
      var by_872417165 = [];
      var i_536873020 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873020 < (replacements_872417147).length)) break Label3;
            sub_872417164 = replacements_872417147[chckIndx(i_536873020, 0, (replacements_872417147).length - 1)]["Field0"];
            by_872417165 = replacements_872417147[chckIndx(i_536873020, 0, (replacements_872417147).length - 1)]["Field1"];
            if ((0 < (sub_872417164).length)) {
            fastChk_872417150[sub_872417164[chckIndx(0, 0, (sub_872417164).length - 1)]] = true;
            }
            
            i_536873020 = addInt(i_536873020, 1);
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_872417149 < (s_872417146).length)) break Label5;
          Label6: {
            if ((fastChk_872417150[s_872417146[chckIndx(i_872417149, 0, (s_872417146).length - 1)]] != undefined)) {
            Label7: {
              var sub_872417178 = [];
              var by_872417179 = [];
              var i_536873024 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_536873024 < (replacements_872417147).length)) break Label9;
                    sub_872417178 = replacements_872417147[chckIndx(i_536873024, 0, (replacements_872417147).length - 1)]["Field0"];
                    by_872417179 = replacements_872417147[chckIndx(i_536873024, 0, (replacements_872417147).length - 1)]["Field1"];
                      if (!(0 < (sub_872417178).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_872417146, sub_872417178, chckRange(i_872417149, 0, 2147483647));                      }                    if (Temporary10) {
                    result_872417148.push.apply(result_872417148, by_872417179);;
                    i_872417149 = addInt(i_872417149, (sub_872417178).length);
                    break Label6;
                    }
                    
                    i_536873024 = addInt(i_536873024, 1);
                  }
              };
            };
            }
            
            addChar(result_872417148, s_872417146[chckIndx(i_872417149, 0, (s_872417146).length - 1)]);;
            i_872417149 = addInt(i_872417149, 1);
          };
        }
    };

  return result_872417148;

}

function getOrDefault_3070233169(t_3070233172, key_3070233173, default_3070233174) {
    var Temporary1;

  var result_3070233175 = null;

    var hcHEX60gensym33_3070233178 = [0];
    var indexHEX60gensym33_3070233185 = rawGet_3070232016(t_3070233172, key_3070233173, hcHEX60gensym33_3070233178, 0);
    if ((0 <= indexHEX60gensym33_3070233185)) {
    Temporary1 = t_3070233172.data[chckIndx(indexHEX60gensym33_3070233185, 0, (t_3070233172.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3070233174;
    }
    
    result_3070233175 = Temporary1;

  return result_3070233175;

}

function newDoublyLinkedNode_3070233297(value_3070233299) {
  var result_3070233300 = null;

    result_3070233300 = ({next: null, prev: null, value: ({key: [], val: []})});
    result_3070233300.value = nimCopy(result_3070233300.value, value_3070233299, NTI3070230552);

  return result_3070233300;

}

function mustRehash_3070233621(t_3070233623) {
  var result_3070233624 = false;

    if (!((t_3070233623.counter < (t_3070233623.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3070233624 = ((mulInt((t_3070233623.data).length, 2) < mulInt(t_3070233623.counter, 3)) || (subInt((t_3070233623.data).length, t_3070233623.counter) < 4));

  return result_3070233624;

}

function rawInsert_3070234254(t_3070234258, data_3070234259, data_3070234259_Idx, key_3070234260, val_3070234261, hc_3070234262, h_3070234263) {
    data_3070234259[data_3070234259_Idx][chckIndx(h_3070234263, 0, (data_3070234259[data_3070234259_Idx]).length - 1)].Field1 = nimCopy(null, key_3070234260, NTI33554449);
    data_3070234259[data_3070234259_Idx][chckIndx(h_3070234263, 0, (data_3070234259[data_3070234259_Idx]).length - 1)].Field2 = val_3070234261;
    data_3070234259[data_3070234259_Idx][chckIndx(h_3070234263, 0, (data_3070234259[data_3070234259_Idx]).length - 1)].Field0 = hc_3070234262;

  
}

function enlarge_3070233845(t_3070233848) {
    var n_3070233851 = [];
    n_3070233851 = new Array(chckRange(mulInt((t_3070233848.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3070233848.data).length, 2), 0, 2147483647) ; ++i) { n_3070233851[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_3070233848.data; t_3070233848.data = n_3070233851; n_3070233851 = Temporary1;    Label2: {
      var i_3070233938 = 0;
      var colontmp__536873029 = 0;
      colontmp__536873029 = (n_3070233851).length - 1;
      var res_536873030 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873030 <= colontmp__536873029)) break Label4;
            i_3070233938 = res_536873030;
            var eh_3070234015 = n_3070233851[chckIndx(i_3070233938, 0, (n_3070233851).length - 1)].Field0;
            if (isFilled_1342177312(eh_3070234015)) {
            var j_3070234019 = (eh_3070234015 & (t_3070233848.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_3070233848.data[chckIndx(j_3070234019, 0, (t_3070233848.data).length - 1)].Field0)) break Label6;
                  j_3070234019 = nextTry_1342177315(j_3070234019, (t_3070233848.data).length - 1);
                }
            };
            rawInsert_3070234254(t_3070233848, t_3070233848, "data", n_3070233851[chckIndx(i_3070233938, 0, (n_3070233851).length - 1)].Field1, n_3070233851[chckIndx(i_3070233938, 0, (n_3070233851).length - 1)].Field2, eh_3070234015, j_3070234019);
            }
            
            res_536873030 = addInt(res_536873030, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3070234492(t_3070234495, key_3070234496, hc_3070234497) {
  var result_3070234498 = 0;

  BeforeRet: {
    if (((t_3070234495.data).length == 0)) {
    result_3070234498 = -1;
    break BeforeRet;
    }
    
    var h_3070234572 = (hc_3070234497 & (t_3070234495.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_3070234495.data[chckIndx(h_3070234572, 0, (t_3070234495.data).length - 1)].Field0)) break Label2;
          if (((t_3070234495.data[chckIndx(h_3070234572, 0, (t_3070234495.data).length - 1)].Field0 == hc_3070234497) && eqStrings(t_3070234495.data[chckIndx(h_3070234572, 0, (t_3070234495.data).length - 1)].Field1, key_3070234496))) {
          result_3070234498 = h_3070234572;
          break BeforeRet;
          }
          
          h_3070234572 = nextTry_1342177315(h_3070234572, (t_3070234495.data).length - 1);
        }
    };
    result_3070234498 = subInt(-1, h_3070234572);
  };

  return result_3070234498;

}

function HEX5BHEX5DHEX3D_3070233379(t_3070233382, key_3070233383, val_3070233384) {
    if (((t_3070233382.data).length == 0)) {
    var correctSizeHEX60gensym36_3070233456 = slotsNeeded_1342177323(32);
    t_3070233382.counter = 0;
    t_3070233382.data = new Array(chckRange(correctSizeHEX60gensym36_3070233456, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_3070233456, 0, 2147483647) ; ++i) { t_3070233382.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_3070233461 = [0];
    var index_3070233468 = rawGet_3070232016(t_3070233382, key_3070233383, hc_3070233461, 0);
    if ((0 <= index_3070233468)) {
    t_3070233382.data[chckIndx(index_3070233468, 0, (t_3070233382.data).length - 1)].Field2 = val_3070233384;
    }
    else {
      if (((t_3070233382.data).length == 0)) {
      var correctSizeHEX60gensym39_3070233616 = slotsNeeded_1342177323(32);
      t_3070233382.counter = 0;
      t_3070233382.data = new Array(chckRange(correctSizeHEX60gensym39_3070233616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_3070233616, 0, 2147483647) ; ++i) { t_3070233382.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_3070233621(t_3070233382)) {
      enlarge_3070233845(t_3070233382);
      index_3070233468 = rawGetKnownHC_3070234492(t_3070233382, key_3070233383, hc_3070233461[0]);
      }
      
      index_3070233468 = subInt(-1, index_3070233468);
      rawInsert_3070234254(t_3070233382, t_3070233382, "data", key_3070233383, val_3070233384, hc_3070233461[0], index_3070233468);
      t_3070233382.counter = addInt(t_3070233382.counter, 1);
    }
    

  
}

function rawGet_3070234905(t_3070234908, key_3070234909, hc_3070234910, hc_3070234910_Idx) {
  var result_3070234911 = 0;

  BeforeRet: {
    hc_3070234910[hc_3070234910_Idx] = hash_1358954923(key_3070234909);
    if ((hc_3070234910[hc_3070234910_Idx] == 0)) {
    hc_3070234910[hc_3070234910_Idx] = 314159265;
    }
    
    if (((t_3070234908.data).length == 0)) {
    result_3070234911 = -1;
    break BeforeRet;
    }
    
    var h_3070234986 = (hc_3070234910[hc_3070234910_Idx] & (t_3070234908.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_3070234908.data[chckIndx(h_3070234986, 0, (t_3070234908.data).length - 1)].Field0)) break Label2;
          if (((t_3070234908.data[chckIndx(h_3070234986, 0, (t_3070234908.data).length - 1)].Field0 == hc_3070234910[hc_3070234910_Idx]) && eqStrings(t_3070234908.data[chckIndx(h_3070234986, 0, (t_3070234908.data).length - 1)].Field1, key_3070234909))) {
          result_3070234911 = h_3070234986;
          break BeforeRet;
          }
          
          h_3070234986 = nextTry_1862271018(h_3070234986, (t_3070234908.data).length - 1);
        }
    };
    result_3070234911 = subInt(-1, h_3070234986);
  };

  return result_3070234911;

}

function exclImpl_3070234899(s_3070234901, key_3070234902) {
          var Temporary5;

  var result_3070234903 = false;

  BeforeRet: {
    var hc_3070234904 = [0];
    var i_3070235236 = rawGet_3070234905(s_3070234901, key_3070234902, hc_3070234904, 0);
    var msk_3070235240 = (s_3070234901.data).length - 1;
    result_3070234903 = true;
    if ((0 <= i_3070235236)) {
    result_3070234903 = false;
    s_3070234901.counter = subInt(s_3070234901.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3070235246 = i_3070235236;
          var r_3070235247 = j_3070235246;
          s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)].Field0 = 0;
          s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3070235236 = (addInt(i_3070235236, 1) & msk_3070235240);
                if (isEmpty_1862271012(s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3070235247 = (s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)].Field0 & msk_3070235240);
                if (!(((((r_3070235247 <= i_3070235236) && (j_3070235246 < r_3070235247)) || ((j_3070235246 < r_3070235247) && (i_3070235236 < j_3070235246))) || ((i_3070235236 < j_3070235246) && (r_3070235247 <= i_3070235236))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)];
          s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)] = genericReset(s_3070234901.data[chckIndx(i_3070235236, 0, (s_3070234901.data).length - 1)], NTI3070230608);
          s_3070234901.data[chckIndx(j_3070235246, 0, (s_3070234901.data).length - 1)] = nimCopy(s_3070234901.data[chckIndx(j_3070235246, 0, (s_3070234901.data).length - 1)], Temporary5, NTI3070230608);
        }
    };
    }
    
  };

  return result_3070234903;

}

function excl_3070234884(s_3070234886, key_3070234887) {
    var _ = exclImpl_3070234899(s_3070234886, key_3070234887);

  
}

function len_3070235966(t_3070235969) {
  var result_3070235970 = 0;

    result_3070235970 = t_3070235969.counter;

  return result_3070235970;

}

function len_3070235883(cache_3070235886) {
  var result_3070235887 = 0;

    result_3070235887 = len_3070235966(cache_3070235886.table);

  return result_3070235887;

}

function mustRehash_3070236100(t_3070236102) {
  var result_3070236103 = false;

    if (!((t_3070236102.counter < (t_3070236102.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3070236103 = ((mulInt((t_3070236102.data).length, 2) < mulInt(t_3070236102.counter, 3)) || (subInt((t_3070236102.data).length, t_3070236102.counter) < 4));

  return result_3070236103;

}

function rawGetKnownHC_3070236650(t_3070236653, key_3070236654, hc_3070236655) {
  var result_3070236656 = 0;

  BeforeRet: {
    if (((t_3070236653.data).length == 0)) {
    result_3070236656 = -1;
    break BeforeRet;
    }
    
    var h_3070236730 = (hc_3070236655 & (t_3070236653.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1862271015(t_3070236653.data[chckIndx(h_3070236730, 0, (t_3070236653.data).length - 1)].Field0)) break Label2;
          if (((t_3070236653.data[chckIndx(h_3070236730, 0, (t_3070236653.data).length - 1)].Field0 == hc_3070236655) && eqStrings(t_3070236653.data[chckIndx(h_3070236730, 0, (t_3070236653.data).length - 1)].Field1, key_3070236654))) {
          result_3070236656 = h_3070236730;
          break BeforeRet;
          }
          
          h_3070236730 = nextTry_1862271018(h_3070236730, (t_3070236653.data).length - 1);
        }
    };
    result_3070236656 = subInt(-1, h_3070236730);
  };

  return result_3070236656;

}

function rawInsert_3070237119(s_3070237121, data_3070237122, data_3070237122_Idx, key_3070237123, hc_3070237124, h_3070237125) {
    if (((data_3070237122[data_3070237122_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_3070237197 = slotsNeeded_1862271026(64);
    s_3070237121.counter = 0;
    s_3070237121.data = new Array(chckRange(correctSizeHEX60gensym56_3070237197, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3070237197, 0, 2147483647) ; ++i) { s_3070237121.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_3070237122[data_3070237122_Idx][chckIndx(h_3070237125, 0, (data_3070237122[data_3070237122_Idx]).length - 1)].Field1 = nimCopy(null, key_3070237123, NTI33554449);
    data_3070237122[data_3070237122_Idx][chckIndx(h_3070237125, 0, (data_3070237122[data_3070237122_Idx]).length - 1)].Field0 = hc_3070237124;

  
}

function enlarge_3070236330(s_3070236332) {
    var n_3070236334 = [];
    n_3070236334 = new Array(chckRange(mulInt((s_3070236332.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3070236332.data).length, 2), 0, 2147483647) ; ++i) { n_3070236334[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_3070236332.data; s_3070236332.data = n_3070236334; n_3070236334 = Temporary1;    Label2: {
      var i_3070236421 = 0;
      var colontmp__536873038 = 0;
      colontmp__536873038 = (n_3070236334).length - 1;
      var res_536873039 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873039 <= colontmp__536873038)) break Label4;
            i_3070236421 = res_536873039;
            if (isFilled_1862271015(n_3070236334[chckIndx(i_3070236421, 0, (n_3070236334).length - 1)].Field0)) {
            var j_3070236962 = subInt(-1, rawGetKnownHC_3070236650(s_3070236332, n_3070236334[chckIndx(i_3070236421, 0, (n_3070236334).length - 1)].Field1, n_3070236334[chckIndx(i_3070236421, 0, (n_3070236334).length - 1)].Field0));
            rawInsert_3070237119(s_3070236332, s_3070236332, "data", n_3070236334[chckIndx(i_3070236421, 0, (n_3070236334).length - 1)].Field1, n_3070236334[chckIndx(i_3070236421, 0, (n_3070236334).length - 1)].Field0, j_3070236962);
            }
            
            res_536873039 = addInt(res_536873039, 1);
          }
      };
    };

  
}

function incl_3070235991(s_3070235993, key_3070235994) {
    if (((s_3070235993.data).length == 0)) {
    var correctSizeHEX60gensym49_3070236070 = slotsNeeded_1862271026(64);
    s_3070235993.counter = 0;
    s_3070235993.data = new Array(chckRange(correctSizeHEX60gensym49_3070236070, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_3070236070, 0, 2147483647) ; ++i) { s_3070235993.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_3070236085 = [0];
    var index_3070236099 = rawGet_3070234905(s_3070235993, key_3070235994, hc_3070236085, 0);
    if ((index_3070236099 < 0)) {
    if (mustRehash_3070236100(s_3070235993)) {
    enlarge_3070236330(s_3070235993);
    index_3070236099 = rawGetKnownHC_3070236650(s_3070235993, key_3070235994, hc_3070236085[0]);
    }
    
    rawInsert_3070237119(s_3070235993, s_3070235993, "data", key_3070235994, hc_3070236085[0], subInt(-1, index_3070236099));
    s_3070235993.counter = addInt(s_3070235993.counter, 1);
    }
    

  
}

function del_3070237456(t_3070237459, key_3070237460) {
    var hc_3070237461 = [0];
    var i_3070237468 = rawGet_3070232016(t_3070237459, key_3070237460, hc_3070237461, 0);
    var mskHEX60gensym36_3070237472 = (t_3070237459.data).length - 1;
    if ((0 <= i_3070237468)) {
    t_3070237459.counter = subInt(t_3070237459.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3070237479 = i_3070237468;
            var rHEX60gensym36_3070237480 = jHEX60gensym36_3070237479;
            t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)].Field0 = 0;
            t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3070237468 = (addInt(i_3070237468, 1) & mskHEX60gensym36_3070237472);
                  if (isEmpty_1342177309(t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3070237480 = (t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)].Field0 & mskHEX60gensym36_3070237472);
                  if (!(((((rHEX60gensym36_3070237480 <= i_3070237468) && (jHEX60gensym36_3070237479 < rHEX60gensym36_3070237480)) || ((jHEX60gensym36_3070237479 < rHEX60gensym36_3070237480) && (i_3070237468 < jHEX60gensym36_3070237479))) || ((i_3070237468 < jHEX60gensym36_3070237479) && (rHEX60gensym36_3070237480 <= i_3070237468))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3070237459.data[chckIndx(jHEX60gensym36_3070237479, 0, (t_3070237459.data).length - 1)] = nimCopy(t_3070237459.data[chckIndx(jHEX60gensym36_3070237479, 0, (t_3070237459.data).length - 1)], t_3070237459.data[chckIndx(i_3070237468, 0, (t_3070237459.data).length - 1)], NTI3070230588);
          }
      };
    };
    }
    

  
}

function resize_3070235801(cache_3070235804) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3070235804.capacity < len_3070235883(cache_3070235804))) break Label2;
          var t_3070235971 = cache_3070235804.list.tail;
          if (cache_3070235804.recordRemovedKeys) {
          incl_3070235991(cache_3070235804.removedKeys, t_3070235971.value.key);
          }
          
          del_3070237456(cache_3070235804.table, t_3070235971.value.key);
          remove_3070232616(cache_3070235804.list, t_3070235971);
        }
    };

  
}

function addNewNode_3070233289(cache_3070233292, key_3070233293, val_3070233294) {
    var node_3070233315 = newDoublyLinkedNode_3070233297({key: nimCopy(null, key_3070233293, NTI33554449), val: nimCopy(null, val_3070233294, NTI33554449)});
    HEX5BHEX5DHEX3D_3070233379(cache_3070233292.table, key_3070233293, node_3070233315);
    prepend_3070232860(cache_3070233292.list, node_3070233315);
    if (cache_3070233292.recordRemovedKeys) {
    excl_3070234884(cache_3070233292.removedKeys, key_3070233293);
    }
    
    resize_3070235801(cache_3070233292);

  
}

function HEX5BHEX5DHEX3D_3070233074(cache_3070233077, key_3070233078, val_3070233079) {
    var node_3070233262 = getOrDefault_3070233169(cache_3070233077.table, key_3070233078, null);
    if ((node_3070233262 == null)) {
    addNewNode_3070233289(cache_3070233077, key_3070233078, val_3070233079);
    }
    else {
      node_3070233262.value.val = nimCopy(null, val_3070233079, NTI33554449);
      remove_3070232616(cache_3070233077.list, node_3070233262);
      prepend_3070232860(cache_3070233077.list, node_3070233262);
    }
    

  
}

function renderWidget_3070231824(self_3070231825, renderer_3070231826, forceRedraw_3070231827, frameIndex_3070231828) {
    var Temporary1;
    var Temporary2;

  var result_3070231829 = [];

  BeforeRet: {
    if (((((self_3070231825.lastHierarchyChange < frameIndex_3070231828) && (self_3070231825.lastBoundsChange < frameIndex_3070231828)) && (self_3070231825.lastInvalidation < frameIndex_3070231828)) && !(forceRedraw_3070231827))) {
    break BeforeRet;
    }
    
    var relBounds_3070231836 = HEX2D_2097152165(self_3070231825.lastBounds, xy_2113929252(renderer_3070231826.boundsStack[chckIndx((renderer_3070231826.boundsStack).length - 1, 0, (renderer_3070231826.boundsStack).length - 1)]));
    if (self_3070231825.fillBackground) {
    var fmtRes_3070231841 = [mnewString(0)];
    fmtRes_3070231841[0].push.apply(fmtRes_3070231841[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_738197675(fmtRes_3070231841, 0, toHtmlHex_2365587896(self_3070231825.backgroundColor), []);
    fmtRes_3070231841[0].push.apply(fmtRes_3070231841[0], [59]);;
    Temporary1 = fmtRes_3070231841[0];
    }
    else {
    Temporary1 = [];
    }
    
    var backgroundColor_3070231842 = nimCopy(null, Temporary1, NTI33554449);
    var color_3070231843 = toHtmlHex_2365587896(self_3070231825.foregroundColor);
    if (contains_3070231909(renderer_3070231826.escapedText, self_3070231825.text)) {
    Temporary2 = HEX5BHEX5D_3070232414(renderer_3070231826.escapedText, self_3070231825.text);
    }
    else {
      var escapedText_3070233010 = multiReplace_872417145(self_3070231825.text, [{Field0: [38], Field1: [38,97,109,112,59]}, {Field0: [60], Field1: [38,108,116,59]}, {Field0: [62], Field1: [38,103,116,59]}, {Field0: [34], Field1: [38,113,117,111,116,59]}, {Field0: [39], Field1: [38,35,48,51,57,59]}]);
      HEX5BHEX5DHEX3D_3070233074(renderer_3070231826.escapedText, self_3070231825.text, escapedText_3070233010);
    Temporary2 = escapedText_3070233010;
    }
    
    var text_3070238251 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3070238256 = [mnewString(0)];
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [108,101,102,116,58,32]);;
    formatValue_2348810760(fmtRes_3070238256, 0, ((relBounds_3070231836.x) | 0), []);
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2348810760(fmtRes_3070238256, 0, ((relBounds_3070231836.y) | 0), []);
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070238256, 0, ((relBounds_3070231836.w) | 0), []);
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070238256, 0, ((relBounds_3070231836.h) | 0), []);
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [112,120,59,32,111,118,101,114,102,108,111,119,58,32,118,105,115,105,98,108,101,59,32,99,111,108,111,114,58,32]);;
    formatValue_738197675(fmtRes_3070238256, 0, color_3070231843, []);
    fmtRes_3070238256[0].push.apply(fmtRes_3070238256[0], [59,32]);;
    formatValue_738197675(fmtRes_3070238256, 0, backgroundColor_3070231842, []);
    result_3070231829 = nimCopy(null, ([60,115,112,97,110,32,115,116,121,108,101,61,34] || []).concat(fmtRes_3070238256[0] || [],[34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62] || [],text_3070238251 || [],[60,47,115,112,97,110,62] || []), NTI33554449);
    self_3070231825.lastRenderedText = nimCopy(null, self_3070231825.text, NTI33554449);
  };

  return result_3070231829;

}

function renderWidget_3070231769(self_3070231770, renderer_3070231771, forceRedraw_3070231772, frameIndex_3070231773) {
    var Temporary6;

  var result_3070231774 = [];

  BeforeRet: {
    if (((((self_3070231770.lastHierarchyChange < frameIndex_3070231773) && (self_3070231770.lastBoundsChange < frameIndex_3070231773)) && (self_3070231770.lastInvalidation < frameIndex_3070231773)) && !(forceRedraw_3070231772))) {
    break BeforeRet;
    }
    
    var relBounds_3070231781 = HEX2D_2097152165(self_3070231770.lastBounds, xy_2113929252(renderer_3070231771.boundsStack[chckIndx((renderer_3070231771.boundsStack).length - 1, 0, (renderer_3070231771.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3070231770.lastBounds, NTI2113929221);
    renderer_3070231771.boundsStack.push(Temporary1);;
    try {
    result_3070231774 = nimCopy(null, [], NTI33554449);
    Label3: {
      var c_3070231792 = null;
      var i_536873045 = 0;
      var L_536873046 = (self_3070231770.children).length;
      Label4: {
          Label5: while (true) {
          if (!(i_536873045 < L_536873046)) break Label5;
            c_3070231792 = self_3070231770.children[chckIndx(i_536873045, 0, (self_3070231770.children).length - 1)];
            result_3070231774.push.apply(result_3070231774, renderWidget_3070231534(c_3070231792, renderer_3070231771, (forceRedraw_3070231772 || self_3070231770.fillBackground), frameIndex_3070231773));;
            i_536873045 = addInt(i_536873045, 1);
            if (!(((self_3070231770.children).length == L_536873046))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3070231770.fillBackground) {
    var fmtRes_3070231797 = [mnewString(0)];
    fmtRes_3070231797[0].push.apply(fmtRes_3070231797[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_738197675(fmtRes_3070231797, 0, toHtmlHex_2365587896(self_3070231770.backgroundColor), []);
    fmtRes_3070231797[0].push.apply(fmtRes_3070231797[0], [59]);;
    Temporary6 = fmtRes_3070231797[0];
    }
    else {
    Temporary6 = [];
    }
    
    var backgroundColor_3070231798 = nimCopy(null, Temporary6, NTI33554449);
    var fmtRes_3070231803 = [mnewString(0)];
    fmtRes_3070231803[0].push.apply(fmtRes_3070231803[0], [108,101,102,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231803, 0, ((relBounds_3070231781.x) | 0), []);
    fmtRes_3070231803[0].push.apply(fmtRes_3070231803[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2348810760(fmtRes_3070231803, 0, ((relBounds_3070231781.y) | 0), []);
    fmtRes_3070231803[0].push.apply(fmtRes_3070231803[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2348810760(fmtRes_3070231803, 0, ((relBounds_3070231781.w) | 0), []);
    fmtRes_3070231803[0].push.apply(fmtRes_3070231803[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2348810760(fmtRes_3070231803, 0, ((relBounds_3070231781.h) | 0), []);
    fmtRes_3070231803[0].push.apply(fmtRes_3070231803[0], [112,120,59,32]);;
    formatValue_738197675(fmtRes_3070231803, 0, backgroundColor_3070231798, []);
    result_3070231774 = nimCopy(null, ([60,100,105,118,32,115,116,121,108,101,61,34] || []).concat(fmtRes_3070231803[0] || [],[34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62] || [],result_3070231774 || [],[60,47,100,105,118,62] || []), NTI33554449);
    } finally {
    var _ = pop_3070231544(renderer_3070231771, "boundsStack");
    }
  };

  return result_3070231774;

}

function renderWidget_3070231528(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532) {
  var result_3070231533 = [];

  return result_3070231533;

}

function renderWidget_3070231534(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532) {
  var result_3070231535 = [];

  BeforeRet: {
    chckNilDisp(self_3070231529);
    if (isObj(self_3070231529.m_type, NTI2348810252)) {
    result_3070231535 = renderWidget_3070231557(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    else {
    if (isObj(self_3070231529.m_type, NTI2348810256)) {
    result_3070231535 = renderWidget_3070231714(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    else {
    if (isObj(self_3070231529.m_type, NTI2348810254)) {
    result_3070231535 = renderWidget_3070231659(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    else {
    if (isObj(self_3070231529.m_type, NTI2348810260)) {
    result_3070231535 = renderWidget_3070231824(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    else {
    if (isObj(self_3070231529.m_type, NTI2348810258)) {
    result_3070231535 = renderWidget_3070231769(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    else {
    if (isObj(self_3070231529.m_type, NTI2348810250)) {
    result_3070231535 = renderWidget_3070231528(self_3070231529, renderer_3070231530, forceRedraw_3070231531, frameIndex_3070231532);
    break BeforeRet;
    }
    }}}}}
  };

  return result_3070231535;

}

function render_3070231536(self_3070231537, widget_3070231538, frameIndex_3070231539) {
    self_3070231537.boundsStack.push(rect_2113929240(vec2_2130707358(), size_2332033136(self_3070231537)));;
    try {
    self_3070231537.redrawEverything = true;
    var result_3070231556 = renderWidget_3070231534(widget_3070231538, self_3070231537, self_3070231537.redrawEverything, frameIndex_3070231539);
    self_3070231537.content.innerHTML = toJSStr(result_3070231556);
    rawEcho(result_3070231556);
    } finally {
    var _ = pop_3070231544(self_3070231537, "boundsStack");
    }

  
}

function render_2332033123(self_2332033124, widget_2332033125, frameIndex_2332033126) {
  
}

function render_2332033127(self_2332033124, widget_2332033125, frameIndex_2332033126) {
    chckNilDisp(self_2332033124);
    if (isObj(self_2332033124.m_type, NTI3070230534)) {
    render_3070231536(self_2332033124, widget_2332033125, frameIndex_2332033126);
    }
    else {
    if (isObj(self_2332033124.m_type, NTI2332033028)) {
    render_2332033123(self_2332033124, widget_2332033125, frameIndex_2332033126);
    }
    }

  
}

function sizeChanged_2332033128(self_2332033129) {
  var result_2332033130 = false;

  return result_2332033130;

}

function sizeChanged_2332033131(self_2332033129) {
  var result_2332033132 = false;

  BeforeRet: {
    result_2332033132 = sizeChanged_2332033128(self_2332033129);
    break BeforeRet;
  };

  return result_2332033132;

}

function initDoublyLinkedList_3070230607() {
  var result_3070230609 = ({head: null, tail: null});

  return result_3070230609;

}

function initTable_3070230613(initialSize_3070230616) {
  var result_3070230617 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3070230619 = slotsNeeded_1342177323(chckRange(initialSize_3070230616, 0, 2147483647));
    result_3070230617.counter = 0;
    result_3070230617.data = new Array(chckRange(correctSizeHEX60gensym0_3070230619, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3070230619, 0, 2147483647) ; ++i) { result_3070230617.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3070230617;

}

function newLruCache_3070230597(capacity_3070230600, recordRemovedKeys_3070230601) {
  var result_3070230602 = null;

    result_3070230602 = {capacity: capacity_3070230600, list: initDoublyLinkedList_3070230607(), table: initTable_3070230613(correctSize_2818572309(capacity_3070230600)), recordRemovedKeys: recordRemovedKeys_3070230601, removedKeys: ({data: [], counter: 0})};

  return result_3070230602;

}

function invoke_3070230824(event_3070230826) {
    Label1: {
      var h_3070230849 = {Field0: ({id: 0}), Field1: null};
      var i_536873050 = 0;
      var L_536873051 = (event_3070230826.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873050 < L_536873051)) break Label3;
            h_3070230849 = event_3070230826.handlers[chckIndx(i_536873050, 0, (event_3070230826.handlers).length - 1)];
            h_3070230849.Field1();
            i_536873050 = addInt(i_536873050, 1);
            if (!(((event_3070230826.handlers).length == L_536873051))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function runeAt_805313395(s_805313396, i_805313397) {
  var result_805313398 = 0;

    if ((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] <= 127)) {
    result_805313398 = chckRange(s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] >>> 5) == 6)) {
    if ((i_805313397 <= subInt((s_805313396).length, 2))) {
    result_805313398 = chckRange((((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] & 31) << 6) | (s_805313396[chckIndx(addInt(i_805313397, 1), 0, (s_805313396).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_805313398 = 65533;
    }
    
    }
    else {
    if (((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] >>> 4) == 14)) {
    if ((i_805313397 <= subInt((s_805313396).length, 3))) {
    result_805313398 = chckRange(((((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] & 15) << 12) | ((s_805313396[chckIndx(addInt(i_805313397, 1), 0, (s_805313396).length - 1)] & 63) << 6)) | (s_805313396[chckIndx(addInt(i_805313397, 2), 0, (s_805313396).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_805313398 = 65533;
    }
    
    }
    else {
    if (((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] >>> 3) == 30)) {
    if ((i_805313397 <= subInt((s_805313396).length, 4))) {
    result_805313398 = chckRange((((((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] & 7) << 18) | ((s_805313396[chckIndx(addInt(i_805313397, 1), 0, (s_805313396).length - 1)] & 63) << 12)) | ((s_805313396[chckIndx(addInt(i_805313397, 2), 0, (s_805313396).length - 1)] & 63) << 6)) | (s_805313396[chckIndx(addInt(i_805313397, 3), 0, (s_805313396).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_805313398 = 65533;
    }
    
    }
    else {
    if (((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] >>> 2) == 62)) {
    if ((i_805313397 <= subInt((s_805313396).length, 5))) {
    result_805313398 = chckRange(((((((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] & 3) << 24) | ((s_805313396[chckIndx(addInt(i_805313397, 1), 0, (s_805313396).length - 1)] & 63) << 18)) | ((s_805313396[chckIndx(addInt(i_805313397, 2), 0, (s_805313396).length - 1)] & 63) << 12)) | ((s_805313396[chckIndx(addInt(i_805313397, 3), 0, (s_805313396).length - 1)] & 63) << 6)) | (s_805313396[chckIndx(addInt(i_805313397, 4), 0, (s_805313396).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_805313398 = 65533;
    }
    
    }
    else {
    if (((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] >>> 1) == 126)) {
    if ((i_805313397 <= subInt((s_805313396).length, 6))) {
    result_805313398 = chckRange((((((((s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)] & 1) << 30) | ((s_805313396[chckIndx(addInt(i_805313397, 1), 0, (s_805313396).length - 1)] & 63) << 24)) | ((s_805313396[chckIndx(addInt(i_805313397, 2), 0, (s_805313396).length - 1)] & 63) << 18)) | ((s_805313396[chckIndx(addInt(i_805313397, 3), 0, (s_805313396).length - 1)] & 63) << 12)) | ((s_805313396[chckIndx(addInt(i_805313397, 4), 0, (s_805313396).length - 1)] & 63) << 6)) | (s_805313396[chckIndx(addInt(i_805313397, 5), 0, (s_805313396).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_805313398 = 65533;
    }
    
    }
    else {
      result_805313398 = chckRange(s_805313396[chckIndx(i_805313397, 0, (s_805313396).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_805313398;

}

function toInput_3070230589(key_3070230590, code_3070230591, keyCode_3070230592) {
  var result_3070231524 = 0;

    switch (key_3070230590) {
    case "Enter":
      result_3070231524 = -1;
      break;
    case "Escape":
      result_3070231524 = -2;
      break;
    case "Backspace":
      result_3070231524 = -3;
      break;
    case " ":
      result_3070231524 = -4;
      break;
    case "Delete":
      result_3070231524 = -5;
      break;
    case "Tab":
      result_3070231524 = -6;
      break;
    case "ArrowLeft":
      result_3070231524 = -7;
      break;
    case "ArrowRight":
      result_3070231524 = -8;
      break;
    case "ArrowUp":
      result_3070231524 = -9;
      break;
    case "ArrowDown":
      result_3070231524 = -10;
      break;
    case "Home":
      result_3070231524 = -11;
      break;
    case "End":
      result_3070231524 = -12;
      break;
    case "PageUp":
      result_3070231524 = -13;
      break;
    case "PageDown":
      result_3070231524 = -14;
      break;
    default: 
      if (      keyCode_3070230592 >= 112 && keyCode_3070230592 <= 123      ){        result_3070231524 = addInt(-20, subInt(keyCode_3070230592, 112));
        }
      else{
        if ((((key_3070230590) == null ? 0 : (key_3070230590).length) == 1)) {
        result_3070231524 = runeAt_805313395(cstrToNimstr(key_3070230590), 0);
        }
        
        }
      break;
    }

  return result_3070231524;

}

function invoke_3070230909(event_3070230911, arg_3070230912) {
    Label1: {
      var h_3070230935 = {Field0: ({id: 0}), Field1: null};
      var i_536873055 = 0;
      var L_536873056 = (event_3070230911.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873055 < L_536873056)) break Label3;
            h_3070230935 = event_3070230911.handlers[chckIndx(i_536873055, 0, (event_3070230911.handlers).length - 1)];
            h_3070230935.Field1(arg_3070230912);
            i_536873055 = addInt(i_536873055, 1);
            if (!(((event_3070230911.handlers).length == L_536873056))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3070231338(event_3070231340, arg_3070231341) {
    Label1: {
      var h_3070231364 = {Field0: ({id: 0}), Field1: null};
      var i_536873060 = 0;
      var L_536873061 = (event_3070231340.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873060 < L_536873061)) break Label3;
            h_3070231364 = event_3070231340.handlers[chckIndx(i_536873060, 0, (event_3070231340.handlers).length - 1)];
            h_3070231364.Field1(arg_3070231341);
            i_536873060 = addInt(i_536873060, 1);
            if (!(((event_3070231340.handlers).length == L_536873061))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3070231025(aHEX60gensym155_3070231027, bHEX60gensym155_3070231028) {
  var result_3070231029 = ({arr: new Float32Array(2)});

    result_3070231029 = nimCopy(result_3070231029, {arr: new Float32Array([(aHEX60gensym155_3070231027.arr[0] * bHEX60gensym155_3070231028), (aHEX60gensym155_3070231027.arr[1] * bHEX60gensym155_3070231028)])}, NTI2130706819);

  return result_3070231029;

}

function init_3070230595(self_3070230596) {
    
function HEX3Aanonymous_3070230660(text_3070230661) {
      var result_3070230662 = ({arr: new Float32Array(2)});

        result_3070230662.arr[chckIndx(0, 0, (result_3070230662.arr).length - 1)] = ((text_3070230661).length * self_3070230596.mCharWidth);
        result_3070230662.arr[chckIndx(1, 0, (result_3070230662.arr).length - 1)] = totalLineHeight_2332033177(self_3070230596);

      return result_3070230662;

    }
    
function HEX3Aanonymous_3070230800(e_3070230801) {
        invoke_3070230824(self_3070230596.onResized);

      
    }
    
function HEX3Aanonymous_3070230870(e_3070230871) {
        var ke_3070230872 = e_3070230871;
        var modifiers_3070230873 = nimCopy(null, ConstSet290, NTI2046820382);
        if (ke_3070230872.altKey) {
        modifiers_3070230873[2] = true;
        }
        
        if (ke_3070230872.shiftKey) {
        modifiers_3070230873[1] = true;
        }
        
        if (ke_3070230872.ctrlKey) {
        modifiers_3070230873[0] = true;
        }
        
        var input_3070230886 = toInput_3070230589(ke_3070230872.key, ke_3070230872.code, ke_3070230872.keyCode);
        invoke_3070230909(self_3070230596.onKeyPress, {Field0: input_3070230886, Field1: nimCopy(null, modifiers_3070230873, NTI2046820382)});

      
    }
    
function HEX3Aanonymous_3070230974(e_3070230975) {
        var we_3070230976 = e_3070230975;
        var modifiers_3070230977 = nimCopy(null, ConstSet291, NTI2046820382);
        if (we_3070230976.altKey) {
        modifiers_3070230977[2] = true;
        }
        
        if (we_3070230976.shiftKey) {
        modifiers_3070230977[1] = true;
        }
        
        if (we_3070230976.ctrlKey) {
        modifiers_3070230977[0] = true;
        }
        
        invoke_3070231338(self_3070230596.onScroll, {Field0: vec2_2130707424(we_3070230976.clientX, we_3070230976.clientY), Field1: HEX2A_3070231025(vec2_2130707424(we_3070230976.deltaX, -(we_3070230976.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3070230977, NTI2046820382)});

      
    }
    
function HEX3Aanonymous_3070231394(e_3070231395) {
        var fmtRes_3070231401 = mnewString(0);
        fmtRes_3070231401.push.apply(fmtRes_3070231401, [99,108,105,99,107]);;
        log_1191182436(logger_721420488[0], 1, [nimCopy(null, fmtRes_3070231401, NTI33554449)]);

      
    }

    self_3070230596.mFontSize = 18.0;
    self_3070230596.mLineHeight = 20.0;
    self_3070230596.mLineDistance = 2.0;
    self_3070230596.mCharWidth = 18.0;
    self_3070230596.escapedText = newLruCache_3070230597(1000, false);
    self_3070230596.layoutOptions.getTextBounds = HEX3Aanonymous_3070230660;
    window.addEventListener("resize", HEX3Aanonymous_3070230800, false);
    self_3070230596.content = document.getElementById("view");
    self_3070230596.content.addEventListener("keydown", HEX3Aanonymous_3070230870, false);
    self_3070230596.content.addEventListener("wheel", HEX3Aanonymous_3070230974, false);
    self_3070230596.content.addEventListener("click", HEX3Aanonymous_3070231394, false);
    updateFontSettings_3070230593(self_3070230596);
    self_3070230596.content.focus();

  
}

function init_2332033138(self_2332033139) {
  
}

function init_2332033140(self_2332033139) {
    chckNilDisp(self_2332033139);
    if (isObj(self_2332033139.m_type, NTI3070230534)) {
    init_3070230595(self_2332033139);
    }
    else {
    if (isObj(self_2332033139.m_type, NTI2332033028)) {
    init_2332033138(self_2332033139);
    }
    }

  
}

function deinit_3070231447(self_3070231448) {
  
}

function deinit_2332033141(self_2332033142) {
  
}

function deinit_2332033143(self_2332033142) {
    chckNilDisp(self_2332033142);
    if (isObj(self_2332033142.m_type, NTI3070230534)) {
    deinit_3070231447(self_2332033142);
    }
    else {
    if (isObj(self_2332033142.m_type, NTI2332033028)) {
    deinit_2332033141(self_2332033142);
    }
    }

  
}

function processEvents_3070231525(self_3070231526) {
  var result_3070231527 = 0;

    result_3070231527 = 0;

  return result_3070231527;

}

function processEvents_2332033144(self_2332033145) {
  var result_2332033146 = 0;

  return result_2332033146;

}

function processEvents_2332033147(self_2332033145) {
  var result_2332033148 = 0;

  BeforeRet: {
    chckNilDisp(self_2332033145);
    if (isObj(self_2332033145.m_type, NTI3070230534)) {
    result_2332033148 = processEvents_3070231525(self_2332033145);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033145.m_type, NTI2332033028)) {
    result_2332033148 = processEvents_2332033144(self_2332033145);
    break BeforeRet;
    }
    }
  };

  return result_2332033148;

}

function fontSizeHEX3D_2332033149(self_2332033150, fontSize_2332033151) {
  
}

function fontSizeHEX3D_2332033152(self_2332033150, fontSize_2332033151) {
    fontSizeHEX3D_2332033149(self_2332033150, fontSize_2332033151);

  
}

function lineDistanceHEX3D_2332033153(self_2332033154, lineDistance_2332033155) {
  
}

function lineDistanceHEX3D_2332033156(self_2332033154, lineDistance_2332033155) {
    lineDistanceHEX3D_2332033153(self_2332033154, lineDistance_2332033155);

  
}

function fontSize_3070231508(self_3070231509) {
  var result_3070231510 = 0.0;

    updateFontSettings_3070230593(self_3070231509);
    result_3070231510 = self_3070231509.mFontSize;

  return result_3070231510;

}

function fontSize_2332033157(self_2332033158) {
  var result_2332033159 = 0.0;

  return result_2332033159;

}

function fontSize_2332033160(self_2332033158) {
  var result_2332033161 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2332033158);
    if (isObj(self_2332033158.m_type, NTI3070230534)) {
    result_2332033161 = fontSize_3070231508(self_2332033158);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033158.m_type, NTI2332033028)) {
    result_2332033161 = fontSize_2332033157(self_2332033158);
    break BeforeRet;
    }
    }
  };

  return result_2332033161;

}

function lineDistance_3070231511(self_3070231512) {
  var result_3070231513 = 0.0;

    updateFontSettings_3070230593(self_3070231512);
    result_3070231513 = self_3070231512.mLineDistance;

  return result_3070231513;

}

function lineDistance_2332033162(self_2332033163) {
  var result_2332033164 = 0.0;

  return result_2332033164;

}

function lineDistance_2332033165(self_2332033163) {
  var result_2332033166 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2332033163);
    if (isObj(self_2332033163.m_type, NTI3070230534)) {
    result_2332033166 = lineDistance_3070231511(self_2332033163);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033163.m_type, NTI2332033028)) {
    result_2332033166 = lineDistance_2332033162(self_2332033163);
    break BeforeRet;
    }
    }
  };

  return result_2332033166;

}

function lineHeight_3070231514(self_3070231515) {
  var result_3070231516 = 0.0;

    updateFontSettings_3070230593(self_3070231515);
    result_3070231516 = self_3070231515.mLineHeight;

  return result_3070231516;

}

function lineHeight_2332033167(self_2332033168) {
  var result_2332033169 = 0.0;

  return result_2332033169;

}

function lineHeight_2332033170(self_2332033168) {
  var result_2332033171 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2332033168);
    if (isObj(self_2332033168.m_type, NTI3070230534)) {
    result_2332033171 = lineHeight_3070231514(self_2332033168);
    break BeforeRet;
    }
    else {
    if (isObj(self_2332033168.m_type, NTI2332033028)) {
    result_2332033171 = lineHeight_2332033167(self_2332033168);
    break BeforeRet;
    }
    }
  };

  return result_2332033171;

}

function mustRehash_1325400666(t_1325400668) {
  var result_1325400669 = false;

    if (!((t_1325400668.counter < (t_1325400668.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1325400669 = ((mulInt((t_1325400668.data).length, 2) < mulInt(t_1325400668.counter, 3)) || (subInt((t_1325400668.data).length, t_1325400668.counter) < 4));

  return result_1325400669;

}

function rawInsert_1325401115(t_1325401119, data_1325401120, data_1325401120_Idx, key_1325401121, val_1325401122, hc_1325401123, h_1325401124) {
    data_1325401120[data_1325401120_Idx][chckIndx(h_1325401124, 0, (data_1325401120[data_1325401120_Idx]).length - 1)].Field1 = key_1325401121;
    data_1325401120[data_1325401120_Idx][chckIndx(h_1325401124, 0, (data_1325401120[data_1325401120_Idx]).length - 1)].Field2 = val_1325401122;
    data_1325401120[data_1325401120_Idx][chckIndx(h_1325401124, 0, (data_1325401120[data_1325401120_Idx]).length - 1)].Field0 = hc_1325401123;

  
}

function enlarge_1325400821(t_1325400824) {
    var n_1325400827 = [];
    n_1325400827 = new Array(chckRange(mulInt((t_1325400824.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1325400824.data).length, 2), 0, 2147483647) ; ++i) { n_1325400827[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1325400824.data; t_1325400824.data = n_1325400827; n_1325400827 = Temporary1;    Label2: {
      var i_1325400891 = 0;
      var colontmp__536873067 = 0;
      colontmp__536873067 = (n_1325400827).length - 1;
      var res_536873068 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536873068 <= colontmp__536873067)) break Label4;
            i_1325400891 = res_536873068;
            var eh_1325400945 = n_1325400827[chckIndx(i_1325400891, 0, (n_1325400827).length - 1)].Field0;
            if (isFilled_1342177312(eh_1325400945)) {
            var j_1325400949 = (eh_1325400945 & (t_1325400824.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1342177312(t_1325400824.data[chckIndx(j_1325400949, 0, (t_1325400824.data).length - 1)].Field0)) break Label6;
                  j_1325400949 = nextTry_1342177315(j_1325400949, (t_1325400824.data).length - 1);
                }
            };
            rawInsert_1325401115(t_1325400824, t_1325400824, "data", n_1325400827[chckIndx(i_1325400891, 0, (n_1325400827).length - 1)].Field1, n_1325400827[chckIndx(i_1325400891, 0, (n_1325400827).length - 1)].Field2, eh_1325400945, j_1325400949);
            }
            
            res_536873068 = addInt(res_536873068, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1325401284(t_1325401287, key_1325401288, hc_1325401289) {
  var result_1325401290 = 0;

  BeforeRet: {
    if (((t_1325401287.data).length == 0)) {
    result_1325401290 = -1;
    break BeforeRet;
    }
    
    var h_1325401341 = (hc_1325401289 & (t_1325401287.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1342177312(t_1325401287.data[chckIndx(h_1325401341, 0, (t_1325401287.data).length - 1)].Field0)) break Label2;
          if (((t_1325401287.data[chckIndx(h_1325401341, 0, (t_1325401287.data).length - 1)].Field0 == hc_1325401289) && (t_1325401287.data[chckIndx(h_1325401341, 0, (t_1325401287.data).length - 1)].Field1 == key_1325401288))) {
          result_1325401290 = h_1325401341;
          break BeforeRet;
          }
          
          h_1325401341 = nextTry_1342177315(h_1325401341, (t_1325401287.data).length - 1);
        }
    };
    result_1325401290 = subInt(-1, h_1325401341);
  };

  return result_1325401290;

}

function HEX5BHEX5DHEX3D_1325400257(t_1325400260, key_1325400261, val_1325400262) {
    if (((t_1325400260.data).length == 0)) {
    var correctSizeHEX60gensym1_1325400312 = slotsNeeded_1342177323(32);
    t_1325400260.counter = 0;
    t_1325400260.data = new Array(chckRange(correctSizeHEX60gensym1_1325400312, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1325400312, 0, 2147483647) ; ++i) { t_1325400260.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1325400317 = [0];
    var index_1325400559 = rawGet_1325400318(t_1325400260, key_1325400261, hc_1325400317, 0);
    if ((0 <= index_1325400559)) {
    t_1325400260.data[chckIndx(index_1325400559, 0, (t_1325400260.data).length - 1)].Field2 = val_1325400262;
    }
    else {
      if (((t_1325400260.data).length == 0)) {
      var correctSizeHEX60gensym6_1325400661 = slotsNeeded_1342177323(32);
      t_1325400260.counter = 0;
      t_1325400260.data = new Array(chckRange(correctSizeHEX60gensym6_1325400661, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1325400661, 0, 2147483647) ; ++i) { t_1325400260.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1325400666(t_1325400260)) {
      enlarge_1325400821(t_1325400260);
      index_1325400559 = rawGetKnownHC_1325401284(t_1325400260, key_1325400261, hc_1325400317[0]);
      }
      
      index_1325400559 = subInt(-1, index_1325400559);
      rawInsert_1325401115(t_1325400260, t_1325400260, "data", key_1325400261, val_1325400262, hc_1325400317[0], index_1325400559);
      t_1325400260.counter = addInt(t_1325400260.counter, 1);
    }
    

  
}

function registerEditor_1325400214(self_1325400215, editor_1325400216) {
    HEX5BHEX5DHEX3D_1325400257(self_1325400215.editors, editor_1325400216.id, editor_1325400216);
    invoke_1325401544(self_1325400215.onEditorRegistered, editor_1325400216);

  
}

function toJson_2734698078(self_2734698079, opt_2734698080) {
  var result_2734698081 = null;

    result_2734698081 = newJObject_1660944483();
    HEX5BHEX5DHEX3D_1660946335(result_2734698081, [116,121,112,101], newJString_1660944426([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1660946335(result_2734698081, [105,100], newJInt_1660944472(self_2734698079.id));

  return result_2734698081;

}

function moveCursor_2734698094(self_2734698095, direction_2734698096) {
  BeforeRet: {
    if ((direction_2734698096 < 0)) {
    if (isEditing_2734694383(self_2734698095)) {
    break BeforeRet;
    }
    
    var index_2734698097 = index_2768240748(node_2734688923(self_2734698095));
    if ((0 < index_2734698097)) {
    nodeHEX3D_2734690756(self_2734698095, HEX5BHEX5D_2768240724(node_2734688923(self_2734698095).parent, subInt(index_2734698097, 1)));
    }
    
    }
    else {
      if (isEditing_2734694383(self_2734698095)) {
      break BeforeRet;
      }
      
      var index_2734698098 = index_2768240748(node_2734688923(self_2734698095));
      if (((0 <= index_2734698098) && (index_2734698098 < subInt(len_2768240728(node_2734688923(self_2734698095).parent), 1)))) {
      nodeHEX3D_2734690756(self_2734698095, HEX5BHEX5D_2768240724(node_2734688923(self_2734698095).parent, addInt(index_2734698098, 1)));
      }
      
    }
    
  };

  
}

function none_2734698001() {
  var result_2734698007 = ({val: null});

  return result_2734698007;

}

function some_2734698041(val_2734698043) {
  var result_2734698044 = ({val: null});

    if (!(!((val_2734698043 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2734698044.val = val_2734698043;

  return result_2734698044;

}

function getAstDocumentEditor_2734697991(wrapper_2734697992) {
      var Temporary1;

  var result_2734697997 = ({val: null});

  BeforeRet: {
    if ((gEditor_1325400204[0] == null)) {
    result_2734697997 = nimCopy(result_2734697997, none_2734698001(), NTI2734693534);
    break BeforeRet;
    }
    
      var oHEX60gensym529_2734698010 = getEditorForId_1325404948(gEditor_1325400204[0], wrapper_2734697992.id);
      if (!isSome_2634028850(oHEX60gensym529_2734698010)) Temporary1 = false; else {        var editor_2734698033 = get_2634028870(oHEX60gensym529_2734698010);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2734698033.m_type, NTI2734687781)) {
    result_2734697997 = nimCopy(result_2734697997, some_2734698041(editor_2734698033), NTI2734693534);
    break BeforeRet;
    }
    
    }
    
    result_2734697997 = nimCopy(result_2734697997, none_2734698001(), NTI2734693534);
    break BeforeRet;
  };

  return result_2734697997;

}

function isNone_2734698107(self_2734698109) {
  var result_2734698110 = false;

    result_2734698110 = (self_2734698109.val == null);

  return result_2734698110;

}

function get_2734698127(self_2734698129) {
  var result_2734698130 = null;

    if (isNone_2734698107(self_2734698129)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2734698130 = self_2734698129["val"];

  return result_2734698130;

}

function moveCursorScript_2734698099(self_2734698100, direction_2734698101) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym534_2734698102 = getAstDocumentEditor_2734697991(self_2734698100);
      if (isNone_2734698107(rHEX60gensym534_2734698102)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2734698094(get_2734698127(rHEX60gensym534_2734698102), direction_2734698101);
  };

  
}

function fromJsonHook_2734698082(t_2734698083, jsonNode_2734698084) {
    t_2734698083.id = jsonTo_2634028946(HEX5BHEX5D_1660947469(jsonNode_2734698084, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2734698156(a_2734698158, b_2734698159, opt_2734698160) {
    if (!(!(HEX3DHEX3D_1660946458(b_2734698159, null)))) {
    raiseJsonException_1845493929([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1845494177({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2734698159}));
    }
    
    fromJsonHook_2734698082(a_2734698158, b_2734698159);

  
}

function jsonTo_2734698150(b_2734698152, opt_2734698154) {
  var result_2734698155 = [({id: 0})];

    fromJson_2734698156(result_2734698155[0], b_2734698152, opt_2734698154);

  return result_2734698155[0];

}

function moveCursorApi_2734698148(HEX3Atmp_2734698091) {
  var result_2734698149 = null;

    result_2734698149 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2734698099(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698091, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634028946(HEX5BHEX5D_1660947548(HEX3Atmp_2734698091, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym536_2734698172 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2734698177 = [mnewString(0)];
    fmtRes_2734698177[0].push.apply(fmtRes_2734698177[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698177, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym536_2734698172 || [],fmtRes_2734698177[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698149;

}

function moveCursorUp_2734698195(self_2734698196) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734698196)) {
    break BeforeRet;
    }
    
    if (((!((node_2734688923(self_2734698196) == self_2734698196.document.rootNode)) && !((node_2734688923(self_2734698196).parent == self_2734698196.document.rootNode))) && !((node_2734688923(self_2734698196).parent == null)))) {
    nodeHEX3D_2734690756(self_2734698196, node_2734688923(self_2734698196).parent);
    }
    
  };

  
}

function moveCursorUpScript_2734698209(self_2734698210) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym543_2734698211 = getAstDocumentEditor_2734697991(self_2734698210);
      if (isNone_2734698107(rHEX60gensym543_2734698211)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2734698195(get_2734698127(rHEX60gensym543_2734698211));
  };

  
}

function moveCursorUpApi_2734698234(HEX3Atmp_2734698192) {
  var result_2734698235 = null;

    result_2734698235 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2734698209(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698192, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym545_2734698241 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2734698246 = [mnewString(0)];
    fmtRes_2734698246[0].push.apply(fmtRes_2734698246[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698246, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym545_2734698241 || [],fmtRes_2734698246[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698235;

}

function moveCursorDown_2734698255(self_2734698256) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734698256)) {
    break BeforeRet;
    }
    
    if ((0 < len_2768240728(node_2734688923(self_2734698256)))) {
    nodeHEX3D_2734690756(self_2734698256, HEX5BHEX5D_2768240724(node_2734688923(self_2734698256), 0));
    }
    
  };

  
}

function moveCursorDownScript_2734698257(self_2734698258) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym551_2734698259 = getAstDocumentEditor_2734697991(self_2734698258);
      if (isNone_2734698107(rHEX60gensym551_2734698259)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2734698255(get_2734698127(rHEX60gensym551_2734698259));
  };

  
}

function moveCursorDownApi_2734698282(HEX3Atmp_2734698252) {
  var result_2734698283 = null;

    result_2734698283 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2734698257(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698252, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym553_2734698289 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2734698294 = [mnewString(0)];
    fmtRes_2734698294[0].push.apply(fmtRes_2734698294[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698294, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym553_2734698289 || [],fmtRes_2734698294[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698283;

}

function getNextChild_2734688918(document_2734688919, node_2734688920, min_2734688921) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2734694973 = ({val: null});

  BeforeRet: {
    if ((len_2768240728(node_2734688920) == 0)) {
    result_2734694973 = nimCopy(result_2734694973, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2734694976 = node_2734688920;
      var pos_2734694977 = 0;
      var _ = pos_2734694977;
      if ((expr_2734694976.kind == 8)) {
        var oHEX60gensym125_2734694986 = computeSymbol_2785109118(ctx_2734686259, HEX5BHEX5D_2768240724(node_2734688920, 0), true);
        if (!isSome_2868905495(oHEX60gensym125_2734694986)) Temporary3 = false; else {          var sym_2734695009 = get_2868905515(oHEX60gensym125_2734694986);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2734695009.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2734695009;
      if (ConstSet292[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2768240728(node_2734688920) == 3)) {
        if ((min_2734688921 == 0)) {
        result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 2)), NTI2768240759);
        break BeforeRet;
        }
        
        if ((min_2734688921 == 1)) {
        result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 0)), NTI2768240759);
        break BeforeRet;
        }
        
        if ((min_2734688921 == 2)) {
        result_2734694973 = nimCopy(result_2734694973, none_2768240844(), NTI2768240759);
        break BeforeRet;
        }
        
        result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 1)), NTI2768240759);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2768240728(node_2734688920) == 2)) {
        if ((min_2734688921 == 0)) {
        result_2734694973 = nimCopy(result_2734694973, none_2768240844(), NTI2768240759);
        break BeforeRet;
        }
        
        if ((min_2734688921 == 1)) {
        result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 0)), NTI2768240759);
        break BeforeRet;
        }
        
        result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 1)), NTI2768240759);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2734688921 < 0)) {
    result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, 0)), NTI2768240759);
    break BeforeRet;
    }
    
    if ((subInt(len_2768240728(node_2734688920), 1) <= min_2734688921)) {
    result_2734694973 = nimCopy(result_2734694973, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    result_2734694973 = nimCopy(result_2734694973, some_2768240866(HEX5BHEX5D_2768240724(node_2734688920, addInt(min_2734688921, 1))), NTI2768240759);
    break BeforeRet;
  };

  return result_2734694973;

}

function shouldSelectNode_2734695041(node_2734695042) {
  var result_2734695043 = false;

  BeforeRet: {
    switch (node_2734695042.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2734695043 = (len_2768240728(node_2734695042) == 0);
      break BeforeRet;
      break;
    default: 
      result_2734695043 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2734695043;

}

function moveCursorNext_2734698303(self_2734698304) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698304)) {
    break BeforeRet;
    }
    
    var node_2734698305 = node_2734688923(self_2734698304);
    Label1: {
      var __2734698306 = 0;
      var n_2734698307 = null;
      var colontmp__536873086 = null;
      colontmp__536873086 = node_2734688923(self_2734698304);
      var n_536873088 = colontmp__536873086;
      var i_536873089 = 0;
      var gotoChild_536873090 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_536873088 == null))) break Label3;
            if ((gotoChild_536873090 && (0 < len_2768240728(n_536873088)))) {
            n_536873088 = get_2768242542(getNextChild_2734688918(self_2734698304.document, n_536873088, -1));
            __2734698306 = i_536873089;
            n_2734698307 = n_536873088;
            Label4: {
              if (!(shouldSelectNode_2734695041(n_2734698307))) {
              break Label4;
              }
              
              if (!((n_2734698307 == node_2734688923(self_2734698304)))) {
              nodeHEX3D_2734690756(self_2734698304, n_2734698307);
              break Label1;
              }
              
            };
            gotoChild_536873090 = true;
            }
            else {
              if (!!((n_536873088.parent == null))) Temporary5 = false; else {                var oHEX60gensym82_536873092 = getNextChild_2734688918(self_2734698304.document, n_536873088.parent, index_2768240748(n_536873088));
                if (!isSome_2768242522(oHEX60gensym82_536873092)) Temporary6 = false; else {                  var ne_536873093 = get_2768242542(oHEX60gensym82_536873092);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_536873088 = ne_536873093;
            __2734698306 = i_536873089;
            n_2734698307 = n_536873088;
            Label7: {
              if (!(shouldSelectNode_2734695041(n_2734698307))) {
              break Label7;
              }
              
              if (!((n_2734698307 == node_2734688923(self_2734698304)))) {
              nodeHEX3D_2734690756(self_2734698304, n_2734698307);
              break Label1;
              }
              
            };
            gotoChild_536873090 = true;
            }
            else {
              gotoChild_536873090 = false;
              n_536873088 = n_536873088.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextScript_2734698312(self_2734698313) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym557_2734698314 = getAstDocumentEditor_2734697991(self_2734698313);
      if (isNone_2734698107(rHEX60gensym557_2734698314)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2734698303(get_2734698127(rHEX60gensym557_2734698314));
  };

  
}

function moveCursorNextApi_2734698337(HEX3Atmp_2734698300) {
  var result_2734698338 = null;

    result_2734698338 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2734698312(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698300, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym559_2734698344 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2734698349 = [mnewString(0)];
    fmtRes_2734698349[0].push.apply(fmtRes_2734698349[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698349, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym559_2734698344 || [],fmtRes_2734698349[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698338;

}

function getPrevChild_2734688913(document_2734688914, node_2734688915, max_2734688916) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2734695123 = ({val: null});

  BeforeRet: {
    if ((len_2768240728(node_2734688915) == 0)) {
    result_2734695123 = nimCopy(result_2734695123, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2734695126 = node_2734688915;
      var pos_2734695127 = 0;
      var _ = pos_2734695127;
      if ((expr_2734695126.kind == 8)) {
        var oHEX60gensym134_2734695136 = computeSymbol_2785109118(ctx_2734686259, HEX5BHEX5D_2768240724(node_2734688915, 0), true);
        if (!isSome_2868905495(oHEX60gensym134_2734695136)) Temporary3 = false; else {          var sym_2734695159 = get_2868905515(oHEX60gensym134_2734695136);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2734695159.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2734695159;
      if (ConstSet293[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903945)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2768240728(node_2734688915) == 3)) {
        if ((max_2734688916 == 0)) {
        result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, 1)), NTI2768240759);
        break BeforeRet;
        }
        
        if ((max_2734688916 == 1)) {
        result_2734695123 = nimCopy(result_2734695123, none_2768240844(), NTI2768240759);
        break BeforeRet;
        }
        
        if ((max_2734688916 == 2)) {
        result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, 0)), NTI2768240759);
        break BeforeRet;
        }
        
        result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, 2)), NTI2768240759);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2768240728(node_2734688915) == 2)) {
        if ((max_2734688916 == 0)) {
        result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, 1)), NTI2768240759);
        break BeforeRet;
        }
        
        if ((max_2734688916 == 1)) {
        result_2734695123 = nimCopy(result_2734695123, none_2768240844(), NTI2768240759);
        break BeforeRet;
        }
        
        result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, 0)), NTI2768240759);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2734688916 < 0)) {
    result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, subInt(len_2768240728(node_2734688915), 1))), NTI2768240759);
    break BeforeRet;
    }
    else {
    if ((max_2734688916 == 0)) {
    result_2734695123 = nimCopy(result_2734695123, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    }
    result_2734695123 = nimCopy(result_2734695123, some_2768240866(HEX5BHEX5D_2768240724(node_2734688915, subInt(max_2734688916, 1))), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695123;

}

function moveCursorPrev_2734698358(self_2734698359) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698359)) {
    break BeforeRet;
    }
    
    var node_2734698360 = node_2734688923(self_2734698359);
    Label1: {
      var n_2734698361 = null;
      var colontmp__536873099 = null;
      colontmp__536873099 = node_2734688923(self_2734698359);
      var gotoChild_536873101 = false;
      var n_536873102 = colontmp__536873099;
      Label2: {
          Label3: while (true) {
          if (!!((n_536873102 == null))) break Label3;
            if ((gotoChild_536873101 && (0 < len_2768240728(n_536873102)))) {
            n_536873102 = get_2768242542(getPrevChild_2734688913(self_2734698359.document, n_536873102, -1));
            gotoChild_536873101 = true;
            }
            else {
              if (!!((n_536873102.parent == null))) Temporary4 = false; else {                var oHEX60gensym86_536873104 = getPrevChild_2734688913(self_2734698359.document, n_536873102.parent, index_2768240748(n_536873102));
                if (!isSome_2768242522(oHEX60gensym86_536873104)) Temporary5 = false; else {                  var ne_536873105 = get_2768242542(oHEX60gensym86_536873104);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2734698361 = n_536873102;
            Label6: {
              if (!(shouldSelectNode_2734695041(n_2734698361))) {
              break Label6;
              }
              
              if (!((n_2734698361 == node_2734688923(self_2734698359)))) {
              nodeHEX3D_2734690756(self_2734698359, n_2734698361);
              break Label1;
              }
              
            };
            n_536873102 = ne_536873105;
            gotoChild_536873101 = true;
            }
            else {
              n_2734698361 = n_536873102;
              Label7: {
                if (!(shouldSelectNode_2734695041(n_2734698361))) {
                break Label7;
                }
                
                if (!((n_2734698361 == node_2734688923(self_2734698359)))) {
                nodeHEX3D_2734690756(self_2734698359, n_2734698361);
                break Label1;
                }
                
              };
              gotoChild_536873101 = false;
              n_536873102 = n_536873102.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevScript_2734698366(self_2734698367) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym563_2734698368 = getAstDocumentEditor_2734697991(self_2734698367);
      if (isNone_2734698107(rHEX60gensym563_2734698368)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2734698358(get_2734698127(rHEX60gensym563_2734698368));
  };

  
}

function moveCursorPrevApi_2734698391(HEX3Atmp_2734698355) {
  var result_2734698392 = null;

    result_2734698392 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2734698366(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698355, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_2734698398 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2734698403 = [mnewString(0)];
    fmtRes_2734698403[0].push.apply(fmtRes_2734698403[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698403, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_2734698398 || [],fmtRes_2734698403[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698392;

}

function getNextLine_2734695207(document_2734695208, node_2734695209) {
              var Temporary6;
              var Temporary7;

  var result_2734695211 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2734695212 = 0;
      var n_2734695213 = null;
      var n_536873111 = node_2734695209;
      var idx_536873112 = -1;
      var i_536873113 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536873112 == -1)) {
            __2734695212 = i_536873113;
            n_2734695213 = n_536873111;
            Label5: {
              if (((n_2734695213 == node_2734695209) || (n_2734695213.parent == null))) {
              break Label5;
              }
              
              if ((n_2734695213.parent.kind == 7)) {
              if (((n_2734695213.kind == 7) && (len_2768240728(n_2734695213) == 0))) {
              result_2734695211 = nimCopy(result_2734695211, some_2768240866(n_2734695213), NTI2768240759);
              break BeforeRet;
              }
              else {
              if (!((n_2734695213.kind == 7))) {
              result_2734695211 = nimCopy(result_2734695211, some_2768240866(n_2734695213), NTI2768240759);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2734695213.parent.kind == 9)) {
              var isElse_2734695248 = ((n_2734695213 == last_2768240898(n_2734695213.parent)) && !((modInt(len_2768240728(n_2734695213.parent), 2) == 0)));
              var isCondition_2734695249 = (!(isElse_2734695248) && (modInt(index_2768240748(n_2734695213), 2) == 0));
              if (((n_2734695213.kind == 7) && (len_2768240728(n_2734695213) == 0))) {
              result_2734695211 = nimCopy(result_2734695211, some_2768240866(n_2734695213), NTI2768240759);
              break BeforeRet;
              }
              else {
              if ((!((n_2734695213.kind == 7)) && (!(isCondition_2734695249) || (0 < index_2768240748(n_2734695213))))) {
              result_2734695211 = nimCopy(result_2734695211, some_2768240866(n_2734695213), NTI2768240759);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_536873112, 1) < len_2768240728(n_536873111))) {
            n_536873111 = HEX5BHEX5D_2768240724(n_536873111, addInt(idx_536873112, 1));
            idx_536873112 = -1;
            }
            else {
              var oHEX60gensym71_536873115 = next_2768240833(n_536873111);
              if (!isSome_2768242522(oHEX60gensym71_536873115)) Temporary7 = false; else {                var ne_536873116 = get_2768242542(oHEX60gensym71_536873115);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_536873111 == null));              }            if (Temporary6) {
            n_536873111 = ne_536873116;
            idx_536873112 = -1;
            }
            else {
            if (((!((n_536873111.parent == null)) && !((n_536873111 == null))) && !((n_536873111.parent == null)))) {
            idx_536873112 = index_2768240748(n_536873111);
            n_536873111 = n_536873111.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_536873113 = addInt(i_536873113, 1);
            }
          }
      };
    };
    result_2734695211 = nimCopy(result_2734695211, none_2768240844(), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695211;

}

function moveCursorNextLine_2734698412(self_2734698413) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698413)) {
    break BeforeRet;
    }
    
      var oHEX60gensym572_2734698416 = getNextLine_2734695207(self_2734698413.document, node_2734688923(self_2734698413));
      if (!isSome_2768242522(oHEX60gensym572_2734698416)) Temporary1 = false; else {        var next_2734698439 = get_2768242542(oHEX60gensym572_2734698416);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2734690756(self_2734698413, next_2734698439);
    }
    
  };

  
}

function moveCursorNextLineScript_2734698440(self_2734698441) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2734698442 = getAstDocumentEditor_2734697991(self_2734698441);
      if (isNone_2734698107(rHEX60gensym569_2734698442)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2734698412(get_2734698127(rHEX60gensym569_2734698442));
  };

  
}

function moveCursorNextLineApi_2734698465(HEX3Atmp_2734698409) {
  var result_2734698466 = null;

    result_2734698466 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2734698440(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698409, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym571_2734698472 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2734698477 = [mnewString(0)];
    fmtRes_2734698477[0].push.apply(fmtRes_2734698477[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698477, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym571_2734698472 || [],fmtRes_2734698477[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698466;

}

function getPrevLine_2734695266(document_2734695267, node_2734695268) {
              var Temporary4;

  var result_2734695270 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2734695271 = null;
      var idx_536873122 = 0;
      var n_536873123 = node_2734695268;
      Label2: {
          Label3: while (true) {
          if (!!((n_536873123 == null))) break Label3;
            if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873123), 1)), subInt(idx_536873122, 1))) {
            n_536873123 = HEX5BHEX5D_2768240724(n_536873123, subInt(idx_536873122, 1));
            idx_536873122 = len_2768240728(n_536873123);
            }
            else {
              var oHEX60gensym90_536873125 = prev_2768240879(n_536873123);
              if (!isSome_2768242522(oHEX60gensym90_536873125)) Temporary4 = false; else {                var ne_536873126 = get_2768242542(oHEX60gensym90_536873125);
                Temporary4 = true;              }            if (Temporary4) {
            n_2734695271 = n_536873123;
            Label5: {
              if (((n_2734695271 == node_2734695268) || (n_2734695271.parent == null))) {
              break Label5;
              }
              
              if ((n_2734695271.parent.kind == 7)) {
              if (((n_2734695271.kind == 7) && (len_2768240728(n_2734695271) == 0))) {
              result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
              break BeforeRet;
              }
              else {
              if (!((n_2734695271.kind == 7))) {
              result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2734695271.parent.kind == 9)) {
              var isElse_2734695306 = ((n_2734695271 == last_2768240898(n_2734695271.parent)) && !((modInt(len_2768240728(n_2734695271.parent), 2) == 0)));
              var isCondition_2734695307 = (!(isElse_2734695306) && (modInt(index_2768240748(n_2734695271), 2) == 0));
              if (((n_2734695271.kind == 7) && (len_2768240728(n_2734695271) == 0))) {
              result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
              break BeforeRet;
              }
              else {
              if ((!((n_2734695271.kind == 7)) && (!(isCondition_2734695307) || (0 < index_2768240748(n_2734695271))))) {
              result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2734695271.kind == 9)) {
              result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
              break BeforeRet;
              }
              
            };
            n_536873123 = ne_536873126;
            idx_536873122 = len_2768240728(n_536873123);
            }
            else {
              n_2734695271 = n_536873123;
              Label6: {
                if (((n_2734695271 == node_2734695268) || (n_2734695271.parent == null))) {
                break Label6;
                }
                
                if ((n_2734695271.parent.kind == 7)) {
                if (((n_2734695271.kind == 7) && (len_2768240728(n_2734695271) == 0))) {
                result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
                break BeforeRet;
                }
                else {
                if (!((n_2734695271.kind == 7))) {
                result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2734695271.parent.kind == 9)) {
                var isElse_536873127 = ((n_2734695271 == last_2768240898(n_2734695271.parent)) && !((modInt(len_2768240728(n_2734695271.parent), 2) == 0)));
                var isCondition_536873128 = (!(isElse_536873127) && (modInt(index_2768240748(n_2734695271), 2) == 0));
                if (((n_2734695271.kind == 7) && (len_2768240728(n_2734695271) == 0))) {
                result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
                break BeforeRet;
                }
                else {
                if ((!((n_2734695271.kind == 7)) && (!(isCondition_536873128) || (0 < index_2768240748(n_2734695271))))) {
                result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2734695271.kind == 9)) {
                result_2734695270 = nimCopy(result_2734695270, some_2768240866(n_2734695271), NTI2768240759);
                break BeforeRet;
                }
                
              };
              idx_536873122 = index_2768240748(n_536873123);
              n_536873123 = n_536873123.parent;
            }
            }
          }
      };
    };
    result_2734695270 = nimCopy(result_2734695270, none_2768240844(), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695270;

}

function moveCursorPrevLine_2734698486(self_2734698487) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698487)) {
    break BeforeRet;
    }
    
      var oHEX60gensym578_2734698490 = getPrevLine_2734695266(self_2734698487.document, node_2734688923(self_2734698487));
      if (!isSome_2768242522(oHEX60gensym578_2734698490)) Temporary1 = false; else {        var prev_2734698513 = get_2768242542(oHEX60gensym578_2734698490);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2734690756(self_2734698487, prev_2734698513);
    }
    
  };

  
}

function moveCursorPrevLineScript_2734698514(self_2734698515) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym575_2734698516 = getAstDocumentEditor_2734697991(self_2734698515);
      if (isNone_2734698107(rHEX60gensym575_2734698516)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2734698486(get_2734698127(rHEX60gensym575_2734698516));
  };

  
}

function moveCursorPrevLineApi_2734698539(HEX3Atmp_2734698483) {
  var result_2734698540 = null;

    result_2734698540 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2734698514(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698483, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym577_2734698546 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2734698551 = [mnewString(0)];
    fmtRes_2734698551[0].push.apply(fmtRes_2734698551[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698551, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym577_2734698546 || [],fmtRes_2734698551[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698540;

}

function selectContaining_2734698560(self_2734698561, container_2734698562) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698561)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2734698562)) {
    case "function":
        var oHEX60gensym585_2734698565 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 11);
        if (!isSome_2768242522(oHEX60gensym585_2734698565)) Temporary1 = false; else {          var child_2734698588 = get_2768242542(oHEX60gensym585_2734698565);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698588.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym586_2734698591 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 4);
        if (!isSome_2768242522(oHEX60gensym586_2734698591)) Temporary2 = false; else {          var child_2734698614 = get_2768242542(oHEX60gensym586_2734698591);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698614.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym587_2734698617 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 7);
        if (!isSome_2768242522(oHEX60gensym587_2734698617)) Temporary3 = false; else {          var child_2734698640 = get_2768242542(oHEX60gensym587_2734698617);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698640);
      }
      
      break;
    case "node-list":
        var oHEX60gensym588_2734698643 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 7);
        if (!isSome_2768242522(oHEX60gensym588_2734698643)) Temporary4 = false; else {          var child_2734698666 = get_2768242542(oHEX60gensym588_2734698643);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698666.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym589_2734698669 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 9);
        if (!isSome_2768242522(oHEX60gensym589_2734698669)) Temporary5 = false; else {          var child_2734698692 = get_2768242542(oHEX60gensym589_2734698669);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698692.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym590_2734698695 = findWithParentRec_2768242565(node_2734688923(self_2734698561), 10);
        if (!isSome_2768242522(oHEX60gensym590_2734698695)) Temporary6 = false; else {          var child_2734698718 = get_2768242542(oHEX60gensym590_2734698695);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2734690756(self_2734698561, child_2734698718.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingScript_2734698719(self_2734698720, container_2734698721) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym582_2734698722 = getAstDocumentEditor_2734697991(self_2734698720);
      if (isNone_2734698107(rHEX60gensym582_2734698722)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2734698560(get_2734698127(rHEX60gensym582_2734698722), container_2734698721);
  };

  
}

function selectContainingApi_2734698745(HEX3Atmp_2734698557) {
  var result_2734698746 = null;

    result_2734698746 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2734698719(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698557, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734698557, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym584_2734698757 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2734698762 = [mnewString(0)];
    fmtRes_2734698762[0].push.apply(fmtRes_2734698762[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698762, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym584_2734698757 || [],fmtRes_2734698762[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698746;

}

function delete_2768240912(x_2768240914, x_2768240914_Idx, i_2768240915) {
    x_2768240914[x_2768240914_Idx].splice(i_2768240915, 1);

  
}

function delete_2768240908(node_2768240909, index_2768240910) {
  var result_2768240911 = null;

  BeforeRet: {
    if (((index_2768240910 < 0) || (len_2768240728(node_2768240909) <= index_2768240910))) {
    result_2768240911 = node_2768240909;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2768240724(node_2768240909, index_2768240910).parent = null;
    delete_2768240912(node_2768240909, "children", chckRange(index_2768240910, 0, 2147483647));
    if ((index_2768240910 < len_2768240728(node_2768240909))) {
    result_2768240911 = HEX5BHEX5D_2768240724(node_2768240909, index_2768240910);
    break BeforeRet;
    }
    else {
    if ((0 < len_2768240728(node_2768240909))) {
    result_2768240911 = HEX5BHEX5D_2768240724(node_2768240909, subInt(index_2768240910, 1));
    break BeforeRet;
    }
    else {
      result_2768240911 = node_2768240909;
      break BeforeRet;
    }
    }
  };

  return result_2768240911;

}

function deleteNode_2734695395(document_2734695396, node_2734695397) {
  var result_2734695398 = null;

  BeforeRet: {
    if ((node_2734695397.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2734695397.parent == document_2734695396.rootNode) && (len_2768240728(document_2734695396.rootNode) == 1))) {
    result_2734695398 = replaceNode_2734695331(document_2734695396, node_2734695397, {kind: 0, parent: null, id: ({id: 0}), reff: ({id: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2734695396.undoOps.push({kind: 0, parent: node_2734695397.parent, idx: index_2768240748(node_2734695397), node: node_2734695397, id: ({id: 0}), text: []});;
    document_2734695396.redoOps = nimCopy(null, [], NTI2734691311);
    handleNodeDelete_2734693109(document_2734695396, node_2734695397);
    result_2734695398 = delete_2768240908(node_2734695397.parent, index_2768240748(node_2734695397));
    break BeforeRet;
  };

  return result_2734695398;

}

function deleteSelected_2734698771(self_2734698772) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734698772)) {
    break BeforeRet;
    }
    
    self_2734698772.deletedNode = nimCopy(self_2734698772.deletedNode, some_2768240866(node_2734688923(self_2734698772)), NTI2768240759);
    nodeHEX3D_2734690756(self_2734698772, deleteNode_2734695395(self_2734698772.document, node_2734688923(self_2734698772)));
  };

  
}

function deleteSelectedScript_2734698776(self_2734698777) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym593_2734698778 = getAstDocumentEditor_2734697991(self_2734698777);
      if (isNone_2734698107(rHEX60gensym593_2734698778)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2734698771(get_2734698127(rHEX60gensym593_2734698778));
  };

  
}

function deleteSelectedApi_2734698801(HEX3Atmp_2734698768) {
  var result_2734698802 = null;

    result_2734698802 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2734698776(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698768, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym595_2734698808 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2734698813 = [mnewString(0)];
    fmtRes_2734698813[0].push.apply(fmtRes_2734698813[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698813, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym595_2734698808 || [],fmtRes_2734698813[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698802;

}

function copySelected_2734698822(self_2734698823) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734698823)) {
    break BeforeRet;
    }
    
    self_2734698823.deletedNode = nimCopy(self_2734698823.deletedNode, some_2768240866(cloneAndMapIds_2768242473(node_2734688923(self_2734698823))), NTI2768240759);
  };

  
}

function copySelectedScript_2734698827(self_2734698828) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym598_2734698829 = getAstDocumentEditor_2734697991(self_2734698828);
      if (isNone_2734698107(rHEX60gensym598_2734698829)) {
      break BeforeRet;
      }
      
    };
    copySelected_2734698822(get_2734698127(rHEX60gensym598_2734698829));
  };

  
}

function copySelectedApi_2734698852(HEX3Atmp_2734698819) {
  var result_2734698853 = null;

    result_2734698853 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2734698827(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698819, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_2734698859 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2734698864 = [mnewString(0)];
    fmtRes_2734698864[0].push.apply(fmtRes_2734698864[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698864, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_2734698859 || [],fmtRes_2734698864[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698853;

}

function finishEditScript_2734698918(self_2734698919, apply_2734698920) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym604_2734698921 = getAstDocumentEditor_2734697991(self_2734698919);
      if (isNone_2734698107(rHEX60gensym604_2734698921)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2734694763(get_2734698127(rHEX60gensym604_2734698921), apply_2734698920);
  };

  
}

function finishEditApi_2734698944(HEX3Atmp_2734698870) {
  var result_2734698945 = null;

    result_2734698945 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2734698918(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698870, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634029835(HEX5BHEX5D_1660947548(HEX3Atmp_2734698870, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym606_2734698956 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2734698961 = [mnewString(0)];
    fmtRes_2734698961[0].push.apply(fmtRes_2734698961[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734698961, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym606_2734698956 || [],fmtRes_2734698961[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734698945;

}

function pop_2734695468(s_2734695470, s_2734695470_Idx) {
  var result_2734695471 = null;

    var L_2734695475 = subInt((s_2734695470[s_2734695470_Idx]).length, 1);
    result_2734695471 = s_2734695470[s_2734695470_Idx][chckIndx(L_2734695475, 0, (s_2734695470[s_2734695470_Idx]).length - 1)];
    if (s_2734695470[s_2734695470_Idx].length < chckRange(L_2734695475, 0, 2147483647)) { for (var i = s_2734695470[s_2734695470_Idx].length ; i < chckRange(L_2734695475, 0, 2147483647) ; ++i) s_2734695470[s_2734695470_Idx].push(null); }
               else { s_2734695470[s_2734695470_Idx].length = chckRange(L_2734695475, 0, 2147483647); };

  return result_2734695471;

}

function formatValue_2734688785(result_2734688787, result_2734688787_Idx, value_2734688788, specifier_2734688789) {
    formatValue_738197675(result_2734688787, result_2734688787_Idx, reprEnum(value_2734688788, NTI2734687619), specifier_2734688789);

  
}

function HEX24_2734688777(op_2734688778) {
  var result_2734688779 = [];

    var fmtRes_2734688784 = [mnewString(0)];
    formatValue_2734688785(fmtRes_2734688784, 0, op_2734688778.kind, []);
    fmtRes_2734688784[0].push.apply(fmtRes_2734688784[0], [44,32,39]);;
    formatValue_738197675(fmtRes_2734688784, 0, op_2734688778.text, []);
    fmtRes_2734688784[0].push.apply(fmtRes_2734688784[0], [39]);;
    result_2734688779 = nimCopy(null, fmtRes_2734688784[0], NTI33554449);
    if (!(HEX3DHEX3D_2298478667(op_2734688778.id, null_2298478708))) {
    var fmtRes_2734688797 = [mnewString(0)];
    fmtRes_2734688797[0].push.apply(fmtRes_2734688797[0], [44,32,105,100,32,61,32]);;
    formatValue_2801795292(fmtRes_2734688797, 0, op_2734688778.id, []);
    result_2734688779.push.apply(result_2734688779, fmtRes_2734688797[0]);;
    }
    
    if (!((op_2734688778.node == null))) {
    var fmtRes_2734688811 = [mnewString(0)];
    fmtRes_2734688811[0].push.apply(fmtRes_2734688811[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_2868904741(fmtRes_2734688811, 0, op_2734688778.node, []);
    result_2734688779.push.apply(result_2734688779, fmtRes_2734688811[0]);;
    }
    
    if (!((op_2734688778.parent == null))) {
    var fmtRes_2734688825 = [mnewString(0)];
    fmtRes_2734688825[0].push.apply(fmtRes_2734688825[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_2868904741(fmtRes_2734688825, 0, op_2734688778.parent, []);
    fmtRes_2734688825[0].push.apply(fmtRes_2734688825[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2348810760(fmtRes_2734688825, 0, op_2734688778.idx, []);
    result_2734688779.push.apply(result_2734688779, fmtRes_2734688825[0]);;
    }
    

  return result_2734688779;

}

function formatValue_2734695486(result_2734695488, result_2734695488_Idx, value_2734695489, specifier_2734695490) {
    formatValue_738197675(result_2734695488, result_2734695488_Idx, HEX24_2734688777(value_2734695489), specifier_2734695490);

  
}

function insert_2768240698(x_2768240700, x_2768240700_Idx, item_2768240701, i_2768240702) {
    var it_2768240723 = null;
    x_2768240700[x_2768240700_Idx] = x_2768240700[x_2768240700_Idx] || []; x_2768240700[x_2768240700_Idx].splice(i_2768240702, 0, it_2768240723);
    x_2768240700[x_2768240700_Idx][chckIndx(i_2768240702, 0, (x_2768240700[x_2768240700_Idx]).length - 1)] = item_2768240701;

  
}

function insert_2768240694(node_2768240695, child_2768240696, idx_2768240697) {
    if (HEX3DHEX3D_2298478667(node_2768240695.id, null_2298478708)) {
    node_2768240695.id = nimCopy(node_2768240695.id, newId_2298478623(), NTI2298478595);
    }
    
    if (HEX3DHEX3D_2298478667(child_2768240696.id, null_2298478708)) {
    child_2768240696.id = nimCopy(child_2768240696.id, newId_2298478623(), NTI2298478595);
    }
    
    child_2768240696.parent = node_2768240695;
    insert_2768240698(node_2768240695, "children", child_2768240696, chckRange(idx_2768240697, 0, 2147483647));

  
}

function undo_2734695458(document_2734695459) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2734695461 = ({val: null});

  BeforeRet: {
    if (((document_2734695459.undoOps).length == 0)) {
    result_2734695461 = nimCopy(result_2734695461, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    var undoOp_2734695480 = pop_2734695468(document_2734695459, "undoOps");
    var fmtRes_2734695485 = [mnewString(0)];
    fmtRes_2734695485[0].push.apply(fmtRes_2734695485[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2734695486(fmtRes_2734695485, 0, undoOp_2734695480, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734695485[0], NTI33554449)]);
    switch (undoOp_2734695480.kind) {
    case 0:
      insert_2768240694(undoOp_2734695480.parent, undoOp_2734695480.node, undoOp_2734695480.idx);
      handleNodeInserted_2734691534(document_2734695459, undoOp_2734695480.node);
      document_2734695459.redoOps.push(undoOp_2734695480);;
      result_2734695461 = nimCopy(result_2734695461, some_2768240866(undoOp_2734695480.node), NTI2768240759);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2734695498 = HEX5BHEX5D_2768240724(undoOp_2734695480.parent, undoOp_2734695480.idx);
      handleNodeDelete_2734693109(document_2734695459, HEX5BHEX5D_2768240724(undoOp_2734695480.parent, undoOp_2734695480.idx));
      HEX5BHEX5DHEX3D_2768240904(undoOp_2734695480.parent, undoOp_2734695480.idx, undoOp_2734695480.node);
      handleNodeInserted_2734691534(document_2734695459, undoOp_2734695480.node);
      document_2734695459.redoOps.push({kind: 1, parent: undoOp_2734695480.parent, idx: undoOp_2734695480.idx, node: oldNode_2734695498, id: ({id: 0}), text: []});;
      result_2734695461 = nimCopy(result_2734695461, some_2768240866(undoOp_2734695480.node), NTI2768240759);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2734693109(document_2734695459, HEX5BHEX5D_2768240724(undoOp_2734695480.parent, undoOp_2734695480.idx));
      var _ = delete_2768240908(undoOp_2734695480.parent, undoOp_2734695480.idx);
      document_2734695459.redoOps.push(undoOp_2734695480);;
      if ((undoOp_2734695480.idx < len_2768240728(undoOp_2734695480.parent))) {
      result_2734695461 = nimCopy(result_2734695461, some_2768240866(HEX5BHEX5D_2768240724(undoOp_2734695480.parent, undoOp_2734695480.idx)), NTI2768240759);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2734695480.idx)) {
      result_2734695461 = nimCopy(result_2734695461, some_2768240866(HEX5BHEX5D_2768240724(undoOp_2734695480.parent, subInt(undoOp_2734695480.idx, 1))), NTI2768240759);
      break BeforeRet;
      }
      }
      result_2734695461 = nimCopy(result_2734695461, some_2768240866(undoOp_2734695480.parent), NTI2768240759);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym148_2734695521 = getSymbol_2785092289(ctx_2734686259, undoOp_2734695480.id);
        if (!isSome_2868905495(oHEX60gensym148_2734695521)) Temporary1 = false; else {          var symbol_2734695544 = get_2868905515(oHEX60gensym148_2734695521);
          Temporary1 = true;        }      if (Temporary1) {
      document_2734695459.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2734695480.id, NTI2298478595), text: nimCopy(null, symbol_2734695544.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2734695544.name = nimCopy(null, undoOp_2734695480.text, NTI33554449);
      if ((symbol_2734695544.kind == 0)) {
      var Temporary2 = symbol_2734695544;
      if (ConstSet294[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      Temporary2.node.text = nimCopy(null, symbol_2734695544.name, NTI33554449);
      var Temporary3 = symbol_2734695544;
      if (ConstSet295[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      updateNode_2785144730(ctx_2734686259, Temporary3.node);
      }
      
      notifySymbolChanged_2785144162(ctx_2734686259, symbol_2734695544);
      }
      
      break;
    case 3:
      document_2734695459.redoOps.push({kind: 3, node: undoOp_2734695480.node, text: nimCopy(null, undoOp_2734695480.node.text, NTI33554449), id: ({id: 0}), parent: null, idx: 0});;
      undoOp_2734695480.node.text = nimCopy(null, undoOp_2734695480.text, NTI33554449);
      updateNode_2785144730(ctx_2734686259, undoOp_2734695480.node);
      break;
    }
    result_2734695461 = nimCopy(result_2734695461, none_2768240844(), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695461;

}

function undo_2734698970(self_2734698971) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2734694383(self_2734698971)) {
    break BeforeRet;
    }
    
    finishEdit_2734694763(self_2734698971, false);
      var oHEX60gensym615_2734698974 = undo_2734695458(self_2734698971.document);
      if (!isSome_2768242522(oHEX60gensym615_2734698974)) Temporary1 = false; else {        var node_2734698997 = get_2768242542(oHEX60gensym615_2734698974);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2734690756(self_2734698971, node_2734698997);
    }
    
  };

  
}

function undoScript2_2734698998(self_2734698999) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym612_2734699000 = getAstDocumentEditor_2734697991(self_2734698999);
      if (isNone_2734698107(rHEX60gensym612_2734699000)) {
      break BeforeRet;
      }
      
    };
    undo_2734698970(get_2734698127(rHEX60gensym612_2734699000));
  };

  
}

function undoApi2_2734699023(HEX3Atmp_2734698967) {
  var result_2734699024 = null;

    result_2734699024 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2734698998(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734698967, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym614_2734699030 = [117,110,100,111];
    var fmtRes_2734699035 = [mnewString(0)];
    fmtRes_2734699035[0].push.apply(fmtRes_2734699035[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699035, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym614_2734699030 || [],fmtRes_2734699035[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699024;

}

function redo_2734695559(document_2734695560) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2734695562 = ({val: null});

  BeforeRet: {
    if (((document_2734695560.redoOps).length == 0)) {
    result_2734695562 = nimCopy(result_2734695562, none_2768240844(), NTI2768240759);
    break BeforeRet;
    }
    
    var redoOp_2734695571 = pop_2734695468(document_2734695560, "redoOps");
    var fmtRes_2734695576 = [mnewString(0)];
    fmtRes_2734695576[0].push.apply(fmtRes_2734695576[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2734695486(fmtRes_2734695576, 0, redoOp_2734695571, []);
    log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734695576[0], NTI33554449)]);
    switch (redoOp_2734695571.kind) {
    case 0:
      document_2734695560.undoOps.push({kind: 0, parent: redoOp_2734695571.parent, idx: redoOp_2734695571.idx, node: redoOp_2734695571.node, id: ({id: 0}), text: []});;
      handleNodeDelete_2734693109(document_2734695560, HEX5BHEX5D_2768240724(redoOp_2734695571.parent, redoOp_2734695571.idx));
      var _ = delete_2768240908(redoOp_2734695571.parent, redoOp_2734695571.idx);
      if ((redoOp_2734695571.idx < len_2768240728(redoOp_2734695571.parent))) {
      result_2734695562 = nimCopy(result_2734695562, some_2768240866(HEX5BHEX5D_2768240724(redoOp_2734695571.parent, redoOp_2734695571.idx)), NTI2768240759);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2734695571.idx)) {
      result_2734695562 = nimCopy(result_2734695562, some_2768240866(HEX5BHEX5D_2768240724(redoOp_2734695571.parent, subInt(redoOp_2734695571.idx, 1))), NTI2768240759);
      break BeforeRet;
      }
      }
      result_2734695562 = nimCopy(result_2734695562, some_2768240866(redoOp_2734695571.parent), NTI2768240759);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2734695595 = HEX5BHEX5D_2768240724(redoOp_2734695571.parent, redoOp_2734695571.idx);
      handleNodeDelete_2734693109(document_2734695560, HEX5BHEX5D_2768240724(redoOp_2734695571.parent, redoOp_2734695571.idx));
      HEX5BHEX5DHEX3D_2768240904(redoOp_2734695571.parent, redoOp_2734695571.idx, redoOp_2734695571.node);
      handleNodeInserted_2734691534(document_2734695560, redoOp_2734695571.node);
      document_2734695560.undoOps.push({kind: 1, parent: redoOp_2734695571.parent, idx: redoOp_2734695571.idx, node: oldNode_2734695595, id: ({id: 0}), text: []});;
      result_2734695562 = nimCopy(result_2734695562, some_2768240866(redoOp_2734695571.node), NTI2768240759);
      break BeforeRet;
      break;
    case 2:
      insert_2768240694(redoOp_2734695571.parent, redoOp_2734695571.node, redoOp_2734695571.idx);
      handleNodeInserted_2734691534(document_2734695560, redoOp_2734695571.node);
      document_2734695560.undoOps.push(redoOp_2734695571);;
      result_2734695562 = nimCopy(result_2734695562, some_2768240866(redoOp_2734695571.node), NTI2768240759);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2734695612 = getSymbol_2785092289(ctx_2734686259, redoOp_2734695571.id);
        if (!isSome_2868905495(oHEX60gensym151_2734695612)) Temporary1 = false; else {          var symbol_2734695635 = get_2868905515(oHEX60gensym151_2734695612);
          Temporary1 = true;        }      if (Temporary1) {
      document_2734695560.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2734695571.id, NTI2298478595), text: nimCopy(null, symbol_2734695635.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2734695635.name = nimCopy(null, redoOp_2734695571.text, NTI33554449);
      if ((symbol_2734695635.kind == 0)) {
      var Temporary2 = symbol_2734695635;
      if (ConstSet296[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      Temporary2.node.text = nimCopy(null, symbol_2734695635.name, NTI33554449);
      var Temporary3 = symbol_2734695635;
      if (ConstSet297[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2868903945)); }
      updateNode_2785144730(ctx_2734686259, Temporary3.node);
      }
      
      notifySymbolChanged_2785144162(ctx_2734686259, symbol_2734695635);
      }
      
      break;
    case 3:
      document_2734695560.undoOps.push({kind: 3, node: redoOp_2734695571.node, text: nimCopy(null, redoOp_2734695571.node.text, NTI33554449), id: ({id: 0}), parent: null, idx: 0});;
      redoOp_2734695571.node.text = nimCopy(null, redoOp_2734695571.text, NTI33554449);
      updateNode_2785144730(ctx_2734686259, redoOp_2734695571.node);
      break;
    }
    result_2734695562 = nimCopy(result_2734695562, none_2768240844(), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695562;

}

function redo_2734699044(self_2734699045) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699045)) {
    break BeforeRet;
    }
    
    finishEdit_2734694763(self_2734699045, false);
      var oHEX60gensym621_2734699048 = redo_2734695559(self_2734699045.document);
      if (!isSome_2768242522(oHEX60gensym621_2734699048)) Temporary1 = false; else {        var node_2734699071 = get_2768242542(oHEX60gensym621_2734699048);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2734690756(self_2734699045, node_2734699071);
    }
    
  };

  
}

function redoScript2_2734699072(self_2734699073) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym618_2734699074 = getAstDocumentEditor_2734697991(self_2734699073);
      if (isNone_2734698107(rHEX60gensym618_2734699074)) {
      break BeforeRet;
      }
      
    };
    redo_2734699044(get_2734698127(rHEX60gensym618_2734699074));
  };

  
}

function redoApi2_2734699097(HEX3Atmp_2734699041) {
  var result_2734699098 = null;

    result_2734699098 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2734699072(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699041, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym620_2734699104 = [114,101,100,111];
    var fmtRes_2734699109 = [mnewString(0)];
    fmtRes_2734699109[0].push.apply(fmtRes_2734699109[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699109, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym620_2734699104 || [],fmtRes_2734699109[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699098;

}

function canInsertInto_2734697943(self_2734697944, parent_2734697945) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2734697946 = false;

  BeforeRet: {
    switch (parent_2734697945.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2734697946 = false;
      break BeforeRet;
      break;
    case 4:
      result_2734697946 = (len_2768240728(parent_2734697945) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2734697946 = (len_2768240728(parent_2734697945) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2734697946 = (len_2768240728(parent_2734697945) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2734697946 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2768240728(parent_2734697945) == 0)) {
      result_2734697946 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym527_2734697949 = computeSymbol_2785109118(ctx_2734686259, HEX5BHEX5D_2768240724(parent_2734697945, 0), true);
        if (!isSome_2868905495(oHEX60gensym527_2734697949)) Temporary1 = false; else {          var sym_2734697972 = get_2868905515(oHEX60gensym527_2734697949);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2734697972.kind == 1)) {
      var Temporary2 = sym_2734697972;
      if (ConstSet298[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2734697946 = (len_2768240728(parent_2734697945) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2734697946 = (len_2768240728(parent_2734697945) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2734697977 = computeType_2785102512(ctx_2734686259, HEX5BHEX5D_2768240724(parent_2734697945, 0), true);
      if ((typ_2734697977.kind == 4)) {
        var Temporary4 = typ_2734697977;
        if (ConstSet299[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903939)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2734697977;
          if (ConstSet300[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2868903939)); }
          var Temporary6 = typ_2734697977;
          if (ConstSet301[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2868903939)); }
          Temporary3 = HEX3DHEX3D_2868904464((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_2868904339(true));        }      if (Temporary3) {
      result_2734697946 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2734697977;
      if (ConstSet302[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2868903939)); }
      result_2734697946 = (len_2768240728(parent_2734697945) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2734697946 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2734697946;

}

function createNodeFromAction_2734695650(editor_2734695651, arg_2734695652, node_2734695653, typ_2734695654) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2734695660 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2734695652)) {
    case "deleted":
        var oHEX60gensym152_2734695663 = nimCopy(null, editor_2734695651.deletedNode, NTI2768240759);
        if (!isSome_2768242522(oHEX60gensym152_2734695663)) Temporary1 = false; else {          var node_2734695686 = get_2768242542(oHEX60gensym152_2734695663);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2734695651.deletedNode = nimCopy(editor_2734695651.deletedNode, some_2768240866(cloneAndMapIds_2768242473(node_2734695686)), NTI2768240759);
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734695686, Field1: 0}), NTI2734691610);
      break BeforeRet;
      }
      
      result_2734695660 = nimCopy(result_2734695660, none_2734695704(), NTI2734691610);
      break BeforeRet;
      break;
    case "empty":
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: {kind: 0, id: newId_2298478623(), text: [], parent: null, reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "identifier":
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: {kind: 1, parent: null, id: ({id: 0}), reff: ({id: 0}), text: [], children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "number-literal":
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: {kind: 2, text: [], parent: null, id: ({id: 0}), reff: ({id: 0}), children: []}, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym153_2734695725 = null;
        Label3: {
          var res_2734695795 = null;
          res_2734695795 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734695795.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734695795.id = nimCopy(res_2734695795.id, newId_2298478623(), NTI2298478595);
          Label5: {
            Label6: {
              var res_2734695798 = null;
              res_2734695798 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734695798.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2768240678(res_2734695795, res_2734695798);
        };
      };
      var node_2734695817 = res_2734695795;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734695817, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym160_2734695825 = null;
        Label9: {
          var res_2734695831 = null;
          res_2734695831 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734695831.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734695831.id = nimCopy(res_2734695831.id, newId_2298478623(), NTI2298478595);
          Label11: {
            Label12: {
              var res_2734695834 = null;
              res_2734695834 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734695834.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734695831, res_2734695834);
            Label14: {
              var res_2734695836 = null;
              res_2734695836 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734695836.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734695831, res_2734695836);
          };
        };
      };
      var node_2734695864 = res_2734695831;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734695864, Field1: 1}), NTI2734691610);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym170_2734695872 = null;
        Label17: {
          var res_2734695878 = null;
          res_2734695878 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734695878.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734695878.id = nimCopy(res_2734695878.id, newId_2298478623(), NTI2298478595);
          Label19: {
            Label20: {
              var res_2734695881 = null;
              res_2734695881 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734695881.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734695878, res_2734695881);
            Label22: {
              var res_2734695883 = null;
              res_2734695883 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734695883.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734695878, res_2734695883);
          };
        };
      };
      var node_2734695911 = res_2734695878;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734695911, Field1: 1}), NTI2734691610);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2734695915 = computeSymbol_2785109118(ctx_2734686259, node_2734695653, true);
        var oHEX60gensym180_2734695918 = nimCopy(null, sym_2734695915, NTI2868905073);
        if (!isSome_2868905495(oHEX60gensym180_2734695918)) Temporary26 = false; else {          var sym_2734695941 = get_2868905515(oHEX60gensym180_2734695918);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2734695941.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2734695941;
      if (ConstSet303[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI2868903945)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2734695946 = Temporary24;
      switch (kind_2734695946) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym181_2734695951 = null;
          Label30: {
            var res_2734695957 = null;
            res_2734695957 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734695957.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2734695959 = null;
                res_2734695959 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734695959.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734695957, res_2734695959);
              Label35: {
                var res_2734695961 = null;
                res_2734695961 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734695961.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734695957, res_2734695961);
            };
          };
        };
        Temporary28 = res_2734695957;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym191_2734695993 = null;
          Label38: {
            var res_2734695999 = null;
            res_2734695999 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734695999.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2734696001 = null;
                res_2734696001 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696001.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734695999, res_2734696001);
              Label43: {
                var res_2734696003 = null;
                res_2734696003 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696003.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734695999, res_2734696003);
              Label45: {
                var res_2734696005 = null;
                res_2734696005 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696005.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734695999, res_2734696005);
            };
          };
        };
        Temporary28 = res_2734695999;
        break;
      case 0:
        var typ_2734696042 = computeType_2785102512(ctx_2734686259, node_2734695653, true);
        if ((typ_2734696042.kind == 0)) {
        Label48: {
          var tmpHEX60gensym204_2734696051 = null;
          Label49: {
            var res_2734696057 = null;
            res_2734696057 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734696057.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2734696059 = null;
                res_2734696059 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696059.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734696057, res_2734696059);
              Label54: {
                var res_2734696061 = null;
                res_2734696061 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696061.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734696057, res_2734696061);
              Label56: {
                var res_2734696063 = null;
                res_2734696063 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696063.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2768240678(res_2734696057, res_2734696063);
            };
          };
        };
        Temporary47 = res_2734696057;
        }
        else {
        if (!((typ_2734696042.kind == 4))) {
        Label58: {
          var tmpHEX60gensym218_2734696108 = null;
          Label59: {
            var res_2734696114 = null;
            res_2734696114 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2734696114.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2734696116 = null;
                res_2734696116 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2734696116.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2768240678(res_2734696114, res_2734696116);
          };
        };
        Temporary47 = res_2734696114;
        }
        else {
          Label64: {
            var tmpHEX60gensym225_2734696139 = null;
            Label65: {
              var res_2734696145 = null;
              res_2734696145 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696145.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2734696147 = null;
                  res_2734696147 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2734696147.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2768240678(res_2734696145, res_2734696147);
            };
          };
          var newNode_2734696166 = res_2734696145;
          Label70: {
            var __2734696170 = null;
            var colontmp__536873210 = [];
            var Temporary71 = typ_2734696042;
            if (ConstSet304[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI2868903939)); }
            colontmp__536873210 = Temporary71.paramTypes;
            var i_536873211 = 0;
            var L_536873212 = (colontmp__536873210).length;
            Label72: {
                Label73: while (true) {
                if (!(i_536873211 < L_536873212)) break Label73;
                  __2734696170 = colontmp__536873210[chckIndx(i_536873211, 0, (colontmp__536873210).length - 1)];
                  Label74: {
                    var tmpHEX60gensym232_2734696175 = null;
                    Label75: {
                      var res_2734696181 = null;
                      res_2734696181 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2734696181.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2768240678(newNode_2734696166, res_2734696181);
                  i_536873211 = addInt(i_536873211, 1);
                  if (!(((colontmp__536873210).length == L_536873212))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2734696166;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2734695660 = nimCopy(result_2734695660, none_2734696191(), NTI2734691610);
        break BeforeRet;
        break;
      }
      var node_2734696210 = Temporary28;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696210, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym236_2734696218 = null;
        Label78: {
          var res_2734696224 = null;
          res_2734696224 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696224.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2734696226 = null;
              res_2734696226 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696226.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696224, res_2734696226);
            Label83: {
              var res_2734696228 = null;
              res_2734696228 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696228.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696224, res_2734696228);
          };
        };
      };
      var node_2734696256 = res_2734696224;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696256, Field1: 1}), NTI2734691610);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2734695654.kind == 2)) {
      Temporary85 = IdAppendString_2751463435;
      }
      else {
      Temporary85 = IdAdd_2751463427;
      }
      
      var operator_2734696264 = nimCopy(null, Temporary85, NTI2298478595);
      Label86: {
        var tmpHEX60gensym246_2734696269 = null;
        Label87: {
          var res_2734696275 = null;
          res_2734696275 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696275.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2734696277 = null;
              res_2734696277 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696277.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696277.reff = nimCopy(res_2734696277.reff, operator_2734696264, NTI2298478595);
            };
            add_2768240678(res_2734696275, res_2734696277);
            Label92: {
              var res_2734696280 = null;
              res_2734696280 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696280.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696275, res_2734696280);
            Label94: {
              var res_2734696282 = null;
              res_2734696282 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696282.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696275, res_2734696282);
          };
        };
      };
      var node_2734696319 = res_2734696275;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696319, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym259_2734696327 = null;
        Label97: {
          var res_2734696333 = null;
          res_2734696333 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696333.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2734696335 = null;
              res_2734696335 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696335.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696335.reff = nimCopy(res_2734696335.reff, IdSub_2751463428, NTI2298478595);
            };
            add_2768240678(res_2734696333, res_2734696335);
            Label102: {
              var res_2734696338 = null;
              res_2734696338 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696338.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696333, res_2734696338);
            Label104: {
              var res_2734696340 = null;
              res_2734696340 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696340.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696333, res_2734696340);
          };
        };
      };
      var node_2734696377 = res_2734696333;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696377, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym272_2734696385 = null;
        Label107: {
          var res_2734696391 = null;
          res_2734696391 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696391.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2734696393 = null;
              res_2734696393 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696393.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696393.reff = nimCopy(res_2734696393.reff, IdMul_2751463429, NTI2298478595);
            };
            add_2768240678(res_2734696391, res_2734696393);
            Label112: {
              var res_2734696396 = null;
              res_2734696396 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696396.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696391, res_2734696396);
            Label114: {
              var res_2734696398 = null;
              res_2734696398 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696398.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696391, res_2734696398);
          };
        };
      };
      var node_2734696435 = res_2734696391;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696435, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym285_2734696443 = null;
        Label117: {
          var res_2734696449 = null;
          res_2734696449 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696449.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2734696451 = null;
              res_2734696451 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696451.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696451.reff = nimCopy(res_2734696451.reff, IdDiv_2751463430, NTI2298478595);
            };
            add_2768240678(res_2734696449, res_2734696451);
            Label122: {
              var res_2734696454 = null;
              res_2734696454 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696454.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696449, res_2734696454);
            Label124: {
              var res_2734696456 = null;
              res_2734696456 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696456.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696449, res_2734696456);
          };
        };
      };
      var node_2734696493 = res_2734696449;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696493, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym298_2734696501 = null;
        Label127: {
          var res_2734696507 = null;
          res_2734696507 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696507.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2734696509 = null;
              res_2734696509 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696509.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696509.reff = nimCopy(res_2734696509.reff, IdMod_2751463431, NTI2298478595);
            };
            add_2768240678(res_2734696507, res_2734696509);
            Label132: {
              var res_2734696512 = null;
              res_2734696512 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696512.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696507, res_2734696512);
            Label134: {
              var res_2734696514 = null;
              res_2734696514 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696514.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696507, res_2734696514);
          };
        };
      };
      var node_2734696551 = res_2734696507;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696551, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym311_2734696559 = null;
        Label137: {
          var res_2734696565 = null;
          res_2734696565 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696565.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2734696565.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2734696576 = res_2734696565;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696576, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym315_2734696584 = null;
        Label140: {
          var res_2734696590 = null;
          res_2734696590 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696590.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2734696592 = null;
              res_2734696592 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696592.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2768240678(res_2734696590, res_2734696592);
        };
      };
      var node_2734696611 = res_2734696590;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696611, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym322_2734696619 = null;
        Label146: {
          var res_2734696625 = null;
          res_2734696625 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696625.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2734696627 = null;
              res_2734696627 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696627.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696625, res_2734696627);
            Label151: {
              var res_2734696629 = null;
              res_2734696629 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696629.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696625, res_2734696629);
          };
        };
      };
      var node_2734696657 = res_2734696625;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696657, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym332_2734696665 = null;
        Label154: {
          var res_2734696671 = null;
          res_2734696671 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696671.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2734696673 = null;
              res_2734696673 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696673.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696673.reff = nimCopy(res_2734696673.reff, IdEqual_2751463443, NTI2298478595);
            };
            add_2768240678(res_2734696671, res_2734696673);
            Label159: {
              var res_2734696676 = null;
              res_2734696676 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696676.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696671, res_2734696676);
            Label161: {
              var res_2734696678 = null;
              res_2734696678 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696678.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696671, res_2734696678);
          };
        };
      };
      var node_2734696715 = res_2734696671;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696715, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym345_2734696723 = null;
        Label164: {
          var res_2734696729 = null;
          res_2734696729 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696729.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2734696731 = null;
              res_2734696731 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696731.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696731.reff = nimCopy(res_2734696731.reff, IdNotEqual_2751463444, NTI2298478595);
            };
            add_2768240678(res_2734696729, res_2734696731);
            Label169: {
              var res_2734696734 = null;
              res_2734696734 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696734.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696729, res_2734696734);
            Label171: {
              var res_2734696736 = null;
              res_2734696736 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696736.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696729, res_2734696736);
          };
        };
      };
      var node_2734696773 = res_2734696729;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696773, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym358_2734696781 = null;
        Label174: {
          var res_2734696787 = null;
          res_2734696787 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696787.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2734696789 = null;
              res_2734696789 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696789.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696789.reff = nimCopy(res_2734696789.reff, IdLessEqual_2751463440, NTI2298478595);
            };
            add_2768240678(res_2734696787, res_2734696789);
            Label179: {
              var res_2734696792 = null;
              res_2734696792 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696792.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696787, res_2734696792);
            Label181: {
              var res_2734696794 = null;
              res_2734696794 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696794.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696787, res_2734696794);
          };
        };
      };
      var node_2734696831 = res_2734696787;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696831, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym371_2734696839 = null;
        Label184: {
          var res_2734696845 = null;
          res_2734696845 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696845.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2734696847 = null;
              res_2734696847 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696847.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696847.reff = nimCopy(res_2734696847.reff, IdGreaterEqual_2751463442, NTI2298478595);
            };
            add_2768240678(res_2734696845, res_2734696847);
            Label189: {
              var res_2734696850 = null;
              res_2734696850 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696850.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696845, res_2734696850);
            Label191: {
              var res_2734696852 = null;
              res_2734696852 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696852.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696845, res_2734696852);
          };
        };
      };
      var node_2734696889 = res_2734696845;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696889, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym384_2734696897 = null;
        Label194: {
          var res_2734696903 = null;
          res_2734696903 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696903.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2734696905 = null;
              res_2734696905 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696905.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696905.reff = nimCopy(res_2734696905.reff, IdLess_2751463439, NTI2298478595);
            };
            add_2768240678(res_2734696903, res_2734696905);
            Label199: {
              var res_2734696908 = null;
              res_2734696908 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696908.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696903, res_2734696908);
            Label201: {
              var res_2734696910 = null;
              res_2734696910 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696910.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696903, res_2734696910);
          };
        };
      };
      var node_2734696947 = res_2734696903;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734696947, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym397_2734696955 = null;
        Label204: {
          var res_2734696961 = null;
          res_2734696961 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734696961.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2734696963 = null;
              res_2734696963 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696963.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734696963.reff = nimCopy(res_2734696963.reff, IdGreater_2751463441, NTI2298478595);
            };
            add_2768240678(res_2734696961, res_2734696963);
            Label209: {
              var res_2734696966 = null;
              res_2734696966 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696966.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696961, res_2734696966);
            Label211: {
              var res_2734696968 = null;
              res_2734696968 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734696968.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734696961, res_2734696968);
          };
        };
      };
      var node_2734697005 = res_2734696961;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734697005, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym410_2734697013 = null;
        Label214: {
          var res_2734697019 = null;
          res_2734697019 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697019.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2734697021 = null;
              res_2734697021 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697021.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734697021.reff = nimCopy(res_2734697021.reff, IdOrder_2751463447, NTI2298478595);
            };
            add_2768240678(res_2734697019, res_2734697021);
            Label219: {
              var res_2734697024 = null;
              res_2734697024 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697024.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697019, res_2734697024);
            Label221: {
              var res_2734697026 = null;
              res_2734697026 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697026.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697019, res_2734697026);
          };
        };
      };
      var node_2734697063 = res_2734697019;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734697063, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym423_2734697071 = null;
        Label224: {
          var res_2734697077 = null;
          res_2734697077 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697077.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2734697079 = null;
              res_2734697079 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697079.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734697079.reff = nimCopy(res_2734697079.reff, IdAnd_2751463445, NTI2298478595);
            };
            add_2768240678(res_2734697077, res_2734697079);
            Label229: {
              var res_2734697082 = null;
              res_2734697082 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697082.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697077, res_2734697082);
            Label231: {
              var res_2734697084 = null;
              res_2734697084 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697084.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697077, res_2734697084);
          };
        };
      };
      var node_2734697121 = res_2734697077;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734697121, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym436_2734697129 = null;
        Label234: {
          var res_2734697135 = null;
          res_2734697135 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2734697135.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2734697137 = null;
              res_2734697137 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697137.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2734697137.reff = nimCopy(res_2734697137.reff, IdOr_2751463446, NTI2298478595);
            };
            add_2768240678(res_2734697135, res_2734697137);
            Label239: {
              var res_2734697140 = null;
              res_2734697140 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697140.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697135, res_2734697140);
            Label241: {
              var res_2734697142 = null;
              res_2734697142 = ({parent: null, id: ({id: 0}), reff: ({id: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2734697142.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2768240678(res_2734697135, res_2734697142);
          };
        };
      };
      var node_2734697179 = res_2734697135;
      result_2734695660 = nimCopy(result_2734695660, some_2734695690({Field0: node_2734697179, Field1: 0}), NTI2734691610);
      break BeforeRet;
      break;
    default: 
      result_2734695660 = nimCopy(result_2734695660, none_2734696191(), NTI2734691610);
      break BeforeRet;
      break;
    }
  };

  return result_2734695660;

}

function insertNode_2734693103(document_2734693104, node_2734693105, index_2734693106, newNode_2734693107) {
  var result_2734695422 = ({val: null});

  BeforeRet: {
    var node_2734695423 = node_2734693105;
    var index_2734695424 = index_2734693106;
    if ((node_2734695423 == null)) {
    node_2734695423 = document_2734693104.rootNode;
    index_2734695424 = 0;
    }
    
    document_2734693104.undoOps.push({kind: 2, parent: node_2734695423, idx: index_2734695424, node: newNode_2734693107, id: ({id: 0}), text: []});;
    document_2734693104.redoOps = nimCopy(null, [], NTI2734691311);
    insert_2768240694(node_2734695423, newNode_2734693107, index_2734695424);
    handleNodeInserted_2734691534(document_2734693104, newNode_2734693107);
    result_2734695422 = nimCopy(result_2734695422, some_2768240866(newNode_2734693107), NTI2768240759);
    break BeforeRet;
  };

  return result_2734695422;

}

function insertAfterSmart_2734699118(self_2734699119, nodeTemplate_2734699120) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2734699200(n_2734699203) {
        var result_2734699206 = false;

          result_2734699206 = shouldEditNode_2734697529(self_2734699119.document, n_2734699203);

        return result_2734699206;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699119)) {
    break BeforeRet;
    }
    
    var node_2734699121 = node_2734688923(self_2734699119);
    Label1: {
      var next_2734699122 = null;
      if (true) {
      Temporary2 = node_2734699121;
      }
      else {
      Temporary2 = node_2734699121.parent;
      }
      
      var node_536873154 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_536873154 == null))) break Label4;
            next_2734699122 = node_536873154;
            if (canInsertInto_2734697943(self_2734699119, next_2734699122.parent)) {
            node_2734699121 = next_2734699122;
            break Label1;
            }
            
            node_536873154 = node_536873154.parent;
          }
      };
    };
    var index_2734699123 = index_2768240748(node_2734699121);
      var oHEX60gensym628_2734699126 = createNodeFromAction_2734695650(self_2734699119, nodeTemplate_2734699120, node_2734699121, errorType_2868904282());
      if (!isSome_2734699131(oHEX60gensym628_2734699126)) Temporary5 = false; else {        var newNodeIndex_2734699171 = nimCopy(null, get_2734699148(oHEX60gensym628_2734699126), NTI2734691605);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2734699172 = newNodeIndex_2734699171["Field0"];
    var __2734699173 = newNodeIndex_2734699171["Field1"];
      var oHEX60gensym630_2734699176 = insertNode_2734693103(self_2734699119.document, node_2734699121.parent, addInt(index_2734699123, 1), newNode_2734699172);
      if (!isSome_2768242522(oHEX60gensym630_2734699176)) Temporary6 = false; else {        var node_2734699199 = get_2768242542(oHEX60gensym630_2734699176);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2734690756(self_2734699119, node_2734699199);
    Label7: {
      var __2734699207 = 0;
      var emptyNode_2734699208 = null;
      var colontmp__536873157 = null;
      colontmp__536873157 = HEX3Aanonymous_2734699200;
      var i_536873158 = 0;
      Label8: {
        var __536873160 = 0;
        var child_536873161 = null;
        var n_536873162 = newNode_2734699172;
        var idx_536873163 = -1;
        var i_536873164 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_536873163 == -1)) {
              __536873160 = i_536873164;
              child_536873161 = n_536873162;
              if (colontmp__536873157(child_536873161)) {
              __2734699207 = i_536873158;
              emptyNode_2734699208 = child_536873161;
              nodeHEX3D_2734690756(self_2734699119, emptyNode_2734699208);
              var _ = tryEdit_2734694494(self_2734699119, node_2734688923(self_2734699119));
              break Label7;
              i_536873158 = addInt(i_536873158, 1);
              }
              
              }
              
              if ((addInt(idx_536873163, 1) < len_2768240728(n_536873162))) {
              n_536873162 = HEX5BHEX5D_2768240724(n_536873162, addInt(idx_536873163, 1));
              idx_536873163 = -1;
              }
              else {
                var oHEX60gensym71_536873166 = next_2768240833(n_536873162);
                if (!isSome_2768242522(oHEX60gensym71_536873166)) Temporary13 = false; else {                  var ne_536873167 = get_2768242542(oHEX60gensym71_536873166);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_536873162 == newNode_2734699172));                }              if (Temporary12) {
              n_536873162 = ne_536873167;
              idx_536873163 = -1;
              }
              else {
              if (((!((n_536873162.parent == null)) && !((n_536873162 == newNode_2734699172))) && !((n_536873162.parent == newNode_2734699172)))) {
              idx_536873163 = index_2768240748(n_536873162);
              n_536873162 = n_536873162.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_536873164 = addInt(i_536873164, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2734699213 = [mnewString(0)];
      fmtRes_2734699213[0].push.apply(fmtRes_2734699213[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2868904741(fmtRes_2734699213, 0, newNode_2734699172, []);
      fmtRes_2734699213[0].push.apply(fmtRes_2734699213[0], [32,105,110,116,111,32]);;
      formatValue_2868904741(fmtRes_2734699213, 0, node_2734688923(self_2734699119).parent, []);
      fmtRes_2734699213[0].push.apply(fmtRes_2734699213[0], [32,97,116,32]);;
      formatValue_2348810760(fmtRes_2734699213, 0, addInt(index_2734699123, 1), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734699213[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartScript_2734699238(self_2734699239, nodeTemplate_2734699240) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym625_2734699241 = getAstDocumentEditor_2734697991(self_2734699239);
      if (isNone_2734698107(rHEX60gensym625_2734699241)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2734699118(get_2734698127(rHEX60gensym625_2734699241), nodeTemplate_2734699240);
  };

  
}

function insertAfterSmartApi_2734699264(HEX3Atmp_2734699115) {
  var result_2734699265 = null;

    result_2734699265 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2734699238(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699115, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699115, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym627_2734699276 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2734699281 = [mnewString(0)];
    fmtRes_2734699281[0].push.apply(fmtRes_2734699281[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699281, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym627_2734699276 || [],fmtRes_2734699281[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699265;

}

function insertAfter_2734699290(self_2734699291, nodeTemplate_2734699292) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2734699349(n_2734699352) {
        var result_2734699355 = false;

          result_2734699355 = shouldEditNode_2734697529(self_2734699291.document, n_2734699352);

        return result_2734699355;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699291)) {
    break BeforeRet;
    }
    
    var node_2734699293 = node_2734688923(self_2734699291);
    var index_2734699294 = index_2768240748(node_2734699293);
      var oHEX60gensym638_2734699297 = createNodeFromAction_2734695650(self_2734699291, nodeTemplate_2734699292, node_2734699293, errorType_2868904282());
      if (!isSome_2734699131(oHEX60gensym638_2734699297)) Temporary1 = false; else {        var newNodeIndex_2734699320 = nimCopy(null, get_2734699148(oHEX60gensym638_2734699297), NTI2734691605);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2734699321 = newNodeIndex_2734699320["Field0"];
    var __2734699322 = newNodeIndex_2734699320["Field1"];
      var oHEX60gensym639_2734699325 = insertNode_2734693103(self_2734699291.document, node_2734699293.parent, addInt(index_2734699294, 1), newNode_2734699321);
      if (!isSome_2768242522(oHEX60gensym639_2734699325)) Temporary2 = false; else {        var node_2734699348 = get_2768242542(oHEX60gensym639_2734699325);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2734690756(self_2734699291, node_2734699348);
    Label3: {
      var __2734699356 = 0;
      var emptyNode_2734699357 = null;
      var colontmp__536873318 = null;
      colontmp__536873318 = HEX3Aanonymous_2734699349;
      var i_536873319 = 0;
      Label4: {
        var __536873321 = 0;
        var child_536873322 = null;
        var n_536873323 = newNode_2734699321;
        var idx_536873324 = -1;
        var i_536873325 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_536873324 == -1)) {
              __536873321 = i_536873325;
              child_536873322 = n_536873323;
              if (colontmp__536873318(child_536873322)) {
              __2734699356 = i_536873319;
              emptyNode_2734699357 = child_536873322;
              nodeHEX3D_2734690756(self_2734699291, emptyNode_2734699357);
              var _ = tryEdit_2734694494(self_2734699291, node_2734688923(self_2734699291));
              break Label3;
              i_536873319 = addInt(i_536873319, 1);
              }
              
              }
              
              if ((addInt(idx_536873324, 1) < len_2768240728(n_536873323))) {
              n_536873323 = HEX5BHEX5D_2768240724(n_536873323, addInt(idx_536873324, 1));
              idx_536873324 = -1;
              }
              else {
                var oHEX60gensym71_536873327 = next_2768240833(n_536873323);
                if (!isSome_2768242522(oHEX60gensym71_536873327)) Temporary9 = false; else {                  var ne_536873328 = get_2768242542(oHEX60gensym71_536873327);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_536873323 == newNode_2734699321));                }              if (Temporary8) {
              n_536873323 = ne_536873328;
              idx_536873324 = -1;
              }
              else {
              if (((!((n_536873323.parent == null)) && !((n_536873323 == newNode_2734699321))) && !((n_536873323.parent == newNode_2734699321)))) {
              idx_536873324 = index_2768240748(n_536873323);
              n_536873323 = n_536873323.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_536873325 = addInt(i_536873325, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2734699362 = [mnewString(0)];
      fmtRes_2734699362[0].push.apply(fmtRes_2734699362[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2868904741(fmtRes_2734699362, 0, newNode_2734699321, []);
      fmtRes_2734699362[0].push.apply(fmtRes_2734699362[0], [32,105,110,116,111,32]);;
      formatValue_2868904741(fmtRes_2734699362, 0, node_2734688923(self_2734699291).parent, []);
      fmtRes_2734699362[0].push.apply(fmtRes_2734699362[0], [32,97,116,32]);;
      formatValue_2348810760(fmtRes_2734699362, 0, addInt(index_2734699294, 1), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734699362[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterScript_2734699378(self_2734699379, nodeTemplate_2734699380) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym635_2734699381 = getAstDocumentEditor_2734697991(self_2734699379);
      if (isNone_2734698107(rHEX60gensym635_2734699381)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2734699290(get_2734698127(rHEX60gensym635_2734699381), nodeTemplate_2734699380);
  };

  
}

function insertAfterApi_2734699404(HEX3Atmp_2734699287) {
  var result_2734699405 = null;

    result_2734699405 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2734699378(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699287, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699287, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym637_2734699416 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2734699421 = [mnewString(0)];
    fmtRes_2734699421[0].push.apply(fmtRes_2734699421[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699421, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym637_2734699416 || [],fmtRes_2734699421[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699405;

}

function insertBefore_2734699430(self_2734699431, nodeTemplate_2734699432) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2734699488(n_2734699491) {
        var result_2734699494 = false;

          result_2734699494 = shouldEditNode_2734697529(self_2734699431.document, n_2734699491);

        return result_2734699494;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699431)) {
    break BeforeRet;
    }
    
    var index_2734699433 = index_2768240748(node_2734688923(self_2734699431));
      var oHEX60gensym647_2734699436 = createNodeFromAction_2734695650(self_2734699431, nodeTemplate_2734699432, node_2734688923(self_2734699431), errorType_2868904282());
      if (!isSome_2734699131(oHEX60gensym647_2734699436)) Temporary1 = false; else {        var newNodeIndex_2734699459 = nimCopy(null, get_2734699148(oHEX60gensym647_2734699436), NTI2734691605);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2734699460 = newNodeIndex_2734699459["Field0"];
    var __2734699461 = newNodeIndex_2734699459["Field1"];
      var oHEX60gensym648_2734699464 = insertNode_2734693103(self_2734699431.document, node_2734688923(self_2734699431).parent, index_2734699433, newNode_2734699460);
      if (!isSome_2768242522(oHEX60gensym648_2734699464)) Temporary2 = false; else {        var node_2734699487 = get_2768242542(oHEX60gensym648_2734699464);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2734690756(self_2734699431, node_2734699487);
    Label3: {
      var __2734699495 = 0;
      var emptyNode_2734699496 = null;
      var colontmp__536873333 = null;
      colontmp__536873333 = HEX3Aanonymous_2734699488;
      var i_536873334 = 0;
      Label4: {
        var __536873336 = 0;
        var child_536873337 = null;
        var n_536873338 = newNode_2734699460;
        var idx_536873339 = -1;
        var i_536873340 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_536873339 == -1)) {
              __536873336 = i_536873340;
              child_536873337 = n_536873338;
              if (colontmp__536873333(child_536873337)) {
              __2734699495 = i_536873334;
              emptyNode_2734699496 = child_536873337;
              nodeHEX3D_2734690756(self_2734699431, emptyNode_2734699496);
              var _ = tryEdit_2734694494(self_2734699431, node_2734688923(self_2734699431));
              break Label3;
              i_536873334 = addInt(i_536873334, 1);
              }
              
              }
              
              if ((addInt(idx_536873339, 1) < len_2768240728(n_536873338))) {
              n_536873338 = HEX5BHEX5D_2768240724(n_536873338, addInt(idx_536873339, 1));
              idx_536873339 = -1;
              }
              else {
                var oHEX60gensym71_536873342 = next_2768240833(n_536873338);
                if (!isSome_2768242522(oHEX60gensym71_536873342)) Temporary9 = false; else {                  var ne_536873343 = get_2768242542(oHEX60gensym71_536873342);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_536873338 == newNode_2734699460));                }              if (Temporary8) {
              n_536873338 = ne_536873343;
              idx_536873339 = -1;
              }
              else {
              if (((!((n_536873338.parent == null)) && !((n_536873338 == newNode_2734699460))) && !((n_536873338.parent == newNode_2734699460)))) {
              idx_536873339 = index_2768240748(n_536873338);
              n_536873338 = n_536873338.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_536873340 = addInt(i_536873340, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2734699501 = [mnewString(0)];
      fmtRes_2734699501[0].push.apply(fmtRes_2734699501[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2868904741(fmtRes_2734699501, 0, newNode_2734699460, []);
      fmtRes_2734699501[0].push.apply(fmtRes_2734699501[0], [32,105,110,116,111,32]);;
      formatValue_2868904741(fmtRes_2734699501, 0, node_2734688923(self_2734699431).parent, []);
      fmtRes_2734699501[0].push.apply(fmtRes_2734699501[0], [32,97,116,32]);;
      formatValue_2348810760(fmtRes_2734699501, 0, index_2734699433, []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734699501[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeScript_2734699517(self_2734699518, nodeTemplate_2734699519) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym644_2734699520 = getAstDocumentEditor_2734697991(self_2734699518);
      if (isNone_2734698107(rHEX60gensym644_2734699520)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2734699430(get_2734698127(rHEX60gensym644_2734699520), nodeTemplate_2734699519);
  };

  
}

function insertBeforeApi_2734699543(HEX3Atmp_2734699427) {
  var result_2734699544 = null;

    result_2734699544 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2734699517(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699427, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699427, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym646_2734699555 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2734699560 = [mnewString(0)];
    fmtRes_2734699560[0].push.apply(fmtRes_2734699560[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699560, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym646_2734699555 || [],fmtRes_2734699560[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699544;

}

function insertChild_2734699569(self_2734699570, nodeTemplate_2734699571) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2734699626(n_2734699629) {
        var result_2734699632 = false;

          result_2734699632 = shouldEditNode_2734697529(self_2734699570.document, n_2734699629);

        return result_2734699632;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699570)) {
    break BeforeRet;
    }
    
      var oHEX60gensym656_2734699574 = createNodeFromAction_2734695650(self_2734699570, nodeTemplate_2734699571, node_2734688923(self_2734699570), errorType_2868904282());
      if (!isSome_2734699131(oHEX60gensym656_2734699574)) Temporary1 = false; else {        var newNodeIndex_2734699597 = nimCopy(null, get_2734699148(oHEX60gensym656_2734699574), NTI2734691605);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2734699598 = newNodeIndex_2734699597["Field0"];
    var __2734699599 = newNodeIndex_2734699597["Field1"];
      var oHEX60gensym657_2734699602 = insertNode_2734693103(self_2734699570.document, node_2734688923(self_2734699570), len_2768240728(node_2734688923(self_2734699570)), newNode_2734699598);
      if (!isSome_2768242522(oHEX60gensym657_2734699602)) Temporary2 = false; else {        var node_2734699625 = get_2768242542(oHEX60gensym657_2734699602);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2734690756(self_2734699570, node_2734699625);
    Label3: {
      var __2734699633 = 0;
      var emptyNode_2734699634 = null;
      var colontmp__536873348 = null;
      colontmp__536873348 = HEX3Aanonymous_2734699626;
      var i_536873349 = 0;
      Label4: {
        var __536873351 = 0;
        var child_536873352 = null;
        var n_536873353 = newNode_2734699598;
        var idx_536873354 = -1;
        var i_536873355 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_536873354 == -1)) {
              __536873351 = i_536873355;
              child_536873352 = n_536873353;
              if (colontmp__536873348(child_536873352)) {
              __2734699633 = i_536873349;
              emptyNode_2734699634 = child_536873352;
              nodeHEX3D_2734690756(self_2734699570, emptyNode_2734699634);
              var _ = tryEdit_2734694494(self_2734699570, node_2734688923(self_2734699570));
              break Label3;
              i_536873349 = addInt(i_536873349, 1);
              }
              
              }
              
              if ((addInt(idx_536873354, 1) < len_2768240728(n_536873353))) {
              n_536873353 = HEX5BHEX5D_2768240724(n_536873353, addInt(idx_536873354, 1));
              idx_536873354 = -1;
              }
              else {
                var oHEX60gensym71_536873357 = next_2768240833(n_536873353);
                if (!isSome_2768242522(oHEX60gensym71_536873357)) Temporary9 = false; else {                  var ne_536873358 = get_2768242542(oHEX60gensym71_536873357);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_536873353 == newNode_2734699598));                }              if (Temporary8) {
              n_536873353 = ne_536873358;
              idx_536873354 = -1;
              }
              else {
              if (((!((n_536873353.parent == null)) && !((n_536873353 == newNode_2734699598))) && !((n_536873353.parent == newNode_2734699598)))) {
              idx_536873354 = index_2768240748(n_536873353);
              n_536873353 = n_536873353.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_536873355 = addInt(i_536873355, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2734699639 = [mnewString(0)];
      fmtRes_2734699639[0].push.apply(fmtRes_2734699639[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_2868904741(fmtRes_2734699639, 0, newNode_2734699598, []);
      fmtRes_2734699639[0].push.apply(fmtRes_2734699639[0], [32,105,110,116,111,32]);;
      formatValue_2868904741(fmtRes_2734699639, 0, node_2734688923(self_2734699570), []);
      fmtRes_2734699639[0].push.apply(fmtRes_2734699639[0], [32,97,116,32]);;
      formatValue_2348810760(fmtRes_2734699639, 0, len_2768240728(node_2734688923(self_2734699570)), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734699639[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildScript_2734699655(self_2734699656, nodeTemplate_2734699657) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2734699658 = getAstDocumentEditor_2734697991(self_2734699656);
      if (isNone_2734698107(rHEX60gensym653_2734699658)) {
      break BeforeRet;
      }
      
    };
    insertChild_2734699569(get_2734698127(rHEX60gensym653_2734699658), nodeTemplate_2734699657);
  };

  
}

function insertChildApi_2734699681(HEX3Atmp_2734699566) {
  var result_2734699682 = null;

    result_2734699682 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2734699655(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699566, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699566, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym655_2734699693 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2734699698 = [mnewString(0)];
    fmtRes_2734699698[0].push.apply(fmtRes_2734699698[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699698, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym655_2734699693 || [],fmtRes_2734699698[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699682;

}

function replace_2734699707(self_2734699708, nodeTemplate_2734699709) {
      var Temporary1;
      
function HEX3Aanonymous_2734699738(n_2734699741) {
        var result_2734699744 = false;

          result_2734699744 = shouldEditNode_2734697529(self_2734699708.document, n_2734699741);

        return result_2734699744;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699708)) {
    break BeforeRet;
    }
    
      var oHEX60gensym665_2734699712 = createNodeFromAction_2734695650(self_2734699708, nodeTemplate_2734699709, node_2734688923(self_2734699708), errorType_2868904282());
      if (!isSome_2734699131(oHEX60gensym665_2734699712)) Temporary1 = false; else {        var newNodeIndex_2734699735 = nimCopy(null, get_2734699148(oHEX60gensym665_2734699712), NTI2734691605);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2734699736 = newNodeIndex_2734699735["Field0"];
    var __2734699737 = newNodeIndex_2734699735["Field1"];
    nodeHEX3D_2734690756(self_2734699708, replaceNode_2734695331(self_2734699708.document, node_2734688923(self_2734699708), newNode_2734699736));
    Label2: {
      var __2734699745 = 0;
      var emptyNode_2734699746 = null;
      var colontmp__536873363 = null;
      colontmp__536873363 = HEX3Aanonymous_2734699738;
      var i_536873364 = 0;
      Label3: {
        var __536873366 = 0;
        var child_536873367 = null;
        var n_536873368 = newNode_2734699736;
        var idx_536873369 = -1;
        var i_536873370 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_536873369 == -1)) {
              __536873366 = i_536873370;
              child_536873367 = n_536873368;
              if (colontmp__536873363(child_536873367)) {
              __2734699745 = i_536873364;
              emptyNode_2734699746 = child_536873367;
              nodeHEX3D_2734690756(self_2734699708, emptyNode_2734699746);
              var _ = tryEdit_2734694494(self_2734699708, node_2734688923(self_2734699708));
              break Label2;
              i_536873364 = addInt(i_536873364, 1);
              }
              
              }
              
              if ((addInt(idx_536873369, 1) < len_2768240728(n_536873368))) {
              n_536873368 = HEX5BHEX5D_2768240724(n_536873368, addInt(idx_536873369, 1));
              idx_536873369 = -1;
              }
              else {
                var oHEX60gensym71_536873372 = next_2768240833(n_536873368);
                if (!isSome_2768242522(oHEX60gensym71_536873372)) Temporary8 = false; else {                  var ne_536873373 = get_2768242542(oHEX60gensym71_536873372);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_536873368 == newNode_2734699736));                }              if (Temporary7) {
              n_536873368 = ne_536873373;
              idx_536873369 = -1;
              }
              else {
              if (((!((n_536873368.parent == null)) && !((n_536873368 == newNode_2734699736))) && !((n_536873368.parent == newNode_2734699736)))) {
              idx_536873369 = index_2768240748(n_536873368);
              n_536873368 = n_536873368.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_536873370 = addInt(i_536873370, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceScript_2734699747(self_2734699748, nodeTemplate_2734699749) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym662_2734699750 = getAstDocumentEditor_2734697991(self_2734699748);
      if (isNone_2734698107(rHEX60gensym662_2734699750)) {
      break BeforeRet;
      }
      
    };
    replace_2734699707(get_2734698127(rHEX60gensym662_2734699750), nodeTemplate_2734699749);
  };

  
}

function replaceApi_2734699773(HEX3Atmp_2734699704) {
  var result_2734699774 = null;

    result_2734699774 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2734699747(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699704, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699704, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym664_2734699785 = [114,101,112,108,97,99,101];
    var fmtRes_2734699790 = [mnewString(0)];
    fmtRes_2734699790[0].push.apply(fmtRes_2734699790[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699790, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym664_2734699785 || [],fmtRes_2734699790[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699774;

}

function replaceEmpty_2734699799(self_2734699800, nodeTemplate_2734699801) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2734699834(n_2734699837) {
        var result_2734699840 = false;

          result_2734699840 = shouldEditNode_2734697529(self_2734699800.document, n_2734699837);

        return result_2734699840;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699800)) {
    break BeforeRet;
    }
    
      if (!(node_2734688923(self_2734699800).kind == 0)) Temporary1 = false; else {        var oHEX60gensym672_2734699808 = createNodeFromAction_2734695650(self_2734699800, nodeTemplate_2734699801, node_2734688923(self_2734699800), errorType_2868904282());
        if (!isSome_2734699131(oHEX60gensym672_2734699808)) Temporary2 = false; else {          var newNodeIndex_2734699831 = nimCopy(null, get_2734699148(oHEX60gensym672_2734699808), NTI2734691605);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2734699832 = newNodeIndex_2734699831["Field0"];
    var __2734699833 = newNodeIndex_2734699831["Field1"];
    nodeHEX3D_2734690756(self_2734699800, replaceNode_2734695331(self_2734699800.document, node_2734688923(self_2734699800), newNode_2734699832));
    Label3: {
      var __2734699841 = 0;
      var emptyNode_2734699842 = null;
      var colontmp__536873378 = null;
      colontmp__536873378 = HEX3Aanonymous_2734699834;
      var i_536873379 = 0;
      Label4: {
        var __536873381 = 0;
        var child_536873382 = null;
        var n_536873383 = newNode_2734699832;
        var idx_536873384 = -1;
        var i_536873385 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_536873384 == -1)) {
              __536873381 = i_536873385;
              child_536873382 = n_536873383;
              if (colontmp__536873378(child_536873382)) {
              __2734699841 = i_536873379;
              emptyNode_2734699842 = child_536873382;
              nodeHEX3D_2734690756(self_2734699800, emptyNode_2734699842);
              var _ = tryEdit_2734694494(self_2734699800, node_2734688923(self_2734699800));
              break Label3;
              i_536873379 = addInt(i_536873379, 1);
              }
              
              }
              
              if ((addInt(idx_536873384, 1) < len_2768240728(n_536873383))) {
              n_536873383 = HEX5BHEX5D_2768240724(n_536873383, addInt(idx_536873384, 1));
              idx_536873384 = -1;
              }
              else {
                var oHEX60gensym71_536873387 = next_2768240833(n_536873383);
                if (!isSome_2768242522(oHEX60gensym71_536873387)) Temporary9 = false; else {                  var ne_536873388 = get_2768242542(oHEX60gensym71_536873387);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_536873383 == newNode_2734699832));                }              if (Temporary8) {
              n_536873383 = ne_536873388;
              idx_536873384 = -1;
              }
              else {
              if (((!((n_536873383.parent == null)) && !((n_536873383 == newNode_2734699832))) && !((n_536873383.parent == newNode_2734699832)))) {
              idx_536873384 = index_2768240748(n_536873383);
              n_536873383 = n_536873383.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_536873385 = addInt(i_536873385, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyScript_2734699843(self_2734699844, nodeTemplate_2734699845) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym669_2734699846 = getAstDocumentEditor_2734697991(self_2734699844);
      if (isNone_2734698107(rHEX60gensym669_2734699846)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2734699799(get_2734698127(rHEX60gensym669_2734699846), nodeTemplate_2734699845);
  };

  
}

function replaceEmptyApi_2734699869(HEX3Atmp_2734699796) {
  var result_2734699870 = null;

    result_2734699870 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2734699843(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699796, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699796, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym671_2734699881 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2734699886 = [mnewString(0)];
    fmtRes_2734699886[0].push.apply(fmtRes_2734699886[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699886, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym671_2734699881 || [],fmtRes_2734699886[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699870;

}

function replaceParent_2734699895(self_2734699896) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734699896)) {
    break BeforeRet;
    }
    
    var node_2734699897 = node_2734688923(self_2734699896);
    if (((node_2734699897.parent == null) || (node_2734699897.parent == self_2734699896.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2734699906 = node_2734699897.parent;
    var _ = deleteNode_2734695395(self_2734699896.document, node_2734688923(self_2734699896));
    nodeHEX3D_2734690756(self_2734699896, replaceNode_2734695331(self_2734699896.document, parent_2734699906, node_2734699897));
  };

  
}

function replaceParentScript_2734699907(self_2734699908) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym675_2734699909 = getAstDocumentEditor_2734697991(self_2734699908);
      if (isNone_2734698107(rHEX60gensym675_2734699909)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2734699895(get_2734698127(rHEX60gensym675_2734699909));
  };

  
}

function replaceParentApi_2734699932(HEX3Atmp_2734699892) {
  var result_2734699933 = null;

    result_2734699933 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2734699907(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699892, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym677_2734699939 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2734699944 = [mnewString(0)];
    fmtRes_2734699944[0].push.apply(fmtRes_2734699944[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734699944, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym677_2734699939 || [],fmtRes_2734699944[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734699933;

}

function wrap_2734699953(self_2734699954, nodeTemplate_2734699955) {
      var Temporary1;
      
function HEX3Aanonymous_2734699986(n_2734699989) {
        var result_2734699992 = false;

          result_2734699992 = (n_2734699989.kind == 0);

        return result_2734699992;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2734699999(n_2734700002) {
        var result_2734700005 = false;

          result_2734700005 = shouldEditNode_2734697529(self_2734699954.document, n_2734700002);

        return result_2734700005;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2734694383(self_2734699954)) {
    break BeforeRet;
    }
    
    var typ_2734699956 = computeType_2785102512(ctx_2734686259, node_2734688923(self_2734699954), true);
      var oHEX60gensym684_2734699959 = createNodeFromAction_2734695650(self_2734699954, nodeTemplate_2734699955, node_2734688923(self_2734699954), typ_2734699956);
      if (!isSome_2734699131(oHEX60gensym684_2734699959)) Temporary1 = false; else {        var newNodeIndex_2734699982 = nimCopy(null, get_2734699148(oHEX60gensym684_2734699959), NTI2734691605);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2734699983 = newNodeIndex_2734699982["Field0"];
    var index_2734699984 = newNodeIndex_2734699982["Field1"];
    var oldNode_2734699985 = node_2734688923(self_2734699954);
    nodeHEX3D_2734690756(self_2734699954, replaceNode_2734695331(self_2734699954.document, node_2734688923(self_2734699954), newNode_2734699983));
    Label2: {
      var i_2734699997 = 0;
      var emptyNode_2734699998 = null;
      var colontmp__536873395 = null;
      colontmp__536873395 = HEX3Aanonymous_2734699986;
      var i_536873396 = 0;
      Label3: {
        var __536873398 = 0;
        var child_536873399 = null;
        var n_536873400 = newNode_2734699983;
        var idx_536873401 = -1;
        var i_536873402 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_536873401 == -1)) {
              __536873398 = i_536873402;
              child_536873399 = n_536873400;
              if (colontmp__536873395(child_536873399)) {
              i_2734699997 = i_536873396;
              emptyNode_2734699998 = child_536873399;
              if ((i_2734699997 == index_2734699984)) {
              nodeHEX3D_2734690756(self_2734699954, replaceNode_2734695331(self_2734699954.document, emptyNode_2734699998, oldNode_2734699985));
              break Label2;
              }
              
              i_536873396 = addInt(i_536873396, 1);
              }
              
              }
              
              if ((addInt(idx_536873401, 1) < len_2768240728(n_536873400))) {
              n_536873400 = HEX5BHEX5D_2768240724(n_536873400, addInt(idx_536873401, 1));
              idx_536873401 = -1;
              }
              else {
                var oHEX60gensym71_536873404 = next_2768240833(n_536873400);
                if (!isSome_2768242522(oHEX60gensym71_536873404)) Temporary8 = false; else {                  var ne_536873405 = get_2768242542(oHEX60gensym71_536873404);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_536873400 == newNode_2734699983));                }              if (Temporary7) {
              n_536873400 = ne_536873405;
              idx_536873401 = -1;
              }
              else {
              if (((!((n_536873400.parent == null)) && !((n_536873400 == newNode_2734699983))) && !((n_536873400.parent == newNode_2734699983)))) {
              idx_536873401 = index_2768240748(n_536873400);
              n_536873400 = n_536873400.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_536873402 = addInt(i_536873402, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2734700006 = 0;
      var emptyNode_2734700007 = null;
      var colontmp__536873407 = null;
      colontmp__536873407 = HEX3Aanonymous_2734699999;
      var i_536873408 = 0;
      Label10: {
        var __536873410 = 0;
        var child_536873411 = null;
        var n_536873412 = newNode_2734699983;
        var idx_536873413 = -1;
        var i_536873414 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_536873413 == -1)) {
              __536873410 = i_536873414;
              child_536873411 = n_536873412;
              if (colontmp__536873407(child_536873411)) {
              __2734700006 = i_536873408;
              emptyNode_2734700007 = child_536873411;
              nodeHEX3D_2734690756(self_2734699954, emptyNode_2734700007);
              var _ = tryEdit_2734694494(self_2734699954, node_2734688923(self_2734699954));
              break Label9;
              i_536873408 = addInt(i_536873408, 1);
              }
              
              }
              
              if ((addInt(idx_536873413, 1) < len_2768240728(n_536873412))) {
              n_536873412 = HEX5BHEX5D_2768240724(n_536873412, addInt(idx_536873413, 1));
              idx_536873413 = -1;
              }
              else {
                var oHEX60gensym71_536873416 = next_2768240833(n_536873412);
                if (!isSome_2768242522(oHEX60gensym71_536873416)) Temporary15 = false; else {                  var ne_536873417 = get_2768242542(oHEX60gensym71_536873416);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_536873412 == newNode_2734699983));                }              if (Temporary14) {
              n_536873412 = ne_536873417;
              idx_536873413 = -1;
              }
              else {
              if (((!((n_536873412.parent == null)) && !((n_536873412 == newNode_2734699983))) && !((n_536873412.parent == newNode_2734699983)))) {
              idx_536873413 = index_2768240748(n_536873412);
              n_536873412 = n_536873412.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_536873414 = addInt(i_536873414, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapScript_2734700017(self_2734700018, nodeTemplate_2734700019) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym681_2734700020 = getAstDocumentEditor_2734697991(self_2734700018);
      if (isNone_2734698107(rHEX60gensym681_2734700020)) {
      break BeforeRet;
      }
      
    };
    wrap_2734699953(get_2734698127(rHEX60gensym681_2734700020), nodeTemplate_2734700019);
  };

  
}

function wrapApi_2734700043(HEX3Atmp_2734699950) {
  var result_2734700044 = null;

    result_2734700044 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2734700017(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734699950, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734699950, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym683_2734700055 = [119,114,97,112];
    var fmtRes_2734700060 = [mnewString(0)];
    fmtRes_2734700060[0].push.apply(fmtRes_2734700060[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700060, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym683_2734700055 || [],fmtRes_2734700060[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700044;

}

function editPrevEmpty_2734700069(self_2734700070) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2734694383(self_2734700070)) {
    break BeforeRet;
    }
    
    var current_2734700071 = node_2734688923(self_2734700070);
    Label1: {
      var emptyNode_2734700072 = null;
      var colontmp__536873421 = null;
      colontmp__536873421 = node_2734688923(self_2734700070);
      var idx_536873422 = 0;
      var n_536873423 = colontmp__536873421;
      Label2: {
          Label3: while (true) {
          if (!!((n_536873423 == null))) break Label3;
            if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873423), 1)), subInt(idx_536873422, 1))) {
            n_536873423 = HEX5BHEX5D_2768240724(n_536873423, subInt(idx_536873422, 1));
            idx_536873422 = len_2768240728(n_536873423);
            }
            else {
              var oHEX60gensym90_536873425 = prev_2768240879(n_536873423);
              if (!isSome_2768242522(oHEX60gensym90_536873425)) Temporary4 = false; else {                var ne_536873426 = get_2768242542(oHEX60gensym90_536873425);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2734700072 = n_536873423;
            if ((!((emptyNode_2734700072 == current_2734700071)) && shouldEditNode_2734697529(self_2734700070.document, emptyNode_2734700072))) {
            nodeHEX3D_2734690756(self_2734700070, emptyNode_2734700072);
            var _ = tryEdit_2734694494(self_2734700070, node_2734688923(self_2734700070));
            break Label1;
            }
            
            n_536873423 = ne_536873426;
            idx_536873422 = len_2768240728(n_536873423);
            }
            else {
              emptyNode_2734700072 = n_536873423;
              if ((!((emptyNode_2734700072 == current_2734700071)) && shouldEditNode_2734697529(self_2734700070.document, emptyNode_2734700072))) {
              nodeHEX3D_2734690756(self_2734700070, emptyNode_2734700072);
              var _ = tryEdit_2734694494(self_2734700070, node_2734688923(self_2734700070));
              break Label1;
              }
              
              idx_536873422 = index_2768240748(n_536873423);
              n_536873423 = n_536873423.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyScript_2734700077(self_2734700078) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym687_2734700079 = getAstDocumentEditor_2734697991(self_2734700078);
      if (isNone_2734698107(rHEX60gensym687_2734700079)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2734700069(get_2734698127(rHEX60gensym687_2734700079));
  };

  
}

function editPrevEmptyApi_2734700102(HEX3Atmp_2734700066) {
  var result_2734700103 = null;

    result_2734700103 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2734700077(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700066, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym689_2734700109 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2734700114 = [mnewString(0)];
    fmtRes_2734700114[0].push.apply(fmtRes_2734700114[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700114, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym689_2734700109 || [],fmtRes_2734700114[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700103;

}

function editNextEmpty_2734700123(self_2734700124) {
      
function HEX3Aanonymous_2734700126(n_2734700129) {
        var result_2734700132 = false;

          result_2734700132 = (!((n_2734700129 == current_2734700125)) && shouldEditNode_2734697529(self_2734700124.document, n_2734700129));

        return result_2734700132;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2734694383(self_2734700124)) {
    break BeforeRet;
    }
    
    var current_2734700125 = node_2734688923(self_2734700124);
    Label1: {
      var __2734700137 = 0;
      var emptyNode_2734700138 = null;
      var colontmp__536873430 = null;
      var colontmp__536873431 = null;
      colontmp__536873430 = node_2734688923(self_2734700124);
      colontmp__536873431 = HEX3Aanonymous_2734700126;
      var i_536873432 = 0;
      Label2: {
        var __536873434 = 0;
        var child_536873435 = null;
        var n_536873436 = colontmp__536873430;
        var idx_536873437 = -1;
        var i_536873438 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_536873437 == -1)) {
              __536873434 = i_536873438;
              child_536873435 = n_536873436;
              if (colontmp__536873431(child_536873435)) {
              __2734700137 = i_536873432;
              emptyNode_2734700138 = child_536873435;
              nodeHEX3D_2734690756(self_2734700124, emptyNode_2734700138);
              var _ = tryEdit_2734694494(self_2734700124, node_2734688923(self_2734700124));
              break Label1;
              i_536873432 = addInt(i_536873432, 1);
              }
              
              }
              
              if ((addInt(idx_536873437, 1) < len_2768240728(n_536873436))) {
              n_536873436 = HEX5BHEX5D_2768240724(n_536873436, addInt(idx_536873437, 1));
              idx_536873437 = -1;
              }
              else {
                var oHEX60gensym71_536873440 = next_2768240833(n_536873436);
                if (!isSome_2768242522(oHEX60gensym71_536873440)) Temporary7 = false; else {                  var ne_536873441 = get_2768242542(oHEX60gensym71_536873440);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_536873436 == null));                }              if (Temporary6) {
              n_536873436 = ne_536873441;
              idx_536873437 = -1;
              }
              else {
              if (((!((n_536873436.parent == null)) && !((n_536873436 == null))) && !((n_536873436.parent == null)))) {
              idx_536873437 = index_2768240748(n_536873436);
              n_536873436 = n_536873436.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_536873438 = addInt(i_536873438, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyScript_2734700139(self_2734700140) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym693_2734700141 = getAstDocumentEditor_2734697991(self_2734700140);
      if (isNone_2734698107(rHEX60gensym693_2734700141)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2734700123(get_2734698127(rHEX60gensym693_2734700141));
  };

  
}

function editNextEmptyApi_2734700164(HEX3Atmp_2734700120) {
  var result_2734700165 = null;

    result_2734700165 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2734700139(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700120, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym695_2734700171 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2734700176 = [mnewString(0)];
    fmtRes_2734700176[0].push.apply(fmtRes_2734700176[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700176, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym695_2734700171 || [],fmtRes_2734700176[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700165;

}

function rename_2734700185(self_2734700186) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734700186)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2734694494(self_2734700186, node_2734688923(self_2734700186));
  };

  
}

function renameScript_2734700187(self_2734700188) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym699_2734700189 = getAstDocumentEditor_2734697991(self_2734700188);
      if (isNone_2734698107(rHEX60gensym699_2734700189)) {
      break BeforeRet;
      }
      
    };
    rename_2734700185(get_2734698127(rHEX60gensym699_2734700189));
  };

  
}

function renameApi_2734700212(HEX3Atmp_2734700182) {
  var result_2734700213 = null;

    result_2734700213 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2734700187(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700182, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym701_2734700219 = [114,101,110,97,109,101];
    var fmtRes_2734700224 = [mnewString(0)];
    fmtRes_2734700224[0].push.apply(fmtRes_2734700224[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700224, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym701_2734700219 || [],fmtRes_2734700224[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700213;

}

function selectPrevCompletion_2734700233(self_2734700234) {
    if ((0 < (self_2734700234.completions).length)) {
    self_2734700234.selectedCompletion = clamp_1694499551(subInt(self_2734700234.selectedCompletion, 1), 0, subInt((self_2734700234.completions).length, 1));
    }
    else {
      self_2734700234.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionScript2_2734700246(self_2734700247) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym704_2734700248 = getAstDocumentEditor_2734697991(self_2734700247);
      if (isNone_2734698107(rHEX60gensym704_2734700248)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2734700233(get_2734698127(rHEX60gensym704_2734700248));
  };

  
}

function selectPrevCompletionApi2_2734700271(HEX3Atmp_2734700230) {
  var result_2734700272 = null;

    result_2734700272 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2734700246(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700230, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym706_2734700278 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2734700283 = [mnewString(0)];
    fmtRes_2734700283[0].push.apply(fmtRes_2734700283[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700283, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym706_2734700278 || [],fmtRes_2734700283[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700272;

}

function selectNextCompletion_2734700292(editor_2734700293) {
    if ((0 < (editor_2734700293.completions).length)) {
    editor_2734700293.selectedCompletion = clamp_1694499551(addInt(editor_2734700293.selectedCompletion, 1), 0, subInt((editor_2734700293.completions).length, 1));
    }
    else {
      editor_2734700293.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionScript2_2734700305(editor_2734700306) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym710_2734700307 = getAstDocumentEditor_2734697991(editor_2734700306);
      if (isNone_2734698107(rHEX60gensym710_2734700307)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2734700292(get_2734698127(rHEX60gensym710_2734700307));
  };

  
}

function selectNextCompletionApi2_2734700330(HEX3Atmp_2734700289) {
  var result_2734700331 = null;

    result_2734700331 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2734700305(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700289, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym712_2734700337 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2734700342 = [mnewString(0)];
    fmtRes_2734700342[0].push.apply(fmtRes_2734700342[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700342, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym712_2734700337 || [],fmtRes_2734700342[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700331;

}

function applySelectedCompletionScript2_2734700466(editor_2734700467) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym716_2734700468 = getAstDocumentEditor_2734697991(editor_2734700467);
      if (isNone_2734698107(rHEX60gensym716_2734700468)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2734700351(get_2734698127(rHEX60gensym716_2734700468));
  };

  
}

function applySelectedCompletionApi2_2734700491(HEX3Atmp_2734700348) {
  var result_2734700492 = null;

    result_2734700492 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2734700466(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700348, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym718_2734700498 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2734700503 = [mnewString(0)];
    fmtRes_2734700503[0].push.apply(fmtRes_2734700503[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700503, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym718_2734700498 || [],fmtRes_2734700503[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700492;

}

function cancelAndNextCompletion_2734700512(self_2734700513) {
    finishEdit_2734694763(self_2734700513, false);
    editNextEmpty_2734700123(self_2734700513);

  
}

function cancelAndNextCompletionScript_2734700514(self_2734700515) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym728_2734700516 = getAstDocumentEditor_2734697991(self_2734700515);
      if (isNone_2734698107(rHEX60gensym728_2734700516)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2734700512(get_2734698127(rHEX60gensym728_2734700516));
  };

  
}

function cancelAndNextCompletionApi_2734700539(HEX3Atmp_2734700509) {
  var result_2734700540 = null;

    result_2734700540 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2734700514(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700509, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2734700546 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2734700551 = [mnewString(0)];
    fmtRes_2734700551[0].push.apply(fmtRes_2734700551[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700551, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2734700546 || [],fmtRes_2734700551[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700540;

}

function cancelAndPrevCompletion_2734700560(self_2734700561) {
    finishEdit_2734694763(self_2734700561, false);
    editPrevEmpty_2734700069(self_2734700561);

  
}

function cancelAndPrevCompletionScript_2734700562(self_2734700563) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym733_2734700564 = getAstDocumentEditor_2734697991(self_2734700563);
      if (isNone_2734698107(rHEX60gensym733_2734700564)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2734700560(get_2734698127(rHEX60gensym733_2734700564));
  };

  
}

function cancelAndPrevCompletionApi_2734700587(HEX3Atmp_2734700557) {
  var result_2734700588 = null;

    result_2734700588 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2734700562(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700557, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym735_2734700594 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2734700599 = [mnewString(0)];
    fmtRes_2734700599[0].push.apply(fmtRes_2734700599[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700599, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym735_2734700594 || [],fmtRes_2734700599[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700588;

}

function cancelAndDelete_2734700608(self_2734700609) {
    finishEdit_2734694763(self_2734700609, false);
    self_2734700609.deletedNode = nimCopy(self_2734700609.deletedNode, some_2768240866(node_2734688923(self_2734700609)), NTI2768240759);
    nodeHEX3D_2734690756(self_2734700609, deleteNode_2734695395(self_2734700609.document, node_2734688923(self_2734700609)));

  
}

function cancelAndDeleteScript_2734700613(self_2734700614) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym738_2734700615 = getAstDocumentEditor_2734697991(self_2734700614);
      if (isNone_2734698107(rHEX60gensym738_2734700615)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2734700608(get_2734698127(rHEX60gensym738_2734700615));
  };

  
}

function cancelAndDeleteApi_2734700638(HEX3Atmp_2734700605) {
  var result_2734700639 = null;

    result_2734700639 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2734700613(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700605, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym740_2734700645 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2734700650 = [mnewString(0)];
    fmtRes_2734700650[0].push.apply(fmtRes_2734700650[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700650, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym740_2734700645 || [],fmtRes_2734700650[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700639;

}

function index_2768240810(node_2768240811, parent_2768240812) {
  var result_2768240814 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2768240811.parent == null)) {
    result_2768240814 = nimCopy(result_2768240814, none_2768240818(), NTI1207960496);
    break BeforeRet;
    }
    
    if ((node_2768240811.parent == parent_2768240812)) {
    result_2768240814 = nimCopy(result_2768240814, some_1207961583(index_2768240748(node_2768240811)), NTI1207960496);
    break BeforeRet;
    }
    
    result_2768240814 = nimCopy(result_2768240814, index_2768240810(node_2768240811.parent, parent_2768240812), NTI1207960496);
    break BeforeRet;
  };

  return result_2768240814;

}

function moveNodeToPrevSpace_2734700659(self_2734700660) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2734700661 = isEditing_2734694383(self_2734700660);
    finishEdit_2734694763(self_2734700660, false);
    var targetNode_2734700668 = none_2768240847();
    Label1: {
      var next_2734700669 = null;
      var colontmp__536873460 = null;
      colontmp__536873460 = node_2734688923(self_2734700660);
      var idx_536873461 = 0;
      var n_536873462 = colontmp__536873460;
      Label2: {
          Label3: while (true) {
          if (!!((n_536873462 == null))) break Label3;
            if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873462), 1)), subInt(idx_536873461, 1))) {
            n_536873462 = HEX5BHEX5D_2768240724(n_536873462, subInt(idx_536873461, 1));
            idx_536873461 = len_2768240728(n_536873462);
            }
            else {
              var oHEX60gensym90_536873464 = prev_2768240879(n_536873462);
              if (!isSome_2768242522(oHEX60gensym90_536873464)) Temporary4 = false; else {                var ne_536873465 = get_2768242542(oHEX60gensym90_536873464);
                Temporary4 = true;              }            if (Temporary4) {
            next_2734700669 = n_536873462;
            Label5: {
              if ((next_2734700669 == node_2734688923(self_2734700660))) {
              break Label5;
              }
              
              if ((canInsertInto_2734697943(self_2734700660, next_2734700669) && (!((next_2734700669 == node_2734688923(self_2734700660).parent)) || (0 < index_2768240748(node_2734688923(self_2734700660)))))) {
              targetNode_2734700668 = nimCopy(targetNode_2734700668, some_2768240866(next_2734700669), NTI2768240780);
              break Label1;
              }
              
            };
            n_536873462 = ne_536873465;
            idx_536873461 = len_2768240728(n_536873462);
            }
            else {
              next_2734700669 = n_536873462;
              Label6: {
                if ((next_2734700669 == node_2734688923(self_2734700660))) {
                break Label6;
                }
                
                if ((canInsertInto_2734697943(self_2734700660, next_2734700669) && (!((next_2734700669 == node_2734688923(self_2734700660).parent)) || (0 < index_2768240748(node_2734688923(self_2734700660)))))) {
                targetNode_2734700668 = nimCopy(targetNode_2734700668, some_2768240866(next_2734700669), NTI2768240780);
                break Label1;
                }
                
              };
              idx_536873461 = index_2768240748(n_536873462);
              n_536873462 = n_536873462.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym748_2734700683 = nimCopy(null, targetNode_2734700668, NTI2768240780);
      if (!isSome_2768242522(oHEX60gensym748_2734700683)) Temporary7 = false; else {        var newParent_2734700706 = get_2768242542(oHEX60gensym748_2734700683);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2734700707 = node_2734688923(self_2734700660);
    if ((nodeToMove_2734700707.parent == newParent_2734700706)) {
    Temporary8 = subInt(index_2768240748(nodeToMove_2734700707), 1);
    }
    else {
      var oHEX60gensym749_2734700714 = index_2768240810(nodeToMove_2734700707, newParent_2734700706);
      if (!isSome_1207962333(oHEX60gensym749_2734700714)) Temporary9 = false; else {        var index_2734700737 = get_1207962427(oHEX60gensym749_2734700714);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2734700737;
    }
    else {
    Temporary8 = len_2768240728(newParent_2734700706);
    }
    }
    var index_2734700738 = Temporary8;
    nodeHEX3D_2734690756(self_2734700660, deleteNode_2734695395(self_2734700660.document, nodeToMove_2734700707));
      var oHEX60gensym750_2734700741 = insertNode_2734693103(self_2734700660.document, newParent_2734700706, index_2734700738, nodeToMove_2734700707);
      if (!isSome_2768242522(oHEX60gensym750_2734700741)) Temporary10 = false; else {        var newNode_2734700764 = get_2768242542(oHEX60gensym750_2734700741);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2734690756(self_2734700660, newNode_2734700764);
    if (wasEditing_2734700661) {
    var _ = tryEdit_2734694494(self_2734700660, node_2734688923(self_2734700660));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceScript_2734700765(self_2734700766) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym743_2734700767 = getAstDocumentEditor_2734697991(self_2734700766);
      if (isNone_2734698107(rHEX60gensym743_2734700767)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2734700659(get_2734698127(rHEX60gensym743_2734700767));
  };

  
}

function moveNodeToPrevSpaceApi_2734700790(HEX3Atmp_2734700656) {
  var result_2734700791 = null;

    result_2734700791 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2734700765(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700656, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym745_2734700797 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2734700802 = [mnewString(0)];
    fmtRes_2734700802[0].push.apply(fmtRes_2734700802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym745_2734700797 || [],fmtRes_2734700802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700791;

}

function moveNodeToNextSpace_2734700811(self_2734700812) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2734700813 = isEditing_2734694383(self_2734700812);
    finishEdit_2734694763(self_2734700812, false);
    var targetNode_2734700820 = none_2768240847();
    Label1: {
      var __2734700821 = 0;
      var next_2734700822 = null;
      var colontmp__536873470 = null;
      var colontmp__536873471 = 0;
      colontmp__536873470 = node_2734688923(self_2734700812).parent;
      colontmp__536873471 = index_2768240748(node_2734688923(self_2734700812));
      var n_536873473 = colontmp__536873470;
      var idx_536873474 = colontmp__536873471;
      var i_536873475 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_536873474 == subInt(len_2768240728(n_536873473), 1))) {
            var colontmp__536873478 = nimCopy(null, {Field0: i_536873475, Field1: n_536873473}, NTI2734689014);
            __2734700821 = colontmp__536873478["Field0"];
            next_2734700822 = colontmp__536873478["Field1"];
            Label5: {
              if ((next_2734700822 == node_2734688923(self_2734700812))) {
              break Label5;
              }
              
              if ((canInsertInto_2734697943(self_2734700812, next_2734700822) && (!((next_2734700822 == node_2734688923(self_2734700812).parent)) || (addInt(index_2768240748(node_2734688923(self_2734700812)), 1) < len_2768240728(node_2734688923(self_2734700812).parent))))) {
              targetNode_2734700820 = nimCopy(targetNode_2734700820, some_2768240866(next_2734700822), NTI2768240780);
              break Label1;
              }
              
            };
            if (((!((n_536873473.parent == null)) && !((n_536873473 == null))) && !((n_536873473.parent == null)))) {
            idx_536873474 = index_2768240748(n_536873473);
            n_536873473 = n_536873473.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_536873474, 1) < len_2768240728(colontmp__536873470))) {
            n_536873473 = HEX5BHEX5D_2768240724(n_536873473, addInt(idx_536873474, 1));
            idx_536873474 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_536873475 = addInt(i_536873475, 1);
            }
          }
      };
    };
      var oHEX60gensym757_2734700836 = nimCopy(null, targetNode_2734700820, NTI2768240780);
      if (!isSome_2768242522(oHEX60gensym757_2734700836)) Temporary6 = false; else {        var newParent_2734700859 = get_2768242542(oHEX60gensym757_2734700836);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2734700860 = node_2734688923(self_2734700812);
    if ((nodeToMove_2734700860.parent == newParent_2734700859)) {
    Temporary7 = addInt(index_2768240748(nodeToMove_2734700860), 1);
    }
    else {
      var oHEX60gensym758_2734700867 = index_2768240810(nodeToMove_2734700860, newParent_2734700859);
      if (!isSome_1207962333(oHEX60gensym758_2734700867)) Temporary8 = false; else {        var index_2734700890 = get_1207962427(oHEX60gensym758_2734700867);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2734700890, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2734700891 = Temporary7;
    nodeHEX3D_2734690756(self_2734700812, deleteNode_2734695395(self_2734700812.document, nodeToMove_2734700860));
      var oHEX60gensym759_2734700894 = insertNode_2734693103(self_2734700812.document, newParent_2734700859, index_2734700891, nodeToMove_2734700860);
      if (!isSome_2768242522(oHEX60gensym759_2734700894)) Temporary9 = false; else {        var newNode_2734700917 = get_2768242542(oHEX60gensym759_2734700894);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2734690756(self_2734700812, newNode_2734700917);
    if (wasEditing_2734700813) {
    var _ = tryEdit_2734694494(self_2734700812, node_2734688923(self_2734700812));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceScript_2734700918(self_2734700919) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym753_2734700920 = getAstDocumentEditor_2734697991(self_2734700919);
      if (isNone_2734698107(rHEX60gensym753_2734700920)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2734700811(get_2734698127(rHEX60gensym753_2734700920));
  };

  
}

function moveNodeToNextSpaceApi_2734700943(HEX3Atmp_2734700808) {
  var result_2734700944 = null;

    result_2734700944 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2734700918(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700808, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym755_2734700950 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2734700955 = [mnewString(0)];
    fmtRes_2734700955[0].push.apply(fmtRes_2734700955[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734700955, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym755_2734700950 || [],fmtRes_2734700955[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700944;

}

function popLast_2734691013(deq_2734691015) {
    var Temporary1;

  var result_2734691016 = null;

    if ((deq_2734691015.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2734691015.count = subInt(deq_2734691015.count, 1);
    deq_2734691015.tail = (subInt(deq_2734691015.tail, 1) & deq_2734691015.mask);
    Temporary1 = deq_2734691015.data[chckIndx(deq_2734691015.tail, 0, (deq_2734691015.data).length - 1)];
    deq_2734691015.data[chckIndx(deq_2734691015.tail, 0, (deq_2734691015.data).length - 1)] = genericReset(deq_2734691015.data[chckIndx(deq_2734691015.tail, 0, (deq_2734691015.data).length - 1)], NTI2768240644);
    result_2734691016 = Temporary1;

  return result_2734691016;

}

function addFirst_2734691044(deq_2734691046, item_2734691047) {
    expandIfNeeded_2734690789(deq_2734691046);
    deq_2734691046.count = addInt(deq_2734691046.count, 1);
    deq_2734691046.head = (subInt(deq_2734691046.head, 1) & deq_2734691046.mask);
    deq_2734691046.data[chckIndx(deq_2734691046.head, 0, (deq_2734691046.data).length - 1)] = item_2734691047;

  
}

function selectPrevNode_2734690943(editor_2734690944) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2734690921(editor_2734690944.selectionHistory))) break Label2;
          var node_2734691026 = popLast_2734691013(editor_2734690944.selectionHistory);
          if (((!((node_2734691026 == null)) && !((node_2734691026.parent == null))) && (base_2768240734(node_2734691026) == editor_2734690944.document.rootNode))) {
          addFirst_2734691044(editor_2734690944.selectionHistory, editor_2734690944.selectedNode);
          editor_2734690944.selectedNode = node_2734691026;
          handleSelectedNodeChanged_2734688926(editor_2734690944);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2734700964(self_2734700965) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734700965)) {
    break BeforeRet;
    }
    
    selectPrevNode_2734690943(self_2734700965);
  };

  
}

function selectPrevScript2_2734700966(self_2734700967) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym762_2734700968 = getAstDocumentEditor_2734697991(self_2734700967);
      if (isNone_2734698107(rHEX60gensym762_2734700968)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2734700964(get_2734698127(rHEX60gensym762_2734700968));
  };

  
}

function selectPrevApi2_2734700991(HEX3Atmp_2734700961) {
  var result_2734700992 = null;

    result_2734700992 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2734700966(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734700961, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym764_2734700998 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2734701003 = [mnewString(0)];
    fmtRes_2734701003[0].push.apply(fmtRes_2734701003[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701003, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym764_2734700998 || [],fmtRes_2734701003[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734700992;

}

function selectNextNode_2734691061(editor_2734691062) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2734690921(editor_2734691062.selectionHistory))) break Label2;
          var node_2734691134 = popFirst_2734690930(editor_2734691062.selectionHistory);
          if (((!((node_2734691134 == null)) && !((node_2734691134.parent == null))) && (base_2768240734(node_2734691134) == editor_2734691062.document.rootNode))) {
          addLast_2734690780(editor_2734691062.selectionHistory, editor_2734691062.selectedNode);
          editor_2734691062.selectedNode = node_2734691134;
          handleSelectedNodeChanged_2734688926(editor_2734691062);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2734701012(self_2734701013) {
  BeforeRet: {
    if (isEditing_2734694383(self_2734701013)) {
    break BeforeRet;
    }
    
    selectNextNode_2734691061(self_2734701013);
  };

  
}

function selectNextScript2_2734701014(self_2734701015) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym767_2734701016 = getAstDocumentEditor_2734697991(self_2734701015);
      if (isNone_2734698107(rHEX60gensym767_2734701016)) {
      break BeforeRet;
      }
      
    };
    selectNext_2734701012(get_2734698127(rHEX60gensym767_2734701016));
  };

  
}

function selectNextApi2_2734701039(HEX3Atmp_2734701009) {
  var result_2734701040 = null;

    result_2734701040 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2734701014(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701009, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym769_2734701046 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2734701051 = [mnewString(0)];
    fmtRes_2734701051[0].push.apply(fmtRes_2734701051[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701051, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym769_2734701046 || [],fmtRes_2734701051[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734701040;

}

function getCompletions_2952790052(self_2952790053, text_2952790054) {
    
function HEX3Aanonymous_2952790076(a_2952790095, b_2952790096) {
      var result_2952790101 = 0;

        result_2952790101 = cmp_2952790088(a_2952790095.score, b_2952790096.score);

      return result_2952790101;

    }

  var result_2952790055 = [];

  BeforeRet: {
    result_2952790055 = nimCopy(null, [], NTI2952790034);
    var symbols_2952790060 = computeSymbols_2785112618(ctx_2734686259, self_2952790053.document.rootNode, true);
    Label1: {
      var key_2952790065 = ({id: 0});
      var symbol_2952790066 = null;
      var L_536873577 = len_2868905204(symbols_2952790060);
      Label2: {
        var h_536873579 = 0;
        var colontmp__536873580 = 0;
        colontmp__536873580 = (symbols_2952790060.data).length - 1;
        var res_536873581 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536873581 <= colontmp__536873580)) break Label4;
              h_536873579 = res_536873581;
              if (isFilled_1342177312(symbols_2952790060.data[chckIndx(h_536873579, 0, (symbols_2952790060.data).length - 1)].Field0)) {
              var colontmp__536873584 = nimCopy(null, {Field0: nimCopy(null, symbols_2952790060.data[chckIndx(h_536873579, 0, (symbols_2952790060.data).length - 1)].Field1, NTI2298478595), Field1: symbols_2952790060.data[chckIndx(h_536873579, 0, (symbols_2952790060.data).length - 1)].Field2}, NTI2868904899);
              key_2952790065 = nimCopy(key_2952790065, colontmp__536873584["Field0"], NTI2298478595);
              symbol_2952790066 = colontmp__536873584["Field1"];
              Label5: {
                if (!((symbol_2952790066.kind == 0))) {
                break Label5;
                }
                
                var score_2952790071 = fuzzyMatchSmart_2013266004(text_2952790054, symbol_2952790066.name, true);
                result_2952790055.push({kind: 0, score: score_2952790071, id: nimCopy(null, symbol_2952790066.id, NTI2298478595), nodeKind: 0, name: []});;
              };
              if (!((len_2868905204(symbols_2952790060) == L_536873577))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536873581 = addInt(res_536873581, 1);
            }
        };
      };
    };
    sort_2952790108(result_2952790055, HEX3Aanonymous_2952790076, 0);
    break BeforeRet;
  };

  return result_2952790055;

}

function updateCompletions_2952790261(self_2952790262) {
    var text_2952790263 = nsuJoinSep(content_2634024055(self_2952790262.textEditor.document), []);
    self_2952790262.completions = nimCopy(null, getCompletions_2952790052(self_2952790262, text_2952790263), NTI2952790026);
    if ((0 < (self_2952790262.completions).length)) {
    self_2952790262.selected = clamp_1694499551(self_2952790262.selected, 0, subInt((self_2952790262.completions).length, 1));
    }
    else {
      self_2952790262.selected = 0;
    }
    

  
}

function handleTextChanged_2952790452(self_2952790453) {
    updateCompletions_2952790261(self_2952790453);
    self_2952790453.selected = 0;

  
}

function handleAction_2952790418(self_2952790419, action_2952790420, arg_2952790421) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952790422 = 0;

  BeforeRet: {
    switch (toJSStr(action_2952790420)) {
    case "accept":
      if ((self_2952790419.selected < (self_2952790419.completions).length)) {
      var Temporary1 = self_2952790419.completions[chckIndx(self_2952790419.selected, 0, (self_2952790419.completions).length - 1)];
      if (ConstSet306[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2734687777)); }
      self_2952790419.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1325403402(self_2952790419.editor, self_2952790419);
      break;
    case "cancel":
      popPopup_1325403402(self_2952790419.editor, self_2952790419);
      break;
    case "prev":
      if (((self_2952790419.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_2952790419.selected, (self_2952790419.completions).length), 1), (self_2952790419.completions).length);
      }
      
      self_2952790419.selected = Temporary2;
      break;
    case "next":
      if (((self_2952790419.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_2952790419.selected, 1), (self_2952790419.completions).length);
      }
      
      self_2952790419.selected = Temporary3;
      break;
    default: 
      result_2952790422 = handleUnknownPopupAction_1325403235(self_2952790419.editor, self_2952790419, action_2952790420, arg_2952790421);
      break BeforeRet;
      break;
    }
    result_2952790422 = 3;
    break BeforeRet;
  };

  return result_2952790422;

}

function newGotoPopup_2952790588(editor_2952790589, document_2952790590) {
    
function HEX3Aanonymous_2952790672(doc_2952790673) {
        handleTextChanged_2952790452(popup_2952790592);

      
    }
      
function HEX3Aanonymous_2952790699(actionHEX60gensym11HEX60gensym12_2952790700, argHEX60gensym11HEX60gensym12_2952790701) {
        var result_2952790702 = 0;

        BeforeRet: {
          if (handlerHEX60gensym11_2952790687.config.handleActions) {
          var action_2952790703 = nimCopy(null, actionHEX60gensym11HEX60gensym12_2952790700, NTI33554449);
          var arg_2952790704 = nimCopy(null, argHEX60gensym11HEX60gensym12_2952790701, NTI33554449);
          var responseHEX60gensym11HEX60gensym12_2952790705 = handleAction_2952790418(popup_2952790592, action_2952790703, arg_2952790704);
          if (handlerHEX60gensym11_2952790687.config.consumeAllActions) {
          result_2952790702 = 3;
          break BeforeRet;
          }
          
          result_2952790702 = responseHEX60gensym11HEX60gensym12_2952790705;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym11_2952790687.config.consumeAllActions) {
          result_2952790702 = 3;
          break BeforeRet;
          }
          else {
            result_2952790702 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2952790702;

      }
      
function HEX3Aanonymous_2952790707(inputHEX60gensym11HEX60gensym13_2952790708) {
        var result_2952790709 = 0;

        BeforeRet: {
          if (handlerHEX60gensym11_2952790687.config.handleInputs) {
          var input_2952790710 = nimCopy(null, inputHEX60gensym11HEX60gensym13_2952790708, NTI33554449);
          result_2952790709 = 1;
          break BeforeRet;
          }
          else {
            result_2952790709 = 1;
            break BeforeRet;
          }
          
        };

        return result_2952790709;

      }

  var result_2952790591 = null;

  BeforeRet: {
    var popup_2952790592 = {editor: editor_2952790589, document: document_2952790590, m_type: NTI2952790020, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};
    popup_2952790592.textEditor = newTextEditor_2634035835(newTextDocument_2952790593([], []), editor_2952790589);
    setMode_2634029095(popup_2952790592.textEditor, [105,110,115,101,114,116]);
    popup_2952790592.textEditor.renderHeader = false;
    popup_2952790592.textEditor.lineNumbers = nimCopy(popup_2952790592.textEditor.lineNumbers, some_2952790647(0), NTI2634023162);
    popup_2952790592.textEditor.document.singleLine = true;
    var _ = subscribe_2634035865(popup_2952790592.textEditor.document.textChanged, HEX3Aanonymous_2952790672);
    Label1: {
      var handlerHEX60gensym11_2952790687 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym11_2952790687.config = getEventHandlerConfig_1325403449(editor_2952790589, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym11_2952790687.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(editor_2952790589, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym11_2952790687.handleAction = HEX3Aanonymous_2952790699;
      handlerHEX60gensym11_2952790687.handleInput = HEX3Aanonymous_2952790707;
    };
    popup_2952790592.eventHandler = handlerHEX60gensym11_2952790687;
    updateCompletions_2952790261(popup_2952790592);
    result_2952790591 = popup_2952790592;
    break BeforeRet;
  };

  return result_2952790591;

}

function goto_2734701060(self_2734701061, where_2734701062) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2734701106(n_2734701109) {
          var result_2734701112 = false;

            result_2734701112 = (!((n_2734701109 == node_2734688923(self_2734701061))) && (HEX3DHEX3D_2298478667(n_2734701109.id, id_2734701105) || HEX3DHEX3D_2298478667(n_2734701109.reff, id_2734701105)));

          return result_2734701112;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2734701133(n_2734701136) {
          var result_2734701139 = false;

            result_2734701139 = (!((n_2734701136 == node_2734688923(self_2734701061))) && (computeType_2785102512(ctx_2734686259, n_2734701136, true).kind == 0));

          return result_2734701139;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2734701159(n_2734701162) {
          var result_2734701165 = false;

            result_2734701165 = !((n_2734701162 == node_2734688923(self_2734701061)));

          return result_2734701165;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2734701486(id_2734701487) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym791_2734701490 = getAstNode_2785079640(ctx_2734686259, id_2734701487);
            if (!isSome_2768242522(oHEX60gensym791_2734701490)) Temporary2 = false; else {              var node_2734701513 = get_2768242542(oHEX60gensym791_2734701490);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2768240734(node_2734701513) == self_2734701061.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2734690756(self_2734701061, node_2734701513);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2734694383(self_2734701061)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2734701062)) {
    case "definition":
        var oHEX60gensym776_2734701065 = computeSymbol_2785109118(ctx_2734686259, node_2734688923(self_2734701061), true);
        if (!isSome_2868905495(oHEX60gensym776_2734701065)) Temporary1 = false; else {          var sym_2734701088 = get_2868905515(oHEX60gensym776_2734701065);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2734701088.kind == 0) && !((sym_2734701088.node == self_2734701061.document.rootNode)))) {
      var Temporary2 = sym_2734701088;
      if (ConstSet305[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2868903945)); }
      nodeHEX3D_2734690756(self_2734701061, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2734701097 = node_2734688923(self_2734701061);
        var pos_2734701098 = 0;
        var _ = pos_2734701098;
        if ((expr_2734701097.kind == 1)) {
        Temporary4 = node_2734688923(self_2734701061).reff;
        }
        else {
        Temporary4 = node_2734688923(self_2734701061).id;
        }
        
      };
      var id_2734701105 = nimCopy(null, Temporary4, NTI2298478595);
      Label5: {
        var __2734701117 = 0;
        var n_2734701118 = null;
        var colontmp__536873490 = null;
        var colontmp__536873491 = null;
        colontmp__536873490 = node_2734688923(self_2734701061);
        colontmp__536873491 = HEX3Aanonymous_2734701106;
        var i_536873492 = 0;
        Label6: {
          var __536873494 = 0;
          var child_536873495 = null;
          var n_536873496 = colontmp__536873490;
          var idx_536873497 = -1;
          var i_536873498 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_536873497 == -1)) {
                __536873494 = i_536873498;
                child_536873495 = n_536873496;
                if (colontmp__536873491(child_536873495)) {
                __2734701117 = i_536873492;
                n_2734701118 = child_536873495;
                nodeHEX3D_2734690756(self_2734701061, n_2734701118);
                break Label5;
                i_536873492 = addInt(i_536873492, 1);
                }
                
                }
                
                if ((addInt(idx_536873497, 1) < len_2768240728(n_536873496))) {
                n_536873496 = HEX5BHEX5D_2768240724(n_536873496, addInt(idx_536873497, 1));
                idx_536873497 = -1;
                }
                else {
                  var oHEX60gensym71_536873500 = next_2768240833(n_536873496);
                  if (!isSome_2768242522(oHEX60gensym71_536873500)) Temporary11 = false; else {                    var ne_536873501 = get_2768242542(oHEX60gensym71_536873500);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_536873496 == null));                  }                if (Temporary10) {
                n_536873496 = ne_536873501;
                idx_536873497 = -1;
                }
                else {
                if (((!((n_536873496.parent == null)) && !((n_536873496 == null))) && !((n_536873496.parent == null)))) {
                idx_536873497 = index_2768240748(n_536873496);
                n_536873496 = n_536873496.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_536873498 = addInt(i_536873498, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2734701119 = node_2734688923(self_2734701061);
        var pos_2734701120 = 0;
        var _ = pos_2734701120;
        if ((expr_2734701119.kind == 1)) {
        Temporary13 = node_2734688923(self_2734701061).reff;
        }
        else {
        Temporary13 = node_2734688923(self_2734701061).id;
        }
        
      };
      var id_2734701127 = nimCopy(null, Temporary13, NTI2298478595);
      Label14: {
        var n_2734701128 = null;
        var colontmp__536873504 = null;
        colontmp__536873504 = node_2734688923(self_2734701061);
        var idx_536873505 = 0;
        var n_536873506 = colontmp__536873504;
        Label15: {
            Label16: while (true) {
            if (!!((n_536873506 == null))) break Label16;
              if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873506), 1)), subInt(idx_536873505, 1))) {
              n_536873506 = HEX5BHEX5D_2768240724(n_536873506, subInt(idx_536873505, 1));
              idx_536873505 = len_2768240728(n_536873506);
              }
              else {
                var oHEX60gensym90_536873508 = prev_2768240879(n_536873506);
                if (!isSome_2768242522(oHEX60gensym90_536873508)) Temporary17 = false; else {                  var ne_536873509 = get_2768242542(oHEX60gensym90_536873508);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2734701128 = n_536873506;
              if ((!((n_2734701128 == node_2734688923(self_2734701061))) && (HEX3DHEX3D_2298478667(n_2734701128.id, id_2734701127) || HEX3DHEX3D_2298478667(n_2734701128.reff, id_2734701127)))) {
              nodeHEX3D_2734690756(self_2734701061, n_2734701128);
              break Label14;
              }
              
              n_536873506 = ne_536873509;
              idx_536873505 = len_2768240728(n_536873506);
              }
              else {
                n_2734701128 = n_536873506;
                if ((!((n_2734701128 == node_2734688923(self_2734701061))) && (HEX3DHEX3D_2298478667(n_2734701128.id, id_2734701127) || HEX3DHEX3D_2298478667(n_2734701128.reff, id_2734701127)))) {
                nodeHEX3D_2734690756(self_2734701061, n_2734701128);
                break Label14;
                }
                
                idx_536873505 = index_2768240748(n_536873506);
                n_536873506 = n_536873506.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2734701148 = 0;
        var n_2734701149 = null;
        var colontmp__536873511 = null;
        var colontmp__536873512 = null;
        colontmp__536873511 = node_2734688923(self_2734701061);
        colontmp__536873512 = HEX3Aanonymous_2734701133;
        var i_536873513 = 0;
        Label19: {
          var __536873515 = 0;
          var child_536873516 = null;
          var n_536873517 = colontmp__536873511;
          var idx_536873518 = -1;
          var i_536873519 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_536873518 == -1)) {
                __536873515 = i_536873519;
                child_536873516 = n_536873517;
                if (colontmp__536873512(child_536873516)) {
                __2734701148 = i_536873513;
                n_2734701149 = child_536873516;
                nodeHEX3D_2734690756(self_2734701061, n_2734701149);
                break Label18;
                i_536873513 = addInt(i_536873513, 1);
                }
                
                }
                
                if ((addInt(idx_536873518, 1) < len_2768240728(n_536873517))) {
                n_536873517 = HEX5BHEX5D_2768240724(n_536873517, addInt(idx_536873518, 1));
                idx_536873518 = -1;
                }
                else {
                  var oHEX60gensym71_536873521 = next_2768240833(n_536873517);
                  if (!isSome_2768242522(oHEX60gensym71_536873521)) Temporary24 = false; else {                    var ne_536873522 = get_2768242542(oHEX60gensym71_536873521);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_536873517 == null));                  }                if (Temporary23) {
                n_536873517 = ne_536873522;
                idx_536873518 = -1;
                }
                else {
                if (((!((n_536873517.parent == null)) && !((n_536873517 == null))) && !((n_536873517.parent == null)))) {
                idx_536873518 = index_2768240748(n_536873517);
                n_536873517 = n_536873517.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_536873519 = addInt(i_536873519, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2734701150 = null;
        var colontmp__536873524 = null;
        colontmp__536873524 = node_2734688923(self_2734701061);
        var idx_536873525 = 0;
        var n_536873526 = colontmp__536873524;
        Label26: {
            Label27: while (true) {
            if (!!((n_536873526 == null))) break Label27;
              if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873526), 1)), subInt(idx_536873525, 1))) {
              n_536873526 = HEX5BHEX5D_2768240724(n_536873526, subInt(idx_536873525, 1));
              idx_536873525 = len_2768240728(n_536873526);
              }
              else {
                var oHEX60gensym90_536873528 = prev_2768240879(n_536873526);
                if (!isSome_2768242522(oHEX60gensym90_536873528)) Temporary28 = false; else {                  var ne_536873529 = get_2768242542(oHEX60gensym90_536873528);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2734701150 = n_536873526;
              if ((!((n_2734701150 == node_2734688923(self_2734701061))) && (computeType_2785102512(ctx_2734686259, n_2734701150, true).kind == 0))) {
              nodeHEX3D_2734690756(self_2734701061, n_2734701150);
              break Label25;
              }
              
              n_536873526 = ne_536873529;
              idx_536873525 = len_2768240728(n_536873526);
              }
              else {
                n_2734701150 = n_536873526;
                if ((!((n_2734701150 == node_2734688923(self_2734701061))) && (computeType_2785102512(ctx_2734686259, n_2734701150, true).kind == 0))) {
                nodeHEX3D_2734690756(self_2734701061, n_2734701150);
                break Label25;
                }
                
                idx_536873525 = index_2768240748(n_536873526);
                n_536873526 = n_536873526.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2734701170 = 0;
        var n_2734701171 = null;
        var colontmp__536873539 = null;
        var colontmp__536873540 = null;
        colontmp__536873539 = node_2734688923(self_2734701061);
        colontmp__536873540 = HEX3Aanonymous_2734701159;
        var i_536873541 = 0;
        Label30: {
          var __536873543 = 0;
          var child_536873544 = null;
          var n_536873545 = colontmp__536873539;
          var idx_536873546 = -1;
          var i_536873547 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_536873546 == -1)) {
                __536873543 = i_536873547;
                child_536873544 = n_536873545;
                if (colontmp__536873540(child_536873544)) {
                __2734701170 = i_536873541;
                n_2734701171 = child_536873544;
                if (contains_2785135997(ctx_2734686259.diagnosticsPerNode, n_2734701171.id)) {
                var found_2734701235 = false;
                Label34: {
                  var diags_2734701322 = [];
                  var colontmp__536873532 = ({data: [], counter: 0});
                  colontmp__536873532 = nimCopy(colontmp__536873532, HEX5BHEX5D_2785132639(ctx_2734686259.diagnosticsPerNode, n_2734701171.id).queries, NTI2785017870);
                  var L_536873533 = len_2969568806(colontmp__536873532);
                  Label35: {
                    var h_536873535 = 0;
                    var colontmp__536873536 = 0;
                    colontmp__536873536 = (colontmp__536873532.data).length - 1;
                    var res_536873537 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_536873537 <= colontmp__536873536)) break Label37;
                          h_536873535 = res_536873537;
                          if (isFilled_1342177312(colontmp__536873532.data[chckIndx(h_536873535, 0, (colontmp__536873532.data).length - 1)].Field0)) {
                          diags_2734701322 = colontmp__536873532.data[chckIndx(h_536873535, 0, (colontmp__536873532.data).length - 1)]["Field2"];
                          if ((0 < (diags_2734701322).length)) {
                          found_2734701235 = true;
                          }
                          
                          if (!((len_2969568806(colontmp__536873532) == L_536873533))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_536873537 = addInt(res_536873537, 1);
                        }
                    };
                  };
                };
                if (found_2734701235) {
                nodeHEX3D_2734690756(self_2734701061, n_2734701171);
                }
                
                break Label29;
                }
                
                i_536873541 = addInt(i_536873541, 1);
                }
                
                }
                
                if ((addInt(idx_536873546, 1) < len_2768240728(n_536873545))) {
                n_536873545 = HEX5BHEX5D_2768240724(n_536873545, addInt(idx_536873546, 1));
                idx_536873546 = -1;
                }
                else {
                  var oHEX60gensym71_536873549 = next_2768240833(n_536873545);
                  if (!isSome_2768242522(oHEX60gensym71_536873549)) Temporary39 = false; else {                    var ne_536873550 = get_2768242542(oHEX60gensym71_536873549);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_536873545 == null));                  }                if (Temporary38) {
                n_536873545 = ne_536873550;
                idx_536873546 = -1;
                }
                else {
                if (((!((n_536873545.parent == null)) && !((n_536873545 == null))) && !((n_536873545.parent == null)))) {
                idx_536873546 = index_2768240748(n_536873545);
                n_536873545 = n_536873545.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_536873547 = addInt(i_536873547, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2734701326 = null;
        var colontmp__536873561 = null;
        colontmp__536873561 = node_2734688923(self_2734701061);
        var idx_536873562 = 0;
        var n_536873563 = colontmp__536873561;
        Label41: {
            Label42: while (true) {
            if (!!((n_536873563 == null))) break Label42;
              if (contains_1207961025(HEX2EHEX2E_822083634(0, subInt(len_2768240728(n_536873563), 1)), subInt(idx_536873562, 1))) {
              n_536873563 = HEX5BHEX5D_2768240724(n_536873563, subInt(idx_536873562, 1));
              idx_536873562 = len_2768240728(n_536873563);
              }
              else {
                var oHEX60gensym90_536873565 = prev_2768240879(n_536873563);
                if (!isSome_2768242522(oHEX60gensym90_536873565)) Temporary43 = false; else {                  var ne_536873566 = get_2768242542(oHEX60gensym90_536873565);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2734701326 = n_536873563;
              Label44: {
                if ((n_2734701326 == node_2734688923(self_2734701061))) {
                break Label44;
                }
                
                if (contains_2785135997(ctx_2734686259.diagnosticsPerNode, n_2734701326.id)) {
                var found_2734701394 = false;
                Label45: {
                  var diags_2734701481 = [];
                  var colontmp__536873554 = ({data: [], counter: 0});
                  colontmp__536873554 = nimCopy(colontmp__536873554, HEX5BHEX5D_2785132639(ctx_2734686259.diagnosticsPerNode, n_2734701326.id).queries, NTI2785017870);
                  var L_536873555 = len_2969568806(colontmp__536873554);
                  Label46: {
                    var h_536873557 = 0;
                    var colontmp__536873558 = 0;
                    colontmp__536873558 = (colontmp__536873554.data).length - 1;
                    var res_536873559 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_536873559 <= colontmp__536873558)) break Label48;
                          h_536873557 = res_536873559;
                          if (isFilled_1342177312(colontmp__536873554.data[chckIndx(h_536873557, 0, (colontmp__536873554.data).length - 1)].Field0)) {
                          diags_2734701481 = colontmp__536873554.data[chckIndx(h_536873557, 0, (colontmp__536873554.data).length - 1)]["Field2"];
                          if ((0 < (diags_2734701481).length)) {
                          found_2734701394 = true;
                          }
                          
                          if (!((len_2969568806(colontmp__536873554) == L_536873555))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_536873559 = addInt(res_536873559, 1);
                        }
                    };
                  };
                };
                if (found_2734701394) {
                nodeHEX3D_2734690756(self_2734701061, n_2734701326);
                break Label40;
                }
                
                }
                
              };
              n_536873563 = ne_536873566;
              idx_536873562 = len_2768240728(n_536873563);
              }
              else {
                n_2734701326 = n_536873563;
                Label49: {
                  if ((n_2734701326 == node_2734688923(self_2734701061))) {
                  break Label49;
                  }
                  
                  if (contains_2785135997(ctx_2734686259.diagnosticsPerNode, n_2734701326.id)) {
                  var found_536873567 = false;
                  Label50: {
                    var diags_536873568 = [];
                    var colontmp__536873569 = ({data: [], counter: 0});
                    colontmp__536873569 = nimCopy(colontmp__536873569, HEX5BHEX5D_2785132639(ctx_2734686259.diagnosticsPerNode, n_2734701326.id).queries, NTI2785017870);
                    var L_536873570 = len_2969568806(colontmp__536873569);
                    Label51: {
                      var h_536873571 = 0;
                      var colontmp__536873572 = 0;
                      colontmp__536873572 = (colontmp__536873569.data).length - 1;
                      var res_536873573 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_536873573 <= colontmp__536873572)) break Label53;
                            h_536873571 = res_536873573;
                            if (isFilled_1342177312(colontmp__536873569.data[chckIndx(h_536873571, 0, (colontmp__536873569.data).length - 1)].Field0)) {
                            diags_536873568 = colontmp__536873569.data[chckIndx(h_536873571, 0, (colontmp__536873569.data).length - 1)]["Field2"];
                            if ((0 < (diags_536873568).length)) {
                            found_536873567 = true;
                            }
                            
                            if (!((len_2969568806(colontmp__536873569) == L_536873570))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_536873573 = addInt(res_536873573, 1);
                          }
                      };
                    };
                  };
                  if (found_536873567) {
                  nodeHEX3D_2734690756(self_2734701061, n_2734701326);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_536873562 = index_2768240748(n_536873563);
                n_536873563 = n_536873563.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2734701485 = newGotoPopup_2952790588(self_2734701061.editor, self_2734701061.document);
      popup_2734701485.handleSymbolSelected = HEX3Aanonymous_2734701486;
      pushPopup_1325403386(self_2734701061.editor, popup_2734701485);
      break;
    default: 
      break;
    }
  };

  
}

function gotoScript_2734701527(self_2734701528, where_2734701529) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym773_2734701530 = getAstDocumentEditor_2734697991(self_2734701528);
      if (isNone_2734698107(rHEX60gensym773_2734701530)) {
      break BeforeRet;
      }
      
    };
    goto_2734701060(get_2734698127(rHEX60gensym773_2734701530), where_2734701529);
  };

  
}

function gotoApi_2734701553(HEX3Atmp_2734701057) {
  var result_2734701554 = null;

    result_2734701554 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2734701527(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701057, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734701057, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_2734701565 = [103,111,116,111];
    var fmtRes_2734701570 = [mnewString(0)];
    fmtRes_2734701570[0].push.apply(fmtRes_2734701570[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701570, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_2734701565 || [],fmtRes_2734701570[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734701554;

}

function addOutput_2734701614(self_2734701616, line_2734701617, color_2734701618) {
    if ((1500 <= (self_2734701616.lines).length)) {
    delete_2734687057(self_2734701616, "lines", HEX2EHEX2E_822083634(0, subInt((self_2734701616.lines).length, 1000)));
    }
    
    if ((0 < self_2734701616.scroll)) {
    self_2734701616.scroll = addInt(self_2734701616.scroll, 1);
    }
    
    self_2734701616.lines.push({Field0: nimCopy(null, line_2734701617, NTI33554449), Field1: color_2466250785(color_2734701618)});;

  
}

function runSelectedFunction_2734701579(self_2734701580) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2734694383(self_2734701580)) {
    break BeforeRet;
    }
    
    var node_2734701581 = node_2734688923(self_2734701580);
    Label1: {
        Label2: while (true) {
        if (!!((node_2734701581.parent == null))) break Label2;
          if (((node_2734701581.parent == self_2734701580.document.rootNode) && (node_2734701581.kind == 8))) {
          var timer_2734701594 = startTimer_2248146975();
          var fmtRes_2734701599 = [mnewString(0)];
          fmtRes_2734701599[0].push.apply(fmtRes_2734701599[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_2868904741(fmtRes_2734701599, 0, node_2734701581, []);
          log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734701599[0], NTI33554449)]);
          updateNode_2785144730(ctx_2734686259, node_2734701581);
          var result_2734701605 = computeValue_2785105988(ctx_2734686259, node_2734701581, true);
          if (!((result_2734701605.kind == 1))) {
          if ((result_2734701605.kind == 0)) {
          Temporary3 = rgb_2382364759(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2382364759(50, 255, 50);
          }
          
          addOutput_2734701614(executionOutput_2734686258[0], HEX24_2868904649(result_2734701605), Temporary3);
          }
          
          var fmtRes_2734701646 = [mnewString(0)];
          fmtRes_2734701646[0].push.apply(fmtRes_2734701646[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_2868904741(fmtRes_2734701646, 0, node_2734701581, []);
          fmtRes_2734701646[0].push.apply(fmtRes_2734701646[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_2919237023(fmtRes_2734701646, 0, result_2734701605, []);
          fmtRes_2734701646[0].push.apply(fmtRes_2734701646[0], [32,40,84,111,111,107,32]);;
          formatValue_2348810880(fmtRes_2734701646, 0, ms_2248146972(elapsed_2248146986(timer_2734701594)), []);
          fmtRes_2734701646[0].push.apply(fmtRes_2734701646[0], [109,115,41]);;
          log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734701646[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2734701581.kind == 4) && (0 < len_2768240728(node_2734701581))) && (HEX5BHEX5D_2768240724(node_2734701581, 0).kind == 11))) {
          var functionType_2734701670 = computeType_2785102512(ctx_2734686259, node_2734701581, true);
          if ((functionType_2734701670.kind == 0)) {
          var fmtRes_2734701679 = [mnewString(0)];
          fmtRes_2734701679[0].push.apply(fmtRes_2734701679[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_2868904741(fmtRes_2734701679, 0, node_2734701581, []);
          log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734701679[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2734701670.kind == 4))) {
          var fmtRes_2734701693 = [mnewString(0)];
          fmtRes_2734701693[0].push.apply(fmtRes_2734701693[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_2868904741(fmtRes_2734701693, 0, node_2734701581, []);
          fmtRes_2734701693[0].push.apply(fmtRes_2734701693[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2785140702(fmtRes_2734701693, 0, functionType_2734701670, []);
          log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734701693[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2734701670;
            if (ConstSet307[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2868903939)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2734701711 = [mnewString(0)];
          fmtRes_2734701711[0].push.apply(fmtRes_2734701711[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_2868904741(fmtRes_2734701711, 0, node_2734701581, []);
          fmtRes_2734701711[0].push.apply(fmtRes_2734701711[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2785140702(fmtRes_2734701711, 0, functionType_2734701670, []);
          log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734701711[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2734701726 = [mnewString(0)];
          fmtRes_2734701726[0].push.apply(fmtRes_2734701726[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_2868904741(fmtRes_2734701726, 0, node_2734701581, []);
          fmtRes_2734701726[0].push.apply(fmtRes_2734701726[0], [32,40]);;
          formatValue_2785140702(fmtRes_2734701726, 0, functionType_2734701670, []);
          fmtRes_2734701726[0].push.apply(fmtRes_2734701726[0], [41]);;
          log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734701726[0], NTI33554449)]);
          var timer_2734701737 = startTimer_2248146975();
          var maxLoopIterations_2734701747 = getOption_2634033837(self_2734701580.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2734701755 = newFunctionExecutionContext_2785099229(ctx_2734686259, {node: HEX5BHEX5D_2768240724(node_2734701581, 0), arguments: [], maxLoopIterations: some_1207961583(maxLoopIterations_2734701747), id: ({id: 0})});
          var result_2734701756 = computeFunctionExecution_2785122297(ctx_2734686259, fec_2734701755);
          if (!((result_2734701756.kind == 1))) {
          if ((result_2734701756.kind == 0)) {
          Temporary5 = rgb_2382364759(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2382364759(50, 255, 50);
          }
          
          addOutput_2734701614(executionOutput_2734686258[0], HEX24_2868904649(result_2734701756), Temporary5);
          }
          
          var fmtRes_2734701774 = [mnewString(0)];
          fmtRes_2734701774[0].push.apply(fmtRes_2734701774[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_2868904741(fmtRes_2734701774, 0, node_2734701581, []);
          fmtRes_2734701774[0].push.apply(fmtRes_2734701774[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_2919237023(fmtRes_2734701774, 0, result_2734701756, []);
          fmtRes_2734701774[0].push.apply(fmtRes_2734701774[0], [32,40,84,111,111,107,32]);;
          formatValue_2348810880(fmtRes_2734701774, 0, ms_2248146972(elapsed_2248146986(timer_2734701737)), []);
          fmtRes_2734701774[0].push.apply(fmtRes_2734701774[0], [109,115,41]);;
          log_1191182436(logger_721420488[0], 2, [nimCopy(null, fmtRes_2734701774[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2734701581 = node_2734701581.parent;
        }
    };
    var fmtRes_2734701794 = [mnewString(0)];
    fmtRes_2734701794[0].push.apply(fmtRes_2734701794[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_2868904741(fmtRes_2734701794, 0, node_2734688923(self_2734701580), []);
    log_1191182436(logger_721420488[0], 5, [nimCopy(null, fmtRes_2734701794[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionScript_2734701800(self_2734701801) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym794_2734701802 = getAstDocumentEditor_2734697991(self_2734701801);
      if (isNone_2734698107(rHEX60gensym794_2734701802)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2734701579(get_2734698127(rHEX60gensym794_2734701802));
  };

  
}

function runSelectedFunctionApi_2734701825(HEX3Atmp_2734701576) {
  var result_2734701826 = null;

    result_2734701826 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2734701800(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701576, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym796_2734701832 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2734701837 = [mnewString(0)];
    fmtRes_2734701837[0].push.apply(fmtRes_2734701837[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701837, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym796_2734701832 || [],fmtRes_2734701837[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734701826;

}

function toggleOption_2734701846(self_2734701847, name_2734701848) {
    switch (toJSStr(name_2734701848)) {
    case "logging":
      ctx_2734686259.enableLogging = !(ctx_2734686259.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionScript_2734701849(self_2734701850, name_2734701851) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym814_2734701852 = getAstDocumentEditor_2734697991(self_2734701850);
      if (isNone_2734698107(rHEX60gensym814_2734701852)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2734701846(get_2734698127(rHEX60gensym814_2734701852), name_2734701851);
  };

  
}

function toggleOptionApi_2734701875(HEX3Atmp_2734701843) {
  var result_2734701876 = null;

    result_2734701876 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2734701849(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701843, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734701843, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym816_2734701887 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2734701892 = [mnewString(0)];
    fmtRes_2734701892[0].push.apply(fmtRes_2734701892[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701892, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym816_2734701887 || [],fmtRes_2734701892[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734701876;

}

function runLastCommand_2734701905(self_2734701906, which_2734701907) {
    switch (toJSStr(which_2734701907)) {
    case "":
      var _ = handleAction_2734701897(self_2734701906, self_2734701906.lastCommand["Field0"], self_2734701906.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2734701897(self_2734701906, self_2734701906.lastMoveCommand["Field0"], self_2734701906.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2734701897(self_2734701906, self_2734701906.lastEditCommand["Field0"], self_2734701906.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2734701897(self_2734701906, self_2734701906.lastOtherCommand["Field0"], self_2734701906.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandScript_2734701908(self_2734701909, which_2734701910) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym820_2734701911 = getAstDocumentEditor_2734697991(self_2734701909);
      if (isNone_2734698107(rHEX60gensym820_2734701911)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2734701905(get_2734698127(rHEX60gensym820_2734701911), which_2734701910);
  };

  
}

function runLastCommandApi_2734701934(HEX3Atmp_2734701902) {
  var result_2734701935 = null;

    result_2734701935 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2734701908(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701902, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734701902, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_2734701946 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2734701951 = [mnewString(0)];
    fmtRes_2734701951[0].push.apply(fmtRes_2734701951[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734701951, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_2734701946 || [],fmtRes_2734701951[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734701935;

}

function HEX5BHEX5D_2868904108(node_2868904109, index_2868904110) {
  var result_2868904111 = null;

  BeforeRet: {
    result_2868904111 = node_2868904109.children[chckIndx(index_2868904110, 0, (node_2868904109.children).length - 1)];
    break BeforeRet;
  };

  return result_2868904111;

}

function none_2868904142() {
  var result_2868904148 = ({val: null});

  return result_2868904148;

}

function none_2868904139() {
  var result_2868904141 = ({val: null});

    result_2868904141 = nimCopy(result_2868904141, none_2868904142(), NTI2868904058);

  return result_2868904141;

}

function index_2868904101(node_2868904102) {
  var result_2868904103 = 0;

  BeforeRet: {
    if ((node_2868904102.parent == null)) {
    result_2868904103 = -1;
    break BeforeRet;
    }
    
  };

  return result_2868904103;

}

function some_2868904161(val_2868904163) {
  var result_2868904164 = ({val: null});

    if (!(!((val_2868904163 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2868904164.val = val_2868904163;

  return result_2868904164;

}

function next_2868904128(node_2868904129) {
  var result_2868904134 = ({val: null});

  BeforeRet: {
    if ((node_2868904129.parent == null)) {
    result_2868904134 = nimCopy(result_2868904134, none_2868904139(), NTI2868904058);
    break BeforeRet;
    }
    
    var i_2868904158 = index_2868904101(node_2868904129);
    if ((subInt(len_2868904121(node_2868904129.parent), 1) <= i_2868904158)) {
    result_2868904134 = nimCopy(result_2868904134, none_2868904139(), NTI2868904058);
    break BeforeRet;
    }
    
    result_2868904134 = nimCopy(result_2868904134, some_2868904161(HEX5BHEX5D_2868904108(node_2868904129.parent, addInt(i_2868904158, 1))), NTI2868904058);
    break BeforeRet;
  };

  return result_2868904134;

}

function isSome_2868904210(self_2868904212) {
  var result_2868904213 = false;

    result_2868904213 = !((self_2868904212.val == null));

  return result_2868904213;

}

function isNone_2868904238(self_2868904240) {
  var result_2868904241 = false;

    result_2868904241 = (self_2868904240.val == null);

  return result_2868904241;

}

function get_2868904230(self_2868904232) {
  var result_2868904233 = null;

    if (isNone_2868904238(self_2868904232)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1174405140, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2868904233 = self_2868904232["val"];

  return result_2868904233;

}

function newSeq_2734702187(len_2734702189) {
  var result_2734702190 = [];

    result_2734702190 = new Array(len_2734702189); for (var i = 0 ; i < len_2734702189 ; ++i) { result_2734702190[i] = {Field0: 0.0, Field1: null}; }
  return result_2734702190;

}

function mergeAlt_2734702216(a_2734702218, b_2734702219, lo_2734702220, m_2734702221, hi_2734702222, cmp_2734702225, order_2734702226) {
  BeforeRet: {
    if ((HEX2A_1040187400(cmp_2734702225(a_2734702218[chckIndx(m_2734702221, 0, (a_2734702218).length - 1)], a_2734702218[chckIndx(addInt(m_2734702221, 1), 0, (a_2734702218).length - 1)]), order_2734702226) <= 0)) {
    break BeforeRet;
    }
    
    var j_2734702227 = lo_2734702220;
    if (!((j_2734702227 <= m_2734702221))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2734702233 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2734702227 <= m_2734702221)) break Label2;
          b_2734702219[chckIndx(bb_2734702233, 0, (b_2734702219).length - 1)] = nimCopy(b_2734702219[chckIndx(bb_2734702233, 0, (b_2734702219).length - 1)], a_2734702218[chckIndx(j_2734702227, 0, (a_2734702218).length - 1)], NTI2734696906);
          bb_2734702233 = addInt(bb_2734702233, 1);
          j_2734702227 = addInt(j_2734702227, 1);
        }
    };
    var i_2734702244 = 0;
    var k_2734702245 = lo_2734702220;
    Label3: {
        Label4: while (true) {
        if (!((k_2734702245 < j_2734702227) && (j_2734702227 <= hi_2734702222))) break Label4;
          if ((HEX2A_1040187400(cmp_2734702225(b_2734702219[chckIndx(i_2734702244, 0, (b_2734702219).length - 1)], a_2734702218[chckIndx(j_2734702227, 0, (a_2734702218).length - 1)]), order_2734702226) <= 0)) {
          a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)] = nimCopy(a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)], b_2734702219[chckIndx(i_2734702244, 0, (b_2734702219).length - 1)], NTI2734696906);
          i_2734702244 = addInt(i_2734702244, 1);
          }
          else {
            a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)] = nimCopy(a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)], a_2734702218[chckIndx(j_2734702227, 0, (a_2734702218).length - 1)], NTI2734696906);
            j_2734702227 = addInt(j_2734702227, 1);
          }
          
          k_2734702245 = addInt(k_2734702245, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2734702245 < j_2734702227)) break Label6;
          a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)] = nimCopy(a_2734702218[chckIndx(k_2734702245, 0, (a_2734702218).length - 1)], b_2734702219[chckIndx(i_2734702244, 0, (b_2734702219).length - 1)], NTI2734696906);
          k_2734702245 = addInt(k_2734702245, 1);
          i_2734702244 = addInt(i_2734702244, 1);
        }
    };
  };

  
}

function sort_2734702175(a_2734702177, cmp_2734702180, order_2734702181) {
    var n_2734702186 = (a_2734702177).length;
    var b_2734702213 = newSeq_2734702187(chckRange(divInt(n_2734702186, 2), 0, 2147483647));
    var s_2734702214 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2734702214 < n_2734702186)) break Label2;
          var m_2734702215 = subInt(subInt(n_2734702186, 1), s_2734702214);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2734702215)) break Label4;
                mergeAlt_2734702216(a_2734702177, b_2734702213, nimMax(addInt(subInt(m_2734702215, s_2734702214), 1), 0), m_2734702215, addInt(m_2734702215, s_2734702214), cmp_2734702180, order_2734702181);
                m_2734702215 = subInt(m_2734702215, mulInt(s_2734702214, 2));
              }
          };
          s_2734702214 = mulInt(s_2734702214, 2);
        }
    };

  
}

function selectCenterNode_2734701960(self_2734701961) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2734702143(a_2734702162, b_2734702163) {
      var result_2734702168 = 0;

        result_2734702168 = cmp_2734702155(a_2734702162.Field0, b_2734702163.Field0);

      return result_2734702168;

    }

    var nodes_2734701968 = [];
    Label1: {
      var layout_2734701972 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2734701973 = ({arr: new Float32Array(2)});
      var i_536873607 = 0;
      var L_536873608 = (self_2734701961.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873607 < L_536873608)) break Label3;
            layout_2734701972 = self_2734701961.lastLayouts[chckIndx(i_536873607, 0, (self_2734701961.lastLayouts).length - 1)]["Field0"];
            offset_2734701973 = self_2734701961.lastLayouts[chckIndx(i_536873607, 0, (self_2734701961.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2734701974 = 0;
              var node_2734701975 = null;
              var n_536873599 = layout_2734701972.root;
              var idx_536873600 = -1;
              var i_536873601 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536873600 == -1)) {
                    var colontmp__536873604 = nimCopy(null, {Field0: i_536873601, Field1: n_536873599}, NTI2868904130);
                    i_2734701974 = colontmp__536873604["Field0"];
                    node_2734701975 = colontmp__536873604["Field1"];
                    if ((!((node_2734701975.node == null)) && (0 < len_2868904121(node_2734701975)))) {
                    var bounds_2734701979 = absoluteBounds_2868905692(node_2734701975);
                    if (intersects_2097152185(rect_2113929234(0.0, 0.0, self_2734701961.lastBounds.w, self_2734701961.lastBounds.h), HEX2B_2097152159(bounds_2734701979, vec2_2130707424(0.0, offset_2734701973.arr[chckIndx(1, 0, (offset_2734701973.arr).length - 1)])))) {
                    nodes_2734701968.push({Field0: (bounds_2734701979.y + offset_2734701973.arr[chckIndx(1, 0, (offset_2734701973.arr).length - 1)]), Field1: node_2734701975});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536873600, 1) < len_2868904121(n_536873599))) {
                    n_536873599 = HEX5BHEX5D_2868904108(n_536873599, addInt(idx_536873600, 1));
                    idx_536873600 = -1;
                    }
                    else {
                      var oHEX60gensym3_536873605 = next_2868904128(n_536873599);
                      if (!isSome_2868904210(oHEX60gensym3_536873605)) Temporary9 = false; else {                        var ne_536873606 = get_2868904230(oHEX60gensym3_536873605);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_536873599 == null));                      }                    if (Temporary8) {
                    n_536873599 = ne_536873606;
                    idx_536873600 = -1;
                    }
                    else {
                    if (((!((n_536873599.parent == null)) && !((n_536873599 == null))) && !((n_536873599.parent == null)))) {
                    idx_536873600 = index_2868904101(n_536873599);
                    n_536873599 = n_536873599.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536873601 = addInt(i_536873601, 1);
                    }
                  }
              };
            };
            i_536873607 = addInt(i_536873607, 1);
            if (!(((self_2734701961.lastLayouts).length == L_536873608))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2734702175(nodes_2734701968, HEX3Aanonymous_2734702143, 1);
    if ((0 < (nodes_2734701968).length)) {
    var firstY_2734702289 = nodes_2734701968[chckIndx(0, 0, (nodes_2734701968).length - 1)].Field0;
    var lastY_2734702293 = nodes_2734701968[chckIndx((nodes_2734701968).length - 1, 0, (nodes_2734701968).length - 1)].Field0;
    var middleY_2734702294 = ((firstY_2734702289 + lastY_2734702293) * 0.5);
    Label10: {
      var i_2734702327 = 0;
      var y_2734702328 = 0.0;
      var node_2734702329 = null;
      var i_536873612 = 0;
      var L_536873613 = (nodes_2734701968).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536873612 < L_536873613)) break Label12;
            i_2734702327 = i_536873612;
            y_2734702328 = nodes_2734701968[chckIndx(i_536873612, 0, (nodes_2734701968).length - 1)]["Field0"];
            node_2734702329 = nodes_2734701968[chckIndx(i_536873612, 0, (nodes_2734701968).length - 1)]["Field1"];
            if (((i_2734702327 == (nodes_2734701968).length - 1) || (middleY_2734702294 < nodes_2734701968[chckIndx(addInt(i_2734702327, 1), 0, (nodes_2734701968).length - 1)].Field0))) {
            nodeHEX3D_2734690756(self_2734701961, node_2734702329.node);
            break Label10;
            }
            
            i_536873612 = addInt(i_536873612, 1);
            if (!(((nodes_2734701968).length == L_536873613))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeScript_2734702369(self_2734702370) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym825_2734702371 = getAstDocumentEditor_2734697991(self_2734702370);
      if (isNone_2734698107(rHEX60gensym825_2734702371)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2734701960(get_2734698127(rHEX60gensym825_2734702371));
  };

  
}

function selectCenterNodeApi_2734702394(HEX3Atmp_2734701957) {
  var result_2734702395 = null;

    result_2734702395 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2734702369(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734701957, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym827_2734702401 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2734702406 = [mnewString(0)];
    fmtRes_2734702406[0].push.apply(fmtRes_2734702406[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702406, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym827_2734702401 || [],fmtRes_2734702406[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734702395;

}

function scroll_2734702415(self_2734702416, amount_2734702417) {
    HEX2BHEX3D_872417520(self_2734702416, "scrollOffset", amount_2734702417);

  
}

function scrollScript_2734702422(self_2734702423, amount_2734702424) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym841_2734702425 = getAstDocumentEditor_2734697991(self_2734702423);
      if (isNone_2734698107(rHEX60gensym841_2734702425)) {
      break BeforeRet;
      }
      
    };
    scroll_2734702415(get_2734698127(rHEX60gensym841_2734702425), amount_2734702424);
  };

  
}

function scrollApi_2734702448(HEX3Atmp_2734702412) {
  var result_2734702449 = null;

    result_2734702449 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2734702422(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702412, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2634030991(HEX5BHEX5D_1660947548(HEX3Atmp_2734702412, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym843_2734702460 = [115,99,114,111,108,108];
    var fmtRes_2734702465 = [mnewString(0)];
    fmtRes_2734702465[0].push.apply(fmtRes_2734702465[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702465, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym843_2734702460 || [],fmtRes_2734702465[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734702449;

}

function scrollOutput_2734702474(self_2734702475, arg_2734702476) {
    switch (toJSStr(arg_2734702476)) {
    case "home":
      executionOutput_2734686258[0].scroll = (executionOutput_2734686258[0].lines).length;
      break;
    case "end":
      executionOutput_2734686258[0].scroll = 0;
      break;
    default: 
      executionOutput_2734686258[0].scroll = clamp_1694499551(addInt(executionOutput_2734686258[0].scroll, nsuParseInt(arg_2734702476)), 0, (executionOutput_2734686258[0].lines).length);
      break;
    }

  
}

function scrollOutputScript_2734702488(self_2734702489, arg_2734702490) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym847_2734702491 = getAstDocumentEditor_2734697991(self_2734702489);
      if (isNone_2734698107(rHEX60gensym847_2734702491)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2734702474(get_2734698127(rHEX60gensym847_2734702491), arg_2734702490);
  };

  
}

function scrollOutputApi_2734702514(HEX3Atmp_2734702471) {
  var result_2734702515 = null;

    result_2734702515 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2734702488(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702471, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734702471, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym849_2734702526 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2734702531 = [mnewString(0)];
    fmtRes_2734702531[0].push.apply(fmtRes_2734702531[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702531, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym849_2734702526 || [],fmtRes_2734702531[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734702515;

}

function formatValue_2868906890(result_2868906892, result_2868906892_Idx, value_2868906893, specifier_2868906894) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2868906894).length == 0)) {
    result_2868906892[result_2868906892_Idx].push.apply(result_2868906892[result_2868906892_Idx], HEX24_2130707494(value_2868906893));;
    break BeforeRet;
    }
    
    var spec_2868906898 = parseStandardFormatSpecifier_738197562(specifier_2868906894, 0, false);
    var fmode_2868906899 = 0;
    switch (spec_2868906898.typ) {
    case 101:
    case 69:
      fmode_2868906899 = 2;
      break;
    case 102:
    case 70:
      fmode_2868906899 = 1;
      break;
    case 103:
    case 71:
      fmode_2868906899 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2868906898.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2868906901 = [nsuformatBiggestFloat(value_2868906893, fmode_2868906899, chckRange(spec_2868906898.precision, -1, 32), 46)];
    var sign_2868906902 = false;
    if ((0.0 <= value_2868906893)) {
    if (!((spec_2868906898.sign == 45))) {
    sign_2868906902 = true;
    if ((value_2868906893 == 0.0)) {
    if (((1.0 / value_2868906893) == Infinity)) {
    insert_33557745(f_2868906901, 0, nimCharToStr(spec_2868906898.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2868906901, 0, nimCharToStr(spec_2868906898.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2868906902 = true;
    }
    
    if (spec_2868906898.padWithZero) {
    var signStr_2868906903 = [];
    if (sign_2868906902) {
    signStr_2868906903 = nimCopy(null, nimCharToStr(f_2868906901[0][chckIndx(0, 0, (f_2868906901[0]).length - 1)]), NTI33554449);
    f_2868906901[0] = nimCopy(null, HEX5BHEX5D_872416535(f_2868906901[0], HEX2EHEX2E_1056964704(1, 1)), NTI33554449);
    }
    
    var toFill_2868906925 = subInt(subInt(spec_2868906898.minimumWidth, (f_2868906901[0]).length), (sign_2868906902 ? 1 : 0));
    if ((0 < toFill_2868906925)) {
    f_2868906901[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2868906925, 0, 2147483647)) || []).concat(f_2868906901[0] || []), NTI33554449);
    }
    
    if (sign_2868906902) {
    f_2868906901[0] = nimCopy(null, (signStr_2868906903 || []).concat(f_2868906901[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2868906898.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2868906898.align;
    }
    
    var align_2868906926 = Temporary1;
    var res_2868906927 = alignString_738197524(f_2868906901[0], spec_2868906898.minimumWidth, align_2868906926, spec_2868906898.fill);
    if ((ConstSet308[spec_2868906898.typ] != undefined)) {
    result_2868906892[result_2868906892_Idx].push.apply(result_2868906892[result_2868906892_Idx], nsuToUpperAsciiStr(res_2868906927));;
    }
    else {
    result_2868906892[result_2868906892_Idx].push.apply(result_2868906892[result_2868906892_Idx], res_2868906927);;
    }
    
  };

  
}

function HEX24_2868906882(input_2868906883) {
  var result_2868906884 = [];

  BeforeRet: {
    var fmtRes_2868906889 = [mnewString(0)];
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [82,101,110,100,101,114,84,101,120,116,73,110,112,117,116,40]);;
    formatValue_738197675(fmtRes_2868906889, 0, input_2868906883.text, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [44,32]);;
    formatValue_738197675(fmtRes_2868906889, 0, input_2868906883.font, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [44,32]);;
    formatValue_2868906890(fmtRes_2868906889, 0, input_2868906883.fontSize, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [44,32]);;
    formatValue_2868906890(fmtRes_2868906889, 0, input_2868906883.lineHeight, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [44,32]);;
    formatValue_2868906890(fmtRes_2868906889, 0, input_2868906883.charWidth, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [44,32]);;
    formatValue_2348810869(fmtRes_2868906889, 0, input_2868906883.bounds, []);
    fmtRes_2868906889[0].push.apply(fmtRes_2868906889[0], [41]);;
    result_2868906884 = nimCopy(null, fmtRes_2868906889[0], NTI33554449);
    break BeforeRet;
  };

  return result_2868906884;

}

function nsuIndent(s_872416456, count_872416457, padding_872416458) {
            var Temporary6;

  var result_872416459 = [];

    result_872416459 = nimCopy(null, [], NTI33554449);
    var i_872416460 = 0;
    Label1: {
      var line_872416461 = [];
      var first_536873785 = 0;
      var last_536873786 = 0;
      var eolpos_536873787 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_536873786 < (s_872416456).length) && !((ConstSet309[s_872416456[chckIndx(last_536873786, 0, (s_872416456).length - 1)]] != undefined)))) break Label5;
                  last_536873786 = addInt(last_536873786, 1);
                }
            };
            eolpos_536873787 = last_536873786;
            if ((last_536873786 < (s_872416456).length)) {
            if ((s_872416456[chckIndx(last_536873786, 0, (s_872416456).length - 1)] == 10)) {
            last_536873786 = addInt(last_536873786, 1);
            }
            else {
            if ((s_872416456[chckIndx(last_536873786, 0, (s_872416456).length - 1)] == 13)) {
            last_536873786 = addInt(last_536873786, 1);
            if (((last_536873786 < (s_872416456).length) && (s_872416456[chckIndx(last_536873786, 0, (s_872416456).length - 1)] == 10))) {
            last_536873786 = addInt(last_536873786, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_536873786, 1);
            }
            else {
            Temporary6 = subInt(eolpos_536873787, 1);
            }
            
            line_872416461 = substr_33557821(s_872416456, first_536873785, Temporary6);
            if (!((i_872416460 == 0))) {
            result_872416459.push.apply(result_872416459, [10]);;
            }
            
            Label7: {
              var j_872416466 = 0;
              var colontmp__536873782 = 0;
              colontmp__536873782 = count_872416457;
              var res_536873783 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_536873783 <= colontmp__536873782)) break Label9;
                    j_872416466 = res_536873783;
                    result_872416459.push.apply(result_872416459, padding_872416458);;
                    res_536873783 = addInt(res_536873783, 1);
                  }
              };
            };
            result_872416459.push.apply(result_872416459, line_872416461);;
            i_872416460 = addInt(i_872416460, 1);
            if ((eolpos_536873787 == last_536873786)) {
            break Label2;
            }
            
            first_536873785 = last_536873786;
          }
      };
    };

  return result_872416459;

}

function HEX24_2801813164(graph_2801813165) {
  var result_2801813166 = [];

    result_2801813166 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_2801813166.push.apply(result_2801813166, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_2801813165.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_2801813166.push.apply(result_2801813166, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_2801813166.push.apply(result_2801813166, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_2801813166.push.apply(result_2801813166, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_2801813166.push.apply(result_2801813166, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_2801813166.push.apply(result_2801813166, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_2801813166;

}

function toString_2785078143(HEX3Atmp_2785018073) {
  var result_2785078144 = [];

  BeforeRet: {
    var HEX3Atmp_2785018074 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym55_2785078234 = {Field0: ({id: 0}), Field1: 0};
      var valueHEX60gensym55_2785078235 = null;
      Label2: {
        var node_536873634 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_536873635 = HEX3Atmp_2785018073.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_536873635 == null))) break Label4;
              node_536873634 = nimCopy(node_536873634, it_536873635.value, NTI2785017918);
              var colontmp__536873638 = nimCopy(null, {Field0: nimCopy(null, node_536873634.key, NTI2801795097), Field1: node_536873634.val}, NTI2785053670);
              keyHEX60gensym55_2785078234 = nimCopy(keyHEX60gensym55_2785078234, colontmp__536873638["Field0"], NTI2801795097);
              valueHEX60gensym55_2785078235 = colontmp__536873638["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2801795284(keyHEX60gensym55_2785078234) || [],[32,45,62,32] || [],HEX24_2768242647(valueHEX60gensym55_2785078235) || [],[10] || []));;
              it_536873635 = it_536873635.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym56_2785078325 = {Field0: ({id: 0}), Field1: 0};
      var valueHEX60gensym56_2785078326 = null;
      Label6: {
        var node_536873644 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_536873645 = HEX3Atmp_2785018073.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_536873645 == null))) break Label8;
              node_536873644 = nimCopy(node_536873644, it_536873645.value, NTI2785017991);
              var colontmp__536873648 = nimCopy(null, {Field0: nimCopy(null, node_536873644.key, NTI2801795097), Field1: node_536873644.val}, NTI2785053723);
              keyHEX60gensym56_2785078325 = nimCopy(keyHEX60gensym56_2785078325, colontmp__536873648["Field0"], NTI2801795097);
              valueHEX60gensym56_2785078326 = colontmp__536873648["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2801795284(keyHEX60gensym56_2785078325) || [],[32,45,62,32] || [],HEX24_2868906052(valueHEX60gensym56_2785078326) || [],[10] || []));;
              it_536873645 = it_536873645.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([73,116,101,109,115,58,32,82,101,110,100,101,114,84,101,120,116,73,110,112,117,116,10] || []));;
    Label9: {
      var keyHEX60gensym57_2785078416 = {Field0: ({id: 0}), Field1: 0};
      var valueHEX60gensym57_2785078417 = ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})});
      Label10: {
        var node_536873655 = ({key: {Field0: ({id: 0}), Field1: 0}, val: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})})});
        var it_536873656 = HEX3Atmp_2785018073.itemsRenderTextInput.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_536873656 == null))) break Label12;
              node_536873655 = nimCopy(node_536873655, it_536873656.value, NTI2785018055);
              var colontmp__536873659 = nimCopy(null, {Field0: nimCopy(null, node_536873655.key, NTI2801795097), Field1: nimCopy(null, node_536873655.val, NTI2868903969)}, NTI2785053776);
              keyHEX60gensym57_2785078416 = nimCopy(keyHEX60gensym57_2785078416, colontmp__536873659["Field0"], NTI2801795097);
              valueHEX60gensym57_2785078417 = nimCopy(valueHEX60gensym57_2785078417, colontmp__536873659["Field1"], NTI2868903969);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2801795284(keyHEX60gensym57_2785078416) || [],[32,45,62,32] || [],HEX24_2868906882(valueHEX60gensym57_2785078417) || [],[10] || []));;
              it_536873656 = it_536873656.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label13: {
      var keyHEX60gensym58_2785078507 = {Field0: ({id: 0}), Field1: 0};
      var valueHEX60gensym58_2785078508 = null;
      Label14: {
        var node_536873666 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_536873667 = HEX3Atmp_2785018073.itemsSymbol.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_536873667 == null))) break Label16;
              node_536873666 = nimCopy(node_536873666, it_536873667.value, NTI2785018119);
              var colontmp__536873670 = nimCopy(null, {Field0: nimCopy(null, node_536873666.key, NTI2801795097), Field1: node_536873666.val}, NTI2785053829);
              keyHEX60gensym58_2785078507 = nimCopy(keyHEX60gensym58_2785078507, colontmp__536873670["Field0"], NTI2801795097);
              valueHEX60gensym58_2785078508 = colontmp__536873670["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2801795284(keyHEX60gensym58_2785078507) || [],[32,45,62,32] || [],HEX24_2868905054(valueHEX60gensym58_2785078508) || [],[10] || []));;
              it_536873667 = it_536873667.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label17: {
      var keyHEX60gensym59_2785078598 = {Field0: ({id: 0}), Field1: 0};
      var valueHEX60gensym59_2785078599 = null;
      Label18: {
        var node_536873676 = ({key: {Field0: ({id: 0}), Field1: 0}, val: null});
        var it_536873677 = HEX3Atmp_2785018073.itemsFunctionExecutionContext.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_536873677 == null))) break Label20;
              node_536873676 = nimCopy(node_536873676, it_536873677.value, NTI2785018183);
              var colontmp__536873680 = nimCopy(null, {Field0: nimCopy(null, node_536873676.key, NTI2801795097), Field1: node_536873676.val}, NTI2785053882);
              keyHEX60gensym59_2785078598 = nimCopy(keyHEX60gensym59_2785078598, colontmp__536873680["Field0"], NTI2801795097);
              valueHEX60gensym59_2785078599 = colontmp__536873680["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2801795284(keyHEX60gensym59_2785078598) || [],[32,45,62,32] || [],HEX24_2868904733(valueHEX60gensym59_2785078599) || [],[10] || []));;
              it_536873677 = it_536873677.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label21: {
      var keyHEX60gensym60_2785078680 = null;
      var valueHEX60gensym60_2785078681 = null;
      Label22: {
        var node_536873687 = ({key: null, val: null});
        var it_536873688 = HEX3Atmp_2785018073.queryCacheType.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_536873688 == null))) break Label24;
              node_536873687 = nimCopy(node_536873687, it_536873688.value, NTI2785018285);
              var colontmp__536873691 = nimCopy(null, {Field0: node_536873687.key, Field1: node_536873687.val}, NTI2785053935);
              keyHEX60gensym60_2785078680 = colontmp__536873691["Field0"];
              valueHEX60gensym60_2785078681 = colontmp__536873691["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2768242647(keyHEX60gensym60_2785078680) || [],[32,45,62,32] || [],HEX24_2868904342(valueHEX60gensym60_2785078681) || [],[10] || []));;
              it_536873688 = it_536873688.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label25: {
      var keyHEX60gensym61_2785078771 = null;
      var valueHEX60gensym61_2785078772 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label26: {
        var node_536873698 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_536873699 = HEX3Atmp_2785018073.queryCacheValue.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_536873699 == null))) break Label28;
              node_536873698 = nimCopy(node_536873698, it_536873699.value, NTI2785018360);
              var colontmp__536873702 = nimCopy(null, {Field0: node_536873698.key, Field1: nimCopy(null, node_536873698.val, NTI2868903943)}, NTI2785053982);
              keyHEX60gensym61_2785078771 = colontmp__536873702["Field0"];
              valueHEX60gensym61_2785078772 = nimCopy(valueHEX60gensym61_2785078772, colontmp__536873702["Field1"], NTI2868903943);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2768242647(keyHEX60gensym61_2785078771) || [],[32,45,62,32] || [],HEX24_2868904649(valueHEX60gensym61_2785078772) || [],[10] || []));;
              it_536873699 = it_536873699.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label29: {
      var keyHEX60gensym62_2785078853 = null;
      var valueHEX60gensym62_2785078854 = ({val: null});
      Label30: {
        var node_536873709 = ({key: null, val: ({val: null})});
        var it_536873710 = HEX3Atmp_2785018073.queryCacheSymbol.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_536873710 == null))) break Label32;
              node_536873709 = nimCopy(node_536873709, it_536873710.value, NTI2785018431);
              var colontmp__536873713 = nimCopy(null, {Field0: node_536873709.key, Field1: nimCopy(null, node_536873709.val, NTI2868905073)}, NTI2785054029);
              keyHEX60gensym62_2785078853 = colontmp__536873713["Field0"];
              valueHEX60gensym62_2785078854 = nimCopy(valueHEX60gensym62_2785078854, colontmp__536873713["Field1"], NTI2868905073);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2768242647(keyHEX60gensym62_2785078853) || [],[32,45,62,32] || [],HEX24_2785078912(valueHEX60gensym62_2785078854) || [],[10] || []));;
              it_536873710 = it_536873710.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label33: {
      var keyHEX60gensym63_2785079013 = null;
      var valueHEX60gensym63_2785079014 = null;
      Label34: {
        var node_536873720 = ({key: null, val: null});
        var it_536873721 = HEX3Atmp_2785018073.queryCacheSymbols.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_536873721 == null))) break Label36;
              node_536873720 = nimCopy(node_536873720, it_536873721.value, NTI2785018504);
              var colontmp__536873724 = nimCopy(null, {Field0: node_536873720.key, Field1: node_536873720.val}, NTI2785054123);
              keyHEX60gensym63_2785079013 = colontmp__536873724["Field0"];
              valueHEX60gensym63_2785079014 = colontmp__536873724["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2768242647(keyHEX60gensym63_2785079013) || [],[32,45,62,32] || [],HEX24_2785079072(valueHEX60gensym63_2785079014) || [],[10] || []));;
              it_536873721 = it_536873721.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label37: {
      var keyHEX60gensym64_2785079255 = null;
      var valueHEX60gensym64_2785079256 = null;
      Label38: {
        var node_536873731 = ({key: null, val: null});
        var it_536873732 = HEX3Atmp_2785018073.queryCacheSymbolType.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_536873732 == null))) break Label40;
              node_536873731 = nimCopy(node_536873731, it_536873732.value, NTI2785018570);
              var colontmp__536873735 = nimCopy(null, {Field0: node_536873731.key, Field1: node_536873731.val}, NTI2785054256);
              keyHEX60gensym64_2785079255 = colontmp__536873735["Field0"];
              valueHEX60gensym64_2785079256 = colontmp__536873735["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2868905054(keyHEX60gensym64_2785079255) || [],[32,45,62,32] || [],HEX24_2868904342(valueHEX60gensym64_2785079256) || [],[10] || []));;
              it_536873732 = it_536873732.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label41: {
      var keyHEX60gensym65_2785079346 = null;
      var valueHEX60gensym65_2785079347 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_536873742 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_536873743 = HEX3Atmp_2785018073.queryCacheSymbolValue.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_536873743 == null))) break Label44;
              node_536873742 = nimCopy(node_536873742, it_536873743.value, NTI2785018645);
              var colontmp__536873746 = nimCopy(null, {Field0: node_536873742.key, Field1: nimCopy(null, node_536873742.val, NTI2868903943)}, NTI2785054303);
              keyHEX60gensym65_2785079346 = colontmp__536873746["Field0"];
              valueHEX60gensym65_2785079347 = nimCopy(valueHEX60gensym65_2785079347, colontmp__536873746["Field1"], NTI2868903943);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2868905054(keyHEX60gensym65_2785079346) || [],[32,45,62,32] || [],HEX24_2868904649(valueHEX60gensym65_2785079347) || [],[10] || []));;
              it_536873743 = it_536873743.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label45: {
      var keyHEX60gensym66_2785079437 = null;
      var valueHEX60gensym66_2785079438 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label46: {
        var node_536873753 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_536873754 = HEX3Atmp_2785018073.queryCacheFunctionExecution.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_536873754 == null))) break Label48;
              node_536873753 = nimCopy(node_536873753, it_536873754.value, NTI2785018711);
              var colontmp__536873757 = nimCopy(null, {Field0: node_536873753.key, Field1: nimCopy(null, node_536873753.val, NTI2868903943)}, NTI2785054350);
              keyHEX60gensym66_2785079437 = colontmp__536873757["Field0"];
              valueHEX60gensym66_2785079438 = nimCopy(valueHEX60gensym66_2785079438, colontmp__536873757["Field1"], NTI2868903943);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2868904733(keyHEX60gensym66_2785079437) || [],[32,45,62,32] || [],HEX24_2868904649(valueHEX60gensym66_2785079438) || [],[10] || []));;
              it_536873754 = it_536873754.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label49: {
      var keyHEX60gensym67_2785079519 = null;
      var valueHEX60gensym67_2785079520 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label50: {
        var node_536873764 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_536873765 = HEX3Atmp_2785018073.queryCacheNodeLayout.list.head;
        Label51: {
            Label52: while (true) {
            if (!!((it_536873765 == null))) break Label52;
              node_536873764 = nimCopy(node_536873764, it_536873765.value, NTI2785018786);
              var colontmp__536873768 = nimCopy(null, {Field0: node_536873764.key, Field1: nimCopy(null, node_536873764.val, NTI2868903967)}, NTI2785054397);
              keyHEX60gensym67_2785079519 = colontmp__536873768["Field0"];
              valueHEX60gensym67_2785079520 = nimCopy(valueHEX60gensym67_2785079520, colontmp__536873768["Field1"], NTI2868903967);
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2868906052(keyHEX60gensym67_2785079519) || [],[32,45,62,32] || [],HEX24_2868906015(valueHEX60gensym67_2785079520) || [],[10] || []));;
              it_536873765 = it_536873765.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 1) || []).concat([67,97,99,104,101,58,32,82,101,110,100,101,114,101,100,84,101,120,116,10] || []));;
    Label53: {
      var keyHEX60gensym68_2785079601 = ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})});
      var valueHEX60gensym68_2785079602 = [];
      Label54: {
        var node_536873775 = ({key: ({id: ({id: 0}), imageId: [], text: [], color: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), font: [], fontSize: 0.0, lineHeight: 0.0, charWidth: 0.0, bounds: ({arr: new Float32Array(2)})}), val: []});
        var it_536873776 = HEX3Atmp_2785018073.queryCacheRenderedText.list.head;
        Label55: {
            Label56: while (true) {
            if (!!((it_536873776 == null))) break Label56;
              node_536873775 = nimCopy(node_536873775, it_536873776.value, NTI2785018861);
              var colontmp__536873779 = nimCopy(null, {Field0: nimCopy(null, node_536873775.key, NTI2868903969), Field1: nimCopy(null, node_536873775.val, NTI33554449)}, NTI2785054444);
              keyHEX60gensym68_2785079601 = nimCopy(keyHEX60gensym68_2785079601, colontmp__536873779["Field0"], NTI2868903969);
              valueHEX60gensym68_2785079602 = colontmp__536873779["Field1"];
              HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, (repeat2_2801795087([124,32], 2) || []).concat(HEX24_2868906882(keyHEX60gensym68_2785079601) || [],[32,45,62,32] || [],valueHEX60gensym68_2785079602 || [],[10] || []));;
              it_536873776 = it_536873776.next;
            }
        };
      };
    };
    HEX3Atmp_2785018074.push.apply(HEX3Atmp_2785018074, nsuIndent(HEX24_2801813164(HEX3Atmp_2785018073.depGraph), 1, [124,32]));;
    result_2785078144 = nimCopy(null, HEX3Atmp_2785018074, NTI33554449);
    break BeforeRet;
  };

  return result_2785078144;

}

function dumpContext_2734702540(self_2734702541) {
    log_1191182436(logger_721420488[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1191182436(logger_721420488[0], 2, [toString_2785078143(ctx_2734686259)]);
    log_1191182436(logger_721420488[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextScript_2734702542(self_2734702543) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym852_2734702544 = getAstDocumentEditor_2734697991(self_2734702543);
      if (isNone_2734698107(rHEX60gensym852_2734702544)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2734702540(get_2734698127(rHEX60gensym852_2734702544));
  };

  
}

function dumpContextApi_2734702567(HEX3Atmp_2734702537) {
  var result_2734702568 = null;

    result_2734702568 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2734702542(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702537, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym854_2734702574 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2734702579 = [mnewString(0)];
    fmtRes_2734702579[0].push.apply(fmtRes_2734702579[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702579, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym854_2734702574 || [],fmtRes_2734702579[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734702568;

}

function getModeConfig_2734702584(self_2734702585, mode_2734702586) {
  var result_2734702587 = null;

  BeforeRet: {
    result_2734702587 = getEventHandlerConfig_1325403449(self_2734702585.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2734702586 || []));
    break BeforeRet;
  };

  return result_2734702587;

}

function setMode_2734702592(self_2734702593, mode_2734702594) {
        
function HEX3Aanonymous_2734702615(actionHEX60gensym861HEX60gensym862_2734702616, argHEX60gensym861HEX60gensym862_2734702617) {
          var result_2734702618 = 0;

          BeforeRet: {
            if (handlerHEX60gensym861_2734702603.config.handleActions) {
            var action_2734702619 = nimCopy(null, actionHEX60gensym861HEX60gensym862_2734702616, NTI33554449);
            var arg_2734702620 = nimCopy(null, argHEX60gensym861HEX60gensym862_2734702617, NTI33554449);
            var responseHEX60gensym861HEX60gensym862_2734702621 = handleAction_2734701897(self_2734702593, action_2734702619, arg_2734702620);
            if (handlerHEX60gensym861_2734702603.config.consumeAllActions) {
            result_2734702618 = 3;
            break BeforeRet;
            }
            
            result_2734702618 = responseHEX60gensym861HEX60gensym862_2734702621;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym861_2734702603.config.consumeAllActions) {
            result_2734702618 = 3;
            break BeforeRet;
            }
            else {
              result_2734702618 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2734702618;

        }
        
function HEX3Aanonymous_2734702623(inputHEX60gensym861HEX60gensym863_2734702624) {
          var result_2734702625 = 0;

          BeforeRet: {
            if (handlerHEX60gensym861_2734702603.config.handleInputs) {
            var input_2734702626 = nimCopy(null, inputHEX60gensym861HEX60gensym863_2734702624, NTI33554449);
            result_2734702625 = 1;
            break BeforeRet;
            }
            else {
              result_2734702625 = 1;
              break BeforeRet;
            }
            
          };

          return result_2734702625;

        }

    if (((mode_2734702594).length == 0)) {
    self_2734702593.modeEventHandler = null;
    }
    else {
      var config_2734702595 = getModeConfig_2734702584(self_2734702593, mode_2734702594);
      Label1: {
        var handlerHEX60gensym861_2734702603 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym861_2734702603.config = config_2734702595;
        handlerHEX60gensym861_2734702603.dfaInternal = buildDFA_2080374845(config_2734702595);
        handlerHEX60gensym861_2734702603.handleAction = HEX3Aanonymous_2734702615;
        handlerHEX60gensym861_2734702603.handleInput = HEX3Aanonymous_2734702623;
      };
      self_2734702593.modeEventHandler = handlerHEX60gensym861_2734702603;
    }
    
    self_2734702593.currentMode = nimCopy(null, mode_2734702594, NTI33554449);

  
}

function setModeScript2_2734702627(self_2734702628, mode_2734702629) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym858_2734702630 = getAstDocumentEditor_2734697991(self_2734702628);
      if (isNone_2734698107(rHEX60gensym858_2734702630)) {
      break BeforeRet;
      }
      
    };
    setMode_2734702592(get_2734698127(rHEX60gensym858_2734702630), mode_2734702629);
  };

  
}

function setModeApi2_2734702653(HEX3Atmp_2734702589) {
  var result_2734702654 = null;

    result_2734702654 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2734702627(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702589, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734702589, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym860_2734702665 = [115,101,116,77,111,100,101];
    var fmtRes_2734702670 = [mnewString(0)];
    fmtRes_2734702670[0].push.apply(fmtRes_2734702670[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702670, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym860_2734702665 || [],fmtRes_2734702670[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2734702654;

}

function mode_2734702679(self_2734702680) {
  var result_2734702681 = [];

  BeforeRet: {
    result_2734702681 = nimCopy(null, self_2734702680.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2734702681;

}

function modeScript2_2734702682(self_2734702683) {
  var result_2734702684 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym866_2734702685 = getAstDocumentEditor_2734697991(self_2734702683);
      if (isNone_2734698107(rHEX60gensym866_2734702685)) {
      break BeforeRet;
      }
      
    };
    result_2734702684 = nimCopy(null, mode_2734702679(get_2734698127(rHEX60gensym866_2734702685)), NTI33554449);
  };

  return result_2734702684;

}

function modeApi2_2734702708(HEX3Atmp_2734702676) {
  var result_2734702709 = null;

  BeforeRet: {
    result_2734702709 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    result_2734702709 = toJson_1845494346(modeScript2_2734702682(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702676, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym869_2734702719 = [109,111,100,101];
    var fmtRes_2734702724 = [mnewString(0)];
    fmtRes_2734702724[0].push.apply(fmtRes_2734702724[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702724, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym869_2734702719 || [],fmtRes_2734702724[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2734702709;

}

function getContextWithMode_2734702733(self_2734702734, context_2734702735) {
  var result_2734702736 = [];

  BeforeRet: {
    result_2734702736 = nimCopy(null, (context_2734702735 || []).concat([46] || [],self_2734702734.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2734702736;

}

function getContextWithModeScript2_2734702737(self_2734702738, context_2734702739) {
  var result_2734702740 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym873_2734702741 = getAstDocumentEditor_2734697991(self_2734702738);
      if (isNone_2734698107(rHEX60gensym873_2734702741)) {
      break BeforeRet;
      }
      
    };
    result_2734702740 = nimCopy(null, getContextWithMode_2734702733(get_2734698127(rHEX60gensym873_2734702741), context_2734702739), NTI33554449);
  };

  return result_2734702740;

}

function getContextWithModeApi2_2734702764(HEX3Atmp_2734702730) {
  var result_2734702765 = null;

  BeforeRet: {
    result_2734702765 = newJNull_1660944481();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2734702765 = toJson_1845494346(getContextWithModeScript2_2734702737(jsonTo_2734698150(HEX5BHEX5D_1660947548(HEX3Atmp_2734702730, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1845494298(HEX5BHEX5D_1660947548(HEX3Atmp_2734702730, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1845493794());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym876_2734702780 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2734702785 = [mnewString(0)];
    fmtRes_2734702785[0].push.apply(fmtRes_2734702785[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_738197675(fmtRes_2734702785, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym876_2734702780 || [],fmtRes_2734702785[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2734702765;

}

function dispatch_2734702793(command_2734702792, arg_2734702791) {
    var Temporary1;

  var result_2734702795 = ({val: null});

    switch (toJSStr(command_2734702792)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2634035405(moveCursorApi_2734698148(arg_2734702791));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2634035405(moveCursorUpApi_2734698234(arg_2734702791));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2634035405(moveCursorDownApi_2734698282(arg_2734702791));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2634035405(moveCursorNextApi_2734698337(arg_2734702791));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2634035405(moveCursorPrevApi_2734698391(arg_2734702791));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2634035405(moveCursorNextLineApi_2734698465(arg_2734702791));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2634035405(moveCursorPrevLineApi_2734698539(arg_2734702791));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2634035405(selectContainingApi_2734698745(arg_2734702791));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2634035405(deleteSelectedApi_2734698801(arg_2734702791));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2634035405(copySelectedApi_2734698852(arg_2734702791));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2634035405(finishEditApi_2734698944(arg_2734702791));
      break;
    case "undo":
      Temporary1 = some_2634035405(undoApi2_2734699023(arg_2734702791));
      break;
    case "redo":
      Temporary1 = some_2634035405(redoApi2_2734699097(arg_2734702791));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2634035405(insertAfterSmartApi_2734699264(arg_2734702791));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2634035405(insertAfterApi_2734699404(arg_2734702791));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2634035405(insertBeforeApi_2734699543(arg_2734702791));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2634035405(insertChildApi_2734699681(arg_2734702791));
      break;
    case "replace":
      Temporary1 = some_2634035405(replaceApi_2734699773(arg_2734702791));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2634035405(replaceEmptyApi_2734699869(arg_2734702791));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2634035405(replaceParentApi_2734699932(arg_2734702791));
      break;
    case "wrap":
      Temporary1 = some_2634035405(wrapApi_2734700043(arg_2734702791));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2634035405(editPrevEmptyApi_2734700102(arg_2734702791));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2634035405(editNextEmptyApi_2734700164(arg_2734702791));
      break;
    case "rename":
      Temporary1 = some_2634035405(renameApi_2734700212(arg_2734702791));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2634035405(selectPrevCompletionApi2_2734700271(arg_2734702791));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2634035405(selectNextCompletionApi2_2734700330(arg_2734702791));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2634035405(applySelectedCompletionApi2_2734700491(arg_2734702791));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2634035405(cancelAndNextCompletionApi_2734700539(arg_2734702791));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2634035405(cancelAndPrevCompletionApi_2734700587(arg_2734702791));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2634035405(cancelAndDeleteApi_2734700638(arg_2734702791));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2634035405(moveNodeToPrevSpaceApi_2734700790(arg_2734702791));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2634035405(moveNodeToNextSpaceApi_2734700943(arg_2734702791));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2634035405(selectPrevApi2_2734700991(arg_2734702791));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2634035405(selectNextApi2_2734701039(arg_2734702791));
      break;
    case "goto":
      Temporary1 = some_2634035405(gotoApi_2734701553(arg_2734702791));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2634035405(runSelectedFunctionApi_2734701825(arg_2734702791));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2634035405(toggleOptionApi_2734701875(arg_2734702791));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2634035405(runLastCommandApi_2734701934(arg_2734702791));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2634035405(selectCenterNodeApi_2734702394(arg_2734702791));
      break;
    case "scroll":
      Temporary1 = some_2634035405(scrollApi_2734702448(arg_2734702791));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2634035405(scrollOutputApi_2734702514(arg_2734702791));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2634035405(dumpContextApi_2734702567(arg_2734702791));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2634035405(setModeApi2_2734702653(arg_2734702791));
      break;
    case "mode":
      Temporary1 = some_2634035405(modeApi2_2734702708(arg_2734702791));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2634035405(getContextWithModeApi2_2734702764(arg_2734702791));
      break;
    default: 
      Temporary1 = none_2634035601();
      break;
    }
    result_2734702795 = nimCopy(result_2734702795, Temporary1, NTI2634031918);

  return result_2734702795;

}

function handleAction_2734701897(self_2734701898, action_2734701899, arg_2734701900) {
  var result_2734702941 = 0;

  BeforeRet: {
    var args_2734702942 = newJArray_1660944514();
    add_1660944622(args_2734702942, toJson_2734698078({id: self_2734701898.id}, initToJsonOptions_1845493794()));
    Label1: {
      var a_2734702943 = null;
      var colontmp__536873072 = null;
      colontmp__536873072 = newStringStream_1694499849(arg_2734701900);
      var p_536873073 = [({m_type: NTI1728053255, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1728053345(p_536873073[0], colontmp__536873072, [], false);
      try {
      var _ = getTok_1728053702(p_536873073[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536873073[0].tok == 1))) break Label4;
            a_2734702943 = parseJson_1660949643(p_536873073[0], false, false, 0);
            add_1660944622(args_2734702942, a_2734702943);
          }
      };
      } finally {
      close_1728053399(p_536873073[0]);
      }
    };
    var newLastCommand_2734702944 = {Field0: nimCopy(null, action_2734701899, NTI33554449), Field1: nimCopy(null, arg_2734701900, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1325403241(self_2734701898.editor, self_2734701898, action_2734701899, args_2734702942) == 3)) {
    result_2734702941 = 3;
    break BeforeRet;
    }
    
    if (isSome_2634035669(dispatch_2734702793(action_2734701899, args_2734702942))) {
    result_2734702941 = 3;
    break BeforeRet;
    }
    
    result_2734702941 = 1;
    break BeforeRet;
    } finally {
    self_2734701898.lastCommand = nimCopy(self_2734701898.lastCommand, newLastCommand_2734702944, NTI2734687804);
    }
  };

  return result_2734702941;

}

function handleInput_2734702956(self_2734702957, input_2734702958) {
  var result_2734702959 = 0;

  BeforeRet: {
    result_2734702959 = 1;
    break BeforeRet;
  };

  return result_2734702959;

}

function injectDependencies_2734703690(self_2734703691, ed_2734703692) {
      
function HEX3Aanonymous_2734703712(actionHEX60gensym1015HEX60gensym1016_2734703713, argHEX60gensym1015HEX60gensym1016_2734703714) {
        var result_2734703715 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1015_2734703700.config.handleActions) {
          var action_2734703716 = nimCopy(null, actionHEX60gensym1015HEX60gensym1016_2734703713, NTI33554449);
          var arg_2734703717 = nimCopy(null, argHEX60gensym1015HEX60gensym1016_2734703714, NTI33554449);
          var responseHEX60gensym1015HEX60gensym1016_2734703718 = handleAction_2734701897(self_2734703691, action_2734703716, arg_2734703717);
          if (handlerHEX60gensym1015_2734703700.config.consumeAllActions) {
          result_2734703715 = 3;
          break BeforeRet;
          }
          
          result_2734703715 = responseHEX60gensym1015HEX60gensym1016_2734703718;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1015_2734703700.config.consumeAllActions) {
          result_2734703715 = 3;
          break BeforeRet;
          }
          else {
            result_2734703715 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2734703715;

      }
      
function HEX3Aanonymous_2734703720(inputHEX60gensym1015HEX60gensym1017_2734703721) {
        var result_2734703722 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1015_2734703700.config.handleInputs) {
          var input_2734703723 = nimCopy(null, inputHEX60gensym1015HEX60gensym1017_2734703721, NTI33554449);
          result_2734703722 = handleInput_2734702956(self_2734703691, input_2734703723);
          break BeforeRet;
          }
          else {
            result_2734703722 = 1;
            break BeforeRet;
          }
          
        };

        return result_2734703722;

      }
      
function HEX3Aanonymous_2734703743(actionHEX60gensym1018HEX60gensym1019_2734703744, argHEX60gensym1018HEX60gensym1019_2734703745) {
        var result_2734703746 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1018_2734703731.config.handleActions) {
          var action_2734703747 = nimCopy(null, actionHEX60gensym1018HEX60gensym1019_2734703744, NTI33554449);
          var arg_2734703748 = nimCopy(null, argHEX60gensym1018HEX60gensym1019_2734703745, NTI33554449);
          var responseHEX60gensym1018HEX60gensym1019_2734703749 = handleAction_2734701897(self_2734703691, action_2734703747, arg_2734703748);
          if (handlerHEX60gensym1018_2734703731.config.consumeAllActions) {
          result_2734703746 = 3;
          break BeforeRet;
          }
          
          result_2734703746 = responseHEX60gensym1018HEX60gensym1019_2734703749;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1018_2734703731.config.consumeAllActions) {
          result_2734703746 = 3;
          break BeforeRet;
          }
          else {
            result_2734703746 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2734703746;

      }
      
function HEX3Aanonymous_2734703751(inputHEX60gensym1018HEX60gensym1020_2734703752) {
        var result_2734703753 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1018_2734703731.config.handleInputs) {
          var input_2734703754 = nimCopy(null, inputHEX60gensym1018HEX60gensym1020_2734703752, NTI33554449);
          result_2734703753 = 1;
          break BeforeRet;
          }
          else {
            result_2734703753 = 1;
            break BeforeRet;
          }
          
        };

        return result_2734703753;

      }

    self_2734703691.editor = ed_2734703692;
    registerEditor_1325400214(self_2734703691.editor, self_2734703691);
    Label1: {
      var handlerHEX60gensym1015_2734703700 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1015_2734703700.config = getEventHandlerConfig_1325403449(ed_2734703692, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1015_2734703700.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(ed_2734703692, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1015_2734703700.handleAction = HEX3Aanonymous_2734703712;
      handlerHEX60gensym1015_2734703700.handleInput = HEX3Aanonymous_2734703720;
    };
    self_2734703691.eventHandler = handlerHEX60gensym1015_2734703700;
    Label2: {
      var handlerHEX60gensym1018_2734703731 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1018_2734703731.config = getEventHandlerConfig_1325403449(ed_2734703692, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1018_2734703731.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(ed_2734703692, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1018_2734703731.handleAction = HEX3Aanonymous_2734703743;
      handlerHEX60gensym1018_2734703731.handleInput = HEX3Aanonymous_2734703751;
    };
    self_2734703691.textEditEventHandler = handlerHEX60gensym1018_2734703731;

  
}

function injectDependencies_2634035767(self_2634035768, ed_2634035769) {
      
function HEX3Aanonymous_2634035790(actionHEX60gensym739HEX60gensym740_2634035791, argHEX60gensym739HEX60gensym740_2634035792) {
        var result_2634035793 = 0;

        BeforeRet: {
          if (handlerHEX60gensym739_2634035778.config.handleActions) {
          var action_2634035794 = nimCopy(null, actionHEX60gensym739HEX60gensym740_2634035791, NTI33554449);
          var arg_2634035795 = nimCopy(null, argHEX60gensym739HEX60gensym740_2634035792, NTI33554449);
          var responseHEX60gensym739HEX60gensym740_2634035796 = handleAction_2634023254(self_2634035768, action_2634035794, arg_2634035795);
          if (handlerHEX60gensym739_2634035778.config.consumeAllActions) {
          result_2634035793 = 3;
          break BeforeRet;
          }
          
          result_2634035793 = responseHEX60gensym739HEX60gensym740_2634035796;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym739_2634035778.config.consumeAllActions) {
          result_2634035793 = 3;
          break BeforeRet;
          }
          else {
            result_2634035793 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2634035793;

      }
      
function HEX3Aanonymous_2634035798(inputHEX60gensym739HEX60gensym741_2634035799) {
        var result_2634035800 = 0;

        BeforeRet: {
          if (handlerHEX60gensym739_2634035778.config.handleInputs) {
          var input_2634035801 = nimCopy(null, inputHEX60gensym739HEX60gensym741_2634035799, NTI33554449);
          result_2634035800 = handleInput_2634023262(self_2634035768, input_2634035801);
          break BeforeRet;
          }
          else {
            result_2634035800 = 1;
            break BeforeRet;
          }
          
        };

        return result_2634035800;

      }
      
function HEX3Aanonymous_2634035821(actionHEX60gensym742HEX60gensym743_2634035822, argHEX60gensym742HEX60gensym743_2634035823) {
        var result_2634035824 = 0;

        BeforeRet: {
          if (handlerHEX60gensym742_2634035809.config.handleActions) {
          var action_2634035825 = nimCopy(null, actionHEX60gensym742HEX60gensym743_2634035822, NTI33554449);
          var arg_2634035826 = nimCopy(null, argHEX60gensym742HEX60gensym743_2634035823, NTI33554449);
          var responseHEX60gensym742HEX60gensym743_2634035827 = handleAction_2634023254(self_2634035768, action_2634035825, arg_2634035826);
          if (handlerHEX60gensym742_2634035809.config.consumeAllActions) {
          result_2634035824 = 3;
          break BeforeRet;
          }
          
          result_2634035824 = responseHEX60gensym742HEX60gensym743_2634035827;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym742_2634035809.config.consumeAllActions) {
          result_2634035824 = 3;
          break BeforeRet;
          }
          else {
            result_2634035824 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2634035824;

      }
      
function HEX3Aanonymous_2634035829(inputHEX60gensym742HEX60gensym744_2634035830) {
        var result_2634035831 = 0;

        BeforeRet: {
          if (handlerHEX60gensym742_2634035809.config.handleInputs) {
          var input_2634035832 = nimCopy(null, inputHEX60gensym742HEX60gensym744_2634035830, NTI33554449);
          result_2634035831 = handleInput_2634023262(self_2634035768, input_2634035832);
          break BeforeRet;
          }
          else {
            result_2634035831 = 1;
            break BeforeRet;
          }
          
        };

        return result_2634035831;

      }

    self_2634035768.editor = ed_2634035769;
    registerEditor_1325400214(self_2634035768.editor, self_2634035768);
    var config_2634035770 = getEventHandlerConfig_1325403449(ed_2634035769, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym739_2634035778 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym739_2634035778.config = config_2634035770;
      handlerHEX60gensym739_2634035778.dfaInternal = buildDFA_2080374845(config_2634035770);
      handlerHEX60gensym739_2634035778.handleAction = HEX3Aanonymous_2634035790;
      handlerHEX60gensym739_2634035778.handleInput = HEX3Aanonymous_2634035798;
    };
    self_2634035768.eventHandler = handlerHEX60gensym739_2634035778;
    Label2: {
      var handlerHEX60gensym742_2634035809 = {state: 0, config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym742_2634035809.config = getEventHandlerConfig_1325403449(ed_2634035769, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym742_2634035809.dfaInternal = buildDFA_2080374845(getEventHandlerConfig_1325403449(ed_2634035769, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym742_2634035809.handleAction = HEX3Aanonymous_2634035821;
      handlerHEX60gensym742_2634035809.handleInput = HEX3Aanonymous_2634035829;
    };
    self_2634035768.completionEventHandler = handlerHEX60gensym742_2634035809;

  
}

function injectDependencies_1325402168(self_1325402169, ed_1325402170) {
  
}

function injectDependencies_1325402171(self_1325402169, ed_1325402170) {
    chckNilDisp(self_1325402169);
    if (isObj(self_1325402169.m_type, NTI2734687781)) {
    injectDependencies_2734703690(self_1325402169, ed_1325402170);
    }
    else {
    if (isObj(self_1325402169.m_type, NTI2634023118)) {
    injectDependencies_2634035767(self_1325402169, ed_1325402170);
    }
    else {
    if (isObj(self_1325402169.m_type, NTI2181038084)) {
    injectDependencies_1325402168(self_1325402169, ed_1325402170);
    }
    }}

  
}

function getOrDefault_1325402704(t_1325402707, key_1325402708, default_1325402709) {
    var Temporary1;

  var result_1325402710 = 0.0;

    var hcHEX60gensym18_1325402713 = [0];
    var indexHEX60gensym18_1325402953 = rawGet_1325402714(t_1325402707, key_1325402708, hcHEX60gensym18_1325402713, 0);
    if ((0 <= indexHEX60gensym18_1325402953)) {
    Temporary1 = t_1325402707.data[chckIndx(indexHEX60gensym18_1325402953, 0, (t_1325402707.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1325402709;
    }
    
    result_1325402710 = Temporary1;

  return result_1325402710;

}

function value_2097152050(m_2097152051) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2097152052 = 0.0;

  BeforeRet: {
    switch (m_2097152051.kind) {
    case 0:
      var Temporary1 = m_2097152051;
      if (ConstSet310[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2097152003)); }
      result_2097152052 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2097152051;
      if (ConstSet311[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2097152003)); }
      result_2097152052 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2097152051;
      if (ConstSet312[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2097152003)); }
      result_2097152052 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2097152052;

}

function apply_2097152075(m_2097152076, a_2097152077, b_2097152078) {
  var result_2097152079 = 0.0;

  BeforeRet: {
    switch (m_2097152076.kind) {
    case 0:
      var v_2097152090 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + v_2097152090);
      break BeforeRet;
      break;
    case 1:
      var v_2097152091 = value_2097152050(m_2097152076);
      result_2097152079 = v_2097152091;
      break BeforeRet;
      break;
    case 2:
      var v_2097152092 = value_2097152050(m_2097152076);
      result_2097152079 = (a_2097152077 + (v_2097152092 * (b_2097152078 - a_2097152077)));
      break BeforeRet;
      break;
    }
  };

  return result_2097152079;

}

function splitV_2097152105(r_2097152106, x_2097152107) {
  var result_2097152110 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152110.Field0 = nimCopy(result_2097152110.Field0, r_2097152106, NTI2113929221);
    result_2097152110.Field1 = nimCopy(result_2097152110.Field1, r_2097152106, NTI2113929221);
    result_2097152110.Field0.w = (apply_2097152075(x_2097152107, r_2097152106.x, (r_2097152106.x + r_2097152106.w)) - r_2097152106.x);
    result_2097152110.Field1.x = (result_2097152110.Field0.x + result_2097152110.Field0.w);
    result_2097152110.Field1.w = (result_2097152110.Field1.w - result_2097152110.Field0.w);

  return result_2097152110;

}

function percent_2097152047(value_2097152048) {
  var result_2097152049 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2097152049 = nimCopy(result_2097152049, {kind: 2, per: value_2097152048, rel: 0.0, abs: 0.0}, NTI2097152004);
    break BeforeRet;
  };

  return result_2097152049;

}

function splitH_2097152093(r_2097152094, y_2097152095) {
  var result_2097152098 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2097152098.Field0 = nimCopy(result_2097152098.Field0, r_2097152094, NTI2113929221);
    result_2097152098.Field1 = nimCopy(result_2097152098.Field1, r_2097152094, NTI2113929221);
    result_2097152098.Field0.h = (apply_2097152075(y_2097152095, r_2097152094.y, (r_2097152094.y + r_2097152094.h)) - r_2097152094.y);
    result_2097152098.Field1.y = (result_2097152098.Field0.y + result_2097152098.Field0.h);
    result_2097152098.Field1.h = (result_2097152098.Field1.h - result_2097152098.Field0.h);

  return result_2097152098;

}

function layoutViews_1325403139(layout_1325403140, props_1325403141, bounds_1325403142, views_1325403143) {
            var Temporary4;
            var Temporary5;

  var result_1325403144 = [];

    var mainSplit_1325403217 = getOrDefault_1325402704(props_1325403141.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1325403144 = nimCopy(null, [], NTI1325401598);
    var rect_1325403222 = nimCopy(null, bounds_1325403142, NTI2113929221);
    Label1: {
      var i_1325403227 = 0;
      var i_536873802 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873802 < views_1325403143)) break Label3;
            i_1325403227 = i_536873802;
            if (((i_1325403227 == 0) && (1 < views_1325403143))) {
            Temporary4 = mainSplit_1325403217;
            }
            else {
            if ((i_1325403227 == subInt(views_1325403143, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1325403228 = Temporary4;
            if ((modInt(i_1325403227, 2) == 0)) {
            Temporary5 = splitV_2097152105(rect_1325403222, percent_2097152047(ratio_1325403228));
            }
            else {
            Temporary5 = splitH_2097152093(rect_1325403222, percent_2097152047(ratio_1325403228));
            }
            
            var colontmp__536873804 = nimCopy(null, Temporary5, NTI2097152063);
            var view_rect_1325403229 = nimCopy(null, colontmp__536873804["Field0"], NTI2113929221);
            var remaining_1325403230 = nimCopy(null, colontmp__536873804["Field1"], NTI2113929221);
            rect_1325403222 = nimCopy(rect_1325403222, remaining_1325403230, NTI2113929221);
            var Temporary6 = nimCopy(null, view_rect_1325403229, NTI2113929221);
            result_1325403144.push(Temporary6);;
            i_536873802 = addInt(i_536873802, 1);
          }
      };
    };

  return result_1325403144;

}

function layoutViews_1325403043(layout_1325403044, props_1325403045, bounds_1325403046, views_1325403047) {
            var Temporary4;

  var result_1325403048 = [];

    var mainSplit_1325403121 = getOrDefault_1325402704(props_1325403045.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1325403048 = nimCopy(null, [], NTI1325401598);
    var rect_1325403126 = nimCopy(null, bounds_1325403046, NTI2113929221);
    Label1: {
      var i_1325403131 = 0;
      var i_536873806 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873806 < views_1325403047)) break Label3;
            i_1325403131 = i_536873806;
            if (((i_1325403131 == 0) && (1 < views_1325403047))) {
            Temporary4 = mainSplit_1325403121;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1325403047, i_1325403131));
            }
            
            var ratio_1325403132 = Temporary4;
            var colontmp__536873808 = splitH_2097152093(rect_1325403126, percent_2097152047(ratio_1325403132));
            var view_rect_1325403133 = nimCopy(null, colontmp__536873808["Field0"], NTI2113929221);
            var remaining_1325403134 = nimCopy(null, colontmp__536873808["Field1"], NTI2113929221);
            rect_1325403126 = nimCopy(rect_1325403126, remaining_1325403134, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1325403133, NTI2113929221);
            result_1325403048.push(Temporary5);;
            i_536873806 = addInt(i_536873806, 1);
          }
      };
    };

  return result_1325403048;

}

function layoutViews_1325402632(layout_1325402633, props_1325402634, bounds_1325402635, views_1325402636) {
            var Temporary4;

  var result_1325402637 = [];

    var mainSplit_1325403007 = getOrDefault_1325402704(props_1325402634.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1325402637 = nimCopy(null, [], NTI1325401598);
    var rect_1325403012 = nimCopy(null, bounds_1325402635, NTI2113929221);
    Label1: {
      var i_1325403017 = 0;
      var i_536873810 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873810 < views_1325402636)) break Label3;
            i_1325403017 = i_536873810;
            if (((i_1325403017 == 0) && (1 < views_1325402636))) {
            Temporary4 = mainSplit_1325403007;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1325402636, i_1325403017));
            }
            
            var ratio_1325403018 = Temporary4;
            var colontmp__536873812 = splitV_2097152105(rect_1325403012, percent_2097152047(ratio_1325403018));
            var view_rect_1325403019 = nimCopy(null, colontmp__536873812["Field0"], NTI2113929221);
            var remaining_1325403020 = nimCopy(null, colontmp__536873812["Field1"], NTI2113929221);
            rect_1325403012 = nimCopy(rect_1325403012, remaining_1325403020, NTI2113929221);
            var Temporary5 = nimCopy(null, view_rect_1325403019, NTI2113929221);
            result_1325402637.push(Temporary5);;
            i_536873810 = addInt(i_536873810, 1);
          }
      };
    };

  return result_1325402637;

}

function layoutViews_1325402602(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606) {
  var result_1325402607 = [];

  BeforeRet: {
    result_1325402607 = nimCopy(null, [nimCopy(null, bounds_1325402605, NTI2113929221)], NTI1325401387);
    break BeforeRet;
  };

  return result_1325402607;

}

function layoutViews_1325402630(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606) {
  var result_1325402631 = [];

  BeforeRet: {
    chckNilDisp(layout_1325402603);
    if (isObj(layout_1325402603.m_type, NTI1325400077)) {
    result_1325402631 = layoutViews_1325403139(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1325402603.m_type, NTI1325400076)) {
    result_1325402631 = layoutViews_1325403043(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1325402603.m_type, NTI1325400075)) {
    result_1325402631 = layoutViews_1325402632(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1325402603.m_type, NTI1325400074)) {
    result_1325402631 = layoutViews_1325402602(layout_1325402603, props_1325402604, bounds_1325402605, views_1325402606);
    break BeforeRet;
    }
    }}}
  };

  return result_1325402631;

}

function start_2667577368(self_2667577369) {
  
}

function start_2667577370(self_2667577369) {
    start_2667577368(self_2667577369);

  
}

function getDefinition_2667577374(self_2667577375, filename_2667577376, location_2667577377) {
  var result_2667577385 = null;

  return result_2667577385;

}

function getDefinition_2667577386(self_2667577375, filename_2667577376, location_2667577377) {
  var result_2667577387 = null;

  BeforeRet: {
    result_2667577387 = getDefinition_2667577374(self_2667577375, filename_2667577376, location_2667577377);
    break BeforeRet;
  };

  return result_2667577387;

}

function getCompletions_2667577388(self_2667577389, languageId_2667577390, filename_2667577391, location_2667577392) {
  var result_2667577395 = null;

  return result_2667577395;

}

function getCompletions_2667577396(self_2667577389, languageId_2667577390, filename_2667577391, location_2667577392) {
  var result_2667577397 = null;

  BeforeRet: {
    result_2667577397 = getCompletions_2667577388(self_2667577389, languageId_2667577390, filename_2667577391, location_2667577392);
    break BeforeRet;
  };

  return result_2667577397;

}

function active_2181038104(self_2181038105) {
  var result_2181038106 = false;

    result_2181038106 = self_2181038105.active;

  return result_2181038106;

}

function updateBackgroundColor_2348810318(self_2348810319, color_2348810320, frameIndex_2348810321) {
    if (!(HEX3DHEX3D_2348810308(self_2348810319.backgroundColor, color_2348810320))) {
    self_2348810319.lastHierarchyChange = nimMax(self_2348810319.lastHierarchyChange, frameIndex_2348810321);
    }
    
    self_2348810319.backgroundColor = nimCopy(self_2348810319.backgroundColor, color_2348810320, NTI2382364675);

  
}

function HEX24_2197815620(selection_2197815621) {
  var result_2197815622 = [];

  BeforeRet: {
    result_2197815622 = nimCopy(null, (HEX24_2197815617(selection_2197815621.Field0) || []).concat([45] || [],HEX24_2197815617(selection_2197815621.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2197815622;

}

function formatValue_2634023035(result_2634023037, result_2634023037_Idx, value_2634023038, specifier_2634023039) {
    formatValue_738197675(result_2634023037, result_2634023037_Idx, HEX24_2197815620(value_2634023038), specifier_2634023039);

  
}

function HEX2A_2399141891(c_2399141892, v_2399141893) {
  var result_2399141894 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2399141894.r = (c_2399141892.r * v_2399141893);
    result_2399141894.g = (c_2399141892.g * v_2399141893);
    result_2399141894.b = (c_2399141892.b * v_2399141893);
    result_2399141894.a = (c_2399141892.a * v_2399141893);

  return result_2399141894;

}

function changed_2348810565(self_2348810566, frameIndex_2348810567) {
  var result_2348810568 = false;

    result_2348810568 = (((frameIndex_2348810567 <= self_2348810566.lastBoundsChange) || (frameIndex_2348810567 <= self_2348810566.lastHierarchyChange)) || (frameIndex_2348810567 <= self_2348810566.lastInvalidation));

  return result_2348810568;

}

function clamp_3053453640(val_3053453642, bounds_3053453643) {
  var result_3053453644 = 0;

    if (!((bounds_3053453643.a <= bounds_3053453643.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2197815617({Field0: bounds_3053453643.a, Field1: bounds_3053453643.b}) || []));
    }
    
    result_3053453644 = clamp_1694499551(val_3053453642, bounds_3053453643.a, bounds_3053453643.b);

  return result_3053453644;

}

function initTable_3053453674(initialSize_3053453677) {
  var result_3053453678 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3053453680 = slotsNeeded_1342177323(chckRange(initialSize_3053453677, 0, 2147483647));
    result_3053453678.counter = 0;
    result_3053453678.data = new Array(chckRange(correctSizeHEX60gensym10_3053453680, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3053453680, 0, 2147483647) ; ++i) { result_3053453678.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3053453678;

}

function mgetOrPut_3053453726(t_3053453729, key_3053453730, val_3053453731) {
  var result_3053453732 = null;
  var result_3053453732_Idx = 0;

    if (((t_3053453729.data).length == 0)) {
    var correctSizeHEX60gensym13_3053453781 = slotsNeeded_1342177323(32);
    t_3053453729.counter = 0;
    t_3053453729.data = new Array(chckRange(correctSizeHEX60gensym13_3053453781, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3053453781, 0, 2147483647) ; ++i) { t_3053453729.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3053453786 = [0];
    var index_3053453793 = rawGet_2634026126(t_3053453729, key_3053453730, hc_3053453786, 0);
    if ((index_3053453793 < 0)) {
    if (((t_3053453729.data).length == 0)) {
    var correctSizeHEX60gensym16_3053453842 = slotsNeeded_1342177323(32);
    t_3053453729.counter = 0;
    t_3053453729.data = new Array(chckRange(correctSizeHEX60gensym16_3053453842, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3053453842, 0, 2147483647) ; ++i) { t_3053453729.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2634026564(t_3053453729)) {
    enlarge_2634026734(t_3053453729);
    index_3053453793 = rawGetKnownHC_2634027342(t_3053453729, key_3053453730, hc_3053453786[0]);
    }
    
    index_3053453793 = subInt(-1, index_3053453793);
    rawInsert_2634027113(t_3053453729, t_3053453729, "data", key_3053453730, val_3053453731, hc_3053453786[0], index_3053453793);
    t_3053453729.counter = addInt(t_3053453729.counter, 1);
    }
    
    result_3053453732 = t_3053453729.data[chckIndx(index_3053453793, 0, (t_3053453729.data).length - 1)]; result_3053453732_Idx = "Field2";

  return [result_3053453732, result_3053453732_Idx];

}

function isSome_3053454013(self_3053454015) {
  var result_3053454016 = false;

    result_3053454016 = self_3053454015.has;

  return result_3053454016;

}

function get_3053454004(self_3053454006, otherwise_3053454007) {
    var Temporary1;

  var result_3053454008 = 0;

    if (isSome_3053454013(self_3053454006)) {
    Temporary1 = self_3053454006.val;
    }
    else {
    Temporary1 = otherwise_3053454007;
    }
    
    result_3053454008 = Temporary1;

  return result_3053454008;

}

function parseEnum_3053453979(s_3053453981, default_3053453982) {
    var Temporary1;

  var result_3053453983 = 0;

    switch (toJSStr(nimIdentNormalize_872415353(s_3053453981))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3053453982;
      break;
    }
    result_3053453983 = Temporary1;

  return result_3053453983;

}

function getOption_3053453953(editor_3053453955, path_3053453956, default_3053453957) {
  var result_3053453963 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3053453955 == null)) {
      result_3053453963 = default_3053453957;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3053453975 = HEX7BHEX7D_1660947748(editor_3053453955.options, nsuSplitString(path_3053453956, [46], -1));
      if ((nodeHEX60gensym18_3053453975 == null)) {
      result_3053453963 = default_3053453957;
      break BeforeRet;
      }
      
    };
    result_3053453963 = parseEnum_3053453979(getStr_1660944538(nodeHEX60gensym18_3053453975, []), default_3053453957);
    break BeforeRet;
  };

  return result_3053453963;

}

function initTable_2634024320(initialSize_2634024323) {
  var result_2634024329 = ({data: [], counter: 0});

    var correctSizeHEX60gensym39_2634024331 = slotsNeeded_1342177323(chckRange(initialSize_2634024323, 0, 2147483647));
    result_2634024329.counter = 0;
    result_2634024329.data = new Array(chckRange(correctSizeHEX60gensym39_2634024331, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_2634024331, 0, 2147483647) ; ++i) { result_2634024329.data[i] = {Field0: 0, Field1: [], Field2: ({})}; }
  return result_2634024329;

}

function getStyledText_2634024310(self_2634024311, i_2634024312) {
  var result_2634024313 = ({index: 0, parts: []});

  BeforeRet: {
    var line_2634024314 = nimCopy(null, self_2634024311.lines[chckIndx(i_2634024312, 0, (self_2634024311.lines).length - 1)], NTI33554449);
    var styledLine_2634024319 = {index: i_2634024312, parts: [{text: nimCopy(null, line_2634024314, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
    var regexes_2634024345 = initTable_2634024320(32);
    if (((self_2634024311.tsParser == null) || (self_2634024311.highlightQuery == null))) {
    result_2634024313 = nimCopy(result_2634024313, styledLine_2634024319, NTI2634023115);
    break BeforeRet;
    }
    
    result_2634024313 = nimCopy(result_2634024313, styledLine_2634024319, NTI2634023115);
    break BeforeRet;
  };

  return result_2634024313;

}

function getOrDefault_3053454098(t_3053454101, key_3053454102, default_3053454103) {
    var Temporary1;

  var result_3053454104 = [];

    var hcHEX60gensym21_3053454107 = [0];
    var indexHEX60gensym21_3053454114 = rawGet_2634026126(t_3053454101, key_3053454102, hcHEX60gensym21_3053454107, 0);
    if ((0 <= indexHEX60gensym21_3053454114)) {
    Temporary1 = t_3053454101.data[chckIndx(indexHEX60gensym21_3053454114, 0, (t_3053454101.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3053454103;
    }
    
    result_3053454104 = nimCopy(null, Temporary1, NTI2634023143);

  return result_3053454104;

}

function map_3053454199(s_3053454202, op_3053454204) {
  var result_3053454205 = [];

    result_3053454205 = new Array(chckRange((s_3053454202).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3053454202).length, 0, 2147483647) ; ++i) { result_3053454205[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3053454220 = 0;
      var colontmp__536873842 = 0;
      colontmp__536873842 = (s_3053454202).length;
      var i_536873843 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873843 < colontmp__536873842)) break Label3;
            i_3053454220 = i_536873843;
            result_3053454205[chckIndx(i_3053454220, 0, (result_3053454205).length - 1)] = nimCopy(result_3053454205[chckIndx(i_3053454220, 0, (result_3053454205).length - 1)], op_3053454204(s_3053454202[chckIndx(i_3053454220, 0, (s_3053454202).length - 1)]), NTI3053453316);
            i_536873843 = addInt(i_536873843, 1);
          }
      };
    };

  return result_3053454205;

}

function clampToLine_3053453331(selection_3053453332, line_3053453333, lineLength_3053453334) {
    var Temporary1;
    var Temporary2;

  var result_3053453337 = {Field0: 0, Field1: 0};

    if ((selection_3053453332.Field0.Field0 < line_3053453333)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3053453332.Field0.Field0 == line_3053453333)) {
    Temporary1 = selection_3053453332.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3053453334;
    }
    }
    result_3053453337.Field0 = Temporary1;
    if ((selection_3053453332.Field1.Field0 < line_3053453333)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3053453332.Field1.Field0 == line_3053453333)) {
    Temporary2 = selection_3053453332.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3053453334;
    }
    }
    result_3053453337.Field1 = Temporary2;

  return result_3053453337;

}

function len_2634024138(line_2634024139) {
  var result_2634024140 = 0;

    result_2634024140 = 0;
    Label1: {
      var p_2634024163 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536873847 = 0;
      var L_536873848 = (line_2634024139.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873847 < L_536873848)) break Label3;
            p_2634024163 = line_2634024139.parts[chckIndx(i_536873847, 0, (line_2634024139.parts).length - 1)];
            result_2634024140 = addInt(result_2634024140, (p_2634024163.text).length);
            i_536873847 = addInt(i_536873847, 1);
            if (!(((line_2634024139.parts).length == L_536873848))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2634024140;

}

function contains_2197815675(selection_2197815676, cursor_2197815677) {
  var result_2197815678 = false;

    result_2197815678 = (HEX3CHEX3D_2197815639(selection_2197815676.Field0, cursor_2197815677) && HEX3CHEX3D_2197815639(cursor_2197815677, selection_2197815676.Field1));

  return result_2197815678;

}

function renderTextHighlight_3053453338(panel_3053453339, app_3053453340, startOffset_3053453341, endOffset_3053453342, line_3053453343, startIndex_3053453344, selection_3053453345, selectionClamped_3053453348, part_3053453349, color_3053453350) {
  BeforeRet: {
    var left_3053453351 = 0.0;
    var right_3053453352 = 0.0;
    if ((((startIndex_3053453344 < selectionClamped_3053453348.Field1) && (selectionClamped_3053453348.Field0 < addInt(startIndex_3053453344, (part_3053453349.text).length))) && (0 < (part_3053453349.text).length))) {
    left_3053453351 = (startOffset_3053453341 + ((nimMax(0, subInt(selectionClamped_3053453348.Field0, startIndex_3053453344)) / ((part_3053453349.text).length - 0.0)) * (endOffset_3053453342 - startOffset_3053453341)));
    right_3053453352 = (startOffset_3053453341 + ((nimMin((part_3053453349.text).length, subInt(selectionClamped_3053453348.Field1, startIndex_3053453344)) / ((part_3053453349.text).length - 0.0)) * (endOffset_3053453342 - startOffset_3053453341)));
    }
    else {
    if (((((part_3053453349.text).length == 0) && contains_2197815675(selection_3053453345, {Field0: line_3053453343, Field1: startIndex_3053453344})) && !(isEmpty_2197815668(selection_3053453345)))) {
    left_3053453351 = 0.0;
    right_3053453352 = Math.ceil((charWidth_2332033175(app_3053453340.platform) * 0.5));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3053453339.children.push({anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(0.0, 1.0)}, NTI2348810251), left: left_3053453351, right: right_3053453352, fillBackground: true, backgroundColor: nimCopy(null, color_3053453350, NTI2382364675), lastHierarchyChange: panel_3053453339.lastHierarchyChange, m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3053453375(panel_3053453376, app_3053453377, startOffset_3053453378, endOffset_3053453379, line_3053453380, startIndex_3053453381, selections_3053453382, selectionClamped_3053453385, part_3053453386, color_3053453387) {
    Label1: {
      var i_3053453395 = 0;
      var colontmp__536873851 = 0;
      colontmp__536873851 = (selections_3053453382).length;
      var i_536873852 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536873852 < colontmp__536873851)) break Label3;
            i_3053453395 = i_536873852;
            renderTextHighlight_3053453338(panel_3053453376, app_3053453377, startOffset_3053453378, endOffset_3053453379, line_3053453380, startIndex_3053453381, selections_3053453382[chckIndx(i_3053453395, 0, (selections_3053453382).length - 1)], selectionClamped_3053453385[chckIndx(i_3053453395, 0, (selectionClamped_3053453385).length - 1)], part_3053453386, color_3053453387);
            i_536873852 = addInt(i_536873852, 1);
          }
      };
    };

  
}

function color_3053454357(theme_3053454359, names_3053454360, default_3053454361) {
  var result_3053454362 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3053454366 = [];
      var i_536873855 = 0;
      var L_536873856 = (names_3053454360).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873855 < L_536873856)) break Label3;
            name_3053454366 = names_3053454360[chckIndx(i_536873855, 0, (names_3053454360).length - 1)];
            if (contains_2969567811(theme_3053454359.colors, name_3053454366)) {
            result_3053454362 = nimCopy(result_3053454362, HEX5BHEX5D_2969567901(theme_3053454359.colors, name_3053454366), NTI2382364675);
            break BeforeRet;
            }
            
            i_536873855 = addInt(i_536873855, 1);
            if (!(((names_3053454360).length == L_536873856))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3053454362 = nimCopy(result_3053454362, color_2466250785(default_3053454361), NTI2382364675);
    break BeforeRet;
  };

  return result_3053454362;

}

function color_2466250803(c_2466250804) {
  var result_2466250805 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2466250805.r = (c_2466250804.r / 255.0);
    result_2466250805.g = (c_2466250804.g / 255.0);
    result_2466250805.b = (c_2466250804.b / 255.0);
    result_2466250805.a = (c_2466250804.a / 255.0);

  return result_2466250805;

}

function color_3053454488(theme_3053454490, names_3053454491, default_3053454492) {
  var result_3053454493 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3053454497 = [];
      var i_536873859 = 0;
      var L_536873860 = (names_3053454491).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536873859 < L_536873860)) break Label3;
            name_3053454497 = names_3053454491[chckIndx(i_536873859, 0, (names_3053454491).length - 1)];
            if (contains_2969567811(theme_3053454490.colors, name_3053454497)) {
            result_3053454493 = nimCopy(result_3053454493, HEX5BHEX5D_2969567901(theme_3053454490.colors, name_3053454497), NTI2382364675);
            break BeforeRet;
            }
            
            i_536873859 = addInt(i_536873859, 1);
            if (!(((names_3053454491).length == L_536873860))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3053454493 = nimCopy(result_3053454493, color_2466250803(default_3053454492), NTI2382364675);
    break BeforeRet;
  };

  return result_3053454493;

}

function rgba_2382364773(r_2382364774, g_2382364775, b_2382364776, a_2382364777) {
  var result_2382364778 = ({r: 0, g: 0, b: 0, a: 0});

    result_2382364778 = nimCopy(result_2382364778, {r: r_2382364774, g: g_2382364775, b: b_2382364776, a: a_2382364777}, NTI2382364677);

  return result_2382364778;

}

function get_3053454717(self_3053454719, otherwise_3053454720) {
    var Temporary1;

  var result_3053454721 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_2969568090(self_3053454719)) {
    Temporary1 = self_3053454719.val;
    }
    else {
    Temporary1 = otherwise_3053454720;
    }
    
    result_3053454721 = nimCopy(result_3053454721, Temporary1, NTI2382364675);

  return result_3053454721;

}

function getCascading_2499805387(table_2499805389, key_2499805390, default_2499805391) {
  var result_2499805392 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2499805435(table_2499805389, key_2499805390)) {
    result_2499805392 = nimCopy(result_2499805392, HEX5BHEX5D_2499805740(table_2499805389, key_2499805390), NTI2499805188);
    break BeforeRet;
    }
    
    var index_2499805819 = nsuRFindStr(key_2499805390, [46], 0, -1);
    if (!((index_2499805819 == -1))) {
    result_2499805392 = nimCopy(result_2499805392, getCascading_2499805387(table_2499805389, HEX5BHEX5D_872416507(key_2499805390, HEX2EHEX2E_822083634(0, subInt(index_2499805819, 1))), default_2499805391), NTI2499805188);
    break BeforeRet;
    }
    
    result_2499805392 = nimCopy(result_2499805392, default_2499805391, NTI2499805188);
    break BeforeRet;
  };

  return result_2499805392;

}

function tokenColor_3053454689(theme_3053454691, name_3053454692, default_3053454693) {
  var result_3053454694 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3053454694 = nimCopy(result_3053454694, get_3053454717(getCascading_2499805387(theme_3053454691.tokenColors, name_3053454692, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2466250785(default_3053454693)), NTI2382364675);
    break BeforeRet;
  };

  return result_3053454694;

}

function updateWidget_3053453396(self_3053453397, app_3053453398, widget_3053453399, frameIndex_3053453400) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
                    var Temporary16;
    var Temporary18;
              
function renderLine_3053454022(i_3053454023, down_3053454024) {
                  
function HEX3Aanonymous_3053454168(s_3053454176) {
                    var result_3053454179 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3053454179 = nimCopy(result_3053454179, normalized_2197815662(s_3053454176), NTI2197815307);

                    return result_3053454179;

                  }
                  
function HEX3Aanonymous_3053454188(s_3053454195) {
                    var result_3053454198 = {Field0: 0, Field1: 0};

                      result_3053454198 = nimCopy(result_3053454198, clampToLine_3053453331(s_3053454195, i_3053454023, len_2634024138(styledText_3053454027)), NTI3053453316);

                    return result_3053454198;

                  }
                  
function HEX3Aanonymous_3053454298(s_3053454306) {
                    var result_3053454309 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3053454309 = nimCopy(result_3053454309, normalized_2197815662(s_3053454306), NTI2197815307);

                    return result_3053454309;

                  }
                  
function HEX3Aanonymous_3053454318(s_3053454325) {
                    var result_3053454328 = {Field0: 0, Field1: 0};

                      result_3053454328 = nimCopy(result_3053454328, clampToLine_3053453331(s_3053454325, i_3053454023, len_2634024138(styledText_3053454027)), NTI3053453316);

                    return result_3053454328;

                  }
                          var Temporary4;
                                  var Temporary8;
                          var Temporary9;

                var result_3053454025 = false;

                BeforeRet: {
                  var top_3053454026 = ((subInt(i_3053454023, self_3053453397.previousBaseIndex) * totalLineHeight_3053453402) + self_3053453397.scrollOffset);
                  if ((contentPanel_3053453565.lastBounds.h <= top_3053454026)) {
                  result_3053454025 = !(down_3053454024);
                  break BeforeRet;
                  }
                  
                  if (((top_3053454026 + totalLineHeight_3053453402) <= 0.0)) {
                  result_3053454025 = down_3053454024;
                  break BeforeRet;
                  }
                  
                  var styledText_3053454027 = getStyledText_2634024310(self_3053453397.document, i_3053454023);
                  var selectionsNormalizedOnLine_3053454187 = map_2634023334(getOrDefault_3053454098(selectionsPerLine_3053453685[0], i_3053454023, []), HEX3Aanonymous_3053454168);
                  var selectionsClampedOnLine_3053454221 = map_3053454199(selectionsNormalizedOnLine_3053454187, HEX3Aanonymous_3053454188);
                  var highlightsNormalizedOnLine_3053454317 = map_2634023334(getOrDefault_3053454098(highlightsPerLine_3053453940, i_3053454023, []), HEX3Aanonymous_3053454298);
                  var highlightsClampedOnLine_3053454335 = map_3053454199(highlightsNormalizedOnLine_3053454317, HEX3Aanonymous_3053454318);
                  var lineWidget_3053454336 = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 0.0)}, NTI2348810251), left: 1.0, right: -1.0, top: top_3053454026, bottom: (top_3053454026 + totalLineHeight_3053453402), lastHierarchyChange: frameIndex_3053453400, m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  var startOffset_3053454337 = [0.0];
                  var startIndex_3053454338 = 0;
                  Label1: {
                    var partIndex_3053454344 = 0;
                    var part_3053454345 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536873831 = 0;
                    var L_536873832 = (styledText_3053454027.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536873831 < L_536873832)) break Label3;
                          partIndex_3053454344 = i_536873831;
                          part_3053454345 = nimCopy(part_3053454345, styledText_3053454027.parts[chckIndx(i_536873831, 0, (styledText_3053454027.parts).length - 1)], NTI2634023114);
                          var width_3053454346 = ((part_3053454345.text).length * charWidth_3053453403);
                          var selectionColor_3053454352 = color_3053453404(app_3053453398.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2382364759(200, 200, 200));
                          renderTextHighlight_3053453375(lineWidget_3053454336, app_3053453398, startOffset_3053454337[0], (startOffset_3053454337[0] + width_3053454346), i_3053454023, startIndex_3053454338, selectionsNormalizedOnLine_3053454187, selectionsClampedOnLine_3053454221, part_3053454345, selectionColor_3053454352);
                          var highlightColor_3053454472 = color_3053454357(app_3053453398.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2382364759(200, 200, 200));
                          renderTextHighlight_3053453375(lineWidget_3053454336, app_3053453398, startOffset_3053454337[0], (startOffset_3053454337[0] + width_3053454346), i_3053454023, startIndex_3053454338, highlightsNormalizedOnLine_3053454317, highlightsClampedOnLine_3053454335, part_3053454345, highlightColor_3053454472);
                          var isWide_3053454482 = getOption_2634028482(app_3053453398, getContextWithMode_2634028476(self_3053453397, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
                          if (isWide_3053454482) {
                          Temporary4 = 1.0;
                          }
                          else {
                          Temporary4 = 0.2;
                          }
                          
                          var cursorWidth_3053454483 = Temporary4;
                          var cursorColor_3053454603 = color_3053454488(app_3053453398.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2382364773(255, 255, 255, 127));
                          Label5: {
                            var selection_3053454683 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536873827 = [];
                            colontmp__536873827 = getOrDefault_3053454098(selectionsPerLine_3053453685[0], i_3053454023, []);
                            var i_536873828 = 0;
                            var L_536873829 = (colontmp__536873827).length;
                            Label6: {
                                Label7: while (true) {
                                if (!(i_536873828 < L_536873829)) break Label7;
                                  selection_3053454683 = colontmp__536873827[chckIndx(i_536873828, 0, (colontmp__536873827).length - 1)];
                                  if ((((selection_3053454683.Field1.Field0 == i_3053454023) && (startIndex_3053454338 <= selection_3053454683.Field1.Field1)) && (selection_3053454683.Field1.Field1 <= addInt(startIndex_3053454338, (part_3053454345.text).length)))) {
                                  if (((part_3053454345.text).length == 0)) {
                                  Temporary8 = 0.0;
                                  }
                                  else {
                                  Temporary8 = ((subInt(selection_3053454683.Field1.Field1, startIndex_3053454338) / (part_3053454345.text).length) * width_3053454346);
                                  }
                                  
                                  var offsetFromPartStart_3053454684 = Temporary8;
                                  lineWidget_3053454336.children.push({anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(0.0, 1.0)}, NTI2348810251), left: (startOffset_3053454337[0] + offsetFromPartStart_3053454684), right: ((startOffset_3053454337[0] + offsetFromPartStart_3053454684) + (cursorWidth_3053454483 * charWidth_3053453403)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3053454603, NTI2382364675), lastHierarchyChange: frameIndex_3053453400, m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536873828 = addInt(i_536873828, 1);
                                  if (!(((colontmp__536873827).length == L_536873829))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3053454345.scope).length == 0)) {
                          Temporary9 = textColor_3053453561;
                          }
                          else {
                          Temporary9 = tokenColor_3053454689(app_3053453398.theme, part_3053454345.scope, rgb_2382364759(255, 200, 200));
                          }
                          
                          var color_3053454729 = nimCopy(null, Temporary9, NTI2382364675);
                          var partWidget_3053454730 = {text: nimCopy(null, part_3053454345.text, NTI33554449), anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(0.0, 1.0)}, NTI2348810251), left: startOffset_3053454337[0], right: (startOffset_3053454337[0] + width_3053454346), foregroundColor: nimCopy(null, color_3053454729, NTI2382364675), lastHierarchyChange: frameIndex_3053453400, m_type: NTI2348810260, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                          HEX2BHEX3D_872417520(startOffset_3053454337, 0, width_3053454346);
                          startIndex_3053454338 = addInt(startIndex_3053454338, (part_3053454345.text).length);
                          lineWidget_3053454336.children.push(partWidget_3053454730);;
                          i_536873831 = addInt(i_536873831, 1);
                          if (!(((styledText_3053454027.parts).length == L_536873832))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  contentPanel_3053453565.children.push(lineWidget_3053454336);;
                  result_3053454025 = true;
                  break BeforeRet;
                };

                return result_3053454025;

              }

  BeforeRet: {
    var lineHeight_3053453401 = lineHeight_2332033170(app_3053453398.platform);
    var totalLineHeight_3053453402 = totalLineHeight_2332033177(app_3053453398.platform);
    var charWidth_3053453403 = charWidth_2332033175(app_3053453398.platform);
    self_3053453397.lastContentBounds = nimCopy(self_3053453397.lastContentBounds, widget_3053453399.lastBounds, NTI2113929221);
    var textColor_3053453561 = color_3053453404(app_3053453398.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2382364759(225, 200, 200));
    var headerPanel_3053453562 = null;
    var headerPart1Text_3053453563 = null;
    var headerPart2Text_3053453564 = null;
    var contentPanel_3053453565 = null;
    if (((widget_3053453399.children).length == 0)) {
    headerPanel_3053453562 = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 0.0)}, NTI2348810251), bottom: totalLineHeight_3053453402, lastHierarchyChange: frameIndex_3053453400, fillBackground: true, backgroundColor: color_2382364744(0.0, 0.0, 0.0, 1.0), m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3053453399.children.push(headerPanel_3053453562);;
    headerPart1Text_3053453563 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(0.0, 1.0)}, NTI2348810251), lastHierarchyChange: frameIndex_3053453400, foregroundColor: nimCopy(null, textColor_3053453561, NTI2382364675), m_type: NTI2348810260, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3053453562.children.push(headerPart1Text_3053453563);;
    headerPart2Text_3053453564 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2130707424(1.0, 0.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), pivot: vec2_2130707424(1.0, 0.0), lastHierarchyChange: frameIndex_3053453400, foregroundColor: nimCopy(null, textColor_3053453561, NTI2382364675), m_type: NTI2348810260, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3053453562.children.push(headerPart2Text_3053453564);;
    contentPanel_3053453565 = {anchor: nimCopy(null, {Field0: vec2_2130707424(0.0, 0.0), Field1: vec2_2130707424(1.0, 1.0)}, NTI2348810251), top: totalLineHeight_3053453402, lastHierarchyChange: frameIndex_3053453400, fillBackground: true, backgroundColor: color_2382364744(0.0, 0.0, 0.0, 1.0), m_type: NTI2348810252, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3053453565.maskContent = true;
    widget_3053453399.children.push(contentPanel_3053453565);;
    layoutWidget_2348810564(headerPanel_3053453562, widget_3053453399.lastBounds, frameIndex_3053453400, app_3053453398.platform.layoutOptions);
    layoutWidget_2348810564(contentPanel_3053453565, widget_3053453399.lastBounds, frameIndex_3053453400, app_3053453398.platform.layoutOptions);
    }
    else {
      headerPanel_3053453562 = widget_3053453399.children[chckIndx(0, 0, (widget_3053453399.children).length - 1)];
      headerPart1Text_3053453563 = headerPanel_3053453562.children[chckIndx(0, 0, (headerPanel_3053453562.children).length - 1)];
      headerPart2Text_3053453564 = headerPanel_3053453562.children[chckIndx(1, 0, (headerPanel_3053453562.children).length - 1)];
      contentPanel_3053453565 = widget_3053453399.children[chckIndx(1, 0, (widget_3053453399.children).length - 1)];
    }
    
    if (self_3053453397.renderHeader) {
    headerPanel_3053453562.bottom = totalLineHeight_3053453402;
    contentPanel_3053453565.top = totalLineHeight_3053453402;
    if (active_2181038104(self_3053453397)) {
    Temporary1 = color_3053453404(app_3053453398.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2382364759(45, 45, 60));
    }
    else {
    Temporary1 = color_3053453404(app_3053453398.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2382364759(45, 45, 45));
    }
    
    var color_3053453595 = nimCopy(null, Temporary1, NTI2382364675);
    updateBackgroundColor_2348810318(headerPanel_3053453562, color_3053453595, frameIndex_3053453400);
    if (((self_3053453397.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3053453397.currentMode;
    }
    
    var mode_3053453596 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3053453601 = [mnewString(0)];
    fmtRes_3053453601[0].push.apply(fmtRes_3053453601[0], [32]);;
    formatValue_738197675(fmtRes_3053453601, 0, mode_3053453596, []);
    fmtRes_3053453601[0].push.apply(fmtRes_3053453601[0], [32,45,32]);;
    formatValue_738197675(fmtRes_3053453601, 0, self_3053453397.document.filename, []);
    fmtRes_3053453601[0].push.apply(fmtRes_3053453601[0], [32]);;
    headerPart1Text_3053453563.text = nimCopy(null, fmtRes_3053453601[0], NTI33554449);
    var fmtRes_3053453606 = [mnewString(0)];
    fmtRes_3053453606[0].push.apply(fmtRes_3053453606[0], [32]);;
    formatValue_2634023035(fmtRes_3053453606, 0, selection_2634023404(self_3053453397), []);
    fmtRes_3053453606[0].push.apply(fmtRes_3053453606[0], [32,45,32]);;
    formatValue_2348810760(fmtRes_3053453606, 0, self_3053453397.id, []);
    fmtRes_3053453606[0].push.apply(fmtRes_3053453606[0], [32]);;
    headerPart2Text_3053453564.text = nimCopy(null, fmtRes_3053453606[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2348810326(headerPanel_3053453562, frameIndex_3053453400);
    }
    else {
      headerPanel_3053453562.bottom = 0.0;
      contentPanel_3053453565.top = 0.0;
    }
    
    widget_3053453399.lastHierarchyChange = nimMax(widget_3053453399.lastHierarchyChange, headerPanel_3053453562.lastHierarchyChange);
    if (active_2181038104(self_3053453397)) {
    Temporary3 = color_3053453404(app_3053453398.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2382364759(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2399141891(color_3053453404(app_3053453398.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2382364759(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2348810318(contentPanel_3053453565, Temporary3, frameIndex_3053453400);
      if (changed_2348810565(contentPanel_3053453565, frameIndex_3053453400)) Temporary4 = true; else {        Temporary4 = self_3053453397.dirty;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    self_3053453397.dirty = false;
    var timer_3053453627 = startTimer_2248146975();
    if (contentPanel_3053453565.children.length < 0) { for (var i = contentPanel_3053453565.children.length ; i < 0 ; ++i) contentPanel_3053453565.children.push(null); }
               else { contentPanel_3053453565.children.length = 0; };
    Label5: {
      self_3053453397.previousBaseIndex = clamp_3053453640(self_3053453397.previousBaseIndex, HEX2EHEX2E_822083634(0, (self_3053453397.document.lines).length));
      Label6: {
          Label7: while (true) {
          if (!((self_3053453397.scrollOffset < 0.0) && (addInt(self_3053453397.previousBaseIndex, 1) < (self_3053453397.document.lines).length))) break Label7;
            if ((contentPanel_3053453565.lastBounds.h <= (self_3053453397.scrollOffset + totalLineHeight_3053453402))) {
            break Label6;
            }
            
            self_3053453397.previousBaseIndex = addInt(self_3053453397.previousBaseIndex, 1);
            HEX2BHEX3D_872417520(self_3053453397, "scrollOffset", totalLineHeight_3053453402);
          }
      };
      Label8: {
          Label9: while (true) {
          if (!((contentPanel_3053453565.lastBounds.h < self_3053453397.scrollOffset) && (0 < self_3053453397.previousBaseIndex))) break Label9;
            if (((self_3053453397.scrollOffset - lineHeight_3053453401) <= 0.0)) {
            break Label8;
            }
            
            self_3053453397.previousBaseIndex = subInt(self_3053453397.previousBaseIndex, 1);
            HEX2DHEX3D_2634036304(self_3053453397, "scrollOffset", totalLineHeight_3053453402);
          }
      };
    };
    var selectionsPerLine_3053453685 = [initTable_3053453674(32)];
    Label10: {
      var s_3053453689 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536873820 = [];
      colontmp__536873820 = selections_2634023401(self_3053453397);
      var i_536873821 = 0;
      var L_536873822 = (colontmp__536873820).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536873821 < L_536873822)) break Label12;
            s_3053453689 = colontmp__536873820[chckIndx(i_536873821, 0, (colontmp__536873820).length - 1)];
            var sn_3053453690 = normalized_2197815662(s_3053453689);
            Label13: {
              var line_3053453695 = 0;
              var res_536873818 = sn_3053453690.Field0.Field0;
              Label14: {
                  Label15: while (true) {
                  if (!(res_536873818 <= sn_3053453690.Field1.Field0)) break Label15;
                    line_3053453695 = res_536873818;
                    var Temporary17 = nimCopy(null, s_3053453689, NTI2197815307);
                    (Temporary16 = mgetOrPut_3053453726(selectionsPerLine_3053453685[0], line_3053453695, []), Temporary16)[0][Temporary16[1]].push(Temporary17);;
                    res_536873818 = addInt(res_536873818, 1);
                  }
              };
            };
            i_536873821 = addInt(i_536873821, 1);
            if (!(((colontmp__536873820).length == L_536873822))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3053453940 = nimCopy(null, self_3053453397.searchResults, NTI2634023149);
    var lineNumbers_3053454018 = get_3053454004(self_3053453397.lineNumbers, getOption_3053453953(app_3053453398, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3053454018) {
    case 1:
      Temporary18 = addInt(self_3053453397.previousBaseIndex, ((((contentPanel_3053453565.lastBounds.h - self_3053453397.scrollOffset) / totalLineHeight_3053453402)) | 0));
      break;
    case 2:
      Temporary18 = 99;
      break;
    default: 
      Temporary18 = 0;
      break;
    }
    var maxLineNumber_3053454019 = Temporary18;
    var maxLineNumberLen_3053454020 = addInt((HEX24_369098760(maxLineNumber_3053454019)).length, 1);
    var cursorLine_3053454021 = selection_2634023404(self_3053453397).Field1.Field0;
    Label19: {
      var i_3053454772 = 0;
      var colontmp__536873834 = 0;
      colontmp__536873834 = (self_3053453397.document.lines).length - 1;
      var res_536873835 = self_3053453397.previousBaseIndex;
      Label20: {
          Label21: while (true) {
          if (!(res_536873835 <= colontmp__536873834)) break Label21;
            i_3053454772 = res_536873835;
            if (!(renderLine_3053454022(i_3053454772, true))) {
            break Label19;
            }
            
            res_536873835 = addInt(res_536873835, 1);
          }
      };
    };
    Label22: {
      var k_3053454777 = 0;
      var res_536873838 = 1;
      Label23: {
          Label24: while (true) {
          if (!(res_536873838 <= self_3053453397.previousBaseIndex)) break Label24;
            k_3053454777 = res_536873838;
            var i_3053454778 = subInt(self_3053453397.previousBaseIndex, k_3053454777);
            if (!(renderLine_3053454022(i_3053454778, false))) {
            break Label22;
            }
            
            res_536873838 = addInt(res_536873838, 1);
          }
      };
    };
    contentPanel_3053453565.lastHierarchyChange = frameIndex_3053453400;
    widget_3053453399.lastHierarchyChange = nimMax(widget_3053453399.lastHierarchyChange, contentPanel_3053453565.lastHierarchyChange);
    self_3053453397.lastContentBounds = nimCopy(self_3053453397.lastContentBounds, widget_3053453399.lastBounds, NTI2113929221);
  };

  
}

function updateWidget_3036676100(self_3036676101, app_3036676102, widget_3036676103, frameIndex_3036676104) {
  
}

function updateWidget_3036676105(self_3036676101, app_3036676102, widget_3036676103, frameIndex_3036676104) {
    chckNilDisp(self_3036676101);
    if (isObj(self_3036676101.m_type, NTI2634023118)) {
    updateWidget_3053453396(self_3036676101, app_3036676102, widget_3036676103, frameIndex_3036676104);
    }
    else {
    if (isObj(self_3036676101.m_type, NTI2181038084)) {
    updateWidget_3036676100(self_3036676101, app_3036676102, widget_3036676103, frameIndex_3036676104);
    }
    }

  
}
